{
  "url": "https://api.github.com/repos/MetaMask/core/issues/1333",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/1333/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/1333/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/1333/events",
  "html_url": "https://github.com/MetaMask/core/issues/1333",
  "id": 1698267652,
  "node_id": "I_kwDOCBB0Cc5lOYIE",
  "number": 1333,
  "title": "Update lint hook to only lint files that have been changed for the current branch",
  "user": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-05T22:23:12Z",
  "updated_at": "2023-05-08T15:28:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The `lint` command takes around 10 seconds to run. This is fine when it's run on CI, but it feels a bit uncomfortable when run as a part of a push.\r\n\r\nIdeally, what we want is something like this:\r\n\r\n* Full run (check or fix):\r\n  * Run ESLint on all `*.js` and `*.ts` files, omitting those in `.gitignore`\r\n  * Run Prettier on all `*.json`, `*.md`, and `*.yml` files, omitting those in `.gitignore`, as well as `CHANGELOG.md`s in any packages, `CHANGELOG.old.md`, and `.yarnrc.yml`\r\n* Partial run (changed files only):\r\n  * Run ESLint on all _changed_ `*.js` and `*.ts` files, omitting those in `.gitignore`\r\n  * Run Prettier on all _changed_ `*.json`, `*.md`, and `*.yml` files, omitting those in `.gitignore`, as well as `CHANGELOG.md`s in any packages, `CHANGELOG.old.md`, and `.yarnrc.yml`\r\n\r\nMore details below:\r\n\r\n---\r\n\r\nThe Snaps monorepo attempts to reduce the runtime by using [`lint-staged`](https://github.com/okonet/lint-staged) to [only linting files that have been staged](https://github.com/MetaMask/snaps-monorepo/blob/b9c6aec01954e8dfd5bd094e9776b87ca59fabc9/package.json#L37). There are two wrinkles with the approach that the Snaps monorepo takes that would prevent us from copying it to this repo, however.\r\n\r\nFirst, `lint-staged` is designed to be paired with a `pre-commit` hook, but we use a `pre-push` hook instead, so we'd need a different solution. So minimally, we could use something like [`lint-changed`](https://github.com/artsy/lint-changed) instead.\r\n\r\nHowever, `lint-changed` (and `lint-staged`, for that matter) assume that you don't want to customize the set of files that are processed when running a full lint. For ESLint, that's not a problem, as we can get away with asking it to lint the whole project and then use `.gitignore` to filter out undesired files. Prettier, however, doesn't use `.gitignore` by default, so [we tell it to use `.gitignore`, but then we also filter out more files on top of that](https://github.com/MetaMask/core/blob/65af9a440ff957dafdc681cc6ef2929831f62365/package.json#L25).\r\n\r\nSo if we were to start using `lint-changed`, we'd have to have a separate way of running Prettier. We'd need a way to run file paths that `lint-changed` has reported as changed, but continue to filter out undesired files that aren't covered by `.gitignore`. \r\n\r\nThe Prettier team has made this somewhat easier by allowing multiple ignore file paths to be passed: https://github.com/prettier/prettier/pull/14332. So we could pull out the list of files that we're excluding to a `.prettierignore` and then instruct the `prettier` command to use that in addition to `.gitignore`.\r\n\r\nHowever, one problem would remain: we'd have to accommodate two ways of calling — and configuring — our lint commands.\r\n\r\nSay we were able to reduce `package.json` to something like this:\r\n\r\n``` json\r\n{\r\n  \"scripts\": {\r\n    \"lint\": \"yarn lint:js && yarn lint:misc --check && yarn constraints\",\r\n    \"lint:fix\": \"yarn lint:js --fix && yarn lint:misc --write && yarn constraints --fix\",\r\n    \"lint:js\": \"eslint . --cache --ext js,ts\",\r\n    \"lint:misc\": \"prettier '**/*.json' '**/*.md' '**/*.yml' --ignore-path .gitignore --ignore-path .prettierignore\"\r\n  }\r\n}\r\n```\r\n\r\nNow say we were to add `lint-changed`. That might look something like this:\r\n\r\n``` json\r\n{\r\n  \"scripts\": {\r\n    \"lint\": \"yarn lint:js --check && yarn lint:misc --check && yarn constraints\",\r\n    \"lint:fix\": \"yarn lint:js --fix && yarn lint:misc --write && yarn constraints --fix\",\r\n    \"lint:js\": \"eslint --cache --ext js,ts .\",\r\n    \"lint:misc\": \"prettier --ignore-path .gitignore --ignore-path .prettierignore '**/*.json' '**/*.md' '**/*.yml'\"\r\n  },\r\n  \"lint-staged\": {\r\n    \"*.{js,ts}\": \"eslint --cache --ext js,ts\",\r\n    \"*.{json,md,yml}\": \"prettier --ignore-path .gitignore --ignore-path .prettierignore\"\r\n  }\r\n}\r\n```\r\n\r\n(We don't specify any file paths for `lint-staged` because it fills them in for us.)\r\n\r\nNote how we have to specify two ways of running the `eslint` and `prettier` commands, and we have to specify acceptable file extensions twice. It'd be nice if we could just say:\r\n\r\n``` json\r\n{\r\n  \"scripts\": {\r\n    \"lint\": \"scripts/lint.sh --check\",\r\n    \"lint:fix\": \"scripts/lint.sh --fix\"\r\n  },\r\n  \"lint-staged\": {\r\n    \"*\": \"scripts/lint.sh --check\"\r\n  }\r\n}\r\n```\r\n\r\nTo get this to work, such a lint script would have to:\r\n\r\n* figure out which file extensions go with which command, and specify them in the way that the tool understands\r\n* accept a set of file patterns, or else default to `.` if no file patterns were specified, and pass the result off to the tool\r\n\r\nSo this ticket depends on the release of Prettier 3.0, but it also depends on writing such a lint script.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/1333/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/1333/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1538574532",
    "html_url": "https://github.com/MetaMask/core/issues/1333#issuecomment-1538574532",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1333",
    "id": 1538574532,
    "node_id": "IC_kwDOCBB0Cc5btMjE",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-08T15:28:21Z",
    "updated_at": "2023-05-08T15:28:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've started a branch to work on this: https://github.com/MetaMask/core/tree/use-lint-changed",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1538574532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
