{
  "url": "https://api.github.com/repos/MetaMask/core/issues/1811",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/1811/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/1811/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/1811/events",
  "html_url": "https://github.com/MetaMask/core/issues/1811",
  "id": 1938781624,
  "node_id": "I_kwDOCBB0Cc5zj3W4",
  "number": 1811,
  "title": "Design consolidated API for AccountTrackerController",
  "user": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5330766523,
      "node_id": "LA_kwDOCBB0Cc8AAAABPb0Kuw",
      "url": "https://api.github.com/repos/MetaMask/core/labels/team-shared-libraries",
      "name": "team-shared-libraries",
      "color": "c5def5",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "kanthesha",
    "id": 45172858,
    "node_id": "MDQ6VXNlcjQ1MTcyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kanthesha",
    "html_url": "https://github.com/kanthesha",
    "followers_url": "https://api.github.com/users/kanthesha/followers",
    "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
    "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
    "organizations_url": "https://api.github.com/users/kanthesha/orgs",
    "repos_url": "https://api.github.com/users/kanthesha/repos",
    "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kanthesha/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "kanthesha",
      "id": 45172858,
      "node_id": "MDQ6VXNlcjQ1MTcyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanthesha",
      "html_url": "https://github.com/kanthesha",
      "followers_url": "https://api.github.com/users/kanthesha/followers",
      "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
      "organizations_url": "https://api.github.com/users/kanthesha/orgs",
      "repos_url": "https://api.github.com/users/kanthesha/repos",
      "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanthesha/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2023-10-11T21:36:55Z",
  "updated_at": "2024-01-18T18:41:16Z",
  "closed_at": "2024-01-18T18:41:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Look into how AccountTrackerController (from this repo) is being used in the mobile app (including the patches for this controller in mobile) and how AccountTrackerController is being used in the extension, and determine an API for a combined controller that satisfies the requirements that extension and mobile have.\n\nThe new design should go in a new comment in this ticket.",
  "closed_by": {
    "login": "kanthesha",
    "id": 45172858,
    "node_id": "MDQ6VXNlcjQ1MTcyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kanthesha",
    "html_url": "https://github.com/kanthesha",
    "followers_url": "https://api.github.com/users/kanthesha/followers",
    "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
    "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
    "organizations_url": "https://api.github.com/users/kanthesha/orgs",
    "repos_url": "https://api.github.com/users/kanthesha/repos",
    "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kanthesha/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/1811/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/1811/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1845752842",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1845752842",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1845752842,
    "node_id": "IC_kwDOCBB0Cc5uA_QK",
    "user": {
      "login": "desi",
      "id": 15041,
      "node_id": "MDQ6VXNlcjE1MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/desi",
      "html_url": "https://github.com/desi",
      "followers_url": "https://api.github.com/users/desi/followers",
      "following_url": "https://api.github.com/users/desi/following{/other_user}",
      "gists_url": "https://api.github.com/users/desi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/desi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/desi/subscriptions",
      "organizations_url": "https://api.github.com/users/desi/orgs",
      "repos_url": "https://api.github.com/users/desi/repos",
      "events_url": "https://api.github.com/users/desi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/desi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-07T17:14:33Z",
    "updated_at": "2023-12-07T17:14:33Z",
    "author_association": "NONE",
    "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Shared-Libraries-621e46b4d7103800171d1b02/issues/MetaMask/core/1811?planning-poker) with Zenhub @cryptodev-2s @Gudahtt @MajorLift @mcmire @mikesposito",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1845752842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1847600850",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1847600850",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1847600850,
    "node_id": "IC_kwDOCBB0Cc5uICbS",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-08T18:00:19Z",
    "updated_at": "2023-12-08T18:00:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Blocked by https://github.com/MetaMask/core/pull/3586",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1847600850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1850783650",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1850783650",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1850783650,
    "node_id": "IC_kwDOCBB0Cc5uULei",
    "user": {
      "login": "jiexi",
      "id": 918701,
      "node_id": "MDQ6VXNlcjkxODcwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/918701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiexi",
      "html_url": "https://github.com/jiexi",
      "followers_url": "https://api.github.com/users/jiexi/followers",
      "following_url": "https://api.github.com/users/jiexi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiexi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiexi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiexi/subscriptions",
      "organizations_url": "https://api.github.com/users/jiexi/orgs",
      "repos_url": "https://api.github.com/users/jiexi/repos",
      "events_url": "https://api.github.com/users/jiexi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiexi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T19:53:53Z",
    "updated_at": "2023-12-11T19:55:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "btw in extension, I have the following inflight for AccountTracker\r\nhttps://github.com/MetaMask/metamask-extension/pull/22217\r\nhttps://github.com/MetaMask/metamask-extension/pull/22233",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1850783650/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1856147264",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1856147264",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1856147264,
    "node_id": "IC_kwDOCBB0Cc5uoo9A",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-14T16:19:44Z",
    "updated_at": "2023-12-14T16:21:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "- It appears that this will be closed by https://github.com/MetaMask/metamask-extension/pull/22276",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1856147264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1856157000",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1856157000",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1856157000,
    "node_id": "IC_kwDOCBB0Cc5uorVI",
    "user": {
      "login": "Gudahtt",
      "id": 2459287,
      "node_id": "MDQ6VXNlcjI0NTkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gudahtt",
      "html_url": "https://github.com/Gudahtt",
      "followers_url": "https://api.github.com/users/Gudahtt/followers",
      "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
      "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
      "repos_url": "https://api.github.com/users/Gudahtt/repos",
      "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-14T16:25:25Z",
    "updated_at": "2023-12-14T16:25:25Z",
    "author_association": "MEMBER",
    "body": "That PR removes the cached balances controller, but we still need to plan for merging the two account tracker controllers we have",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1856157000/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1879371406",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1879371406",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1879371406,
    "node_id": "IC_kwDOCBB0Cc5wBO6O",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T23:17:52Z",
    "updated_at": "2024-01-05T23:18:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kanthesha Following our call earlier today, here's a bit more guidance on this ticket.\r\n\r\nCurrently, we have two versions of AccountTrackerController:\r\n\r\n- The extension uses [`account-tracker.js`](https://github.com/MetaMask/metamask-extension/blob/fc8d2235592e46b6e5349089b1972c60376f0456/app/scripts/lib/account-tracker.js), a controller which uses a pattern that predates BaseControllerV1 in the core repo. You can see this because this controller does not extend from any base controller and uses an ObservableStore instance to store state.\r\n- The mobile app uses a patched version of AccountTrackerController from the core repo. Because AccountTrackerController is part of the `@metamask/assets-controllers` package, the patch is within the [patch for `assets-controllers`](https://github.com/MetaMask/metamask-mobile/blob/2b409a583717907590fe425fbf1da653be419575/patches/%40metamask%2Bassets-controllers%2B7.0.0.patch). By default, the version of `@metamask/assets-controllers` you have in `node_modules` will be the published version, but you can apply the patch by running `yarn patch-package` (this assumes that you've run `yarn install` already). Then, when you open `node_modules/@metamask/assets-controllers/dist/AccountTrackerController.js`, you should be able to use this file as a source of truth for what the mobile app is using.\r\n\r\nWhere does this ticket fit into the bigger picture?\r\n\r\n- Because these two versions of AccountTrackerController are different, and because we want the extension and mobile app to be able to use _one_ version, we need to create a controller that incorporates all of the behavior that both the extension and mobile app rely on.\r\n- It's possible — we've seen this in other places — that each version of this controller exposes properties and/or methods that it doesn't need to expose, or contains dead code. We want each controller in the core repo to be as tight as possible, so if there's anything that doesn't need to be there, we can take the opportunity as we're consolidating pieces of behavior into one place to remove things that don't need to be there.\r\n\r\nHow to proceed with this ticket?\r\n\r\n- It might be helpful to first make notes of the behavior that each version of the controller has. You can look at the tests and cross-reference it with the implementation in each version to compile this information.\r\n- Once you've captured all of the behavior in each version of the controller, you can use it to write out an _idealized_ version of the controller.\r\n\r\nWhat's the deliverable?\r\n\r\n- In order to have a cleaned up controller which can be shared between the extension and the mobile app, we need a plan that details what changes we need to make to the existing controller. We can provide that plan in one or many comments in this ticket.\r\n- In terms of how to represent the final result, we've done this a few different ways. Michele did an analysis for KeyringController here that I found pretty comprehensive and easy to read: https://github.com/MetaMask/core/issues/1103. He chose to list each method in the eventual API. For each method, he added sections for proposed changes, and for each proposed change section he gave some context and then the actual change. So this could be a good pattern to follow.\r\n\r\nHopefully that helps!",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1879371406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1885562969",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1885562969",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1885562969,
    "node_id": "IC_kwDOCBB0Cc5wY2hZ",
    "user": {
      "login": "kanthesha",
      "id": 45172858,
      "node_id": "MDQ6VXNlcjQ1MTcyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanthesha",
      "html_url": "https://github.com/kanthesha",
      "followers_url": "https://api.github.com/users/kanthesha/followers",
      "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
      "organizations_url": "https://api.github.com/users/kanthesha/orgs",
      "repos_url": "https://api.github.com/users/kanthesha/repos",
      "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanthesha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T19:26:23Z",
    "updated_at": "2024-01-10T19:34:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Core's AccountTrackerController Analysis\r\nAccount tracker controller maintains the correct state of current selected chain’s addresses and it’s balance. When there's a account selection changed, network selection changed, this controller should make sure the correct set of addresses exist with correct balance.\r\n\r\n####  syncAccounts\r\n- When chain id changed, check if there’re any accounts exist for the selected chain, if there’re none, then assign zero balance to all the accounts of previously selected chain\r\n- Extract all the addresses from new chain which doesn’t exist in old chain as newAddresses\r\n- Extract all the addresses from existing chain which doesn’t exist in new chain as oldAddresses\r\n- Set zero balances for all the new addresses (both in accounts and accountsByChainId)\r\n- Delete all the old addresses from both accounts and accountsByChainId\r\n- Update the new state (accounts and accountsByChainId)\r\n\r\n#### constructor\r\n- Initialises account tracker with preference state, identities, selected address, whether multi account balance enabled, current chain id and network client id\r\n\r\n#### provider class variable\r\n- It has a setter and getter for now, whereas getter has been defined to throw an error in case called.\r\n- Suggestion: \r\n    - This can be refactored to have only one method to set the provider\r\n\r\n#### getCorrectNetworkClient\r\n- Returns chain id and ethQuery object\r\n- It has a optional networkClientId parameter\r\n    - If networkClientId passed, it’ll return the chainId and ethQuery object related to the parameter passed\r\n    - Otherwise returns the current chainId and ethQuery object\r\n\r\n#### poll\r\n- The refresh method (refresh’s the balances of the accounts) will be called in a set time interval\r\n- Interval will be based on config.interval\r\n\r\n#### _executePoll\r\n- In this, refresh method will be called with networkClientId, so that the balances of the accounts will be updated based on the network client id\r\n\r\n#### refresh\r\n- Refreshes the balances of the accounts depending on the multi-account setting\r\n- Fetches the chainId & ethQuery object by calling getCorrectNetworkClient\r\n- Accounts will be synced by calling syncAccounts\r\n- Balance update based on the multiAccountBalanceEnabled\r\n    - If enabled, the balances of all the accounts from this.state will be updated by calling getBalanceFromChain\r\n    - If not, the balance of selected address will be updated by calling getBalanceFromChain\r\n- Finally controller state will be updated\r\n\r\n#### getBalanceFromChain\r\n- Fetches the balance of the addresses from blockchain using ethQuery requests\r\n\r\n#### syncBalancesWithAddresses\r\n- Fetch balances for the addresses array parameter from blockchain using ethQuery requests\r\n- Suggestion: \r\n    - Some code duplication in this method, where you can use getBalanceFromChain",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1885562969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1885650600",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1885650600",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1885650600,
    "node_id": "IC_kwDOCBB0Cc5wZL6o",
    "user": {
      "login": "kanthesha",
      "id": 45172858,
      "node_id": "MDQ6VXNlcjQ1MTcyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanthesha",
      "html_url": "https://github.com/kanthesha",
      "followers_url": "https://api.github.com/users/kanthesha/followers",
      "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
      "organizations_url": "https://api.github.com/users/kanthesha/orgs",
      "repos_url": "https://api.github.com/users/kanthesha/repos",
      "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanthesha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T20:15:23Z",
    "updated_at": "2024-01-10T20:15:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Extension's Account Tracker (account-tracker.js) Analysis\r\n\r\n#### Start\r\n- Adds listener for block tracker and updates all the accounts by call updateAccounts\r\n\r\n#### Stop\r\n- Removes block tracker listener\r\n\r\n#### getCorrectNetworkClient\r\n- Returns network client config (chainId, provider, blockTracker and networkIdentifier) for the given network client id\r\n\r\nMerge suggestion:\r\n1. A merged function can return an entire network client configuration object. And I don’t see a reason to call it a getCorrectNetworkClient, so we can rename it to getNetworkClientConfig.\r\n2. And in the Core version, this function additionally returns the ethQuery object, I think, this should stand on its own. That means, creating a new function which returns ethQuery object. And ethQuery can be a class level variable, which gets updated (object re-initialised) each time chain id changes.\r\n\r\n#### startPollingByNetworkClientId (not in use / for multi-chain use case)\r\n- Starts polling for a network client id\r\n\r\n#### stopAllPolling (not in use / for multi-chain use case)\r\n- Stops polling for all the network client ids\r\n\r\n#### stopPollingByPollingToken (not in use / for multi-chain use case)\r\n- Stops polling for a particular polling token\r\n\r\n#### subscribeWithNetworkClientId (not in use / for multi-chain use case)\r\n- Subscribes from the block tracker for the given networkClientId\r\n\r\n#### unSubscribeWithNetworkClientId (not in use / for multi-chain use case)\r\n- unSubscribes from the block tracker for the given networkClientId\r\n\r\n#### getAccountsForChainId\r\n- This function will return accounts retrieved from state.accountsByChainId if already exist, if not, it’ll compose the list of accounts assigned with zero balance\r\n\r\n#### SyncWithAddresses \r\n- addresses are passed as parameter and then function resolves it to accounts relevant for newly selected chainId\r\n- Basically they compare the addresses of newly selected chain with the addresses of existing chain. And in case existing list doesn’t have an address from newly selected, then it’ll add those addresses. In case address in the existing list doesn’t exist in newly selected, then those addresses will be removed.\r\n\r\n#### addAccounts\r\n- Add new addresses to track the balance\r\n\r\n#### removeAccounts\r\n- Removes accounts being tracked\r\n\r\n#### clearAccounts(extension)\r\n- Removing all addresses or resetting to its default state\r\n\r\n#### updateForBlock\r\n- Update account balances for the given block\r\n\r\n#### updateForBlockByNetworkClientId\r\n- Updates account balances for the given block based on network client id\r\n\r\n#### updateAccountsAllActiveNetworks\r\n- Updates accounts for all the polled networks\r\n\r\n#### updateAccounts\r\n- If balance checker is deployed, then account balances will be updated by calling the balance checker smart contract\r\n- If not deployed, account balances will be updated by calling updateAccount function which uses ethQuery to retrieve the balance\r\n\r\n#### updateAccount\r\n- Retrieves the account balance using ethQuery and updates the accounts and accountsByChainId in the state\r\n\r\n#### updateAccountsViaBalanceChecker \r\n- Updates balance of addresses using balance checker smart contract",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1885650600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1886907139",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1886907139",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1886907139,
    "node_id": "IC_kwDOCBB0Cc5wd-sD",
    "user": {
      "login": "kanthesha",
      "id": 45172858,
      "node_id": "MDQ6VXNlcjQ1MTcyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanthesha",
      "html_url": "https://github.com/kanthesha",
      "followers_url": "https://api.github.com/users/kanthesha/followers",
      "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
      "organizations_url": "https://api.github.com/users/kanthesha/orgs",
      "repos_url": "https://api.github.com/users/kanthesha/repos",
      "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanthesha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-11T11:10:46Z",
    "updated_at": "2024-01-12T17:49:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "## Account Tracker Merge\r\n\r\nThe AccountTrackerController in Core which also used in Mobile and account-tracker.js in Extension has the similar functionality which is tracking the balances of the addresses. To ease the maintainability and to reduce the duplication, merging them into one will be beneficial.\r\n\r\n### Proposed merged controller\r\n\r\n#### Constructor\r\n<details>\r\n\r\n- In the Core version of constructor, the along with the initialisation, balance update also takes place\r\n- But in the extension balances update has been moved to start function\r\n- I think, it is good to have default initialisation in the constructor and a start which will begin the polling\r\n- Retain the AccountTrackerController constructor and by vomiting poll function (this will be moved to start)\r\n- Merge subscriptions and block tracker related functionality\r\n</details>\r\n\r\n#### Private Functions\r\n<details>\r\n\r\nonboardingSubscribe\r\n- Will be used in constructor\r\n\r\ncontrollerMessengerSubscribe\r\n- Will be used in constructor\r\n\r\ngetInitState\r\n- Empty addresses and balances\r\n- This will be used to set the default state in constructor\r\n\r\ngetNetworkClientConfig\r\n- A merged function can return an entire network client configuration object. This function is a refactor of getCorrectNetworkClient.\r\n\r\ngetEthQuery\r\n- And in the Core version, getCorrectNetworkClient function additionally returns the ethQuery object, I think, this should stand on its own. That means, creating a new function which returns ethQuery object. And ethQuery can be a class level variable, which gets updated (object re-initialised) each time chain id changes.\r\n\r\nstartAutoPolling\r\n- This is a rename of poll function in Core’s AccountTrackerController and entire code has to be retained\r\n- The refresh method (refresh’s the balances of the accounts) will be called in a set time interval\r\n- Interval will be based on config.interval\r\n- This can use the refreshAccounts to update the accounts and balances\r\n\r\ngetAccountsByChainId\r\n- This will return accounts retrieved from state.accountsByChainId if already exist, if not, it’ll compose the list of accounts assigned with zero balance\r\n- Refer to the getAccountsForChainId in extension\r\n\r\nSyncAccountsByChainId\r\n- Retrieve the addresses of the chain by ChainId (function parameter) and then call syncAddresses\r\n\r\naddAccounts\r\n- Add new addresses to track the balance\r\n- Refer to addAccounts in extension\r\n\r\nremoveAccounts\r\n- Removes accounts being tracked\r\n- Refer to removeAccounts in extension\r\n\r\nupdateForBlock\r\n- Refer to updateForBlock in extension\r\n\r\nupdateForBlockByNetworkClientId\r\n- Refer to updateForBlock in extension\r\n\r\nrefreshAccount\r\n- Refreshes the balance of an account (refer updateAccount in extension)\r\n\r\nrefreshAccountsByNetworkClient\r\n- Refresh balances of the accounts based on the network client id function parameter\r\n- Call refreshAccounts function\r\n\r\nrefreshAccountsViaBalanceChecker\r\n- Refreshes the balance of addresses from blockchain deployed balance checker smart contract (refer to updateAccountsViaBalanceChecker in extension)\r\n\r\ngetBalanceFromChain\r\n- Fetches balance from blockchain using ethQuery for the given address\r\n</details>\r\n\r\n#### Public Functions\r\n<details>\r\n\r\nstartPolling \r\n- This is a rename of start function in extension’s account-tracker\r\n\r\nstopPolling\r\n- This is a rename of start function in extension’s account-tracker\r\n\r\nsyncAddresses\r\n- Synchronise the state.accounts with the addresses passed in function parameter\r\n- Basically comparing the addresses of function parameter with the addresses of state.accounts. And in case state.accounts doesn’t have an address from newly selected, then it’ll add those addresses. In case address in the state.accounts doesn’t exist in newly selected, then those addresses will be removed.\r\n- Refer to syncWithAddresses in extension\r\n\r\nrefreshAccounts\r\n- Merge updateAccounts in extension with refresh in core\r\n- Extension has a additional functionality of updating current address balances from balanceChecker deployed contract\r\n- Make use of refreshAccount, which can refresh the single address (refer updateAccount in extension)\r\n\r\n_executePoll\r\n- Refer to the same function in Core\r\n\r\nclearAccounts\r\n- Removes all the addresses and balances\r\n- updateState can be used along with getInitState\r\n\r\nupdateAccountsAllActiveNetworks\r\n- Updates accounts for the globally selected network\r\n- Refer to the same function in extension\r\n</details>\r\n\r\n#### Unused Functionality / For upcoming multi-chain changes\r\n<details>\r\n\r\n##### Public Functions\r\nstartPollingByNetworkClientId (extension)\r\n\r\nstopAllPolling (extension)\r\n\r\nstopPollingByPollingToken\r\n\r\n##### Private Functions\r\nsubscribeWithNetworkClientId\r\n\r\nunsubscribeWithNetworkClientId\r\n</details>\r\n\r\nNit:\r\n<details>\r\n\r\naccounts and accountsByChainId\r\n- I think it’s a duplication to store the addresses and its balance in accounts and accountsByChainId variables of the state. It can be just a accountsByChainId and when required, we can retrieve the current one by chainId\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1886907139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1889942442",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1889942442",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1889942442,
    "node_id": "IC_kwDOCBB0Cc5wpjuq",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-12T20:59:48Z",
    "updated_at": "2024-01-12T21:00:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice analysis! I did a first pass and here are some thoughts that came to mind:\r\n\r\n- This controller uses two styles of polling. We have the \"legacy\" polling interface: `start`, `stop`, and `poll`. Then we have the new, multichain-compatible polling interface which is introduced via StaticPollingIntervalController (`startPollingByNetworkClientId`, `stopPollingByPollingToken`, `stopAllPolling `, `_executePoll`, `subscribeWithNetworkClientId`, `unsubscribeWithNetworkClientId`).\r\n  - I think we should keep the legacy polling interface for now, but maybe we can use the new one inside of the legacy one.\r\n  - That is, `start` will actually call `startPollingByNetworkClientId` with a `networkClientId`. Where does it get this `networkClientId`? From the network controller state. In other words, we can call `NetworkController:getState` to get the current state of the NetworkController and fetch its `selectedNetworkClientId` from its state. (We could extract that action to a private method if we like)\r\n  - `startPollingByNetworkClientId` returns a polling token, so we'll want to store that somewhere, likely in a private property.\r\n  - `stop` can then call `stopPollingByPollingToken` and pass the previously stored polling token.\r\n  - I don't know if it's worth it to rename `start` and `stop`, given it's temporary.\r\n  - We should be able to get rid of `poll` and not have to rename this. This was never intended to be called on its own — if the consumer wants to manually update the controller, they can call `refresh`.\r\n- It looks like the extension defines a `resetState` method (it's set in the constructor), and the extension uses this method. So I think we'd want to need to implement this too.\r\n- > I think it’s a duplication to store the addresses and its balance in accounts and accountsByChainId variables of the state. It can be just a accountsByChainId and when required, we can retrieve the current one by chainId\r\n\r\n  I agree with this!\r\n- It looks like the core version of AccountTrackerController has a `syncBalancesWithAddresses` method. Do we need to include this method (or a version of it)? I looked in mobile and it looks like it gets called during some of the hardware wallet flows.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1889942442/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1892136495",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1892136495",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1892136495,
    "node_id": "IC_kwDOCBB0Cc5wx7Yv",
    "user": {
      "login": "kanthesha",
      "id": 45172858,
      "node_id": "MDQ6VXNlcjQ1MTcyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45172858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanthesha",
      "html_url": "https://github.com/kanthesha",
      "followers_url": "https://api.github.com/users/kanthesha/followers",
      "following_url": "https://api.github.com/users/kanthesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanthesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanthesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanthesha/subscriptions",
      "organizations_url": "https://api.github.com/users/kanthesha/orgs",
      "repos_url": "https://api.github.com/users/kanthesha/repos",
      "events_url": "https://api.github.com/users/kanthesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanthesha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-15T13:01:41Z",
    "updated_at": "2024-01-15T13:02:25Z",
    "author_association": "CONTRIBUTOR",
    "body": ">It looks like the core version of AccountTrackerController has a syncBalancesWithAddresses method. Do we need to include this method (or a version of it)? I looked in mobile and it looks like it gets called during some of the hardware wallet flows.\r\n\r\nGood point, this function can stay and refreshAccounts also can make use of this function once the addresses consolidation happens within refreshAccounts. It can call this function based on whether to update from balance smart contract or by direct querying.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1892136495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1899014290",
    "html_url": "https://github.com/MetaMask/core/issues/1811#issuecomment-1899014290",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1811",
    "id": 1899014290,
    "node_id": "IC_kwDOCBB0Cc5xMKiS",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-18T18:37:46Z",
    "updated_at": "2024-01-18T18:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kanthesha I imagine that as we progress through the work and it starts to materialize then there will be more discussion on some of the finer points here, but your overall plan looks good to me. Feel free to close this ticket!",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1899014290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
