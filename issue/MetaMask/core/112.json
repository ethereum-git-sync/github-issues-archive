{
  "url": "https://api.github.com/repos/MetaMask/core/issues/112",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/112/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/112/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/112/events",
  "html_url": "https://github.com/MetaMask/core/issues/112",
  "id": 454383034,
  "node_id": "MDU6SXNzdWU0NTQzODMwMzQ=",
  "number": 112,
  "title": "Add support for \"mandatory\" state updates",
  "user": {
    "login": "danfinlay",
    "id": 542863,
    "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danfinlay",
    "html_url": "https://github.com/danfinlay",
    "followers_url": "https://api.github.com/users/danfinlay/followers",
    "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
    "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
    "organizations_url": "https://api.github.com/users/danfinlay/orgs",
    "repos_url": "https://api.github.com/users/danfinlay/repos",
    "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danfinlay/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 948148996,
      "node_id": "MDU6TGFiZWw5NDgxNDg5OTY=",
      "url": "https://api.github.com/repos/MetaMask/core/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-06-10T21:31:08Z",
  "updated_at": "2021-11-04T12:09:13Z",
  "closed_at": "2021-11-04T12:09:13Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Currently the method `BaseController.putState(state: object, forceUpdate: bool)` is synchronous, and merely emits a state update, leaving persistence as an external concern, not coupled with controller logic.\r\n\r\nI am working on a feature that will require guaranteed persistence to be coupled with some types of state updates, so I would like a way to update state that returns a promise and resolves once state has been persisted, so that it will be restored in the case of a system interruption.\r\n\r\n## Example use case\r\n\r\nLet's say we add a login permission that enforces a rule like \"This site may update my profile 5 times.\"\r\n\r\nIn order to enforce this rule, we need to ensure that portions of the state, namely:\r\n\r\n- update counter\r\n- outbound profile update messages\r\n\r\nAre always persisted atomically, so that we never broadcast a profile update without also accounting for the site's limit.\r\n\r\nThis is about enforcing smart-contract-like guarantees within our own controllers, and if we want to decouple our security from constant user nagging, I believe this is a critical feature to pursue.\r\n\r\nThis will probably require `gaba` to become somewhat aware of its persistence strategy.",
  "closed_by": {
    "login": "Gudahtt",
    "id": 2459287,
    "node_id": "MDQ6VXNlcjI0NTkyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gudahtt",
    "html_url": "https://github.com/Gudahtt",
    "followers_url": "https://api.github.com/users/Gudahtt/followers",
    "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
    "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
    "repos_url": "https://api.github.com/users/Gudahtt/repos",
    "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/112/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/112/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/796427287",
    "html_url": "https://github.com/MetaMask/core/issues/112#issuecomment-796427287",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/112",
    "id": 796427287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjQyNzI4Nw==",
    "user": {
      "login": "Gudahtt",
      "id": 2459287,
      "node_id": "MDQ6VXNlcjI0NTkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gudahtt",
      "html_url": "https://github.com/Gudahtt",
      "followers_url": "https://api.github.com/users/Gudahtt/followers",
      "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
      "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
      "repos_url": "https://api.github.com/users/Gudahtt/repos",
      "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T03:58:42Z",
    "updated_at": "2021-03-16T12:43:02Z",
    "author_association": "MEMBER",
    "body": ">I would like a way to update state that returns a promise and resolves once state has been persisted, so that it will be restored in the case of a system interruption.\r\n\r\nWhat about state updates for things that aren't persisted at all? Or state updates that trigger a network request that you also want to ensure has completed successfully before continuing?\r\n\r\nThis sort of thing may be better handled at a different layer than the BaseController update method. Controllers are responsible for ensuring their state remains valid, so this seems like it should be their responsibility. For example, a \"profile controller\" could expose an \"update profile\" function that respected a permission based upon a counter.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/796427287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/960763918",
    "html_url": "https://github.com/MetaMask/core/issues/112#issuecomment-960763918",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/112",
    "id": 960763918,
    "node_id": "IC_kwDOCBB0Cc45RBgO",
    "user": {
      "login": "Gudahtt",
      "id": 2459287,
      "node_id": "MDQ6VXNlcjI0NTkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gudahtt",
      "html_url": "https://github.com/Gudahtt",
      "followers_url": "https://api.github.com/users/Gudahtt/followers",
      "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
      "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
      "repos_url": "https://api.github.com/users/Gudahtt/repos",
      "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T12:09:13Z",
    "updated_at": "2021-11-04T12:09:13Z",
    "author_association": "MEMBER",
    "body": "Closing for now, as I think this is better handled at a different layer than in the base controller API. We can revisit when we have a feature that needs this.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/960763918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
