{
  "url": "https://api.github.com/repos/MetaMask/core/issues/686",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/686/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/686/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/686/events",
  "html_url": "https://github.com/MetaMask/core/issues/686",
  "id": 1121439644,
  "node_id": "I_kwDOCBB0Cc5C18-c",
  "number": 686,
  "title": "Fallback to getting collectible contract information from the contract itself. ",
  "user": {
    "login": "fmdev99",
    "id": 83404774,
    "node_id": "MDQ6VXNlcjgzNDA0Nzc0",
    "avatar_url": "https://avatars.githubusercontent.com/u/83404774?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fmdev99",
    "html_url": "https://github.com/fmdev99",
    "followers_url": "https://api.github.com/users/fmdev99/followers",
    "following_url": "https://api.github.com/users/fmdev99/following{/other_user}",
    "gists_url": "https://api.github.com/users/fmdev99/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fmdev99/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fmdev99/subscriptions",
    "organizations_url": "https://api.github.com/users/fmdev99/orgs",
    "repos_url": "https://api.github.com/users/fmdev99/repos",
    "events_url": "https://api.github.com/users/fmdev99/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fmdev99/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-02-02T02:28:43Z",
  "updated_at": "2022-12-20T04:53:03Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Currently the controller is getting collectible contract name and symbol information from the contract itself, but all other information is retrieved from OpenSea.  As a fallback, metamask could pull information directly from the contract if OpenSea doesn't have the data. This could use the OpenSea standard here for \"contractURI\": https://docs.opensea.io/docs/contract-level-metadata\r\n\r\nA big motivation for this is currently only projects on the 3 chains supported by OpenSea can have icons for their NFT collections in metamask mobile. This would provide a mechanism for projects that aren't on a chain support by OpenSea to specify an image icon for their NFT collections.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/686/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/686/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1076579472",
    "html_url": "https://github.com/MetaMask/core/issues/686#issuecomment-1076579472",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/686",
    "id": 1076579472,
    "node_id": "IC_kwDOCBB0Cc5AK0yQ",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T17:03:36Z",
    "updated_at": "2022-03-23T17:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adonesky1 Can you answer this one? I feel like the changes you've made recently could possibly address this.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1076579472/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1076754948",
    "html_url": "https://github.com/MetaMask/core/issues/686#issuecomment-1076754948",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/686",
    "id": 1076754948,
    "node_id": "IC_kwDOCBB0Cc5ALfoE",
    "user": {
      "login": "adonesky1",
      "id": 34557516,
      "node_id": "MDQ6VXNlcjM0NTU3NTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34557516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adonesky1",
      "html_url": "https://github.com/adonesky1",
      "followers_url": "https://api.github.com/users/adonesky1/followers",
      "following_url": "https://api.github.com/users/adonesky1/following{/other_user}",
      "gists_url": "https://api.github.com/users/adonesky1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adonesky1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adonesky1/subscriptions",
      "organizations_url": "https://api.github.com/users/adonesky1/orgs",
      "repos_url": "https://api.github.com/users/adonesky1/repos",
      "events_url": "https://api.github.com/users/adonesky1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adonesky1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T19:47:56Z",
    "updated_at": "2022-03-23T19:47:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would involve us endorsing the addition of a new method not included in either the `ERC721` or `ERC1155` contract standard, one that OpenSea has unilaterally defined. I'm not against this method per se but I think we should discuss before defaulting into adoption of this new standard proposed by OpenSea. In any case this would only apply to contracts that have already adopted this standard recommended to them by OpenSea or any contracts that elect to do so in the future. cc @mcmire @FrederikBolding @rekmarks ",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1076754948/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1358838449",
    "html_url": "https://github.com/MetaMask/core/issues/686#issuecomment-1358838449",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/686",
    "id": 1358838449,
    "node_id": "IC_kwDOCBB0Cc5Q_jqx",
    "user": {
      "login": "fmdev99",
      "id": 83404774,
      "node_id": "MDQ6VXNlcjgzNDA0Nzc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/83404774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fmdev99",
      "html_url": "https://github.com/fmdev99",
      "followers_url": "https://api.github.com/users/fmdev99/followers",
      "following_url": "https://api.github.com/users/fmdev99/following{/other_user}",
      "gists_url": "https://api.github.com/users/fmdev99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fmdev99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fmdev99/subscriptions",
      "organizations_url": "https://api.github.com/users/fmdev99/orgs",
      "repos_url": "https://api.github.com/users/fmdev99/repos",
      "events_url": "https://api.github.com/users/fmdev99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fmdev99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T04:53:03Z",
    "updated_at": "2022-12-20T04:53:03Z",
    "author_association": "NONE",
    "body": "> This would involve us endorsing the addition of a new method not included in either the `ERC721` or `ERC1155` contract standard, one that OpenSea has unilaterally defined. I'm not against this method per se but I think we should discuss before defaulting into adoption of this new standard proposed by OpenSea. In any case this would only apply to contracts that have already adopted this standard recommended to them by OpenSea or any contracts that elect to do so in the future. cc @mcmire @FrederikBolding @rekmarks\r\n\r\nBut the current method is literally only pulling information from OpenSea. So, you already only support information unilaterally defined by OpenSea. By supporting this standard, you at least open the option of other chains working which OpenSea doesn't support. ",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1358838449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
