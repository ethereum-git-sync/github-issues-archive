{
  "url": "https://api.github.com/repos/MetaMask/core/issues/922",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/922/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/922/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/922/events",
  "html_url": "https://github.com/MetaMask/core/issues/922",
  "id": 1388157070,
  "node_id": "I_kwDOCBB0Cc5SvZiO",
  "number": 922,
  "title": "Establish test helper function pattern across all controllers",
  "user": {
    "login": "BelfordZ",
    "id": 1787231,
    "node_id": "MDQ6VXNlcjE3ODcyMzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BelfordZ",
    "html_url": "https://github.com/BelfordZ",
    "followers_url": "https://api.github.com/users/BelfordZ/followers",
    "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
    "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
    "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
    "repos_url": "https://api.github.com/users/BelfordZ/repos",
    "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-09-27T18:01:20Z",
  "updated_at": "2022-09-27T18:01:20Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "        One pattern I've been following in other projects recently to handle steps that you'd normally put into an `afterEach` is to have your setup function take a function. I like to rename the function `withXXXX` to indicate that it doesn't return the controllers (or test data) itself. For instance you could have:\r\n\r\n```\r\nfunction withControllers(fn): Controllers {\r\n  // ...instantiate controllers...\r\n\r\n  try {\r\n    fn({ messenger, network, preferences, assetsContract });\r\n  } finally {\r\n    messenger.clearEventSubscriptions('NetworkController:stateChange');\r\n  }\r\n}\r\n```\r\n\r\nThe reason `withControllers` takes a function is because that would now represent the test. Here's how you'd update an existing test for instance:\r\n\r\n```\r\n  it('should update the ipfsGateWay config value when this value is changed in the preferences controller', () => {\r\n    withControllers(({ assetsContract, messenger, preferences }) => {\r\n      expect(assetsContract.config).toStrictEqual({\r\n        chainId: SupportedTokenDetectionNetworks.mainnet,\r\n        ipfsGateway: IPFS_DEFAULT_GATEWAY_URL,\r\n        provider: undefined,\r\n      });\r\n      preferences.setIpfsGateway('newIPFSGateWay');\r\n      expect(assetsContract.config).toStrictEqual({\r\n        ipfsGateway: 'newIPFSGateWay',\r\n        chainId: SupportedTokenDetectionNetworks.mainnet,\r\n        provider: undefined,\r\n      });\r\n    });\r\n  });\r\n```\r\n\r\nI realize you've spent a lot of time on these tests already, so this isn't a request for this PR, but could give you ideas for a future PR.\r\n\r\n_Originally posted by @mcmire in https://github.com/MetaMask/controllers/pull/903#discussion_r980519671_\r\n      ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/922/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/922/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
