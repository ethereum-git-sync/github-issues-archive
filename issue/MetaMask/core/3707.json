{
  "url": "https://api.github.com/repos/MetaMask/core/issues/3707",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/3707/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/3707/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/3707/events",
  "html_url": "https://github.com/MetaMask/core/issues/3707",
  "id": 2064755905,
  "node_id": "I_kwDOCBB0Cc57EazB",
  "number": 3707,
  "title": "Plan work to upgrade TransactionController to BaseControllerV2",
  "user": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5330766523,
      "node_id": "LA_kwDOCBB0Cc8AAAABPb0Kuw",
      "url": "https://api.github.com/repos/MetaMask/core/labels/team-shared-libraries",
      "name": "team-shared-libraries",
      "color": "c5def5",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2024-01-03T22:57:54Z",
  "updated_at": "2024-01-09T22:35:28Z",
  "closed_at": "2024-01-09T21:21:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Considering that converting TokenDetectionController to BaseController v2 took longer than expected due to unforeseen changes, we want to be more conscientious about converting TransactionController.\r\n\r\nFigure out all of the changes we would want to make in upgrading this controller and create new tickets as necessary.\r\n",
  "closed_by": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/3707/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/3707/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1881845475",
    "html_url": "https://github.com/MetaMask/core/issues/3707#issuecomment-1881845475",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/3707",
    "id": 1881845475,
    "node_id": "IC_kwDOCBB0Cc5wKq7j",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-08T21:25:16Z",
    "updated_at": "2024-01-09T22:35:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are the necessary changes to TransactionController that we would have to make:\r\n\r\n- Replace `hub` property and replace with messenger pattern\r\n  - Remove `TransactionControllerEventEmitter` type\r\n  - Introduce new events and event types:\r\n    - `TransactionController:stateChange` (`TransactionControllerStateChangeEvent`)\r\n      - You can use the `ControllerStateChangeEvent` utility type to create the type; see TokenDetectionController for an example\r\n    - `TransactionController:incomingTransactionBlockReceived` (`TransactionControllerIncomingTransactionBlockReceivedEvent`)\r\n    - `TransactionController:postTransactionBalanceUpdated` (`TransactionControllerPostTransactionBalanceUpdatedEvent`)\r\n    - `TransactionController:speedUpTransactionAdded` (`TransactionControllerSpeedUpTransactionAddedEvent`)\r\n    - `TransactionController:transactionApproved` (`TransactionControllerTransactionApprovedEvent`)\r\n    - `TransactionController:transactionConfirmed` (`TransactionControllerTransactionConfirmedEvent`)\r\n    - `TransactionController:transactionDropped` (`TransactionControllerTransactionDroppedEvent`)\r\n    - `TransactionController:transactionFailed` (`TransactionControllerTransactionFailedEvent`)\r\n    - `TransactionController:transactionFinished` (`TransactionControllerTransactionFinishedEvent`)\r\n    - `TransactionController:newSwapApproval` (`TransactionControllerNewSwapApprovalEvent`) (?)\r\n      - Not sure what this event is supposed to represent, so may want to rename it to be more readable\r\n    - `TransactionController:newSwap` (`TransactionControllerNewSwapEvent`) (?)\r\n      - Not sure what this event is supposed to represent, so may want to rename it to be more readable\r\n    - `TransactionController:transactionPublishingSkipped` (`TransactionControllerTransactionPublishingSkippedEvent`)\r\n    - `TransactionController:transactionRejected` (`TransactionControllerTransactionRejectedEvent`)\r\n    - `TransactionController:transactionStatusUpdated` (`TransactionControllerTransactionStatusUpdatedEvent`)\r\n    - `TransactionController:transactionSubmitted` (`TransactionControllerTransactionSubmittedEvent`)\r\n    - `TransactionController:unapprovedTransactionAdded` (`TransactionControllerUnapprovedTransactionAddedEvent`)\r\n  - Introduce `TransactionControllerGetStateAction` type\r\n    - You can use the `ControllerGetStateAction` utility type to create this; see DetectTokensController for an example\r\n  - Introduce `TransactionControllerControllerEvents` type, set to a union of the above types\r\n  - Introduce `TransactionControllerControllerActions` type, set to `TransactionControllerGetStateAction`\r\n  - Update `TransactionControllerMessenger` to allowlist the above events and actions\r\n  - Replace `this.hub.emit` calls by emitting the above events instead\r\n  - Remove `this.hub.emit` calls for the following events:\r\n    - `${transactionMeta.id}:finished` event — the consumer can listen to `TransactionController:transactionFinished` and check the ID of the transaction\r\n    - `${transactionMeta.id}:speedup` event — the consumer can listen to `TransactionController:speedUpTransactionAdded` and check the ID of the transaction\r\n    - `${transactionMeta.id}:publish-skip` event — the consumer can listen to `TransactionController:transactionPublishingSkipped` and check the ID of the transaction\r\n    - `${transactionMeta.id}:confirmed` event — the consumer can listen to `TransactionController:transactionConfirmed` and check the ID of the transaction\r\n- Have TransactionController inherit from `BaseController` instead of `BaseControllerV1`\r\n  - Update imports so that this is possible\r\n- Rename `TransactionState` to `TransactionControllerState` for consistency with other controllers\r\n- Create a `transactionsControllerMetadata` variable which holds metadata for all state variables\r\n  - See AccountsController for an example\r\n- Rename `TransactionConfig` to `TransactionControllerOptions`; convert to `interface` and remove supertype; add `state` and `messenger`; make private\r\n- Store `config` properties in private properties\r\n- Update constructor to take a single options object of type `TransactionControllerOptions`\r\n- Extract default state set in constructor to `getDefaultState` function\r\n  - See UserOperationController for an example\r\n- Instead of setting `name` as an instance property, pull it to the top as a constant called `controllerName`, and then use `typeof controllerName` anywhere you need the type version\r\n  - See TokenDetectionController for an example\r\n- Instead of setting `this.defaultState` in constructor, and instead of calling `super` with `config` and `state`, call `super` with `messenger`, `name: controllerName`, `metadata`, `state: { ...getDefaultState(), ...state }`, and then remaining options\r\n  - See AccountsController for an example\r\n- Don't call `this.initialize()` as it doesn't exist anymore\r\n- Update state update callsites\r\n  - All calls to `this.update(...)` need to be updated so that instead of a copied-but-modified version of the state, a function is passed which directly modifies a deep copy of the state\r\n  - See `NetworkController.lookupNetworkByClientId` for an example\r\n\r\nHere are the necessary changes to the TransactionController tests that we would have to make:\r\n\r\n- Perform slight refactors to controller setup code to better match existing conventions\r\n  - The test suite (specifically, the `newController` helper) uses one of two different messenger objects depending on the scenario. This is clunky, and it would be better to just have one messenger object. In other tests, e.g. those for AccountsController, we have a `setupXController` helper, which is intended to take the same options that the controller constructor takes. It also builds a default messenger using a `buildXControllerMessenger` helper (which itself uses a `buildMessenger` helper internally) if one is not passed. Although this is not the final pattern we want to use, it would be better to go in this direction so that we are closer to our ideals.\r\n- Update `waitForTransactionFinished` function to subscribe to a messenger instead of the controller\r\n\r\nHere are changes that we should not make:\r\n\r\n- Care must be taken to not convert any of the callbacks that the constructor takes (`getCurrentAccountEIP1559Compatibility`, `getCurrentNetworkEIP1559Compatibility`, etc.) to messenger actions. We can do this in another PR.\r\n- IncomingTransactionHelper and PendingTransactionTracker both emit events. We don't need to convert these to messenger actions, because these events are only listened to internally.\r\n- Care must be taken not to refactor the tests too much. We know that the tests could be written in a more maintainable style, but we should try to limit how far we go in the ideal direction.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1881845475/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883518544",
    "html_url": "https://github.com/MetaMask/core/issues/3707#issuecomment-1883518544",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/3707",
    "id": 1883518544,
    "node_id": "IC_kwDOCBB0Cc5wRDZQ",
    "user": {
      "login": "Gudahtt",
      "id": 2459287,
      "node_id": "MDQ6VXNlcjI0NTkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gudahtt",
      "html_url": "https://github.com/Gudahtt",
      "followers_url": "https://api.github.com/users/Gudahtt/followers",
      "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
      "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
      "repos_url": "https://api.github.com/users/Gudahtt/repos",
      "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T17:50:02Z",
    "updated_at": "2024-01-09T17:50:02Z",
    "author_association": "MEMBER",
    "body": ">Introduce new events and event types: \r\n\r\nSome of the \"hub\" events are only used internally by the TransactionController. In those cases, perhaps we can replace them with method calls rather than adding them as external events, to avoid unnecessarily increasing the number of events/the public API surface area.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883518544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883575827",
    "html_url": "https://github.com/MetaMask/core/issues/3707#issuecomment-1883575827",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/3707",
    "id": 1883575827,
    "node_id": "IC_kwDOCBB0Cc5wRRYT",
    "user": {
      "login": "Gudahtt",
      "id": 2459287,
      "node_id": "MDQ6VXNlcjI0NTkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2459287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gudahtt",
      "html_url": "https://github.com/Gudahtt",
      "followers_url": "https://api.github.com/users/Gudahtt/followers",
      "following_url": "https://api.github.com/users/Gudahtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gudahtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gudahtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gudahtt/subscriptions",
      "organizations_url": "https://api.github.com/users/Gudahtt/orgs",
      "repos_url": "https://api.github.com/users/Gudahtt/repos",
      "events_url": "https://api.github.com/users/Gudahtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gudahtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T18:30:53Z",
    "updated_at": "2024-01-09T18:30:53Z",
    "author_association": "MEMBER",
    "body": "Oh, actually, I have just taken a look and I can see that all of these events are used externally. I hadn't realized we used so many, nevermind!\r\n\r\nThis plan looks good to me :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883575827/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883589595",
    "html_url": "https://github.com/MetaMask/core/issues/3707#issuecomment-1883589595",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/3707",
    "id": 1883589595,
    "node_id": "IC_kwDOCBB0Cc5wRUvb",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T18:40:48Z",
    "updated_at": "2024-01-09T20:27:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good overall! Some nits:\r\n- Rename private properties and methods to use the `#` prefix instead of the `private` keyword, so that they're encapsulated at runtime (JavaScript only recognizes `#`).\r\n- Explicitly enumerate package-level exports in `index.ts` so that `controllerName`, `AllowedActions` etc. can be exported for internal usage (e.g. in test files).\r\n- RE not converting callbacks: if any of the new events change state in other controllers, and that state is then used by transaction-controller tests or methods/actions, it might be less of a pain (or even unavoidable) to convert some callbacks e.g. `getNetworkState` or methods e.g. `getChainId()` into messenger actions/events (along with consolidating `newController/buildMessenger`). It doesn't seem like there are many such interactions between controllers in the current tests, but if new tests need to be written for the new events, this could change.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883589595/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883815178",
    "html_url": "https://github.com/MetaMask/core/issues/3707#issuecomment-1883815178",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/3707",
    "id": 1883815178,
    "node_id": "IC_kwDOCBB0Cc5wSL0K",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T21:21:50Z",
    "updated_at": "2024-01-09T21:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay great, thanks for the feedback! I think I have enough to go on in order to continue with the work. I've created a new ticket for it here: #3758",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1883815178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
