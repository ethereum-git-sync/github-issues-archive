{
  "url": "https://api.github.com/repos/MetaMask/core/issues/1813",
  "repository_url": "https://api.github.com/repos/MetaMask/core",
  "labels_url": "https://api.github.com/repos/MetaMask/core/issues/1813/labels{/name}",
  "comments_url": "https://api.github.com/repos/MetaMask/core/issues/1813/comments",
  "events_url": "https://api.github.com/repos/MetaMask/core/issues/1813/events",
  "html_url": "https://github.com/MetaMask/core/issues/1813",
  "id": 1938787657,
  "node_id": "I_kwDOCBB0Cc5zj41J",
  "number": 1813,
  "title": "Plan consolidated API for TokenDetectionController + DetectTokensController",
  "user": {
    "login": "mcmire",
    "id": 7371,
    "node_id": "MDQ6VXNlcjczNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcmire",
    "html_url": "https://github.com/mcmire",
    "followers_url": "https://api.github.com/users/mcmire/followers",
    "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
    "organizations_url": "https://api.github.com/users/mcmire/orgs",
    "repos_url": "https://api.github.com/users/mcmire/repos",
    "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcmire/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5330766523,
      "node_id": "LA_kwDOCBB0Cc8AAAABPb0Kuw",
      "url": "https://api.github.com/repos/MetaMask/core/labels/team-shared-libraries",
      "name": "team-shared-libraries",
      "color": "c5def5",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "MajorLift",
    "id": 34228073,
    "node_id": "MDQ6VXNlcjM0MjI4MDcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MajorLift",
    "html_url": "https://github.com/MajorLift",
    "followers_url": "https://api.github.com/users/MajorLift/followers",
    "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
    "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
    "organizations_url": "https://api.github.com/users/MajorLift/orgs",
    "repos_url": "https://api.github.com/users/MajorLift/repos",
    "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MajorLift/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-10-11T21:42:07Z",
  "updated_at": "2024-01-12T19:35:38Z",
  "closed_at": "2024-01-12T19:35:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Look into how TokenDetectionController (from this repo) is being used in the mobile app (including the patches for this controller in mobile) and how DetectTokensController is being used in the extension, and determine an API for a combined controller that satisfies the requirements that extension and mobile have.",
  "closed_by": {
    "login": "MajorLift",
    "id": 34228073,
    "node_id": "MDQ6VXNlcjM0MjI4MDcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MajorLift",
    "html_url": "https://github.com/MajorLift",
    "followers_url": "https://api.github.com/users/MajorLift/followers",
    "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
    "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
    "organizations_url": "https://api.github.com/users/MajorLift/orgs",
    "repos_url": "https://api.github.com/users/MajorLift/repos",
    "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MajorLift/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MetaMask/core/issues/1813/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MetaMask/core/issues/1813/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1843841287",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1843841287",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1843841287,
    "node_id": "IC_kwDOCBB0Cc5t5skH",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-06T23:16:20Z",
    "updated_at": "2023-12-12T20:16:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "# Consolidated `TokenDetectionController` API\r\n\r\n- Note: remove all properties from `TokenDetection{Config,State}` and use private class fields instead.\r\n\r\n## Constructor\r\n\r\n- `deferPollingStart` (optional)\r\n- `interval` (optional)\r\n- `chainId` (required)\r\n- `selectedAddress` (optional)\r\n- `messenger` (required)\r\n\r\n## Fields\r\n- `super.#intervalLength`\r\n- `#intervalId`\r\n- `#chainId`\r\n- `#selectedAddress`\r\n- `#isDetectionEnabledFromPreference`\r\n- `#isDetectionEnabledForNetwork`\r\n\r\n- Callbacks for communicating with BaseControllerV1 controllers:\r\n\t- `#onPreferenceStateChange`\r\n\t- `#getBalancesInSingleCall`\r\n\t- `#addDetectedTokens`\r\n\t- `#getTokensState`\r\n\t- `#getPreferencesState`\r\n\r\n## Methods\r\n\r\n### polling-controller:\r\n- `super.{g,s}etIntervalLength`\r\n- `startPolling()`\r\n- `stopPolling()`\r\n- `_executePoll()`\r\n- `restartTokenDetection()`\r\n\r\n(remove `start`, `stop`)\r\n\r\n### core:\r\n- `detectTokens` (merge with `detectNewTokens()`)\r\n\t- Refactor - extract methods:\r\n\t\t- `updateTokens()`\r\n\t\t- `getTokensToDetectSlices()`\r\n\t\t- `operationToSafelyExecute()`\r\n\t- `@throws`: `MetaMask - DetectTokensController single call balance fetch failed`\r\n\t- Add `this.trackMetaMetricsEvent` call\r\n- `getCorrectChainId()` (merge with `getChainIdFromNetworkStore()`)\r\n\r\n### extension:\r\n- `#registerKeyringHandlers()`\r\n- `isActive()`\r\n- `trackMetaMetricsEvent()`\r\n\r\n### mobile:\r\n- `updateTokensName()`: `(tokenList) => tokensController.updateTokensName(tokenList)`\r\n\r\n```ts detectTokens\r\nconst { tokens } = this.getTokensState();\r\n...\r\nif (tokens.length && !tokens[0].name) {\r\n\tthis.updateTokensName(tokenList);\r\n}\r\n```\r\n\r\n#### remove\r\n- extension:\r\n\t- interval accessors\r\n\t- tokenList setter\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1843841287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1850939348",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1850939348",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1850939348,
    "node_id": "IC_kwDOCBB0Cc5uUxfU",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T21:45:28Z",
    "updated_at": "2023-12-11T21:45:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MajorLift Is this essentially blocked by https://github.com/MetaMask/core/issues/3625? Would you need to revisit this once that's merged?",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1850939348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1852308586",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1852308586",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1852308586,
    "node_id": "IC_kwDOCBB0Cc5uZ_xq",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T15:49:45Z",
    "updated_at": "2023-12-12T15:49:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any changes to the `TokenDetectionController` API that are made in #3625 will need to be reflected here as well, but it doesn't look like there will be any significant departures from what I have right now. \r\n\r\nMostly I need a sign-off on the plan in the comment above before I can get started on #3626. That can wait until after #3625 is merged, though.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1852308586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1853292018",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1853292018",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1853292018,
    "node_id": "IC_kwDOCBB0Cc5udv3y",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-13T05:27:26Z",
    "updated_at": "2023-12-13T05:27:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is good that you've noted some of the ways that each implementation captures data internally, but the list is fairly large for what is a small controller. I wonder if it would be better to list the _public_ API that we want to have rather than all of the private properties and methods that are present. How we end up storing data internally or refactoring the logic, we can decide when we create the consolidated version, but I don't know if that's important for now.\r\n\r\nHere's what I see as the public API:\r\n\r\n- Everything from BaseController and StaticIntervalPollingController (we can't change this, so it stays)\r\n  - `name` instance property\r\n  - `metadata` instance property\r\n  - `state` getter\r\n  - `setIntervalLength`\r\n  - `getIntervalLength`\r\n  - `startPollingByNetworkClientId`\r\n  - `stopAllPolling`\r\n  - `stopPollingByPollingToken`\r\n  - `onPollingCompleteByNetworkClientId`\r\n  - `_executePoll` (not part of the public API, but something that needs to be implemented)\r\n- `detectTokens` (or `detectNewTokens` — whatever we want to call it)\r\n\r\nThat said, I know I'm sort of changing the purpose of this ticket, but in addition to reviewing the public API, perhaps we should also take this time to audit the behavior between the three implementations as well, and capture a list of differences there. When creating a consolidated version of the controller I imagine we'll want to do some refactoring, so we'll want to make sure we preserve any nuances.\r\n\r\nI see you've done this a bit already: you've alluded to the fact that DetectTokensController (extension implementation) keeps track of the locked/unlocked state of the wallet, and calls the method to detect tokens when the wallet is unlocked, and refuses to detect tokens when it's locked.\r\n\r\nBesides this, it looks like there may be other slight differences in the constructor in TokenDetectionController vs. DetectTokensController. Specifically, in TokenDetectionController, when TokenListController state changes, the method to detect tokens is called only when the `tokens` collection is non-empty; but in DetectTokensController, it's always called.\r\n\r\nAlso, `detectTokens` in TokenDetectionController is slightly different from `detectNewTokens` in DetectTokensController:\r\n\r\n- Whereas TokenDetectionController caches the selected chain and whether or not it supports token detection, DetectTokensController reads the selected chain every time it's called\r\n- Whereas TokenDetectionController aborts if token detection has been disabled in preferences, DetectTokensController does not abort if token detection has been disabled in preferences but the current chain is mainnet; instead, a static list of tokens is used as the base (so as not to make any additional network requests?).\r\n- Whereas TokenDetectionController calls `TokensController.addDetectedTokens` with the tokens from TokenListController's `tokenList` collection which are not in TokensController's `tokens` collection, not in TokensController's `ignoredTokens` collection, and have a non-zero balance, DetectTokensController goes one step further and excludes tokens which are already in TokensController's `detectedTokens` collection.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1853292018/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1853294107",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1853294107",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1853294107,
    "node_id": "IC_kwDOCBB0Cc5udwYb",
    "user": {
      "login": "mcmire",
      "id": 7371,
      "node_id": "MDQ6VXNlcjczNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmire",
      "html_url": "https://github.com/mcmire",
      "followers_url": "https://api.github.com/users/mcmire/followers",
      "following_url": "https://api.github.com/users/mcmire/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmire/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmire/orgs",
      "repos_url": "https://api.github.com/users/mcmire/repos",
      "events_url": "https://api.github.com/users/mcmire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-13T05:30:08Z",
    "updated_at": "2023-12-13T05:30:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Between what you've noted and what I've noted, I imagine we probably have enough to go on, but if you find any other differences feel free to add them here.\r\n\r\nI'll let you close this ticket when you feel you have enough information to proceed to #3626.",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1853294107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1879349608",
    "html_url": "https://github.com/MetaMask/core/issues/1813#issuecomment-1879349608",
    "issue_url": "https://api.github.com/repos/MetaMask/core/issues/1813",
    "id": 1879349608,
    "node_id": "IC_kwDOCBB0Cc5wBJlo",
    "user": {
      "login": "MajorLift",
      "id": 34228073,
      "node_id": "MDQ6VXNlcjM0MjI4MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34228073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MajorLift",
      "html_url": "https://github.com/MajorLift",
      "followers_url": "https://api.github.com/users/MajorLift/followers",
      "following_url": "https://api.github.com/users/MajorLift/following{/other_user}",
      "gists_url": "https://api.github.com/users/MajorLift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MajorLift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MajorLift/subscriptions",
      "organizations_url": "https://api.github.com/users/MajorLift/orgs",
      "repos_url": "https://api.github.com/users/MajorLift/repos",
      "events_url": "https://api.github.com/users/MajorLift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MajorLift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T22:47:42Z",
    "updated_at": "2024-01-08T15:35:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Notes:\r\n\r\n- Constructor\r\n  - Wherever `DetectTokensController` uses `restartTokenDetection`, replace `detectTokens`\r\n  - Subscribe to `AccountsController:selectedAccountChange` event\r\n  - Avoid triggering `TokenListController:stateChange` for empty tokens list (`TokenDetectionController`)\r\n- Replace `#disabled` checks with `isActive`\r\n- `detectTokens`:\r\n  - tokens-controller: apply messenger pattern\r\n    - Subscribe to tokens-controller: maintain cache of `ignoredTokens`, `detectedTokens`\r\n    - Exclude tokens already in `detectedTokens` list from `detectTokens` logic\r\n  - Replace `isTokenDetectionInactiveInMainnet` is true -> early exit with `detectTokens` check for `#isDetectionEnabledFromPreferences`. \r\n    - OR copy logic for generating static mainnet token list into core? reach out to mobile team on importance of handling this case explicitly.\r\n  - Accept `_trackMetaMetricsEvent` callback in constructor\r\n    - Generate and pass `eventTokensDetails`\r\n  - try-catch block is handled by `_safelyExecute()`\r\n- `restartTokenDetection`\r\n  - triggers `detectTokens` and resets interval length to default\r\n  - all other logic moved into `detectTokens`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/MetaMask/core/issues/comments/1879349608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
