{
  "url": "https://api.github.com/repos/ethereum/pm/issues/14",
  "repository_url": "https://api.github.com/repos/ethereum/pm",
  "labels_url": "https://api.github.com/repos/ethereum/pm/issues/14/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/pm/issues/14/comments",
  "events_url": "https://api.github.com/repos/ethereum/pm/issues/14/events",
  "html_url": "https://github.com/ethereum/pm/issues/14",
  "id": 228500659,
  "node_id": "MDU6SXNzdWUyMjg1MDA2NTk=",
  "number": 14,
  "title": "All Core Devs Meeting 16 Agenda",
  "user": {
    "login": "Souptacular",
    "id": 3460120,
    "node_id": "MDQ6VXNlcjM0NjAxMjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Souptacular",
    "html_url": "https://github.com/Souptacular",
    "followers_url": "https://api.github.com/users/Souptacular/followers",
    "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
    "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
    "organizations_url": "https://api.github.com/users/Souptacular/orgs",
    "repos_url": "https://api.github.com/users/Souptacular/repos",
    "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Souptacular/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2017-05-13T21:09:44Z",
  "updated_at": "2021-03-29T15:38:16Z",
  "closed_at": "2017-05-28T21:57:18Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# All Core Devs Meeting 16 Agenda\r\n### Meeting Date/Time: Friday 5/19/17 at 14:00 UTC\r\n### Meeting Duration 1.5 hours\r\n### [YouTube Live Stream Link](https://www.youtube.com/watch?v=7ATLQpc_Wnk)\r\n# Agenda\r\n\r\n1. [ERC-20 Token Standard Finalization](https://github.com/ethereum/EIPs/pull/610) [Fabian, Nick, or Hudson]\r\n- [Point of contention: `throw` vs `return false;`](https://github.com/ethereum/EIPs/issues/20#issuecomment-300260935)\r\n2. Metropolis updates/EIPs.\r\n- **a. Details and implementations of EIPs.**\r\n  - \"Agreeing on gas costs for MODEXP, ECADD, ECMUL, ECPAIRING. For MODEXP specifically, are we going to modify it to somehow incorporate bit length or not?\" [Vitalik]\r\n  - [Concerns around the REVERT opcode introducing an economic change that may break things and revisiting cost/benefit analysis of the opcode.](https://github.com/ethereum/pm/issues/14#issuecomment-302028124) [Vitalik]\r\n  - \"Regarding EIP 96: should the gas price of `BLOCKHASH` already change from the beginning of the Metropolis, or from the block where the behavior of `BLOCKHASH` changes?\" More info: https://github.com/ethereum/EIPs/pull/210/files#r117211219 [Yoichi]\r\n  - \"Regarding EIP96 (BLOCKHASH contract): should the blockhash-maintainance call at the beginning of each block increment the nonce of `SYSTEM_ACCOUNT`? https://github.com/ethereum/EIPs/pull/210/files#r117260179\" [Yoichi]\r\n  - \"Regarding EIP98 (med state removal): this should start at (inclusive) METROPOLIS_FORK_BLKNUM instead of one block after that (as written in the EIP).  Pointed out by @gumb0 https://github.com/ethereum/EIPs/issues/98#issuecomment-292222044\" [Yoichi]\r\n  - \"Regarding EIP 211 (RETURNDATACOPY): the behavior of reading out-of-bounds from the returndata buffer is [under discussion](https://github.com/ethereum/EIPs/pull/211#discussion_r117212647).\" [Yoichi]\r\n - **b. Updates to testing.**\r\n   - [Proposal: \"Freeze\" EIPs to allow for testing.](https://github.com/ethereum/pm/issues/14#issuecomment-302113189) [Yoichi]\r\n - **c. Any \"subtleties\" we need to work out.**\r\n - **d. Review time estimate for testing/release.**\r\n3. [Time permitting] \"If we have time (no high priority), I would like to get some feedback about adding functionality that allows dapps to be notified whenever a certain address was touched by a transaction (including internal calls). This information does not necessarily have to be part of the block, but could be an isolated index database.\" [Christian R.]\r\n\r\n\r\nPlease provide comments to add or correct agenda topics.",
  "closed_by": {
    "login": "Souptacular",
    "id": 3460120,
    "node_id": "MDQ6VXNlcjM0NjAxMjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Souptacular",
    "html_url": "https://github.com/Souptacular",
    "followers_url": "https://api.github.com/users/Souptacular/followers",
    "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
    "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
    "organizations_url": "https://api.github.com/users/Souptacular/orgs",
    "repos_url": "https://api.github.com/users/Souptacular/repos",
    "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Souptacular/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/pm/issues/14/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/pm/issues/14/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/301280443",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-301280443",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 301280443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI4MDQ0Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-13T23:16:13Z",
    "updated_at": "2017-05-13T23:16:13Z",
    "author_association": "MEMBER",
    "body": "Agreeing on gas costs for MODEXP, ECADD, ECMUL, ECPAIRING.\r\n\r\nFor MODEXP specifically, are we going to modify it to somehow incorporate bit length or not?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/301280443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302028124",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302028124",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302028124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjAyODEyNA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T08:53:43Z",
    "updated_at": "2017-05-17T08:53:43Z",
    "author_association": "MEMBER",
    "body": "Another item: I am starting to get cold feet about the REVERT opcode being able to return data. My main concern is that it will break any applications that depend on being able to micro-charge for getting data. I do realize that such applications are not extremely secure in any case because the fee can always be circumvented via merkle proof magic, but even still such strategies always have some cost, and so there is opportunity for applications to be able to charge at least enough to pay back any fixed costs they have for transaction fees. I'm concerned that (i) we are introducing an economic change which breaks things, and that (ii) the marginal benefits of knowing why an error happened may not be worth the costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302028124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302090738",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302090738",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302090738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjA5MDczOA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T13:31:14Z",
    "updated_at": "2017-05-17T17:31:31Z",
    "author_association": "MEMBER",
    "body": "An alternative without the economic change is `REVERTLOG` that almost aborts, but logs one event.  So (benefit of REVERT) - (benefit of REVERTLOG) needs to outweigh the costs.\r\n\r\n[EDIT: `REVERTLOG` needs to consume all gas, lest information can be encoded in the gas consumption]",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302090738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302113189",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302113189",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302113189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjExMzE4OQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T14:44:00Z",
    "updated_at": "2017-05-17T14:44:00Z",
    "author_association": "MEMBER",
    "body": "Item: proposal about **freezing EIPs to allow time for testing**.\r\n\r\nCurrently, no test cases are ready and stable because there are no indications which EIPs have stopped changing.\r\n\r\nI propose introducing the notion of \"freezing an EIP for Metropolis\".  Once EIPs are frozen for Metropolis, any change in the EIP that changes test cases needs to go through the All Core Devs meeting with the unanimous vote (it's meant to be hard, but not impossible, to achieve).\r\n\r\nAs an effect, when a frozen EIP has a critical problem, but if any party says they have not enough time to test the fix, the EIP would be dropped from Metropolis.\r\n\r\nThe first question is if we shall try to have this distinction \"frozen\".  (Implementation details should come afterward: e.g. how to keep track of the frozen states; which EIPs to freeze first; shall we set the minimum duration between freeze and activation.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302113189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302336038",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302336038",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302336038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjMzNjAzOA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T08:24:34Z",
    "updated_at": "2017-05-18T09:51:19Z",
    "author_association": "MEMBER",
    "body": "<del>Item: was there a decision about opcodes of RETURNDATASIZE and RETURNDATACOPY?</del>\r\n\r\n<del>I heard somewhere that that last coredev meeting decided that  `RETURNDATASIZE` and `RETURNDATACOPY` shall move from `0xd` and `0xe` to some new opcodes, but I didn't attend it.  I don't see the change in the EIP or in the last meeting's records (I found none).  Was there a decision?   If yes, what are the new opcodes?</del> The EIP has been updated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302336038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302364003",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302364003",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302364003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM2NDAwMw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T10:21:45Z",
    "updated_at": "2017-05-18T10:21:45Z",
    "author_association": "MEMBER",
    "body": "Regarding EIP 96: should the gas price of `BLOCKHASH` already change from the beginning of the Metropolis, or from the block where the behavior of `BLOCKHASH` changes? https://github.com/ethereum/EIPs/pull/210/files#r117211219",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302364003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302374784",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302374784",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302374784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM3NDc4NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T11:13:37Z",
    "updated_at": "2017-05-18T11:13:37Z",
    "author_association": "MEMBER",
    "body": "If we have time (no high priority), I would like to get some feedback about adding functionality that allows dapps to be notified whenever a certain address was touched by a transaction (including internal calls). This information does not necessarily have to be part of the block, but could be an isolated index database.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302374784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302377828",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302377828",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302377828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM3NzgyOA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T11:30:03Z",
    "updated_at": "2017-05-18T11:30:03Z",
    "author_association": "MEMBER",
    "body": "Regarding EIP 211 (RETURNDATACOPY): the behavior of reading out-of-bounds from the returndata buffer is [under discussion](https://github.com/ethereum/tests/pull/168/files#diff-eabb766f15e78eafc24bb31a1d66cefc).  We can at least gather opinions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302377828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302396449",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302396449",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302396449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM5NjQ0OQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T13:00:33Z",
    "updated_at": "2017-05-18T13:00:33Z",
    "author_association": "MEMBER",
    "body": "Regarding EIP98 (med state removal): this should start at (inclusive) METROPOLIS_FORK_BLKNUM instead of one block after that (as written in the EIP).  Pointed out by @gumb0 https://github.com/ethereum/EIPs/issues/98#issuecomment-292222044",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302396449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302417899",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302417899",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302417899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQxNzg5OQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T14:19:30Z",
    "updated_at": "2017-05-18T14:19:30Z",
    "author_association": "MEMBER",
    "body": "Regarding EIP96 (BLOCKHASH contract): should the blockhash-maintainance call at the beginning of each block increment the nonce of `SYSTEM_ACCOUNT`? https://github.com/ethereum/EIPs/pull/210/files#r117260179",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302417899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302639770",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302639770",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302639770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjYzOTc3MA==",
    "user": {
      "login": "arkpar",
      "id": 9008569,
      "node_id": "MDQ6VXNlcjkwMDg1Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9008569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arkpar",
      "html_url": "https://github.com/arkpar",
      "followers_url": "https://api.github.com/users/arkpar/followers",
      "following_url": "https://api.github.com/users/arkpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/arkpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arkpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arkpar/subscriptions",
      "organizations_url": "https://api.github.com/users/arkpar/orgs",
      "repos_url": "https://api.github.com/users/arkpar/repos",
      "events_url": "https://api.github.com/users/arkpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arkpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-19T08:16:23Z",
    "updated_at": "2017-05-19T08:16:23Z",
    "author_association": "NONE",
    "body": "@chriseth We have [transaction tracing](https://github.com/paritytech/parity/wiki/JSONRPC-trace-module) for internal calls implemented in Parity. It allows to do exactly that - query for any changes for the account.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302639770/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302702036",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-302702036",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 302702036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjcwMjAzNg==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-19T13:25:42Z",
    "updated_at": "2017-05-19T13:25:42Z",
    "author_association": "MEMBER",
    "body": "@Souptacular I gave a wrong link about EIP211 discussion: the last point in 2.a.  This should be [under discussion](https://github.com/ethereum/EIPs/pull/211#discussion_r117212647).  Currently, the link doesn't point to a discussion but to a test file.  Sorry.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/302702036/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/304542980",
    "html_url": "https://github.com/ethereum/pm/issues/14#issuecomment-304542980",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/14",
    "id": 304542980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDU0Mjk4MA==",
    "user": {
      "login": "Souptacular",
      "id": 3460120,
      "node_id": "MDQ6VXNlcjM0NjAxMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Souptacular",
      "html_url": "https://github.com/Souptacular",
      "followers_url": "https://api.github.com/users/Souptacular/followers",
      "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
      "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
      "organizations_url": "https://api.github.com/users/Souptacular/orgs",
      "repos_url": "https://api.github.com/users/Souptacular/repos",
      "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Souptacular/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-28T21:57:18Z",
    "updated_at": "2017-05-28T21:57:18Z",
    "author_association": "MEMBER",
    "body": "Notes are here: https://github.com/ethereum/pm/blob/master/All%20Core%20Devs%20Meetings/Meeting%2016.md\r\n\r\nClosing issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/304542980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
