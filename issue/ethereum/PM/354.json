{
  "url": "https://api.github.com/repos/ethereum/pm/issues/354",
  "repository_url": "https://api.github.com/repos/ethereum/pm",
  "labels_url": "https://api.github.com/repos/ethereum/pm/issues/354/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/pm/issues/354/comments",
  "events_url": "https://api.github.com/repos/ethereum/pm/issues/354/events",
  "html_url": "https://github.com/ethereum/pm/issues/354",
  "id": 940948723,
  "node_id": "MDU6SXNzdWU5NDA5NDg3MjM=",
  "number": 354,
  "title": "Ethereum Core Devs Meeting 118 Agenda",
  "user": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-07-09T17:30:32Z",
  "updated_at": "2021-09-05T08:56:50Z",
  "closed_at": "2021-07-23T20:19:07Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Meeting Info\r\n\r\n* [July 23, 2021, 14:00 UTC](https://savvytime.com/converter/utc-to-germany-berlin-united-kingdom-london-ny-new-york-city-ca-san-francisco-china-shanghai-japan-tokyo-australia-sydney/jul-23-2021/2pm)\r\n* Duration: 90 minutes\r\n* Youtube Stream: https://youtu.be/tjvviOLy0hw \r\n* Zoom: To be shared on #allcoredevs Discord server shortly before the call \r\n\r\n### Agenda\r\n1. [London](https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md) Updates \r\n     1. [Ropsten Issue](https://notes.ethereum.org/@timbeiko/ropsten-postmortem)\r\n     2. `gasPrice` for 1559 transactions. Comments against it: \r\n         * https://github.com/ethereum/eth1.0-specs/pull/251#issuecomment-884888019\r\n         * https://github.com/ethereum/eth1.0-specs/pull/251#issuecomment-881182475\r\n1. Other Discussion Items\r\n     1. https://github.com/ethereum/pm/issues/356\r\n     2. https://github.com/ethereum/pm/issues/361\r\n     2. https://github.com/ethereum/pm/issues/360\r\n     3. https://github.com/ethereum/pm/issues/357\r\n 1. Announcements\r\n     * https://github.com/ethereum/pm/issues/363\r\n     * PEEPanEIP on The Merge & Block Gas Limit ",
  "closed_by": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/pm/issues/354/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/pm/issues/354/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885063293",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-885063293",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 885063293,
    "node_id": "IC_kwDOBCfO0M40wP59",
    "user": {
      "login": "AlexeyAkhunov",
      "id": 13686139,
      "node_id": "MDQ6VXNlcjEzNjg2MTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexeyAkhunov",
      "html_url": "https://github.com/AlexeyAkhunov",
      "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
      "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
      "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
      "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T16:52:24Z",
    "updated_at": "2021-07-22T16:52:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure I will be able to join the meeting, but I would like to say that there was an interesting discovery made during the Ropsten incident, which we need to be aware of.\r\nBecause majority of miners use Geth, and Geth did not have the ability to repair Ropsten nodes that were past the bad block, miners had to perform full sync (not fast sync and not snap sync) before they could start mining on the correct chain.\r\nThis means that if something like that were to happen on the main net, there would be no way back, and Geth's version (whatever it is) would need to become de-facto the consensus rule.\r\n\r\nIn general, I think we need to have a better understanding about \"what we are going to do if X happens?\" where X is any of the issues that happened on the test-net. Yes, it is unpleasant to think about it, but we need some pre-decisions to relieve Geth devs from the responsibility to make all the hard decisions on the spot, which would be incredibly stressful.\r\n\r\nP.S. I have implemented functionality in Erigon today to be able to go back before any bad block in the past (and used it to repair Ropsten), but unfortunately we did not finish mining support for Erigon yet. And even if we did, it would take a while for miners to adopt our code. So this is not a proposed solution, but just extra info that such functionality may be possible to have.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885063293/reactions",
      "total_count": 9,
      "+1": 9,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885070927",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-885070927",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 885070927,
    "node_id": "IC_kwDOBCfO0M40wRxP",
    "user": {
      "login": "AlexeyAkhunov",
      "id": 13686139,
      "node_id": "MDQ6VXNlcjEzNjg2MTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexeyAkhunov",
      "html_url": "https://github.com/AlexeyAkhunov",
      "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
      "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
      "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
      "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T17:04:22Z",
    "updated_at": "2021-07-22T17:04:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ropsten incident also highlights another potential issue that may apply to many implementations (including currently Erigon). It seems that in the network where there are two competing chains co-existing, the minority parts seems to be very unstable, with nodes disconnecting each other and reconnecting all the time. This may be related to what I have observed I think: some nodes are propagating blocks/headers even though they are not on their best chain. This leads to these nodes being kicked out (disconnected) by other nodes on the correct chain. I am going to think how to make our implementation a bit more robust, but perhaps other needs to take a look as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885070927/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885231277",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-885231277",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 885231277,
    "node_id": "IC_kwDOBCfO0M40w46t",
    "user": {
      "login": "poojaranjan",
      "id": 29681685,
      "node_id": "MDQ6VXNlcjI5NjgxNjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29681685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poojaranjan",
      "html_url": "https://github.com/poojaranjan",
      "followers_url": "https://api.github.com/users/poojaranjan/followers",
      "following_url": "https://api.github.com/users/poojaranjan/following{/other_user}",
      "gists_url": "https://api.github.com/users/poojaranjan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poojaranjan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poojaranjan/subscriptions",
      "organizations_url": "https://api.github.com/users/poojaranjan/orgs",
      "repos_url": "https://api.github.com/users/poojaranjan/repos",
      "events_url": "https://api.github.com/users/poojaranjan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poojaranjan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T21:03:00Z",
    "updated_at": "2021-07-22T21:03:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "If time permits would like to make announcements for upcoming [PEEPanEIP](https://www.youtube.com/playlist?list=PL4cwHXAawZxqu0PKKyMzG_3BJV_xZTi1F) meetings for Merge & Block Gas Limit. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885231277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885687324",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-885687324",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 885687324,
    "node_id": "IC_kwDOBCfO0M40yoQc",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-23T14:40:39Z",
    "updated_at": "2021-07-23T14:40:39Z",
    "author_association": "MEMBER",
    "body": ">  and Geth did not have the ability to repair Ropsten nodes that were past the bad block\r\n\r\nThat's not correct. There are basically a couple of things that can happen during a fork. I'll outline a couple of scenarios, \r\n\r\n## Synced node followed wrong chain\r\n\r\nYou were running `geth`, and were in sync. At block `X`, the fork happened. Your node followed the erroneous higher-td chain, and at block `Z`, you stop the node and update to the patched version. \r\n\r\nProblem description; The node is still on the 'bad' chain.\r\nSolution: Do a `debug.setHead{X-1)` to jump to before the fork. This internally will rewind the chain to _some_ state before `X`. It might not be `X-1`, since `geth` might not _have_ the full state for that block, but it will have the state somewhere. Usually, geth flushes the state to disk every ~10K blocks (or whatever corresponds to 1 hour processing), and/or during shutdown. If geth is running in `gcmode=archive`, then it flushes every block. \r\n\r\n\r\n## Syncing in the presence of a wrong higher-td chain\r\n\r\nYou are syncing a `geth`-node,  and a fork has occurred at block `X`. Since the fork has already happened, and the erroneous chain has higher TD, you will most likely wind up on the 'wrong' side of the chain, with a pivot block `X+M`. If this happens, you _do not have_ any state for blocks `<X+M`, so you _cannot_ do `debug.setHead` to to resolve the situation. \r\n\r\nIn this case, a resync is required. However, you need to prevent geth from winding up on the wrong side of the fork. This can be done with the `whitelist` command line parmeter. \r\n```\r\n$ geth -h | grep white\r\n  --whitelist value                   Comma separated block number-to-hash mappings to enforce (<number>=<hash>)\r\n```\r\nSo you'd do `geth --whitelist 123123=0x2342fafa9af9af9af9af9af9` \r\n\r\nThe whitelist means that geth, when peering with another peer, will ask the peer \"what's your block `123123`\". If it gets a header back with a hash that doesn't match the whitelist, it willl disconnect from that peer. So essentially, the node will isolate itself from peers on the wrong chain, and only connect to peers that will deliver blocks from the shorter (but correct) chain. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885687324/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885892798",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-885892798",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 885892798,
    "node_id": "IC_kwDOBCfO0M40zaa-",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-23T20:19:07Z",
    "updated_at": "2021-07-23T20:19:07Z",
    "author_association": "MEMBER",
    "body": "Closed in favor of https://github.com/ethereum/pm/issues/365",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/885892798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/913110041",
    "html_url": "https://github.com/ethereum/pm/issues/354#issuecomment-913110041",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/354",
    "id": 913110041,
    "node_id": "IC_kwDOBCfO0M42bPQZ",
    "user": {
      "login": "kf106",
      "id": 25053735,
      "node_id": "MDQ6VXNlcjI1MDUzNzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25053735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kf106",
      "html_url": "https://github.com/kf106",
      "followers_url": "https://api.github.com/users/kf106/followers",
      "following_url": "https://api.github.com/users/kf106/following{/other_user}",
      "gists_url": "https://api.github.com/users/kf106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kf106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kf106/subscriptions",
      "organizations_url": "https://api.github.com/users/kf106/orgs",
      "repos_url": "https://api.github.com/users/kf106/repos",
      "events_url": "https://api.github.com/users/kf106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kf106/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-05T08:32:38Z",
    "updated_at": "2021-09-05T08:56:50Z",
    "author_association": "NONE",
    "body": "Does anyone have some clear instructions on how to actually fix your node if you upgraded after the split? With the actual numbers?\r\n\r\nI am running 1.10.8, and upgraded after the split.\r\n\r\nI noticed that the balances on my Ropsten node did not match those on MetaMask and Etherscan a couple of days ago, and that my block height was higher than Etherscan's, so clearly I was on the wrong chain.\r\n\r\n But 3.5 GHsh of hashing power was going into continuing that chain, so there are clearly other people still mining away on it too.\r\n\r\nThe Meeting 118.md article confusingly talks about Ropsten and then lists Mainnet blocks and hashes at the end. \r\n\r\nI _thought_ I had understood the issue and how to correct it, and did the following:\r\n\r\n* determined that the problem block was 10679538, so looked up the Etherscan hash for the correct block at that height.\r\n* added `--whitelist 10679538=0x569dccc25294768c23249db843ef7156e8e7c6c94cb82cd84a833f9c3e1d72e5` to my geth node command line\r\n* restarted my node\r\n* connected with `geth attach`\r\n* tried to rewind my current chain data to a couple of block before 10679539, namely 10679537, or 0xA2F4F1, by running `debug.setHead(\"0xA2F4F1\")`\r\n\r\nInstead of a fixed chain, what I got was a segmentation violation error:\r\n```\r\nINFO [09-05|11:14:18.197] Looking for peers                        peercount=1 tried=25 static=0\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x1c0 pc=0xb3180f]\r\n\r\ngoroutine 1856 [running]:\r\ngithub.com/ethereum/go-ethereum/eth/downloader.(*Downloader).findAncestorBinarySearch(0xc00037c540, 0xc034278270, 0x1, 0xa786c6, 0xa19561, 0xa19561, 0x0, 0x17c6020)\r\n  github.com/ethereum/go-ethereum/eth/downloader/downloader.go:966 +0x58f\r\ngithub.com/ethereum/go-ethereum/eth/downloader.(*Downloader).findAncestor(0xc00037c540, 0xc034278270, 0xc002a518c0, 0xc002a51b00, 0x0, 0x0)\r\n  github.com/ethereum/go-ethereum/eth/downloader/downloader.go:818 +0x3a5\r\ngithub.com/ethereum/go-ethereum/eth/downloader.(*Downloader).syncWithPeer(0xc00037c540, 0xc034278270, 0x6215089fee241794, 0x743c81e9df254112, 0xe8f5e2540c043313, 0xba9caf4ba6bf2ba, 0xc01709e260, 0x0, 0x0)\r\n  github.com/ethereum/go-ethereum/eth/downloader/downloader.go:475 +0x517\r\ngithub.com/ethereum/go-ethereum/eth/downloader.(*Downloader).synchronise(0xc00037c540, 0xc03488f880, 0x40, 0x6215089fee241794, 0x743c81e9df254112, 0xe8f5e2540c043313, 0xba9caf4ba6bf2ba, 0xc01709e260, 0xc000000001, 0x0, ...)\r\n  github.com/ethereum/go-ethereum/eth/downloader/downloader.go:431 +0x3b0\r\ngithub.com/ethereum/go-ethereum/eth/downloader.(*Downloader).Synchronise(0xc00037c540, 0xc03488f880, 0x40, 0x6215089fee241794, 0x743c81e9df254112, 0xe8f5e2540c043313, 0xba9caf4ba6bf2ba, 0xc01709e260, 0xc000000001, 0x4842c0, ...)\r\n  github.com/ethereum/go-ethereum/eth/downloader/downloader.go:326 +0x8c\r\ngithub.com/ethereum/go-ethereum/eth.(*handler).doSync(0xc004ca5b00, 0xc02ab9c300, 0x0, 0x0)\r\n  github.com/ethereum/go-ethereum/eth/sync.go:324 +0x125\r\ngithub.com/ethereum/go-ethereum/eth.(*chainSyncer).startSync.func1(0xc0001e0bd0, 0xc02ab9c300)\r\n  github.com/ethereum/go-ethereum/eth/sync.go:300 +0x38\r\ncreated by github.com/ethereum/go-ethereum/eth.(*chainSyncer).startSync\r\n  github.com/ethereum/go-ethereum/eth/sync.go:300 +0x76\r\n```\r\n\r\nI'm now using the following whitelist parameter and resyncing from scratch instead:\r\n```\r\n--whitelist 10679538=0x569dccc25294768c23249db843ef7156e8e7c6c94cb82cd84a833f9c3e1d72e5\r\n```\r\n\r\nI hope I've got that right.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/913110041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
