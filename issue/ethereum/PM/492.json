{
  "url": "https://api.github.com/repos/ethereum/pm/issues/492",
  "repository_url": "https://api.github.com/repos/ethereum/pm",
  "labels_url": "https://api.github.com/repos/ethereum/pm/issues/492/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/pm/issues/492/comments",
  "events_url": "https://api.github.com/repos/ethereum/pm/issues/492/events",
  "html_url": "https://github.com/ethereum/pm/issues/492",
  "id": 1159885491,
  "node_id": "I_kwDOBCfO0M5FInKz",
  "number": 492,
  "title": "Ethereum Core Devs Meeting 134 Agenda",
  "user": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2866593601,
      "node_id": "MDU6TGFiZWwyODY2NTkzNjAx",
      "url": "https://api.github.com/repos/ethereum/pm/labels/agenda",
      "name": "agenda",
      "color": "0052cc",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-03-04T17:31:30Z",
  "updated_at": "2022-03-23T13:56:23Z",
  "closed_at": "2022-03-23T13:56:23Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Meeting Info\r\n\r\n* [March 18, 2022, 14:00 UTC](https://savvytime.com/converter/utc-to-germany-berlin-united-kingdom-london-ny-new-york-city-ca-san-francisco-china-shanghai-japan-tokyo-australia-sydney/mar-18-2022/2pm)\r\n  * **Note: Daylight Savings time will start in Americas before the call, but the call is \"fixed\" at 14:00 UTC - double check your local time!**\r\n* Duration: 90 minutes\r\n* Youtube Stream: https://youtu.be/Lbsjw-lzMIw\r\n* Zoom: To be shared on #allcoredevs Discord server shortly before the call \r\n\r\n### Agenda\r\n\r\n* Merge Updates \r\n    * [Kiln ðŸ”¥ðŸ§±  Updates](https://hackmd.io/@n0ble/kiln-spec)\r\n* https://github.com/ethereum/pm/issues/450\r\n    * https://github.com/ethereum/pm/issues/495 \r\n    * EIP-4844 updates\r\n* Core EIPs & executable specs ([link](https://notes.ethereum.org/@timbeiko/executable-eips)) ",
  "closed_by": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/pm/issues/492/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/pm/issues/492/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1065287085",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1065287085",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1065287085,
    "node_id": "IC_kwDOBCfO0M4_fv2t",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-11T16:41:38Z",
    "updated_at": "2022-03-11T16:41:38Z",
    "author_association": "MEMBER",
    "body": "i'd like to continue discussing how we want to implement validator withdrawals for inclusion in Shanghai.\r\n\r\ni've put together a \"meta-spec\" with links to the latest thinking on changes at the consensus, execution layers and their interface; along with some explanatory prose walking through the overall flow: \r\n\r\nhttps://notes.ethereum.org/@ralexstokes/Skp1mPSb9\r\n\r\nin particular, there are two EIPs for execution client devs showcasing two different approaches to representing withdrawals at the execution layer and it would be great to reach consensus on one route during the call",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1065287085/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1067520276",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1067520276",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1067520276,
    "node_id": "IC_kwDOBCfO0M4_oREU",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T03:19:19Z",
    "updated_at": "2022-03-18T03:58:15Z",
    "author_association": "MEMBER",
    "body": "Agenda item suggestion: EIP-4844 Blob transactions\r\n\r\nProgress summary:\r\n- [New meta-spec](https://hackmd.io/@protolambda/eip4844-meta), lists all different resources / prototypes / etc.\r\n- [Consensus specs PR](https://github.com/ethereum/consensus-specs/pull/2850) ready\r\n- [Execution-APIs PR](https://github.com/ethereum/execution-apis/pull/197) ready\r\n- Benchmarks ([bench code](https://github.com/protolambda/go-ethereum/blob/datablobs/tests/kzg_bench_test.go) done, machines / BLS libs being compared now). Including `VerifyBlobs` to batch-verify multiple blobs at once (much more efficient)\r\n- **Super new**: [EIP-4844 implementer notes](https://hackmd.io/@protolambda/eip-4844-implementer-notes), inlcuding benchmarking and optimization information.\r\n- Ongoing prototype testing (and work-in-progress interop work with Prysm)\r\n\r\nMeta: EIP process with consensus/execution-layers. @timbeiko has a draft proposal for this type of EIP? (also relevant to withdrawals EIP)\r\n\r\nBonus: Vitalik wrote [a post about trusted setups](https://vitalik.ca/general/2022/03/14/trustedsetup.html), good information for the KZG trusted setup.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1067520276/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1071196084",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1071196084",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1071196084,
    "node_id": "IC_kwDOBCfO0M4_2Se0",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-17T18:33:41Z",
    "updated_at": "2022-03-17T18:33:41Z",
    "author_association": "NONE",
    "body": "I'm not able to comment at https://notes.ethereum.org/@timbeiko/executable-eips, (account closed, it says) so I'll do it here.\r\n\r\nFirst, a nit.  It says the current process starts with:\r\n> Pre-Draft: Open PR in EIPs Github repository, no requirements\r\n\r\nBut I think that pre-drafts take place elsewhere: blog posts, HackMds, personal GitHub repos and the like.  I don't want PRs cluttering the EIP repo until there is a champion and a draft for a solid EIP.\r\n\r\nA bigger problem.  The proposal is to start here instead:\r\n> Pre-Draft: Open PR in EIPs Github repository, Open PR in Executable Specs Repository, no requirements.\r\n\r\nWhich we means we have the clutter of pre-proposals in two repos.  Worse, the rest of the proposed process seems to involve maintaining PRs in sync against two repos.  I think that is just too difficult.  Instead, I think there needs to be a hand-off point -- such as the Draft staying in the EIP repo until it goes to Final.\r\n\r\nWhich gets to the substance of my problem:\r\n> Make the following changes to the [template](https://github.com/ethereum/EIPs/blob/master/eip-template.md)[](https://notes.ethereum.org/@timbeiko/executable-eips#Specification):\r\n> > Specification\r\n> > >Replace with link(s) to PRs or Commits in:\r\n> > https://github.com/ethereum/execution-specs/\r\n> >https://github.com/ethereum/consensus-specs/\r\n\r\nThis seems to mean that the authors and the reviewers of Core EIPs will need be competent programmers in the language of the Execution Specs.  In which case I might need to stop writing and reviewing Core EIPs.\r\n\r\nFrom my own experience...  The C++ Standard itself was written in a fairly precise mix of formal notation, maths, and technical English.  In the end only the lead Editor was trusted to get it right.  Ordinary humans -- even compiler authors -- weren't worthy.  Proposals to change the Standard were not generally presented in that dialect.  They were typically a mix of C++ and more ordinary technical English -- the kind ordinary experts can read and write.  New features were typically implemented in at least one compiler or library as well.  The \"standardese\" for accepted proposals basically got reverse-engineered by the Editor from these sources.\r\n\r\nSo I'd prefer to see the current EIP process remain close to as it is, with the translation to Execution Specs happening further down the road.  As I understand it the Execution Specs are an executable client, so will (like the other clients) have the Final EIPs implemented and running on the testnets well before we go live.  Once they are live this executable spec -- being in consensus on the network -- is ground truth, and the EIP subject to errata if it differs.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1071196084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1071399679",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1071399679",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1071399679,
    "node_id": "IC_kwDOBCfO0M4_3EL_",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-17T20:34:24Z",
    "updated_at": "2022-03-17T20:34:24Z",
    "author_association": "NONE",
    "body": "A second objection to demanding that EIPs use a particular specification language is that the best language for a proposal will vary.  It might be mathematical or graphical notation specific to its domain.  It might be more abstract and declarative than executable.  It might even be English.  The proposal itself shouldn't need to say how best to implement itself in a particular language.\r\n\r\nPlease don't take any of this as an objection to an executable specification.  Rather, I think the beauty is that the executable specification emerges directly out of the \"literate programming\" effort of maintaining the client that instantiates that spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1071399679/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1072435848",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1072435848",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1072435848,
    "node_id": "IC_kwDOBCfO0M4_7BKI",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-18T13:56:10Z",
    "updated_at": "2022-03-18T13:56:31Z",
    "author_association": "MEMBER",
    "body": "> I'm not able to comment at https://notes.ethereum.org/@timbeiko/executable-eips, (account closed, it says) so I'll do it here.\r\n\r\nGood point, most people won't be able to comment on it. I've opened an EthMagicians thread, and pasted your thoughts: https://ethereum-magicians.org/t/core-eips-in-an-executable-spec-world/8640 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1072435848/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1076405864",
    "html_url": "https://github.com/ethereum/pm/issues/492#issuecomment-1076405864",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/492",
    "id": 1076405864,
    "node_id": "IC_kwDOBCfO0M5AKKZo",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T13:56:23Z",
    "updated_at": "2022-03-23T13:56:23Z",
    "author_association": "MEMBER",
    "body": "Closed in favor of https://github.com/ethereum/pm/issues/500",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1076405864/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
