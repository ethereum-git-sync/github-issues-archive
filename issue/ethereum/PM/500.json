{
  "url": "https://api.github.com/repos/ethereum/pm/issues/500",
  "repository_url": "https://api.github.com/repos/ethereum/pm",
  "labels_url": "https://api.github.com/repos/ethereum/pm/issues/500/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/pm/issues/500/comments",
  "events_url": "https://api.github.com/repos/ethereum/pm/issues/500/events",
  "html_url": "https://github.com/ethereum/pm/issues/500",
  "id": 1178159777,
  "node_id": "I_kwDOBCfO0M5GOUqh",
  "number": 500,
  "title": "Ethereum Core Devs Meeting 135 Agenda",
  "user": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2866593601,
      "node_id": "MDU6TGFiZWwyODY2NTkzNjAx",
      "url": "https://api.github.com/repos/ethereum/pm/labels/agenda",
      "name": "agenda",
      "color": "0052cc",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2022-03-23T13:56:05Z",
  "updated_at": "2022-04-04T15:35:50Z",
  "closed_at": "2022-04-04T15:35:50Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Meeting Info\r\n\r\n* [April 1, 2022, 14:00 UTC](https://savvytime.com/converter/utc-to-germany-berlin-united-kingdom-london-ny-new-york-city-ca-san-francisco-china-shanghai-japan-tokyo-australia-sydney/apr-1-2022/2pm)\r\n  * **Note: Daylight Savings time will start in Europe before the call, but the call is \"fixed\" at 14:00 UTC - double check your local time!**\r\n* Duration: 90 minutes\r\n* Youtube Stream: https://youtu.be/1QU8r9-SJDc\r\n* Zoom: To be shared on #allcoredevs Discord server shortly before the call \r\n\r\n### Agenda\r\n\r\n* Merge Updates \r\n    * [Kiln ðŸ”¥ðŸ§±  Updates](https://hackmd.io/@n0ble/kiln-spec)\r\n    * Shadow Fork Updates\r\n    * `latestValidHash` EL implementations ([context](https://discord.com/channels/595666850260713488/892088344438255616/957969488307953666), [summary](https://hackmd.io/GDc0maGsQeKfP8o2C7L52w))\r\n* https://github.com/ethereum/pm/issues/450\r\n    * [EIP-4895 updates](https://github.com/ethereum/EIPs/pull/4957)\r\n    * [EIP-1153](https://github.com/ethereum/pm/issues/450#issuecomment-1077935239)\r\n    * [EIP-4758](https://eips.ethereum.org/EIPS/eip-4758)\r\n* https://github.com/goerli/testnet/issues/97",
  "closed_by": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/pm/issues/500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/pm/issues/500/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1076508954",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1076508954",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1076508954,
    "node_id": "IC_kwDOBCfO0M5AKjka",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T15:56:45Z",
    "updated_at": "2022-04-01T13:24:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Before we merge Goerli, I would like to inflate the supply. So I decided not to create an EIP to not distract too many people with that.\r\n\r\n* ~~https://github.com/goerli/testnet/issues/97~~\r\n* https://github.com/goerli/testnet/issues/101\r\n\r\nAny feedback would be appreciated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1076508954/reactions",
      "total_count": 5,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1077948515",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1077948515",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1077948515,
    "node_id": "IC_kwDOBCfO0M5AQDBj",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T18:58:55Z",
    "updated_at": "2022-03-24T18:58:55Z",
    "author_association": "MEMBER",
    "body": "Copying Moody's comment from the [Shanghai Planning issue](https://github.com/ethereum/pm/issues/450#issuecomment-1077935239) here: \r\n\r\n> \r\n> I'd like to discuss specifically moving [EIP-1153](https://eips.ethereum.org/EIPS/eip-1153) to CFI in [ACD 135](https://github.com/ethereum/pm/issues/500) for the reasons:\r\n> - No interactions with the other EIPs\r\n> - It cannot be properly supported via changes to SSTORE/SLOAD and refunds, because the work of loading an empty slot cannot be avoided\r\n> - It enables [more efficient smart contract patterns](https://ethereum-magicians.org/t/eip-1153-transient-storage-opcodes/553/45?u=moodysalem) that are [currently infeasible due to gas](https://ethereum-magicians.org/t/eip-1153-transient-storage-opcodes/553/66?u=moodysalem)\r\n>   - The earlier it's available, the more developers can prepare for it\r\n> - Many protocol developers have expressed they would like to see it implemented: [z0age](https://twitter.com/z0age) from Opensea, [fredlacs](https://github.com/fredlacs) from Arbitrum, [brockjelmore](https://twitter.com/brockjelmore) from Nascent, [frangio](https://twitter.com/frangio_) from OpenZeppelin, and [@tynes](https://github.com/tynes) from Optimism built the proof of concept at ETHDenver\r\n> - It factors into the design considerations of long term EVM changes, e.g. [should Verkle trie storage have refunds for transient storage?](https://discord.com/channels/595666850260713488/706868829900505180/921306055600898079)\r\n> - It is relatively small and easy to implement, there is already a WIP reference implementation in the [EthereumJS VM](https://github.com/ethereumjs/ethereumjs-monorepo/pull/1768/files#diff-aa2a1bb15deed60b51c917fda691e00619e94a5640a26f6d527f266875b49564)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1077948515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1081742534",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1081742534",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1081742534,
    "node_id": "IC_kwDOBCfO0M5AehTG",
    "user": {
      "login": "yperbasis",
      "id": 34320705,
      "node_id": "MDQ6VXNlcjM0MzIwNzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/34320705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yperbasis",
      "html_url": "https://github.com/yperbasis",
      "followers_url": "https://api.github.com/users/yperbasis/followers",
      "following_url": "https://api.github.com/users/yperbasis/following{/other_user}",
      "gists_url": "https://api.github.com/users/yperbasis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yperbasis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yperbasis/subscriptions",
      "organizations_url": "https://api.github.com/users/yperbasis/orgs",
      "repos_url": "https://api.github.com/users/yperbasis/repos",
      "events_url": "https://api.github.com/users/yperbasis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yperbasis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-29T11:17:06Z",
    "updated_at": "2022-03-29T11:17:22Z",
    "author_association": "MEMBER",
    "body": "To my mind [EIP-4758](https://eips.ethereum.org/EIPS/eip-4758): Deactivate SELFDESTRUCT is a higher priority than [EIP-1153](https://eips.ethereum.org/EIPS/eip-1153). EIP-4758 is a potentially significant simplification. Also EIP-4758 is a prerequisite for the Verkle tree.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1081742534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1081964597",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1081964597",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1081964597,
    "node_id": "IC_kwDOBCfO0M5AfXg1",
    "user": {
      "login": "moodysalem",
      "id": 7897876,
      "node_id": "MDQ6VXNlcjc4OTc4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7897876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moodysalem",
      "html_url": "https://github.com/moodysalem",
      "followers_url": "https://api.github.com/users/moodysalem/followers",
      "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
      "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
      "organizations_url": "https://api.github.com/users/moodysalem/orgs",
      "repos_url": "https://api.github.com/users/moodysalem/repos",
      "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moodysalem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-29T14:47:10Z",
    "updated_at": "2022-03-29T14:47:10Z",
    "author_association": "NONE",
    "body": "> To my mind [EIP-4758](https://eips.ethereum.org/EIPS/eip-4758): Deactivate SELFDESTRUCT is a higher priority than [EIP-1153](https://eips.ethereum.org/EIPS/eip-1153). EIP-4758 is a potentially significant simplification. Also EIP-4758 is a prerequisite for the Verkle tree.\r\n\r\nI think deactivating `SELFDESTRUCT` is more controversial. For example, some people [might use self destruct for upgradeability](https://github.com/frangio/cacheable-beacon-proxy/blob/db4c46dbe0c1ed88b3f88fd736bca58e4877f3f2/contracts/CacheableBeaconProxy.sol). And EIP-1153 _also_ allows for simplification of gas accounting rules in the future.\r\n\r\nI'd love to discuss further on the call. They're obviously not exclusive, but in the case of EIP-1153 we have many protocol developers who want it and are willing to do or fund the work, and the chance of breakage due to inclusion of EIP-1153 is close to zero.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1081964597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1082401040",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1082401040",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1082401040,
    "node_id": "IC_kwDOBCfO0M5AhCEQ",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-29T21:43:10Z",
    "updated_at": "2022-03-29T21:43:10Z",
    "author_association": "MEMBER",
    "body": "we decided on the overall approach to validator withdrawals on the last ACD and moved EIP-4895 to CFI.\r\n\r\nthere was some rough consensus around a few remaining details and I've put those details into writing in an update to 4895 here: https://github.com/ethereum/EIPs/pull/4957\r\n\r\nI'd like to run thru the high-level points of this update on the call to make sure everyone is on the same page :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1082401040/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085482218",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085482218",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085482218,
    "node_id": "IC_kwDOBCfO0M5AsyTq",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T06:24:43Z",
    "updated_at": "2022-04-01T06:24:43Z",
    "author_association": "NONE",
    "body": "I have an emergency EIP to add to the agenda.\r\n\r\n[EIP-666](https://github.com/ethereum/EIPs/blob/462e3571d1b5211ceaf16d4b7d06db6fd32a2eb8/EIPS/eip-666.md)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085482218/reactions",
      "total_count": 11,
      "+1": 0,
      "-1": 0,
      "laugh": 7,
      "hooray": 4,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085820911",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085820911",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085820911,
    "node_id": "IC_kwDOBCfO0M5AuE_v",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T12:10:19Z",
    "updated_at": "2022-04-01T12:10:19Z",
    "author_association": "MEMBER",
    "body": "I would like to touch `latestValidHash` support in EL clients, [here](https://hackmd.io/GDc0maGsQeKfP8o2C7L52w) are my rough thoughts on how it could be implemented",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085820911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085894702",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085894702",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085894702,
    "node_id": "IC_kwDOBCfO0M5AuXAu",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T13:22:21Z",
    "updated_at": "2022-04-01T13:23:32Z",
    "author_association": "MEMBER",
    "body": "Oops, I meant to post [this](https://github.com/ethereum/pm/issues/450#issuecomment-1085860500) here, but posted it to the shanghai planning instead\r\n\r\n> To save some time, here are my thoughts around EIP-1153\r\n> \r\n>   * It's a nice feature, of course we'd want it\r\n>   * However, it's been a backburner-nice-to-have since 2018, the reason (I think) being that it doesn't revolutionize anything, just makes certain usecases easier/cheaper/(safer?).\r\n>   * And it is quite nontrivial to implement,\r\n>   * And also needs a lot of efforts to fully test\r\n>   * The implementation must also be tested from a DoS perspective (a quick napkin calculation tells me that with `30M` gas, up to `9MB` of data can be stored, which is probably fine, but there are journalling to take into consideration too -- this would entail a journal with 300K items to roll back)\r\n>   * Unfortunately, we have a _lot_ of things competing for inclusion in Shanghai. In \"competition\" with those, I would _not_ pick 1153 to be selected.\r\n>   * Also, I'd be curious to hear what @AlexeyAkhunov thinks about it. Still want it?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085894702/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085900664",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085900664",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085900664,
    "node_id": "IC_kwDOBCfO0M5AuYd4",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T13:28:34Z",
    "updated_at": "2022-04-01T13:28:34Z",
    "author_association": "MEMBER",
    "body": "> I think deactivating `SELFDESTRUCT` is more controversial. For example, some people [might use self destruct for upgradeability](https://github.com/frangio/cacheable-beacon-proxy/blob/db4c46dbe0c1ed88b3f88fd736bca58e4877f3f2/contracts/CacheableBeaconProxy.sol). And EIP-1153 _also_ allows for simplification of gas accounting rules in the future.\r\n\r\nAbout this, I know @jwasinger has done a pretty thorough investigation. He has a repo about it here: https://github.com/jwasinger/eth-selfdestruct-analysis . \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085900664/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085940647",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085940647",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085940647,
    "node_id": "IC_kwDOBCfO0M5AuiOn",
    "user": {
      "login": "moodysalem",
      "id": 7897876,
      "node_id": "MDQ6VXNlcjc4OTc4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7897876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moodysalem",
      "html_url": "https://github.com/moodysalem",
      "followers_url": "https://api.github.com/users/moodysalem/followers",
      "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
      "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
      "organizations_url": "https://api.github.com/users/moodysalem/orgs",
      "repos_url": "https://api.github.com/users/moodysalem/repos",
      "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moodysalem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T14:01:18Z",
    "updated_at": "2022-04-01T14:07:19Z",
    "author_association": "NONE",
    "body": "> The implementation must also be tested from a DoS perspective (a quick napkin calculation tells me that with 30M gas, up to 9MB of data can be stored, which is probably fine, but there are journalling to take into consideration too -- this would entail a journal with 300K items to roll back)\r\n\r\nThe estimates are covered in [security considerations](https://eips.ethereum.org/EIPS/eip-1153#security-considerations). However the time complexity of the journaling is not deeply considered in the gas costs. Currently in the [EthereumJS VM](https://github.com/ethereumjs/ethereumjs-monorepo/blob/7957ffc1ba170ef24167e84004239ae23f451fea/packages/vm/src/state/transientStorage.ts) implementation, the time complexity is as follows:\r\n- on `TSTORE` `O(1)` (write into map and list)\r\n- on `TLOAD` `O(1)` (read from map)\r\n- on call context creation `O(1)` (pop new changeset into map)\r\n- on revert is `O(N)` where N = unique keys written in the call that reverted\r\n- on return is `O(N)` where N = unique keys written in the call that reverted\r\n\r\nI'd have to check but I think 300k memory accesses in the worst case might be pretty fast still.\r\n\r\n> And it is quite nontrivial to implement,\r\n> And also needs a lot of efforts to fully test\r\n> Unfortunately, we have a lot of things competing for inclusion in Shanghai. In \"competition\" with those, I would not pick 1153 to be selected.\r\n\r\nAre they in competition if we do all the work? We are willing to do the work or find people to do the work and fund it. If we do all the work and have working implementations in at least geth and 1-2 other clients, and comprehensive tests by late summer, can we assume this is not an issue? We are just asking for it to be _considered_ for inclusion so we can commit to doing the work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085940647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085949938",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085949938",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085949938,
    "node_id": "IC_kwDOBCfO0M5Aukfy",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T14:09:22Z",
    "updated_at": "2022-04-01T14:11:43Z",
    "author_association": "MEMBER",
    "body": "In that case, I think there's a different attack that EthereumJS is vulnerable too, namely basically what geth was vulnerable to  back in the shanghai days. \r\n\r\nWe had map-backed \"journalling\". With map-backing, as opposed to linear log/journal, when one enters a new scope, there are two choices. Either you copy the outer map `A` into a brand new \"inner\" map `B`, and when the scope is done, you either just continue using the `B` map (and drop `A`), or if a revert happens, you drop `B` and continue with `A`. \r\n\r\nWith that schema, the attack is to fill up `A` with a lot of items, and then force a lot of copying: entering into scopes recursively, and/or iteratively. \r\n\r\nThe second choice is to not copy the outer map, but instead keep it, but have a second `B` map which contains the scope-local differences. And then you maintain a hierarchy of such maps. The problem with this approach is that to lookup a piece of data, you may have to traverse the entire hierarchy to the outermost scope. \r\n\r\nAnyway, in geth, we use a journal, which is just a series of change-events, which can be applied in reverse if needed. \r\n\r\n> Are they in competition if we do all the work? \r\n\r\nUnfortunately, yes\r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085949938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085966888",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085966888",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085966888,
    "node_id": "IC_kwDOBCfO0M5Auooo",
    "user": {
      "login": "moodysalem",
      "id": 7897876,
      "node_id": "MDQ6VXNlcjc4OTc4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7897876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moodysalem",
      "html_url": "https://github.com/moodysalem",
      "followers_url": "https://api.github.com/users/moodysalem/followers",
      "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
      "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
      "organizations_url": "https://api.github.com/users/moodysalem/orgs",
      "repos_url": "https://api.github.com/users/moodysalem/repos",
      "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moodysalem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T14:23:09Z",
    "updated_at": "2022-04-01T14:24:49Z",
    "author_association": "NONE",
    "body": "> In that case, I think there's a different attack that EthereumJS is vulnerable too, namely basically what geth was vulnerable to back in the shanghai days.\r\n\r\nIn the current implementation I agree. If you create a very deep call stack, write a bunch of keys, and then return from the innermost call, you will copy the map for each call in the callstack. The memory complexity will not be more than `O(10MB)` because the innermost map is discarded after it's merged and can be garbage collected. However, you will have to copy `O(100k)` keys per context which could be very bad.\r\n\r\nOne easy solution is limiting the number of keys in the per-address map to 1024. That is more than enough for our use case.\r\n\r\n> Anyway, in geth, we use a journal, which is just a series of change-events, which can be applied in reverse if needed.\r\n\r\nDo you have to iterate the journal to load a key with this implementation? The stack of maps solution (second choice) seems better than a journal of changes.\r\n\r\n> Unfortunately, yes\r\n\r\nCan you elaborate? Per @gcolvin, this EIP does not interact with other EIPs being considered. We can also implement it in clients without turning it on with Shanghai, if it's CFI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085966888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085986144",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1085986144",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1085986144,
    "node_id": "IC_kwDOBCfO0M5AutVg",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T14:41:11Z",
    "updated_at": "2022-04-01T14:41:11Z",
    "author_association": "MEMBER",
    "body": "> Do you have to iterate the journal to load a key with this implementation? The stack of maps solution (second choice) seems better than a journal of changes.\r\n\r\nNo, the data is in a map. Reverting means applying the change-entries in reverse.\r\n\r\n> Can you elaborate?\r\n\r\nI mean, this is just all my opinion, but this is a large implementation. I don't think any client-implementation will just accept a PR without review. Reviewing a PR (and especially a PR which touches core/consensus) takes more time than writing the code. Reviewing the tests, to ensure they cover all edgecases, testing any DoS-attacks etc etc all takes time. \r\n\r\nAnyway, I just wanted to signal my 5c early to save some time on the call. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1085986144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1086533434",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1086533434",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1086533434,
    "node_id": "IC_kwDOBCfO0M5Awy86",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-02T03:26:45Z",
    "updated_at": "2022-04-02T03:26:45Z",
    "author_association": "NONE",
    "body": " > Can you elaborate? Per @gcolvin, this EIP does not interact with other EIPs being considered. We can also implement it in clients without turning it on with Shanghai, if it's CFI.\r\n\r\nNot sure where I said that, @moodysalem, but I suspect I spoke only in terms of semantics.  Regardless, I'm more likely to be wrong about these things than @holiman.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1086533434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1086620421",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1086620421",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1086620421,
    "node_id": "IC_kwDOBCfO0M5AxIMF",
    "user": {
      "login": "moodysalem",
      "id": 7897876,
      "node_id": "MDQ6VXNlcjc4OTc4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7897876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moodysalem",
      "html_url": "https://github.com/moodysalem",
      "followers_url": "https://api.github.com/users/moodysalem/followers",
      "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
      "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
      "organizations_url": "https://api.github.com/users/moodysalem/orgs",
      "repos_url": "https://api.github.com/users/moodysalem/repos",
      "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moodysalem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-02T11:31:44Z",
    "updated_at": "2022-04-02T11:31:44Z",
    "author_association": "NONE",
    "body": ">  > Can you elaborate? Per @gcolvin, this EIP does not interact with other EIPs being considered. We can also implement it in clients without turning it on with Shanghai, if it's CFI.\n> \n> \n> \n> Not sure where I said that, @moodysalem, but I suspect I spoke only in terms of semantics.  Regardless, I'm more likely to be wrong about these things than @holiman.\n> \n> \n\nhttps://github.com/ethereum/pm/issues/450#issuecomment-1014942130\n\nI don't believe @holiman ever contradicted this statement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1086620421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1087710370",
    "html_url": "https://github.com/ethereum/pm/issues/500#issuecomment-1087710370",
    "issue_url": "https://api.github.com/repos/ethereum/pm/issues/500",
    "id": 1087710370,
    "node_id": "IC_kwDOBCfO0M5A1SSi",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-04T15:35:48Z",
    "updated_at": "2022-04-04T15:35:48Z",
    "author_association": "MEMBER",
    "body": "Closed in favor of https://github.com/ethereum/pm/issues/508, we can keep using https://github.com/ethereum/pm/issues/438 to discuss 1153",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/pm/issues/comments/1087710370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
