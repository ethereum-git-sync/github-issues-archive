{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/688",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/688/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/688/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/688/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/688",
  "id": 322881628,
  "node_id": "MDU6SXNzdWUzMjI4ODE2Mjg=",
  "number": 688,
  "title": "Shard syncer tests are nearly impossible to debug and take a long time to run",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-05-14T16:04:39Z",
  "updated_at": "2018-07-20T20:36:41Z",
  "closed_at": "2018-07-20T20:36:41Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "So, I didn't notice these new tests until they were merged, and I only did because my latest PR (#684) introduced some changes to `p2p.Server` that caused those tests to break. Unfortunately, they are quite complex, high-level, integration tests that give no visibility into what's going on under the hood, so when they break it is a nightmare to debug. Also, [they take a really long time to run](https://circleci.com/gh/ethereum/py-evm/8621?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link):\r\n\r\n> 19.36s call     tests/p2p/test_sharding.py::test_shard_syncer[3-connections1]\r\n> 18.91s call     tests/p2p/test_sharding.py::test_shard_syncer[3-connections2]\r\n> 10.41s call     tests/p2p/test_sharding.py::test_shard_syncer[2-connections0]\r\n\r\nAt this point, I understand writing unit tests for those parts will be tricky, but having a complex integration test like this as part of our CI is likely to slow down development of p2p-related code significantly -- I just spent more than 1h to get them to pass again. I think we'd be better off skipping those tests in CI, the same way we do for the tests in `tests/p2p/test_lightchain_integration.py`",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/688/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/688/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388878209",
    "html_url": "https://github.com/ethereum/py-evm/issues/688#issuecomment-388878209",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/688",
    "id": 388878209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODg3ODIwOQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T16:25:32Z",
    "updated_at": "2018-05-14T16:25:32Z",
    "author_association": "MEMBER",
    "body": "I thought sharding was dropped from the repo in https://github.com/ethereum/py-evm/pull/518 - if that's correct, then the tests seem like cruft. But I haven't been following the sharding work closely enough to be sure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388878209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388884499",
    "html_url": "https://github.com/ethereum/py-evm/issues/688#issuecomment-388884499",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/688",
    "id": 388884499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODg4NDQ5OQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T16:45:41Z",
    "updated_at": "2018-05-14T16:45:41Z",
    "author_association": "MEMBER",
    "body": "Sorry for that! I'm also not happy with those tests, but just disabling them because they break is not a good long-term solution. The shard syncer and similar services (like the various chain syncers) are important components which should be tested in the CI (and are logic wise comparatively simple as well -- the shard syncer is at least).\r\n\r\nI think the root issue is that there isn't an easy way to test the high-level service code only without running all of the low level code networking code as well. Do you think creating a `MockPeerPool` that mocks all the handshaking/connection/message passing stuff away, but has the right interface plus some entry points for test functions (like `add_peer`, `remove_peer`) would be a viable solution?\r\n\r\n> I thought sharding was dropped from the repo in #518 - if that's correct, then the tests seem like cruft.\r\n\r\nNo, the code that belonged to a now deprecated specification, the tests here are new.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388884499/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388899478",
    "html_url": "https://github.com/ethereum/py-evm/issues/688#issuecomment-388899478",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/688",
    "id": 388899478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODg5OTQ3OA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T17:32:57Z",
    "updated_at": "2018-05-14T17:32:57Z",
    "author_association": "MEMBER",
    "body": "> Sorry for that! I'm also not happy with those tests, but just disabling them because they break is not a good long-term solution\r\n\r\nIt's not because they break that I suggest we skip them during the usual CI, it's because running a p2p.Server means running a PeerPool, DiscoveryProtocol, the coroutine that periodically refreshes the NAT portmap the asyncio server that listens for incoming peer connections, and now the syncer as well. We do need an integration test to make sure that all those things work together, but it should be a very basic _integration_ test. I think tests for the shard syncer (or any other parts of py-evm) that run as part of our CI should not be running all of these services, because it makes the tests very fragile and hard to debug. And the shard syncer tests make things even worse because they do nasty things (like setting chaindb to None in p2p.Server) that should not be expected to work.\r\n\r\nI think it might be worth try mocking those services, yeah",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/388899478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389559413",
    "html_url": "https://github.com/ethereum/py-evm/issues/688#issuecomment-389559413",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/688",
    "id": 389559413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU1OTQxMw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T15:23:30Z",
    "updated_at": "2018-05-16T15:23:30Z",
    "author_association": "MEMBER",
    "body": "I've made this suggestion on gitter, but pasting it here as well, just in case:\r\n\r\n> I think a good starting point would be to modify those tests so that they don't run a Server and instead just create a mock PeerPool with directly linked peers, passing that to ShardSyncer\r\nthat should be relatively straightforward to do and would be a huge improvement wrt the readability/maintainability of those tests\r\n\r\nI just did something along those lines for test_server.py, btw: https://github.com/ethereum/py-evm/pull/706/files",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389559413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
