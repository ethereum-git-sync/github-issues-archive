{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/2096",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/2096/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/2096/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/2096/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/2096",
  "id": 1665615001,
  "node_id": "I_kwDOBJ456s5jR0SZ",
  "number": 2096,
  "title": "Possible DoS in `modexp` Precompiles",
  "user": {
    "login": "yixiao5428",
    "id": 17737552,
    "node_id": "MDQ6VXNlcjE3NzM3NTUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/17737552?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yixiao5428",
    "html_url": "https://github.com/yixiao5428",
    "followers_url": "https://api.github.com/users/yixiao5428/followers",
    "following_url": "https://api.github.com/users/yixiao5428/following{/other_user}",
    "gists_url": "https://api.github.com/users/yixiao5428/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yixiao5428/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yixiao5428/subscriptions",
    "organizations_url": "https://api.github.com/users/yixiao5428/orgs",
    "repos_url": "https://api.github.com/users/yixiao5428/repos",
    "events_url": "https://api.github.com/users/yixiao5428/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yixiao5428/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-13T03:15:23Z",
  "updated_at": "2023-04-13T16:09:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### What happened?\r\n\r\nRecently a [CVE](https://nvd.nist.gov/vuln/detail/CVE-2023-28431) was assigned to Frontier, and Frontier's Security Advisory also published this [issue](https://github.com/advisories/GHSA-fcmm-54jp-7vf6).\r\n\r\nSpecifically, Frontier's rust implementation of EVM treated even modulus and odd separately, i.e., odd modulus and even modulus, using the fast Montgomery multiplication and the slow plain power algorithm, respectively. This gas cost discrepancy was not accounted for in the `modexp` precompile, leading to possible denial of service attacks.\r\n\r\nThough implemented by different languages, we found that this issue seems to occur in py-evm too. You can see that the calculation of the gas fee [here](https://github.com/ethereum/py-evm/blob/158f0c9ffec16fa5903297636ba52fe58dce60c6/eth/precompiles/modexp.py#L71-L89) missed treating odd and even modulus separately.\r\n\r\n### Code that produced the error\r\n\r\n```python\r\ndef _compute_modexp_gas_fee_eip_198(data: bytes) -> int:\r\n    base_length, exponent_length, modulus_length = extract_lengths(data)\r\n\r\n    first_32_exponent_bytes = zpad_right(\r\n        data[96 + base_length:96 + base_length + exponent_length],\r\n        to_size=min(exponent_length, 32),\r\n    )[:32]\r\n    adjusted_exponent_length = _compute_adjusted_exponent_length(\r\n        exponent_length,\r\n        first_32_exponent_bytes,\r\n    )\r\n    complexity = _compute_complexity(max(modulus_length, base_length))\r\n\r\n    gas_fee = (\r\n        complexity\r\n        * max(adjusted_exponent_length, 1)\r\n        // constants.GAS_MOD_EXP_QUADRATIC_DENOMINATOR\r\n    )\r\n    return gas_fee\r\n```\r\n\r\n\r\n### Fill this section in if you know how this could or should be fixed\r\n\r\nThe fix from Frontier is [here](https://github.com/paritytech/frontier/commit/5af12e94d7dfc8a0208a290643a800f55de7b219), where they increase the gas cost when modulus is even. py-evm could adopt a similar fix.\r\n\r\n\r\nReported by `6004ed5feaa31ae9df36b5dbc60f0fa53255a5fb734334082c6d202405fc738c`.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/2096/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/2096/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1507222028",
    "html_url": "https://github.com/ethereum/py-evm/issues/2096#issuecomment-1507222028",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2096",
    "id": 1507222028,
    "node_id": "IC_kwDOBJ456s5Z1mIM",
    "user": {
      "login": "fselmo",
      "id": 3532824,
      "node_id": "MDQ6VXNlcjM1MzI4MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3532824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fselmo",
      "html_url": "https://github.com/fselmo",
      "followers_url": "https://api.github.com/users/fselmo/followers",
      "following_url": "https://api.github.com/users/fselmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/fselmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fselmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fselmo/subscriptions",
      "organizations_url": "https://api.github.com/users/fselmo/orgs",
      "repos_url": "https://api.github.com/users/fselmo/repos",
      "events_url": "https://api.github.com/users/fselmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fselmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-13T16:02:48Z",
    "updated_at": "2023-04-13T16:09:57Z",
    "author_association": "MEMBER",
    "body": "Thanks for submitting @yixiao5428. You are showing the EIP-198 gas calculation code. Via EIP-2565, for the Berlin hard fork, the gas calculation was changed. This was [implemented](https://github.com/ethereum/py-evm/blob/4f352fb024868be5eeff2a99bb3db7e5a4049762/eth/vm/forks/berlin/computation.py#L76-L79) in `py-evm` along with the Berlin changes.\r\n\r\nI may have some time to take a peek here soon but did you find anything off with the implementation for EIP-2565? Are you aware of a test for this that we can run here to make sure? Is this a change that should be reflected in the EIP-198 implementation?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1507222028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
