{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/306/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/306/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/306/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/306",
  "id": 291426256,
  "node_id": "MDU6SXNzdWUyOTE0MjYyNTY=",
  "number": 306,
  "title": "Function to Execute Raw Bytecode",
  "user": {
    "login": "cwinsloweaton",
    "id": 25494469,
    "node_id": "MDQ6VXNlcjI1NDk0NDY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25494469?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cwinsloweaton",
    "html_url": "https://github.com/cwinsloweaton",
    "followers_url": "https://api.github.com/users/cwinsloweaton/followers",
    "following_url": "https://api.github.com/users/cwinsloweaton/following{/other_user}",
    "gists_url": "https://api.github.com/users/cwinsloweaton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cwinsloweaton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cwinsloweaton/subscriptions",
    "organizations_url": "https://api.github.com/users/cwinsloweaton/orgs",
    "repos_url": "https://api.github.com/users/cwinsloweaton/repos",
    "events_url": "https://api.github.com/users/cwinsloweaton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cwinsloweaton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871768,
      "node_id": "MDU6TGFiZWw2MzA4NzE3Njg=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/PR%20state:%20WIP",
      "name": "PR state: WIP",
      "color": "fbca04",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "lrettig",
    "id": 3316532,
    "node_id": "MDQ6VXNlcjMzMTY1MzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lrettig",
    "html_url": "https://github.com/lrettig",
    "followers_url": "https://api.github.com/users/lrettig/followers",
    "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
    "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
    "organizations_url": "https://api.github.com/users/lrettig/orgs",
    "repos_url": "https://api.github.com/users/lrettig/repos",
    "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lrettig/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2018-01-25T02:07:37Z",
  "updated_at": "2018-02-15T17:54:59Z",
  "closed_at": "2018-02-15T17:54:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Was asked to open an issue here, hope this is alright.\r\n\r\nIt would be pretty useful to have a function that takes bytecode and data and executes the bytecode along with the data. Ethereumjs-vm has a function [runCode()](https://github.com/ethereumjs/ethereumjs-vm#vmruncodeopts-cb) that does this and works pretty well, but I'd rather be using Python. ",
  "closed_by": {
    "login": "lrettig",
    "id": 3316532,
    "node_id": "MDQ6VXNlcjMzMTY1MzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lrettig",
    "html_url": "https://github.com/lrettig",
    "followers_url": "https://api.github.com/users/lrettig/followers",
    "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
    "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
    "organizations_url": "https://api.github.com/users/lrettig/orgs",
    "repos_url": "https://api.github.com/users/lrettig/repos",
    "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lrettig/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/306/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/306/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360375886",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-360375886",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 360375886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDM3NTg4Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T06:41:27Z",
    "updated_at": "2018-01-25T06:41:27Z",
    "author_association": "MEMBER",
    "body": "This strikes me as a nice convenience API to have available.  I think this fits well as a new API on the `VM` class or as a stand-alone that takes a VM class as one of it's arguments.  There are a few additional parameters that would need to be filled in, though I suspect we can supply sane defaults for most of them (`sender/coinbase/anything-else-on-the-message-object`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360375886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360376358",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-360376358",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 360376358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDM3NjM1OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T06:44:38Z",
    "updated_at": "2018-01-25T06:45:32Z",
    "author_association": "MEMBER",
    "body": "I don't love the name but... it might look something like this.\r\n\r\n```python\r\ndef execute_bytecode(vm, bytecode, data=b'', ...):\r\n    ...\r\n\r\n# or\r\nclass VM:\r\n    ...\r\n    def execute_bytecode(self, bytecode, data=b'', ...):\r\n        ...\r\n```\r\n\r\nExtra arguments would be something like every property of the `evm.vm.message.Message` object, with all of them defaulted to empty values or whatever other defaults we can come up with.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360376358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360440854",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-360440854",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 360440854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ0MDg1NA==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T11:31:52Z",
    "updated_at": "2018-01-25T11:31:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is up my alley, given the work I've been doing on eWASM. I'll take a crack at it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360440854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360498331",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-360498331",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 360498331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ5ODMzMQ==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T15:22:08Z",
    "updated_at": "2018-01-25T15:22:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "How's this for a set of defaults?\r\n\r\nThese mostly come from https://github.com/ethereumjs/ethereumjs-vm/blob/master/lib/runCode.js (except that it does not specify a default `gasPrice`):\r\n\r\n- gas: 0xffffff\r\n- gas_price: 0x01\r\n- to: 0x0\r\n- sender: 0x0\r\n- value: 0x0\r\n- data: None\r\n- code: None\r\n\r\nThese defaults are already specified in `evm.vm.message.Message`:\r\n- origin: None\r\n- depth: 0\r\n- create_address=None\r\n- code_address=None\r\n- should_transfer_value=True\r\n- is_static=False",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360498331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360522231",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-360522231",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 360522231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDUyMjIzMQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T16:34:02Z",
    "updated_at": "2018-01-25T16:34:08Z",
    "author_association": "MEMBER",
    "body": "gas should probably default to the current block gas limit.\r\n\r\neverything else looks good.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360522231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361110443",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361110443",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361110443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTExMDQ0Mw==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T00:21:17Z",
    "updated_at": "2018-01-29T00:39:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Question: how much validation do we need to do on these args? E.g., do we care about gas metering or that the sender account contains at least the value being sent (plus gas)?\r\n\r\nFor comparison it looks like [ethereum-js runCall](https://github.com/ethereumjs/ethereumjs-vm/blob/master/lib/runCall.js) does very minimal validation. It doesn't appear to validate the value or sender balance.\r\n\r\nRelated question: how much of the overhead in [_execute_frontier_transaction](https://github.com/ethereum/py-evm/blob/bdf5797a7aa9936b401110572ae6ad3cf45b0fae/evm/vm/forks/frontier/vm_state.py#L40) do we care to run? Do we need to fully update the VM state?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361110443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361349886",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361349886",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361349886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM0OTg4Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T19:00:52Z",
    "updated_at": "2018-01-29T19:00:52Z",
    "author_association": "MEMBER",
    "body": "I think that it's fine to do minimal validation (or near zero validation).  If they send value, we could credit the `to` address, but only deduct from the `sender` if they have appropriate funds.  Or we could just not do the transfer at all, or we could only credit the `to` address....  I'm not sure what is right because I'm not sure all the ways this would be used.  Maybe better to lay out the known use cases and then design with those in mind.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361349886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361379622",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361379622",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361379622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM3OTYyMg==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T20:42:43Z",
    "updated_at": "2018-01-29T20:45:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe better to lay out the known use cases and then design with those in mind.\r\n\r\nAgreed. This is a good question. Using ethereumjs's [runCall](https://github.com/ethereumjs/ethereumjs-vm/blob/master/lib/runCall.js) as a model, it looks like that method is used internally (all transactions are passed through it for execution), and it's also called directly in the tests in a bunch of places. There was some additional discussion in https://github.com/ethereumjs/ethereumjs-vm/issues/41 but no conclusions there so the purpose of this method is a bit unclear to me. I just asked about this in https://gitter.im/ethereum/ethereumjs-lib, let's see what the JS team thinks.\r\n\r\nIt seems this method may have sort of been modeled on [eth_call](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_call), which does _not_ add the tx to the block.\r\n\r\n@cwinsloweaton what sort of use cases do you envision for this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361379622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361412556",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361412556",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361412556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQxMjU1Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T22:42:42Z",
    "updated_at": "2018-01-29T22:42:42Z",
    "author_association": "MEMBER",
    "body": "@lrettig see https://github.com/ethereum/EIPs/issues/144",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361412556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361414971",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361414971",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361414971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQxNDk3MQ==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T22:52:50Z",
    "updated_at": "2018-01-29T22:52:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a connection between `runCall` and ethereum/EIPs#144?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361414971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361767465",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361767465",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361767465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2NzQ2NQ==",
    "user": {
      "login": "cwinsloweaton",
      "id": 25494469,
      "node_id": "MDQ6VXNlcjI1NDk0NDY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25494469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cwinsloweaton",
      "html_url": "https://github.com/cwinsloweaton",
      "followers_url": "https://api.github.com/users/cwinsloweaton/followers",
      "following_url": "https://api.github.com/users/cwinsloweaton/following{/other_user}",
      "gists_url": "https://api.github.com/users/cwinsloweaton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cwinsloweaton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cwinsloweaton/subscriptions",
      "organizations_url": "https://api.github.com/users/cwinsloweaton/orgs",
      "repos_url": "https://api.github.com/users/cwinsloweaton/repos",
      "events_url": "https://api.github.com/users/cwinsloweaton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cwinsloweaton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T23:15:29Z",
    "updated_at": "2018-01-30T23:15:29Z",
    "author_association": "NONE",
    "body": "@lrettig The use case I had in mind was using it to analyze smart contracts that don't have the source code available. I used the ethereumjs version in a script to confirm that different input data sent to a contract actually output a different result. I'm still pretty new to this stuff so hopefully that makes sense!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361767465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361768921",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-361768921",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 361768921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2ODkyMQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T23:22:39Z",
    "updated_at": "2018-01-30T23:22:39Z",
    "author_association": "MEMBER",
    "body": "@lrettig \r\n\r\n> Is there a connection between `runCall` and ethereum/EIPs#144?\r\n\r\nYes (at least in the abstract).\r\n\r\nLets say I have a contract\r\n\r\n```\r\ncontract Secret {\r\n    uint private secret;\r\n\r\n    function setSecret(uint value) public {\r\n        secret = value;\r\n    }\r\n}\r\n```\r\n\r\nThe variable `secret` isn't actually secret, but rather, just not exposed through any getter function.  I may want to compose a custom piece of bytecode which could be run in the context of a deployed version of this contract which returns the `secret` value.\r\n\r\nThis same example can then be extrapolated out to more complex use cases like, writing custom code to dig into the internal data of a contract and do *something* that isn't present in the existing contract's bytecode.\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361768921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362027669",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-362027669",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 362027669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAyNzY2OQ==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T18:35:39Z",
    "updated_at": "2018-01-31T18:35:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Makes sense. Effectively by setting the `code_address` (in the `evm.vm.message.Message` constructor, or equivalently, `address` in ethereumjs's `runCode` params) you can run arbitrary code in the context of (i.e., with full access to) the state of another contract. Am I understanding this correctly?\r\n\r\nThis should already be possible with ethereumjs's `runCode`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362027669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362031027",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-362031027",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 362031027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAzMTAyNw==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T18:47:32Z",
    "updated_at": "2018-01-31T18:47:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cwinsloweaton thanks, that's a great use case and it's very helpful. The only thing I'd add is that, technically, for this use case, you do _not_ need to specify the _code_ as an argument since that could be read from state. Also, it sounds like you're just looking at output, not state changes, am I correct?\r\n\r\n@pipermerriam do you have any concerns with allowing arbitrary code here?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362031027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362036787",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-362036787",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 362036787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAzNjc4Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T19:06:16Z",
    "updated_at": "2018-01-31T19:06:16Z",
    "author_association": "MEMBER",
    "body": "> @pipermerriam do you have any concerns with allowing arbitrary code here?\r\n\r\nNo concerns.  I think being able to run arbitrary code in the context of an existing contract is valuable.  (But we don't allow any state changes to be persisted, everything should be reverted after execution).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/362036787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/366008816",
    "html_url": "https://github.com/ethereum/py-evm/issues/306#issuecomment-366008816",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/306",
    "id": 366008816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAwODgxNg==",
    "user": {
      "login": "lrettig",
      "id": 3316532,
      "node_id": "MDQ6VXNlcjMzMTY1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3316532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrettig",
      "html_url": "https://github.com/lrettig",
      "followers_url": "https://api.github.com/users/lrettig/followers",
      "following_url": "https://api.github.com/users/lrettig/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrettig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrettig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrettig/subscriptions",
      "organizations_url": "https://api.github.com/users/lrettig/orgs",
      "repos_url": "https://api.github.com/users/lrettig/repos",
      "events_url": "https://api.github.com/users/lrettig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrettig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T17:54:59Z",
    "updated_at": "2018-02-15T17:54:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed by #315",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/366008816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
