{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/2127",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/2127/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/2127/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/2127/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/2127",
  "id": 2030090706,
  "node_id": "I_kwDOBJ456s55ALnS",
  "number": 2127,
  "title": "Py-evm returns twice dealing with msg.sender.send(amount)",
  "user": {
    "login": "Alleysira",
    "id": 56925051,
    "node_id": "MDQ6VXNlcjU2OTI1MDUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/56925051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Alleysira",
    "html_url": "https://github.com/Alleysira",
    "followers_url": "https://api.github.com/users/Alleysira/followers",
    "following_url": "https://api.github.com/users/Alleysira/following{/other_user}",
    "gists_url": "https://api.github.com/users/Alleysira/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Alleysira/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Alleysira/subscriptions",
    "organizations_url": "https://api.github.com/users/Alleysira/orgs",
    "repos_url": "https://api.github.com/users/Alleysira/repos",
    "events_url": "https://api.github.com/users/Alleysira/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Alleysira/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-07T07:39:39Z",
  "updated_at": "2023-12-07T07:39:39Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### What happened?\n\nHey, I'm running some contracts to test py-evm with other evms. I found that when a contract has `msg.sender.send()`, there will be  two `output and gasused` in the json output of my script, like\r\n{\"pc\": 0, \"op\": 0, \"gas\": \"0x8fc\", \"gasCost\": \"0x0\", \"stack\": [], \"depth\": 1, \"opName\": \"STOP\", \"error\": \"None\" } and {\"output\": \"\", \"gasUsed\": \"0x0\"} \r\n{\"output\": \"0000000000000000000000000000000000000000000000000000000000000001\", \"gasUsed\": \"0x196\"} in the example. \r\nI think it's weird since the first `output and gasused` is a useless output of opcode `STOP`. And in the same time, Geth and EthereumJS are doing well with only one output.  \r\nI'd like to know whether this is sort of bug or I should change my script to test evm. Thinks in advance.\r\nHere is my contract in solidity : \r\n```solidity\r\npragma solidity ^0.4.24;\r\n\r\ncontract Test {\r\n    function sendFund() returns (bool){\r\n        uint amount = msg.value;\r\n        msg.sender.send(amount);\r\n        return true;\r\n    }\r\n}\r\n```\r\nI use solc version 0.4.24 to compile the contract with `solc --bin-runtime manCheck/contract/myContract.sol -o manCheck/contract/ --overwrite`, and these are the corresponding bytecodes: \r\n``` \r\nbincode = 608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063dd0cf15d146044575b600080fd5b348015604f57600080fd5b5060566070565b604051808215151515815260200191505060405180910390f35b6000803490503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506001915050905600a165627a7a72305820ba348c7cdfa1fbb7dc3341599f5a037ccbd886e54acfcd3d563646ac341fd5f10029\r\n```\r\nAnd I use `solc --hashes` to get signature: \r\n```\r\ndd0cf15d: sendFund()\r\n```\r\nThen I run the script with 2 parameters \r\n```shell\r\npython3 myscript.py --data bincode --sigName dd0cf15d00000000000000000000000047a8320bfb820ef9098a1de8cf34d70f597c5e94ff > pyevmout.json\r\n```\r\nAt the same time, I test `Geth/evm 1.13.4` and `EthereumJS 4.1.3` with the same bincode and sigName, their outputs [gethout.json](https://github.com/ethereum/py-evm/files/13596972/gethout.json)\r\n[jsout.json](https://github.com/ethereum/py-evm/files/13596974/jsout.json) seem normal to me.  \n\n### Code that produced the error\n\n```python\nfrom eth import constants\r\nfrom eth.db.atomic import AtomicDB\r\nfrom eth import constants\r\nfrom eth.chains.base import MiningChain\r\nfrom eth_utils import (to_wei, decode_hex,  to_canonical_address,)\r\nfrom eth.vm.forks.shanghai import ShanghaiVM\r\nfrom eth_typing import Address\r\nfrom eth_keys import keys\r\nfrom eth.tools.transaction import new_transaction\r\nfrom cytoolz import assoc\r\nimport argparse\r\n\r\ndef parse_args():\r\n    \"\"\"\r\n    Parse input arguments\r\n    \"\"\"\r\n    parser = argparse.ArgumentParser(description='Test a transaction')\r\n\r\n    # contract runtime bytecode  $ solc xxx.sol --bin-runtime\r\n    parser.add_argument('--data', dest='data', default='', type=str)\r\n    # function signature bytecode\r\n    parser.add_argument('--sig', dest='signature', default='', type=str)\r\n\r\n    args = parser.parse_args()\r\n    return args\r\n\r\ndef funded_address_initial_balance():\r\n    return to_wei(0xffff, 'ether')\r\n\r\ndef base_genesis_state(funded_address, funded_address_initial_balance):\r\n    return {\r\n        funded_address: {\r\n            'balance': funded_address_initial_balance,\r\n            'nonce': 0,\r\n            'code': b'',\r\n            'storage': {},\r\n        }\r\n    }\r\n\r\ndef funded_address_private_key():\r\n    return keys.PrivateKey(\r\n        decode_hex('0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8')\r\n    )\r\n\r\ndef genesis_state(base_genesis_state,simple_contract_address, bytecode):\r\n    # base_genesis_state is a dict, simple_contract_address is key, {b,n,c,s} is value :)\r\n    result = assoc(\r\n        base_genesis_state,\r\n        simple_contract_address,\r\n        {\r\n            'balance': 0,\r\n            'nonce': 0,\r\n            'code': decode_hex(bytecode),  # contract bytecode\r\n            'storage': {},\r\n        },\r\n    )\r\n    return result\r\n\r\nGENESIS_PARAMS = {\r\n     'coinbase': constants.ZERO_ADDRESS,\r\n     'transaction_root': constants.BLANK_ROOT_HASH,\r\n     'receipt_root': constants.BLANK_ROOT_HASH,\r\n     'difficulty': 0,\r\n     'gas_limit': constants.GENESIS_GAS_LIMIT,\r\n     'timestamp': 0,\r\n     'extra_data': constants.GENESIS_EXTRA_DATA,\r\n     'nonce': b'\\x00' * 8\r\n}\r\n\r\ndef main():\r\n    args = parse_args()\r\n\r\n    init_address = to_canonical_address(\"8888f1f195afa192cfee860698584c030f4c9db1\")\r\n\r\n    base_state = base_genesis_state(init_address, funded_address_initial_balance())\r\n\r\n    # with chain code\r\n    simple_contract_address = to_canonical_address(\"0x692a70d2e424a56d2c6c27aa97d1a86395877b3a\")\r\n\r\n    klass = MiningChain.configure(\r\n        __name__='MyTestChain',\r\n        vm_configuration=(\r\n            (constants.GENESIS_BLOCK_NUMBER,ShanghaiVM),\r\n        )\r\n    )\r\n\r\n    SENDER = to_canonical_address(\"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\")\r\n    SENDER_PRIVATE_KEY = funded_address_private_key()\r\n    \r\n    # RECEIVER = to_canonical_address(\"0x692a70d2e424a56d2c6c27aa97d1a86395877b3a\")\r\n    GENESIS_STATE = genesis_state(base_state, simple_contract_address,args.data)\r\n    chain = klass.from_genesis(AtomicDB(), GENESIS_PARAMS, GENESIS_STATE)\r\n    \r\n    call_txn = new_transaction(\r\n        chain.get_vm(),\r\n        SENDER,\r\n        simple_contract_address,\r\n        private_key=SENDER_PRIVATE_KEY,\r\n        gas=0xffff,\r\n        # data=function_selector,\r\n        data=decode_hex(args.signature),\r\n    )\r\n    result_bytes = chain.get_transaction_result(call_txn, chain.get_canonical_head())\r\n\r\nif __name__ == '__main__':\r\n    main()\n```\n\n\n### Full error output\n\n```shell\n// pyevmout.json\r\n{\"pc\": 0, \"op\": 96, \"gas\": \"0xac37\", \"gasCost\": \"0x3\", \"stack\": [], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 2, \"op\": 96, \"gas\": \"0xac34\", \"gasCost\": \"0x3\", \"stack\": [\"0x80\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 4, \"op\": 82, \"gas\": \"0xac31\", \"gasCost\": \"0x3\", \"stack\": [\"0x80\", \"0x40\"], \"depth\": 0, \"opName\": \"MSTORE\", \"error\": \"None\" }\r\n{\"pc\": 5, \"op\": 96, \"gas\": \"0xac25\", \"gasCost\": \"0x3\", \"stack\": [], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 7, \"op\": 54, \"gas\": \"0xac22\", \"gasCost\": \"0x2\", \"stack\": [\"0x4\"], \"depth\": 0, \"opName\": \"CALLDATASIZE\", \"error\": \"None\" }\r\n{\"pc\": 8, \"op\": 16, \"gas\": \"0xac20\", \"gasCost\": \"0x3\", \"stack\": [\"0x4\", \"0x25\"], \"depth\": 0, \"opName\": \"LT\", \"error\": \"None\" }\r\n{\"pc\": 9, \"op\": 96, \"gas\": \"0xac1d\", \"gasCost\": \"0x3\", \"stack\": [\"0x0\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 11, \"op\": 87, \"gas\": \"0xac1a\", \"gasCost\": \"0xa\", \"stack\": [\"0x0\", \"0x3f\"], \"depth\": 0, \"opName\": \"JUMPI\", \"error\": \"None\" }\r\n{\"pc\": 12, \"op\": 96, \"gas\": \"0xac10\", \"gasCost\": \"0x3\", \"stack\": [], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 14, \"op\": 53, \"gas\": \"0xac0d\", \"gasCost\": \"0x3\", \"stack\": [\"0x0\"], \"depth\": 0, \"opName\": \"CALLDATALOAD\", \"error\": \"None\" }\r\n{\"pc\": 15, \"op\": 124, \"gas\": \"0xac0a\", \"gasCost\": \"0x3\", \"stack\": [\"0xfd734cfe81d8a09f90e82fb0b32a8470000000000000000000000005df10cdd\"], \"depth\": 0, \"opName\": \"PUSH29\", \"error\": \"None\" }\r\n{\"pc\": 45, \"op\": 144, \"gas\": \"0xac07\", \"gasCost\": \"0x3\", \"stack\": [\"0xfd734cfe81d8a09f90e82fb0b32a8470000000000000000000000005df10cdd\", \"0x1\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 46, \"op\": 4, \"gas\": \"0xac04\", \"gasCost\": \"0x5\", \"stack\": [\"0x1\", \"0xfd734cfe81d8a09f90e82fb0b32a8470000000000000000000000005df10cdd\"], \"depth\": 0, \"opName\": \"DIV\", \"error\": \"None\" }\r\n{\"pc\": 47, \"op\": 99, \"gas\": \"0xabff\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"PUSH4\", \"error\": \"None\" }\r\n{\"pc\": 52, \"op\": 22, \"gas\": \"0xabfc\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xffffffff\"], \"depth\": 0, \"opName\": \"AND\", \"error\": \"None\" }\r\n{\"pc\": 53, \"op\": 128, \"gas\": \"0xabf9\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 54, \"op\": 99, \"gas\": \"0xabf6\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"PUSH4\", \"error\": \"None\" }\r\n{\"pc\": 59, \"op\": 20, \"gas\": \"0xabf3\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xdd0cf15d\", \"0x5df10cdd\"], \"depth\": 0, \"opName\": \"EQ\", \"error\": \"None\" }\r\n{\"pc\": 60, \"op\": 96, \"gas\": \"0xabf0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 62, \"op\": 87, \"gas\": \"0xabed\", \"gasCost\": \"0xa\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x44\"], \"depth\": 0, \"opName\": \"JUMPI\", \"error\": \"None\" }\r\n{\"pc\": 68, \"op\": 91, \"gas\": \"0xabe3\", \"gasCost\": \"0x1\", \"stack\": [\"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"JUMPDEST\", \"error\": \"None\" }\r\n{\"pc\": 69, \"op\": 52, \"gas\": \"0xabe2\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"CALLVALUE\", \"error\": \"None\" }\r\n{\"pc\": 70, \"op\": 128, \"gas\": \"0xabe0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x0\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 71, \"op\": 21, \"gas\": \"0xabdd\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 72, \"op\": 96, \"gas\": \"0xabda\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x0\", \"0x1\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 74, \"op\": 87, \"gas\": \"0xabd7\", \"gasCost\": \"0xa\", \"stack\": [\"0xdd0cf15d\", \"0x0\", \"0x1\", \"0x4f\"], \"depth\": 0, \"opName\": \"JUMPI\", \"error\": \"None\" }\r\n{\"pc\": 79, \"op\": 91, \"gas\": \"0xabcd\", \"gasCost\": \"0x1\", \"stack\": [\"0xdd0cf15d\", \"0x0\"], \"depth\": 0, \"opName\": \"JUMPDEST\", \"error\": \"None\" }\r\n{\"pc\": 80, \"op\": 80, \"gas\": \"0xabcc\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x0\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 81, \"op\": 96, \"gas\": \"0xabca\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 83, \"op\": 96, \"gas\": \"0xabc7\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 85, \"op\": 86, \"gas\": \"0xabc4\", \"gasCost\": \"0x8\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x70\"], \"depth\": 0, \"opName\": \"JUMP\", \"error\": \"None\" }\r\n{\"pc\": 112, \"op\": 91, \"gas\": \"0xabbc\", \"gasCost\": \"0x1\", \"stack\": [\"0xdd0cf15d\", \"0x56\"], \"depth\": 0, \"opName\": \"JUMPDEST\", \"error\": \"None\" }\r\n{\"pc\": 113, \"op\": 96, \"gas\": \"0xabbb\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 115, \"op\": 128, \"gas\": \"0xabb8\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 116, \"op\": 52, \"gas\": \"0xabb5\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"CALLVALUE\", \"error\": \"None\" }\r\n{\"pc\": 117, \"op\": 144, \"gas\": \"0xabb3\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 118, \"op\": 80, \"gas\": \"0xabb0\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 119, \"op\": 51, \"gas\": \"0xabae\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"CALLER\", \"error\": \"None\" }\r\n{\"pc\": 120, \"op\": 115, \"gas\": \"0xabac\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x9a1b286a10a2d3308b422f6c5fdd248d2549d3da\"], \"depth\": 0, \"opName\": \"PUSH20\", \"error\": \"None\" }\r\n{\"pc\": 141, \"op\": 22, \"gas\": \"0xaba9\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x9a1b286a10a2d3308b422f6c5fdd248d2549d3da\", \"0xffffffffffffffffffffffffffffffffffffffff\"], \"depth\": 0, \"opName\": \"AND\", \"error\": \"None\" }\r\n{\"pc\": 142, \"op\": 97, \"gas\": \"0xaba6\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\"], \"depth\": 0, \"opName\": \"PUSH2\", \"error\": \"None\" }\r\n{\"pc\": 145, \"op\": 130, \"gas\": \"0xaba3\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0xfc08\"], \"depth\": 0, \"opName\": \"DUP3\", \"error\": \"None\" }\r\n{\"pc\": 146, \"op\": 144, \"gas\": \"0xaba0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0xfc08\", \"0x0\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 147, \"op\": 129, \"gas\": \"0xab9d\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x0\", \"0xfc08\"], \"depth\": 0, \"opName\": \"DUP2\", \"error\": \"None\" }\r\n{\"pc\": 148, \"op\": 21, \"gas\": \"0xab9a\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x0\", \"0xfc08\", \"0x0\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 149, \"op\": 2, \"gas\": \"0xab97\", \"gasCost\": \"0x5\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x0\", \"0xfc08\", \"0x1\"], \"depth\": 0, \"opName\": \"MUL\", \"error\": \"None\" }\r\n{\"pc\": 150, \"op\": 144, \"gas\": \"0xab92\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x0\", \"0x8fc\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 151, \"op\": 96, \"gas\": \"0xab8f\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 153, \"op\": 81, \"gas\": \"0xab8c\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x40\"], \"depth\": 0, \"opName\": \"MLOAD\", \"error\": \"None\" }\r\n{\"pc\": 154, \"op\": 96, \"gas\": \"0xab89\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 156, \"op\": 96, \"gas\": \"0xab86\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 158, \"op\": 81, \"gas\": \"0xab83\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x40\"], \"depth\": 0, \"opName\": \"MLOAD\", \"error\": \"None\" }\r\n{\"pc\": 159, \"op\": 128, \"gas\": \"0xab80\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 160, \"op\": 131, \"gas\": \"0xab7d\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP4\", \"error\": \"None\" }\r\n{\"pc\": 161, \"op\": 3, \"gas\": \"0xab7a\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"SUB\", \"error\": \"None\" }\r\n{\"pc\": 162, \"op\": 129, \"gas\": \"0xab77\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\"], \"depth\": 0, \"opName\": \"DUP2\", \"error\": \"None\" }\r\n{\"pc\": 163, \"op\": 133, \"gas\": \"0xab74\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP6\", \"error\": \"None\" }\r\n{\"pc\": 164, \"op\": 136, \"gas\": \"0xab71\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\"], \"depth\": 0, \"opName\": \"DUP9\", \"error\": \"None\" }\r\n{\"pc\": 165, \"op\": 136, \"gas\": \"0xab6e\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\"], \"depth\": 0, \"opName\": \"DUP9\", \"error\": \"None\" }\r\n{\"pc\": 166, \"op\": 241, \"gas\": \"0xab6b\", \"gasCost\": \"0x0\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\"], \"depth\": 0, \"opName\": \"CALL\", \"error\": \"None\" }\r\n{\"pc\": 0, \"op\": 0, \"gas\": \"0x8fc\", \"gasCost\": \"0x0\", \"stack\": [], \"depth\": 1, \"opName\": \"STOP\", \"error\": \"None\" }\r\n{\"output\": \"\", \"gasUsed\": \"0x0\"}\r\n{\"pc\": 167, \"op\": 147, \"gas\": \"0xab07\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\"], \"depth\": 0, \"opName\": \"SWAP4\", \"error\": \"None\" }\r\n{\"pc\": 168, \"op\": 80, \"gas\": \"0xab04\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0xdad349258d24dd5f6c2f428b30d3a2106a281b9a\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 169, \"op\": 80, \"gas\": \"0xab02\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\", \"0x8fc\", \"0x0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 170, \"op\": 80, \"gas\": \"0xab00\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\", \"0x8fc\", \"0x0\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 171, \"op\": 80, \"gas\": \"0xaafe\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\", \"0x8fc\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 172, \"op\": 80, \"gas\": \"0xaafc\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 173, \"op\": 96, \"gas\": \"0xaafa\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 175, \"op\": 145, \"gas\": \"0xaaf7\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x0\", \"0x0\", \"0x1\"], \"depth\": 0, \"opName\": \"SWAP2\", \"error\": \"None\" }\r\n{\"pc\": 176, \"op\": 80, \"gas\": \"0xaaf4\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x1\", \"0x0\", \"0x0\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 177, \"op\": 80, \"gas\": \"0xaaf2\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x1\", \"0x0\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 178, \"op\": 144, \"gas\": \"0xaaf0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x56\", \"0x1\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 179, \"op\": 86, \"gas\": \"0xaaed\", \"gasCost\": \"0x8\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x56\"], \"depth\": 0, \"opName\": \"JUMP\", \"error\": \"None\" }\r\n{\"pc\": 86, \"op\": 91, \"gas\": \"0xaae5\", \"gasCost\": \"0x1\", \"stack\": [\"0xdd0cf15d\", \"0x1\"], \"depth\": 0, \"opName\": \"JUMPDEST\", \"error\": \"None\" }\r\n{\"pc\": 87, \"op\": 96, \"gas\": \"0xaae4\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 89, \"op\": 81, \"gas\": \"0xaae1\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x40\"], \"depth\": 0, \"opName\": \"MLOAD\", \"error\": \"None\" }\r\n{\"pc\": 90, \"op\": 128, \"gas\": \"0xaade\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 91, \"op\": 130, \"gas\": \"0xaadb\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP3\", \"error\": \"None\" }\r\n{\"pc\": 92, \"op\": 21, \"gas\": \"0xaad8\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 93, \"op\": 21, \"gas\": \"0xaad5\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 94, \"op\": 21, \"gas\": \"0xaad2\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 95, \"op\": 21, \"gas\": \"0xaacf\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x0\"], \"depth\": 0, \"opName\": \"ISZERO\", \"error\": \"None\" }\r\n{\"pc\": 96, \"op\": 129, \"gas\": \"0xaacc\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\"], \"depth\": 0, \"opName\": \"DUP2\", \"error\": \"None\" }\r\n{\"pc\": 97, \"op\": 82, \"gas\": \"0xaac9\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"MSTORE\", \"error\": \"None\" }\r\n{\"pc\": 98, \"op\": 96, \"gas\": \"0xaac0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 100, \"op\": 1, \"gas\": \"0xaabd\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x20\"], \"depth\": 0, \"opName\": \"ADD\", \"error\": \"None\" }\r\n{\"pc\": 101, \"op\": 145, \"gas\": \"0xaaba\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x1\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0xa0\"], \"depth\": 0, \"opName\": \"SWAP2\", \"error\": \"None\" }\r\n{\"pc\": 102, \"op\": 80, \"gas\": \"0xaab7\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0xa0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x1\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 103, \"op\": 80, \"gas\": \"0xaab5\", \"gasCost\": \"0x2\", \"stack\": [\"0xdd0cf15d\", \"0xa0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"POP\", \"error\": \"None\" }\r\n{\"pc\": 104, \"op\": 96, \"gas\": \"0xaab3\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xa0\"], \"depth\": 0, \"opName\": \"PUSH1\", \"error\": \"None\" }\r\n{\"pc\": 106, \"op\": 81, \"gas\": \"0xaab0\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xa0\", \"0x40\"], \"depth\": 0, \"opName\": \"MLOAD\", \"error\": \"None\" }\r\n{\"pc\": 107, \"op\": 128, \"gas\": \"0xaaad\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xa0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"DUP1\", \"error\": \"None\" }\r\n{\"pc\": 108, \"op\": 145, \"gas\": \"0xaaaa\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0xa0\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"SWAP2\", \"error\": \"None\" }\r\n{\"pc\": 109, \"op\": 3, \"gas\": \"0xaaa7\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0xa0\"], \"depth\": 0, \"opName\": \"SUB\", \"error\": \"None\" }\r\n{\"pc\": 110, \"op\": 144, \"gas\": \"0xaaa4\", \"gasCost\": \"0x3\", \"stack\": [\"0xdd0cf15d\", \"0x8000000000000000000000000000000000000000000000000000000000000000\", \"0x20\"], \"depth\": 0, \"opName\": \"SWAP1\", \"error\": \"None\" }\r\n{\"pc\": 111, \"op\": 243, \"gas\": \"0xaaa1\", \"gasCost\": \"0x0\", \"stack\": [\"0xdd0cf15d\", \"0x20\", \"0x8000000000000000000000000000000000000000000000000000000000000000\"], \"depth\": 0, \"opName\": \"RETURN\", \"error\": \"None\" }\r\n{\"output\": \"0000000000000000000000000000000000000000000000000000000000000001\", \"gasUsed\": \"0x196\"}\n```\n\n\n### Fill this section in if you know how this could or should be fixed\n\nNot know\n\n### py-evm Version\n\n0.8.0b1\n\n### Python Version\n\n3.8.10\n\n### Operating System\n\nlinux\n\n### Output from pip-freeze\n\n```shell\ncached-property==1.5.2\r\ncontourpy==1.1.1\r\ncycler==0.12.1\r\ncytoolz==0.12.2\r\neth-bloom==2.0.0\r\neth-hash==0.5.2\r\neth-keys==0.4.0\r\neth-typing==3.4.0\r\neth-utils==2.2.1\r\nexceptiongroup==1.1.3\r\nfonttools==4.44.0\r\nhexbytes==0.3.1\r\nimportlib-resources==6.1.0\r\niniconfig==2.0.0\r\nkiwisolver==1.4.5\r\nlru-dict==1.2.0\r\nmatplotlib==3.7.3\r\nmypy-extensions==1.0.0\r\nnumpy==1.24.4\r\npackaging==23.1\r\nPillow==10.1.0\r\npluggy==1.3.0\r\npy-ecc==6.0.0\r\npy-evm==0.8.0b1\r\npycryptodome==3.19.0\r\npyethash==0.1.27\r\npyparsing==3.1.1\r\npytest==7.4.2\r\npython-dateutil==2.8.2\r\nrlp==3.0.0\r\nsix==1.16.0\r\nsolc-select==1.0.4\r\nsortedcontainers==2.4.0\r\ntomli==2.0.1\r\ntoolz==0.12.0\r\ntrie==2.1.1\r\nzipp==3.17.0\n```\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/2127/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/2127/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
