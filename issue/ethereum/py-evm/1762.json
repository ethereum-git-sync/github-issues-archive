{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1762",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1762/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1762/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1762/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1762",
  "id": 435797846,
  "node_id": "MDU6SXNzdWU0MzU3OTc4NDY=",
  "number": 1762,
  "title": "JournalDB.commit() should no longer \"auto-persist\" at the base commit",
  "user": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-04-22T16:53:05Z",
  "updated_at": "2019-05-02T23:43:54Z",
  "closed_at": "2019-05-02T23:43:54Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "> I'm starting to think that `commit()` does the wrong thing. `commit()` should only ever collapse changesets together, and the entire `self.journal.is_empty()` block should move into `persist()`. That would be more straightforward.\r\n\r\n_Originally posted by @lithp in https://github.com/ethereum/py-evm/pull/1735_\r\n\r\nI agree, I think it's easier to understand that `persist` and `commit` are two separate concepts. Since external callers shouldn't ever end up with the base recorded checkpoint, there's not really any point in exposing the capability of persisting via commit.\r\n\r\nSo the base checkpoint would only ever be popped via `persist()`, and trying to commit the base checkpoint would be a `ValidationError`.",
  "closed_by": {
    "login": "lithp",
    "id": 466333,
    "node_id": "MDQ6VXNlcjQ2NjMzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/466333?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lithp",
    "html_url": "https://github.com/lithp",
    "followers_url": "https://api.github.com/users/lithp/followers",
    "following_url": "https://api.github.com/users/lithp/following{/other_user}",
    "gists_url": "https://api.github.com/users/lithp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lithp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lithp/subscriptions",
    "organizations_url": "https://api.github.com/users/lithp/orgs",
    "repos_url": "https://api.github.com/users/lithp/repos",
    "events_url": "https://api.github.com/users/lithp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lithp/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1762/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1762/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
