{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/868/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/868/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/868/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/868",
  "id": 329448594,
  "node_id": "MDU6SXNzdWUzMjk0NDg1OTQ=",
  "number": 868,
  "title": "Don't let a single slow peer kill performance of chain sync",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983615043,
      "node_id": "MDU6TGFiZWw5ODM2MTUwNDM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20performance",
      "name": "type: performance",
      "color": "eeeeee",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/6",
    "html_url": "https://github.com/ethereum/py-evm/milestone/6",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/6/labels",
    "id": 3605174,
    "node_id": "MDk6TWlsZXN0b25lMzYwNTE3NA==",
    "number": 6,
    "title": "Ada Lovelace (Trinity Release)",
    "description": "",
    "creator": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 7,
    "state": "closed",
    "created_at": "2018-08-28T20:34:01Z",
    "updated_at": "2018-09-28T16:30:40Z",
    "due_on": "2018-09-25T07:00:00Z",
    "closed_at": "2018-09-28T16:30:40Z"
  },
  "comments": 14,
  "created_at": "2018-06-05T13:08:31Z",
  "updated_at": "2018-09-21T20:26:26Z",
  "closed_at": "2018-09-21T20:26:26Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nWhen doing a chain sync, for each chain segment we split the missing block parts (bodies, receipts) in N batches (where N is the number of connected peers that have those block parts) and request each batch to a different peer. Quite often the peers will not reply with all requested items (because they implement a byte-size cap in responses), so we need to wait for replies from all peers in order to figure out what block parts we're still missing so that we can make another round of requests.\r\n\r\nThis obviously doesn't perform well if we have a slow peer.\r\n\r\n### How can it be fixed\r\n\r\nNeed to keep track of the avg response time (or throughput?) for peers and request body parts only to the ones we deem fast enough (e.g. top 2/3rds ranked by response time, or below a certain response time threshold)\r\n",
  "closed_by": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/868/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/868/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394882281",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-394882281",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 394882281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg4MjI4MQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T22:35:43Z",
    "updated_at": "2018-06-05T22:35:43Z",
    "author_association": "MEMBER",
    "body": "> we need to wait for replies from **all peers** in order to figure out what block parts we're still missing\r\n\r\nI'm still not understanding something about this. If we get the response from one peer, and it's partial, can't we immediately request the dropped pieces?\r\n\r\n```\r\nRequest blocks 1-5 from Peer A\r\nRequest blocks 6-10 from Peer B\r\nPeer A responds with blocks 1-2\r\n<-- at this point, we can request blocks 3-5 from Peer A, before Peer B has responded, right?\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394882281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394928589",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-394928589",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 394928589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDkyODU4OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T03:27:37Z",
    "updated_at": "2018-06-06T03:27:37Z",
    "author_association": "MEMBER",
    "body": "@carver I think yes, but I think that would be a separate optimization/issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394928589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394963099",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-394963099",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 394963099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk2MzA5OQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T07:04:43Z",
    "updated_at": "2018-06-06T07:04:43Z",
    "author_association": "MEMBER",
    "body": "@carver yeah, good point, we could do that!  It wouldn't solve the issue here, though, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394963099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395222451",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-395222451",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 395222451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIyMjQ1MQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T21:38:51Z",
    "updated_at": "2018-06-06T21:38:51Z",
    "author_association": "MEMBER",
    "body": "Sure, it doesn't strictly prevent us from hanging up on the particular blocks we asked the slow peer for, but it should speed up performance for all the other blocks.\r\n\r\nAnyway, I'll create a new issue to track it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395222451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403996972",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-403996972",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 403996972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzk5Njk3Mg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-10T23:26:26Z",
    "updated_at": "2018-07-10T23:26:26Z",
    "author_association": "MEMBER",
    "body": "I'll start sketching out a solution tomorrow if no one has started in on this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403996972/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404344410",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404344410",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404344410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM0NDQxMA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-11T23:45:22Z",
    "updated_at": "2018-07-11T23:45:22Z",
    "author_association": "MEMBER",
    "body": "First pass on this is to track the throughputs and request a header count proportionally to each peer. So if peer A has throughput 1 block bodies per second and peer B does 3 block bodies per second, and we need 8 blocks, we would ask for 2 from peer A and 6 from peer B.\r\n\r\nSecond pass would probably be to add some kind of outlier cutoff mechanism, once we have collected enough throughput data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404344410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404526165",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404526165",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404526165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUyNjE2NQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T14:12:15Z",
    "updated_at": "2018-07-12T14:12:15Z",
    "author_association": "MEMBER",
    "body": "@carver IIUC, unless we fix #879, the first pass you describe above may not be much of an improvement if we have a very slow peer as we'd still request blocks from it and have to wait for it on every iteration of the request-wait-reply-check-what's-missing loop",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404526165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404610766",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404610766",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404610766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYxMDc2Ng==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T18:41:38Z",
    "updated_at": "2018-07-12T18:42:02Z",
    "author_association": "MEMBER",
    "body": "> have to wait for it on every iteration of the request-wait-reply-check-what's-missing loop\r\n\r\nMostly true, until the speed difference is enough to reduce the headers we request from a peer to 0.\r\n\r\nIf peer A is 4x slower than B, the cycle is something like:\r\n\r\n- request 25 headers\r\n- request 5 from A, request 20 from B\r\n- receive 16 headers total\r\n- request 0 from A, request 4 from B\r\n\r\nIf a peer is *really* slow, it will floor to 0 with even a decent number of headers remaining. Otherwise, the time it takes to get a response from a peer should balance out... Except for the way that fast peers return early with fewer headers than we asked for.\r\n\r\nI may end up refactoring it significantly to get rid of the batching of requests altogether. If it takes too long, I may just punt the whole thing, because we shouldn't spend time optimizing something without data to show it will move the needle.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404610766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404688045",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404688045",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404688045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY4ODA0NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T00:12:37Z",
    "updated_at": "2018-07-13T00:12:37Z",
    "author_association": "MEMBER",
    "body": "Rough sketch for refactoring the fast sync process (which I don't think needs to happen in Grace Hopper):\r\n\r\n### Header Sync\r\n- roughly keep header sync the same (use our best peer exclusively, until we catch up to them), but...\r\n- dump the headers into a priority queue (prioritized by low block number), and immediately request the next set\r\n- if the queue gets too full (maybe `>= 2* MAX_REQUEST_HEADERS`), stop requesting headers\r\n- if the queue gets empty enough (maybe `<= MAX_REQUEST_HEADERS`), start requesting headers again\r\n\r\n### Block body sync\r\n- keep track of which peers have a request in flight, and which are available\r\n- loop through all available peers and make requests for any headers that have been downloaded but not processed\r\n- when receiving block parts, re-add headers to the queue, for block parts that were not received\r\n- can probably stop doing the speed-weighted requests to peers from #1009 \r\n\r\n### Block persistence\r\n- in block number order, persist a block once we have its header, body, and receipt, pausing if we are missing one of those pieces (and handling potential forks)\r\n\r\n_Note to self: where are we persisting receipts?_",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404688045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404909891",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404909891",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404909891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkwOTg5MQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T18:05:27Z",
    "updated_at": "2018-07-13T18:05:27Z",
    "author_association": "MEMBER",
    "body": "I optimistically removed the milestone, does anyone think it should stay in Grace Hopper?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404909891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404911513",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-404911513",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 404911513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkxMTUxMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T18:12:00Z",
    "updated_at": "2018-07-13T18:12:00Z",
    "author_association": "MEMBER",
    "body": "I'm fine with removing from grace hopper.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404911513/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/411832830",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-411832830",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 411832830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgzMjgzMA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T17:19:29Z",
    "updated_at": "2018-08-09T17:19:29Z",
    "author_association": "MEMBER",
    "body": "I've removed this from Margaret Hamilton and added to Dorothy Vaughan since I believe the best way for us to do this is via the round trip request/response APIs and those are still in progress and will likely to take another week or so to get to a point where latency tracking can be added.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/411832830/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/423349829",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-423349829",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 423349829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM0OTgyOQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T22:07:35Z",
    "updated_at": "2018-09-20T22:07:35Z",
    "author_association": "MEMBER",
    "body": "The problem of a slow peer hurting throughput on body/receipt requests has been solved, or will be once #1279 lands.\r\n\r\nIf we happen to pick a slow peer to do header sync, then that would still slow us down, but I think that should be a different issue. I merged it into #1218 since both issues require being able to switch header-syncing peers mid-stream.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/423349829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/423660898",
    "html_url": "https://github.com/ethereum/py-evm/issues/868#issuecomment-423660898",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/868",
    "id": 423660898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY2MDg5OA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T20:26:26Z",
    "updated_at": "2018-09-21T20:26:26Z",
    "author_association": "MEMBER",
    "body": "#1279 merged",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/423660898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
