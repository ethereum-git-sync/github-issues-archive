{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1499",
  "id": 383339053,
  "node_id": "MDU6SXNzdWUzODMzMzkwNTM=",
  "number": 1499,
  "title": "Dynamically adjust request size based on historical peer performance.",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-11-22T00:35:48Z",
  "updated_at": "2018-11-22T05:37:05Z",
  "closed_at": "2018-11-22T05:35:19Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nWhen syncing, we regularly request significantly more *things* than the peer will respond with.  For example, we typically request 256 receipts at a time but most peers seem to only respond with ~20-30.\r\n\r\nEach time this happens the *completed* ones get marked as such, but the remaining ones get pushed back into the queue.  In a situation where a peer only regularly returns 1/10th of the requested data that means that we have to work through the full queue 10 times before we actually complete the batch.  This seems like it probably adds a lot of overhead.\r\n\r\n### How can it be fixed\r\n\r\nUse the statistics for a peer's historical performance to dynamically adjust how many items for a given request type we should ask for at a given time.  \r\n\r\n- I suspect we need additional stats tracking for this.  \r\n- We may need to do local some local tracking just within the sync code so that requests from other parts of the application don't pollute this data.\r\n\r\nWe can probably use something similar to the difficulty adjustment.  If the response is incomplete we slowly lower the batch size.  If the response is complete we increase the batch size.  We can use the *quality* metric to inform this.  Something like:\r\n\r\n- if incomplete response: `new_batch_size = old_batch_size - (10 - quality / 10)`\r\n- if complete response: `new_batch_size = old_batch_size + (4 - quality / 25)`\r\n\r\nIf we treat `batch_size` as a float then some version of this formula should work reasonably well, with the batch size moving faster anytime the quality is very low and moving slower when the quality is high, always trying to slowly increase the batch size.",
  "closed_by": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1499/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440865823",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440865823",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440865823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg2NTgyMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T00:36:07Z",
    "updated_at": "2018-11-22T00:36:07Z",
    "author_association": "MEMBER",
    "body": "@carver curious to hear your thoughts and whether I've mis-understood anything.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440865823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440898838",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440898838",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440898838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg5ODgzOA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T03:03:22Z",
    "updated_at": "2018-11-22T03:03:22Z",
    "author_association": "MEMBER",
    "body": "This doesn't appear to be the bottleneck.  I manually tuned the receipts and block bodies to use batch sizes of 30 and 65 respectively which were the upper bounds I was seeing in the logs and general sync throughput remains roughly the same.\r\n\r\nIt appears that downloading receipts may be the bottleneck.  Looking at the logs:\r\n\r\n- The headers queue is normally maxed out both in terms of number processing **and** the queue itself being full.\r\n- The bodies queue is normally empty.\r\n- The receipts queue is always working both in terms of tasks processing and queued.\r\n\r\nSo, bottleneck is still a mystery.  Things I think I've ruled out are:\r\n\r\n- The CPU bound normalization during request/response (though I think this is something that will eventually be needed).\r\n- Persisting the block (should be able to do ~100/second based on basic benchmarks)\r\n- Downloading the individual parts (blocks-per-second doesn't seem to scale up even with multiple high quality peers).\r\n- Extra churn in the task queues due to incomplete responses.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440898838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440907359",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440907359",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440907359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkwNzM1OQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T04:11:41Z",
    "updated_at": "2018-11-22T04:11:41Z",
    "author_association": "MEMBER",
    "body": "> [Requesting 256 receipts at a time] doesn't appear to be the bottleneck.\r\n\r\nYup, that would also have been my prediction.\r\n\r\n> The headers queue is normally maxed out both in terms of number processing and the queue itself being full.\r\n\r\nThat is interesting, because it suggests that the header sync is *not* a bottleneck in your test (it was in my testing some while back). If all the queued headers are in processing, and the receipts queue is backed up, that means that I agree the receipts are the bottleneck.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440907359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440909719",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440909719",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440909719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkwOTcxOQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T04:30:35Z",
    "updated_at": "2018-11-22T04:30:35Z",
    "author_association": "MEMBER",
    "body": "Some useful information here but closing for now since this doesn't seem to be the location of any bottlenecks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440909719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440910908",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440910908",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440910908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkxMDkwOA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T04:40:17Z",
    "updated_at": "2018-11-22T04:40:17Z",
    "author_association": "MEMBER",
    "body": "Receipt validation does appear to be one of the slow parts.  I did some experimentation and was able to roughly double the speed by:\r\n\r\n1. using `asyncio.gather` and running all of the `chain.coro_validate_receipt(...)` calls concurrently.\r\n2. Adding some basic optimizations to the `validate_receipt` mechanism to only check each `address` and `topic` for inclusion in the `bloom` filter once (since both addresses and topics can be duplicated across a single receipt).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440910908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440918142",
    "html_url": "https://github.com/ethereum/py-evm/issues/1499#issuecomment-440918142",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1499",
    "id": 440918142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkxODE0Mg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T05:35:19Z",
    "updated_at": "2018-11-22T05:37:05Z",
    "author_association": "MEMBER",
    "body": "> was able to roughly double the speed\r\n\r\nSweet! ~~sounds like that's worth getting into a PR.~~ I see it in #1500 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/440918142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
