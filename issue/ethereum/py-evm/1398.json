{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1398",
  "id": 370501944,
  "node_id": "MDU6SXNzdWUzNzA1MDE5NDQ=",
  "number": 1398,
  "title": "Add type hints to eth module",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 631592722,
      "node_id": "MDU6TGFiZWw2MzE1OTI3MjI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "0e8a16",
      "default": false,
      "description": null
    },
    {
      "id": 775886526,
      "node_id": "MDU6TGFiZWw3NzU4ODY1MjY=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Bounty",
      "name": "Bounty",
      "color": "5319e7",
      "default": false,
      "description": null
    },
    {
      "id": 983613604,
      "node_id": "MDU6TGFiZWw5ODM2MTM2MDQ=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20eth",
      "name": "comp: eth",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983615867,
      "node_id": "MDU6TGFiZWw5ODM2MTU4Njc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20refactor",
      "name": "type: refactor",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983624322,
      "node_id": "MDU6TGFiZWw5ODM2MjQzMjI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20security",
      "name": "type: security",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983628230,
      "node_id": "MDU6TGFiZWw5ODM2MjgyMzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P3%20important",
      "name": "prio: P3 important",
      "color": "fad8c7",
      "default": false,
      "description": ""
    },
    {
      "id": 983629919,
      "node_id": "MDU6TGFiZWw5ODM2Mjk5MTk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E2%20days",
      "name": "effort: E2 days",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 38,
  "created_at": "2018-10-16T08:45:15Z",
  "updated_at": "2019-03-10T10:19:08Z",
  "closed_at": "2018-11-13T19:55:04Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Background\r\n\r\n[Type hints](https://www.python.org/dev/peps/pep-0484/) allow us to perform static type checking, among other things. They raise the security bar by catching bugs at development time that, without type support, may turn into runtime bugs.\r\n\r\n[This stackoverflow answer](https://stackoverflow.com/questions/32557920/what-are-type-hints-in-python-3-5/32558710#32558710) does a great job at describing their main benefits.\r\n\r\n### What is wrong?\r\n\r\nWe currently enforce type hints for the entire `p2p` and `trinity` package. While the `eth` package does have some type hints already, the coverage isn't at 100 % and while it is agreed up on that new code needs to land with type hints, there is not technical enforcement of this rule in place yet.\r\n\r\nThis needs to be fixed by:\r\n\r\n1. Adding all missing type hints.\r\n2. Enforcing (stricter) type checking in CI\r\n\r\n### How\r\n\r\nThere does exist tooling ([monkeytype](https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881)) to the generation of type hints for existing code bases. From my personal experience `monkeytype` *can* be helpful but does still require manual fine tuning. Also, manually adding these type hints does serve as a great boost to the general understanding of the code base as it forces one to think about the code.\r\n\r\n1. Run `mypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p eth`\r\n\r\n2. Eliminate every reported error by adding the right type hint\r\n\r\n3. This should probably be done incrementally in roughly the following steps.\r\n\r\n- `eth.tools` (eligible for payout of 150 DAI)\r\n- `eth.vm` (eligible for payout of 350 DAI)\r\n- everything that is not `eth.vm` (eligible for payout of 300 DAI)\r\n\r\nThe reason for this order is, that it makes it easy to incrementally update the `tox.ini` to enforce stricter rules for such each package without cluttering `tox.ini` too much. \r\n\r\n4. Send frequent pull requests for chunks of work\r\n\r\n### Definition of done\r\n\r\nThis issue is done when the following criteria are met:\r\n\r\n1. The following configuration in `tox.ini` is changed.\r\n\r\nhttps://github.com/ethereum/py-evm/blob/8f74e6b920e1fd4d810724ea842e8a8344ea7094/tox.ini#L107\r\n\r\nIt needs to be:\r\n\r\n```\r\nmypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p eth\r\n```\r\n\r\n2. Usage of `type: ignore` (silencing the type checker) is minimized and there's a reasonable explanation for its usage \r\n\r\n### Stretch goals\r\n\r\nWhen this issue is done, stretch goals can be applied (and individually get funded) to tighten type support to qualify:\r\n\r\n1. `mypy --strict --follow-imports=silent --ignore-missing-imports --no-strict-optional -p eth -p p2p -p trinity`\r\n\r\n2. `mypy --strict --follow-imports=silent --ignore-missing-imports  -p eth -p p2p -p trinity`\r\n\r\n",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1398/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430157126",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430157126",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430157126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDE1NzEyNg==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T08:56:26Z",
    "updated_at": "2018-10-16T08:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to work on this. Could you please assign this to me?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430157126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430370775",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430370775",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430370775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM3MDc3NQ==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:35:56Z",
    "updated_at": "2018-10-16T19:35:56Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. **Open** 2. Started 3. Submitted 4. Done \n\n<hr>\n\n__This issue now has a funding of 800.0 DAI (800.0 USD @ $1.0/DAI)  attached to it.__\n\n * If you would like to work on this issue you can 'start work' [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n* Want to chip in? Add your own contribution [here](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n* Questions? Checkout <a href='https://gitcoin.co/help'>Gitcoin Help</a> or the <a href='https://gitcoin.co/slack'>Gitcoin Slack</a>\n* $45,956.34 more funded OSS Work available on the [Gitcoin Issue Explorer](https://gitcoin.co/explorer)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430370775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430370779",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430370779",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430370779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM3MDc3OQ==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:35:57Z",
    "updated_at": "2018-10-16T19:35:57Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. **Open** 2. Started 3. Submitted 4. Done \n\n<hr>\n\n__This issue now has a funding of 800.0 DAI (800.0 USD @ $1.0/DAI)  attached to it.__\n\n * If you would like to work on this issue you can 'start work' [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n* Want to chip in? Add your own contribution [here](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n* Questions? Checkout <a href='https://gitcoin.co/help'>Gitcoin Help</a> or the <a href='https://gitcoin.co/slack'>Gitcoin Slack</a>\n* $45,956.34 more funded OSS Work available on the [Gitcoin Issue Explorer](https://gitcoin.co/explorer)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430370779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430383324",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430383324",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430383324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM4MzMyNA==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T20:11:43Z",
    "updated_at": "2018-11-14T01:20:49Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. Open 2. **Started** 3. Submitted 4. Done \n\n<hr>\n\n__Work has been started__.\n\n\nThese users each claimed they can complete the work by 2 months from now.\nPlease review their action plans below:\n\n\n**1) [bhargavasomu](https://gitcoin.co/profile/bhargavasomu) has been approved to start work.**\n\nI would make PR for type hinting of 2 modules per day and will try my level best to complete this task as soon as possible. I estimate that this issue would be solved by me within 5 days. I have a pretty good knowledge of the codebase and can solve this issue without much time waste. Maybe this request could be extended to enable type hinting of the left over models also. Please assign this to me as I feel that I can complete this fastly as I have sufficient knowledge of the codebase and  mypy\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n\n\n**2) [svenski123](https://gitcoin.co/profile/svenski123) has applied to start work _(Funders only: [approve worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=approve&worker=svenski123) | [reject worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=reject&worker=svenski123))_.**\n\nI note mypy currently reports 520 type related errors and notes in the eth.\nAdding correct type hints, updating tox to enfore type checks and testing should take no more than a day.\nReview of usage of type: ignore in eth, p2p and other modules and removal were appropriate would take a little longer.\n\nI do see that there is other interest in addressing this issue, however as the issue is still currently unassigned in gitcoin I assume offers are still welcome - if this assumption is incorrect, please accept my apologies.\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n\n\n**3) [bhargavasomu](https://gitcoin.co/profile/bhargavasomu) has applied to start work _(Funders only: [approve worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=approve&worker=bhargavasomu) | [reject worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=reject&worker=bhargavasomu))_.**\n\nI am well versed with type hinting in python and have a good understanding of the codebase. If assigned to me, I will complete this task within at max a 3 days.\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430383324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430401449",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430401449",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430401449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQwMTQ0OQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T21:08:12Z",
    "updated_at": "2018-10-16T21:08:12Z",
    "author_association": "MEMBER",
    "body": "@gitcoinbot I hereby approve @Bhargavasomu working on this issue",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430401449/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430490301",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430490301",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430490301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQ5MDMwMQ==",
    "user": {
      "login": "spm32",
      "id": 9544798,
      "node_id": "MDQ6VXNlcjk1NDQ3OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9544798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spm32",
      "html_url": "https://github.com/spm32",
      "followers_url": "https://api.github.com/users/spm32/followers",
      "following_url": "https://api.github.com/users/spm32/following{/other_user}",
      "gists_url": "https://api.github.com/users/spm32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spm32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spm32/subscriptions",
      "organizations_url": "https://api.github.com/users/spm32/orgs",
      "repos_url": "https://api.github.com/users/spm32/repos",
      "events_url": "https://api.github.com/users/spm32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spm32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T05:01:54Z",
    "updated_at": "2018-10-17T05:01:54Z",
    "author_association": "NONE",
    "body": "@Bhargavasomu You're good to go!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430490301/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430583282",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430583282",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430583282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDU4MzI4Mg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T10:56:00Z",
    "updated_at": "2018-10-17T10:56:00Z",
    "author_association": "MEMBER",
    "body": "@svenski123 @shalabhaggarwal the issue was given to @Bhargavasomu on a first come, first serve basis. For now it should be considered blocked (unless no sign of progress is being made within the next few days).\r\n\r\nThat said, we'll probably open up more bounties for similar tasks in other related projects soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430583282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430699820",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-430699820",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 430699820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY5OTgyMA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:36:24Z",
    "updated_at": "2018-10-17T16:36:24Z",
    "author_association": "MEMBER",
    "body": "@svenski123 and/or @shalabhaggarwal \r\n\r\nI don't think bounties have been added yet, but I've applied for around 10+ new bounties to be added to the `py-trie`, `eth-bloom`, `py_ecc` and `eth-keys` repositories this morning for similar tasks.  Keep an eye out.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/430699820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/431405799",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-431405799",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 431405799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQwNTc5OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-19T15:38:40Z",
    "updated_at": "2018-10-19T15:38:40Z",
    "author_association": "MEMBER",
    "body": "Noting that https://github.com/ethereum/py-evm/blob/e68e7c36a75ba7287858f479fb82141d656c82e6/eth/rlp/headers.py#L66 should be updated to use a `mypy_extensions.TypedDict`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/431405799/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/431738157",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-431738157",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 431738157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTczODE1Nw==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T04:28:11Z",
    "updated_at": "2018-10-22T10:28:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf , the `__call__`function in `eth.vm.opcode` which is an abstract function, uses the variable `computation` which should be of the type `BaseComputation`. But if we import this, it will cause `cyclic dependencies`, as `computation.py` will import `opcode.py`. So should I use the type `Any` or is there some way we cam use to overcome the `cyclic dependencies`?\r\n\r\nEdit - Figured it out",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/431738157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432024932",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432024932",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432024932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjAyNDkzMg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T23:17:51Z",
    "updated_at": "2018-10-22T23:17:51Z",
    "author_association": "MEMBER",
    "body": "you can put the import behind a `If TYPE_CHECKING` check to overcome the cyclic import issue. It's explained here: https://mypy.readthedocs.io/en/latest/common_issues.html#import-cycles",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432024932/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432161285",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432161285",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432161285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE2MTI4NQ==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T09:02:30Z",
    "updated_at": "2018-10-23T09:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "In `eth.vm.stack` the return type of the function `pop` is \r\n`Union[int, Hash32, Tuple[Union[int, Hash32], ...]]`.\r\nThis would lead to a bunch of assert statements, wherever this function is used, especially in the files belonging to `eth.vm.logic`. \r\n    Should I go ahead with putting the assert statements?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432161285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432176410",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432176410",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432176410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE3NjQxMA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T09:43:59Z",
    "updated_at": "2018-10-23T09:43:59Z",
    "author_association": "MEMBER",
    "body": "> Should I go ahead with putting the assert statements?\r\n\r\nI think the `Stack` is one of the places where we want to try hard to avoid adding `assert` statements because it may end up having a huge negative impact on the EVM performance.\r\n\r\nI think my preference would be split this into two methods:\r\n\r\n- one that returns only a single item\r\n- one that returns multiple items\r\n\r\nSome name suggestions:\r\n\r\n| Single  | Multiple |\r\n| ------------- | ------------- |\r\n| pop_single  | pop_multiple  |\r\n| pop  | pop_multiple  |\r\n| pop  | pop_num  |\r\n\r\n/cc @pipermerriam @carver \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432176410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432248220",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432248220",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432248220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjI0ODIyMA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T13:32:55Z",
    "updated_at": "2018-10-23T13:34:01Z",
    "author_association": "MEMBER",
    "body": "Maybe I shouldn't be commenting at 6am but...\r\n\r\nAnother option is to go as far as enumerating all the possibilities, like:\r\n- `pop1int()`\r\n- `pop2int()`\r\n- `pop3int()`\r\n- `pop1bytes()`\r\n- `pop2bytes()`\r\n- `pop3bytes()`\r\n- Is that it? Not sure how the \"any type\" hint is used\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432248220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432265908",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432265908",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432265908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjI2NTkwOA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T14:18:22Z",
    "updated_at": "2018-10-23T14:18:22Z",
    "author_association": "MEMBER",
    "body": "@carver that API looks...extreme :sweat_smile: I'd prefer just to split between single / multiple which should be enough to overcome the type ambiguity. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432265908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432303381",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432303381",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432303381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMwMzM4MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T15:47:21Z",
    "updated_at": "2018-10-23T15:47:21Z",
    "author_association": "MEMBER",
    "body": "I'd like to remove the support for multiple types in the stack.  I think it was a bad design decision.  Only type that should probably be allowed on the stack is `int`.  And :+1: for something like `pop1()` `pop2()`, `pop3()` API.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432303381/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432312045",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432312045",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432312045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMxMjA0NQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:07:51Z",
    "updated_at": "2018-10-23T16:09:11Z",
    "author_association": "MEMBER",
    "body": ">I'd like to remove the support for multiple types in the stack. I think it was a bad design decision\r\n\r\n:+1: \r\n\r\n>And :+1:  for something like `pop1()` `pop2()`, `pop3()`\r\n\r\nJust to be clear, are we talking about shorthand APIs that delegate to something like `pop_num(2)` or do you really mean something that is implemented as:\r\n\r\n```python\r\ndef pop3(self):\r\n    yield self.pop()\r\n    yield self.pop()\r\n    yield self.pop()\r\n```\r\n\r\nBecause, that just strikes me as a bit redundant compared to.\r\n\r\n```python\r\ndef pop_num(self, num):\r\n    for _ in range(num):\r\n        yield self.pop()\r\n```\r\n\r\nAnd then\r\n\r\n```python\r\ndef pop3(self):\r\n    yield from self.pop_num(3)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432312045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432315769",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432315769",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432315769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMxNTc2OQ==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:16:41Z",
    "updated_at": "2018-10-23T16:16:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf the above method looks promising and we could still have the same function signature as the present one, just in case we need the flexibility.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432315769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432319903",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432319903",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432319903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMxOTkwMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:25:36Z",
    "updated_at": "2018-10-23T16:25:36Z",
    "author_association": "MEMBER",
    "body": "@Bhargavasomu my proposal to remove multi-type support from the stack should be done independently of this PR as it's going to touch a lot of code, but should be very straight-forward to change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432319903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432320401",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432320401",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432320401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMyMDQwMQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:26:41Z",
    "updated_at": "2018-10-23T16:26:41Z",
    "author_association": "MEMBER",
    "body": "@cburgdorf I'm *inclined* to do something that's really dumb and easy to read.\r\n\r\n```python\r\ndef pop3(self):\r\n    return (self.pop(), self.pop(), self.pop())\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432320401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432321131",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432321131",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432321131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMyMTEzMQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:28:41Z",
    "updated_at": "2018-10-23T16:28:55Z",
    "author_association": "MEMBER",
    "body": "The primary benefit I see is the strict return type signature.\r\n\r\n```py\r\ndef pop(self) -> int:\r\n  ...\r\n\r\ndef pop2(self) -> Tuple[int, int]:\r\n  return (self.pop(), self.pop())\r\n\r\ndef pop3(self) -> Tuple[int, int, int]:\r\n  return (self.pop(), self.pop(), self.pop())",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432321131/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432321660",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432321660",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432321660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMyMTY2MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:30:14Z",
    "updated_at": "2018-10-23T16:30:14Z",
    "author_association": "MEMBER",
    "body": "Though, on second thought, this is a part of the code where raw performance matters so reducing the number of call frames would be ideal.\r\n\r\n```python\r\ndef pop3(self):\r\n    try:\r\n        return (self.values.pop(), self.values.pop(), self.values.pop())\r\n    except IndexError:\r\n        raise InsufficientStack(\"...\")\r\n```\r\n\r\n3 fewer call frames at the expense of requiring inline exception handling for each method...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432321660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432322681",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-432322681",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 432322681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjMyMjY4MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T16:33:09Z",
    "updated_at": "2018-10-23T16:33:09Z",
    "author_association": "MEMBER",
    "body": "And deeper down the rabbit hole.\r\n\r\n```python\r\ndef pop3(self):\r\n    popped = self.values[-3:]\r\n    if len(popped) != 3:\r\n        raise InsufficientStack(\"...\"\r\n    del self.values[-3:]\r\n    return tuple(popped)\r\n```\r\n\r\nI'm in the middle of something else but it'd be nice to profile these different approaches and see if any are clearly faster.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/432322681/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/433349890",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-433349890",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 433349890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzM0OTg5MA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T09:38:14Z",
    "updated_at": "2018-10-26T09:38:14Z",
    "author_association": "MEMBER",
    "body": "@ceresstation We just merged #1420 as a first milestone to this. Can we please pay out 150 DAI (out of the entire 800 DAI) to @Bhargavasomu already?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/433349890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/433678407",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-433678407",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 433678407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY3ODQwNw==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-28T05:47:15Z",
    "updated_at": "2018-10-28T06:12:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess the type hinting of the `eth.vm` module has to wait till the `pop` function of the stack is modified. I am going ahead with modifying the stack `pop` function throughout the whole codebase, including the testcases. The modified code would be submitted as part of another PR.\r\n\r\nThere is some part of the codebase which pushes `bytes(Hash32 and Address)` into the stack. So I guess we should convert the bytes to int via `big_endian_to_int` while pushing it into the stack (`Making the Stack values of only type int`). Is that it @pipermerriam?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/433678407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/434500298",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-434500298",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 434500298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDUwMDI5OA==",
    "user": {
      "login": "frankchen07",
      "id": 7516920,
      "node_id": "MDQ6VXNlcjc1MTY5MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7516920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankchen07",
      "html_url": "https://github.com/frankchen07",
      "followers_url": "https://api.github.com/users/frankchen07/followers",
      "following_url": "https://api.github.com/users/frankchen07/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankchen07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankchen07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankchen07/subscriptions",
      "organizations_url": "https://api.github.com/users/frankchen07/orgs",
      "repos_url": "https://api.github.com/users/frankchen07/repos",
      "events_url": "https://api.github.com/users/frankchen07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankchen07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-30T22:57:54Z",
    "updated_at": "2018-10-30T22:57:54Z",
    "author_association": "NONE",
    "body": "^ @ceresstation, when you get the chance!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/434500298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436458623",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-436458623",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 436458623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjQ1ODYyMw==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T00:24:43Z",
    "updated_at": "2019-03-10T10:19:08Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. Open 2. Started 3. Submitted 4. **Done** \n\n<hr>\n\n__Workers have applied to start work__.\n\n\nThese users each claimed they can complete the work by 1 month, 3 weeks ago.\nPlease review their action plans below:\n\n\n**1) [armaspablosebastian](https://gitcoin.co/profile/armaspablosebastian) has applied to start work _(Funders only: [approve worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=approve&worker=armaspablosebastian) | [reject worker](https://gitcoin.co/issue/ethereum/py-evm/1398/1506?mutate_worker_action=reject&worker=armaspablosebastian))_.**\n\nThere's not much mystery, I'm going to run mypy and I'm going to add all missing type hints in the required order.\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/py-evm/1398/1506).\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436458623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436880660",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-436880660",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 436880660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg4MDY2MA==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T05:45:51Z",
    "updated_at": "2018-11-08T05:45:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf does #1451 complete the type hinting of the `eth.vm` module, or are there any more improvements I am supposed to do? Or can I type hint the rest of the sub-modules left in `eth`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436880660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436895474",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-436895474",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 436895474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg5NTQ3NA==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T07:13:11Z",
    "updated_at": "2018-11-08T07:13:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf in `eth.vm.spoof` I see that `SpoofTransaction` doesn't inherit `BaseTransaction` which doesn't make sense logically. Is there anything we could do about this or was it designed in such a way on purpose? This is because we have an issue in `eth.estimators.gas` where the argument to `state.execute_transaction()` is `SpoofTransaction`, but the function expects the type `BaseTransaction`.\r\n\r\nThat said, I am using `cast` as of now. Please let me know if we could do better.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436895474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436904046",
    "html_url": "https://github.com/ethereum/py-evm/issues/1398#issuecomment-436904046",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1398",
    "id": 436904046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjkwNDA0Ng==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T07:53:25Z",
    "updated_at": "2018-11-08T07:53:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf in `eth.rlp.headers` there is an overloading, and mypy is throwing this error\r\n`error: Overloaded function implementation does not accept all possible arguments of signature 1`.\r\n\r\nBut looking at the code, we have used the same signature(`__init__`) twice which I think is not needed. Can I remove one of the `__init__`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/436904046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
