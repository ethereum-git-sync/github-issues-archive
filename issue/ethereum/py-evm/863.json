{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/863",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/863/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/863/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/863/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/863",
  "id": 329071945,
  "node_id": "MDU6SXNzdWUzMjkwNzE5NDU=",
  "number": 863,
  "title": "Unhandled KeyboardInterrupt exceptions on Unix when using the spawn start method for multiprocessing",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871939,
      "node_id": "MDU6TGFiZWw2MzA4NzE5Mzk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20bug",
      "name": "type: bug",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/4",
    "html_url": "https://github.com/ethereum/py-evm/milestone/4",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/4/labels",
    "id": 3512809,
    "node_id": "MDk6TWlsZXN0b25lMzUxMjgwOQ==",
    "number": 4,
    "title": "Margaret Hamilton (Trinity Release)",
    "description": "https://github.com/ethereum/py-evm/milestone/4",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 20,
    "state": "closed",
    "created_at": "2018-07-20T20:00:14Z",
    "updated_at": "2018-08-20T02:56:05Z",
    "due_on": "2018-08-14T07:00:00Z",
    "closed_at": "2018-08-20T02:56:05Z"
  },
  "comments": 2,
  "created_at": "2018-06-04T14:09:19Z",
  "updated_at": "2018-08-14T16:46:45Z",
  "closed_at": "2018-08-14T16:46:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nWhen using the `spawn` method (our default) for the multiprocessing module, I often get a bunch of unhandled KeyboardInterrupt exceptions when I Ctrl+C trinity. If using `TRINITY_MP_CONTEXT=fork` I never seem to get those\r\n\r\n```\r\n    INFO  06-04 15:06:13       chain  Imported 192 headers in 2.25 seconds, new head: #1346212 (1cd32f)                                                                         \r\n^C    INFO  06-04 15:06:14        main  Keyboard Interrupt: Stopping                                                                                                            \r\nProcess Process-2:3:                                                                                                                                                            \r\nProcess Process-2:1:                                                                                                                                                            \r\n    INFO  06-04 15:06:14         ipc  Sent SIGINT to process 27860, waiting 5 seconds for it to terminate                                                                       \r\nProcess Process-2:2:                                                                                                                                                            \r\nTraceback (most recent call last):                                                                                                                                              \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap                                                                                                 \r\n    self.run()                                                                                                                                                                  \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 93, in run                                                                                                         \r\n    self._target(*self._args, **self._kwargs)                                                                                                                                   \r\n  File \"/usr/lib/python3.6/concurrent/futures/process.py\", line 169, in _process_worker                                                                                         \r\n    call_item = call_queue.get(block=True)                                                                                                                                      \r\n  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 93, in get                                                                                                          \r\n    with self._rlock:                                                                                                                                                           \r\n  File \"/usr/lib/python3.6/multiprocessing/synchronize.py\", line 96, in __enter__                                                                                               \r\n    return self._semlock.__enter__()                                                                                                                                            \r\nKeyboardInterrupt                                                                                                                                                               \r\nTraceback (most recent call last):                                                                                                                                              \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap                                                                                                 \r\n    self.run()                                                                                                                                                                  \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 93, in run                                                                                                         \r\n    self._target(*self._args, **self._kwargs)                                                                                                                                   \r\n  File \"/usr/lib/python3.6/concurrent/futures/process.py\", line 169, in _process_worker                                                                                         \r\n    call_item = call_queue.get(block=True)                                                                                                                                      \r\n  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 94, in get                                                                                                          \r\n    res = self._recv_bytes()                                                                                                                                                    \r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 216, in recv_bytes                                                                                              \r\n    buf = self._recv_bytes(maxlength)                                                                                                                                           \r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 407, in _recv_bytes                                                                                             \r\n    buf = self._recv(4)\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 379, in _recv\r\n    chunk = read(handle, remaining)\r\nKeyboardInterrupt\r\n```\r\n\r\nit looks like the kind of thing that would be caused by the [multiprocessing module](https://docs.python.org/3.6/library/multiprocessing.html#multiprocessing.Semaphore):\r\n\r\n> If the SIGINT signal generated by Ctrl-C arrives while the main thread is blocked by a call to BoundedSemaphore.acquire(),\r\nLock.acquire(), RLock.acquire(), Semaphore.acquire(), Condition.acquire() or Condition.wait() then the call will be immediately\r\ninterrupted and KeyboardInterrupt will be raised.\r\n",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/863/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/863/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/412555132",
    "html_url": "https://github.com/ethereum/py-evm/issues/863#issuecomment-412555132",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/863",
    "id": 412555132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1NTEzMg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:17:38Z",
    "updated_at": "2018-08-13T15:17:38Z",
    "author_association": "MEMBER",
    "body": "In trying to remember why `spawn` was chosen, this is the best I could find.\r\n\r\nhttps://docs.python.org/3.6/library/multiprocessing.html#contexts-and-start-methods\r\n\r\nIf we use `fork` it looks like we won't be usable on windows platforms.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/412555132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/412938973",
    "html_url": "https://github.com/ethereum/py-evm/issues/863#issuecomment-412938973",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/863",
    "id": 412938973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjkzODk3Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T16:46:44Z",
    "updated_at": "2018-08-14T16:46:44Z",
    "author_association": "MEMBER",
    "body": "Fixed in https://github.com/ethereum/py-evm/pull/1177",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/412938973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
