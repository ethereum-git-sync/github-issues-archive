{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1383",
  "id": 368806111,
  "node_id": "MDU6SXNzdWUzNjg4MDYxMTE=",
  "number": 1383,
  "title": "Add beacon chain / eth2.0 related NewType",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    },
    {
      "id": 983628532,
      "node_id": "MDU6TGFiZWw5ODM2Mjg1MzI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P4%20nice%20to%20have",
      "name": "prio: P4 nice to have",
      "color": "fef2c0",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ChihChengLiang",
    "id": 3391420,
    "node_id": "MDQ6VXNlcjMzOTE0MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChihChengLiang",
    "html_url": "https://github.com/ChihChengLiang",
    "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
    "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
    "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
    "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
    "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-10-10T18:58:32Z",
  "updated_at": "2018-12-31T10:04:46Z",
  "closed_at": "2018-12-31T10:04:46Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\nhttps://github.com/ethereum/py-evm/pull/1373#discussion_r224107745\r\nTo make the types more explict!\r\n\r\n### How can it be fixed\r\n1. Time unit - `Second` - and also can be used for PoW chain?\r\n2. For beacon chain, some other `NewType` candidates: `Slot`, `ShardID`. And [with the latest spec](https://github.com/ethereum/eth2.0-specs/blob/cbd254a3090771e79ccc8eb8e21c7b32dba93c45/specs/beacon-chain.md#constants): `ValidatorStatus`, `SpecialRecordType`, `ValidatorSetDeltaFlag`.\r\n3. **EDIT:** Move to [ethereum/eth-typing/](https://github.com/ethereum/eth-typing/)\r\n\r\n",
  "closed_by": {
    "login": "ChihChengLiang",
    "id": 3391420,
    "node_id": "MDQ6VXNlcjMzOTE0MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChihChengLiang",
    "html_url": "https://github.com/ChihChengLiang",
    "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
    "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
    "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
    "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
    "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1383/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448128607",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-448128607",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 448128607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODEyODYwNw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T07:53:45Z",
    "updated_at": "2018-12-18T07:56:16Z",
    "author_association": "MEMBER",
    "body": "@cburgdorf is there any known solution to define: (i) the length of an integer (ii) unsigned/signed integer via type hinting?\r\np.s. I searched `mypy` but didn't find a similar use case like ours. e.g., define `Slot` is `uint64`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448128607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448302993",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-448302993",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 448302993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODMwMjk5Mw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T17:30:28Z",
    "updated_at": "2018-12-18T17:30:28Z",
    "author_association": "MEMBER",
    "body": "> is there any known solution to define: (i) the length of an integer (ii) unsigned/signed integer via type hinting?\r\n\r\nNo, `mypy` can not do these things. What it *can* do is to allow you different types for different *intents* and ensure to trace the flow of these to prevent the wrong one ending up at a wrong place.\r\n\r\nConsider this:\r\n\r\n```python\r\n\r\ndef create_some_thing_unsigned() -> int:\r\n    ...\r\n\r\ndef create_some_thing_signed() -> int:\r\n    ...\r\n\r\ndef consume_something_unsigned(unsigned: int):\r\n    ...\r\n```\r\n\r\nclearly we want to prevent the following situation:\r\n\r\n```python\r\nx = create_something_signed()\r\nconsume_something_unsigned(x)  # runtime crash!\r\n```\r\n\r\nMypy can help you with this if you create a `NewType`.\r\n\r\n```python\r\nUnsignedInt = NewType('UnsignedInt', int)\r\n\r\ndef create_some_thing_unsigned() -> UnsignedInt:\r\n    ...\r\n\r\ndef create_some_thing_signed() -> int:\r\n    ...\r\n\r\ndef consume_something_unsigned(unsigned: UnsignedInt):\r\n    ...\r\n```\r\n\r\nNow, if you'd try this again, mypy would yell at you because it knows that `x` is not of type `UnsignedInt`.\r\n\r\n```python\r\nx = create_something_signed()\r\nconsume_something_unsigned(x)  # development time mypy error!\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448302993/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448523382",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-448523382",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 448523382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODUyMzM4Mg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T09:13:15Z",
    "updated_at": "2018-12-19T09:13:15Z",
    "author_association": "MEMBER",
    "body": "@cburgdorf thanks for the reply!\r\n\r\nRe: > Move to ethereum/eth-typing/\r\n\r\nWhat do you think about making the beacon chain new types in `eth/beacon/typing.py` temporarily, and then move to `eth-typing` once we settle down? I want to sort out what are the new types we need.\r\n\r\nThe types that I think we'd need:\r\n```python\r\nSlotNumber = NewType('SlotNumber', int)  # uint64\r\nShardNumber = NewType('ShardNumber', int)  # uint64\r\nBLSPubkey = NewType('BLSPubkey', int)  # uint384\r\nBLSSignature = NewType('BLSSignature', Tuple[int, int])  # Tuple[uint384, uint384]\r\nValidatorIndex = NewType('ValidatorIndex', int)  # uint24\r\nBitfield = NewType('Bitfield', int)  # uint64\r\n```\r\n\r\nThe types that I'm not 100% sure:\r\n```python\r\nAmountInEther = NewType('AmountInEther', int)  # uint64\r\nAmountInGwei = NewType('AmountInGwei', int)  # uint64\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448523382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448574312",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-448574312",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 448574312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU3NDMxMg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T12:16:12Z",
    "updated_at": "2018-12-19T12:16:12Z",
    "author_association": "MEMBER",
    "body": ">What do you think about making the beacon chain new types in `eth/beacon/typing.py` temporarily, and then move to `eth-typing` once we settle down?\r\n\r\nYes, that would be my preferred approach as well :+1:  \r\n\r\n>The types that I'm not 100% sure:\r\n\r\nEnsuring that an API that expects `Gwei` isn't called with `Ether` is exactly what NewTypes are for. The canonical example is usually this NASA bug where an API was called with *miles* that expected *kilometers* and caused the rocket to crash. This falls into the same category.\r\n\r\nI would just simplify the names to\r\n\r\n```\r\nEther = NewType('Ether', int)  # uint64\r\nGwei = NewType('Gwei', int)  # uint64\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448574312/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450098824",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-450098824",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 450098824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDA5ODgyNA==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T08:01:55Z",
    "updated_at": "2018-12-27T08:01:55Z",
    "author_association": "MEMBER",
    "body": "Working on this",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450098824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450170888",
    "html_url": "https://github.com/ethereum/py-evm/issues/1383#issuecomment-450170888",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1383",
    "id": 450170888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDE3MDg4OA==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T15:22:51Z",
    "updated_at": "2018-12-27T15:27:21Z",
    "author_association": "MEMBER",
    "body": "another NewType that would be great is `BLSSignature`\r\n\r\n@hwwhww laid out this plan:\r\n* Determine the type of signature on specs - both phase 0 spec and BLS spec\r\n* e.g. EMPTY_SIGNATURE is now [bytes48(0), bytes48(0)] while all the SSZ signature fields are [uint384] now.\r\n\r\nAnd then we can create a `BLSSignature` type for use in various places (like the beacon chain).\r\n\r\nI'm leaving a comment so this task can be rolled into this issue. I'll take a look at defining the actual signatures if I get some time\r\n\r\nEDIT: related https://github.com/ethereum/eth2.0-specs/issues/308",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450170888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
