{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/977/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/977/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/977/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/977",
  "id": 337113836,
  "node_id": "MDU6SXNzdWUzMzcxMTM4MzY=",
  "number": 977,
  "title": "Support contract error reason strings",
  "user": {
    "login": "dylanjw",
    "id": 8933231,
    "node_id": "MDQ6VXNlcjg5MzMyMzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8933231?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dylanjw",
    "html_url": "https://github.com/dylanjw",
    "followers_url": "https://api.github.com/users/dylanjw/followers",
    "following_url": "https://api.github.com/users/dylanjw/following{/other_user}",
    "gists_url": "https://api.github.com/users/dylanjw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dylanjw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dylanjw/subscriptions",
    "organizations_url": "https://api.github.com/users/dylanjw/orgs",
    "repos_url": "https://api.github.com/users/dylanjw/repos",
    "events_url": "https://api.github.com/users/dylanjw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dylanjw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 983613604,
      "node_id": "MDU6TGFiZWw5ODM2MTM2MDQ=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20eth",
      "name": "comp: eth",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983614747,
      "node_id": "MDU6TGFiZWw5ODM2MTQ3NDc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20feature",
      "name": "type: feature",
      "color": "eeeeee",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-06-29T19:36:18Z",
  "updated_at": "2018-07-19T16:26:34Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "* py-evm Version: 0.2.0a18\r\n* OS: linux\r\n* Python Version (python --version): 3.6\r\n\r\n### What is wrong?\r\n\r\nCurrently in the case of revert opcodes `evm.exceptions.Revert` is raised. Since solidity 0.4.22, revert can pass reason string.  See [solidity doc](http://solidity.readthedocs.io/en/v0.4.24/control-structures.html#error-handling-assert-require-revert-and-exceptions). \r\n\r\nreferences: \r\nhttps://github.com/ethereum/EIPs/issues/838\r\nhttps://github.com/ethereum/solidity/pull/3364#discussion_r180455883\r\n\r\n### How can it be fixed\r\n\r\nOne obstacle is how py-evm does contract calls, by running a transaction in a temporary state with gas price set to zero. Normally calls don't have a gas set, so gas estimation is triggered, but then fails, masking the (would be) revert return value. Somewhat unrelated to the core issue of returning the reason string.\r\n\r\nsolidity code:\r\n\r\n```\r\npragma solidity ^0.4.22;\r\n\r\ncontract DoRevert {\r\n    function do_revert(bool _revert) public returns (string message) {\r\n        if (_revert) {\r\n            revert(\"ribbert, ribbert\");\r\n        }   \r\n        return \"No ribbert\";\r\n    }   \r\n}\r\n```\r\nweb3 with eth-tester provider py-evm backend\r\n\r\n```python\r\ncontract.functions.do_revert(True).call()\r\n```\r\n\r\nexception:\r\n\r\n```\r\n../../../web3/contract.py:1110: in call\r\n    **self.kwargs\r\n../../../web3/contract.py:1364: in call_contract_function\r\n    return_data = web3.eth.call(call_transaction, block_identifier=block_id)\r\n../../../venv/lib/python3.6/site-packages/eth_utils/functional.py:22: in inner\r\n    return callback(fn(*args, **kwargs))\r\n../../../web3/eth.py:294: in call\r\n    [transaction, block_identifier],\r\n../../../web3/manager.py:107: in request_blocking\r\n    response = self._make_request(method, params)\r\n../../../web3/manager.py:90: in _make_request\r\n    return request_func(method, params)\r\n../../../web3/middleware/gas_price_strategy.py:18: in middleware\r\n    return make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/middleware/attrdict.py:18: in middleware\r\n    response = make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/middleware/normalize_errors.py:9: in middleware\r\n    result = make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/providers/eth_tester/middleware.py:309: in middleware\r\n    fill_default_gas,\r\ncytoolz/functoolz.pyx:589: in cytoolz.functoolz.pipe\r\n    ???\r\ncytoolz/functoolz.pyx:565: in cytoolz.functoolz.c_pipe\r\n    ???\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/providers/eth_tester/middleware.py:295: in fill_default\r\n    guess_val = guess_func(web3, transaction)\r\n../../../web3/providers/eth_tester/middleware.py:287: in guess_gas\r\n    return web3.eth.estimateGas(transaction) * 2\r\n../../../web3/eth.py:304: in estimateGas\r\n    [transaction],\r\n../../../web3/manager.py:107: in request_blocking\r\n    response = self._make_request(method, params)\r\n../../../web3/manager.py:90: in _make_request\r\n    return request_func(method, params)\r\n../../../web3/middleware/gas_price_strategy.py:18: in middleware\r\n    return make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/middleware/attrdict.py:18: in middleware\r\n    response = make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/middleware/normalize_errors.py:9: in middleware\r\n    result = make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/providers/eth_tester/middleware.py:320: in middleware\r\n    return make_request(method, [filled_transaction] + params[1:])\r\n../../../web3/middleware/fixture.py:12: in middleware\r\n    return make_request(method, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/middleware/formatting.py:48: in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n../../../web3/providers/eth_tester/main.py:46: in make_request\r\n    response = delegator(self.ethereum_tester, params)\r\ncytoolz/functoolz.pyx:232: in cytoolz.functoolz.curry.__call__\r\n    ???\r\n../../../web3/providers/eth_tester/defaults.py:36: in call_eth_tester\r\n    return getattr(eth_tester, fn_name)(*fn_args, **fn_kwargs)\r\n../../../venv/lib/python3.6/site-packages/eth_tester/main.py:466: in estimate_gas\r\n    raw_gas_estimate = self.backend.estimate_gas(raw_transaction)\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/977/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/977/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405540323",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-405540323",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 405540323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTU0MDMyMw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T10:45:52Z",
    "updated_at": "2018-07-17T10:45:52Z",
    "author_association": "MEMBER",
    "body": "@carver may I try and tackle this one now? As I am anyways working on adding reason string support to vyper (https://github.com/ethereum/vyper/issues/889) :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405540323/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405808410",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-405808410",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 405808410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTgwODQxMA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T04:53:19Z",
    "updated_at": "2018-07-18T04:53:19Z",
    "author_association": "MEMBER",
    "body": "Yeah, dig in @jacqueswww ! As long as @dylanjw hasn't started on it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405808410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405818527",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-405818527",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 405818527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTgxODUyNw==",
    "user": {
      "login": "dylanjw",
      "id": 8933231,
      "node_id": "MDQ6VXNlcjg5MzMyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8933231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dylanjw",
      "html_url": "https://github.com/dylanjw",
      "followers_url": "https://api.github.com/users/dylanjw/followers",
      "following_url": "https://api.github.com/users/dylanjw/following{/other_user}",
      "gists_url": "https://api.github.com/users/dylanjw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dylanjw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dylanjw/subscriptions",
      "organizations_url": "https://api.github.com/users/dylanjw/orgs",
      "repos_url": "https://api.github.com/users/dylanjw/repos",
      "events_url": "https://api.github.com/users/dylanjw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dylanjw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T06:00:53Z",
    "updated_at": "2018-07-18T06:00:53Z",
    "author_association": "MEMBER",
    "body": "I have not.  @jacqueswww  Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405818527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405867511",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-405867511",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 405867511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTg2NzUxMQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T09:20:00Z",
    "updated_at": "2018-07-18T09:20:00Z",
    "author_association": "MEMBER",
    "body": "Cool, will start digging later today :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405867511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406306372",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-406306372",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 406306372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwNjM3Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T14:57:51Z",
    "updated_at": "2018-07-19T14:58:36Z",
    "author_association": "MEMBER",
    "body": "@carver @dylanjw I wasn't exactly sure where to do the decoding. It felt like the EVM side of things should only emit bytes. That's why I did the changes eth-tester, also having the contract test there is something we probably want in anycase (if we end up doing the decoding in py-evm).\r\n\r\nhttps://github.com/ethereum/eth-tester/compare/master...jacqueswww:revert_reason_message?expand=1\r\n\r\nTo move it to py-evm, one would just move this decoding part\r\n\r\n```python\r\n            # Check to see if it's a EIP838 standard error, with ABI signature\r\n            # of Error(string). If so - extract the message/reason.\r\n            if isinstance(computation._error, EVMRevert) and \\\r\n               len(computation._error.args) > 0 and \\\r\n               computation._error.args[0][:4] == b'\\x08\\xc3y\\xa0':\r\n                error_str = computation._error.args[0][36:]\r\n                msg = decode_single('bytes', error_str)\r\n```\r\n\r\nto the `Revert` exception itself or in the opcode https://github.com/ethereum/py-evm/blob/master/eth/vm/logic/system.py#L39.\r\n\r\nLet me know what is best :smile_cat: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406306372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406324523",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-406324523",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 406324523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMyNDUyMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:48:59Z",
    "updated_at": "2018-07-19T15:48:59Z",
    "author_association": "MEMBER",
    "body": "I think you've got this in the correct location (`eth-tester`).  Once you get the PR open I've got some minor feedback, but overall it looks like a solid approach.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406324523/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406336414",
    "html_url": "https://github.com/ethereum/py-evm/issues/977#issuecomment-406336414",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/977",
    "id": 406336414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMzNjQxNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T16:26:34Z",
    "updated_at": "2018-07-19T16:26:34Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam great! Create the PR at https://github.com/ethereum/eth-tester/pull/115",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406336414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
