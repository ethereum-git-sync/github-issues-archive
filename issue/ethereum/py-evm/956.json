{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/956/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/956/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/956/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/956",
  "id": 335412457,
  "node_id": "MDU6SXNzdWUzMzU0MTI0NTc=",
  "number": 956,
  "title": "Exception information lost when it passes through multiprocessing-based services",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-06-25T13:41:33Z",
  "updated_at": "2018-07-11T16:14:10Z",
  "closed_at": "2018-07-11T16:14:10Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "When we call a method on one of our multiprocessing-based services and that method raises an exception, the multiprocessing module catches and re-raises it, but then we end up with a traceback that doesn't show the code which originally raised the exception, like this:\r\n\r\n```\r\n   ERROR  06-23 08:26:27  base_events  Task exception was never retrieved\r\nfuture: <Task finished coro=<FastChainSyncer.sync() done, defined at /home/salgado/src/py-evm/p2p/chain.py:122> exception=KeyError(b'(e\\xed\\x84\\xeark\\xf1\\x8c\\x9d\\xb8/\\xce\\x9f\\x\r\na0l\\xe8\\x11\\xef\\x88\\x83\\x933<4\\xab\\x15{\\xc9+\\xfa1',)>\r\nTraceback (most recent call last):\r\n  File \"/home/salgado/src/py-evm/p2p/chain.py\", line 135, in sync\r\n    await self._sync(peer)\r\n  File \"/home/salgado/src/py-evm/p2p/chain.py\", line 184, in _sync\r\n    head_number = await self._process_headers(peer, headers)\r\n  File \"/home/salgado/src/py-evm/p2p/chain.py\", line 610, in _process_headers\r\n    await self.wait(self.chain.coro_import_block(block, perform_validation=True))\r\n  File \"/home/salgado/src/py-evm/p2p/service.py\", line 32, in wait\r\n    return await self.wait_first(awaitable, token=token, timeout=timeout)\r\n  File \"/home/salgado/src/py-evm/p2p/service.py\", line 51, in wait_first\r\n    return await wait_with_token(*awaitables, token=token_chain, timeout=timeout)\r\n  File \"/home/salgado/src/py-evm/p2p/cancel_token.py\", line 119, in wait_with_token\r\n    return done.pop().result()\r\n  File \"/home/salgado/src/py-evm/trinity/utils/mp.py\", line 27, in method\r\n    args,\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/lib/python3.6/multiprocessing/managers.py\", line 772, in _callmethod\r\n    raise convert_to_error(kind, result)\r\nKeyError: b'(e\\xed\\x84\\xeark\\xf1\\x8c\\x9d\\xb8/\\xce\\x9f\\xa0l\\xe8\\x11\\xef\\x88\\x83\\x933<4\\xab\\x15{\\xc9+\\xfa1'\r\n```\r\n\r\nIn the log above, the `KeyError` was generated inside `coro_import_block()`, but one has no idea exactly where. We need to somehow retain/log that info so that we can debug those errors, otherwise it is really hard",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/956/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/956/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/400158047",
    "html_url": "https://github.com/ethereum/py-evm/issues/956#issuecomment-400158047",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
    "id": 400158047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE1ODA0Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T02:33:26Z",
    "updated_at": "2018-06-26T02:33:26Z",
    "author_association": "MEMBER",
    "body": "Might be worth seeing if the `result` there has a proper traceback tied to it and whether we can manually print the error using the [`traceback`](https://docs.python.org/3.5/library/traceback.html) module.  If so, we could add this handling code to our `async_method` (and maybe `sync_method`) decorators.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/400158047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403021297",
    "html_url": "https://github.com/ethereum/py-evm/issues/956#issuecomment-403021297",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
    "id": 403021297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAyMTI5Nw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T12:36:08Z",
    "updated_at": "2018-07-06T12:36:08Z",
    "author_association": "MEMBER",
    "body": "Inside `_callmethod()` `result` is an `Exception` instance with an empty `__traceback__`, so ISTM the only way to preserve the traceback would be to wrap our actual methods (e.g. `HeaderDB.get_canonical_block_hash()`) with something that catches any exceptions, extracts the traceback, saves it on the exception instance itself and then re-raises it. That way I believe we'd be able to access that in `result`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403021297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403553407",
    "html_url": "https://github.com/ethereum/py-evm/issues/956#issuecomment-403553407",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
    "id": 403553407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzU1MzQwNw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-09T17:16:54Z",
    "updated_at": "2018-07-09T17:16:54Z",
    "author_association": "MEMBER",
    "body": "It looks quite dirty but it looks like we could swap in our own `subprocess.Manager` class to do this.  Best path I see is to use a new subclass of `subprocess.managers.Server` with an overridden `serve_client` method which wraps the `conn` object in some way such that we can intercept `conn.send` when the message is an exception response.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403553407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403879468",
    "html_url": "https://github.com/ethereum/py-evm/issues/956#issuecomment-403879468",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
    "id": 403879468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzg3OTQ2OA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-10T16:11:10Z",
    "updated_at": "2018-07-10T16:11:10Z",
    "author_association": "MEMBER",
    "body": "That sounds quite nasty indeed, so I thought I'd try a different approach and came up with #1004. How do you feel about it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403879468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403890837",
    "html_url": "https://github.com/ethereum/py-evm/issues/956#issuecomment-403890837",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/956",
    "id": 403890837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzg5MDgzNw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-10T16:47:48Z",
    "updated_at": "2018-07-10T16:47:48Z",
    "author_association": "MEMBER",
    "body": "👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403890837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
