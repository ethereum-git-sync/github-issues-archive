{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/865/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/865/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/865/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/865",
  "id": 329173339,
  "node_id": "MDU6SXNzdWUzMjkxNzMzMzk=",
  "number": 865,
  "title": "DAO fork-choice issue",
  "user": {
    "login": "1ultimat3",
    "id": 2185330,
    "node_id": "MDQ6VXNlcjIxODUzMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2185330?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/1ultimat3",
    "html_url": "https://github.com/1ultimat3",
    "followers_url": "https://api.github.com/users/1ultimat3/followers",
    "following_url": "https://api.github.com/users/1ultimat3/following{/other_user}",
    "gists_url": "https://api.github.com/users/1ultimat3/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/1ultimat3/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/1ultimat3/subscriptions",
    "organizations_url": "https://api.github.com/users/1ultimat3/orgs",
    "repos_url": "https://api.github.com/users/1ultimat3/repos",
    "events_url": "https://api.github.com/users/1ultimat3/events{/privacy}",
    "received_events_url": "https://api.github.com/users/1ultimat3/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/3",
    "html_url": "https://github.com/ethereum/py-evm/milestone/3",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/3/labels",
    "id": 3420500,
    "node_id": "MDk6TWlsZXN0b25lMzQyMDUwMA==",
    "number": 3,
    "title": "Grace Hopper (Trinity Release)",
    "description": "Next publicised alpha release of Trinity",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2018-06-13T01:18:30Z",
    "updated_at": "2018-07-24T16:15:07Z",
    "due_on": "2018-06-14T07:00:00Z",
    "closed_at": "2018-07-24T16:15:07Z"
  },
  "comments": 15,
  "created_at": "2018-06-04T18:49:19Z",
  "updated_at": "2018-06-22T08:38:30Z",
  "closed_at": "2018-06-22T08:38:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "* Trinity version: trinity-0.1.0a3\r\n* OS: linux\r\n* Python Version (python --version): Python 3.6.3 \r\n \r\n### What is wrong?\r\nWhen doing fullsync with trinity the DAO fork is incorrectly handled and ETC chain followed.\r\n\r\nTrinity has been run as follows:\r\n\r\n```\r\ntrinity --sync-mode full\r\n```\r\n\r\nSyncronization works:\r\n\r\n```\r\n trinity attach\r\n w3.eth.getBlock(5000000)\r\nOut[41]:\r\nAttributeDict({'difficulty': 153555857798073,\r\n 'extraData': HexBytes('0x4554432065746865726d696e65202d20555331'),\r\n 'gasLimit': 4700036,\r\n 'gasUsed': 51416,\r\n 'hash': HexBytes('0xb2f55d12af971452c3669669380e03040ff01fabb64afec6bfddb3052dbd0117'),\r\n 'logsBloom': HexBytes('0xr\n 'mixHash': HexBytes('0x36a33662da9d77511a4580dceb57f46b261247134ffd126398c2fcbff34acae9'),\r\n 'nonce': HexBytes('0x4c85a020172afc4d'),\r\n 'number': 5000000,\r\n 'parentHash': HexBytes('0x001717abe8e5d60afaaa9fd2d62ab9e3a59c711fe7b66b2d9d47162c63d9e9ec'),\r\n 'receiptsRoot': HexBytes('0xcdfeee56af33c91c592567852d74b647801f0355c5160ea42dffbebd25b56d58'),\r\n 'sha3Uncles': HexBytes('0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'),\r\n 'stateRoot': HexBytes('0x94dbf3aa3242e0039dcb327806652e2c4620eff111a628a2c9488e70d0b10a30'),\r\n 'timestamp': 1513013050,\r\n 'transactionsRoot': HexBytes('0x3063dfd1bda002b2a8737d9ce1d1148f3d178f7a224b92b1419b3c005944c4d7'),\r\n 'miner': '0xDf7D7e053933b5cC24372f878c90E62dADAD5d42',\r\n 'totalDifficulty': 179580593652975622022,\r\n 'uncles': [],\r\n 'size': 763,\r\n 'transactions': [HexBytes('0x9d2f76af534006c0d40e23af572925fba31994597991173f997ba0fc1764af91'),\r\n  HexBytes('0x11c2d6c664d2527ff33e0fc184b946a0d72e86eec03a02134f0162bb8a7dc5b4')]})\r\n```\r\n\r\nThis block corresponds to ETC http://etcchain.com/block/number/5000000 \r\n\r\n### How can it be fixed\r\n\r\nFork-choice rule for DAO fork (block height 1919999 -> 1920000) needs to be re-evaluated.\r\n",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/865/reactions",
    "total_count": 4,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/865/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394474894",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394474894",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394474894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ3NDg5NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T19:43:35Z",
    "updated_at": "2018-06-04T19:43:35Z",
    "author_association": "MEMBER",
    "body": "Thanks for reporting.  I suspect this has to do with how fast syncing works since I know we have proper code to handle the dao fork when doing a regular full sync (processing every block).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394474894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394484193",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394484193",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394484193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ4NDE5Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T20:15:58Z",
    "updated_at": "2018-06-04T20:15:58Z",
    "author_association": "MEMBER",
    "body": "Sounds like the 10 headers after the fork have special extra data that we may not be enforcing/generating/checking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394484193/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394494398",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394494398",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394494398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ5NDM5OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T20:48:57Z",
    "updated_at": "2018-06-04T20:48:57Z",
    "author_association": "MEMBER",
    "body": "See bottom of this blog post for extra data spec: https://blog.slock.it/hard-fork-specification-24b889e70703",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394494398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394497287",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394497287",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394497287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ5NzI4Nw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T20:58:53Z",
    "updated_at": "2018-06-04T20:58:53Z",
    "author_association": "MEMBER",
    "body": "When fast-syncing we just fetch block data (by block number) and store that in the DB, so I think what we're missing is a check to ensure that all peers we fetch data from are on the same chain",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394497287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394498847",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394498847",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394498847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ5ODg0Nw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T21:04:19Z",
    "updated_at": "2018-06-04T21:04:19Z",
    "author_association": "MEMBER",
    "body": "If that's really the case, it may also be the cause of #837",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394498847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394526919",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-394526919",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 394526919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUyNjkxOQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T22:59:52Z",
    "updated_at": "2018-06-04T22:59:52Z",
    "author_association": "MEMBER",
    "body": "> Sounds like the 10 headers after the fork have special extra data that we may not be enforcing/generating/checking.\r\n> See bottom of this blog post for extra data spec: https://blog.slock.it/hard-fork-specification-24b889e70703\r\n\r\nSpecifically, the extra data in those headers must be the bytes represented by this hex encoding: `0x64616f2d686172642d666f726b` (Which is the UTF-8 encoding of the string `'dao-hard-fork'`)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394526919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396514850",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396514850",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396514850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjUxNDg1MA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T08:48:15Z",
    "updated_at": "2018-06-12T08:48:15Z",
    "author_association": "MEMBER",
    "body": "So, with #883 we're going to disconnect from a anti-DAO-fork peer as long as we end up fetching one of the 10 blocks starting at 1920000, but otherwise we're going to remain connected, using a peer slot, generating unnecessary traffic and consuming CPU (for block/tx relaying that will always fail). Same if we connect to a anti-DAO-fork peer when we already have block 1920000 (which is going to be a common occurrence).\r\n\r\nMaybe it's still desirable for us to check whether the peer is anti-DAO-fork upon connecting?  Although now we could implement it in a generic way, by fetching the block numbers from `vm_configuration` and feeding them to the new `validate_header()` class method",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396514850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396518933",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396518933",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396518933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjUxODkzMw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T09:02:18Z",
    "updated_at": "2018-06-12T09:02:18Z",
    "author_association": "MEMBER",
    "body": "Also, the failures we'll get when processing blocks/txs relayed by peers on the other side of the fork could cause unexpected errors to show up in the logs, which would lead users to mistakenly think there's something buggy on our side, no?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396518933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396592460",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396592460",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396592460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU5MjQ2MA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T13:39:37Z",
    "updated_at": "2018-06-12T13:39:37Z",
    "author_association": "MEMBER",
    "body": "If we are not synced up to 1920000 yet, then all the ETC blocks/headers they send us for syncing are valid, so maybe it's fine to stay connected until we're synced to the fork.\r\n\r\nOnce we're past the fork, then won't the [long distance reorg check](https://github.com/ethereum/py-evm/blob/master/p2p/lightchain.py#L201-L203) make us drop them? Looking...\r\n\r\nI don't see explicit handling of a long distance reorg anywhere, actually. The error message says \"no common ancestors\", but I don't see how it handles the case where the peer sends back headers, but the oldest header they send has a parent header that we don't have. Right now the validation would crash when trying to look up the parent header, I think. Maybe we should explicitly check if we have the parent header when we fetch.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396592460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396601646",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396601646",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396601646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjYwMTY0Ng==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T14:05:21Z",
    "updated_at": "2018-06-12T14:05:21Z",
    "author_association": "MEMBER",
    "body": "If we're past block 1920000 and try to *fetch headers* from an ETC peer, we'll fail because we can't find a common ancestor. Currently that will just crash (IIRC), and although we can fix it so that we don't crash, at that time we'd have to stop and request block 1920000 from the peer in order to figure out if it's just a peer on the wrong side of the DAO fork or something wrong on our side (e.g. a reorg deeper than we support).\r\n\r\nAlso, when we start relaying transactions, how would that work for transactions sent to us by ETC peers?  IIUC, they won't apply on our blocks and we'd, again, have to do the is-this-peer-anti-DAO check.\r\n\r\nAnd I bet I'm overlooking other situations in which we would have issues caused by being connected to ETC peers, and in each of those we'd have to check if that's indeed because of an ETC peer or a legit error, so we could end up having to do this is-this-peer-anti-DAO check in lots of different places.\r\n\r\nSince it only makes any sense for us to be connected to an ETC peer up until we've synced block 1920000, it'd be simpler for us to do the check upon connecting, and disconnect if it's an ETC peer, but more importantly I believe that'd save us trouble down the line by ensuring we don't have to worry about checking if an error is because we're trying to sync from an ETC peer",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396601646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396638412",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396638412",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396638412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjYzODQxMg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T15:46:18Z",
    "updated_at": "2018-06-12T15:46:18Z",
    "author_association": "MEMBER",
    "body": "I think I'm mirroring what @gsalgado just said, but I think we should just avoid connecting to ETC peers entirely when dao support is true.  Even though they *can* give us valid headers it will add complication to the sync code to negotiate dropping all of the ETC peers at the point we pass the dao fork block.  I'd rather just abort early and ensure we're only connected to pro-fork peers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396638412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396667842",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396667842",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396667842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY2Nzg0Mg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T17:20:19Z",
    "updated_at": "2018-06-12T17:22:13Z",
    "author_association": "MEMBER",
    "body": ":+1: Now the question is: how do we do that without adding any VM-specific logic into `p2p`. First instinct:\r\n\r\nWhen connecting to a new peer, we iterate through all the VMs in `Chain.vm_configuration`:\r\n- For VM 0, check the genesis header against our own genesis header\r\n- For VM 1-N:\r\n  - Check if the peer is synced to the starting block of the VM. If not, connect successfully\r\n  - Request the header at the starting block of the VM and its parent header\r\n  - Run `VM.validate_header(header, parent_header)`, and disconnect as `subprotocol_error` if validation fails\r\n- If the last VM validates, connect successfully",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396667842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396669022",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396669022",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396669022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY2OTAyMg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T17:24:09Z",
    "updated_at": "2018-06-12T17:24:09Z",
    "author_association": "MEMBER",
    "body": "Right, that's pretty much what I had in mind when I wrote https://github.com/ethereum/py-evm/issues/865#issuecomment-396514850",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396669022/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396891478",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396891478",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396891478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg5MTQ3OA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T10:30:29Z",
    "updated_at": "2018-06-13T10:30:29Z",
    "author_association": "MEMBER",
    "body": "I'm thinking that it may not make sense to do the fetch-header-and-validate dance for every item in `Chain.vm_configuration` as most of the forks they represent didn't actually cause a chain split (like the DAO fork did). Since for each of them we'd do an extra request-header/wait-for-reply roundtrip, I'd rather avoid that, but in order to do so in a generic way we'd need to somehow distinguish the items in `Chain.vm_configuration` for which we must do the validation dance. How do you guys feel about adding an extra attribute to `BaseVM` for that, something like `caused_chain_split`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396891478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396952585",
    "html_url": "https://github.com/ethereum/py-evm/issues/865#issuecomment-396952585",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/865",
    "id": 396952585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk1MjU4NQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T14:14:04Z",
    "updated_at": "2018-06-13T14:14:04Z",
    "author_association": "MEMBER",
    "body": "#869 has been updated to do what I described above. How do you guys feel about it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396952585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
