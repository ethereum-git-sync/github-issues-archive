{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1101",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1101",
  "id": 345031945,
  "node_id": "MDU6SXNzdWUzNDUwMzE5NDU=",
  "number": 1101,
  "title": "Move all node processing for state sync to dedicated process",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983615043,
      "node_id": "MDU6TGFiZWw5ODM2MTUwNDM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20performance",
      "name": "type: performance",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983628532,
      "node_id": "MDU6TGFiZWw5ODM2Mjg1MzI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P4%20nice%20to%20have",
      "name": "prio: P4 nice to have",
      "color": "fef2c0",
      "default": false,
      "description": ""
    },
    {
      "id": 983629919,
      "node_id": "MDU6TGFiZWw5ODM2Mjk5MTk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E2%20days",
      "name": "effort: E2 days",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-07-26T22:50:16Z",
  "updated_at": "2018-08-09T17:22:47Z",
  "closed_at": "2018-08-09T17:22:47Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nThis idea needs to be backed up by profiling data but:\r\n\r\nWhat about moving the node processing entirely to it's own process.\r\n\r\n1. We need to figure out how to do this in a reproducible way: see https://github.com/ethereum/py-evm/issues/1075\r\n2. It gets a moves as simple but processor heavy job out of the networking process.\r\n\r\n\r\n### How can it be fixed\r\n\r\nSomeone needs to figure it out.  Ideas in the comments",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1101/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408259448",
    "html_url": "https://github.com/ethereum/py-evm/issues/1101#issuecomment-408259448",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101",
    "id": 408259448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI1OTQ0OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T22:53:32Z",
    "updated_at": "2018-07-26T22:53:32Z",
    "author_association": "MEMBER",
    "body": "The main thing is that it needs to spin itself up and make a database connection from within the other process since our database handles cannot be pickled.\r\n\r\n- It probably want to use a [`Queue`](https://docs.python.org/3.5/library/multiprocessing.html#multiprocessing.managers.SyncManager.Queue) of some kind to feed it nodes that need to be processed.\r\n- We probably want to expose some of the methods on the `StateSyncer` using a mulitprocessing `Manager`, similar to how we do with the `Chain` objects from the database process.\r\n\r\nIt'd be nice to figure out how to create the IPC connection without yet another IPC socket file that *might* need to be cleaned up, but I'd be fine punting on that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408259448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408782112",
    "html_url": "https://github.com/ethereum/py-evm/issues/1101#issuecomment-408782112",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101",
    "id": 408782112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODc4MjExMg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T08:09:24Z",
    "updated_at": "2018-07-30T08:09:24Z",
    "author_association": "MEMBER",
    "body": "I assume what you mean by node processing is basically `trie.HexaryTrieSync.process()`. If that's the case, I'm pretty sure the only expensive operations there are db lookups/insertions, so we could just use the async DB APIs we already have, as I suggested in https://github.com/ethereum/py-evm/issues/1074#issuecomment-407353568",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408782112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408933549",
    "html_url": "https://github.com/ethereum/py-evm/issues/1101#issuecomment-408933549",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101",
    "id": 408933549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkzMzU0OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T16:52:58Z",
    "updated_at": "2018-07-30T16:53:41Z",
    "author_association": "MEMBER",
    "body": "I may need to think on this some more, but my intent here is more to cleanly separate this into a dedicated process so that:\r\n\r\n1. Another unforseen blocking call like the mentioned `process()` call doesn't hang the networking connections.\r\n2. The amount of additional `asyncio` event loop switching that has to occur in the main network process is kept to a minimum so that our networking stays quick and responsive.  \r\n\r\nThis is a step towards the place I'd like to get to where we have very strong guarantees about our networking logic not getting blocked by other logic and taking our node offline.\r\n\r\n* A process for the database\r\n* A process for networking\r\n* `N` processes for the other major services we run.\r\n* Process pools of some computed size for delegation of heavy processing within any given service, ideally this would be a shared pool.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/408933549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/411833760",
    "html_url": "https://github.com/ethereum/py-evm/issues/1101#issuecomment-411833760",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1101",
    "id": 411833760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgzMzc2MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T17:22:35Z",
    "updated_at": "2018-08-09T17:22:35Z",
    "author_association": "MEMBER",
    "body": "I'm closing this for now since @gsalgado implemented #1124 which comes at this from a different angle.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/411833760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
