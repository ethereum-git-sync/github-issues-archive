{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1016",
  "id": 341206583,
  "node_id": "MDU6SXNzdWUzNDEyMDY1ODM=",
  "number": 1016,
  "title": "Trinity logs lots of \"socket.send() raised exception\" warnings",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871939,
      "node_id": "MDU6TGFiZWw2MzA4NzE5Mzk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20bug",
      "name": "type: bug",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983627565,
      "node_id": "MDU6TGFiZWw5ODM2Mjc1NjU=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P2%20required",
      "name": "prio: P2 required",
      "color": "f7c6c7",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/3",
    "html_url": "https://github.com/ethereum/py-evm/milestone/3",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/3/labels",
    "id": 3420500,
    "node_id": "MDk6TWlsZXN0b25lMzQyMDUwMA==",
    "number": 3,
    "title": "Grace Hopper (Trinity Release)",
    "description": "Next publicised alpha release of Trinity",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2018-06-13T01:18:30Z",
    "updated_at": "2018-07-24T16:15:07Z",
    "due_on": "2018-06-14T07:00:00Z",
    "closed_at": "2018-07-24T16:15:07Z"
  },
  "comments": 16,
  "created_at": "2018-07-14T03:57:43Z",
  "updated_at": "2018-07-17T16:56:17Z",
  "closed_at": "2018-07-17T16:56:16Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "on current master @ 32cc41d5315003289b1c86b31680f2501894da06\r\n\r\n### What is wrong?\r\n\r\nWhen running `trinity` a **lot** of these warnings happen.\r\n\r\n```bash\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n WARNING  07-14 03:48:12  selector_events  socket.send() raised exception.\r\n```\r\n\r\n### How can it be fixed\r\n\r\nIt looks like it may related to this issue found here on stack overflow:\r\n\r\nhttps://stackoverflow.com/questions/32175217/how-to-detect-write-failure-in-asyncio\r\n\r\nHowever, brief experimentation with adding a `await asyncio.sleep(0)` to [the only place in our code that calls `writer.drain()`](https://github.com/ethereum/py-evm/blob/32cc41d5315003289b1c86b31680f2501894da06/p2p/server.py#L239) didn't fix anything....\r\n\r\n",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1016/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404998177",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-404998177",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 404998177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk5ODE3Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T04:37:36Z",
    "updated_at": "2018-07-14T04:37:36Z",
    "author_association": "MEMBER",
    "body": "Here is a call-site which throws this error:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/piper/sites/py-evm/p2p/service.py\", line 54, in run\r\n    await self._run()\r\n  File \"/Users/piper/sites/py-evm/trinity/plugins/builtin/tx_pool/pool.py\", line 72, in _run\r\n    await self._handle_tx(peer, msg)\r\n  File \"/Users/piper/sites/py-evm/trinity/plugins/builtin/tx_pool/pool.py\", line 95, in _handle_tx\r\n    receiving_peer.sub_proto.send_transactions(filtered_tx)\r\n  File \"/Users/piper/sites/py-evm/p2p/eth.py\", line 193, in send_transactions\r\n    self.send(header, body)\r\n  File \"/Users/piper/sites/py-evm/p2p/protocol.py\", line 132, in send\r\n    self.peer.send(header, body)\r\n  File \"/Users/piper/sites/py-evm/p2p/peer.py\", line 479, in send\r\n    self.writer.write(self.encrypt(header, body))\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/streams.py\", line 300, in write\r\n    self._transport.write(data)\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/selector_events.py\", line 755, in write\r\n    assert False\r\n```\r\n\r\nI think the transaction pool is the culprit, potentially trying to send to peers which we are no longer connected to.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404998177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404998767",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-404998767",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 404998767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk5ODc2Nw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T04:52:37Z",
    "updated_at": "2018-07-14T04:52:37Z",
    "author_association": "MEMBER",
    "body": "> I think the transaction pool is ... trying to send to peers which we are no longer connected to.\r\n\r\nThe transaction pool could use the new pool subscriber API from #1009 then: https://github.com/ethereum/py-evm/pull/1009/files#diff-0c5a90ea9349bdb0b8d152d6c4b24583R694 (after it's merged)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/404998767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405000247",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405000247",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405000247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAwMDI0Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T05:30:35Z",
    "updated_at": "2018-07-14T05:30:35Z",
    "author_association": "MEMBER",
    "body": "```\r\nWARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n WARNING  07-13 23:11:03        pool  encountered cancelled peer\r\n WARNING  07-13 23:11:03  selector_events  socket.send() raised exception.\r\n```\r\n\r\nThis is after inserting a logging statement within the send loop of the transaction pool.  The logs closely correlate 1:1 for the two logging statements.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405000247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405000311",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405000311",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405000311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAwMDMxMQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T05:32:26Z",
    "updated_at": "2018-07-14T05:32:26Z",
    "author_association": "MEMBER",
    "body": "Side note: we need to measure the time that the tx pool send loop takes and potentially add some yields in there to make it block less.\r\n\r\n(or go ahead and move it to it's own process)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405000311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405034573",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405034573",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405034573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAzNDU3Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T16:33:42Z",
    "updated_at": "2018-07-14T16:33:42Z",
    "author_association": "MEMBER",
    "body": "@carver \r\n\r\n> The transaction pool could use the new pool subscriber API from #1009 then: https://github.com/ethereum/py-evm/pull/1009/files#diff-0c5a90ea9349bdb0b8d152d6c4b24583R694 (after it's merged)\r\n\r\nI think this is part of the solution, however, I believe what we're seeing is a race condition where the peer is connected at the start of the tx pool send loop, but by the time that it comes time to send to that peer they have disconnected.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405034573/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405134637",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405134637",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405134637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEzNDYzNw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T01:51:14Z",
    "updated_at": "2018-07-16T01:51:14Z",
    "author_association": "MEMBER",
    "body": "Writing down my best idea thus far for dealing with this.\r\n\r\nWe implement a new peer iteration API.  The new iteration API can start as something in the txpool but should potentially be moved into the peerpool itself.  The loop should be asynchronous, yielding during each iteration to allow for networking *things* to happen.\r\nHere is a pseudo example of what I'm thinking of.\r\n\r\n```python\r\nclass TxPool:\r\n    async def iter_peers(self):\r\n        peer_seen = set()\r\n        while True:\r\n            await asyncio.sleep(0)\r\n            for peer in self.peer_pool:\r\n                if peer in peer_seen:\r\n                    continue\r\n                peer_seen.add(peer)\r\n                yield peer\r\n            else:\r\n                break  # we have now seen all peers in the pool and can exit the loop.\r\n```\r\n\r\nThis should allow us to enumerate the peer pool, yielding to allow disconnecting peers to disconnect prior to broadcasting transactions too them.\r\n\r\nHowever, I believe there will still be race conditions where we send to a peer who has disconnected from us but we have not yet processed the disconnection, but those should be much less rare and we can handle that case when we see it arising.\r\n                ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405134637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405168869",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405168869",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405168869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE2ODg2OQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T07:37:20Z",
    "updated_at": "2018-07-16T07:37:20Z",
    "author_association": "MEMBER",
    "body": "> Side note: we need to measure the time that the tx pool send loop takes and potentially add some yields in there to make it block less.\r\n> (or go ahead and move it to it's own process)\r\n\r\nThe `send_transactions()` method is non-blocking, so shouldn't be a problem. If `BloomFilter` is picklable, we might be able to run `_filter_tx_for_peer()` and `_add_txs_to_bloom()` in a process pool executor, and avoid the extra complexity of having yet another process",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405168869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405170218",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405170218",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405170218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE3MDIxOA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T07:45:11Z",
    "updated_at": "2018-07-16T10:00:10Z",
    "author_association": "MEMBER",
    "body": "> I think this is part of the solution, however, I believe what we're seeing is a race condition where the peer is connected at the start of the tx pool send loop, but by the time that it comes time to send to that peer they have disconnected.\r\n\r\nThat's definitely a race we're likely to hit frequently with the current tx-pool implementation, but regardless any `PeerPool.peers` callsites must always check if `peer.is_running` before doing anything. We should have that as a warning in the docstring, or possibly get rid of that property altogether\r\n\r\nEDIT: Actually, just checking if `peer.is_running` won't work for the current txpool implementation as it runs as a single blocking loop (i.e. it never yields control). What we need is to either turn `PeerPool.peers` into an async iterator as [@pipermerrian suggested](https://github.com/ethereum/py-evm/issues/1016#issuecomment-405134637), or turn the blocking calls inside the txpool loop into non-blocking (e.g. by running them in an asyncio executor) and then check that `peer.is_running` (or maybe that the peer's writer is still open?) before sending. The former is probably a better alternative as we could make it skip peers that have disconnected and thus avoid this issue from happening again in the future",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405170218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405172401",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405172401",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405172401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE3MjQwMQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T07:56:29Z",
    "updated_at": "2018-07-16T07:56:29Z",
    "author_association": "MEMBER",
    "body": "> We implement a new peer iteration API. The new iteration API can start as something in the txpool but should potentially be moved into the peerpool itself. The loop should be asynchronous, yielding during each iteration to allow for networking things to happen.\r\n\r\nMaybe we can just replace `PeerPool.peers` with that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405172401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405174317",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405174317",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405174317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE3NDMxNw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T08:06:31Z",
    "updated_at": "2018-07-16T08:07:02Z",
    "author_association": "MEMBER",
    "body": "Why not put a safeguard directly in `send` that ensures we don't try to send with a closed connection?\r\n\r\nhttps://github.com/ethereum/py-evm/blob/3b6c1df1b6193b48454ad977b71e41f02ee84edf/p2p/peer.py#L476-L479\r\n\r\nMaybe accompanied by printing a warning to not hide other potentially issues (e.g. something *permanently* trying to send on a closed connection)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405174317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405176955",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405176955",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405176955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE3Njk1NQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T08:19:54Z",
    "updated_at": "2018-07-16T08:19:54Z",
    "author_association": "MEMBER",
    "body": "Sure, that's definitely a good thing, but as you said that's just an extra safeguard -- with the current implementation of `PeerPool.peers`, callsites would still have to check if the peer is running before attempting to send",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405176955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405313660",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405313660",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405313660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMxMzY2MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T16:54:45Z",
    "updated_at": "2018-07-16T16:54:45Z",
    "author_association": "MEMBER",
    "body": "Initial experiment suggests this *might* be fixed with #1018 after rebasing on #1022 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405313660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405393690",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405393690",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405393690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTM5MzY5MA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T21:54:17Z",
    "updated_at": "2018-07-16T21:54:17Z",
    "author_association": "MEMBER",
    "body": "It looks like our initial hypothesis is wrong... As the logs below show, a disconnected peer is being kept in the PeerPool (see the `Peer details` section for `0x94c15`: `running=False`), so every time the txpool receives a tx it will try to broadcast to that disconnected peer. Can you confirm this is the case in your logs as well? This one would have been fixed by the change I made to `Peer.send()` in #1022, though, logging an error instead of the socket exception\r\n\r\n```\r\n   DEBUG  07-06 15:04:33        pool  Received transactions from ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86867cc50>,)\r\n   DEBUG  07-06 15:04:33        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86867cc50>]\r\n WARNING  07-06 15:04:33  selector_events  socket.send() raised exception.\r\n   DEBUG  07-06 15:04:33        pool  Sending transactions to ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86867cc50>]\r\n   DEBUG  07-06 15:04:33       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xd871@51.15.217.106)>\r\n   DEBUG  07-06 15:04:37        pool  Received transactions from ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff868693f98>,)\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff868693f98>]\r\n WARNING  07-06 15:04:37  selector_events  socket.send() raised exception.\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff868693f98>]\r\n   DEBUG  07-06 15:04:37       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xc8b9@178.62.246.6)>\r\n   DEBUG  07-06 15:04:37        pool  Received transactions from ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff88033ae48>,)\r\n   DEBUG  07-06 15:04:37       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xc8b9@178.62.246.6)>\r\n   DEBUG  07-06 15:04:37        pool  Received transactions from ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86872fa58>,)\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86872fa58>]\r\n WARNING  07-06 15:04:37  selector_events  socket.send() raised exception.\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86872fa58>]\r\n   DEBUG  07-06 15:04:37       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xc8b9@178.62.246.6)>\r\n   DEBUG  07-06 15:04:37        pool  Received transactions from ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff888178198>,)\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff888178198>]\r\n WARNING  07-06 15:04:37  selector_events  socket.send() raised exception.\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff888178198>]\r\n   DEBUG  07-06 15:04:37       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xc8b9@178.62.246.6)>\r\n   DEBUG  07-06 15:04:37        pool  Received transactions from ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff868726400>,)\r\n   DEBUG  07-06 15:04:37        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff868726400>]\r\n WARNING  07-06 15:04:37  selector_events  socket.send() raised exception.\r\n    INFO  07-06 15:05:05        peer  Connected peers: 0 inbound, 3 outbound\r\n   DEBUG  07-06 15:05:05        peer  == Peer details == \r\n   DEBUG  07-06 15:05:05        peer  ETHPeer <Node(0x94c1@192.81.208.223)>: running=False, subscribers=2, longest_subscriber_queue=0\r\n   DEBUG  07-06 15:05:05        peer  ETHPeer <Node(0xd871@51.15.217.106)>: running=True, subscribers=2, longest_subscriber_queue=0\r\n   DEBUG  07-06 15:05:05        peer  ETHPeer <Node(0xc8b9@178.62.246.6)>: running=True, subscribers=2, longest_subscriber_queue=0\r\n   DEBUG  07-06 15:05:05        peer  == End peer details == \r\n   DEBUG  07-06 15:05:06        pool  Received transactions from ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86864f4a8>,)\r\n   DEBUG  07-06 15:05:06        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86864f4a8>]\r\n WARNING  07-06 15:05:06  selector_events  socket.send() raised exception.\r\n   DEBUG  07-06 15:05:06        pool  Sending transactions to ETHPeer <Node(0xc8b9ec645cd7fe570bc73740579064c528771338c31610f44d160d2ae63fd00699caa163f84359ab268d4a0aed8ead66d7295be5e9c08b0ec85b0198273bae1f@178.62.246.6:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff86864f4a8>]\r\n   DEBUG  07-06 15:05:06       chain  Ignoring Transactions (cmd_id=18) message from ETHPeer <Node(0xd871@51.15.217.106)>\r\n   DEBUG  07-06 15:05:10        pool  Received transactions from ETHPeer <Node(0xd8714127db3c10560a2463c557bbe509c99969078159c69f9ce4f71c2cd1837bcd33db3b9c3c3e88c971b4604bbffa390a0a7f53fc37f122e2e6e0022c059dfd@51.15.217.106:30303)>: (<evm.rlp.transactions.BaseTransactionFields object at 0x7ff88021cb70>,)\r\n   DEBUG  07-06 15:05:10        pool  Sending transactions to ETHPeer <Node(0x94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303)>: [<evm.rlp.transactions.BaseTransactionFields object at 0x7ff88021cb70>]\r\n WARNING  07-06 15:05:10  selector_events  socket.send() raised exception.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405393690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405400095",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405400095",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405400095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTQwMDA5NQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T22:23:42Z",
    "updated_at": "2018-07-16T22:23:42Z",
    "author_association": "MEMBER",
    "body": "@gsalgado this matches what I've been seeing.  I added a check to the txpool send loop in my PR that aborts if the peer is not running.  However, I'm curious if your tests show that the disconnected peer is *stuck* in the pool, or if it is just in the process of disconnecting?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405400095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405488411",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405488411",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405488411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTQ4ODQxMQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T07:34:26Z",
    "updated_at": "2018-07-17T07:34:26Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam you mean in your logs you also see a peer for which we have running=false?  my point is that the real issue here is not in the tx pool -- it is in the peer pool that is keeping a `Peer` instance for a remote that has disconnected. We can workaround that in the tx pool (like you did in https://github.com/ethereum/py-evm/commit/34529589d19779d3e6ac417e583cdb6cf878668a), but ultimately we need to fix the peer pool",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405488411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405511732",
    "html_url": "https://github.com/ethereum/py-evm/issues/1016#issuecomment-405511732",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1016",
    "id": 405511732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTUxMTczMg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T09:00:37Z",
    "updated_at": "2018-07-17T09:00:37Z",
    "author_association": "MEMBER",
    "body": "> However, I'm curious if your tests show that the disconnected peer is stuck in the pool, or if it is just in the process of disconnecting?\r\n\r\nI couldn't reproduce the socket.send() errors yesterday; those logs are from last week but they show a `Peer` instance is kept in the pool's `connected_nodes` forever after the remote disconnects. I've opened #1023 for it but can't seem to reproduce it. Can you grep your logs for `running=False` to see if that's the cause of your socket.send() errors as well?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/405511732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
