{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/67",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/67/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/67/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/67/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/67",
  "id": 247678632,
  "node_id": "MDU6SXNzdWUyNDc2Nzg2MzI=",
  "number": 67,
  "title": "VM.block and VM.state_db can easily get out of sync",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-08-03T11:38:58Z",
  "updated_at": "2017-08-28T18:18:37Z",
  "closed_at": "2017-08-28T18:18:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nHaving _VM.state_db_ and _VM.block_ is error prone as we need to ensure they're in sync, which is done by assigning _VM.state_db.root_hash_ to _VM.block.header.state_root_ whenever we update the state.\r\n\r\n### How can it be fixed\r\n\r\nWe could have the state DB as a property on the Block class, with all state-related functionality wrapped in Block methods, thus completely abstracting the State DB (and the need to keep it in sync with the block) from external code",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/67/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/67/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/320055834",
    "html_url": "https://github.com/ethereum/py-evm/issues/67#issuecomment-320055834",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/67",
    "id": 320055834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDA1NTgzNA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T18:42:41Z",
    "updated_at": "2017-08-03T18:51:27Z",
    "author_association": "MEMBER",
    "body": "Looks like my email reply didn't make it in.\r\n\r\nSo one of my pet-peeves of the pyethereum codebase was that the `block` object had a ton of business logic baked into it.  I'd like to avoid that if at all possible and try to keep the RLP objects well isolated.\r\n\r\nThis gets me thinking of alternate ways to solve the same problem and it strikes me as similar to the problem of forgetting to close a file or database connection after opening it.  This gets me thinking about whether there is a context manager style API that would provide an elegant way to solve this so that we not longer have to remember to update the `header.state_root`.\r\n\r\nPseudo code for how this would work.\r\n\r\n```python\r\nwith vm.open_state_db() as state_db:\r\n    state_db.set_balance(...)\r\n```\r\n\r\nThe internals of `open_state_db()` would handle the updating of the `header.state_root` at the point where it exits the context.\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/320055834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
