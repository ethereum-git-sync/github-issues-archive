{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1118",
  "id": 345964251,
  "node_id": "MDU6SXNzdWUzNDU5NjQyNTE=",
  "number": 1118,
  "title": "Manage background tasks in BaseService",
  "user": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-07-30T22:41:35Z",
  "updated_at": "2018-08-13T17:24:52Z",
  "closed_at": "2018-08-13T17:24:52Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nBaseService handles background tasks awkwardly right now. For example:\r\n- have to `await asyncio.sleep(0)` in cleanup to make sure that all tasks cancel\r\n- often need to catch and drop `OperationCancelled` exceptions\r\n\r\nThis is what kicked off the thought: https://github.com/ethereum/py-evm/pull/1097/files#diff-3942908a5c806895979f03283db24df3R206\r\n\r\nAn toy example with these quirks:\r\n\r\n```py\r\nclass MyService(BaseService):\r\n  async def check_connection(self):\r\n    while self.is_running:\r\n      if not is_connected():\r\n        self.wait(reconnect())\r\n      try:\r\n        await self.sleep(60.0)\r\n      except OperationCancelled:\r\n        break\r\n\r\n  async def _run(self):\r\n    asyncio.ensure_future(self.check_connection())\r\n\r\n  async def _cleanup(self):\r\n    # We don't need to cancel() anything, but we yield control just so that the coroutines we\r\n    # run in the background notice the cancel token has been triggered and return.\r\n    # Also, don't use self.sleep() here as the cancel token will be triggered and that will\r\n    # raise OperationCancelled.\r\n    await asyncio.sleep(0)\r\n```\r\n\r\n### How can it be fixed\r\n\r\nAdd a `BaseService.loop_in_background(my_task)` method that handles these things for you. Then services can define something like:\r\n\r\n```py\r\nclass MyService(BaseService):\r\n  async def check_connection(self):\r\n    if not is_connected():\r\n      self.wait(reconnect())\r\n    await self.sleep(60.0)\r\n\r\n  async def _run(self):\r\n    self.loop_in_background(self.check_connection())\r\n```",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1118/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409040674",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409040674",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409040674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0MDY3NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T23:06:26Z",
    "updated_at": "2018-07-30T23:06:26Z",
    "author_association": "MEMBER",
    "body": "Conceptually, :+1: \r\n\r\nnaming thoughts as the `loop_` prefix is a bit confusing to me\r\n\r\n- `run_in_background`\r\n- `ensure_future` (to borrow semantics from the `asyncio` API)\r\n- `handle_background_task`\r\n- `handle_task`\r\n- `run_background_task`\r\n\r\nI like the `background` terminology.  The word `daemon` is shorted and also a well known concept.\r\n\r\n- `run_daemon`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409040674/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409047267",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409047267",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409047267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0NzI2Nw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T23:43:07Z",
    "updated_at": "2018-07-30T23:43:07Z",
    "author_association": "MEMBER",
    "body": "The important semantic part of `loop` (as a verb) is that `BaseService` would keep running the method over and over until the service shut down. I haven't found another word that conveys that as well. `daemon` itself kind of implies that, but usually a `daemon` would handle its own looping, which would be a lot less convenient. Maybe:\r\n\r\n- `cycle_task`\r\n- `repeat_task`\r\n- `repeat_forever`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409047267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409051614",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409051614",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409051614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA1MTYxNA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T00:09:05Z",
    "updated_at": "2018-07-31T00:15:54Z",
    "author_association": "MEMBER",
    "body": "Ah, how about `run_periodic_task` and you can specify the period.\r\n\r\n```python\r\nwhile True:\r\n    ... # run the task\r\n    self.sleep(period)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409051614/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409123642",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409123642",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409123642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTEyMzY0Mg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T07:29:34Z",
    "updated_at": "2018-07-31T07:29:34Z",
    "author_association": "MEMBER",
    "body": "Although some of those background tasks are run in a loop for the whole duration of the service, some are not (e.g. `BaseHeaderChainSyncer._sync()`), so I think it'd make sense to have this new helper simply run the coroutine with `ensure_future()`, and then if necessary we could have a `run_periodict_task()` on top of that",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409123642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409397812",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409397812",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409397812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM5NzgxMg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T23:14:21Z",
    "updated_at": "2018-07-31T23:14:21Z",
    "author_association": "MEMBER",
    "body": "How about: `BaseService.run_daemon(awaitable, *, periodic_restart=None)`\r\n\r\nThen:\r\n```py\r\nself.run_daemon(self._sync())\r\nself.run_daemon(self.check_connection(), periodic_restart=60.0)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409397812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409452734",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409452734",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409452734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQ1MjczNA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T05:20:32Z",
    "updated_at": "2018-08-01T05:20:32Z",
    "author_association": "MEMBER",
    "body": "I used `_sync()` as an example because that's not a daemon -- it's just an async method that will perform its task in a non-blocking way and return once done.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409452734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409537126",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409537126",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409537126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTUzNzEyNg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T11:01:20Z",
    "updated_at": "2018-08-01T11:01:20Z",
    "author_association": "MEMBER",
    "body": ">so I think it'd make sense to have this new helper simply run the coroutine with `ensure_future()`, and then if necessary we could have a `run_periodict_task()` on top of that\r\n\r\nSecond that. How about:\r\n\r\n```py\r\nself.run_task(self._sync())\r\nself.run_periodic_task(self.check_connection(), restart_sec=60.0)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409537126/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409723357",
    "html_url": "https://github.com/ethereum/py-evm/issues/1118#issuecomment-409723357",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1118",
    "id": 409723357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcyMzM1Nw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T21:07:12Z",
    "updated_at": "2018-08-01T21:07:12Z",
    "author_association": "MEMBER",
    "body": "Sure, but a process could still be a daemon if it eventually ends (the parallel being `Thread(daemon=True)`). \r\n\r\nBut if no one is convinced, then I think we should keep the API small: only add run_task() and require the background tasks to do their own loop. (Still much better than the status quo)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/409723357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
