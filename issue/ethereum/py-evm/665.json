{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/665/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/665/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/665/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/665",
  "id": 321282850,
  "node_id": "MDU6SXNzdWUzMjEyODI4NTA=",
  "number": 665,
  "title": "Need timeouts and proper task-cancellation when dealing with trinity's proxied-services",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-05-08T17:47:08Z",
  "updated_at": "2018-07-06T11:42:56Z",
  "closed_at": "2018-07-06T11:42:56Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently our chain syncer implementation do things like:\r\n\r\n```\r\nawait wait_with_token(chaindb.coro_import_block(block), token=self.cancel_token)\r\n```\r\n\r\nWhere chaindb is a `multiprocessing` proxy that runs the actual block importing in a separate process. Since we're dealing with a separate process that may die halfway through importing the block, or hang completely and never respond, I believe we should always specify timeouts when dealing with them -- in the same way we do for network operations.\r\n\r\nAlso, by wrapping those with wait_with_token() only cancels the outer task and not the one that is actually doing the work, which is created inside coro_import_block() by the await loop.run_in_executor(...) call. Maybe we just need to pass the CancelToken to coro_import_block() and have it use that with wait_with_token() instead of us.",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/665/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/665/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394024199",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-394024199",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 394024199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDAyNDE5OQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T22:18:11Z",
    "updated_at": "2018-06-01T22:18:11Z",
    "author_association": "MEMBER",
    "body": "> I believe we should always specify timeouts when dealing with them -- in the same way we do for network operations.\r\n\r\nThoughts on blocking the shutdown of the db process until all of the other processes are closed out? Otherwise, we're likely to get a spread of `ConnectionResetError`, `BrokenPipeError`, etc. in addition to timeout errors.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394024199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394106631",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-394106631",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 394106631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDEwNjYzMQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T18:21:11Z",
    "updated_at": "2018-06-02T18:21:11Z",
    "author_association": "MEMBER",
    "body": "> Thoughts on blocking the shutdown of the db process until all of the other processes are closed out? Otherwise, we're likely to get a spread of ConnectionResetError, BrokenPipeError, etc. in addition to timeout errors.\r\n\r\nIsn't that how we do it, currently? trinity.main() first kills the networking process and only after that process is terminated it moves on to kill the database process",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394106631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394107973",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-394107973",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 394107973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDEwNzk3Mw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T18:41:42Z",
    "updated_at": "2018-06-02T18:41:42Z",
    "author_association": "MEMBER",
    "body": "Ah yes, on closer look of the logs, the problem seems more likely to be that asking the networking process to shut down is the problem itself. Here is an example of the connection getting reset:\r\n\r\n(first line: networking process asked to shut down)\r\n```\r\n    INFO  06-02 12:15:23        main  Keyboard Interrupt: Stopping\r\n   DEBUG  06-02 12:15:23     service  Cancelling <trinity.nodes.mainnet.MainnetFullNode object at 0x7fd6067672b0>\r\n    INFO  06-02 12:15:23     service  <p2p.chain.FastChainSyncer object at 0x7fd606f41470> finished: Cancellation requested by MainnetFullNode token\r\n    INFO  06-02 12:15:23       chain  Sync with ETHPeer <Node(0x3688@213.168.13.151)> aborted: Cancellation requested by FastChainSyncer:FullNodeSyncer:Server:MainnetFullNode token\r\n   ERROR  06-02 12:15:23        sync  Unclean exit from FullNodeSyncer\r\nTraceback (most recent call last):\r\n  File \"/home/jcarver/code/py-evm/p2p/sync.py\", line 44, in _run\r\n    await self._sync()\r\n  File \"/home/jcarver/code/py-evm/p2p/sync.py\", line 60, in _sync\r\n    head = await self.chaindb.coro_get_canonical_head()\r\n  File \"/home/jcarver/code/py-evm/trinity/utils/mp.py\", line 23, in method\r\n    args,\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/lib/python3.6/multiprocessing/managers.py\", line 757, in _callmethod\r\n    kind, result = conn.recv()\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 250, in recv\r\n    buf = self._recv_bytes()\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 407, in _recv_bytes\r\n    buf = self._recv(4)\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 379, in _recv\r\n    chunk = read(handle, remaining)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\n(last line: connection reset, before database process is asked to shut down)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394107973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394318134",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-394318134",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 394318134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDMxODEzNA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T11:10:29Z",
    "updated_at": "2018-06-04T11:10:29Z",
    "author_association": "MEMBER",
    "body": "@carver actually, they're not terminated in order: https://github.com/ethereum/py-evm/issues/827#issuecomment-394317506",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394318134/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394318232",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-394318232",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 394318232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDMxODIzMg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T11:10:55Z",
    "updated_at": "2018-06-04T11:10:55Z",
    "author_association": "MEMBER",
    "body": "#860 addresses part of this",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/394318232/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403010097",
    "html_url": "https://github.com/ethereum/py-evm/issues/665#issuecomment-403010097",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/665",
    "id": 403010097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAxMDA5Nw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T11:42:56Z",
    "updated_at": "2018-07-06T11:42:56Z",
    "author_association": "MEMBER",
    "body": "When I wrote this I assumed these method calls on multiprocessing-proxied instances would hang forever if the process died, but that doesn't seem to be the case (AFAICT they raise an exception when that happens), so given that task-cancellation now works as expected when a cancel token is triggered, I'm closing this as we don't seem to need timeouts",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403010097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
