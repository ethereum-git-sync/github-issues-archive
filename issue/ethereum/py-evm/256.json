{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/256/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/256/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/256/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/256",
  "id": 287083651,
  "node_id": "MDU6SXNzdWUyODcwODM2NTE=",
  "number": 256,
  "title": "`Shard` class and `ShardVM` class",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871768,
      "node_id": "MDU6TGFiZWw2MzA4NzE3Njg=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/PR%20state:%20WIP",
      "name": "PR state: WIP",
      "color": "fbca04",
      "default": false,
      "description": ""
    },
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-01-09T13:11:19Z",
  "updated_at": "2018-01-27T11:44:58Z",
  "closed_at": "2018-01-27T11:44:58Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\nCreate a `Shard` class which mirrors the `Chain` class and a `ShardVM` which mirrors the `VM` class.\r\n\r\n### How can it be fixed\r\n\r\nFill this in if you know how to fix it.\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/256/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/256/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356280939",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-356280939",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 356280939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjI4MDkzOQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T13:16:57Z",
    "updated_at": "2018-01-09T13:16:57Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam  I copied it from #238.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356280939/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356303791",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-356303791",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 356303791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMwMzc5MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T14:45:29Z",
    "updated_at": "2018-01-09T14:45:29Z",
    "author_association": "MEMBER",
    "body": "By the way, conceptually, I think this is the right way to go, but I think we'll have to play with the actual implementation some to figure out what the *right* way to do this is.  Initially, my thoughts are:\r\n\r\n- `BaseChain` class with common/shared methods between `Shard` and `Chain` classes.\r\n- rename `BaseVM` to `VM`\r\n- new `BaseVM` class with common/shared methods between `VM` and `ShardVM`.\r\n\r\nAlso, we *may* not need a `ShardVM` class at all assuming that there is nothing *special* about the VM execution within shards (which I think is the case but not 100% sure).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356303791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356331732",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-356331732",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 356331732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMzMTczMg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T16:13:50Z",
    "updated_at": "2018-01-13T16:58:37Z",
    "author_association": "MEMBER",
    "body": "Yes, agree! And it should be well-discussed and planned before we start too.\r\n\r\nWe can plan for archival nodes first. Some primary differences between `VM` and `ShardVM` may be:\r\n1. Different data structures between block and collation\r\n\t1. Different `configure_header` functions\r\n\t2. Some methods look reusable, we need to decide which of them need to be rewritten.\r\n\t\t* For example, `block.parent_hash` and `collation.parent_collation_hash` are really alike but also meaningful. (I think it’s for distinguishing with `period_start_prevhash`). \r\n\t3. Shard chain uses main chain’s **Blockchain opcodes**- `blockhash, timestamp, block_number, difficulty, and gas_limit`\r\n\t\t* I noted in #247 TODOs: Decouple `VMState.block_header` the `VMState` properties (`blockhash`, ` timestamp, block_number, difficulty, and gas_limit)`, because shard chains use `period_start_prevhash` block properties of main chain in contracts, but `VMState.state_db()` should use the `state_root` of `VMState.collation_header` to build the state root trie.\r\n\t\t* It can be modified in `VM` to keep the codes consistent but will be unnecessary for main chain.\r\n2. No PoW for shard\r\n\t1. No `uncle`  and `nephew` rewards\r\n\t2. No `compute_difficulty`, only simple score increment. (`collation_number` ==collation score)\r\n\r\n\r\nAlso, I think we can benefit from drawing the whole JSON-RPC transaction sequence diagram between shard client and main chain. It could help us to figure out when/where should we call for the data from main chain.\r\n\r\n\r\n  \r\n  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356331732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356338272",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-356338272",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 356338272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMzODI3Mg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T16:33:37Z",
    "updated_at": "2018-01-09T16:33:37Z",
    "author_association": "MEMBER",
    "body": " @pipermerriam \r\nBy the way, do you think we should **(1)** arrange the common method in `master` branch and then implement it in `sharding` branch or **(2)** start with `sharding` branch and then backport \r\n common classes later?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/356338272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360845319",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-360845319",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 360845319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg0NTMxOQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T17:11:14Z",
    "updated_at": "2018-01-26T17:11:14Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam \r\n\r\n> New `BaseVM` class with common/shared methods between `VM` and `ShardVM`.\r\n\r\nI’m looking into this, it seems easy to drag out some functions that related to gas_limit and uncles to be `VM`-only. But on the other side, so many functions are using **block** as their prefix, suffix, or are related to `block_class` and I’m not sure which of them could be reused in `ShardVM` at this moment.\r\n\r\nI suggest that we can start with a simple overriding at the beginning, and then\r\nimplement the new logic with **collation** in Stage 2:\r\n1. In `base.py`, rename `VM` to `BaseVM`.\r\n2. Create `vm.py`, `VM`, simply inherit `BaseVM`:\r\n    ```python\r\n    class VM(BaseVM):\r\n        pass\r\n    ```\r\n3. Create `shard_vm.py`, also inherit `BaseVM`:\r\n    ```python\r\n    class ShardVM(BaseVM):\r\n        pass\r\n    ```\r\n4. Rewire the `ShardingVM` fork to inherit this new `ShardVM`:\r\n    ```python\r\n    ShardingVM = ShardVM.configure(\r\n        name='ShardingVM',\r\n        # classes\r\n        _block_class=ShardingBlock,\r\n        _state_class=ShardingVMState,\r\n        # implementations from other VM forks\r\n        create_header_from_parent=staticmethod(create_frontier_header_from_parent),\r\n        compute_difficulty=staticmethod(compute_frontier_difficulty),\r\n        configure_header=configure_frontier_header,\r\n        ....\r\n    )\r\n    ```\r\n\r\n5. When we start to apply `Collation` as the container,  we override the basic functions in `ShardVM` if we need.\r\n6. Refactor and clean up the common/shared methods.\r\n\r\n\r\nI guess it would be less pain of backporting by this way. Any advice and suggestions will be greatly appreciated.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360845319/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360846627",
    "html_url": "https://github.com/ethereum/py-evm/issues/256#issuecomment-360846627",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/256",
    "id": 360846627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg0NjYyNw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T17:16:09Z",
    "updated_at": "2018-01-26T17:16:09Z",
    "author_association": "MEMBER",
    "body": "Approach looks sound.  Make it so!\r\n\r\n![628b747f8ccdfb757062f36a27eedecfc2295f515c0586e05fbfb0620c0571a2](https://user-images.githubusercontent.com/824194/35451879-eab0e8b8-0281-11e8-85b9-8b4374807573.jpg)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/360846627/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
