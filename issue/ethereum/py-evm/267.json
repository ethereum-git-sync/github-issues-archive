{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/267",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/267/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/267/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/267/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/267",
  "id": 288301361,
  "node_id": "MDU6SXNzdWUyODgzMDEzNjE=",
  "number": 267,
  "title": "`sys.setrecursionlimit` is hard coded but should use `constants.STACK_DEPTH_LIMIT`",
  "user": {
    "login": "ycdk",
    "id": 35200255,
    "node_id": "MDQ6VXNlcjM1MjAwMjU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/35200255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ycdk",
    "html_url": "https://github.com/ycdk",
    "followers_url": "https://api.github.com/users/ycdk/followers",
    "following_url": "https://api.github.com/users/ycdk/following{/other_user}",
    "gists_url": "https://api.github.com/users/ycdk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ycdk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ycdk/subscriptions",
    "organizations_url": "https://api.github.com/users/ycdk/orgs",
    "repos_url": "https://api.github.com/users/ycdk/repos",
    "events_url": "https://api.github.com/users/ycdk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ycdk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-01-13T04:17:25Z",
  "updated_at": "2018-01-16T19:04:46Z",
  "closed_at": "2018-01-13T04:35:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Problem**: presently `STACK_DEPTH_LIMIT` is defined dynamically in `constants` module but hard coded in `__init__.py`: \r\nhttps://github.com/ethereum/py-evm/blob/c54c8c2bdc3feea45659e58b86bc7c58ab0ade38/evm/__init__.py#L30\r\n\r\n**Solution**: i believe should simply `from .constant import STACK_DEPTH_LIMIT` and use in call to `sys.setrecursionlimit`",
  "closed_by": {
    "login": "ycdk",
    "id": 35200255,
    "node_id": "MDQ6VXNlcjM1MjAwMjU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/35200255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ycdk",
    "html_url": "https://github.com/ycdk",
    "followers_url": "https://api.github.com/users/ycdk/followers",
    "following_url": "https://api.github.com/users/ycdk/following{/other_user}",
    "gists_url": "https://api.github.com/users/ycdk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ycdk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ycdk/subscriptions",
    "organizations_url": "https://api.github.com/users/ycdk/orgs",
    "repos_url": "https://api.github.com/users/ycdk/repos",
    "events_url": "https://api.github.com/users/ycdk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ycdk/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/267/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/267/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357412797",
    "html_url": "https://github.com/ethereum/py-evm/issues/267#issuecomment-357412797",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/267",
    "id": 357412797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQxMjc5Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-13T06:06:44Z",
    "updated_at": "2018-01-13T06:06:44Z",
    "author_association": "MEMBER",
    "body": "Looks like you figured it out, but..\r\n\r\nNeeds to be more than just the `STACK_DEPTH_LIMIT` since it actually takes more than a single stack frame (python stack frame) per EVM stack level.  Now, it might be prudent to have the VM class itself initialize this value to the appropriate limit since the limit *could* change, but I think it's safe to cross that bridge later if needed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357412797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357438350",
    "html_url": "https://github.com/ethereum/py-evm/issues/267#issuecomment-357438350",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/267",
    "id": 357438350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQzODM1MA==",
    "user": {
      "login": "ycdk",
      "id": 35200255,
      "node_id": "MDQ6VXNlcjM1MjAwMjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/35200255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ycdk",
      "html_url": "https://github.com/ycdk",
      "followers_url": "https://api.github.com/users/ycdk/followers",
      "following_url": "https://api.github.com/users/ycdk/following{/other_user}",
      "gists_url": "https://api.github.com/users/ycdk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ycdk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ycdk/subscriptions",
      "organizations_url": "https://api.github.com/users/ycdk/orgs",
      "repos_url": "https://api.github.com/users/ycdk/repos",
      "events_url": "https://api.github.com/users/ycdk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ycdk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-13T14:10:29Z",
    "updated_at": "2018-01-13T14:10:29Z",
    "author_association": "NONE",
    "body": "yes sorry, realised this was not quite correct.\r\n\r\ntwo question remain for me:\r\n\r\n1. do we still need to fix  hard coded unit tests here that have 1024/1025?\r\nhttps://github.com/ethereum/py-evm/blob/master/tests/core/stack/test_stack.py#L46\r\n\r\n2. what if we receive specially crafted jmp/call opcodes? do we have a worst-case/adversarial test for such?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357438350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358069989",
    "html_url": "https://github.com/ethereum/py-evm/issues/267#issuecomment-358069989",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/267",
    "id": 358069989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA2OTk4OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T19:04:45Z",
    "updated_at": "2018-01-16T19:04:45Z",
    "author_association": "MEMBER",
    "body": "- That test could be updated at whatever point that hard coded limit is changed.\r\n- The JSON fixture based tests have tests for this type of thing, but I don't believe we have anything written in local tests to directly test this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358069989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
