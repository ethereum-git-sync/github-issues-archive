{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/979",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/979/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/979/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/979/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/979",
  "id": 337215805,
  "node_id": "MDU6SXNzdWUzMzcyMTU4MDU=",
  "number": 979,
  "title": "Plugin architecture",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983614747,
      "node_id": "MDU6TGFiZWw5ODM2MTQ3NDc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20feature",
      "name": "type: feature",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983629919,
      "node_id": "MDU6TGFiZWw5ODM2Mjk5MTk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E2%20days",
      "name": "effort: E2 days",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    },
    {
      "id": 983630187,
      "node_id": "MDU6TGFiZWw5ODM2MzAxODc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E3%20weeks",
      "name": "effort: E3 weeks",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-06-30T13:42:16Z",
  "updated_at": "2018-12-14T13:45:51Z",
  "closed_at": "2018-12-14T13:45:50Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is the big idea!?\r\n\r\nI have been thinking about a new API for *plugins* in the trinity client.\r\n\r\nPlugins could range from things like simple internal optional components such as a gas estimation engine up to full blown applications like daemon processes for something like augur or ethereum alarm clock.\r\n\r\nI also think that we might benefit from dog-fooding this API for many of our internal things such as the JSON-RPC server, the transaction pool, peer management for rating and blocking peers.\r\n\r\nHere is a quick list of things that I think fit well into a *plugin* type architecture.\r\n\r\n1. Application which manages paid slots for light peers\r\n2. Transaction Pool\r\n3. Rating peers\r\n4. Blocking peers\r\n5. Whisper\r\n6. Deamon processes (augur, ethereum alarm clock, truebit)\r\n7. The python console.\r\n\r\nAPIs that would need to be exposed for these things would be:\r\n\r\n- hooks to add new sections of CLI arguments \r\n- hooks to add new CLI commands.\r\n- high level Web3.py connection\r\n- low level chain and database access\r\n- hooks for interacting with core components like peer pool\r\n- hooks for launching JSON-RPC server namespaces.\r\n\r\nWe might even be able to go as far as proving the ability to run new DevP2P services which would allow running something like whisper.\r\n\r\nAnd finally, while this is the absolute extreme version of this idea, we may even be able to move syncing to be relegated to run within this system.\r\n\r\n\r\n### How can it be fixed\r\n\r\nThis probably starts with a POC for either the transaction pool or the planned system for rating and persisting information about peers.",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/979/reactions",
    "total_count": 5,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/979/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/401554462",
    "html_url": "https://github.com/ethereum/py-evm/issues/979#issuecomment-401554462",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/979",
    "id": 401554462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTU1NDQ2Mg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T17:17:54Z",
    "updated_at": "2018-06-30T17:17:54Z",
    "author_association": "MEMBER",
    "body": "There also needs to be a generic way for plugins to raise events that other parts of the system (either core stuff or other plugins) can react upon. \r\n\r\nOne idea could be to have a generic *event bus* in Trinity that is exposed to the plugins and where plugins can listen for events but can also raise events. An event bus has been my standard pattern for this kind of problem in the past (which is why I'm bringing it up here) but there may be other well suited patterns as well. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/401554462/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/402554227",
    "html_url": "https://github.com/ethereum/py-evm/issues/979#issuecomment-402554227",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/979",
    "id": 402554227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU1NDIyNw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T20:24:55Z",
    "updated_at": "2018-07-04T20:24:55Z",
    "author_association": "MEMBER",
    "body": "I just developed some ideas for this in my head. I'd like the `TxPool` to be written as a plugin that also defines a `--no-tx-pool` cli arg so that we have a way to easily disable it (e.g. it's buggy).\r\n\r\nSo, my first use case for the plugin architecture would be to:\r\n\r\n1. Don't hardcode the `TxPool` in the core trinity code base\r\n2. Furthermore, avoid hardcoding a `TxPool` specific cli arg into the core Trinity code base\r\n\r\nI also have some ideas on how to tackle inter plugin dependencies. Some of this stuff reminds me of how we handle the [validation pipeline at the MachineLabs server](https://github.com/machinelabs/machinelabs/tree/0369ef13d355d8aa743cb0970583273c9f1be316/server/src/validation).\r\n\r\nI'd like to take a stab on this :hocho: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/402554227/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403786965",
    "html_url": "https://github.com/ethereum/py-evm/issues/979#issuecomment-403786965",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/979",
    "id": 403786965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzc4Njk2NQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-10T11:13:27Z",
    "updated_at": "2018-07-10T11:13:27Z",
    "author_association": "MEMBER",
    "body": "Just leaving this thought here: I think that the nodes itself (full (ropsten/mainnet), light (ropsten / mainnet)) are pretty good candidates to fall into the plugin space themselves. We can probably make these things more fine grained and then provide plugins to expose the same functionality as today but with the added benefit to make it really easy for people to e.g. add support for *Kovan* or whatever.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/403786965/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447329826",
    "html_url": "https://github.com/ethereum/py-evm/issues/979#issuecomment-447329826",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/979",
    "id": 447329826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzMyOTgyNg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T13:45:50Z",
    "updated_at": "2018-12-14T13:45:50Z",
    "author_association": "MEMBER",
    "body": "Guess we can close. Feel free to re-open if anyone disagrees.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447329826/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
