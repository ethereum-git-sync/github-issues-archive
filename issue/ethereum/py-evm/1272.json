{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1272",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1272",
  "id": 358632734,
  "node_id": "MDU6SXNzdWUzNTg2MzI3MzQ=",
  "number": 1272,
  "title": "Moving eth_typing broke type support",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871939,
      "node_id": "MDU6TGFiZWw2MzA4NzE5Mzk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20bug",
      "name": "type: bug",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983628230,
      "node_id": "MDU6TGFiZWw5ODM2MjgyMzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P3%20important",
      "name": "prio: P3 important",
      "color": "fad8c7",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-09-10T13:51:37Z",
  "updated_at": "2018-12-14T13:43:34Z",
  "closed_at": "2018-12-14T13:43:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nWhile working on #1262 I noticed that our `eth_typing` effort completely broke since we moved the library into its own codebase recently.\r\n\r\nIronically, everything that we currently type with e.g. `Hash32(...)` is treated as `Any`. This is because we currently do not get any type support for external libraries unless we have stubs for them.\r\n\r\n### How can it be fixed\r\n\r\nI believe that with [PEP561](https://www.python.org/dev/peps/pep-0561/) we should be able to get type support for external libs without stubs but I haven't digged into that yet. Also see [this](https://mypy.readthedocs.io/en/latest/installed_packages.html) for further reading.",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1272/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/419986729",
    "html_url": "https://github.com/ethereum/py-evm/issues/1272#issuecomment-419986729",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272",
    "id": 419986729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk4NjcyOQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T17:04:22Z",
    "updated_at": "2018-09-10T17:04:22Z",
    "author_association": "MEMBER",
    "body": "That is super annoying.  Simply by placing the type in another library it stops enforcing the type restriction?  That's really lame.  Short term solution should be to drop the `eth_typing` library and embed the types locally again assuming you can't get PEP561 style stuff working.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/419986729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/420569582",
    "html_url": "https://github.com/ethereum/py-evm/issues/1272#issuecomment-420569582",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272",
    "id": 420569582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU2OTU4Mg==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T09:01:51Z",
    "updated_at": "2018-09-12T09:02:20Z",
    "author_association": "MEMBER",
    "body": "Good news, an upstream fix is under way: https://github.com/ethereum/eth-typing/pull/10\r\nBad news, since mypy was silenced in respect to `eth_typing` for a couple of weeks, there were a bunch of typing errors that slipped into our code base.\r\n\r\n```\r\ntrinity/protocol/common/requests.py:39: error: Incompatible return value type (got \"Tuple[int, ...]\", expected \"Tuple[BlockNumber, ...]\")\r\ntrinity/sync/full/hexary_trie.py:102: error: Argument 1 to \"_get_children\" has incompatible type \"int\"; expected \"Hash32\"\r\ntrinity/sync/full/hexary_trie.py:104: error: Argument 1 to \"extend\" of \"list\" has incompatible type \"List[bytes]\"; expected \"Iterable[int]\"\r\ntrinity/sync/full/hexary_trie.py:110: error: Incompatible return value type (got \"Tuple[List[Tuple[int, Hash32]], List[int]]\", expected \"Tuple[List[Tuple[int, Hash32]], List[bytes]]\")\r\ntrinity/protocol/common/validators.py:96: error: Incompatible return value type (got \"Tuple[int, ...]\", expected \"Tuple[BlockNumber, ...]\")\r\ntrinity/plugins/builtin/tx_pool/validators.py:65: error: Argument 1 to \"get_vm_class_for_block_number\" of \"BaseChain\" has incompatible type \"int\"; expected \"BlockNumber\"\r\np2p/peer.py:1106: error: Argument 1 to \"__call__\" of \"GetBlockHeadersExchange\" has incompatible type \"int\"; expected \"Union[BlockNumber, Hash32]\"\r\np2p/discovery.py:498: error: Incompatible types in assignment (expression has type \"bytes\", target has type \"Hash32\")\r\np2p/discovery.py:499: error: Incompatible return value type (got \"bytes\", expected \"Hash32\")\r\np2p/discovery.py:680: error: Incompatible types in assignment (expression has type \"int\", variable has type \"Hash32\")\r\np2p/discovery.py:1142: error: Incompatible return value type (got \"Tuple[Any, int, Tuple[Any, ...], bytes]\", expected \"Tuple[Any, int, Tuple[Any, ...], Hash32]\")\r\ntrinity/protocol/les/exchanges.py:55: error: Argument 1 has incompatible type \"*Tuple[Union[Hash32, int], ...]\"; expected \"Union[BlockNumber, Hash32]\"\r\ntrinity/protocol/les/exchanges.py:55: error: Argument 1 has incompatible type \"*Tuple[Union[Hash32, int], ...]\"; expected \"int\"\r\ntrinity/protocol/les/exchanges.py:55: error: Argument 1 has incompatible type \"*Tuple[Union[Hash32, int], ...]\"; expected \"bool\"\r\ntrinity/protocol/les/peer.py:63: error: Incompatible types in assignment (expression has type \"Union[int, Hash32, BlockNumber]\", variable has type \"int\")\r\ntrinity/protocol/les/peer.py:64: error: Incompatible types in assignment (expression has type \"Union[int, Hash32, BlockNumber]\", variable has type \"Hash32\")\r\ntrinity/protocol/les/peer.py:65: error: Incompatible types in assignment (expression has type \"Union[int, Hash32, BlockNumber]\", variable has type \"BlockNumber\")\r\ntrinity/sync/full/state.py:94: error: Argument 1 to \"StateSync\" has incompatible type \"bytes\"; expected \"Hash32\"\r\ntrinity/sync/full/state.py:177: error: Argument 1 to \"HeaderRequest\" has incompatible type \"Union[bool, int]\"; expected \"Union[BlockNumber, Hash32]\"\r\ntrinity/sync/common/chain.py:272: error: Argument 1 to \"__call__\" of \"GetBlockHeadersExchange\" has incompatible type \"int\"; expected \"Union[BlockNumber, Hash32]\"\r\ntrinity/chains/light.py:167: error: Argument 1 to \"get_canonical_block_hash\" of \"BaseHeaderDB\" has incompatible type \"int\"; expected \"BlockNumber\"\r\ntrinity/sync/full/chain.py:600: error: Argument 1 to \"coro_persist_trie_data_dict\" of \"AsyncChainDB\" has incompatible type \"Dict[Hash32, bytes]\"; expected \"Dict[bytes, bytes]\"\r\ntrinity/main.py:112: error: Argument 1 to \"EventBus\" has incompatible type \"BaseContext\"; expected Module\r\ntrinity/rpc/modules/eth.py:65: error: Argument 1 to \"get_canonical_block_by_number\" of \"BaseChain\" has incompatible type \"int\"; expected \"BlockNumber\"\r\ntrinity/rpc/modules/eth.py:69: error: Argument 1 to \"get_canonical_block_by_number\" of \"BaseChain\" has incompatible type \"Union[str, int]\"; expected \"BlockNumber\"\r\ntrinity/rpc/modules/eth.py:89: error: Argument 1 to \"get_canonical_block_by_number\" of \"BaseChain\" has incompatible type \"Union[str, int]\"; expected \"BlockNumber\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/420569582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447329295",
    "html_url": "https://github.com/ethereum/py-evm/issues/1272#issuecomment-447329295",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1272",
    "id": 447329295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzMyOTI5NQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T13:43:33Z",
    "updated_at": "2018-12-14T13:43:33Z",
    "author_association": "MEMBER",
    "body": "This was long fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447329295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
