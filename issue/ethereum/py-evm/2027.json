{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/2027",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/2027",
  "id": 996739424,
  "node_id": "I_kwDOBJ456s47aQlg",
  "number": 2027,
  "title": "Persistent DB between sessions",
  "user": {
    "login": "gpsanant",
    "id": 32277907,
    "node_id": "MDQ6VXNlcjMyMjc3OTA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/32277907?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gpsanant",
    "html_url": "https://github.com/gpsanant",
    "followers_url": "https://api.github.com/users/gpsanant/followers",
    "following_url": "https://api.github.com/users/gpsanant/following{/other_user}",
    "gists_url": "https://api.github.com/users/gpsanant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gpsanant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gpsanant/subscriptions",
    "organizations_url": "https://api.github.com/users/gpsanant/orgs",
    "repos_url": "https://api.github.com/users/gpsanant/repos",
    "events_url": "https://api.github.com/users/gpsanant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gpsanant/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-09-15T07:14:20Z",
  "updated_at": "2021-09-20T17:37:02Z",
  "closed_at": "2021-09-17T19:57:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "It seems as though there is no place in the documentation that explains how to user py-evm with a persistent database where the chain picks up from where it left off before termination from the previous process. How would I go about doing this?\r\n",
  "closed_by": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/2027/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/922045743",
    "html_url": "https://github.com/ethereum/py-evm/issues/2027#issuecomment-922045743",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027",
    "id": 922045743,
    "node_id": "IC_kwDOBJ456s429U0v",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T19:57:30Z",
    "updated_at": "2021-09-17T19:57:30Z",
    "author_association": "MEMBER",
    "body": "All of that logic is up to the user. When you pass in a database to the chain during initialization, that's when you would load the database from disk, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/922045743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/922077358",
    "html_url": "https://github.com/ethereum/py-evm/issues/2027#issuecomment-922077358",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027",
    "id": 922077358,
    "node_id": "IC_kwDOBJ456s429ciu",
    "user": {
      "login": "gpsanant",
      "id": 32277907,
      "node_id": "MDQ6VXNlcjMyMjc3OTA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32277907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gpsanant",
      "html_url": "https://github.com/gpsanant",
      "followers_url": "https://api.github.com/users/gpsanant/followers",
      "following_url": "https://api.github.com/users/gpsanant/following{/other_user}",
      "gists_url": "https://api.github.com/users/gpsanant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gpsanant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gpsanant/subscriptions",
      "organizations_url": "https://api.github.com/users/gpsanant/orgs",
      "repos_url": "https://api.github.com/users/gpsanant/repos",
      "events_url": "https://api.github.com/users/gpsanant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gpsanant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T20:57:57Z",
    "updated_at": "2021-09-17T20:57:57Z",
    "author_association": "NONE",
    "body": "> All of that logic is up to the user. When you pass in a database to the chain during initialization, that's when you would load the database from disk, for example.\r\n\r\nSorry, I don't think my question was clear. How do initialize a chain with a given database?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/922077358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/923136379",
    "html_url": "https://github.com/ethereum/py-evm/issues/2027#issuecomment-923136379",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2027",
    "id": 923136379,
    "node_id": "IC_kwDOBJ456s43BfF7",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T17:37:02Z",
    "updated_at": "2021-09-20T17:37:02Z",
    "author_association": "MEMBER",
    "body": "The entry points for creating a chain take in a database as an argument. For example, see: https://py-evm.readthedocs.io/en/latest/guides/building_an_app_that_uses_pyevm.html#writing-the-application-code",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/923136379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
