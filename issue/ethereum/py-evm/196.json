{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/196",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/196/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/196/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/196/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/196",
  "id": 279247399,
  "node_id": "MDU6SXNzdWUyNzkyNDczOTk=",
  "number": 196,
  "title": "Shard Manager for watching multiple shards",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-12-05T05:04:02Z",
  "updated_at": "2018-09-26T07:57:44Z",
  "closed_at": "2018-09-26T07:57:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "* Enable regular stateless client to watch multiple shards at the same time.\r\n* Once the validators detect that the they are sampled as the collator, they have to add the shard_id the watching list, and then validators have to run the **stateless fast sync** to sync the shard. The config looks like:\r\n    ```\r\n    {\r\n        validator_address: \"0x...\" OR null,\r\n        watching: [list of shard ids],\r\n        ...\r\n    }\r\n    ```\r\n* `shard_id` is similar to the concept of `network_id`, we use `shard_id` to identify different p2p networks.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/196/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/196/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349741676",
    "html_url": "https://github.com/ethereum/py-evm/issues/196#issuecomment-349741676",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/196",
    "id": 349741676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc0MTY3Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T19:05:30Z",
    "updated_at": "2017-12-06T19:05:41Z",
    "author_association": "MEMBER",
    "body": "@hwwhww is this something that will live in the networking layer?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349741676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349865399",
    "html_url": "https://github.com/ethereum/py-evm/issues/196#issuecomment-349865399",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/196",
    "id": 349865399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg2NTM5OQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T05:14:29Z",
    "updated_at": "2017-12-07T05:14:44Z",
    "author_association": "MEMBER",
    "body": "I hope the implementation would be mostly in transport layer and session layer.\r\n1. Port mapping\r\n\t* Map different `network_ids`/`shard_ids` to different ports\r\n2. Keep the same Node Discovery Protocol \r\n3. Suggestions\r\n\t* The early step may be trying to **connect to two non-sharding private networks concurrently**. So we donâ€™t need to update Wire Protocol at first.\r\n\t* Use different databases for different networks.\r\n4. Update Wire Protocol for sharding\r\n\t* Option 1: Reuse the `Status` Message of [Ethereum Wire Protocol](https://github.com/ethereum/wiki/wiki/Ethereum-Wire-Protocol#ethereum-sub-protocol) (Transport Layer)\r\n\t\t* **Status** [`+0x00`: `P`, `protocolVersion`: `P`, `networkId`: `P`, `td`: `P`, `bestHash`: `B_32`, `genesisHash`: `B_32`] Inform a peer of its current **ethereum** state. This message should be sent _after_ the initial handshake and _prior_ to any **ethereum** related messages\r\n\t\t\t* `protocolVersion`: TBD\r\n\t\t\t * `networkId`: prefix `10` + `shard_id`\r\n\t\t\t* `td`: total score (number) of the best chain. Integer, as found in collation header.\r\n\t\t\t* `bestHash`: the hash of the best (i.e. highest score) known collation.\r\n\t\t\t* `genesisHash`: 32 bytes of `0x00`\r\n\t* Option 2: Write new Sharding-only `Status` Message\r\n5. I suppose `ShardManager` includes or triggers:\r\n\t1. Calling function in VMC utils (maybe use event filter) to detect whether they are sampled as the collator\r\n\t2. Maintaining `watching` list\r\n\t3. Modules like `PeerManager` in `pydevp2p`\r\n\t\t* connect / disconnect p2p network\r\n\t4. Modules like `Synchronizer` in `pyethapp`\r\n\t\t* handle (1) stateless fast sync or (2) full sync task\r\n6. Dependency\r\n\t* Shard client needs to run a full node\r\n\t\t* Need to implement the equivalent of `evm.p2p.peer.LESPeer` for full node\r\n\t\t* Need command line interface",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349865399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
