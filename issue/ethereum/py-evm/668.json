{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/668",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/668/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/668/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/668/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/668",
  "id": 321352273,
  "node_id": "MDU6SXNzdWUzMjEzNTIyNzM=",
  "number": 668,
  "title": "Figure out trinity p2p architecture",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-05-08T21:24:24Z",
  "updated_at": "2018-07-20T20:29:43Z",
  "closed_at": "2018-07-20T20:09:55Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nI started trying in https://github.com/ethereum/py-evm/pull/664 to do some refactoring in the p2p/trinity code around `LightChain` but I'm struggling to form a cohesive picture of the architecture.\r\n\r\n1. We have a `Server` class which is slated to be used as the *common* entry point for running *chains*.\r\n2. We have the `ChainSyncer` and  `RegularChainSyncer` classes which appear to serve *roughly* the same role as `LightChain` currently serves.\r\n3. We have some other `Syncer` classes like `StateSyncer` which seem to serve slightly different roles.\r\n\r\n### How can it be fixed\r\n\r\nI'm hoping we can find a way to re-organize things to fit something like the following.\r\n\r\n- A single class for each of *light*, *fast* and *regular* which know how to perform the syncing logic for each of those operating modes.\r\n  - `LightSync`, `FastSync`, `FullSync` ?\r\n- A single class for both *light* and *full* which exposes the full networking API (currently handled by `ChainSyncer` and `LightChain`).\r\n  - Does **not** implement syncing logic.\r\n  - Exposes APIs for sending and receiving data over the network\r\n  - `LightClient`, `FullClient`\r\n  - `LightSync` gets access to `LightClient` to perform networking tasks.\r\n  - Both `FastSync` and `FullSync` get access to `FullClient` for network interactions.\r\n  - `FullClient` probably handles switchover from `FastSync` to `FullSync`.\r\n- One or more `Server` classes which are the standard entry point into running the trinity networking process.\r\n  - Handles peer pool, discovery, ...\r\n  - Handles running the `LightClient` and `FullClient` classes.\r\n\r\n\r\n\r\n\r\nThen for some glue to hold it all together:\r\n\r\n- A `ChainOverNetwork` class which implements the `BaseChain` API, however, it internally gets access to the ",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/668/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/668/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/387654860",
    "html_url": "https://github.com/ethereum/py-evm/issues/668#issuecomment-387654860",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/668",
    "id": 387654860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY1NDg2MA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T07:57:36Z",
    "updated_at": "2018-05-09T07:57:36Z",
    "author_association": "MEMBER",
    "body": "Yeah, things are still a bit messy in the `p2p` package, and I apologize for that. I have some plans (which I haven't gotten to working on yet because I got stuck trying to figure out some issues with how we're using `CancelToken`s), and I hope those will make things more obvious.\r\n\r\nSo, you're right that `Server` is supposed to be the main entry point. It will run `DiscoveryProtocol`, `PeerPool`, authenticate incoming peer connections (which should eventually be moved into its separate service), and run the service responsible for chain sync. \r\n\r\nNow, for the chain sync service, my plan is to have only `FullNodeSyncer` and `LightNodeSyncer`, where the latter will be factored out from the existing `LightChain` (or even from `FullNodeSyncer`). These are supposed to make sure we're always in sync, but won't provide APIs for chain/state data retrieval themselves -- that would stay in the current `Chain` service offered by `trinity` (with possibly a separate one that can fetch data on-demand, for when we're in light mode)\r\n\r\nFinally, to clarify the state of the current `*Syncer` classes:\r\n - `ChainSyncer`: does the chain part of fast-sync, fetching/storing headers, bodies and receipts \r\n - `StateDownloader`: does the state part of fast-sync, fetching/storing the whole state trie starting from a given root hash\r\n - `RegularChainSyncer`: does the regular sync, fetching headers/bodies and importing them\r\n \r\nI'm thinking of renaming the first to `FastChainSyncer`, but those are all wrapped by `FullNodeSyncer` anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/387654860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/387657496",
    "html_url": "https://github.com/ethereum/py-evm/issues/668#issuecomment-387657496",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/668",
    "id": 387657496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY1NzQ5Ng==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T08:07:14Z",
    "updated_at": "2018-05-09T08:07:14Z",
    "author_association": "MEMBER",
    "body": "Now answering some specifics:\r\n\r\n> A single class for each of light, fast and regular which know how to perform the syncing logic for each of those operating modes. LightSync, FastSync, FullSync ?\r\n\r\nThere's actually only two modes -- light and full. When doing a full sync we might [start with a fast-sync if we are too far behind](https://github.com/ethereum/py-evm/issues/654) but once we've caught up we switch to regular-sync. That is handled by `FullNodeSyncer`\r\n\r\n> A single class for both light and full which exposes the full networking API (currently handled by ChainSyncer and LightChain). \r\n>  - Does not implement syncing logic.\r\n>  - Exposes APIs for sending and receiving data over the network\r\n>  - LightClient, FullClient\r\n>  - LightSync gets access to LightClient to perform networking tasks.\r\n>  - Both FastSync and FullSync get access to FullClient for network interactions.\r\n\r\nI think this is well encapsulated in peer (`ETHPeer` and `LESPeer`) and protocol classes. The sync services already delegate to those for network requests\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/387657496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406718345",
    "html_url": "https://github.com/ethereum/py-evm/issues/668#issuecomment-406718345",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/668",
    "id": 406718345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcxODM0NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T20:29:43Z",
    "updated_at": "2018-07-20T20:29:43Z",
    "author_association": "MEMBER",
    "body": "Replaced by #1060 I suppose",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406718345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
