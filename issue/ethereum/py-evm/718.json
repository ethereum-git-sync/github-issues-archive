{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/718",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/718/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/718/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/718/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/718",
  "id": 324413542,
  "node_id": "MDU6SXNzdWUzMjQ0MTM1NDI=",
  "number": 718,
  "title": "Trinity can't connect to Parity on Ropsten in \"full\" mode",
  "user": {
    "login": "veox",
    "id": 3036030,
    "node_id": "MDQ6VXNlcjMwMzYwMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/veox",
    "html_url": "https://github.com/veox",
    "followers_url": "https://api.github.com/users/veox/followers",
    "following_url": "https://api.github.com/users/veox/following{/other_user}",
    "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
    "organizations_url": "https://api.github.com/users/veox/orgs",
    "repos_url": "https://api.github.com/users/veox/repos",
    "events_url": "https://api.github.com/users/veox/events{/privacy}",
    "received_events_url": "https://api.github.com/users/veox/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-05-18T13:35:39Z",
  "updated_at": "2018-06-12T14:07:04Z",
  "closed_at": "2018-06-12T14:07:04Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Systems' info\r\n\r\nTrinity node:\r\n\r\n* py-evm: v0.2.0-alpha.6-1049-ge0864ea (although e0864ea is tagged as `v0.2.0-alpha.18` - go figure!)\r\n* OS: Arch Linux\r\n* Python: CPython 3.6.5\r\n* Environment: [gist](https://gist.github.com/veox/61a77f3e67ac3f35e57185488c712c7e)\r\n\r\nParity node:\r\n\r\n* Parity version: Parity/v1.10.1-unstable-45c29a2-20180413/x86_64-linux-gnu/rustc1.24.0\r\n* OS: Ubuntu 16.04.4 LTS (Xenial Xerus)\r\n* Rust: rustc 1.24.0 (4d90ac38c 2018-02-12)\r\n\r\n### What is wrong?\r\n\r\nPR #638 introduced a \"full\" (`geth`-like \"fast\") sync mode in Trinity. Previously, using the `LES` sub-protocol meant that lasting connections would be made to `geth` nodes exclusively; now, compatibility with other nodes should be considered.\r\n\r\nI have tried [short-circuiting the hard-coded nodes' list](https://github.com/ethereum/py-evm/commit/563f40195db11f28da935c3a4d0fa03b271bb826) to force connection to a Parity node under my control (so I can get the log).\r\n\r\nA snippet from the Trinity side (I've replaced the `DEBUG` log-level message with `XXXXX` for debug-prints not present in `master`):\r\n\r\n``` sh\r\n% trinity --network-id=3 --sync-mode=full --log-level=debug\r\n```\r\n\r\n```\r\nDEBUG p2p.peer.PeerPool 2018-05-18 15:51:48,992 - Connecting to <Node(0x17c1@79.98.29.154)>...\r\nXXXXX p2p.protocol.Protocol 2018-05-18 15:51:49,006 - Sending ETH/Hello msg: {'version': 4, 'client_version_string': 'Trinity', 'capabilities': [('eth', 63)], 'listen_port': 30303, 'remote_pubkey': b'\\xbd\\xd6\\x7f\\x99U\\x10\\xd3sIrH\\xf6/\\x05\\xc5&\\r\\xc5\\xe5$\\r\\xf9Xc\\xe3\\xc4\\x96:2\\t\\x03\\x13B\\x0e\\xad\\x08\\xc1\\x01s\\xbf\\x18\\x03\\x9eq<\\xbc\\xea\\xf4\\xc7\":0\\x89\\xa9\\x86\\x92\\xfbH\\x14\\x82\\x9f\\x16\\x940'}\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,006 - Sending msg with cmd_id: 0\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,006 - Waiting for 32 bytes from <Node(0x17c1@79.98.29.154)>\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,007 - Waiting for 192 bytes from <Node(0x17c1@79.98.29.154)>\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,007 - Got msg with cmd_id: 0\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,008 - Successfully decoded Hello (cmd_id=0) msg: {'version': 5, 'client_version_string': 'Parity/v1.10.1-unstable-45c29a2-20180413/x86_64-linux-gnu/rustc1.24.0', 'capabilities': (('eth', 62), ('eth', 63), ('par', 1), ('par', 2), ('pip', 1)), 'listen_port': 30303, 'remote_pubkey': b'\\x17\\xc1d\\x19I`\\x84c^\\xb5TcS\\xff\\x91\\xd0\\x11\\x1f\\xa5\\xab\\x12\\xd4\\xd5\\x1dE\\xb1\\x8eD(\\xcd\\xe6\\xf6E\\xcc\\xa2M\\xabU\\xcf\\tW\\xf8_\\xfda\\x8bx\\x87\\xf4W(\\xac\\x8f\\x9e4\\xf8\\x18G\\xef\\xb5\\x99\\xdb$\\xfa'}\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,009 - Finished P2P handshake with <Node(0x17c1@79.98.29.154)>, using sub-protocol (eth, 63)\r\nXXXXX p2p.peer.Peer 2018-05-18 15:51:49,009 - DEBUGME \r\nDEBUG p2p.eth.ETHProtocol 2018-05-18 15:51:49,017 - Sending ETH/Status msg: {'protocol_version': 63, 'network_id': 3, 'td': 1048576, 'best_hash': b'A\\x94\\x10#h\\t#\\xe0\\xfeMt\\xa3K\\xda\\xc8\\x14\\x1f%@\\xe3\\xae\\x90b7\\x18\\xe4}f\\xd1\\xcaJ-', 'genesis_hash': b'A\\x94\\x10#h\\t#\\xe0\\xfeMt\\xa3K\\xda\\xc8\\x14\\x1f%@\\xe3\\xae\\x90b7\\x18\\xe4}f\\xd1\\xcaJ-'}\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,018 - Sending msg with cmd_id: 16\r\nDEBUG p2p.peer.Peer 2018-05-18 15:51:49,018 - Waiting for 32 bytes from <Node(0x17c1@79.98.29.154)>\r\nDEBUG p2p.peer.PeerPool 2018-05-18 15:51:49,018 - Could not complete handshake with <Node(0x17c1@79.98.29.154)>: PeerConnectionLost(\"ConnectionResetError(104, 'Connection reset by peer')\",)\r\nDEBUG p2p.peer.PeerPool 2018-05-18 15:51:51,021 - Last node discovery lookup too long ago, triggering another\r\nDEBUG p2p.peer.PeerPool 2018-05-18 15:51:51,022 - Connecting to <Node(0x17c1@79.98.29.154)>...\r\n```\r\n\r\nParity's side is very hard to debug due to it being at the `TRACE` level - here's a snipped segment from a much earlier run (same happens now):\r\n\r\n``` sh\r\n% parity --chain=ropsten --no-color  --logging=\"network=trace\" --log-file=network-trace.log\r\n```\r\n\r\n```\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  Accepting incoming connection\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Initiating session None\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  Expect to read 307 bytes\r\n2018-05-11 20:39:52   TRACE network  connection register; token=Token(8)\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Read 64 of 307 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Read 128 of 307 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Read 256 of 307 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Read 307 of 307 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  Received handshake auth from \"<IP-V4-SNIPPED>:44786\"\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  Sending handshake ack to \"<IP-V4-SNIPPED>:44786\"\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Sending 210 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  Expect to read 32 bytes\r\n2018-05-11 20:39:52  IO Worker #0 TRACE network  8: Sending 224 bytes\r\n2018-05-11 20:39:52   TRACE network  connection reregister; token=Token(8)\r\n2018-05-11 20:39:52   TRACE network  connection reregister; token=Token(8)\r\n2018-05-11 20:39:52   TRACE network  connection reregister; token=Token(8)\r\n2018-05-11 20:39:52  IO Worker #1 TRACE network  8: Wrote 210 bytes\r\n2018-05-11 20:39:52   TRACE network  connection reregister; token=Token(8)\r\n2018-05-11 20:39:52  IO Worker #1 TRACE network  8: Wrote 224 bytes\r\n2018-05-11 20:39:52   TRACE network  connection reregister; token=Token(8)\r\n2018-05-11 20:39:52  IO Worker #1 TRACE network  Accepting incoming connection\r\n...\r\n2018-05-11 20:39:52  IO Worker #2 TRACE network  8: Read 32 of 32 bytes\r\n2018-05-11 20:39:52  IO Worker #2 TRACE network  Session read error: 8:Some(bdd67f995510d373497248f62f05c5260dc5e5240df95863e3c4963a32090313420ead08c10173bf18039e713cbceaf4c7223a3089a98692fb4814829f169430) (Ok(V4(<IP-V4-SNIPPED>:44786))) Error(Auth, State { next_error: None, backtrace: None })\r\n2018-05-11 20:39:52   TRACE network  connection deregister; token=8\r\n```\r\n\r\n### How can it be fixed\r\n\r\nAs @gsalgado mentioned on gitter - likely by implementing some more up-to-date handshake and/or sub-protocol. As also seen from the logs above, Trinity sends a `Hello` with `'version': 4`; it may be that Parity only supports the (sub?)-protocol that has `'version': 5`.\r\n\r\nThe documentation on these is notoriously non-specific. Documents often lack version identifiers, or assume prior knowledge.\r\n\r\n### Maybe useful links\r\n\r\nRelated issues:\r\n\r\n* #429 - Implement p2p discovery v5\r\n\r\nDocs:\r\n\r\n* [devp2p wire protocol](https://github.com/ethereum/wiki/wiki/%C3%90%CE%9EVp2p-Wire-Protocol) on the EF wiki;\r\n* [eth wire protocol](https://github.com/ethereum/wiki/wiki/Ethereum-Wire-Protocol) on the EF wiki;\r\n* [RLPx doc](https://github.com/ethereum/devp2p/blob/master/rlpx.md#encrypted-handshake) in `ethereum/devp2p` repo.\r\n\r\nApproximate locations in impl-ns:\r\n\r\n* [`geth`'s `eth/peer`](https://github.com/ethereum/go-ethereum/blob/v1.8.7/eth/peer.go#L236);\r\n* [`parity`'s `handshake`](https://github.com/paritytech/parity/blob/v1.10.1/util/network/src/handshake.rs#L189).\r\n\r\n### Cute animal pic\r\n\r\n\"Does Trinity pass the Parity test?..\"\r\n\r\n![cat with open mouth gapes at mirror](https://i2.wp.com/www.animalcognition.org/wp-content/uploads/2015/04/screenshot.122.jpg)\r\n\r\n([source: Animal Cognition](http://www.animalcognition.org/2015/04/15/list-of-animals-that-have-passed-the-mirror-test/))",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/718/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/718/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395810385",
    "html_url": "https://github.com/ethereum/py-evm/issues/718#issuecomment-395810385",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/718",
    "id": 395810385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgxMDM4NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T16:11:40Z",
    "updated_at": "2018-06-08T16:11:40Z",
    "author_association": "MEMBER",
    "body": "> although e0864ea is tagged as v0.2.0-alpha.18 - go figure!\r\n\r\nEventually, py-evm and trinity will be split into separate repos, but they are already split into separate pypi release versions. So there will be weirdness in the tagging until the repos are split",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395810385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395963949",
    "html_url": "https://github.com/ethereum/py-evm/issues/718#issuecomment-395963949",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/718",
    "id": 395963949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk2Mzk0OQ==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T12:02:38Z",
    "updated_at": "2018-06-09T12:02:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@carver you likely refer to\r\n\r\n> py-evm: v0.2.0-alpha.6-1049-ge0864ea (although e0864ea is tagged as v0.2.0-alpha.18 - go figure!)\r\n\r\nThis is actually a peculiarity of `git`: I ran `git describe` without `--tags`, which only uses tags that have annotations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/395963949/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
