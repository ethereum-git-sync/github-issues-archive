{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/268/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/268/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/268/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/268",
  "id": 288308359,
  "node_id": "MDU6SXNzdWUyODgzMDgzNTk=",
  "number": 268,
  "title": "Remove `is_stateless` flag",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871768,
      "node_id": "MDU6TGFiZWw2MzA4NzE3Njg=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/PR%20state:%20WIP",
      "name": "PR state: WIP",
      "color": "fbca04",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-01-13T06:57:57Z",
  "updated_at": "2018-01-23T15:08:37Z",
  "closed_at": "2018-01-23T15:08:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nThere's an `is_stateless` in `VM` configuration now: \r\nhttps://github.com/ethereum/py-evm/blob/4f476908dff42e290c15fc4cfb6a3c5e65e37dfe/evm/vm/base.py#L98-L127\r\n\r\nIn `is_stateless` mode, the `block` will be deeply copied and the get the result `block` from `VMState` with updated header and transactions. And in the non-stateless mode (the old route), the state transition result would be updated in `VM`.\r\n\r\n### How can it be fixed\r\n\r\n1. Remove the `is_stateless is False` route.\r\n2. Modify `Chain.apply_transaction` to update the local vm state before returning the `computation` object.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/268/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/268/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358682797",
    "html_url": "https://github.com/ethereum/py-evm/issues/268#issuecomment-358682797",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
    "id": 358682797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODY4Mjc5Nw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T15:32:56Z",
    "updated_at": "2018-01-19T06:05:29Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam  \r\nIn the previous PR review feedback, you pointed out that we should **modify Chain.apply_transaction to update the local vm state before returning the computation object**.\r\n\r\n1. Do you mean that updating `Chain.header` in `apply_transaction`?\r\n\r\n**Chain.apply_transaction(transaction)**\r\n```python\r\n    def apply_transaction(self, transaction):\r\n        \"\"\"\r\n        Apply the transaction to the current head block of the Chain.\r\n        \"\"\"\r\n        vm = self.get_vm()\r\n        computation, block = vm.apply_transaction(transaction)\r\n        state_trie_data = computation.vm_state.access_logs.writes\r\n\r\n+       self.header = block.header\r\n\r\n        return computation\r\n```\r\n\r\n2. Some of the methods of `Chain` haven't been used in lightclient, I wonder what is the use case of `Chain.apply_transaction(transaction)` for full nodes or other scenarios?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358682797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358752062",
    "html_url": "https://github.com/ethereum/py-evm/issues/268#issuecomment-358752062",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
    "id": 358752062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc1MjA2Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T19:16:28Z",
    "updated_at": "2018-01-18T19:16:28Z",
    "author_association": "MEMBER",
    "body": "> you pointed out that we should modify **Chain.apply_transaction to update the local vm state before returning the computation object.**\r\n\r\nI **think** what I was referring to was that *previously* the `Chain` class's state root would get updated *automatically*, but with the recent changes, that is no longer the case.  So, the `Chain` object now needs to manually update the state root since it no longer happens automatically.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358752062/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358752343",
    "html_url": "https://github.com/ethereum/py-evm/issues/268#issuecomment-358752343",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
    "id": 358752343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc1MjM0Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T19:17:24Z",
    "updated_at": "2018-01-18T19:17:24Z",
    "author_association": "MEMBER",
    "body": "> I wonder what is the use case of `Chain.apply_transaction(transaction)` for full nodes or other scenarios?\r\n\r\nFor testing, full nodes, and mining are the use cases I can think of.  It's a mid/low level interface for building blocks incrementally.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358752343/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358878241",
    "html_url": "https://github.com/ethereum/py-evm/issues/268#issuecomment-358878241",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
    "id": 358878241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODg3ODI0MQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T06:25:39Z",
    "updated_at": "2018-01-19T06:44:01Z",
    "author_association": "MEMBER",
    "body": "> I **think** what I was referring to was that *previously* the `Chain` class's state root would get updated *automatically*, but with the recent changes, that is no longer the case.  So, the `Chain` object now needs to manually update the state root since it no longer happens automatically.\r\n\r\nThanks for making it clear! So previously, the `state_root` is passed with `Chain.header` to `Chain.get_vm()` mutably. When `Chain.apply_transaction(transaction)` calls `VM.apply_transaction(transaction)` and updates the `VM.header`, it also updates `Chain.header`. \r\n\r\nI think the line I added can solve this. Will add a test.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358878241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358880418",
    "html_url": "https://github.com/ethereum/py-evm/issues/268#issuecomment-358880418",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/268",
    "id": 358880418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODg4MDQxOA==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T06:41:24Z",
    "updated_at": "2018-01-19T06:42:44Z",
    "author_association": "MEMBER",
    "body": "> For testing, full nodes, and mining are the use cases I can think of.  It's a mid/low level interface for building blocks incrementally.\r\n\r\nThe function of building block method may be similar to `VM.create_block(transaction_packages, prev_hashes, coinbase, parent_header)`, but will be non-stateless version (no witness in `transaction_packages`) for non-stateless nodes. The input parameter may become the whole transactions pool of the client.\r\n\r\nDo you think this kind of functions should be implemented in `Chain` object? For stateless clients + current codebase, it looks easier to build a block via `vm_state.apply_transaction(transaction, block)` function because it requires switching `vm_state.chaindb` to `witness_db` during applying transaction. I think it's okay to implement in totally different ways for stateless & non-stateless nodes, just want to bring it up to discuss some possible strategies.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358880418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
