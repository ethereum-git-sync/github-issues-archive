{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/705/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/705/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/705/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/705",
  "id": 323431445,
  "node_id": "MDU6SXNzdWUzMjM0MzE0NDU=",
  "number": 705,
  "title": "After Byzantium, stop calculating state root after each transaction at all",
  "user": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 631592722,
      "node_id": "MDU6TGFiZWw2MzE1OTI3MjI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "0e8a16",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-05-16T00:45:35Z",
  "updated_at": "2019-06-18T21:02:13Z",
  "closed_at": "2019-06-18T21:02:13Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nPersisting all account changes to the trie and calculating the new state root is expensive. After Byzantium, we no longer need to calculate the state root after each transaction (because it has been removed from the receipt).\r\n\r\n### How can it be fixed\r\n\r\nStop returning state root after every `apply_transaction()`, instead generating it only if the receipt requires it.\r\n\r\n(Depends on PR #704 )\r\n",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/705/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/705/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451308958",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-451308958",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 451308958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTMwODk1OA==",
    "user": {
      "login": "rayrapetyan",
      "id": 4700523,
      "node_id": "MDQ6VXNlcjQ3MDA1MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4700523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rayrapetyan",
      "html_url": "https://github.com/rayrapetyan",
      "followers_url": "https://api.github.com/users/rayrapetyan/followers",
      "following_url": "https://api.github.com/users/rayrapetyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rayrapetyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rayrapetyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rayrapetyan/subscriptions",
      "organizations_url": "https://api.github.com/users/rayrapetyan/orgs",
      "repos_url": "https://api.github.com/users/rayrapetyan/repos",
      "events_url": "https://api.github.com/users/rayrapetyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rayrapetyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T23:18:21Z",
    "updated_at": "2019-01-03T23:18:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@carver, state root is being updated in function \"make_state_root\" inside:\r\n```\r\nself._journaldb.persist()\r\nself._journaltrie.persist()\r\n```\r\ncalls. \r\n\"stop calculating state root\" also mean stop calling persist() (which I think is wrong?)\r\nSo do you mean \"make_state_root\" shouldn't be called from apply_transaction at all? \r\nOtherwise I don't see a way to separate state storing (persisting) and state root recalculation, this is an internal logic in DB and trie.hexary (inside persist() call).\r\nPlease clarify. Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451308958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451499067",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-451499067",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 451499067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ5OTA2Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T16:46:45Z",
    "updated_at": "2019-01-04T16:46:45Z",
    "author_association": "MEMBER",
    "body": "@rayrapetyan this is going to be an incomplete answer, but I hope it points you in the right direction.\r\n\r\nWhen `py-evm` was originally written, we didn't have the additional layers between the lowest level `HexaryTrie` implementation and the base `db` object that the EVM was using, and thus, we were re-calculating the state root on **every** db write.\r\n\r\nThis was improved by wrapping the base `HexaryTrie` database in a few layers which you can find by digging into the `eth.db.account.AccountDB` object and seeing the various journals and whatnot that wrap it.  As you pointed out, the `make_state_root` function causes all of the pending changes to be written to the database and then we retrieve the resulting state root.\r\n\r\nOne way I *think* this issue could be addressed would be to add one additional layer between the base `HexaryTrie` database and the `AccountDB` such that in between transactions we can still make a `persist` call (since we need that for journaling and rolling back changes for failed transactions) but such that it doesn't actually result in writing to the underlying `HexaryTrie` database.  Then at the end of all of the block's transactions we would make an additional call to some new API which persisted all of the changes down into the `HexaryTrie` database and computed the state root.\r\n\r\nIt'll take some investigation to dig up exactly where the changes need to go as well as figuring out a clean way for this new API to be implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451499067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451719591",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-451719591",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 451719591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTcxOTU5MQ==",
    "user": {
      "login": "rayrapetyan",
      "id": 4700523,
      "node_id": "MDQ6VXNlcjQ3MDA1MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4700523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rayrapetyan",
      "html_url": "https://github.com/rayrapetyan",
      "followers_url": "https://api.github.com/users/rayrapetyan/followers",
      "following_url": "https://api.github.com/users/rayrapetyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rayrapetyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rayrapetyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rayrapetyan/subscriptions",
      "organizations_url": "https://api.github.com/users/rayrapetyan/orgs",
      "repos_url": "https://api.github.com/users/rayrapetyan/repos",
      "events_url": "https://api.github.com/users/rayrapetyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rayrapetyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-06T06:40:30Z",
    "updated_at": "2019-01-06T06:42:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Attached AccountDB schema.\r\n[acc_dbs.pdf](https://github.com/ethereum/py-evm/files/2730228/acc_dbs.pdf)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451719591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452576840",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-452576840",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 452576840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjU3Njg0MA==",
    "user": {
      "login": "rayrapetyan",
      "id": 4700523,
      "node_id": "MDQ6VXNlcjQ3MDA1MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4700523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rayrapetyan",
      "html_url": "https://github.com/rayrapetyan",
      "followers_url": "https://api.github.com/users/rayrapetyan/followers",
      "following_url": "https://api.github.com/users/rayrapetyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rayrapetyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rayrapetyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rayrapetyan/subscriptions",
      "organizations_url": "https://api.github.com/users/rayrapetyan/orgs",
      "repos_url": "https://api.github.com/users/rayrapetyan/repos",
      "events_url": "https://api.github.com/users/rayrapetyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rayrapetyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T05:28:32Z",
    "updated_at": "2019-01-09T05:28:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam, please correct me if I'm wrong, but I think existing 7 layers on top of an actual key-value storage should be enough :) (see attached schema) and we can just change logic of one of them (JournalDB?). Because adding another JournalingDB on top of existing JournalingDB (resulting an 8th layer)... isn't it too much?\r\nMaybe just add a flag (dump=false) to applyTransaction and same to existing persist() function?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452576840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452808002",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-452808002",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 452808002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgwODAwMg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T18:39:10Z",
    "updated_at": "2019-01-09T18:39:10Z",
    "author_association": "MEMBER",
    "body": "I was merely proposing one way this could be accomplished.  If you think you've got an idea that's cleaner :+1: .  It's typically hard for me to evaluate architecture ideas without some for of code to look at because there are a lot of subtleties that are hard to track/manage/account-for in this type of discussion.  Maybe take a minimal stab at implementing this and we can continue the discussion there?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452808002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452941661",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-452941661",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 452941661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjk0MTY2MQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T01:58:58Z",
    "updated_at": "2019-01-10T01:58:58Z",
    "author_association": "MEMBER",
    "body": "> \"stop calculating state root\" also mean stop calling persist() (which I think is wrong?)\r\n\r\nLike Piper said, it's hard to evaluate without looking at the code, but in general: yes, we can/should stop  persisting after every transaction. We only need the state at the block boundary to be stored in the database. That might mean changing from `persist` to `commit`, but I haven't been digging in that code for a while. Feel free to take a first WIP stab at it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/452941661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/454261326",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-454261326",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 454261326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI2MTMyNg==",
    "user": {
      "login": "rayrapetyan",
      "id": 4700523,
      "node_id": "MDQ6VXNlcjQ3MDA1MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4700523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rayrapetyan",
      "html_url": "https://github.com/rayrapetyan",
      "followers_url": "https://api.github.com/users/rayrapetyan/followers",
      "following_url": "https://api.github.com/users/rayrapetyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rayrapetyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rayrapetyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rayrapetyan/subscriptions",
      "organizations_url": "https://api.github.com/users/rayrapetyan/orgs",
      "repos_url": "https://api.github.com/users/rayrapetyan/repos",
      "events_url": "https://api.github.com/users/rayrapetyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rayrapetyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T04:12:32Z",
    "updated_at": "2019-01-15T04:12:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like if we just stop calling make_state_root (and all kind of persist\\commit) inside apply_transaction, we reach our goal. Using existing Journals we can rollback\\commit whenever we need.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/454261326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/503310504",
    "html_url": "https://github.com/ethereum/py-evm/issues/705#issuecomment-503310504",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/705",
    "id": 503310504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzMxMDUwNA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T21:02:13Z",
    "updated_at": "2019-06-18T21:02:13Z",
    "author_association": "MEMBER",
    "body": "Looks like this can be closed (#1716 solved this)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/503310504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
