{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/264/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/264/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/264/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/264",
  "id": 287871824,
  "node_id": "MDU6SXNzdWUyODc4NzE4MjQ=",
  "number": 264,
  "title": "Implement gas estimation",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-01-11T17:59:47Z",
  "updated_at": "2018-01-24T19:27:48Z",
  "closed_at": "2018-01-24T19:27:48Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nWe need to implement gas estimation for the JSON-RPC interface.\r\n\r\nAn ideal gas estimation API should take into account the following.\r\n\r\n- total gas used isn't always right due to gas refunds.\r\n- transactions can alter execution flow based on the txn gas.\r\n\r\n### How can it be fixed\r\n\r\nThis should be implemented using a swappable backend API.  Accurate gas estimations are likely to be computationally expensive where-as naive estimations based on gas used are likely to work for most use cases and should be computationally cheap.\r\n\r\nThe API can be something as simple as a function which takes `VM` instance and a `Transaction` instance and returns the gas estimation.  It *might* be appropriate to include this as an API on the `Chain` and `VM` as `Chain.estimate_transaction_gas()` and `VM.estimate_transaction_gas()`\r\n\r\n#### Strategies\r\n\r\nWe should first implement a `PeekGasUsedStrategy` which uses the peek gas usage\r\n\r\n1. run the computation with the gas limit set at the full gas limit for the next pending block.\r\n2. return the `computation.gas_meter.start_gas - computation.gas_metea.gas_remaining` for the outer computation.\r\n\r\nThen we should implement what I believe is the current strategy used by go-ethereum which starts with running the transaction using the gas limit for the next pending block and then performs a binary search, re-running the transaction at each level of the search until it finds the threshold for which the transaction succeeds/fails.\r\n\r\n> Note that the binary search can be performed at a higher granularity than 1 gas.  From @carver comment, a 1024 granularity should produce approximately a 2x speedup.\r\n\r\n",
  "closed_by": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/264/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/264/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357027132",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-357027132",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 357027132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAyNzEzMg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T19:00:28Z",
    "updated_at": "2018-01-11T19:00:28Z",
    "author_association": "MEMBER",
    "body": "> run the computation with a high gas limit (I think geth uses 50000000) .\r\n\r\nFWIW, the [json-rpc spec](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_estimategas) says:\r\n> If no gas limit is specified geth uses the **block gas limit from the pending block as an upper bound**. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit.\r\n\r\n---\r\n\r\nI think it's implied, but just to be specific about the binary search: I assume we don't need precision down to the single gas.\r\n> perform a binary search, re-running the transaction at each level of the search until it finds the threshold for which the transaction succeeds/fails.\r\n\r\nGetting within, say 1024 gas seems sufficient, and would save ~10 evaluations per estimate.\r\nStarting from a limit of ~8 Mgas per block, that is ~2x speedup from the ~23 evaluations needed to estimate to the 1 gas precision.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357027132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357035888",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-357035888",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 357035888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAzNTg4OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T19:31:14Z",
    "updated_at": "2018-01-11T19:31:14Z",
    "author_association": "MEMBER",
    "body": "Thanks, I updated the spec to reflect the gas limit and the granularity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/357035888/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358155493",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-358155493",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 358155493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1NTQ5Mw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:37:21Z",
    "updated_at": "2018-01-17T00:37:21Z",
    "author_association": "MEMBER",
    "body": "I'll take this on, at least the framework. While working on web3 & eth-tester, another thing became apparent: if the block that you want to test against has no gas left in the block, then the current approach becomes impossible. You run out of gas while executing.\r\n\r\nI think the best approach is to spawn a new block from your point of interest (an old block, the latest block, or even on top of the pending block). It will not have any transactions, and so will have plenty of gas space in the block for running estimations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358155493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358488290",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-358488290",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 358488290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQ4ODI5MA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T23:47:04Z",
    "updated_at": "2018-01-17T23:47:04Z",
    "author_association": "MEMBER",
    "body": "I've got the code ready, but it is only compatible with #260 so I'll wait for that merge before pushing and entering the Travis queue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358488290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358495437",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-358495437",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 358495437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQ5NTQzNw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T00:23:35Z",
    "updated_at": "2018-01-18T00:23:35Z",
    "author_association": "MEMBER",
    "body": "Did you link to the wrong thing?  #260 is an issue (not PR)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358495437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358507739",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-358507739",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 358507739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODUwNzczOQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T01:31:23Z",
    "updated_at": "2018-01-18T01:31:23Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam huh? It is a PR",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358507739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358518168",
    "html_url": "https://github.com/ethereum/py-evm/issues/264#issuecomment-358518168",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/264",
    "id": 358518168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODUxODE2OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T02:30:54Z",
    "updated_at": "2018-01-18T02:30:54Z",
    "author_association": "MEMBER",
    "body": "I have no idea what I was looking at.  Disregard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/358518168/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
