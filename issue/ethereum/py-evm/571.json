{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/571",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/571/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/571/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/571/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/571",
  "id": 315410400,
  "node_id": "MDU6SXNzdWUzMTU0MTA0MDA=",
  "number": 571,
  "title": "Super minimal pseudo-sharding test-test-network",
  "user": {
    "login": "jannikluhn",
    "id": 29854669,
    "node_id": "MDQ6VXNlcjI5ODU0NjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jannikluhn",
    "html_url": "https://github.com/jannikluhn",
    "followers_url": "https://api.github.com/users/jannikluhn/followers",
    "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
    "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
    "repos_url": "https://api.github.com/users/jannikluhn/repos",
    "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-04-18T09:54:40Z",
  "updated_at": "2018-06-15T07:44:09Z",
  "closed_at": "2018-06-15T07:44:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Once #570 is merged we should have all components in place to start a very simple test network.\r\nThis is a proposal for an extremely basic one with the goal to implement it as quickly as possible:\r\n\r\nThe network is solitary and responsible for a single shard only. The topology is uniform, i.e.\r\nnodes connect randomly to other nodes in the network. All nodes try to download all collations.\r\nAnyone can create collations and does so at random intervals unless they have seen a collation for\r\nthe current period already. Newly created collations are broadcasted. The protocol is based on devp2p and supports the following three message types:\r\n\r\n- ~`NewCollationHashes`: Announces hashes of collations that are newly available at the sending node\r\n  and are not known to be already available at the receiving node.~\r\n- ~`GetCollations`: Request a set of collations.~\r\n- `Collations`: ~Response to a `GetCollations` message, containing 0 or more of the requested\r\n  collations.~ Broadcast collations to a peer.\r\n\r\n## Rationale\r\n\r\ndevp2p is used as there's no libp2p implementation in Python yet.\r\n\r\nIt's a single network to keep things simple and require a smaller number of nodes. The goal for now\r\nis to test distribution of collations, the next iteration could be multiple networks to test notary\r\nswitching.\r\n\r\nAnyone can propose collations to avoid dependency on the SMC and the SMC handler. For the same reason, a period should be defined as some absolute time interval instead of a main chain block interval.",
  "closed_by": {
    "login": "jannikluhn",
    "id": 29854669,
    "node_id": "MDQ6VXNlcjI5ODU0NjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jannikluhn",
    "html_url": "https://github.com/jannikluhn",
    "followers_url": "https://api.github.com/users/jannikluhn/followers",
    "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
    "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
    "repos_url": "https://api.github.com/users/jannikluhn/repos",
    "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/571/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/571/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382339104",
    "html_url": "https://github.com/ethereum/py-evm/issues/571#issuecomment-382339104",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/571",
    "id": 382339104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjMzOTEwNA==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T10:19:37Z",
    "updated_at": "2018-04-18T10:20:08Z",
    "author_association": "MEMBER",
    "body": "If it's not dependent on SMC at all, the test-test-network could be even simpler if we start from only `NewCollation` messages are broadcasted by proposers. All receivers store the `Collation` and then help to broadcast. There would be a hash or timestamp for each message for avoiding re-broadcasting.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382339104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382342345",
    "html_url": "https://github.com/ethereum/py-evm/issues/571#issuecomment-382342345",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/571",
    "id": 382342345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjM0MjM0NQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T10:32:43Z",
    "updated_at": "2018-04-18T10:32:43Z",
    "author_association": "MEMBER",
    "body": "Yep, makes it even simpler. Downside is that new nodes can't sync anymore, but that should be ok for the first iteration.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382342345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
