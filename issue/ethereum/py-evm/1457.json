{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1457",
  "id": 379182028,
  "node_id": "MDU6SXNzdWUzNzkxODIwMjg=",
  "number": 1457,
  "title": "Add support for \"clique\" based consensus",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983613604,
      "node_id": "MDU6TGFiZWw5ODM2MTM2MDQ=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20eth",
      "name": "comp: eth",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983628532,
      "node_id": "MDU6TGFiZWw5ODM2Mjg1MzI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P4%20nice%20to%20have",
      "name": "prio: P4 nice to have",
      "color": "fef2c0",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-11-09T14:26:21Z",
  "updated_at": "2019-11-04T13:02:52Z",
  "closed_at": "2019-11-04T13:02:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nThe [clique](https://github.com/ethereum/EIPs/issues/225) POA has gained some consensus across more clients.  We should add support for it.\r\n\r\n### How can it be fixed\r\n\r\nImplement EIP225 based consensus in py-evm and trinity.\r\n",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1457/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/465366540",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-465366540",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 465366540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NjU0MA==",
    "user": {
      "login": "lithp",
      "id": 466333,
      "node_id": "MDQ6VXNlcjQ2NjMzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/466333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lithp",
      "html_url": "https://github.com/lithp",
      "followers_url": "https://api.github.com/users/lithp/followers",
      "following_url": "https://api.github.com/users/lithp/following{/other_user}",
      "gists_url": "https://api.github.com/users/lithp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lithp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lithp/subscriptions",
      "organizations_url": "https://api.github.com/users/lithp/orgs",
      "repos_url": "https://api.github.com/users/lithp/repos",
      "events_url": "https://api.github.com/users/lithp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lithp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:19:59Z",
    "updated_at": "2019-02-20T00:19:59Z",
    "author_association": "MEMBER",
    "body": "This would enable support for both goerli and rinkeby",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/465366540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/465370120",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-465370120",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 465370120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM3MDEyMA==",
    "user": {
      "login": "lithp",
      "id": 466333,
      "node_id": "MDQ6VXNlcjQ2NjMzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/466333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lithp",
      "html_url": "https://github.com/lithp",
      "followers_url": "https://api.github.com/users/lithp/followers",
      "following_url": "https://api.github.com/users/lithp/following{/other_user}",
      "gists_url": "https://api.github.com/users/lithp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lithp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lithp/subscriptions",
      "organizations_url": "https://api.github.com/users/lithp/orgs",
      "repos_url": "https://api.github.com/users/lithp/repos",
      "events_url": "https://api.github.com/users/lithp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lithp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:36:51Z",
    "updated_at": "2019-02-20T00:36:58Z",
    "author_association": "MEMBER",
    "body": "Here's the unmerged draft EIP: https://github.com/ethereum/EIPs/pull/1570",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/465370120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/466107579",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-466107579",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 466107579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjEwNzU3OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T18:16:57Z",
    "updated_at": "2019-02-21T18:16:57Z",
    "author_association": "MEMBER",
    "body": "This seems like a good grant candidate.  Anyone want to try to ballpark implementation complexity, assign a DAI amount and submit it to the grants request page.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/466107579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/471218851",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-471218851",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 471218851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTIxODg1MQ==",
    "user": {
      "login": "soc1c",
      "id": 47772477,
      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/47772477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soc1c",
      "html_url": "https://github.com/soc1c",
      "followers_url": "https://api.github.com/users/soc1c/followers",
      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
      "organizations_url": "https://api.github.com/users/soc1c/orgs",
      "repos_url": "https://api.github.com/users/soc1c/repos",
      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soc1c/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T20:23:19Z",
    "updated_at": "2019-03-09T20:23:19Z",
    "author_association": "NONE",
    "body": "Goerli initiative is willing to fund this with 2500 DAI if anyone wants to pick this up. (Ideally with https://github.com/ethereum/trinity/issues/72 as bonus.)\r\n\r\nIf anyone is interested, reach out here, here https://github.com/ethereum/trinity/issues/72 or here https://github.com/goerli/testnet/issues/16 before allocating a bounty.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/471218851/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/483650426",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-483650426",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 483650426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY1MDQyNg==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-16T13:04:17Z",
    "updated_at": "2019-04-17T14:29:37Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  Anyone want to try to ballpark implementation complexity (...)\r\n\r\nFTR, I've started looking into this. Nothing serious yet; branch [`add-goerli-testnet`](https://github.com/veox/py-evm/commits/add-goerli-testnet).\r\n\r\nRandom notes follow.\r\n\r\n-----\r\n\r\n[EIP-225](https://eips.ethereum.org/EIPS/eip-225) has been merged (currently still Draft).\r\n\r\n-----\r\n\r\nAppearances of `eth.consensus`:\r\n\r\n``` sh\r\n% g -A1 -R -Pzo 'from eth.consensus.*import \\((\\n|.)*?\\)' *\r\neth/vm/base.py:from eth.consensus.pow import (\r\n    check_pow,\r\n)--\r\neth/tools/mining.py:from eth.consensus import (\r\n    pow,\r\n)--\r\ntests/core/consensus/test_pow_mining.py:from eth.consensus.pow import (\r\n    CACHE_MAX_ITEMS,\r\n    EPOCH_LENGTH,\r\n    check_pow,\r\n    get_cache,\r\n)\r\n```\r\n\r\n-----\r\n\r\n`check_pow()` is currently done deep in the VM class hierarchy, [in `VM.validate_seal()`](https://github.com/ethereum/py-evm/blob/30eb1ae4a2d77db0f63e9a635345cc3ac718d9b8/eth/vm/base.py#L880). Not sure if this is a problem - still reading up on how Clique works, exactly.\r\n\r\n`VM.validate_header()` [does check `extra_data` length (<=32)](https://github.com/ethereum/py-evm/blob/30eb1ae4a2d77db0f63e9a635345cc3ac718d9b8/eth/vm/base.py#L852), so seems like `VM` does need to know if it's running Clique. :/\r\n\r\nIronic, since (from EIP-225):\r\n\r\n> Note, changing the length of a header field is a non invasive operation as all code (such as RLP encoding, hashing) is agnostic to that, so clients wouldn’t need custom logic.\r\n\r\n-----\r\n\r\nAnother complication seems to be that (from EIP-225, highlight mine):\r\n\r\n> To authorize a block for the network, the signer needs to sign the block’s hash containing everything except the signature itself. The means that **the hash contains every field of the header (nonce and mixDigest included), and also the extraData with the exception of the 65 byte signature suffix**. The fields are hashed in the order of their definition in the yellow paper.\r\n\r\n~~Guess that for this reason, [the naive genesis hash-matching test fails](https://github.com/veox/py-evm/blob/113457294e603389d8a5f409e8b87f87abf89b27/tests/core/chain-object/test_chain.py#L110-L112): the `BlockHeader.hash` property [RLP-encodes the entirety of the header](https://github.com/veox/py-evm/blob/113457294e603389d8a5f409e8b87f87abf89b27/eth/rlp/headers.py#L156-L159), where IIUC it should be skipping some in Clique.~~ PEBKAC, test passes.\r\n\r\nStill, might need to\r\n\r\n``` python\r\n#CLIQUE_BLOCK_SIGNATURE_LENGTH = 65\r\nBlockHeader.copy(extra_data=block_header_before_signing.extra_data[:-65])\r\n```\r\n\r\n(or something) when checking non-genesis block signature, and that _might_ mean `BlockHeader`, too, would need to know whether it and/or Chain/VM is/are running Clique. X_X",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/483650426/reactions",
      "total_count": 6,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 4,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/484099904",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-484099904",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 484099904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDA5OTkwNA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T13:54:35Z",
    "updated_at": "2019-04-18T08:50:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another day, more notes.\r\n\r\n-----\r\n\r\nThere are two rule sets for header fields:\r\n\r\n* one for epoch transition blocks (including genesis), also called \"checkpoints\" for containing full lists of authorised signers (authorities);\r\n*  another for all blocks in between epoch transitions.\r\n\r\nThere is overlap in rule sets; main differences (explicitly stated in EIP-225) are for `beneficiary`, `nonce`, `extra_data`.\r\n\r\n-----\r\n\r\nPossibly an issue is the _statefulness_ of the protocol. This may become an issue downstream, in `trinity`. Or here. Or not at all.\r\n\r\n> Every epoch transition (...) acts as a stateless checkpoint, from which capable clients should be able to sync without requiring any previous state. [On epoch transition] all non settled votes are discarded, and tallying starts from scratch.\r\n>\r\n> For all non-epoch transition blocks:\r\n> \r\n> * Signers may cast one vote per own block to propose a change to the authorization list.\r\n> * (...)\r\n> * Votes are tallied live as the chain progresses (...).\r\n> * Proposals reaching majority consensus `SIGNER_LIMIT` come into effect immediately.\r\n\r\nAs things stand, [`check_pow` is stateless](https://github.com/ethereum/py-evm/blob/30eb1ae4a2d77db0f63e9a635345cc3ac718d9b8/eth/consensus/pow.py#L61-L65), and therefore can be [meaningfully contained in `BlockHeader.validate_seal()`](https://github.com/ethereum/py-evm/blob/30eb1ae4a2d77db0f63e9a635345cc3ac718d9b8/eth/vm/base.py#L884-L886).\r\n\r\n`check_clique_poa()` would need to get passed a list - which may change on any (non-epoch?..) block. So, PoA validation seems a higher-level abstraction.\r\n\r\nThe need to maintain this authority list, plus the current vote tally, means there is no short-cut for nodes that do not wish to participate in block sealing. They, too, must maintain this rolling state, block-by-block, starting from latest epoch transition. \"Come into effect immediately\" is what causes the complication.\r\n\r\n(OT bit: Had it been \"get approved to start on next epoch transition\", validating a header would be possible by using the static list from the start of current epoch.)\r\n\r\n-----\r\n\r\nAnyway, seems that authority validation must involve the `VM` level.\r\n\r\n* Currently for PoW: `VM.validate_header(...)` -> `VM.validate_seal(header)` -> `eth.consensus.pow.check_pow(<header_elements>)`\r\n* Maybe for Clique PoA: `VM.validate_header(...)` -> `VM.validate_seal(header)` -> `eth.consensus.clique.check_poa(**header_elements, VM.authorities)`\r\n\r\nSimilar to `parent_hash`, authority data refers to previous blocks, so is \"out of scope\" at the `BlockHeader` level. Different from `parent_hash`, verification can't be done meaningfully if it's not available.\r\n\r\nAlso differently from `parent_hash`, verification can't be done meaningfully if there's been a gap in verifications leading up to the header-at-question. This is the part which may become problematic in `trinity`.\r\n\r\n-----\r\n\r\n`BaseChain` and `BaseVM` are subclassed from `Configurable`... Could that be leveraged?\r\n\r\n``` python\r\nGOERLI_VM_CONFIGURATION = (\r\n    # Note: Frontier through Constantinople are excluded since this chain starts at Petersburg.                        \r\n    (PETERSBURG_GOERLI_BLOCK, PetersburgVM, CliqueConsensus),\r\n)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/484099904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/537083749",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-537083749",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 537083749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzA4Mzc0OQ==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-01T15:12:45Z",
    "updated_at": "2019-10-01T16:46:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR, @cburgdorf has started work on this (both `py-evm` and `trinity`). See [gitter](https://gitter.im/ethereum/trinity?at=5d934a236d4b2512c14942ca) for progress / issue description / `git` branches.\r\n\r\n-----\r\n\r\nIssue [has been identified](https://gitter.im/ethereum/trinity?at=5d93727f9d4cf173604ed293): tx fee going to the wrong address. [EIP-225](https://eips.ethereum.org/EIPS/eip-225) doesn't seem to state anywhere (explicitly) that the fee should go to the signers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/537083749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/549343343",
    "html_url": "https://github.com/ethereum/py-evm/issues/1457#issuecomment-549343343",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1457",
    "id": 549343343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTM0MzM0Mw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T13:02:51Z",
    "updated_at": "2019-11-04T13:02:51Z",
    "author_association": "MEMBER",
    "body": "I just merged https://github.com/ethereum/py-evm/pull/1855 which adds most of Clique Consensus. It's not 100 % implemented at this point which means it won't be able to spin up a Py-EVM based node as an actual Görli validator but it's possible to sync the Görli network just fine.\r\n\r\nI still need to polish the Trinity side of this but it should soon land in a next release I'm sure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/549343343/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
