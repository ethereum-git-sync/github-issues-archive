{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/2044",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/2044",
  "id": 1057858401,
  "node_id": "I_kwDOBJ456s4_DaNh",
  "number": 2044,
  "title": "Make `block_number` configurable in genesis header again",
  "user": {
    "login": "fselmo",
    "id": 3532824,
    "node_id": "MDQ6VXNlcjM1MzI4MjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3532824?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fselmo",
    "html_url": "https://github.com/fselmo",
    "followers_url": "https://api.github.com/users/fselmo/followers",
    "following_url": "https://api.github.com/users/fselmo/following{/other_user}",
    "gists_url": "https://api.github.com/users/fselmo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fselmo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fselmo/subscriptions",
    "organizations_url": "https://api.github.com/users/fselmo/orgs",
    "repos_url": "https://api.github.com/users/fselmo/repos",
    "events_url": "https://api.github.com/users/fselmo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fselmo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 631592722,
      "node_id": "MDU6TGFiZWw2MzE1OTI3MjI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "0e8a16",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-11-18T22:01:21Z",
  "updated_at": "2022-05-24T08:23:05Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\n- After London changes, certain genesis header params became unconfigurable. Introduce back the ability to configure `block_number`. See eth-tester issue [#225](https://github.com/ethereum/eth-tester/issues/225).\r\n\r\n### How can it be fixed\r\n\r\n- `fill_header_params_from_parent()` needs the ability to pass in a `block_number` kwarg to be configurable again. This call is made from the [create_header_from_parent()](https://github.com/ethereum/py-evm/blob/cba70e18c7fd746a50091c426b72ced42712551a/eth/vm/forks/london/headers.py#L114) method in the header classes.\r\n\r\n- `block_number` should be a parameter in the [fill_header_params_from_parent()](https://github.com/ethereum/py-evm/blob/cba70e18c7fd746a50091c426b72ced42712551a/eth/_utils/headers.py#L55-L66) method that can be configured but should still keep the current default to `GENESIS_BLOCK_NUMBER` if the parent is None or to the parent `block_number` + 1 if the parent exists.\r\n\r\n\r\nAt a quick glance I believe this is the only change necessary. Testing should be added as well.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/2044/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1134848715",
    "html_url": "https://github.com/ethereum/py-evm/issues/2044#issuecomment-1134848715",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044",
    "id": 1134848715,
    "node_id": "IC_kwDOBJ456s5DpGrL",
    "user": {
      "login": "catoenm",
      "id": 6610700,
      "node_id": "MDQ6VXNlcjY2MTA3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6610700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/catoenm",
      "html_url": "https://github.com/catoenm",
      "followers_url": "https://api.github.com/users/catoenm/followers",
      "following_url": "https://api.github.com/users/catoenm/following{/other_user}",
      "gists_url": "https://api.github.com/users/catoenm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/catoenm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/catoenm/subscriptions",
      "organizations_url": "https://api.github.com/users/catoenm/orgs",
      "repos_url": "https://api.github.com/users/catoenm/repos",
      "events_url": "https://api.github.com/users/catoenm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/catoenm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-23T15:52:10Z",
    "updated_at": "2022-05-23T15:52:10Z",
    "author_association": "NONE",
    "body": "Only question here is whether or not we should be passing the `parent_hash` too when `block_number` is specified. Is this correct?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1134848715/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1134983586",
    "html_url": "https://github.com/ethereum/py-evm/issues/2044#issuecomment-1134983586",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044",
    "id": 1134983586,
    "node_id": "IC_kwDOBJ456s5Dpnmi",
    "user": {
      "login": "fselmo",
      "id": 3532824,
      "node_id": "MDQ6VXNlcjM1MzI4MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3532824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fselmo",
      "html_url": "https://github.com/fselmo",
      "followers_url": "https://api.github.com/users/fselmo/followers",
      "following_url": "https://api.github.com/users/fselmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/fselmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fselmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fselmo/subscriptions",
      "organizations_url": "https://api.github.com/users/fselmo/orgs",
      "repos_url": "https://api.github.com/users/fselmo/repos",
      "events_url": "https://api.github.com/users/fselmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fselmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-23T18:09:27Z",
    "updated_at": "2022-05-23T18:19:18Z",
    "author_association": "MEMBER",
    "body": "@catoenm I'd be curious to hear your use-case for this change. It would be strange to me to provide a `block_number` and  have a parent OR not assume the parent is the genesis header. And in that case we don't need to provide the parent hash.\r\n\r\nIn other words... if the header to be configured has a parent, then the `block_number` shouldn't be configurable; it should be `parent.block_number + 1`. If the header to be configured does not have a parent, then it should be assumed to be genesis.\r\n\r\nIn this sense something like this might make the most sense ? :\r\n\r\n```py\r\n    if parent is None:\r\n        parent_hash = GENESIS_PARENT_HASH\r\n        block_number = block_number if block_number else GENESIS_BLOCK_NUMBER\r\n        if state_root is None:\r\n            state_root = BLANK_ROOT_HASH\r\n    else:\r\n        parent_hash = parent.hash\r\n\r\n        if block_number:\r\n            raise PyEVMError(\"block_number cannot be configured if a parent header exists.\")\r\n        block_number = BlockNumber(parent.block_number + 1)\r\n\r\n        if state_root is None:\r\n            state_root = parent.state_root\r\n```\r\n\r\nLet me know if I'm missing anything. @Pet3ris I'd be curious on your input here and use-case as well.\r\n\r\n---\r\n\r\nedit: This validation also makes sense to me considering the original issue and the validation already in place, as outlined in this comment: https://github.com/ethereum/eth-tester/issues/225#issuecomment-1006530410",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1134983586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1135239031",
    "html_url": "https://github.com/ethereum/py-evm/issues/2044#issuecomment-1135239031",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044",
    "id": 1135239031,
    "node_id": "IC_kwDOBJ456s5Dql93",
    "user": {
      "login": "catoenm",
      "id": 6610700,
      "node_id": "MDQ6VXNlcjY2MTA3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6610700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/catoenm",
      "html_url": "https://github.com/catoenm",
      "followers_url": "https://api.github.com/users/catoenm/followers",
      "following_url": "https://api.github.com/users/catoenm/following{/other_user}",
      "gists_url": "https://api.github.com/users/catoenm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/catoenm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/catoenm/subscriptions",
      "organizations_url": "https://api.github.com/users/catoenm/orgs",
      "repos_url": "https://api.github.com/users/catoenm/repos",
      "events_url": "https://api.github.com/users/catoenm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/catoenm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-23T23:33:15Z",
    "updated_at": "2022-05-23T23:33:15Z",
    "author_association": "NONE",
    "body": "This makes a lot of sense. I've updated https://github.com/ethereum/py-evm/pull/2063 accordingly.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1135239031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1135562159",
    "html_url": "https://github.com/ethereum/py-evm/issues/2044#issuecomment-1135562159",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/2044",
    "id": 1135562159,
    "node_id": "IC_kwDOBJ456s5Dr02v",
    "user": {
      "login": "Pet3ris",
      "id": 224585,
      "node_id": "MDQ6VXNlcjIyNDU4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pet3ris",
      "html_url": "https://github.com/Pet3ris",
      "followers_url": "https://api.github.com/users/Pet3ris/followers",
      "following_url": "https://api.github.com/users/Pet3ris/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pet3ris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pet3ris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pet3ris/subscriptions",
      "organizations_url": "https://api.github.com/users/Pet3ris/orgs",
      "repos_url": "https://api.github.com/users/Pet3ris/repos",
      "events_url": "https://api.github.com/users/Pet3ris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pet3ris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T08:23:04Z",
    "updated_at": "2022-05-24T08:23:04Z",
    "author_association": "NONE",
    "body": "@fselmo Thanks a lot for looking into this! I'm using `py-evm` as the underlying VM for a debugger. In order to handle forking, I have to override the block number to match the block number on the forked chain. I was using genesis params to do so :).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/1135562159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
