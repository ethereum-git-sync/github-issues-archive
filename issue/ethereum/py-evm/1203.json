{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1203",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1203",
  "id": 352720718,
  "node_id": "MDU6SXNzdWUzNTI3MjA3MTg=",
  "number": 1203,
  "title": "Invalid canonical address",
  "user": {
    "login": "paymog",
    "id": 1986950,
    "node_id": "MDQ6VXNlcjE5ODY5NTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paymog",
    "html_url": "https://github.com/paymog",
    "followers_url": "https://api.github.com/users/paymog/followers",
    "following_url": "https://api.github.com/users/paymog/following{/other_user}",
    "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
    "organizations_url": "https://api.github.com/users/paymog/orgs",
    "repos_url": "https://api.github.com/users/paymog/repos",
    "events_url": "https://api.github.com/users/paymog/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paymog/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-08-21T21:39:32Z",
  "updated_at": "2018-08-22T14:27:31Z",
  "closed_at": "2018-08-21T22:58:00Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "* py-evm Version: 0.2.0a26\r\n* OS: osx\r\n* Python Version (python --version): Python 3.6.5\r\n* Environment (output of `pip freeze`):\r\n```\r\naiohttp==2.3.10\r\namqp==2.3.2\r\naniso8601==3.0.2\r\nappnope==0.1.0\r\nasn1crypto==0.24.0\r\nasync-lru==0.1.0\r\nasync-timeout==3.0.0\r\nattrdict==2.0.0\r\nbackcall==0.1.0\r\nbilliard==3.5.0.4\r\nbitcoin==1.1.42\r\ncelery==4.2.0\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\nclick==6.7\r\ncoincurve==7.1.0\r\ncoverage==4.5.1\r\ncryptography==2.3.1\r\ncytoolz==0.9.0.1\r\ndecorator==4.3.0\r\ndj-database-url==0.5.0\r\nDjango==2.0.6\r\ndjango-celery-beat==1.1.1\r\ndjango-celery-results==1.0.1\r\ndjango-cors-headers==2.3.0\r\neth-abi==1.1.1\r\neth-account==0.2.3\r\neth-bloom==1.0.0\r\neth-hash==0.1.4\r\neth-keyfile==0.5.1\r\neth-keys==0.2.0b3\r\neth-rlp==0.1.2\r\neth-tester==0.1.0b27\r\neth-utils==1.0.3\r\nFlask==1.0.2\r\nFlask-GraphQL==1.4.1\r\ngraphene==2.1\r\ngraphene-django==2.0.0\r\ngraphql-core==2.0\r\ngraphql-relay==0.4.5\r\nhexbytes==0.1.0\r\nidna==2.7\r\nidna-ssl==1.1.0\r\nipython==6.5.0\r\nipython-genutils==0.2.0\r\niso8601==0.1.12\r\nitsdangerous==0.24\r\njedi==0.12.1\r\nJinja2==2.10\r\nkombu==4.2.1\r\nlru-dict==1.1.6\r\nlxml==4.2.4\r\nMarkupSafe==1.0\r\nmultidict==4.3.1\r\nnetdisco==2.0.0\r\nnetifaces==0.10.7\r\nparsimonious==0.8.0\r\nparso==0.3.1\r\npbkdf2==1.3\r\npexpect==4.6.0\r\npickleshare==0.7.4\r\nplyvel==1.0.4\r\npromise==2.1\r\nprompt-toolkit==1.0.15\r\npsycopg2==2.7.5\r\npsycopg2-binary==2.7.5\r\nptyprocess==0.6.0\r\npy-ecc==1.4.3\r\npy-evm==0.2.0a26\r\npy-solc==3.1.0\r\npycparser==2.18\r\npycryptodome==3.6.1\r\npyethash==0.1.27\r\nPyGithub==1.40\r\nPygments==2.2.0\r\nPyJWT==1.6.4\r\npysha3==1.0.2\r\npython-dateutil==2.7.3\r\npytz==2018.5\r\nPyYAML==3.12\r\nredis==2.10.6\r\nrepoze.lru==0.7\r\nrequests==2.19.1\r\nrlp==1.0.2\r\nRx==1.6.1\r\nscrypt==0.8.6\r\nsecp256k1==0.13.2\r\nsemantic-version==2.6.0\r\nsimplegeneric==0.8.1\r\nsingledispatch==3.4.0.3\r\nsix==1.11.0\r\nSQLAlchemy==1.2.9\r\ntoolz==0.9.0\r\ntraitlets==4.3.2\r\ntrie==1.3.8\r\ntyping==3.6.4\r\nuPnPClient==0.0.8\r\nurllib3==1.23\r\nvine==1.1.4\r\nwcwidth==0.1.7\r\nweb3==4.3.0\r\nwebsockets==4.0.1\r\nWerkzeug==0.14.1\r\nyarl==1.2.6\r\nzeroconf==0.20.0\r\n```\r\n### What is wrong?\r\nThe following code worked flawlessly with `pyethereum` but now I'm getting the following error: `evm.exceptions.ValidationError: Storage Address 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf is not a valid canonical address`\r\n\r\n```\r\nW3 = Web3(EthereumTesterProvider(PyEVMBackend()))\r\n\r\nclass TestBaseDao(unittest.TestCase):\r\n\r\n    def test(self):\r\n        # constants.COMPILER is a class I wrote which performs contract compilation\r\n        base_dao_interface = constants.COMPILER.get_contract_interface(\"base_dao.sol\", \"BaseDao\")\r\n        contract = W3.eth.contract(abi=contract_interface['abi'], bytecode=contract_interface['bin']           \r\n        \r\n        # this is the line that fails\r\n        tx_hash = contract.constructor().transact(transaction={'from': W3.eth.accounts[0]}) \r\n        tx_receipt = W3.eth.waitForTransactionReceipt(tx_hash, timeout=timeout)\r\n        contract_address = tx_receipt['contractAddress']\r\n\r\n        abi = contract_interface['abi']\r\n        contract_instance = W3.eth.contract(address=contract_address, abi=abi,\r\n                                        ContractFactoryClass=ConciseContract)\r\n\r\n        # need to recreate the contract now that we've successfully deployed and have a contract address\r\n        contract = W3.eth.contract(address=contract_address, abi=contract_interface['abi'])\r\n```\r\n\r\nHere's the full output of the error:\r\n\r\n```\r\nTesting started at 5:25 PM ...\r\n/Users/paymahn/mycro/backend/venv/bin/python /Applications/PyCharm.app/Contents/helpers/pycharm/_jb_unittest_runner.py --target test_base_dao.TestBaseDao.test_can_propose\r\nLaunching unittests with arguments python -m unittest test_base_dao.TestBaseDao.test_can_propose in /Users/paymahn/mycro/backend/tests/contracts\r\n\r\n\r\nRan 1 test in 0.368s\r\n\r\nFAILED (errors=1)\r\n\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 601, in run\r\n    self.setUp()\r\n  File \"/Users/paymahn/mycro/backend/tests/contracts/test_base_dao.py\", line 27, in setUp\r\n    INITIAL_ADDRESSES, INITIAL_BALANCES)\r\n  File \"/Users/paymahn/mycro/backend/server/utils/deploy.py\", line 106, in _deploy_contract\r\n    tx_hash = contract.constructor(*args).transact(transaction={'from': w3.eth.accounts[0]})\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/utils/decorators.py\", line 14, in _wrapper\r\n    return self.method(obj, *args, **kwargs)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/contract.py\", line 842, in transact\r\n    return self.web3.eth.sendTransaction(transact_transaction)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/eth.py\", line 262, in sendTransaction\r\n    get_buffered_gas_estimate(self.web3, transaction),\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/utils/transactions.py\", line 84, in get_buffered_gas_estimate\r\n    gas_estimate = web3.eth.estimateGas(gas_estimate_transaction)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/eth.py\", line 303, in estimateGas\r\n    [transaction],\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/manager.py\", line 107, in request_blocking\r\n    response = self._make_request(method, params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/manager.py\", line 90, in _make_request\r\n    return request_func(method, params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/gas_price_strategy.py\", line 18, in middleware\r\n    return make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/attrdict.py\", line 18, in middleware\r\n    response = make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/normalize_errors.py\", line 9, in middleware\r\n    result = make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/providers/eth_tester/middleware.py\", line 320, in middleware\r\n    return make_request(method, [filled_transaction] + params[1:])\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/fixture.py\", line 12, in middleware\r\n    return make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/providers/eth_tester/main.py\", line 46, in make_request\r\n    response = delegator(self.ethereum_tester, params)\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/web3/providers/eth_tester/defaults.py\", line 36, in call_eth_tester\r\n    return getattr(eth_tester, fn_name)(*fn_args, **fn_kwargs)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_tester/utils/formatting.py\", line 85, in wrapper\r\n    return to_wrap(*args, **kwargs)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_tester/backends/pyevm/main.py\", line 488, in estimate_gas\r\n    transaction, 'gas', 21000))\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_tester/backends/pyevm/main.py\", line 449, in _get_normalized_and_unsigned_evm_transaction\r\n    normalized_transaction = self._normalize_transaction(transaction, block_number)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_utils/functional.py\", line 22, in inner\r\n    return callback(fn(*args, **kwargs))\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_tester/backends/pyevm/main.py\", line 438, in _normalize_transaction\r\n    yield 'nonce', self.get_nonce(transaction['from'], block_number)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/eth_tester/backends/pyevm/main.py\", line 418, in get_nonce\r\n    return vm.state.account_db.get_nonce(account)\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/evm/db/account.py\", line 286, in get_nonce\r\n    validate_canonical_address(address, title=\"Storage Address\")\r\n  File \"/Users/paymahn/mycro/backend/venv/lib/python3.6/site-packages/evm/validation.py\", line 109, in validate_canonical_address\r\n    \"{title} {0} is not a valid canonical address\".format(value, title=title)\r\nevm.exceptions.ValidationError: Storage Address 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf is not a valid canonical address\r\n\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nBefore moving to `py-evm` I had the following `requirements.txt` and didn't initialize `Web3` with `PyEVMBackend` but still used `EthereumTesterProvider`: \r\n```\r\namqp==2.3.2\r\naniso8601==3.0.2\r\nattrdict==2.0.0\r\nbilliard==3.5.0.4\r\nbitcoin==1.1.42\r\ncelery==4.2.0\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\nclick==6.7\r\ncoverage==4.5.1\r\ncytoolz==0.9.0.1\r\ndj-database-url==0.5.0\r\nDjango==2.0.6\r\ndjango-celery-beat==1.1.1\r\ndjango-celery-results==1.0.1\r\ndjango-cors-headers==2.3.0\r\neth-abi==1.1.1\r\neth-account==0.2.3\r\neth-hash==0.1.4\r\neth-keyfile==0.5.1\r\neth-keys==0.2.0b3\r\neth-rlp==0.1.2\r\neth-tester==0.1.0b27\r\neth-utils==1.0.3\r\nethereum==1.6.1\r\nFlask==1.0.2\r\nFlask-GraphQL==1.4.1\r\ngraphene==2.1\r\ngraphene-django==2.0.0\r\ngraphql-core==2.0\r\ngraphql-relay==0.4.5\r\nhexbytes==0.1.0\r\nidna==2.7\r\niso8601==0.1.12\r\nitsdangerous==0.24\r\nJinja2==2.10\r\nkombu==4.2.1\r\nlru-dict==1.1.6\r\nMarkupSafe==1.0\r\nparsimonious==0.8.0\r\npbkdf2==1.3\r\npromise==2.1\r\npsycopg2-binary==2.7.5\r\npy-solc==3.1.0\r\npycparser==2.18\r\npycryptodome==3.6.1\r\npyethash==0.1.27\r\nPyGithub==1.40\r\nPyJWT==1.6.4\r\npysha3==1.0.2\r\npytz==2018.5\r\nPyYAML==3.12\r\nredis==2.10.6\r\nrepoze.lru==0.7\r\nrequests==2.19.1\r\nrlp==0.6.0\r\nRx==1.6.1\r\nscrypt==0.8.6\r\nsecp256k1==0.13.2\r\nsemantic-version==2.6.0\r\nsingledispatch==3.4.0.3\r\nsix==1.11.0\r\nSQLAlchemy==1.2.9\r\ntoolz==0.9.0\r\ntyping==3.6.4\r\nurllib3==1.23\r\nvine==1.1.4\r\nweb3==4.3.0\r\nwebsockets==4.0.1\r\nWerkzeug==0.14.1\r\ndjango-cors-headers==2.3.0\r\n```\r\n\r\nUpgrading to using `py-evm` meant upgrading `rlp` and uninstalling `ethereum`. \r\n\r\nThe offending line of code is https://github.com/ethereum/py-evm/blob/931e91531389c1a5f26f8f0690d04a7bca65e24a/eth/validation.py#L108 which says that `str`-like addresses need to have a length of 20 - this seems wrong to me but I'm still quite new to the world of ethereum.\r\n",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1203/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/414843476",
    "html_url": "https://github.com/ethereum/py-evm/issues/1203#issuecomment-414843476",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203",
    "id": 414843476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDg0MzQ3Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T22:35:00Z",
    "updated_at": "2018-08-21T22:35:00Z",
    "author_association": "MEMBER",
    "body": "Haven't dug in yet, but something is leaking through and not getting properly normalized.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/414843476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/414848271",
    "html_url": "https://github.com/ethereum/py-evm/issues/1203#issuecomment-414848271",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203",
    "id": 414848271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDg0ODI3MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T22:57:59Z",
    "updated_at": "2018-08-21T22:57:59Z",
    "author_association": "MEMBER",
    "body": "The error is that you are using the `PyEVMBackend` directly without wrapping it the the `EthereumTester` class.\r\n\r\n```\r\n# wrong\r\nW3 = Web3(EthereumTesterProvider(PyEVMBackend()))\r\n\r\n# correct\r\nfrom eth_tester import EthereumTester\r\nW3 = Web3(EthereumTesterProvider(EthereumTester(PyEVMBackend()))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/414848271/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/415027649",
    "html_url": "https://github.com/ethereum/py-evm/issues/1203#issuecomment-415027649",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203",
    "id": 415027649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTAyNzY0OQ==",
    "user": {
      "login": "paymog",
      "id": 1986950,
      "node_id": "MDQ6VXNlcjE5ODY5NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paymog",
      "html_url": "https://github.com/paymog",
      "followers_url": "https://api.github.com/users/paymog/followers",
      "following_url": "https://api.github.com/users/paymog/following{/other_user}",
      "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
      "organizations_url": "https://api.github.com/users/paymog/orgs",
      "repos_url": "https://api.github.com/users/paymog/repos",
      "events_url": "https://api.github.com/users/paymog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paymog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T13:15:40Z",
    "updated_at": "2018-08-22T13:15:40Z",
    "author_association": "NONE",
    "body": "@pipermerriam that worked! Any chance you might know why I'm getting this error message now? `evm.exceptions.OutOfGas: Out of gas: Needed 2743200 - Remaining 1819529 - Reason: Write contract code for CREATE` considering I'm using the `EthereumTesterProvider`? It seems I *need* to specify `'gas': 3000000` in the transaction dictionary `transaction={'from': w3.eth.accounts[0], 'gas': 3000000}`. Is there a way around this during testing? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/415027649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/415051347",
    "html_url": "https://github.com/ethereum/py-evm/issues/1203#issuecomment-415051347",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1203",
    "id": 415051347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA1MTM0Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T14:27:31Z",
    "updated_at": "2018-08-22T14:27:31Z",
    "author_association": "MEMBER",
    "body": "Consider opening a second issue. Not enough detail here for me to diagnose.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/415051347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
