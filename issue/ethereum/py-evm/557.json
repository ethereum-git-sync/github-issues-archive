{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/557",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/557/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/557/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/557/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/557",
  "id": 314441420,
  "node_id": "MDU6SXNzdWUzMTQ0NDE0MjA=",
  "number": 557,
  "title": "Create a complete, user-friendly and up-to-date documentation",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 982530790,
      "node_id": "MDU6TGFiZWw5ODI1MzA3OTA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20docs",
      "name": "type: docs",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 1169245993,
      "node_id": "MDU6TGFiZWwxMTY5MjQ1OTkz",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Probably%20Close",
      "name": "Probably Close",
      "color": "5319e7",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-04-15T18:54:10Z",
  "updated_at": "2019-07-23T14:42:00Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a fresh attempt to organize efforts to release a complete, user friendly and up to date documentation. I know that we already have two existing (https://github.com/ethereum/py-evm/issues/19, https://github.com/ethereum/py-evm/issues/177) github issues regarding documentation and the existing content was (and further will be) incorporated in this issue.\r\n\r\nSince it is planned that I'll be dedicating a significant amount of my time to the documentation I wanted to set up a new issue that I can maintain and keep up to date as I go. In that sense, this ticket should supersede the existing two tickets and I propose that we close them.\r\n\r\n### References\r\n\r\nWe include a collection of links to other ethereum client documentations here as a reference. There may be further links to existing docs directly included in the table of contents.\r\n\r\n- [Geth Documentation](https://github.com/ethereum/go-ethereum/wiki)\r\n- [Parity Documentation](https://wiki.parity.io/Setup)\r\n- [Ethereum Harmony Documentation](https://github.com/ether-camp/ethereum-harmony/wiki/Setting-up-a-private-network)\r\n- [cpp-ethereum Documentation](http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/)\r\n\r\n#### Other inspirations\r\n\r\n- [Trio Docs](http://trio.readthedocs.io) (Nice rtd gems)\r\n- [Solidity docs](http://solidity.readthedocs.io/en/v0.4.23/index.html)\r\n- [gotdotengine](https://github.com/godotengine/godot-docs/blob/3.0/index.rst) (nice rtd gems)\r\n- Would be nice to have these copy-n-past'able [terminal demos](https://openzeppelin.org/) in the guide\r\n\r\n### Style / Prose / Grammar\r\n\r\nThe documentation should follow a common style in regard to grammar, wording and structure. It's planned to flesh out some basic rules but for now, a lot of great rules can be derived from this [style guide by Adobe](https://www.adobe.io/about/contributing/doc-style_master.html).\r\n\r\n### Audience\r\n\r\nWe assume the audience of readers will range from regular blockchain enthusiasts to dApp developers as well as protocol engineers and scientists.\r\n\r\n### Outline\r\n\r\nThe following outline assumes (which is debatable as everything) that we will clearly communicate the different roles of Trinity and Py-EVM but will still maintain a common end point to host the documentation.\r\n\r\n#### Index\r\n\r\nHigh level description of the library. Links to github repository, gitter chat channel, table of contents for the remainder of the documentation.\r\n\r\n- #### Introduction\r\n  - Overview\r\n  - Project goals\r\n  - Role of Trinity and Py-EVM\r\n- #### Installation ([Geth Example](https://ethereum.github.io/go-ethereum/install/))\r\n  - Using pip\r\n  - From source\r\n  - â€¦\r\n- #### QuickStart\r\n  - Syncing with the Mainnet ([Parity Example](https://wiki.parity.io/Getting-Synced))\r\n- #### Fundamentals\r\n  - ##### Architectural Overview\r\n  - #### Guides\r\n    - Trinity\r\n      - Basic usage\r\n      - ...\r\n    - EVM\r\n      - Basics\r\n      - Creating or extending an EVM\r\n      - Creating new Opcodes\r\n      - Composing Opcodes into VMs\r\n      - Composing VMs into the EVM\r\n      - Understanding the transaction processing\r\n      - ...\r\n  - #### API\r\n    - Trinity\r\n        - ...\r\n    - EVM\r\n      - EVM\r\n      - VM\r\n      - Computation\r\n      - Gas Meter\r\n      - CodeStream\r\n      - Memory\r\n      - Message\r\n      - Stack\r\n      - Opcode\r\n      - ...\r\n- #### Contributing\r\n  - How to setup the code base and run the tests\r\n  - Style Guide\r\n  - Creating Pull Requests\r\n- #### Code of Conduct ([Trio Example](https://docs.readthedocs.io/en/latest/yaml-config.html), [MachineLabs example](https://github.com/machinelabs/machinelabs/blob/master/CODE_OF_CONDUCT.md))\r\n\r\n### API Docs\r\n\r\nAPI docs are read directly from source using sphinx autodoc feature. To achieve a high quality and common style of API docs all API docs should follow this structure.\r\n\r\n```python\r\ndef add_transaction(self,\r\n                    transaction: BaseTransaction,\r\n                    computation: BaseComputation,\r\n                    block: BaseBlock) -> Tuple[Block, Dict[bytes, bytes]]:\r\n        \"\"\"\r\n        Add a transaction to the given block and\r\n        return `trie_data` to store the transaction data in chaindb in VM layer.\r\n\r\n        Update the bloom_filter, transaction trie and receipt trie roots, bloom_filter,\r\n        bloom, and used_gas of the block.\r\n\r\n        :param transaction: the executed transaction\r\n        :param computation: the Computation object with executed result\r\n        :param block: the Block which the transaction is added in\r\n        \r\n        :return: the block and the trie_data\r\n        \"\"\"\r\n```\r\n\r\nNotice how the `:param:` and `:return:` directives are being used to describe parameters and return value. Usage of `:type:` and `:rtype:` directives on the other hand is discouraged as these types are directly read from the source code type definitions and already handled properly by sphinx making any further use of `:type` and `:rtype` obsolete and unnecessarily verbose.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/557/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/557/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384255221",
    "html_url": "https://github.com/ethereum/py-evm/issues/557#issuecomment-384255221",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/557",
    "id": 384255221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1NTIyMQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T11:32:47Z",
    "updated_at": "2018-05-24T08:49:36Z",
    "author_association": "MEMBER",
    "body": "Some quick dumps to not forget\r\n\r\nhttps://github.com/ethereum/py-evm/pull/581#discussion_r183897290\r\n\r\nhttps://github.com/ethereum/py-evm/pull/633#issuecomment-386278185\r\n\r\nTutorial ideas:\r\n\r\n- how I would run a series of transactions that store and retrieve data from state ([Gitter chat](https://gitter.im/ethereum/py-evm?at=5b058c23752aff59310baefe))\r\n- how I'd deploy a contract and get back the address of the deployed code ([Gitter chat](https://gitter.im/ethereum/py-evm?at=5b058c23752aff59310baefe))",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384255221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384377783",
    "html_url": "https://github.com/ethereum/py-evm/issues/557#issuecomment-384377783",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/557",
    "id": 384377783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM3Nzc4Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T17:56:58Z",
    "updated_at": "2018-04-25T17:56:58Z",
    "author_association": "MEMBER",
    "body": "Suggestion for code of conduct.\r\n\r\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct.html",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384377783/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/391654872",
    "html_url": "https://github.com/ethereum/py-evm/issues/557#issuecomment-391654872",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/557",
    "id": 391654872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTY1NDg3Mg==",
    "user": {
      "login": "glaksmono",
      "id": 286254,
      "node_id": "MDQ6VXNlcjI4NjI1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/286254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glaksmono",
      "html_url": "https://github.com/glaksmono",
      "followers_url": "https://api.github.com/users/glaksmono/followers",
      "following_url": "https://api.github.com/users/glaksmono/following{/other_user}",
      "gists_url": "https://api.github.com/users/glaksmono/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glaksmono/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glaksmono/subscriptions",
      "organizations_url": "https://api.github.com/users/glaksmono/orgs",
      "repos_url": "https://api.github.com/users/glaksmono/repos",
      "events_url": "https://api.github.com/users/glaksmono/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glaksmono/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T09:45:04Z",
    "updated_at": "2018-05-24T09:45:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Syncing with the Mainnet\r\n\r\nSyncing with Testnet (Ropsten or Infura), with an example of code that communicate with the Testnet would be nice",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/391654872/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/514240556",
    "html_url": "https://github.com/ethereum/py-evm/issues/557#issuecomment-514240556",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/557",
    "id": 514240556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDI0MDU1Ng==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-23T14:42:00Z",
    "updated_at": "2019-07-23T14:42:00Z",
    "author_association": "MEMBER",
    "body": "How to see which opcodes are applied https://github.com/ethereum/py-evm/issues/1801#issuecomment-514226811",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/514240556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
