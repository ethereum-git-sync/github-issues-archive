{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1857",
  "id": 502660883,
  "node_id": "MDU6SXNzdWU1MDI2NjA4ODM=",
  "number": 1857,
  "title": "Tracking: some upstream test fixtures fail when updating to v7.0.0-beta.1",
  "user": {
    "login": "veox",
    "id": 3036030,
    "node_id": "MDQ6VXNlcjMwMzYwMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/veox",
    "html_url": "https://github.com/veox",
    "followers_url": "https://api.github.com/users/veox/followers",
    "following_url": "https://api.github.com/users/veox/following{/other_user}",
    "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
    "organizations_url": "https://api.github.com/users/veox/orgs",
    "repos_url": "https://api.github.com/users/veox/repos",
    "events_url": "https://api.github.com/users/veox/events{/privacy}",
    "received_events_url": "https://api.github.com/users/veox/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-10-04T14:12:47Z",
  "updated_at": "2020-04-27T07:39:37Z",
  "closed_at": "2020-04-26T15:45:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This issue is to track findings on why [upstream fixtures](https://github.com/ethereum/tests/releases/tag/v7.0.0-beta.1) fail in PR #1852, so I don't trash the PR discussion.\r\n\r\nWorking in [`update-fixtures-to-v7.0.0-beta.1` branch of mine](https://github.com/veox/py-evm/commits/update-fixtures-to-v7.0.0-beta.1), rolling off the one in PR #1852.\r\n\r\n-----\r\n\r\nThere are 6 failures for `--fork Istanbul`, all in `fixtures/BlockchainTests/GeneralStateTests/stRevertTest`:\r\n\r\n```\r\nRevertPrecompiledTouch.json:RevertPrecompiledTouch_d0g0v0_Istanbul\r\nRevertPrecompiledTouch.json:RevertPrecompiledTouch_d3g0v0_Istanbul\r\nRevertPrecompiledTouch_storage.json:RevertPrecompiledTouch_storage_d0g0v0_Istanbul\r\nRevertPrecompiledTouch_storage.json:RevertPrecompiledTouch_storage_d3g0v0_Istanbul\r\nRevertPrecompiledTouchExactOOG.json:RevertPrecompiledTouchExactOOG_d7g2v0_Istanbul\r\nRevertPrecompiledTouchExactOOG.json:RevertPrecompiledTouchExactOOG_d31g2v0_Istanbul\r\n```\r\n\r\nThese were added in https://github.com/ethereum/tests/pull/580, then updated/refilled in https://github.com/ethereum/tests/pull/609 and https://github.com/ethereum/tests/pull/610.\r\n\r\nFor the first four, [data indices 0 and 3 produce the same result upstream](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchFiller.json#L14), so it's no surprise that 0 and 3 fail while 1 and 2 do not.\r\n\r\nThe last two [are also grouped upstream](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchExactOOGFiller.json#L130).",
  "closed_by": {
    "login": "veox",
    "id": 3036030,
    "node_id": "MDQ6VXNlcjMwMzYwMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/veox",
    "html_url": "https://github.com/veox",
    "followers_url": "https://api.github.com/users/veox/followers",
    "following_url": "https://api.github.com/users/veox/following{/other_user}",
    "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
    "organizations_url": "https://api.github.com/users/veox/orgs",
    "repos_url": "https://api.github.com/users/veox/repos",
    "events_url": "https://api.github.com/users/veox/events{/privacy}",
    "received_events_url": "https://api.github.com/users/veox/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1857/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538424304",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-538424304",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 538424304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODQyNDMwNA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T14:37:19Z",
    "updated_at": "2019-10-04T15:05:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "`RevertPrecompiledTouch.json` has [program of the following form](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchFiller.json#L78):\r\n\r\n```\r\n{\r\n (CALL 50000 1 0 0 0 0 0)\r\n (CALL 50000 2 0 0 0 0 0)\r\n (CALL 50000 3 0 0 0 0 0)\r\n (CALL 50000 4 0 0 0 0 0)\r\n (CALL 50000 5 0 0 0 0 0)\r\n (CALL 50000 6 0 0 0 0 0)\r\n (CALL 50000 7 0 0 0 0 0)\r\n (CALL 50000 8 0 0 0 0 0)\r\n [[1]] (GAS)\r\n [[2]] (GAS)\r\n [[3]] (GAS)}\r\n```\r\n\r\nThat is, sequentially call precompiles `1` through `8`, then store remaining gas 3 times in this contract's storage.\r\n\r\nAll the precompiles have `nonce` set to `0`.\r\n\r\nThe [comment](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchFiller.json#L76) shows that it's expected to OOG-fail.\r\n\r\nVariants 0 _through_ 3 have `CALL`, `DELEGATECALL`, `CALLCODE`, `STATICCALL` as methods of calling the precompiles. So, it's `CALL` and `STATICCALL` that `py-evm` and `geth` have a disagreement on.\r\n\r\nVariants 0 _and_ 3 [clear the nonce on precompile 3 (`RIPEMD160`)](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchFiller.json#L25-L26).\r\n\r\n-----\r\n\r\nCandidate 1: the difference between `py-evm` and `geth` (which [filled the tests](https://github.com/ethereum/tests/pull/609)) is due to different gas use.\r\n\r\n[`py-evm` trace](https://gist.github.com/veox/4b134ddbb1df14f62c47052a56379c79) shows tx fee of 98780; haven't found number for `geth` yet.\r\n\r\n-----\r\n\r\nCandidate 2: very telling is the fact that variants 0 and 3 of the test say that [precompile 3 (`RIPEMD160`) should get its nonce cleared](https://github.com/ethereum/tests/blob/cfbcd15f91d4d6e1785d9cae5c5c37f47e8bad46/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchFiller.json#L25-L26), and therefore should no longer exist after execution. `RIPEMD160` is a special cookie...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538424304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538433394",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-538433394",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 538433394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODQzMzM5NA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T14:58:43Z",
    "updated_at": "2019-10-04T15:24:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Relating to candidate 2: `ethereum/EIPs` issue https://github.com/ethereum/EIPs/issues/716 (\"Clarification about when touchedness is reverted during state clearance\").\r\n\r\n-----\r\n\r\nThis all [sounds very familiar](https://github.com/ethereum/py-evm/pull/1719#issuecomment-459729843), only this time it's just the `RIPEMD160` precompile.\r\n\r\n-----\r\n\r\nFrom https://github.com/ethereum/aleth/pull/5664 (good summary with lots of links):\r\n\r\n> The buggy behavior that is now a rule is basically: when _precompiled contract with address 0x03 (RIPEMD160) is touched, then exception happens and state changes are reverted_, **this address should be still considered touched** in the end, so that \"remove empty touched accounts\" rule (EIP-158) deletes it from the state at the end of transaction.\r\n\r\nTo clarify: when _all the conditions in italics_ are true, then **bold should still happen**.\r\n\r\n-----\r\n\r\nWe _do_ try to catch this, here and a bit above, too:\r\n\r\nhttps://github.com/ethereum/py-evm/blob/727f2caea1d39e70b11957a91322ede03dcc6f9c/eth/vm/forks/spurious_dragon/_utils.py#L44-L52\r\n\r\n... but it seems that `geth` is not as stringent as `py-evm` on _when_ this should happen. We only do it if `computation.is_origin_computation`. :disappointed: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538433394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538460472",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-538460472",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 538460472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODQ2MDQ3Mg==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T16:04:56Z",
    "updated_at": "2019-10-04T16:07:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, in short:\r\n\r\nIn `collect_touched_accounts()`, we now have to also check when a `computation` touches `RIPEMD160`, succeeds itself, but the parent (or someone along the call ladder) fails, and the failee is not necessarily the origin computation.\r\n\r\nThis is because we recurse into nested computations if the current one is successful:\r\n\r\nhttps://github.com/ethereum/py-evm/blob/727f2caea1d39e70b11957a91322ede03dcc6f9c/eth/vm/forks/spurious_dragon/_utils.py#L54-L57\r\n\r\n... but now we have to do it regardless, just to see if someone crumbled `RIPEMD160`.\r\n\r\nI can't figure out how to do this without a double-pass through the nested computations, or ugly hacks - not today, at least, and got to run anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538460472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538641928",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-538641928",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 538641928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODY0MTkyOA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-05T11:34:02Z",
    "updated_at": "2019-10-05T11:34:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "[This commit](https://github.com/veox/py-evm/commit/6c6db730311a5f956a98a1535f7b896c350b0f11) fixes the first four failing cases.\r\n\r\n`RevertPrecompiledTouchExactOOG` still fail - investigating.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538641928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538654631",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-538654631",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 538654631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODY1NDYzMQ==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-05T14:29:27Z",
    "updated_at": "2019-10-05T15:40:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "For test cases\r\n\r\n```\r\nRevertPrecompiledTouchExactOOG.json:RevertPrecompiledTouchExactOOG_d7g2v0_Istanbul\r\nRevertPrecompiledTouchExactOOG.json:RevertPrecompiledTouchExactOOG_d31g2v0_Istanbul\r\n```\r\n\r\n[insufficient (69K) gas is provided](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchExactOOGFiller.json#L280), with the expectation that they should OOG-fail.\r\n\r\nThe precompile called, `0x08` (`ECPAIRING`), [should remain as-is](https://github.com/ethereum/tests/blob/v7.0.0-beta.1/src/GeneralStateTestsFiller/stRevertTest/RevertPrecompiledTouchExactOOGFiller.json#L129-L138), whereas if 120K gas is provided, its storage should be cleared (highlighted in same link).\r\n\r\nThis seems consistent to me.\r\n\r\nThe call that OOG-fails is nested, as shown in [the trace from `py-evm`](https://gist.github.com/veox/b8605347f34e0038d029809f1697f6de). On exit from that, remaining gas is enough to finish the parent and grand-parent computations.\r\n\r\n`py-evm` then proceeds to clear `0x08`; this is incorrect.\r\n\r\n-----\r\n\r\nSolution: need to relax rules further, and not consider `computation.is_origin_computation` in one of the places. Will push commit shortly.\r\n\r\n-----\r\n\r\nImplemented in last three commits of [work branch](https://github.com/veox/py-evm/commits/update-fixtures-to-v7.0.0-beta.1).\r\n\r\n-----\r\n\r\n[Diff](https://github.com/ethereum/py-evm/compare/master...veox:update-fixtures-to-v7.0.0-beta.1?expand=1#diff-201ab7eb6e84cbab9680c36cdce4a3d1) of changes to file, to cover both types of failures described.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/538654631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/539036563",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-539036563",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 539036563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTAzNjU2Mw==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-07T14:23:13Z",
    "updated_at": "2019-10-07T17:06:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Slowest tests: https://gist.github.com/veox/02336c518f049cb749608657622d127f\r\n\r\nAlso includes ~~shoddy~~ napkin-quality scripts to generate the `SLOWEST_TESTS` blob.\r\n\r\n-----\r\n\r\nSeems that the initial sampling was too limited, printing only 200 of the slowest durations, which skewed the results heavily on Istanbul's side. Re-running...\r\n\r\n-----\r\n\r\nRe-ran with 10000 as cut-off, same result. The [list at test](https://gist.githubusercontent.com/veox/02336c518f049cb749608657622d127f/raw/c517ced89b7cb25dfe2470b9502d38e51a73c177/slowest-tests-output.py) is _almost_ entirely populated with Istanbul entries.\r\n\r\nStill, `tox` jobs for Petersburg and below run in 1:38 or less; `tox` job for Istanbul runs in 4:37. Guess that's just how it's going to be.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/539036563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619572733",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-619572733",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 619572733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTU3MjczMw==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T15:45:58Z",
    "updated_at": "2020-04-26T17:57:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing since PR #1858 was superseded by PR #1871 and addressed this; the issue was left hanging.\r\n\r\n-----\r\n\r\nJIC, I was reminded of this because [a discussion arose recently on gitter](https://gitter.im/ethereum/tests?at=5e9def278e987f3a5e31d422) of ~~`geth` (!)~~ `open-ethereum` failing to produce an expected result for @adria0, for case `RevertPrecompiledTouchExactOOG_d30g2v0_Istanbul` in particular.\r\n\r\nThat said, I don't remember if `py-evm` had issues with the `d30g2v0` variant... Re-reading the issue, seems no: it was `d31g2v0` for `py-evm`.\r\n\r\nThe sherlocking is now split across several issues/PRs pertaining to different network upgrades, and tests filled by two different implementations.\r\n\r\nSo, just dropping this here for future archeologists.\r\n\r\nPinging @holiman, too, as participant in gitter discussion. (There's likely no actionables here; just a notification.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619572733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619580582",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-619580582",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 619580582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTU4MDU4Mg==",
    "user": {
      "login": "adria0",
      "id": 5526331,
      "node_id": "MDQ6VXNlcjU1MjYzMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5526331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adria0",
      "html_url": "https://github.com/adria0",
      "followers_url": "https://api.github.com/users/adria0/followers",
      "following_url": "https://api.github.com/users/adria0/following{/other_user}",
      "gists_url": "https://api.github.com/users/adria0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adria0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adria0/subscriptions",
      "organizations_url": "https://api.github.com/users/adria0/orgs",
      "repos_url": "https://api.github.com/users/adria0/repos",
      "events_url": "https://api.github.com/users/adria0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adria0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T16:30:33Z",
    "updated_at": "2020-04-26T16:30:33Z",
    "author_association": "NONE",
    "body": "@veox, finally I found the way to fix it https://github.com/openethereum/openethereum/pull/11597/commits/74eabccda5b286bfc68138dc65b5b4dcd5c2ce3e.\r\n\r\nIn short, this test has a preexistent `0000...0008` in the account trie with zero gas. The test makes a  call/staticcall to this address, so since this *empty* account is touched, the account should be removed from the trie. But, the call does not have enough gas to call the precompile, so it reverts, and as [EIP161](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md) says *that empty account deletions are reverted when the state is reverted*.\r\n\r\nOE was not \"reverting the deletions\", so there was a problem in the state trie root.\r\n\r\nTake care, with the current gas parameters defined in the `RevertPrecompiledTouchExactOOG.json`, some of the tests do not OOG (needs to be fixed) and this cause some confusion when debugging the test cases. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619580582/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619604028",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-619604028",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 619604028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYwNDAyOA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T18:45:47Z",
    "updated_at": "2020-04-26T18:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But, the call does not have enough gas to call the precompile, so it reverts, and as EIP161 says _that empty account deletions are reverted when the state is reverted_.\r\n\r\n... Except if it's pre-compile number `0x3`, in which case _the deletion should be left as-is_, including in [cases when the parent computation eventually fails](https://github.com/ethereum/py-evm/issues/1857#issuecomment-538460472) anyway, whether it's the origin computation or not; unless [the test-filling implementation changes](https://github.com/ethereum/py-evm/issues/1857#issuecomment-538433394), as this github issue has shown, then do as Simon says, and don't be the last to find a chair, because it's not there!..\r\n\r\nToodly-doo!.. :saxophone:\r\n\r\nIn all seriousness: always mention the exception.\r\n\r\n-----\r\n\r\nThis is all OT to the issue(s) you've found; still!\r\n\r\n`<rant>`\r\n\r\nA \"proper\" way to address the above would be<sup>†</sup> to have an irregular state transition (IST) to \"right\" this previous \"accidental\" IST that we let slip through, oh because it was a secondary failure in an already debilitating net-wide consensus failure.\r\n\r\nThe common reasoning against such \"right the wrong\" ISTs is \"the tech debt only increases with that\"; to which I can only reply that _the cognitive debt keeps piling on_, with each new node implementation, with each new developer who is about to find out the hard way. :exploding_head: \r\n\r\nDoesn't matter if you start from a snapshot, doesn't matter if you're running a testnet. I swear, we'll take this `RIPEMD160` ghost to Eth 2.0 with us, as an annoying weird uncle to Casper. :smile: \r\n\r\nPerhaps I should write an EIP for that, if only to be filed as a formal complaint. Maybe next March 32nd, instead of dealing with integer overflows. Remind me a few days in advance if you could, please!\r\n\r\n<sup>†</sup> Or \"would have been\", I gather, considering this is years-old.\r\n\r\n`</rant>`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619604028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619793778",
    "html_url": "https://github.com/ethereum/py-evm/issues/1857#issuecomment-619793778",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1857",
    "id": 619793778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTc5Mzc3OA==",
    "user": {
      "login": "adria0",
      "id": 5526331,
      "node_id": "MDQ6VXNlcjU1MjYzMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5526331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adria0",
      "html_url": "https://github.com/adria0",
      "followers_url": "https://api.github.com/users/adria0/followers",
      "following_url": "https://api.github.com/users/adria0/following{/other_user}",
      "gists_url": "https://api.github.com/users/adria0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adria0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adria0/subscriptions",
      "organizations_url": "https://api.github.com/users/adria0/orgs",
      "repos_url": "https://api.github.com/users/adria0/repos",
      "events_url": "https://api.github.com/users/adria0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adria0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T07:39:36Z",
    "updated_at": "2020-04-27T07:39:36Z",
    "author_association": "NONE",
    "body": "> ... Except if it's pre-compile number 0x3, in which case the deletion should be left as-is, including in cases when the parent computation eventually fails anyway, whether it's the origin computation or not; unless the test-filling implementation changes, as this github issue has shown, then do as Simon says, and don't be the last to find a chair, because it's not there!..\r\n\r\nHaha, it has been an interesting issue to fix, to be the first one :sweat_smile:\r\n\r\nI agree with you that this TriePrunning/0x3 specific issue maybe is one of the cases that deserve an IST, because it happens that the embedded logic to fix this irregular stuff is also deployed to other blockchains, not only mainnet. I put on the agenda to ping you on next March 32 (with integer overflows :stuck_out_tongue_winking_eye:), hehe. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/619793778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
