{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/566",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/566/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/566/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/566/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/566",
  "id": 315159507,
  "node_id": "MDU6SXNzdWUzMTUxNTk1MDc=",
  "number": 566,
  "title": "Create a JIT",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-04-17T17:31:39Z",
  "updated_at": "2019-01-04T23:49:43Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "link: #542 \r\n\r\n### What is wrong?\r\n\r\nThere are some actual optimizations that we *could* do at the EVM level with respect to doing JIT compilation.  \r\n\r\n\r\n### How can it be fixed\r\n\r\nThere are operations that we can *optimize* at runtime like the following (inspired by [release notes here](https://github.com/ethereum/solidity/releases/tag/v0.4.22).\r\n\r\n- Replace sequence of `[SWAP1 LT]` with `[GT]`\r\n    -same with `[SWAP1 GT] -> [LT]`\r\n- Replace sequence of `[SWAP1 ADD]` with `ADD` because it's communicative.\r\n\r\nThese replacements need to be specially written to consume the equivalent gas of what they are replacing.  Special care will also need to be taken to ensure that `trace` output isn't changed so that we can still do vm traces without exposing the underlying optimizations.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/566/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/566/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/449568319",
    "html_url": "https://github.com/ethereum/py-evm/issues/566#issuecomment-449568319",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/566",
    "id": 449568319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTU2ODMxOQ==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T12:58:59Z",
    "updated_at": "2018-12-22T12:58:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam I was thinking about this issue and thought that it was enough to replace the bytecode with the optimized replacements, before execution.\r\n* Here, in the following snippet of code, we could just place the optimizations before this `for loop`\r\nhttps://github.com/ethereum/py-evm/blob/d82b10ae361cde6abbac62f171fcea7809c4e3cf/eth/vm/computation.py#L571-L585\r\nso as to change the `computation code`. \r\n\r\n* To preserve the `gas`, we could manually adjust the `gas consumed` when we are replacing the `SWAP LT` by `GT`, etc.\r\n\r\n* We could maintain a `list of indexes of the optimized bytecode` where the code has been changed. While logging in the `for loop` we could check if we are at that `optimized index`, and hence adjust the `log` at that particular position.\r\n\r\nIs this approach ok?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/449568319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451603061",
    "html_url": "https://github.com/ethereum/py-evm/issues/566#issuecomment-451603061",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/566",
    "id": 451603061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTYwMzA2MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T23:49:43Z",
    "updated_at": "2019-01-04T23:49:43Z",
    "author_association": "MEMBER",
    "body": "@Bhargavasomu since this is going to be highly experimental and the implementation will need to be benchmarked against the existing implementation to verify it does indeed speed up processing I don't think I can comment on architecture until I've seen the implementation...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/451603061/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
