{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1616",
  "id": 391556106,
  "node_id": "MDU6SXNzdWUzOTE1NTYxMDY=",
  "number": 1616,
  "title": "Operate attestations",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    },
    {
      "id": 983627565,
      "node_id": "MDU6TGFiZWw5ODM2Mjc1NjU=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P2%20required",
      "name": "prio: P2 required",
      "color": "f7c6c7",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/9",
    "html_url": "https://github.com/ethereum/py-evm/milestone/9",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/9/labels",
    "id": 3905252,
    "node_id": "MDk6TWlsZXN0b25lMzkwNTI1Mg==",
    "number": 9,
    "title": "Beacon chain MVP",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 6,
    "closed_issues": 15,
    "state": "closed",
    "created_at": "2018-12-17T05:16:17Z",
    "updated_at": "2019-04-10T15:43:17Z",
    "due_on": null,
    "closed_at": "2019-04-10T15:43:17Z"
  },
  "comments": 8,
  "created_at": "2018-12-17T04:43:09Z",
  "updated_at": "2018-12-27T16:15:38Z",
  "closed_at": "2018-12-27T16:15:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nThere *were* some validation helpers in [`eth/beacon/state_machines/validation.py`](https://github.com/ethereum/py-evm/blob/1dabf4657ad78bfbd40bd29adb560197bb839616/eth/beacon/state_machines/validation.py). Now we need to implement the new ones for the latest spec. Start from `Attestion` validation.\r\n\r\n### How can it be fixed\r\nImplement `operate_attestations` based on [the spec - operating attestations](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#attestations-1):\r\n\r\n```python\r\ndef operate_attestations (state: BeaconChain, attestations: Sequence[Attestation]) -> BeaconState:\r\n    validate_attestations(state, attestations)\r\n    state = update_latest_attestations(state, attesations)\r\n    return state\r\n```\r\n\r\n1. Implement the `validate_attestations` function in `eth/beacon/state_machines/validation.py`\r\n    * Implement the \"Verify ...\" logic from spec.\r\n    * Raise `ValidationError` exception if the check fails.\r\n2. Implement an immutable function `update_latest_attestations` for the last line - Append `PendingAttestationRecord(data=attestation.data, participation_bitfield=attestation.participation_bitfield, custody_bitfield=attestation.custody_bitfield, slot_included=state.slot)` to `state.latest_attestations`.\r\n    * (STUB) Implement it in `eth/beacon/state_machines/state_update.py`.  <-- may need a better name...\r\n",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1616/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447903195",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-447903195",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 447903195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkwMzE5NQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T16:17:54Z",
    "updated_at": "2018-12-17T16:17:54Z",
    "author_association": "MEMBER",
    "body": "I think I'm in favor of using `process_` to describe what we do to the beacon chain operations. \"operate ___\" reads a bit strange.\r\n\r\n- `process_attestations`\r\n- `process_exits`\r\n- etc... ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/447903195/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448078307",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448078307",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448078307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA3ODMwNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T02:54:38Z",
    "updated_at": "2018-12-18T02:54:38Z",
    "author_association": "MEMBER",
    "body": "Where should these new `operations` live? maybe `eth/beacon/state_machines/operations.py`?\r\n\r\nI'm thinking thinking that most of the work will happen in a file like `eth/beacon/state_machines/state_transition.py` that has the following functions (or something similar):\r\n* `state_transition`\r\n* `per_slot_transition`\r\n* `per_block_transition`\r\n* `per_epoch_transition`\r\n\r\nThe operation functions (`process_attestations`, `process_exits`, etc) could live in there or be imported from some specific `operations.py` file.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448078307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448087349",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448087349",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448087349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA4NzM0OQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T03:51:39Z",
    "updated_at": "2018-12-18T04:31:15Z",
    "author_association": "MEMBER",
    "body": "Having `operations.py` for the operation functions sounds good to me. 👍 \r\n\r\nThe layout (`eth/beacon/state_machines/state_transition.py`) above makes sense. So we can follow the spec tightly at the beginning. (And yay we have better spec structure now!), then the `eth/beacon/state_machines/base.py` would be lighter (yay no more `CrystallizedState` now!).\r\n\r\np.s. and IMO according to #1502, the next thing to do may be building \"basic\" `per_slot_transition` and `per_block_transition`, not finishing all operations.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448087349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448094498",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448094498",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448094498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA5NDQ5OA==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T04:42:46Z",
    "updated_at": "2018-12-18T04:42:46Z",
    "author_association": "MEMBER",
    "body": "Another consideration:\r\n1. Only write the abstract interfaces in `eth/beacon/state_machines/state_transition.py`.\r\n2. Implement the main logic in `eth/beacon/state_machines/forks/serenity/state_transition.py`\r\n3. Add `config` in `tests/beacon/conftest.py`.\r\n\r\nThen we can use `eth/beacon/state_machines/forks/serenity/configs.py` more smoothly. Just set `config: BeaconConfig` as one of the parameters of the state transition functions.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448094498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448222734",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448222734",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448222734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODIyMjczNA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T13:34:53Z",
    "updated_at": "2018-12-18T13:34:53Z",
    "author_association": "MEMBER",
    "body": "absolutely agree with #1502. \r\n\r\naah, as for the abstract interface, are you saying `state_transition.py` should house a class? In that case should we call it a `StateMachine`? I need to go brush up on the virtual machine structure in eth1.0\r\n\r\nHow do we want to handle validation wrt forks? Right now I have the validation living in `eth/beacon/state_machines/validation.py`, but a couple of the functions we already _know_ will change in phase 1.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448222734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448223361",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448223361",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448223361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODIyMzM2MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T13:37:18Z",
    "updated_at": "2018-12-18T13:37:18Z",
    "author_association": "MEMBER",
    "body": "We can talk to @cburgdorf on the call today!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448223361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448297218",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-448297218",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 448297218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI5NzIxOA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T17:12:48Z",
    "updated_at": "2018-12-18T17:12:48Z",
    "author_association": "MEMBER",
    "body": "Let me add that we are trying to migrate away from the inheritance heavy approach that we use today more towards a compositional approach. But I'm not sure if we want to consider this for this specific part or if we should just stick to the eth1 system for now.\r\n\r\nI would say that there should be a `eth/beacon/state_machines/base.py` that hosts a `BaseStateMachine`  that has all the methods `abstract`.\r\n\r\nE.g.\r\n\r\n```python\r\nclass BaseStateMachine:\r\n\r\n    @staticmethod\r\n    @abstractmethod\r\n    def validate_something(x: int) -> None:\r\n        pass\r\n```\r\n\r\nThen inside `eth/beacon/state_machines/forks/serenity/__init__.py` we'd have `SerenityStateMachine` that implements the concrete class.\r\n\r\n```python\r\nclass SerenityStateMachine(BaseStateMachine):\r\n\r\n    @staticmethod\r\n    def validate_something(x: int) -> None:\r\n        print(\"validating...\")\r\n```\r\n\r\nAs you already pointed out, you *could* also put the individual functions separately and then do something like.\r\n\r\n```python\r\nclass SerenityStateMachine(BaseStateMachine):\r\n\r\n    validate_something = staticmethod(validate_something)\r\n```\r\nBut unfortunately there's a problem with mypy with this construct that leads to silencing the type checker which is bad.\r\n\r\nBut...I'd argue that for static methods the argument of having these functions separately for better testability does actually not hold because you can always refer to it as `SerenityStateMachine.validate_something` **without** being forced to create an instance of `SerenityStateMachine` because the function is static anyway. Same with classmethods.\r\n\r\nFor instance methods you totally *could* have those be defined separately e.g.\r\n\r\n```python\r\ndef validate_something(self, x: int) -> None:\r\n    print(\"validating...\")\r\n```\r\n\r\nand then do\r\n\r\n```python\r\nclass SerenityStateMachine(BaseStateMachine):\r\n\r\n    validate_something = validate_something\r\n```\r\n\r\nBut I'm not so sure if it makes sense to keep these separate if they depend on some instance anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/448297218/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450181957",
    "html_url": "https://github.com/ethereum/py-evm/issues/1616#issuecomment-450181957",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1616",
    "id": 450181957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDE4MTk1Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T16:15:37Z",
    "updated_at": "2018-12-27T16:15:37Z",
    "author_association": "MEMBER",
    "body": "closed via #1631 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/450181957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
