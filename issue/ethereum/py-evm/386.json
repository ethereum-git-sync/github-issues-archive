{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/386/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/386/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/386/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/386",
  "id": 299072617,
  "node_id": "MDU6SXNzdWUyOTkwNzI2MTc=",
  "number": 386,
  "title": "Add type annotations to Trinity code",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/1",
    "html_url": "https://github.com/ethereum/py-evm/milestone/1",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/1/labels",
    "id": 2977955,
    "node_id": "MDk6TWlsZXN0b25lMjk3Nzk1NQ==",
    "number": 1,
    "title": "MVP-public-alpha",
    "description": "Things needed for a MVP public alpha release.",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 1,
    "closed_issues": 21,
    "state": "closed",
    "created_at": "2017-12-13T18:00:19Z",
    "updated_at": "2018-12-21T18:43:35Z",
    "due_on": "2018-05-29T07:00:00Z",
    "closed_at": "2018-06-21T17:52:09Z"
  },
  "comments": 6,
  "created_at": "2018-02-21T18:09:18Z",
  "updated_at": "2018-05-16T23:55:11Z",
  "closed_at": "2018-05-16T23:55:11Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nNeed to add type annotations before Trinity code gets any larger.\r\n\r\n### How can it be fixed\r\n\r\nAdd them\r\n",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/386/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/386/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368229753",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368229753",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368229753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIyOTc1Mw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T13:50:47Z",
    "updated_at": "2018-02-24T13:50:47Z",
    "author_association": "MEMBER",
    "body": "I should be able to take that one. Seems like a good opportunity to explore the Trinity code base ;) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368229753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368245728",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368245728",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368245728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI0NTcyOA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T17:44:53Z",
    "updated_at": "2018-02-24T17:44:53Z",
    "author_association": "MEMBER",
    "body": "How far do you intend to go here. Do you want to have the function return types annotated as well or just variables, parameters?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368245728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368247939",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368247939",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368247939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI0NzkzOQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T18:15:06Z",
    "updated_at": "2018-02-24T18:15:06Z",
    "author_association": "MEMBER",
    "body": "Ok, turns out I'm running into unexpected challenges here. Having no experience with the type annotation support in Python I assumed things to behave differently.\r\n\r\nThis works as expected\r\n\r\n```Python\r\ndef yay(val: bool):\r\n  print(val)\r\n\r\nyay(5)\r\n```\r\n\r\nGives me:\r\n\r\n```shell\r\n$ mypy test.py \r\ntest.py:11: error: Argument 1 to \"yay\" has incompatible type \"int\"; expected \"bool\"\r\n```\r\n\r\nBut for instance, this doesn't raise any type error even though I assume it should (calling with `bool` where `str` is expected)\r\n\r\n```Python\r\nclass Foo:\r\n  def __init__(self):\r\n    self.bar(True)\r\n\r\n  def bar(self, val: str):\r\n    print(val)\r\n```\r\n\r\nSame here, this doesn't raise a type error even though I would expect it to raise one since I'm assigning `bool` where a `str` is expected.\r\n\r\n```Python\r\nclass Foo:\r\n  bar:str = None\r\n  def __init__(self):\r\n    self.bar = True\r\n\r\n```\r\n\r\nSorry, I don't mean to turn this into a free Python lesson for me but I'm not sure if I could really tackle this  task if the tooling doesn't give me the feedback I need. Chances are I'm completely approaching it wrong.\r\n\r\nSo, if you have pointers for me that would be gladly appreciated ;)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368247939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368262164",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368262164",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368262164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI2MjE2NA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T21:36:21Z",
    "updated_at": "2018-02-24T21:36:21Z",
    "author_association": "MEMBER",
    "body": "That was quite surprising to me as well, but after investigating a bit it looks like mypy will not perform any checks on code inside methods/functions that don't have any type annotations. If you change your `__init__()` signature to `def __init__(self) -> None:`, mypy will check the statements in its body and complain as we'd expect",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368262164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368264239",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368264239",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368264239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI2NDIzOQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T22:10:39Z",
    "updated_at": "2018-02-24T22:10:39Z",
    "author_association": "MEMBER",
    "body": "Thanks for your answer!\r\n\r\nThat's in fact quite surprising and dangerous because it means you may *think* everything is type checked and sound when in fact the code may have bugs and type checking was skipped altogether.\r\n\r\nAnyway, this lets me move forward and as as side effect also answers my other question\r\n\r\n>Do you want to have the function return types annotated as well or just variables, parameters?\r\n\r\nWith this in mind, we do want to annotate method/function return values.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368264239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368266876",
    "html_url": "https://github.com/ethereum/py-evm/issues/386#issuecomment-368266876",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/386",
    "id": 368266876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI2Njg3Ng==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T22:56:10Z",
    "updated_at": "2018-02-24T22:57:31Z",
    "author_association": "MEMBER",
    "body": "I started a PR (wip, not intended to get merged yet) and pinged you both regarding a question about how to approach generics. https://github.com/ethereum/py-evm/pull/407#discussion_r170435219",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368266876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
