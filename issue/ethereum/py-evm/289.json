{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/289/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/289/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/289/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/289",
  "id": 290022239,
  "node_id": "MDU6SXNzdWUyOTAwMjIyMzk=",
  "number": 289,
  "title": "Switch to `BinaryTrie` state",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-01-19T15:57:53Z",
  "updated_at": "2018-02-08T06:05:45Z",
  "closed_at": "2018-02-08T06:05:45Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\nShard chains use `BinaryTrie` for better efficiency.\r\nSee https://github.com/ethereum/wiki/wiki/Wishlist#trie\r\n\r\n### How can it be fixed\r\n1. Set `BinaryTrie` as the default trie of `FlatTrieBackend`.\r\n2. Apply `FlatTrieBackend` in most sharding tests.\r\n\r\nWill switch transaction trie and receipt trie in other tickets.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/289/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/289/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359229950",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359229950",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359229950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTIyOTk1MA==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-21T07:40:12Z",
    "updated_at": "2018-01-21T07:40:12Z",
    "author_association": "MEMBER",
    "body": "@jannikluhn @hwwhww @pipermerriam Since gas consumption of creating a new account depends on `account_exist`:\r\n```python\r\nclass Call(BaseCall):\r\n    def compute_msg_extra_gas(self, computation, gas, to, value):\r\n        â€¦\r\n        create_gas_fee = constants.GAS_NEWACCOUNT if not account_exists else 0\r\n        ...\r\n```\r\nUnless we implement `account_exist` in FlatTrieBackend(or replace it's logic with `account_is_empty`), it seems that `FlatTrieBackend` is not backward compatible.\r\nAnd if `FlatTrieBackend` is not backward compatible, I would say we can remove(or disable) `touch_account` as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359229950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359347119",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359347119",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359347119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM0NzExOQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T07:43:58Z",
    "updated_at": "2018-01-22T09:17:48Z",
    "author_association": "MEMBER",
    "body": "hmm, so part of this issue also depends on https://github.com/ethereum/py-evm/issues/281 ?\r\n\r\n> `FlatTrieBackend` is not backward compatible\r\n\r\nIt's could be compatible theoretically if we implement these functions, but practically, we don't need them. How about just raising `NotImplementedError` exceptions for these functions + not testing `FlatTrieBackend` with `class Call`, just testing with the new `class CallSharding`? Would that work?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359347119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359362933",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359362933",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359362933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM2MjkzMw==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T09:07:02Z",
    "updated_at": "2018-01-22T09:07:02Z",
    "author_association": "MEMBER",
    "body": "Yeah I think replacing with `CallSharding` would work for both this issue and #281 .",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359362933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359366212",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359366212",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359366212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM2NjIxMg==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T09:21:23Z",
    "updated_at": "2018-01-22T09:21:23Z",
    "author_association": "MEMBER",
    "body": "My bad. `touch_account` is actually used in `ShardingComputation.apply_message` so `ShardingComputation.apply_message` needs to be changed too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359366212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359370766",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359370766",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359370766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM3MDc2Ng==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T09:39:30Z",
    "updated_at": "2018-01-22T09:39:30Z",
    "author_association": "MEMBER",
    "body": "@NIC619  @jannikluhn  Could we modify `FlatTrieBackend.touch_account(address)` from \r\n```python\r\ndef touch_account(self, address):\r\n        if not self.account_exists(address):\r\n            self.set_nonce(address, 0)\r\n            self.set_balance(address, 0)\r\n            self.set_code(address, b'')\r\n```\r\n\r\nto\r\n\r\n```python\r\ndef touch_account(self, address):\r\n        if not self.account_is_empty(address):\r\n            self.set_nonce(address, 0)\r\n            self.set_balance(address, 0)\r\n            self.set_code(address, b'')\r\n```\r\n?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359370766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359372141",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359372141",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359372141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM3MjE0MQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T09:45:01Z",
    "updated_at": "2018-01-22T09:45:01Z",
    "author_association": "MEMBER",
    "body": "Yes, did this in https://github.com/ethereum/py-evm/pull/291",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359372141/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359379247",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359379247",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359379247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM3OTI0Nw==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T10:13:14Z",
    "updated_at": "2018-01-22T10:50:32Z",
    "author_association": "MEMBER",
    "body": "```python\r\nclass Call(BaseCall):\r\n    def compute_msg_extra_gas(self, computation, gas, to, value):\r\n        ...\r\n        create_gas_fee = constants.GAS_NEWACCOUNT if not account_exists else 0\r\n```\r\n```python\r\nclass CALLEIP161(CALLEIP150):\r\n    def compute_msg_extra_gas(self, computation, gas, to, value):\r\n        ...\r\n        create_gas_fee = constants.GAS_NEWACCOUNT if (account_is_dead and value) else 0\r\n```\r\nIf I'm not mistaken, basically with `FlatTrieBackend` we don't need to create a new empty account if `message.to` does not exist so the account creation fee(`constants.GAS_NEWACCOUNT`) does not apply unless we still charge it anyway.\r\n\r\nIf this gas fee is changed/removed it would result in consensus failure unless `FlatTrieBackend` is not going to be used by existing VMs and if Sharding is going to adopt `FlatTrieBackend` then this has to be mandated instead of being an option.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359379247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359382485",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359382485",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359382485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM4MjQ4NQ==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T10:26:14Z",
    "updated_at": "2018-01-22T10:26:14Z",
    "author_association": "MEMBER",
    "body": "@hwwhww @jannikluhn yeah modifying `touch_account` that way would work but the only caveat is that setting nonce/balance/code of not exist account to `0` or  `b''` in Binary Trie basically does nothing(i.e, the Trie won't change at all). So perhaps we can add a check on the underlying Trie type and act accordingly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359382485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359387373",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359387373",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359387373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM4NzM3Mw==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T10:46:55Z",
    "updated_at": "2018-01-22T10:46:55Z",
    "author_association": "MEMBER",
    "body": "I did not know that. I'm a bit suprised (would have assumed that there's no difference between `BinaryTrie` and `HexaryTrie` except for internals), but in this case we can probably simplify `touch_account` to do just nothing.\r\n\r\n> But this removed gas fee would also result in consensus failure unless FlatTrieBackend is not going to be used by existing VMs and if Sharding is going to adopt FlatTrieBackend then this has to be mandated instead of being an option.\r\n\r\nI'm not sure I understand, but the backend must defined by the protocol anyway, it can't be up to the individual user. The reason being is that different backends result in different state roots. So the original protocol will keep using `NestedTrieBackend`, the sharding one will only use `FlatTrieBackend`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359387373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359390291",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-359390291",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 359390291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM5MDI5MQ==",
    "user": {
      "login": "NIC619",
      "id": 17670147,
      "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NIC619",
      "html_url": "https://github.com/NIC619",
      "followers_url": "https://api.github.com/users/NIC619/followers",
      "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
      "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
      "organizations_url": "https://api.github.com/users/NIC619/orgs",
      "repos_url": "https://api.github.com/users/NIC619/repos",
      "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NIC619/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T10:59:09Z",
    "updated_at": "2018-01-22T10:59:09Z",
    "author_association": "MEMBER",
    "body": "> The reason being is that different backends result in different state roots. So the original protocol will keep using NestedTrieBackend, the sharding one will only use FlatTrieBackend.\r\n\r\nAhh I see. I was under the wrong impression. If this is the case, then there won't be a consensus failure problem.\r\n\r\nAnd if sharing will only use `FlatTrieBackend` then I suppose we can just have `touch_account` raise `NotImplementedError` if used and remove the code that use it:\r\n```python\r\nclass ShardingComputation(BaseComputation):\r\n    def apply_message(self):\r\n        ...\r\n        with self.vm_state.state_db() as state_db:\r\n            state_db.touch_account(self.msg.storage_address)\r\n        ...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/359390291/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/364012183",
    "html_url": "https://github.com/ethereum/py-evm/issues/289#issuecomment-364012183",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/289",
    "id": 364012183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDAxMjE4Mw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T06:05:45Z",
    "updated_at": "2018-02-08T06:05:45Z",
    "author_association": "MEMBER",
    "body": "close via #355",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/364012183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
