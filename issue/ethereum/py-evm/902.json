{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/902/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/902/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/902/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/902",
  "id": 331738081,
  "node_id": "MDU6SXNzdWUzMzE3MzgwODE=",
  "number": 902,
  "title": "Trinity fails to switch to \"regular\" sync upon finishing state sync, then hangs indefinitely",
  "user": {
    "login": "veox",
    "id": 3036030,
    "node_id": "MDQ6VXNlcjMwMzYwMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/veox",
    "html_url": "https://github.com/veox",
    "followers_url": "https://api.github.com/users/veox/followers",
    "following_url": "https://api.github.com/users/veox/following{/other_user}",
    "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
    "organizations_url": "https://api.github.com/users/veox/orgs",
    "repos_url": "https://api.github.com/users/veox/repos",
    "events_url": "https://api.github.com/users/veox/events{/privacy}",
    "received_events_url": "https://api.github.com/users/veox/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/3",
    "html_url": "https://github.com/ethereum/py-evm/milestone/3",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/3/labels",
    "id": 3420500,
    "node_id": "MDk6TWlsZXN0b25lMzQyMDUwMA==",
    "number": 3,
    "title": "Grace Hopper (Trinity Release)",
    "description": "Next publicised alpha release of Trinity",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2018-06-13T01:18:30Z",
    "updated_at": "2018-07-24T16:15:07Z",
    "due_on": "2018-06-14T07:00:00Z",
    "closed_at": "2018-07-24T16:15:07Z"
  },
  "comments": 5,
  "created_at": "2018-06-12T20:18:40Z",
  "updated_at": "2018-07-10T22:55:11Z",
  "closed_at": "2018-06-27T22:39:07Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nUpon completing state sync (on Ropsten), Trinity attempts to switch to a \"regular\" rolling sync, but the expected API does not match the one present.\r\n\r\nIn the log, notice `^C` and the hour-long window in between the timestamps.\r\n\r\nAdditionally, on subsequent run, starting regular sync fails for the same reason.\r\n\r\n``` python\r\n    INFO  06-12 19:22:40       state  Scheduler queue is empty, sleeping a bit\r\n    INFO  06-12 19:22:41       state  Finished state sync with root hash 0x469a557209df85602c0488f90865fa15fa486ec3338fd349f80c685955835421\r\n    INFO  06-12 19:22:41        sync  Starting regular sync; current head: #3423335\r\n   ERROR  06-12 19:22:41     service  Unexpected error in <p2p.sync.FullNodeSyncer object at 0x7fd4cdb38a20>, exiting\r\nTraceback (most recent call last):\r\n  File \"/home/veox/src/py-evm/p2p/service.py\", line 68, in run\r\n    await self._run()\r\n  File \"/home/veox/src/py-evm/p2p/sync.py\", line 66, in _run\r\n    new_chain = type(self.chain)(self.base_db)\r\nTypeError: __init__() missing 1 required positional argument: 'serializer'\r\n    INFO  06-12 19:22:41      server  Closing server...\r\n    INFO  06-12 19:22:41   discovery  stopping discovery\r\n```\r\n\r\n### Wholly optional animal pic\r\n\r\n![](https://peepeth.s3-us-west-1.amazonaws.com/images/peep_pics/nJjn8T4s/large.png?1528823327)\r\n\r\nSource: [kumaran@peepeth](https://peepeth.com/Kumaran/peeps/QmXiw8HwbufWSG8iSABpeFEY6Dw5PbTVPhE3hrnWiooXxe)",
  "closed_by": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/902/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/902/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396744554",
    "html_url": "https://github.com/ethereum/py-evm/issues/902#issuecomment-396744554",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
    "id": 396744554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc0NDU1NA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T21:44:00Z",
    "updated_at": "2018-06-12T21:44:46Z",
    "author_association": "MEMBER",
    "body": "I think this is because `type(self.chain)` is the proxy type instead of the actual `Chain` type. One option is something like:\r\n\r\n```diff\r\n- new_chain = type(self.chain)(self.base_db)\r\n+ self.chain.header = self.chaindb.get_canonical_head()\r\n+ new_chain = self.chain\r\n```\r\n\r\n(assuming we can get the proxy to handle that attribute setter)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396744554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396855850",
    "html_url": "https://github.com/ethereum/py-evm/issues/902#issuecomment-396855850",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
    "id": 396855850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg1NTg1MA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T08:22:13Z",
    "updated_at": "2018-06-13T08:22:13Z",
    "author_association": "MEMBER",
    "body": "So, AFAIR, the only reason why we have `Chain` as a trinity-proxied service is because we cannot run `Chain.import_block()` in the same thread that runs the asyncio event loop because import_block() may block for a long time. The other approach we use to run things in separate processes (a process pool executor) doesn't work for import_block() because (IIRC) `Chain` keeps a reference to a `LevelDB` object, which cannot be pickled.\r\n\r\nHowever, unlike the `*ChainDB` family, the `Chain` class is stateful, so having it as a trinity-proxied service doesn't sound like a good idea. For example, how would this work when the network-sync process is constantly updating its `Chain` instance as it imports blocks, but the IPC server's `Chain` is stuck with the state it was in when the process started. We could probably find ways to workaround that, but my gut feeling is that we need to find an alternative solution",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/396855850/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/397130779",
    "html_url": "https://github.com/ethereum/py-evm/issues/902#issuecomment-397130779",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
    "id": 397130779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzEzMDc3OQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T00:39:13Z",
    "updated_at": "2018-06-14T00:44:54Z",
    "author_association": "MEMBER",
    "body": "We're not too far from having no important state in `Chain`. Will post my WIP idea for removing header state. Then there will be no need to worry about `Chain` objects going out of sync. (At least until we have to worry about mining).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/397130779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/399375863",
    "html_url": "https://github.com/ethereum/py-evm/issues/902#issuecomment-399375863",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
    "id": 399375863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTM3NTg2Mw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T09:07:56Z",
    "updated_at": "2018-06-22T09:07:56Z",
    "author_association": "MEMBER",
    "body": "Is #915 something you intend to finish soon(ish), @carver?  Otherwise I'm thinking that maybe we could, as a temporary workaround, have a separate service in trinity that offers only an API to imports blocks, and every time that's called it'd create a new `Chain` instance using the current HEAD from the DB and try to import the block on top of that",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/399375863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/399618896",
    "html_url": "https://github.com/ethereum/py-evm/issues/902#issuecomment-399618896",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/902",
    "id": 399618896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTYxODg5Ng==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-23T01:09:59Z",
    "updated_at": "2018-06-23T01:09:59Z",
    "author_association": "MEMBER",
    "body": "Yeah, I'll bump it to the top of my list. Forgot it was a blocker for a real thing, and not just me poking around.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/399618896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
