{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/820",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/820/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/820/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/820/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/820",
  "id": 327526345,
  "node_id": "MDU6SXNzdWUzMjc1MjYzNDU=",
  "number": 820,
  "title": "TypeError: a bytes-like object is required, not 'PosixPath'",
  "user": {
    "login": "MysticRyuujin",
    "id": 8877131,
    "node_id": "MDQ6VXNlcjg4NzcxMzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8877131?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MysticRyuujin",
    "html_url": "https://github.com/MysticRyuujin",
    "followers_url": "https://api.github.com/users/MysticRyuujin/followers",
    "following_url": "https://api.github.com/users/MysticRyuujin/following{/other_user}",
    "gists_url": "https://api.github.com/users/MysticRyuujin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MysticRyuujin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MysticRyuujin/subscriptions",
    "organizations_url": "https://api.github.com/users/MysticRyuujin/orgs",
    "repos_url": "https://api.github.com/users/MysticRyuujin/repos",
    "events_url": "https://api.github.com/users/MysticRyuujin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MysticRyuujin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-05-29T23:55:01Z",
  "updated_at": "2018-05-30T19:31:33Z",
  "closed_at": "2018-05-30T19:31:33Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "* py-evm Version: `Trinity v0.1.0-alpha.1 \"Valentina Tereshkova\"`\r\n* OS: `Ubuntu 17.10`\r\n* Python Version (python --version): `Python 3.6.3`\r\n* Environment (output of `pip freeze`):\r\n```\r\naiohttp==2.3.10\r\nasn1crypto==0.24.0\r\nasync-lru==0.1.0\r\nasync-timeout==3.0.0\r\nattrdict==2.0.0\r\nbackcall==0.1.0\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\ncoincurve==7.1.0\r\ncommand-not-found==0.3\r\ncryptography==2.2.2\r\ncytoolz==0.9.0.1\r\ndecorator==4.3.0\r\ndistro-info==0.17\r\neth-abi==1.1.1\r\neth-account==0.2.3\r\neth-bloom==1.0.0\r\neth-hash==0.1.4\r\neth-keyfile==0.5.1\r\neth-keys==0.2.0b3\r\neth-rlp==0.1.2\r\neth-utils==1.0.3\r\nhexbytes==0.1.0\r\nidna==2.6\r\nidna-ssl==1.0.1\r\nipython==6.4.0\r\nipython-genutils==0.2.0\r\njedi==0.12.0\r\nkeyring==10.4.0\r\nkeyrings.alt==2.2\r\nlanguage-selector==0.1\r\nlru-dict==1.1.6\r\nlxml==4.2.1\r\nmultidict==4.3.1\r\nnetdisco==1.4.1\r\nnetifaces==0.10.7\r\nparsimonious==0.8.0\r\nparso==0.2.1\r\npexpect==4.6.0\r\npickleshare==0.7.4\r\nplyvel==1.0.4\r\nprompt-toolkit==1.0.15\r\nptyprocess==0.5.2\r\npy-ecc==1.4.2\r\npy-evm==0.2.0a19\r\npycparser==2.18\r\npycrypto==2.6.1\r\npycryptodome==3.6.1\r\npyethash==0.1.27\r\nPygments==2.2.0\r\npygobject==3.24.1\r\npysha3==1.0.2\r\npython-apt==1.4.0b3\r\npython-dateutil==2.7.3\r\npyxdg==0.25\r\nPyYAML==3.12\r\nrequests==2.18.4\r\nrlp==1.0.1\r\nSecretStorage==2.3.1\r\nsimplegeneric==0.8.1\r\nsix==1.11.0\r\nssh-import-id==5.7\r\ntoolz==0.9.0\r\ntraitlets==4.3.2\r\ntrie==1.3.7\r\ntrinity==0.1.0a3\r\nufw==0.35\r\nunattended-upgrades==0.1\r\nuPnPClient==0.0.8\r\nurllib3==1.22\r\nwcwidth==0.1.7\r\nweb3==4.2.1\r\nwebsockets==5.0.1\r\nyarl==1.2.4\r\nzeroconf==0.20.0\r\n```\r\n\r\n### What is wrong?\r\n\r\nWhen I try to run any w3 command in an attached console `trinity attach` I get the following error:\r\n\r\n```\r\nroot@TRINITY01:~# trinity attach\r\n    INFO  05-29 16:50:13     logging  Trinity DEBUG log file is created at /root/.local/share/trinity/mainnet/logs/trinity.log\r\nTrinity Console\r\n---------------\r\nAn instance of Web3 connected to the running chain is available as the `w3` variable\r\n\r\nIn [1]: w3.eth.getBlock('latest')\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-a60af3c8cfea> in <module>()\r\n----> 1 w3.eth.getBlock('latest')\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/eth.py in getBlock(self, block_identifier, full_transactions)\r\n    139         return self.web3.manager.request_blocking(\r\n    140             method,\r\n--> 141             [block_identifier, full_transactions],\r\n    142         )\r\n    143 \r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/manager.py in request_blocking(self, method, params)\r\n    101         Make a synchronous request using the provider\r\n    102         \"\"\"\r\n--> 103         response = self._make_request(method, params)\r\n    104 \r\n    105         if \"error\" in response:\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/manager.py in _make_request(self, method, params)\r\n     84             request_func = provider.request_func(self.web3, tuple(self.middleware_stack))\r\n     85             try:\r\n---> 86                 return request_func(method, params)\r\n     87             except CannotHandleRequest:\r\n     88                 continue\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/gas_price_strategy.py in middleware(method, params)\r\n     16                     transaction = assoc(transaction, 'gasPrice', generated_gas_price)\r\n     17                     return make_request(method, [transaction])\r\n---> 18         return make_request(method, params)\r\n     19     return middleware\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/formatting.py in apply_formatters(method, params, make_request, request_formatters, result_formatters, error_formatters)\r\n     48         response = make_request(method, formatted_params)\r\n     49     else:\r\n---> 50         response = make_request(method, params)\r\n     51 \r\n     52     if 'result' in response and method in result_formatters:\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/attrdict.py in middleware(method, params)\r\n     16     \"\"\"\r\n     17     def middleware(method, params):\r\n---> 18         response = make_request(method, params)\r\n     19 \r\n     20         if 'result' in response:\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/formatting.py in apply_formatters(method, params, make_request, request_formatters, result_formatters, error_formatters)\r\n     46         formatter = request_formatters[method]\r\n     47         formatted_params = formatter(params)\r\n---> 48         response = make_request(method, formatted_params)\r\n     49     else:\r\n     50         response = make_request(method, params)\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/normalize_errors.py in middleware(method, params)\r\n      7 def normalize_errors_middleware(make_request, web3):\r\n      8     def middleware(method, params):\r\n----> 9         result = make_request(method, params)\r\n     10 \r\n     11         # As of v1.8, Geth returns errors when you request a\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/formatting.py in apply_formatters(method, params, make_request, request_formatters, result_formatters, error_formatters)\r\n     48         response = make_request(method, formatted_params)\r\n     49     else:\r\n---> 50         response = make_request(method, params)\r\n     51 \r\n     52     if 'result' in response and method in result_formatters:\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__()\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/middleware/formatting.py in apply_formatters(method, params, make_request, request_formatters, result_formatters, error_formatters)\r\n     48         response = make_request(method, formatted_params)\r\n     49     else:\r\n---> 50         response = make_request(method, params)\r\n     51 \r\n     52     if 'result' in response and method in result_formatters:\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/providers/ipc.py in make_request(self, method, params)\r\n    153         request = self.encode_rpc_request(method, params)\r\n    154 \r\n--> 155         with self._lock, self._socket as sock:\r\n    156             try:\r\n    157                 sock.sendall(request)\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/providers/ipc.py in __enter__(self)\r\n     42 \r\n     43         if not self.sock:\r\n---> 44             self.sock = self._open()\r\n     45         return self.sock\r\n     46 \r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/providers/ipc.py in _open(self)\r\n     55 \r\n     56     def _open(self):\r\n---> 57         return get_ipc_socket(self.ipc_path)\r\n     58 \r\n     59     def reset(self):\r\n\r\n/usr/local/lib/python3.6/dist-packages/web3/providers/ipc.py in get_ipc_socket(ipc_path, timeout)\r\n     26     else:\r\n     27         sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\r\n---> 28         sock.connect(ipc_path)\r\n     29         sock.settimeout(timeout)\r\n     30         return sock\r\n\r\nTypeError: a bytes-like object is required, not 'PosixPath'\r\n\r\nIn [2]:\r\n```",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/820/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/820/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/393288654",
    "html_url": "https://github.com/ethereum/py-evm/issues/820#issuecomment-393288654",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/820",
    "id": 393288654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzI4ODY1NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T19:31:33Z",
    "updated_at": "2018-05-30T19:31:33Z",
    "author_association": "MEMBER",
    "body": "Fixed with #825 , should be fixed in `v0.1.0-alpha.5`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/393288654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
