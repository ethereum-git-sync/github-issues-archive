{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1455",
  "id": 379122197,
  "node_id": "MDU6SXNzdWUzNzkxMjIxOTc=",
  "number": 1455,
  "title": "Remove stale peers from peer pool",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983615043,
      "node_id": "MDU6TGFiZWw5ODM2MTUwNDM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20performance",
      "name": "type: performance",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983628230,
      "node_id": "MDU6TGFiZWw5ODM2MjgyMzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P3%20important",
      "name": "prio: P3 important",
      "color": "fad8c7",
      "default": false,
      "description": ""
    },
    {
      "id": 983629570,
      "node_id": "MDU6TGFiZWw5ODM2Mjk1NzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E1%20hours",
      "name": "effort: E1 hours",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2018-11-09T11:17:33Z",
  "updated_at": "2018-11-14T23:40:31Z",
  "closed_at": "2018-11-14T23:40:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nIt seems that we currently do not clean up well peers that aren't alive anymore.\r\n\r\nHere's an example log. That peer died at `11-08 17:13:52` but is still in the pool almost 24 hours later (and will probably continue to stay there) \r\n\r\n```\r\n     INFO  11-08 17:12:59           ETHPeerPool  Adding ETHPeer <Node(0x9140@35.198.39.201)> to pool\r\n    INFO  11-08 17:13:17      PeerHeaderSyncer  Starting sync with ETHPeer <Node(0x9140@35.198.39.201)>\r\n    INFO  11-08 17:13:17      PeerHeaderSyncer  ETHPeer <Node(0x9140@35.198.39.201)> disconnected, aborting sync\r\n    INFO  11-08 17:13:17       FastChainSyncer  Header Sync with ETHPeer <Node(0x9140@35.198.39.201)> ended\r\n WARNING  11-08 17:13:52           ETHPeerPool  ETHPeer <Node(0x9140@35.198.39.201)> is no longer alive but has not been removed from pool\r\n    INFO  11-08 17:14:02      PeerHeaderSyncer  Starting sync with ETHPeer <Node(0x9140@35.198.39.201)>\r\n    INFO  11-08 17:14:02      PeerHeaderSyncer  ETHPeer <Node(0x9140@35.198.39.201)> disconnected, aborting sync\r\n    INFO  11-08 17:14:02       FastChainSyncer  Header Sync with ETHPeer <Node(0x9140@35.198.39.201)> ended\r\n    INFO  11-08 17:14:49      PeerHeaderSyncer  Starting sync with ETHPeer <Node(0x9140@35.198.39.201)>\r\n    INFO  11-08 17:14:49      PeerHeaderSyncer  ETHPeer <Node(0x9140@35.198.39.201)> disconnected, aborting sync\r\n    INFO  11-08 17:14:49       FastChainSyncer  Header Sync with ETHPeer <Node(0x9140@35.198.39.201)> ended\r\n WARNING  11-08 17:14:52           ETHPeerPool  ETHPeer <Node(0x9140@35.198.39.201)> is no longer alive but has not been removed from pool\r\n...(repeats forever)...\r\nWARNING  11-09 11:07:26           ETHPeerPool  ETHPeer <Node(0x9140@35.198.39.201)> is no longer alive but has not been removed from pool\r\n```\r\n\r\nMy understanding is that since the peer pool is usually capped at some threshold, these useless peers will keep us from accepting other more useful peers and by doing that will keep us from syncing with other peers, hence slowing us down.\r\n\r\n### How can it be fixed\r\n\r\nRemove peer after some threshold period of not being alive is reached.\r\nAs I haven't been much involved in the syncing code I'd like to hear your opinion on that @pipermerriam @carver ",
  "closed_by": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1455/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/437617991",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-437617991",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 437617991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzYxNzk5MQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-10T20:13:33Z",
    "updated_at": "2018-11-10T20:13:33Z",
    "author_association": "MEMBER",
    "body": "I also noticed that after my node catching up quite well it has fallen behind recently again and the log looks a lot like this:\r\n\r\n```\r\n   DEBUG  11-10 20:11:03      DiscoveryService  Already connected to 10 peers; sleeping\r\n   DEBUG  11-10 20:11:04     DiscoveryProtocol  Ignoring find_node request from unknown node <Node(0xd356@139.59.86.165)>\r\n   DEBUG  11-10 20:11:05      DiscoveryService  Already connected to 10 peers; sleeping\r\n   DEBUG  11-10 20:11:06            FullServer  Receiving handshake from Address(104.198.105.184:udp:55586|tcp:55586)\r\n   DEBUG  11-10 20:11:06               ETHPeer  Disconnecting from remote peer; reason: too_many_peers\r\n   DEBUG  11-10 20:11:06     DiscoveryProtocol  Ignoring find_node request from unknown node <Node(0xdfca@118.24.20.114)>\r\n   DEBUG  11-10 20:11:07      DiscoveryService  Already connected to 10 peers; sleeping\r\n   DEBUG  11-10 20:11:09      DiscoveryService  Already connected to 10 peers; sleeping\r\n```\r\n\r\nSo, maybe this further validates my point that the syncing stalls because we don't clean up the peer pool and at some point our peer pool is just full of dead nodes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/437617991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438016222",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438016222",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438016222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODAxNjIyMg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T20:22:20Z",
    "updated_at": "2018-11-12T20:23:09Z",
    "author_association": "MEMBER",
    "body": "Huh, this seems like the primary bug:\r\n\r\n```\r\n    INFO  11-08 17:13:17      PeerHeaderSyncer  ETHPeer <Node(0x9140@35.198.39.201)> disconnected, aborting sync\r\n    INFO  11-08 17:13:17       FastChainSyncer  Header Sync with ETHPeer <Node(0x9140@35.198.39.201)> ended\r\n WARNING  11-08 17:13:52           ETHPeerPool  ETHPeer <Node(0x9140@35.198.39.201)> is no longer alive but has not been removed from pool\r\n```\r\n\r\nNote that \"disconnected, aborting sync\" is the syncer saying that the peer *became* disconnected some other way, not that it is actively disconnecting the peer. So something is causing the peer service to shut down but not leave the pool.\r\n\r\nSince that peer has(had) the highest TD, the syncer will just keep trying it over and over. It doesn't matter how many other peers there are, or if they are any good. I would love to see the debug logs to know more, between 17:12:59 and 17:13:17.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438016222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438023520",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438023520",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438023520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODAyMzUyMA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T20:48:56Z",
    "updated_at": "2018-11-12T20:48:56Z",
    "author_association": "MEMBER",
    "body": "@cburgdorf FYI, the reason for that logging message was to detect this.  We ideally don't want to fix this by sweeping the peer pool for disconnected peers because that hides the deeper bug of ending up with peers that don't get automatically removed from the pool.\r\n\r\nFirst priority would be to try and figure out why the peers ended up dead but not removed and  if that search doesn't yield anything after some reasonable amount of time we can look into adding something that periodically removes dead peers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438023520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438023891",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438023891",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438023891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODAyMzg5MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T20:50:15Z",
    "updated_at": "2018-11-12T20:50:15Z",
    "author_association": "MEMBER",
    "body": "And now moments after typing that, I'm open to stop-gap fix for this to do a periodic sweep, but I think it should still output an `ERROR` level message so that we're motivated to fix the issue rather than ignore it indefinitely.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438023891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438063254",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438063254",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438063254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA2MzI1NA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T23:11:58Z",
    "updated_at": "2018-11-12T23:11:58Z",
    "author_association": "MEMBER",
    "body": ">Note that \"disconnected, aborting sync\" is the syncer saying that the peer became disconnected some other way, not that it is actively disconnecting the peer. So something is causing the peer service to shut down but not leave the pool.\r\n\r\n>We ideally don't want to fix this by sweeping the peer pool for disconnected peers because that hides the deeper bug of ending up with peers that don't get automatically removed from the pool.\r\n\r\nAh ok, so what you are saying is that a client that disconnects (for whatever reason) should be removed from the peer pool directly at that moment in time?\r\n\r\nI thought that if a peer disconnects from us we may keep it in the pool and try to reconnect several times and only after x attempts of re-establishing a connection to them we would eventually give up on it and remove it from the pool.\r\n\r\n>I would love to see the debug logs to know more, between 17:12:59 and 17:13:17.\r\n\r\nHere you go\r\nhttps://gist.github.com/cburgdorf/b5c92accc07524a37fe240900239aa6b\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438063254/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438385502",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438385502",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438385502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODM4NTUwMg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T18:33:00Z",
    "updated_at": "2018-11-13T18:33:00Z",
    "author_association": "MEMBER",
    "body": "> I thought that if a peer disconnects from us we may keep it in the pool and try to reconnect several times and only after x attempts of re-establishing a connection to them we would eventually give up on it and remove it from the pool.\r\n\r\nNo, current architecture has the `PeerPool` class responsible for managing the pool of peers which involves removing the peer from the pool when it disconnects.\r\n\r\nhttps://github.com/ethereum/py-evm/blob/ae1e3e4fc133f36db2238f61dac05a4e4e344319/p2p/peer.py#L846-L861\r\n\r\nWe need to know why the finished callback never gets called.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438385502/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438467965",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438467965",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438467965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQ2Nzk2NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T22:47:36Z",
    "updated_at": "2018-11-13T22:47:36Z",
    "author_association": "MEMBER",
    "body": ">> I would love to see the debug logs to know more, between 17:12:59 and 17:13:17.\r\n\r\n> Here you go\r\nhttps://gist.github.com/cburgdorf/b5c92accc07524a37fe240900239aa6b\r\n\r\nWow, there is not a peep even in the debug logs. Maybe it was somehow shut down before being added to the pool (so the finished callback is never called)\r\n\r\nCan you add ~5s before the last logs?\r\n\r\nBest guess, the peer shut down somewhere between 832 and 844:\r\n\r\nhttps://github.com/ethereum/py-evm/blob/9870841a126fb53a6cbab2ef7bf3d46262fa23a8/p2p/peer.py#L831-L856\r\n\r\nNote that the finished callback is in line 856. Looks like that belongs between 831 and 832.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438467965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438608147",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438608147",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438608147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODYwODE0Nw==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T10:08:32Z",
    "updated_at": "2018-11-14T10:08:32Z",
    "author_association": "MEMBER",
    "body": ">Can you add ~5s before the last logs?\r\n\r\nHere's a bit more than that (17:10 to 17:15)\r\nhttps://gist.github.com/cburgdorf/8c952fbd1d83fc13bd815e1f2e1009f5",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438608147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438746882",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438746882",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438746882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc0Njg4Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T17:26:32Z",
    "updated_at": "2018-11-14T17:26:32Z",
    "author_association": "MEMBER",
    "body": "We might be able to validate this by adding some debug output to the peer's shutdown (or even the `BaseService` internals) to log whether any finished callbacks are present.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438746882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438785832",
    "html_url": "https://github.com/ethereum/py-evm/issues/1455#issuecomment-438785832",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1455",
    "id": 438785832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc4NTgzMg==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T19:21:34Z",
    "updated_at": "2018-11-14T19:21:34Z",
    "author_association": "MEMBER",
    "body": "Yup, died before adding to pool:\r\n\r\n```\r\n   DEBUG  11-08 17:12:59               ETHPeer  ETHPeer <Node(0x9140303e704e9d1b706b23fbd1b8c605555eb97256cb6c34c42ed03330fb8579ad6520336fde13f75f3f3e007e77e28bca283fcd3fbbb53e7f483488b7ecc35a@35.198.39.201:63229)> disconnected: disconnect_requested\r\n   DEBUG  11-08 17:12:59               ETHPeer  ETHPeer <Node(0x9140@35.198.39.201)> had nothing left to do, ceasing operation...\r\n   DEBUG  11-08 17:12:59               ETHPeer  Waiting for child services: [<ResponseCandidateStream(ETHPeer <Node(0x9140@35.198.39.201)>, <class 'trinity.protocol.eth.commands.BlockHeaders'>)>, <trinity.protocol.common.boot.DAOCheckBootManager object at 0x7f9b809a2278>]\r\n   DEBUG  11-08 17:12:59           ETHProtocol  Sending ETH/Status msg: {'protocol_version': 63, 'network_id': 1, 'td': 5699707424982088372716, 'best_hash': b'\\x84\\xd4\\xa7\\x1fZD\\xbf\\xfb&>u\\x85\\x8f\\xf4\\x9f\\x1b^\\xb3\\xc0nb\\xb9\\x7f\\xb7T\\xd8RJ\\x82\\xe0\\xbb\\xc7', 'genesis_hash': b'\\xd4\\xe5g@\\xf8v\\xae\\xf8\\xc0\\x10\\xb8j@\\xd5\\xf5gE\\xa1\\x18\\xd0\\x90j4\\xe6\\x9a\\xec\\x8c\\r\\xb1\\xcb\\x8f\\xa3'}\r\n   DEBUG  11-08 17:12:59  ResponseCandidateStream  <ResponseCandidateStream(ETHPeer <Node(0x9140@35.198.39.201)>, <class 'trinity.protocol.eth.commands.BlockHeaders'>)> finished: Cancellation requested by ETHPeer:ETHPeerPool:FullServer:MainnetFullNode token\r\n   DEBUG  11-08 17:12:59  ResponseCandidateStream  Stream <ResponseCandidateStream(ETHPeer <Node(0x9140@35.198.39.201)>, <class 'trinity.protocol.eth.commands.BlockHeaders'>)> shutting down, cancelling the pending request\r\n   DEBUG  11-08 17:12:59  ResponseCandidateStream  <ResponseCandidateStream(ETHPeer <Node(0x9140@35.198.39.201)>, <class 'trinity.protocol.eth.commands.BlockHeaders'>)> halted cleanly\r\n   DEBUG  11-08 17:12:59   DAOCheckBootManager  <trinity.protocol.common.boot.DAOCheckBootManager object at 0x7f9b809a2278> finished: Cancellation requested by ResponseCandidateStream:ETHPeer:ETHPeerPool:FullServer:MainnetFullNode token\r\n   DEBUG  11-08 17:12:59   DAOCheckBootManager  <trinity.protocol.common.boot.DAOCheckBootManager object at 0x7f9b809a2278> halted cleanly\r\n   DEBUG  11-08 17:12:59            FullServer  Could not complete handshake: IncompleteReadError('0 bytes read on a total of 32 expected bytes',)\r\n   DEBUG  11-08 17:12:59               ETHPeer  All child services finished\r\n   DEBUG  11-08 17:12:59               ETHPeer  ETHPeer <Node(0x9140@35.198.39.201)> halted cleanly\r\n    INFO  11-08 17:12:59           ETHPeerPool  Adding ETHPeer <Node(0x9140@35.198.39.201)> to pool\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/438785832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
