{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1055",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1055",
  "id": 343103384,
  "node_id": "MDU6SXNzdWUzNDMxMDMzODQ=",
  "number": 1055,
  "title": "Consider allowing PeerPoolSubscribers to specify types of messages they're not interested in",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 631592722,
      "node_id": "MDU6TGFiZWw2MzE1OTI3MjI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "0e8a16",
      "default": false,
      "description": null
    },
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983615043,
      "node_id": "MDU6TGFiZWw5ODM2MTUwNDM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20performance",
      "name": "type: performance",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983628230,
      "node_id": "MDU6TGFiZWw5ODM2MjgyMzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P3%20important",
      "name": "prio: P3 important",
      "color": "fad8c7",
      "default": false,
      "description": ""
    },
    {
      "id": 983629570,
      "node_id": "MDU6TGFiZWw5ODM2Mjk1NzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E1%20hours",
      "name": "effort: E1 hours",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/4",
    "html_url": "https://github.com/ethereum/py-evm/milestone/4",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/4/labels",
    "id": 3512809,
    "node_id": "MDk6TWlsZXN0b25lMzUxMjgwOQ==",
    "number": 4,
    "title": "Margaret Hamilton (Trinity Release)",
    "description": "https://github.com/ethereum/py-evm/milestone/4",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 20,
    "state": "closed",
    "created_at": "2018-07-20T20:00:14Z",
    "updated_at": "2018-08-20T02:56:05Z",
    "due_on": "2018-08-14T07:00:00Z",
    "closed_at": "2018-08-20T02:56:05Z"
  },
  "comments": 3,
  "created_at": "2018-07-20T13:15:19Z",
  "updated_at": "2018-08-03T03:26:51Z",
  "closed_at": "2018-08-03T03:26:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nSome PeerPoolSubscribers (e.g. `LightPeerChain`, `TxPool`) are only meant to handle a subset of msg types, so it is rather wasteful to have `PeerPool` deliver all messages to their queues.\r\n\r\n### How can it be fixed\r\n\r\nWe could make it possible for `PeerPoolSubscribers` to specify what types of msgs they aren't interested in, so that they never get those. Or they could specify the types of msgs they are interested in, but the problem with that is we need to remember to update the list if/when they're extended to handle more msg types\r\n",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1055/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406667884",
    "html_url": "https://github.com/ethereum/py-evm/issues/1055#issuecomment-406667884",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055",
    "id": 406667884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjY2Nzg4NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T17:18:43Z",
    "updated_at": "2018-07-20T17:18:43Z",
    "author_association": "MEMBER",
    "body": "I think it makes a lot of sense for us to update the signature of `Peer.add_subscribe` to take a list of commands and to only add messages to the queue that are of those types.  Should be very easy to implement.\r\n\r\n```python\r\nclass PeerPoolSubscriber:\r\n    @property\r\n    def subscription_msg_types(self):\r\n        # returns a tuple of `Command` classes that it is interested in.\r\n        ...\r\n\r\nclass PeerPool:\r\n    def subscribe(self, subscriber):\r\n        for peer in ...:\r\n            peer.add_subscriber(subscriber.msg_queue, subscriber.subscription_msg_types):\r\n```\r\n\r\nConsiderations:\r\n\r\n- Potentially make `PoolSubscriber.subcriber_msg_types` a method which takes the `Peer` as an argument so that the subscriber can select what message types it wants based on the type of peer it receives.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406667884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406961690",
    "html_url": "https://github.com/ethereum/py-evm/issues/1055#issuecomment-406961690",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055",
    "id": 406961690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjk2MTY5MA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T07:11:01Z",
    "updated_at": "2018-07-23T07:11:01Z",
    "author_association": "MEMBER",
    "body": "My concern with having subscribers specify the types of messages they want is that it's not easy to ensure that each msg type is handled by at least one subscriber, but if we make `BasePeer` log a warning when it receives a msg of a type for which there are no subscribers, that should not be that big of a deal",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/406961690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/407115381",
    "html_url": "https://github.com/ethereum/py-evm/issues/1055#issuecomment-407115381",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1055",
    "id": 407115381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzExNTM4MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T16:17:17Z",
    "updated_at": "2018-07-23T16:17:17Z",
    "author_association": "MEMBER",
    "body": "I think your comment is saying that you think a whitelist can work, but just in case it isn't, here's my reasoning.\r\n\r\nA whitelist should be:\r\n  - future proof against new commands showing up\r\n  - most reliable reduction in p2p cmd traffic over the queues\r\n  - subscribers can be written to throw errors on unexpected commands making things more explicit\r\n\r\nIt should be easy for the `Peer` class to detect when it has no subscribers for a message type and to log a warning (like I think you were saying above).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/407115381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
