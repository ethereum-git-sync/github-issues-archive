{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/330",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/330/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/330/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/330/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/330",
  "id": 292753647,
  "node_id": "MDU6SXNzdWUyOTI3NTM2NDc=",
  "number": 330,
  "title": "Implement full-node syncing",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 630871768,
      "node_id": "MDU6TGFiZWw2MzA4NzE3Njg=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/PR%20state:%20WIP",
      "name": "PR state: WIP",
      "color": "fbca04",
      "default": false,
      "description": ""
    },
    {
      "id": 815420353,
      "node_id": "MDU6TGFiZWw4MTU0MjAzNTM=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20trinity",
      "name": "comp: trinity",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-01-30T11:47:48Z",
  "updated_at": "2018-05-03T15:52:09Z",
  "closed_at": "2018-05-03T15:52:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a high-level overview of full-node syncing, heavily inspired by the way geth does it. I'm going to split this into smaller tasks, and create separate issues for them. This issue is just to help keep track of overall progress\r\n\r\nThere will be two modes of operation (fast and normal), which can be selected via command line flags\r\n\r\n#### Fast-sync:\r\n* download headers and bodies\r\n* verify header chain's consistency (PoW, etc)\r\n* download transaction receipts\r\n* when at head - 1024 blocks, pause chain sync and download the state trie defined by the root hash of current head\r\n* switch to normal sync\r\n\r\n#### Normal-sync:\r\n* download headers and bodies\r\n* verify header chain's consistency (PoW, etc)\r\n* import blocks\r\n\r\n### Starting the sync\r\n\r\nUpon connecting to a new ETH node, trigger a sync using the peer with the highest\r\nannounced TD (total difficulty).\r\n\r\nUpon receiving a NewBlock msg with a TD that's higher than the peer's previously announced TD,\r\ntrigger a sync using that peer.\r\n\r\nThe sync method will return immediately if there is a sync in progress or if we have less than\r\n`min_peers_to_sync` connected peers\r\n\r\n### The sync method\r\n\r\nThe sync runs in a loop, querying the given peer for `MAX_HEADERS_FETCH` headers starting from\r\nthe current local head, skipping 128 headers between each (aka a header skeleton). It then makes\r\nconcurrent requests, using all available peers, to fill the gaps in that skeleton. Once all gaps\r\nin that skeleton are filled, the headers are processed, stored in the DB and the fetchers for block\r\nbodies (and receipts, in case we're in fast mode) are notified that there are new headers.\r\n\r\nThe fetchers will then request the bodies/receipts for those new headers, in parallel, using all\r\navailable peers.\r\n\r\n### Sanity checking after completing the fast sync\r\n\r\nSince the fast-sync just downloads block/state data and stores it in the DB, it might be a good idea to iterate through all headers in the chain confirming that we have their transactions/uncles/receipts in the DB, as well as iterating over all state trie nodes starting from the root hash. Upon successful completion of that sanity check, we should be able to start normal syncing\r\n\r\n### Further optimizations\r\n\r\nThese are optimizations that should be implemented in subsequent iterations\r\n\r\n#### K-th header PoW verification\r\n\r\nPoW verification is still a bottleneck even when in fast-sync mode, so instead of verifying the\r\nPoW on every header, geth does so on a randomly chosen subset of them, in a way that the\r\nprobability of a forgery is smaller than the probability of an attacker producing a SHA3\r\ncollision. We'll need to look into doing that as well\r\n\r\n#### Fine-grained peer idleness \r\n\r\nKeep separate idle flags (NodeIdle, ReceiptIdle, etc) for every peer, so that we only make,\r\nsay, a NodeData request to a peer if there's no pending NodeData requests for that peer.\r\n",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/330/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/330/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361766491",
    "html_url": "https://github.com/ethereum/py-evm/issues/330#issuecomment-361766491",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/330",
    "id": 361766491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2NjQ5MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T23:11:11Z",
    "updated_at": "2018-01-30T23:11:11Z",
    "author_association": "MEMBER",
    "body": "cc @lrettig ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/361766491/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
