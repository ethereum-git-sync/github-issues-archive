{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/113",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/113/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/113/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/113/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/113",
  "id": 263183502,
  "node_id": "MDU6SXNzdWUyNjMxODM1MDI=",
  "number": 113,
  "title": "Need a Chain that syncs only block headers",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-10-05T16:12:38Z",
  "updated_at": "2017-11-22T12:19:49Z",
  "closed_at": "2017-11-22T12:19:48Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The existing Chain implementation assumes a synced database with all blocks/headers/state is available, but for the light client we'll need one that only syncs only block headers and fetches any extra data (blocks/receipts/contract-code/proofs) on demand.",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/113/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/113/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334640539",
    "html_url": "https://github.com/ethereum/py-evm/issues/113#issuecomment-334640539",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/113",
    "id": 334640539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDY0MDUzOQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T02:11:59Z",
    "updated_at": "2017-10-06T02:11:59Z",
    "author_association": "MEMBER",
    "body": "So I've been thinking about something independently that *may* be a good fit for this.\r\n\r\nWhat about a *backend* system for all of the functions that are used for retrieving and persisting chain data (blocks/headers/transactions/receipts).\r\n\r\n```\r\nclass BaseChainDB:\r\n    def get_block_by_hash(self, block_hash):\r\n        pass\r\n\r\n    def get_block_by_canonical_block_number(self, block_number):\r\n        pass\r\n\r\n    def persist_block(self, block):\r\n        pass\r\n\r\n    ...  # more methods for the other objects....\r\n```\r\n\r\nBenefits I see...\r\n\r\n* Moves logic out of the `Chain` class, making it a bit more of a *pure* interface\r\n* Allows for full client and light client `Chain` instances to use different strategies for retrieval of these objects.\r\n\r\nIn general, it seems like a healthy abstraction, thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334640539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334757495",
    "html_url": "https://github.com/ethereum/py-evm/issues/113#issuecomment-334757495",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/113",
    "id": 334757495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc1NzQ5NQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T13:38:58Z",
    "updated_at": "2017-10-06T13:38:58Z",
    "author_association": "MEMBER",
    "body": "I think that makes sense, so I went ahead and tried it at #114. Notice that moving get_transactions_from_db() to BaseChainDB would require some work, I think, but it's not really needed, so we might as well leave it out for now. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334757495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334822983",
    "html_url": "https://github.com/ethereum/py-evm/issues/113#issuecomment-334822983",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/113",
    "id": 334822983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDgyMjk4Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T17:40:32Z",
    "updated_at": "2017-10-06T17:40:32Z",
    "author_association": "MEMBER",
    "body": "I'm thinking that we want to move *all* db access to be inside this class.  I noted this in the other PR but that would include moving the `VM.state_db` API onto the `ChainDB` class.\r\n\r\nThis would enable things like *fancy* chain databases that pull information not available by the LES protocol over some alternative API (like infura or etherscan).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/334822983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/346334486",
    "html_url": "https://github.com/ethereum/py-evm/issues/113#issuecomment-346334486",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/113",
    "id": 346334486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjMzNDQ4Ng==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T12:19:48Z",
    "updated_at": "2017-11-22T12:19:48Z",
    "author_association": "MEMBER",
    "body": "We now have a `BaseChainDB` and `LightChain`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/346334486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
