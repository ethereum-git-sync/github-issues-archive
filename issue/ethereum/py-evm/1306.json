{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1306",
  "id": 361737402,
  "node_id": "MDU6SXNzdWUzNjE3Mzc0MDI=",
  "number": 1306,
  "title": "Improve benchmark runner to support stateless setup / measure / teardown",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 983613604,
      "node_id": "MDU6TGFiZWw5ODM2MTM2MDQ=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20eth",
      "name": "comp: eth",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    },
    {
      "id": 983628532,
      "node_id": "MDU6TGFiZWw5ODM2Mjg1MzI=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/prio:%20P4%20nice%20to%20have",
      "name": "prio: P4 nice to have",
      "color": "fef2c0",
      "default": false,
      "description": ""
    },
    {
      "id": 983629570,
      "node_id": "MDU6TGFiZWw5ODM2Mjk1NzA=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/effort:%20E1%20hours",
      "name": "effort: E1 hours",
      "color": "bfe5bf",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-09-19T13:00:15Z",
  "updated_at": "2019-01-29T13:39:32Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "\r\n### What is wrong?\r\n\r\nCurrently when multiple benchmarks need to share some setup, they have to pass state around. We could probably improve the runner to handle that more elegantly in a stateless fashion.\r\n\r\n### How can it be fixed\r\n\r\n\r\nCiting from [here](https://github.com/ethereum/py-evm/pull/1046#issuecomment-406447058)\r\n\r\nOne option (which would require changes to the core benchmark runner) would be something like:\r\n\r\n```py\r\ndef transfer_benchmark(w3, chain):\r\n  # setup\r\n  undeployed_contract = make_contract_for_deployment(w3)\r\n  token_contract = erc20_deploy(w3, chain, undeployed_contract)\r\n  txn_data = w3...buildTransaction().data\r\n  yield\r\n\r\n  # benchmark\r\n  erc20_transfer(chain, txn_data, token_contract.address)\r\n  yield\r\n\r\n  # cleanup\r\n  # (but no cleanup to do on this one, I think)\r\n  yield\r\n\r\n  # never hit this point\r\n```\r\n\r\nThe test runner would roughly do:\r\n\r\n```\r\ndef benchmark_run(benchmark: Callable):\r\n  test_lifecycle = executor(w3, chain)\r\n  next(test_lifecycle)  # setup\r\n\r\n  start_clock ...\r\n  next(test_lifecycle)  # run\r\n  end_clock ...\r\n\r\n  next(test_lifecycle)  # cleanup\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1306/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426722464",
    "html_url": "https://github.com/ethereum/py-evm/issues/1306#issuecomment-426722464",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
    "id": 426722464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjcyMjQ2NA==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T17:20:22Z",
    "updated_at": "2018-10-03T17:20:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cburgdorf  I would like to work on this issue. Could you explain about the issue in a bit more detail.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426722464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426726815",
    "html_url": "https://github.com/ethereum/py-evm/issues/1306#issuecomment-426726815",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
    "id": 426726815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjcyNjgxNQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T17:32:59Z",
    "updated_at": "2018-10-03T17:32:59Z",
    "author_association": "MEMBER",
    "body": "Hey @Bhargavasomu happy to hear you are interested to work on this. That said, I noticed you dropped a similar line on a bunch of other issues and my suggestion would be to stick to one issue at a time and just try to work your way through it before jumping on another one.\r\n\r\nThis particular issue was explained further [in this comment](https://github.com/ethereum/py-evm/pull/1046#issuecomment-406447058) but it most likely goes hand in hand with a bit of refactoring of existing benchmarks as well as the runner itself.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426726815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426886775",
    "html_url": "https://github.com/ethereum/py-evm/issues/1306#issuecomment-426886775",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
    "id": 426886775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjg4Njc3NQ==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T05:06:41Z",
    "updated_at": "2018-10-04T05:06:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yaa will follow your advice @cburgdorf. Please don't mind, I'm just enthusiastic in working on these issues.\r\n\r\nRegarding this particular issue, could you give me one example where the setup is being shared. I got this doubt because I looked into scripts/run.py to get the list of benchmarks and TO_EXISTING_ADDRESS_CONFIG, TO_NON_EXISTING_ADDRESS_CONFIG are the only configurations that are being shared. Is there anything I am missing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/426886775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/427173858",
    "html_url": "https://github.com/ethereum/py-evm/issues/1306#issuecomment-427173858",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
    "id": 427173858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE3Mzg1OA==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T21:21:48Z",
    "updated_at": "2018-10-04T21:45:50Z",
    "author_association": "MEMBER",
    "body": ">Please don't mind, I'm just enthusiastic in working on these issues.\r\n\r\nHappy to hear!\r\n\r\n>Regarding this particular issue, could you give me one example where the setup is being shared\r\n\r\nI think if we follow this refactoring, we could basically drop the existing pattern of using a `setup_benchmark` method as seen here:\r\n\r\nhttps://github.com/ethereum/py-evm/blob/3061a48d112b2ae7d94adec89000372dd4bcac2c/scripts/benchmark/checks/deploy_dos.py#L72-L77\r\n\r\nhttps://github.com/ethereum/py-evm/blob/3061a48d112b2ae7d94adec89000372dd4bcac2c/scripts/benchmark/checks/erc20_interact.py#L76-L81\r\n\r\nThe `_setup_benchmark` method is then called as part of `execute`\r\n\r\nhttps://github.com/ethereum/py-evm/blob/3061a48d112b2ae7d94adec89000372dd4bcac2c/scripts/benchmark/checks/erc20_interact.py#L89-L110\r\n\r\nThis issue isn't really well spec'ed out yet and more an impromptu brain dump for an idea that needs further exploration. Giving this a bit more thought I see issues with this approach that probably need some thought. E.g. if the runner does roughly this:\r\n\r\n```python\r\ndef benchmark_run(benchmark: Callable):\r\n  test_lifecycle = executor(w3, chain)\r\n  next(test_lifecycle)  # setup\r\n\r\n  start_clock ...\r\n  next(test_lifecycle)  # run\r\n  end_clock ...\r\n\r\n  next(test_lifecycle)  # cleanup\r\n```\r\n\r\nHow does that work for benchmarks that do not need a setup phase. Requiring them to add a `yield` before the actual work just because the benchmark runner expects a setup phase sounds like some unnecessary friction to me.\r\n\r\nI realize that my comment is probably creating more questions than answers but that may just be another hint that this really is more a rough idea for someone to explore to improve the API. To be honest, I believe there are more impactful things to work on when it comes to improving the benchmark suite. Two things come to my mind and I'll create issues for them in just a moment:\r\n\r\n- run at least *some* benchmarks against the actual `LevelDB` (https://github.com/ethereum/py-evm/issues/1359)\r\n- refactor benchmarks to use new chain builder tools (https://github.com/ethereum/py-evm/issues/1360)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/427173858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/429846321",
    "html_url": "https://github.com/ethereum/py-evm/issues/1306#issuecomment-429846321",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1306",
    "id": 429846321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg0NjMyMQ==",
    "user": {
      "login": "Bhargavasomu",
      "id": 15922456,
      "node_id": "MDQ6VXNlcjE1OTIyNDU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15922456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bhargavasomu",
      "html_url": "https://github.com/Bhargavasomu",
      "followers_url": "https://api.github.com/users/Bhargavasomu/followers",
      "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions",
      "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs",
      "repos_url": "https://api.github.com/users/Bhargavasomu/repos",
      "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T13:08:59Z",
    "updated_at": "2018-10-15T15:42:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `benchmark state information` is passed onto to the `parent super class`, and there it is being executed. This is what you meant by `transfer of state info`, right @cburgdorf ?\r\nAnd I don't understand what difference is caused by replacing the `_setup_benchmark` function with `transfer_benchamark`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/429846321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
