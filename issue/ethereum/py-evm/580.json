{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/580",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/580/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/580/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/580/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/580",
  "id": 316297574,
  "node_id": "MDU6SXNzdWUzMTYyOTc1NzQ=",
  "number": 580,
  "title": "Need an async method for importing a block",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-04-20T14:47:58Z",
  "updated_at": "2018-05-07T08:00:26Z",
  "closed_at": "2018-05-07T08:00:26Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Regardless of how much time we spend optimizing the process of importing a block, it will always be an expensive (CPU-heavy) operation, and when importing blocks as part of a chain sync, we cannot run the block import as a synchronous (i.e. blocking) method because the process running that is also responsible for processing network messages (via the asyncio event loop).\r\n\r\nI believe that what we want is a Chain-like service running in a separate process, exposed via a `multiprocessing` proxy (like trinity's `ChainDBProxy`). That new service would have to access the database via `ChainDBProxy` as well, though, as we can only have one process accessing our DB. Does this make sense? Can you guys think of any other possible issues?",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/580/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/580/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383131656",
    "html_url": "https://github.com/ethereum/py-evm/issues/580#issuecomment-383131656",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/580",
    "id": 383131656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzEzMTY1Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T15:23:48Z",
    "updated_at": "2018-04-20T15:23:48Z",
    "author_association": "MEMBER",
    "body": "Agreed,  I think the primatives for this are already *mostly* in place.  We can just mirror what we're already doing with the `chaindb`\r\n\r\nhttps://github.com/ethereum/py-evm/blob/master/trinity/main.py#L154-L162",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383131656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
