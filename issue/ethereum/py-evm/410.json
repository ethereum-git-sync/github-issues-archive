{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/410/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/410/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/410/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/410",
  "id": 300408003,
  "node_id": "MDU6SXNzdWUzMDA0MDgwMDM=",
  "number": 410,
  "title": "Allow `VM` class to specify what `ChainDB` class it uses.",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-02-26T21:45:29Z",
  "updated_at": "2018-03-27T22:00:43Z",
  "closed_at": "2018-03-27T22:00:43Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nIn #350 the differences between shard collations and blocks required a bit of a hack to make the `persist_block_to_db` to work with both blocks and collations.\r\n\r\nWhile we *could* try to sufficiently abstract the API, such as separating things into `persist_block_to_db` and `persist_collation_to_db`, I don't believe this is the right solution.  Eventually, we are bound to have either blocks, transactions, or something that require more such logic forks to handle.\r\n\r\nPy-EVM has so far largely avoided these types of logic forks in it's code by sufficiently abstracting the overall API so that underlying implementations can be swapped out within each VM.\r\n\r\n### How can it be fixed\r\n\r\nI think that the `Chain` class should be modified so that it takes a backend `DB` type, and then delegates to the active `VM` for the appropriate block number to get the `ChainDB`.  Each `VM` class can then define their own `ChainDB` class.  Then the `ShardVM` class can expose it's own `ChainDB` class with modified `persist_block_to_db` method.",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/410/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/410/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368894186",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-368894186",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 368894186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODg5NDE4Ng==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T14:24:06Z",
    "updated_at": "2018-02-27T14:24:06Z",
    "author_association": "MEMBER",
    "body": "Maybe another point to consider is that different types of clients store different parts of the chain. Some store everything, some don't store state (light clients, stateless clients), some don't store transactions (light clients). Some prune state, some don't. [Log shard clients](https://ethresear.ch/t/log-shards-and-emv-abstraction/747) might store transactions but no state. Would we want/need different `ChainDB` implementations for each of those?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368894186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368928990",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-368928990",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 368928990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODkyODk5MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T16:03:13Z",
    "updated_at": "2018-02-27T16:05:04Z",
    "author_association": "MEMBER",
    "body": "Here's the *usage* profile I see for the `ChainDB`\r\n\r\n- The `VM` class: \r\n  - `get_block_uncles`\r\n  - `get_block_transactoins`\r\n  - `get_receipts`\r\n  - `persist_trie_data_dict_to_db`\r\n  - `get_block_header_by_hash`\r\n  - `get_pending_transaction`\r\n  - `clear`\r\n- The `VMState` class:\r\n  - `get_state_db`\r\n  - `exists`\r\n  - `snapshot`\r\n  - `revert`\r\n  - `commit`\r\n- The `Chain` class:\r\n  - `get_transaction_index`\r\n  - `get_transaction_by_index`\r\n  - `add_pending_transaction`\r\n  - `get_block_header_by_hash`\r\n  - `get_canonical_head`\r\n  - `lookup_block_hash`\r\n  - `persist_block_to_db`\r\n\r\nHigh level analysis:\r\n\r\n- The `VM` usage mostly is centered around retrieving `Block` data to instantiate blocks.\r\n- The `VMState` is isolated to `snapshot/revert/commit` API and access to the underlying db backend for the state database.\r\n- The `Chain` class deals with the broadest usage, retrieving transaction information, storing blocks/headers, and looking up blocks/headers, as well as the canonical chain information.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368928990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368932792",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-368932792",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 368932792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODkzMjc5Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T16:13:56Z",
    "updated_at": "2018-02-27T16:16:41Z",
    "author_association": "MEMBER",
    "body": "One way to look at this (but that I'm not sure is correct).\r\n\r\nWe *might* benefit from isolating our database usage.  \r\n\r\nI'm going to define two terms \r\n\r\n- Database Backend: A low level connection to a database.  Currently we only support key/value store based backends.\r\n- Database Adapter: A high level wrapper around a database backend.\r\n\r\nIn the current code:\r\n\r\n- Existing *backends* are the `MemoryDB` and `LevelDB`.\r\n- We have one existing *adapter* which is our `ChainDB` class.\r\n\r\nI am proposing that we split up the `ChainDB` into multiple classes.  Initial starting point looks to be trying out an *adapter* for each of `Chain/VM/VMState` since their usage of the current `ChainDB` don't have very much overlap.  I think there are also ways that we can remove this overlap:\r\n\r\nThis proposed architecture doesn't directly fix the issues presented by @jannikluhn but I think it lays the foundation for addressing them.  More on this in another comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368932792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368940033",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-368940033",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 368940033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODk0MDAzMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T16:34:25Z",
    "updated_at": "2018-02-27T16:35:31Z",
    "author_association": "MEMBER",
    "body": "Now to explore actual usage examples.\r\n\r\n### Light Node\r\nA light node needs basic database access to store and retrieve block headers for the canonical chain.  \r\n\r\nIn order to serve JSON-RPC requests the light client needs to proxy certain `Chain` methods which would normally access the chain database to instead fetch the needed data from peers.  This use case is *orthogonal* to this issue since the abstraction layer to accomplish this is likely to be at the `Chain` object itself since the JSON-RPC server interacts directly with the `Chain` class.\r\n\r\n### Full Node\r\n\r\nThis is the current *default* mode of operation that we're trying to add flexibility to.  Stores everything.\r\n\r\n### Stateless Node\r\n\r\nIt's not clear to me exactly what is stored by stateless clients.  Nothing?  Headers?\r\n\r\n### Log Shard Clients \r\n\r\n[https://ethresear.ch/t/log-shards-and-emv-abstraction/747](https://ethresear.ch/t/log-shards-and-emv-abstraction/747)\r\n\r\nSince this is currently theoretical and I don't know much about it I'm unable to detail exactly how this fits into our architecture.  It sounds like it's an entirely separate `VM` type with potentially fundamentally different semantics.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368940033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368943081",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-368943081",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 368943081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODk0MzA4MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T16:43:05Z",
    "updated_at": "2018-02-27T16:43:05Z",
    "author_association": "MEMBER",
    "body": "So, maybe to tie this all together, though I'm not confident that I've got all the pieces right.\r\n\r\n- Independent *adapter* implementations for `VM` give internal flexibility with regard to EVM semantics, enabling different logic for dealing with `blocks`, `transactions`, `collations`.\r\n- Independent *adapter* implementations for the `VMState` currently have no direct need that I see, but the implementation looks pretty simple.\r\n- Independent *adapter* implementations for the `Chain` as well as different implementations of the `Chain` class itself *should* enable the Fill/Light/Stateless use cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/368943081/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/369685531",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-369685531",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 369685531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTY4NTUzMQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T18:29:44Z",
    "updated_at": "2018-03-01T18:29:44Z",
    "author_association": "MEMBER",
    "body": "This is probably at least tangentially related to https://github.com/ethereum/py-evm/issues/337",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/369685531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370106757",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-370106757",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 370106757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDEwNjc1Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T01:58:47Z",
    "updated_at": "2018-03-03T01:58:47Z",
    "author_association": "MEMBER",
    "body": "So far this is turning out interesting and I **think** promising.  The `VMState` object's usage is basically direct database access so it's looking like I may be able to completely eliminate the `snapshot/commit/revert` API as well as moving the API for the account state database to be directly on the `VMState` object.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370106757/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370169931",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-370169931",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 370169931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE2OTkzMQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T18:40:03Z",
    "updated_at": "2018-03-03T18:40:03Z",
    "author_association": "MEMBER",
    "body": "**Stateless Node** only stores the \"state root\" and cache recent data (validated collation headers, data from VMC...) in memory.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370169931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370174798",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-370174798",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 370174798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE3NDc5OA==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T19:51:14Z",
    "updated_at": "2018-03-03T19:51:14Z",
    "author_association": "MEMBER",
    "body": "Sorry for that I just went through it carefully. Some preliminary notes for database adapter:\r\n\r\n1. `Transaction` and `Blob`:\r\n\t* Instead of transactions, the recent design is storing **blobs** as just some binary data.\r\n\t*  `CollationHeader` includes `blobs_root` instead of `transaction_root`, copy from @vbuterin: the `blobs_root` is a simple Patricia tree root, where the keys are two bytes: `0x0000`, `0x0001`, `0x0002`, etc; a collation can contain a maximum of 65536 blobs.\r\n\t* We don't use any transaction-related functions in Phase 1. But probably will be considered and adapted in Phase 2. Right now we could just don't implement them.\r\n2. `CollationHeader` and `BlockHeader`:\r\n\t* Have to rename a lot `block_number` -> `collation_number`/`score` in the adapter...?\r\n\t* A refactoring idea: maybe we can make a `number` property in `BlockHeader` class that returns `self.block_number` and make a  `number` property in `CollationHeader` class that returns `self.number` or `self.score`, then modify all `block_header.block_number` usage to `block_header.number`?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370174798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370636145",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-370636145",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 370636145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYzNjE0NQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T02:09:17Z",
    "updated_at": "2018-03-06T02:09:17Z",
    "author_association": "MEMBER",
    "body": "@hwwhww I think your changes to the `*Header` API would be a good abstraction/improvement.  We *could* also do away with the `block_` and `collation_` prefixes and just change the base field names.  I think the fact that the object is a `Block` or `Collation` is sufficient justification to remove those prefixes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/370636145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376282460",
    "html_url": "https://github.com/ethereum/py-evm/issues/410#issuecomment-376282460",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/410",
    "id": 376282460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjI4MjQ2MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T19:24:48Z",
    "updated_at": "2018-03-26T19:24:48Z",
    "author_association": "MEMBER",
    "body": "Replaced by https://github.com/ethereum/py-evm/issues/507",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376282460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
