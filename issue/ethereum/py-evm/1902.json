{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1902",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1902/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1902/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1902/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1902",
  "id": 538969400,
  "node_id": "MDU6SXNzdWU1Mzg5Njk0MDA=",
  "number": 1902,
  "title": "Explore alternatives to our current inheritance based way of supporting forks",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 983615867,
      "node_id": "MDU6TGFiZWw5ODM2MTU4Njc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20refactor",
      "name": "type: refactor",
      "color": "eeeeee",
      "default": false,
      "description": ""
    },
    {
      "id": 983616278,
      "node_id": "MDU6TGFiZWw5ODM2MTYyNzg=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/type:%20RFC%20/%20discussion%20/%20question",
      "name": "type: RFC / discussion / question",
      "color": "eeeeee",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-12-17T10:17:41Z",
  "updated_at": "2019-12-17T10:17:58Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nI'm not sure if there's anything wrong per se but I was thinking about how we build up an ever growing inheritance chain with every new fork.\r\n\r\n```python\r\nclass MuirGlacierVM(IstanbulVM):\r\n   ...\r\n```\r\n\r\nThese cause quite a bunch of extra function calls in various places where these objects are created and also where overwritten methods are called.\r\n\r\nWe are probably still far away from that being an actual performance problem but I wonder if it is maintainable long term. \r\n\r\n### How can it be fixed\r\n\r\n1. Explore approach that does not rely on inheritance\r\n\r\n2. At some fork, instead of inheriting from the previous fork, inherit from the top level base class and provide the needed function/property implementations so that they are replicated on the latest fork. Then continue inheriting as usual. In other words, every `n` forks break the inheritance chain on the technical level but keep the inheritance practice as the development methodology.\r\n\r\n3. Other ideas...",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1902/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1902/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
