{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/71",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/71/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/71/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/71/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/71",
  "id": 248158328,
  "node_id": "MDU6SXNzdWUyNDgxNTgzMjg=",
  "number": 71,
  "title": "`CodeStream.is_valid_opcode()` function likely exploitable",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-08-05T04:38:57Z",
  "updated_at": "2017-08-28T18:18:10Z",
  "closed_at": "2017-08-28T18:18:10Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nIn order to validate that a `JUMPDEST` is valid, we have to ensure that it isn't within the data bytes for a `PUSHXX` instruction.  The current implementation does this with the following algorithm.\r\n\r\n1. Check if the `JUMPDEST` is in the data bytes for any `PUSHXX` instruction within the previous 32 bytes.\r\n2. If not, it is valid.\r\n3. If so, apply the same algorithm to the `PUSHXX` instruction to be sure it is not in the data bytes for another PUSHXX instruction.\r\n\r\nThe *worst* case for this is bytecode that looks like this:\r\n\r\n```\r\nPUSH1, PUSH1, PUSH1, PUSH1, ...... , PUSH1, JUMPDEST\r\n```\r\n\r\nIn this case, in order to validate the last instruction, it will have to step backwards through every single byte.  The current implementation will do this recursively, which could, with a sufficiently large piece of bytecode exceed the maximum stack size.\r\n\r\n### How can it be fixed\r\n\r\nSimplest solution is to drop the current logic and just do what pyethereum does and process the entire bytecode in one pass.  We should probably start there, and see about whether we can add some optimizations in to either take a hybrid approach, abort the recursive stepping backwards through the chain at a certain depth, or something else we haven't thought of yet.",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/71/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/71/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/320401504",
    "html_url": "https://github.com/ethereum/py-evm/issues/71#issuecomment-320401504",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/71",
    "id": 320401504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQwMTUwNA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T04:40:39Z",
    "updated_at": "2017-08-05T04:40:39Z",
    "author_association": "MEMBER",
    "body": "@njgheorghita just an FYI. Here's a security issue I realized is currently in place.  I think step one is to refactor the code stream `is_valid_opcode` function so that it either isn't recursive, *or* that it will only recurse a maximum of maybe 5 levels before resorting to just processing the full bytecode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/320401504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
