{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1956",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1956/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1956/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1956/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1956",
  "id": 696200343,
  "node_id": "MDU6SXNzdWU2OTYyMDAzNDM=",
  "number": 1956,
  "title": "MuirGlacierTransaction incorrectly decodes sender in raw transaction",
  "user": {
    "login": "Pet3ris",
    "id": 224585,
    "node_id": "MDQ6VXNlcjIyNDU4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/224585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pet3ris",
    "html_url": "https://github.com/Pet3ris",
    "followers_url": "https://api.github.com/users/Pet3ris/followers",
    "following_url": "https://api.github.com/users/Pet3ris/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pet3ris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pet3ris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pet3ris/subscriptions",
    "organizations_url": "https://api.github.com/users/Pet3ris/orgs",
    "repos_url": "https://api.github.com/users/Pet3ris/repos",
    "events_url": "https://api.github.com/users/Pet3ris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pet3ris/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-09-08T21:50:15Z",
  "updated_at": "2020-09-08T22:19:38Z",
  "closed_at": "2020-09-08T22:19:29Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "* py-evm Version: 0.3.0\r\n* OS: osx\r\n* Python Version (python --version): 3.7\r\n* Environment (output of `pip freeze`):\r\n\r\n```\r\npy-evm==0.3.0a19\r\nweb3==5.12.1\r\neth-tester==0.5.0b2\r\n```\r\n\r\n### What is wrong?\r\n\r\nI'm running the following code on a recent mainnet transaction hash.\r\n\r\n```python\r\nimport pytest\r\nimport web3\r\nimport eth_account\r\nimport rlp\r\nfrom eth.vm.forks.muir_glacier.transactions import MuirGlacierTransaction\r\n```\r\n\r\n```python\r\ndef test_extract_from_account():\r\n    w3 = web3.Web3(web3.HTTPProvider(\"<insert your favorite mainnet provider>\"))\r\n    tx = w3.eth.getTransaction(\"0x2133167f62f03f65e07210640530373aad2e743ee9e2c025b9abec4e8fe2133d\")\r\n    raw_tx = recover_raw_transaction(tx)\r\n    TransactionClass = MuirGlacierTransaction\r\n    evm_transaction = rlp.decode(raw_tx, TransactionClass)\r\n    sender = evm_transaction.sender\r\n    print(w3.eth.getBalance(sender))\r\n```\r\n\r\nIf you see this transaction on [Etherscan](https://etherscan.io/tx/0x2133167f62f03f65e07210640530373aad2e743ee9e2c025b9abec4e8fe2133d), you will see that the sender is actually `0x14b95ed55c0825a30c5bf6d4905379e06749b117`, however, when I run this locally, it prints out `b'b\\xecR$c4\\x98\\xc1$i\\x0cUt\\x8f\\xe4\\x88\\xa01\\xa95'`, which is `0x62ec5224633498c124690c55748fe488a031a935`.\r\n\r\nThere is one custom function I'm using here, which is `recover_raw_transaction`, I've adapted the implementation from `eth_accounts` and tested it using the following test. All this function does is recovers the signed raw transaction hash using transaction information from mainnet.\r\n\r\n```python\r\ndef recover_raw_transaction(tx) -> str:\r\n    \"\"\"Recover raw transaction for replay.\r\n\r\n    Adapted from: https://github.com/ethereum/eth-account/blob/1d26f44f6075d6f283aeaeff879f4508c9a228dc/eth_account/_utils/signing.py#L28-L42\r\n    \"\"\"\r\n    transaction = {\r\n        \"to\": tx[\"to\"],\r\n        \"gas\": tx[\"gas\"],\r\n        \"gasPrice\": tx[\"gasPrice\"],\r\n        \"value\": tx[\"value\"],\r\n        \"nonce\": tx[\"nonce\"],\r\n    }\r\n    if \"data\" in tx:\r\n        transaction[\"data\"] = tx[\"data\"]\r\n\r\n    v = tx[\"v\"]\r\n    r = int.from_bytes(tx[\"r\"], \"big\")\r\n    s = int.from_bytes(tx[\"s\"], \"big\")\r\n    unsigned_transaction = serializable_unsigned_transaction_from_dict(transaction)\r\n    return encode_transaction(unsigned_transaction, vrs=(v, r, s))\r\n```\r\n\r\n```python\r\ndef test_signing():\r\n    # Setup env and fund our account\r\n    acct = eth_account.Account.create(\"SPLASH\")\r\n    w3 = web3.Web3(web3.EthereumTesterProvider())\r\n    w3.eth.sendTransaction({\"from\": w3.eth.coinbase, \"to\": acct.address, \"value\": 10 ** 8})\r\n    assert w3.eth.getBalance(acct.address) == 10 ** 8\r\n\r\n    # Sign transaction and send it\r\n    signed_tx = w3.eth.account.sign_transaction(\r\n        {\r\n            \"from\": acct.address,\r\n            \"to\": w3.eth.coinbase,\r\n            \"data\": b\"\",\r\n            \"value\": 10 ** 7,\r\n            \"nonce\": w3.eth.getTransactionCount(acct.address),\r\n            \"gasPrice\": w3.eth.gasPrice,\r\n            \"gas\": 10 ** 5,\r\n        },\r\n        acct.key,\r\n    )\r\n    raw_tx = signed_tx.rawTransaction\r\n    tx_hash = w3.eth.sendRawTransaction(raw_tx)\r\n\r\n    # Attempt to recover the signed transaction from its arguments\r\n    tx = w3.eth.getTransaction(tx_hash)\r\n    raw_tx2 = recover_raw_transaction(tx)\r\n\r\n    # The reconstructed raw transaction should match the signed one\r\n    assert raw_tx == raw_tx2\r\n```\r\n\r\nHere is the full MuirGlacierTransaction - I've checked that the `to` address and other arguments match this mainnet transaction well, but sender simply doesn't.\r\n\r\n```\r\nMuirGlacierTransaction(nonce=3788, gas_price=500000000000, gas=190894, to=b'z%\\rV0\\xb4\\xcfS\\x979\\xdf,]\\xac\\xb4\\xc6Y\\xf2H\\x8d', value=400000000000000000, data=b'', v=38, r=74143883448002018754475343141839442092018387336910689797702689452511837451914, s=46215258636012427298027329700625499290324342672107021033224234713237025620081)\r\n```\r\n\r\n### How can it be fixed\r\n\r\nThe problem is likely with the `.sender` extraction? Am I using the wrong transaction class for this block?\r\n",
  "closed_by": {
    "login": "Pet3ris",
    "id": 224585,
    "node_id": "MDQ6VXNlcjIyNDU4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/224585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pet3ris",
    "html_url": "https://github.com/Pet3ris",
    "followers_url": "https://api.github.com/users/Pet3ris/followers",
    "following_url": "https://api.github.com/users/Pet3ris/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pet3ris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pet3ris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pet3ris/subscriptions",
    "organizations_url": "https://api.github.com/users/Pet3ris/orgs",
    "repos_url": "https://api.github.com/users/Pet3ris/repos",
    "events_url": "https://api.github.com/users/Pet3ris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pet3ris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1956/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1956/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/689166195",
    "html_url": "https://github.com/ethereum/py-evm/issues/1956#issuecomment-689166195",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1956",
    "id": 689166195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTE2NjE5NQ==",
    "user": {
      "login": "Pet3ris",
      "id": 224585,
      "node_id": "MDQ6VXNlcjIyNDU4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pet3ris",
      "html_url": "https://github.com/Pet3ris",
      "followers_url": "https://api.github.com/users/Pet3ris/followers",
      "following_url": "https://api.github.com/users/Pet3ris/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pet3ris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pet3ris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pet3ris/subscriptions",
      "organizations_url": "https://api.github.com/users/Pet3ris/orgs",
      "repos_url": "https://api.github.com/users/Pet3ris/repos",
      "events_url": "https://api.github.com/users/Pet3ris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pet3ris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T22:19:29Z",
    "updated_at": "2020-09-08T22:19:38Z",
    "author_association": "NONE",
    "body": "Found the following fix (the mainnet node was returning `data` as `input`):\r\n\r\n```py\r\ndef recover_raw_transaction(tx) -> str:\r\n    \"\"\"Recover raw transaction for replay.\r\n\r\n    Inspired by: https://github.com/ethereum/eth-account/blob/1d26f44f6075d6f283aeaeff879f4508c9a228dc/eth_account/_utils/signing.py#L28-L42\r\n    \"\"\"\r\n    transaction = {\r\n        \"to\": tx[\"to\"],\r\n        \"gas\": tx[\"gas\"],\r\n        \"gasPrice\": tx[\"gasPrice\"],\r\n        \"value\": tx[\"value\"],\r\n        \"nonce\": tx[\"nonce\"],\r\n    }\r\n    if \"data\" in tx:\r\n        transaction[\"data\"] = tx[\"data\"]\r\n    if \"input\" in tx:\r\n        transaction[\"data\"] = tx[\"input\"]\r\n    \r\n    v = tx[\"v\"]\r\n    r = int.from_bytes(tx[\"r\"], \"big\")\r\n    s = int.from_bytes(tx[\"s\"], \"big\")\r\n    unsigned_transaction = serializable_unsigned_transaction_from_dict(transaction)\r\n    return encode_transaction(unsigned_transaction, vrs=(v, r, s))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/689166195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
