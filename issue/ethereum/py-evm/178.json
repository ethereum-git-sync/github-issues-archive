{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/178/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/178/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/178/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/178",
  "id": 278346253,
  "node_id": "MDU6SXNzdWUyNzgzNDYyNTM=",
  "number": 178,
  "title": "JSON-RPC server",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/py-evm/milestones/1",
    "html_url": "https://github.com/ethereum/py-evm/milestone/1",
    "labels_url": "https://api.github.com/repos/ethereum/py-evm/milestones/1/labels",
    "id": 2977955,
    "node_id": "MDk6TWlsZXN0b25lMjk3Nzk1NQ==",
    "number": 1,
    "title": "MVP-public-alpha",
    "description": "Things needed for a MVP public alpha release.",
    "creator": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 1,
    "closed_issues": 21,
    "state": "closed",
    "created_at": "2017-12-13T18:00:19Z",
    "updated_at": "2018-12-21T18:43:35Z",
    "due_on": "2018-05-29T07:00:00Z",
    "closed_at": "2018-06-21T17:52:09Z"
  },
  "comments": 6,
  "created_at": "2017-12-01T03:25:48Z",
  "updated_at": "2018-05-30T21:10:47Z",
  "closed_at": "2018-03-27T21:56:06Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Looking for the list of supported RPC endpoints?\r\n\r\nSee the full checklist here: #835\r\n\r\n# Original Issue\r\n\r\nWe need to implement the basic API for JSON-RPC server.  A simplistic start can be found here: https://github.com/ethereum/py-evm/tree/master/evm/rpc\r\n\r\nLets flesh this out further to something more complete.  For now lets keep it as something that must be run as `python evm/rpc/server.py ....`\r\n\r\nI suggest sticking to the *read-only* apis for now.\r\n\r\n---\r\nCompiled to-do list:\r\n\r\n(Checked off at the time of merge)\r\n\r\n- [ ] support all the `eth_*` read-only methods\r\n  - [x] `eth_protocolVersion`\r\n  - [ ] `eth_syncing`\r\n  - [ ] `eth_coinbase`\r\n  - [ ] `eth_mining`\r\n  - [ ] `eth_hashrate`\r\n  - [ ] `eth_gasPrice`\r\n  - [ ] `eth_accounts`\r\n  - [x] `eth_blockNumber`\r\n  - [x] `eth_getBalance`\r\n  - [x] `eth_getStorageAt`\r\n  - [x] `eth_getTransactionCount`\r\n  - [x] `eth_getBlockTransactionCountByHash`\r\n  - [x] `eth_getBlockTransactionCountByNumber`\r\n  - [x] `eth_getUncleCountByBlockHash`\r\n  - [x] `eth_getUncleCountByBlockNumber` block int\r\n  - [x] `eth_getUncleCountByBlockNumber` block string\r\n  - [x] `eth_getCode`\r\n  - [ ] `eth_call`\r\n  - [ ] `eth_estimateGas`\r\n  - [x] `eth_getBlockByHash`\r\n  - [x] `eth_getBlockByNumber` block int\r\n  - [x] `eth_getBlockByNumber` block string\r\n  - [ ] `eth_getTransactionByHash`\r\n  - [x] `eth_getTransactionByBlockHashAndIndex`\r\n  - [x] `eth_getTransactionByBlockNumberAndIndex`\r\n  - [ ] `eth_getTransactionReceipt`\r\n  - [x] `eth_getUncleByBlockHashAndIndex`\r\n  - [x] `eth_getUncleByBlockNumberAndIndex` block int\r\n  - [x] `eth_getUncleByBlockNumberAndIndex` block string\r\n  - [ ] `eth_getCompilers`\r\n  - [ ] `eth_getLogs`\r\n  - [ ] `eth_getWork`\r\n- [x] serve over socket\r\n- [ ] make score available on block object, so that a returned block dict can be formatted without a `chain` reference ?\r\n\r\nTo save for another PR:\r\n\r\n- [ ] server over HTTP",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/178/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/178/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348613969",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-348613969",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 348613969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYxMzk2OQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T21:04:33Z",
    "updated_at": "2017-12-01T21:04:33Z",
    "author_association": "MEMBER",
    "body": "Reasonable approach: only serve json-rpc over sockets, plus an HTTP proxy like: https://github.com/chfast/json-rpc-proxy/blob/master/jsonrpcproxy.py",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348613969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348615491",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-348615491",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 348615491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYxNTQ5MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T21:12:16Z",
    "updated_at": "2017-12-01T21:12:16Z",
    "author_association": "MEMBER",
    "body": "Yeah, I'd only implement *one* of the IPC/HTTP API with preference towards socket based on the thing you linked and the conversation from all-core-devs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348615491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348616455",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-348616455",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 348616455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYxNjQ1NQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T21:16:53Z",
    "updated_at": "2017-12-01T21:16:53Z",
    "author_association": "MEMBER",
    "body": "More notes to self.  This was said somewhere in our conversations.  cc @chfast  Pulling the `Manager` layer out of web3 *might* make sense here so that it can be use din the proxy library.  Reasoning is that it would also allow for use of the middleware API in the proxy which seems like a really nice feature, allowing many degrees of freedom in what the proxy can actually do.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348616455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348640217",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-348640217",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 348640217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY0MDIxNw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T23:20:07Z",
    "updated_at": "2017-12-01T23:23:07Z",
    "author_association": "MEMBER",
    "body": "> Pulling the `Manager` layer out of web3 _might_ make sense here so that it can be use din the proxy library.\r\n\r\nAt the very least, pulling `IPCProvider` out of web3.py would be straightforward, but I agree that it's worth exploring what it would take to extract all of `Manager` (and with it, a middleware lib).\r\n\r\nI'm starting to look at how to test an RPC server, and here's my plan so far:\r\n\r\n1. Generate a short test chain with MainnetTesterChain, with known values for various items, like block hashes, transaction hashes, etc.\r\n2. Store the chain.db and known values in `/tests` (as well as a script for generating them)\r\n3. In RPC tests, load the chain.db and request values from it using standard JSON-RPC calls\r\n4. Assert that the retrieved values match the known values from step 2",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/348640217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349733678",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-349733678",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 349733678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTczMzY3OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T18:36:54Z",
    "updated_at": "2017-12-06T18:36:54Z",
    "author_association": "MEMBER",
    "body": "Future TODO: make gas price strategy for `eth_gasPrice` pluggable and implement the Eth Gas Station strategy:  https://github.com/ethereum/web3.py/issues/496",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/349733678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/352162774",
    "html_url": "https://github.com/ethereum/py-evm/issues/178#issuecomment-352162774",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/178",
    "id": 352162774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE2Mjc3NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-16T05:34:00Z",
    "updated_at": "2017-12-16T05:34:00Z",
    "author_association": "MEMBER",
    "body": "Quick information drop about `eth_estimateGas`.\r\n\r\nThis *may* be as simple as returning `computation.gas_meter.start_gas - computation.gas_meter.gas_remaining`.  However, if memory serves, I think it's more complicated that that.\r\n\r\nThe way that I recall go-ethereum doing this is to execute the transaction with some very large upper bound of gas like `50,000,000`.\r\n\r\n- if it errors out: return an error over RPC\r\n- if it passes, proceed into a binary search, re-running the transaction at each gas value until you find the spot where it succeeds/fails and use the success value.\r\n\r\nI'll re-iterate that the binary search approach may not be necessary based on how we do gas consumption tracking.  Let's see.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/352162774/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
