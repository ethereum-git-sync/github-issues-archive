{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/507/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/507/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/507/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/507",
  "id": 308703085,
  "node_id": "MDU6SXNzdWUzMDg3MDMwODU=",
  "number": 507,
  "title": "Database architecture refactor: Adapters and Wrappers",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1169245993,
      "node_id": "MDU6TGFiZWwxMTY5MjQ1OTkz",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Probably%20Close",
      "name": "Probably Close",
      "color": "5319e7",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-03-26T19:24:34Z",
  "updated_at": "2018-12-21T18:36:17Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Replaces https://github.com/ethereum/py-evm/issues/410\r\n\r\n### What is wrong?\r\n\r\nThe current architecture uses a single global `ChainDB` for each chain.\r\n\r\nThis is proving problematic because:\r\n\r\n- The `ChainDB` is not aware of different VM rules and thus cannot have it's underlying business logic modified.\r\n- Some of the network syncing code needs to interact with the database in ways that aren't currently supported.  See #337 \r\n- It has a lot of API surface area.\r\n\r\n### How can it be fixed\r\n\r\nFirst, we establish the following new terminology.\r\n\r\n- *Connection*: The base database class used to connect to the underlying db.  e.g. `MemoryDB` or the `LevelDB`.  This object is treated as a key/value store.\r\n- *Wrapper*: A class which *wraps* a *connection*, adding some extra functionality.  e.g. `JournalDB`, `HashTrie`\r\n- *Adapter*: A class which implements a high level API over top of an underlying database.\r\n\r\nWe also establish a new convention/rule regarding the APIs exposed by *wrappers*.  Wrapper APIs may **only** be used at the same level that the wrapper is applied.\r\n\r\nFor Example:\r\n\r\nSuppose the `VM` class applies the `JournalDB` wrapper to the database connection, and then passes the resulting object down to the `VMState`.  The `VMState` is not allowed to interact with any of the APIs exposed by the `JournalDB`.\r\n\r\nNow, we establish the following new Adapter classes.\r\n\r\n- `MetadataDB`: \r\n  - Only deals with chain metadata (e.g. canonical head, mapping block numbers to canonical block hashes, mapping transaction hashes to canonical block hash in which it was mined).\r\n  - Used by the `Chain` class.\r\n  - Lets look into using SQLAlchemy + sqlite3 for storage of this data.\r\n- `ChainDB`:\r\n  - Deals with storage of chain data (e.g. blocks, transactions, receipts)\r\n  - Lets look into using SQLAlchemy + sqlite3 for storage of this data.\r\n  - Each `VM` may specify their own `ChainDB` class.\r\n- `AccountDB`:\r\n  - Replaces `evm.db.state.AccountStateDB`\r\n  - Deals with VM state (e.g. account balances, nonces, storage, code)\r\n  - each `VMState` may specify their own `AccountDB` class.\r\n\r\nSo, responsibility for databases is as follows.\r\n\r\n- `Chain` -> `MetadataDB` (replaces what we currently refer to as `ChainDB`\r\n- `VM` -> `ChainDB` (not to be confused with the existing `ChainDB`\r\n- `VMState` -> `AccountDB` (replaces the current `AccountStateDB`\r\n\r\nWith this structure in place, now we explore how *wrappers* come into play.  Each level of the call stack will pass down it's base database which *might* be the actual base connection, or *might* be a wrapped version of the base connection.  Everything is to **assume** that the `db` object it receives **only** exposes the base database API.\r\n\r\nIn the event that a database connection needs to be wrapped, it should occur *at* the level at which the wrapper APIs will be used.  \r\n\r\nFor example: \r\n\r\n- the `AccountDB` should be responsible for applying the `HashTrie` wrapper.\r\n- the `VMState` should be responsible for applying the `JournalDB` wrapper.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/507/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/507/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376440201",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-376440201",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 376440201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ0MDIwMQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T08:27:36Z",
    "updated_at": "2018-03-27T08:27:36Z",
    "author_association": "MEMBER",
    "body": "> Some of the network syncing code needs to interact with the database in ways that aren't currently supported (can't recall exactly but it has to do with an assumption that transactions are available in the database).\r\n\r\nI believe that's #337?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376440201/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376442832",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-376442832",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 376442832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ0MjgzMg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T08:37:15Z",
    "updated_at": "2018-03-27T08:37:15Z",
    "author_association": "MEMBER",
    "body": "Sounds good to me, but I'd like to point out that the `ChainSyncer` will need to make use of all wrappers as during a fast-sync it bypasses most of the Chain/VM and just stores stuff in the database. I don't think that's a problem, but thought it was worth mentioning",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376442832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376552594",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-376552594",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 376552594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU1MjU5NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T14:46:33Z",
    "updated_at": "2018-03-27T14:46:33Z",
    "author_association": "MEMBER",
    "body": "> Sounds good to me, but I'd like to point out that the ChainSyncer will need to make use of all wrappers as during a fast-sync it bypasses most of the Chain/VM and just stores stuff in the database. I don't think that's a problem, but thought it was worth mentioning\r\n\r\nI don't have a clear enough picture of how these will fit together, but my current assumption/hypothesis is that this will give the syncing code more flexibility and control over how it interacts with the db, either allowing it to make use of new APIs we create on the adapters that the VM uses, or that maybe the chain syncing code will be able to have it's own special adapter.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/376552594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/377976288",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-377976288",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 377976288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzk3NjI4OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T16:52:14Z",
    "updated_at": "2018-04-02T16:52:14Z",
    "author_association": "MEMBER",
    "body": "@carver assigned to you merely to *suggest* tackling this when you start into this codebase.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/377976288/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/380986975",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-380986975",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 380986975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk4Njk3NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T00:47:59Z",
    "updated_at": "2018-04-13T00:47:59Z",
    "author_association": "MEMBER",
    "body": "Just checking in to say I'm reviewing this now. It's probably going to be a little while before there's new code, because I'm still piecing everything together. The direction outlined above looks solid.\r\n\r\nI'm also interested in seeing how we can reduce the mutability of things further -- specifics TBD.\r\n\r\nI'm going to keep digging into designs offline with whiteboards and other contributors, and report back here with major updates.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/380986975/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384816190",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-384816190",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 384816190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgxNjE5MA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T23:11:15Z",
    "updated_at": "2018-04-26T23:11:15Z",
    "author_association": "MEMBER",
    "body": "This is really heavily coupled with #599 -- it's essentially blocked on that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384816190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384823684",
    "html_url": "https://github.com/ethereum/py-evm/issues/507#issuecomment-384823684",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/507",
    "id": 384823684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgyMzY4NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T00:00:47Z",
    "updated_at": "2018-04-27T00:00:47Z",
    "author_association": "MEMBER",
    "body": "I really want to say that you can probably make headway building on current `master` but your call because I can't guarantee that.  😢 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/384823684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
