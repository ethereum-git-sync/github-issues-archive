{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/695/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/695/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/695/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/695",
  "id": 323168675,
  "node_id": "MDU6SXNzdWUzMjMxNjg2NzU=",
  "number": 695,
  "title": "Testing networking services is hard",
  "user": {
    "login": "jannikluhn",
    "id": 29854669,
    "node_id": "MDQ6VXNlcjI5ODU0NjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jannikluhn",
    "html_url": "https://github.com/jannikluhn",
    "followers_url": "https://api.github.com/users/jannikluhn/followers",
    "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
    "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
    "repos_url": "https://api.github.com/users/jannikluhn/repos",
    "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 889922027,
      "node_id": "MDU6TGFiZWw4ODk5MjIwMjc=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/comp:%20p2p",
      "name": "comp: p2p",
      "color": "bfd4f2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-05-15T11:02:07Z",
  "updated_at": "2018-08-16T13:05:04Z",
  "closed_at": "2018-08-16T13:05:04Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nTesting networking services in isolation is quite difficult right now, as discussed in #688 .\r\n\r\n### How can it be fixed\r\n\r\nI think we should try to separate different layers of the code more so that we can replace them easily. Here's a concrete proposal:\r\n\r\n- Each `BasePeer` gets a `BasePeerInterface` instance. `BasePeer` calls `BasePeerInterface.send_command(command)`, `BasePeerInterface` calls\r\n `BasePeer.process_command(command)` (alternatively, both classes have a `command_queue` on which they put commands on).\r\n- To allow this, `Command`s keep parameters as instance variables.\r\n- `StreamPeerInterface` (or just `PeerInterface`) writes commands to the output stream and reads them from the input stream, just like the current `BasePeer` does.\r\n- For tests, there's a `MockPeerInterface` that passes commands through to a shared `Network` object that sends them to the receiving `MockPeerInterface`. That means that nothing goes over a network interface and nothing needs to be encoded or decoded.\r\n- Add a `MockDiscovery` which gets a list of peer pools to \"discover\".\r\n- `PeerPool` makes the `handshake` function configurable, either by taking it as a constructor argument or by making a `BasePeerPool` and requiring it to implement it in sub classes. We add a `mock_handshake` that looks up the remote in `Network` and creates a new peer with a `MockPeerInterface`.\r\n\r\nI haven't thought this through completely (especially how it affects `PeerPool` and `Server`), but don't have more time just now and wanted to write it down. Will update this tonight when I'll hopefully had some more time.",
  "closed_by": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/695/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/695/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389214656",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-389214656",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 389214656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIxNDY1Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T15:43:07Z",
    "updated_at": "2018-05-15T15:43:07Z",
    "author_association": "MEMBER",
    "body": "Conceptually this seems to make sense, however I suspect this is something that will need to be built in order to really see where the bodies are buried.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389214656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389235928",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-389235928",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 389235928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIzNTkyOA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:48:13Z",
    "updated_at": "2018-05-15T16:48:13Z",
    "author_association": "MEMBER",
    "body": "I *think* a reasonable approach for this would be starting as *low* in the stack as possible and writing something to really test *just* the kademlia code or *just* the peer connections and trying to build from there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389235928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389238095",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-389238095",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 389238095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIzODA5NQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:54:59Z",
    "updated_at": "2018-05-15T16:54:59Z",
    "author_association": "MEMBER",
    "body": "> I think a reasonable approach for this would be starting as low in the stack as possible and writing something to really test just the kademlia code or just the peer connections and trying to build from there.\r\n\r\nWe have pretty good coverage for kademlia/discovery code as well as for the peer auth and p2p/sub-proto handshakes. It's only when it gets to sub-protocol commands, PeerPool and syncers that we're severely lacking",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389238095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389883039",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-389883039",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 389883039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg4MzAzOQ==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T14:19:03Z",
    "updated_at": "2018-05-17T14:45:05Z",
    "author_association": "MEMBER",
    "body": "One problem with those big architectural redesigns is that usually nobody will have the time/willpower to implement them, so we end up doing things in a suboptimal way waiting for a redesign that will never come. Instead I very much prefer to make small improvements every time I touch a piece of code. For instance, although testing async code is hard and we're severely lacking on infrastructure for that, we do [have some](https://github.com/ethereum/py-evm/blob/master/tests/p2p/peer_helpers.py#L106) and with [some small improvements](https://github.com/ethereum/py-evm/pull/714/files#diff-c2dc645bd193352c586dfb04c5a15677R141) the existing sharding tests can be [a lot simpler and much less fragile](https://github.com/ethereum/py-evm/pull/714)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389883039/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389904760",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-389904760",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 389904760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTkwNDc2MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T15:20:40Z",
    "updated_at": "2018-05-17T15:20:40Z",
    "author_association": "MEMBER",
    "body": "I think that's a fair point, and probably a good conservative approach.  I'd be game to re-visit this when/if someone feels like they have a sufficiently good handle on how to do it and the time to execute on it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/389904760/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/413538292",
    "html_url": "https://github.com/ethereum/py-evm/issues/695#issuecomment-413538292",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/695",
    "id": 413538292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUzODI5Mg==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T13:05:04Z",
    "updated_at": "2018-08-16T13:05:04Z",
    "author_association": "MEMBER",
    "body": "Things have changed a lot in our networking layer, including the new `pytest-asyncio-network-simulator` which some of our tests are using, so I'm closing this and we can open new issues for specific things that need fixing/improving",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/413538292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
