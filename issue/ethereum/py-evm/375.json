{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/375",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/375/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/375/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/375/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/375",
  "id": 297796878,
  "node_id": "MDU6SXNzdWUyOTc3OTY4Nzg=",
  "number": 375,
  "title": "Implement EIP232 new transaction format",
  "user": {
    "login": "NIC619",
    "id": 17670147,
    "node_id": "MDQ6VXNlcjE3NjcwMTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/17670147?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NIC619",
    "html_url": "https://github.com/NIC619",
    "followers_url": "https://api.github.com/users/NIC619/followers",
    "following_url": "https://api.github.com/users/NIC619/following{/other_user}",
    "gists_url": "https://api.github.com/users/NIC619/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NIC619/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NIC619/subscriptions",
    "organizations_url": "https://api.github.com/users/NIC619/orgs",
    "repos_url": "https://api.github.com/users/NIC619/repos",
    "events_url": "https://api.github.com/users/NIC619/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NIC619/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 769749869,
      "node_id": "MDU6TGFiZWw3Njk3NDk4Njk=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/eth2.0",
      "name": "eth2.0",
      "color": "ff95ca",
      "default": false,
      "description": ""
    },
    {
      "id": 916505596,
      "node_id": "MDU6TGFiZWw5MTY1MDU1OTY=",
      "url": "https://api.github.com/repos/ethereum/py-evm/labels/Sharding%20-%20state%20layer",
      "name": "Sharding - state layer",
      "color": "0178aa",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-02-16T14:10:36Z",
  "updated_at": "2018-09-26T07:58:51Z",
  "closed_at": "2018-09-26T07:58:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\nDiscussion started in #326 which are about how to supply `salt` value to contract-creating transaction in Sharding where `CREATE2` style contract creation is implemented. `CREATE2` takes in a value `salt` and init code `code`, address of the new contract is derived from hashing these two values together: `sha3(salt | code)`.\r\n\r\nIn the short term,  we can simply add a `salt` field in transaction format, but this field is only useful in contract creation transactions. [EIP232](https://github.com/ethereum/EIPs/issues/232) provides a more elastic format which adopts the notion of a version(or format) number. With EIP232 we can assign different type of transaction with different version/format number which corresponds to different transaction format.\r\n\r\n### How can it be fixed\r\n\r\nImplement EIP232 in Sharding.\r\n@pipermerriam provides a rough sketch of the possible implementation in the thread(https://github.com/ethereum/py-evm/issues/326#issuecomment-362714619):\r\nQuote:\r\n```python\r\nclass EIP232Transaction(rlp.Serializable):\r\n    fields = (\r\n        ('version', ...),\r\n        ('inner_data', sedes.binary),\r\n    (\r\n    transaction_formats = {\r\n        1: TransactionFormatA,\r\n        2: TransactionFormatB,\r\n    }\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        self.txn_data = rlp.decode(self.inner_data, sedes=self.transaction_formats[self.version])\r\n\r\n    def __getattr__(self, name):\r\n        return getattr(self.txn_data, name)\r\n```\r\n> We have an outer transaction class which contains a mapping of version numbers to inner transaction classes. Then, during initialization, we decode the outer data packet, and then lookup the appropriate inner transaction class and use it to decode the inner data packet. Then we put some convenience APIs on the outer class to allow direct property access to the inner transaction properties.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/375/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/375/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/424622283",
    "html_url": "https://github.com/ethereum/py-evm/issues/375#issuecomment-424622283",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/375",
    "id": 424622283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDYyMjI4Mw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T07:58:51Z",
    "updated_at": "2018-09-26T07:58:51Z",
    "author_association": "MEMBER",
    "body": "deactivate",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/424622283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
