{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/1833",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/1833",
  "id": 483821188,
  "node_id": "MDU6SXNzdWU0ODM4MjExODg=",
  "number": 1833,
  "title": "Better handling of persist_checkpoint_header if header is already present.",
  "user": {
    "login": "cburgdorf",
    "id": 521109,
    "node_id": "MDQ6VXNlcjUyMTEwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cburgdorf",
    "html_url": "https://github.com/cburgdorf",
    "followers_url": "https://api.github.com/users/cburgdorf/followers",
    "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
    "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
    "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
    "repos_url": "https://api.github.com/users/cburgdorf/repos",
    "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-22T07:35:07Z",
  "updated_at": "2019-08-23T08:38:39Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nCiting @carver from https://github.com/ethereum/py-evm/pull/1830#pullrequestreview-278043892\r\n\r\n>Yeah, the only issue I can think of here is if the header was already present and some headers were persisted on top of it. In that case, the persist_checkpoint_header could either be ignored (so it's an idempotent call), or it could raise an exception. It should probably do one of those things, since rewinding the chain is probably not what we want.\r\n\r\nLet's assume we try to persist a checkpoint header and notice the header already exists, should we check the score of it? And what if it has a different score than the one we are trying to set? Should *that* trigger an exception? Or would that mean that we do in fact want to rewind the chain even though the header already exists (potentially with headers building on top of it)\r\n\r\n### How can it be fixed\r\n\r\nFirst need to define how exactly to handle the edge cases.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/1833/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/524105177",
    "html_url": "https://github.com/ethereum/py-evm/issues/1833#issuecomment-524105177",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833",
    "id": 524105177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDEwNTE3Nw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-22T22:42:29Z",
    "updated_at": "2019-08-22T22:42:29Z",
    "author_association": "MEMBER",
    "body": "My instinct:\r\n\r\n> Let's assume we try to persist a checkpoint header and notice the header already exists, should we check the score of it?\r\n\r\nYes\r\n\r\n> And what if it has a different score than the one we are trying to set?\r\n\r\nIf we have a locally computed score that's different, that's a fatal problem.\r\n\r\n> Should _that_ trigger an exception?\r\n\r\nYes\r\n\r\n> Or would that mean that we do in fact want to rewind the chain even though the header already exists (potentially with headers building on top of it)\r\n\r\nI don't think we should try to automatically recover from a situation that is so broken.\r\n\r\nIf at some point we can determine that the local score is fully computed from genesis, *maybe* we could just emit a warning that the user entered something wrong, and continue on. But that's a big if, and not worth adding the machinery to answer it now, I think. So we should just loudly die with as much information as we have.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/524105177/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/524227961",
    "html_url": "https://github.com/ethereum/py-evm/issues/1833#issuecomment-524227961",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/1833",
    "id": 524227961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDIyNzk2MQ==",
    "user": {
      "login": "cburgdorf",
      "id": 521109,
      "node_id": "MDQ6VXNlcjUyMTEwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cburgdorf",
      "html_url": "https://github.com/cburgdorf",
      "followers_url": "https://api.github.com/users/cburgdorf/followers",
      "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
      "repos_url": "https://api.github.com/users/cburgdorf/repos",
      "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-23T08:38:38Z",
    "updated_at": "2019-08-23T08:38:38Z",
    "author_association": "MEMBER",
    "body": "Thanks! That makes sense to me :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/524227961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
