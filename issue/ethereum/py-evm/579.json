{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/579/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/579/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/579/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/579",
  "id": 316043374,
  "node_id": "MDU6SXNzdWUzMTYwNDMzNzQ=",
  "number": 579,
  "title": "Ability to incrementally build a block",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-04-19T21:14:20Z",
  "updated_at": "2018-04-30T16:36:57Z",
  "closed_at": "2018-04-30T16:36:57Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What is wrong?\r\n\r\nThis PR added optimizations to the process of importing blocks https://github.com/ethereum/py-evm/pull/565\r\n\r\nThe underlying changes to `apply_transaction` are causing problems in eth-tester.  Now, there is no way to leave the chain in a *half* state with some transactions applied to the HEAD block.  This removes the ability to incrementally apply transactions to a block without digging into internals.\r\n\r\n### How can it be fixed\r\n\r\nNot sure but:\r\n\r\n- Need a way for `import_block` to delay building the transaction trie until the end of the block.\r\n- Need a way to do what the previous `apply_transaction` functionality did, executing the transaction and fully updating the pending block with the latest *state*.",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/579/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/579/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382882855",
    "html_url": "https://github.com/ethereum/py-evm/issues/579#issuecomment-382882855",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
    "id": 382882855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjg4Mjg1NQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T21:14:32Z",
    "updated_at": "2018-04-19T21:14:32Z",
    "author_association": "MEMBER",
    "body": "cc @gsalgado (just an FYI)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382882855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382883064",
    "html_url": "https://github.com/ethereum/py-evm/issues/579#issuecomment-382883064",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
    "id": 382883064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjg4MzA2NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T21:15:17Z",
    "updated_at": "2018-04-19T21:15:17Z",
    "author_association": "MEMBER",
    "body": "link: https://github.com/ethereum/eth-tester/issues/81",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382883064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382887270",
    "html_url": "https://github.com/ethereum/py-evm/issues/579#issuecomment-382887270",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
    "id": 382887270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjg4NzI3MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T21:31:39Z",
    "updated_at": "2018-04-19T21:31:39Z",
    "author_association": "MEMBER",
    "body": "Trying to reason about this....\r\n\r\nWhen doing a full block import we need to re-execute the block and verify that the final resulting block is identical to the input block.  Optimization here includes skipping rebuilding the receipt and transaction tries.\r\n\r\nWhen incrementally building a block we need to execute the transaction **and** build the transaction and receipt tries.\r\n\r\nThis seems like we should be able to fix this as follows by separating *concerns* to the appropriate level.\r\n\r\n- `Chain.apply_transaction()`\r\n  - delegates to `VM.apply_transaction()`\r\n- `VM.apply_transaction()`\r\n  - delegates to `State.apply_transaction()`\r\n  - updates local `VM.block.header.state_root`\r\n  - updates local `VM.block.transactions`\r\n  - updates local `VM.block.header.transactions_root`\r\n  - updates local `VM.block.header.receipts_root`\r\n  - updates local `VM.block.header.bloom`\r\n  - updates local `VM.block.header.gas_used`\r\n- `State.apply_transaction()`\r\n  - executes the transaction\r\n  - returns the `computations, receipt, state_root`  (modified from previously returning `block`.\r\n\r\nThis isn't exactly right, but the idea is to move *more* of the  block stuff up to the VM level so that `import_block` can strictly use the `State` level functions to shortcut the overhead of rebuilding each of these block/header values after each transaction is executed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/382887270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383017014",
    "html_url": "https://github.com/ethereum/py-evm/issues/579#issuecomment-383017014",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
    "id": 383017014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAxNzAxNA==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T08:03:17Z",
    "updated_at": "2018-04-20T08:03:17Z",
    "author_association": "MEMBER",
    "body": "> When doing a full block import we need to re-execute the block and verify that the final resulting block is identical to the input block. Optimization here includes skipping rebuilding the receipt and transaction tries.\r\n\r\nI don't think this is an optimization, really, but maybe my understanding is not correct. More below...\r\n\r\nI'm not familiar with eth-tester APIs but if we keep the current block's transactions/receipts in memory, we should only need to  generate the tx/receipt tries when finalizing the block, no? I mean, if the `transaction_root` and `receipt_root` are only needed to lookup the transactions/receipts from the DB, we shouldn't need to generate them if the txs/receipts are available from somewhere else, but even if there's a need for `transaction_root` and `receipt_root` to be exposed before a block is finalized, we could still calculate them on the fly when needed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383017014/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383136778",
    "html_url": "https://github.com/ethereum/py-evm/issues/579#issuecomment-383136778",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/579",
    "id": 383136778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzEzNjc3OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T15:40:53Z",
    "updated_at": "2018-04-20T15:40:53Z",
    "author_association": "MEMBER",
    "body": "I think you're probably right.  I think what we're really talking about here is shuffling around what *state* we store, where we store it, and what parts of the architecture are responsible for what",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/383136778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
