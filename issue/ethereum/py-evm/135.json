{
  "url": "https://api.github.com/repos/ethereum/py-evm/issues/135",
  "repository_url": "https://api.github.com/repos/ethereum/py-evm",
  "labels_url": "https://api.github.com/repos/ethereum/py-evm/issues/135/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/py-evm/issues/135/comments",
  "events_url": "https://api.github.com/repos/ethereum/py-evm/issues/135/events",
  "html_url": "https://github.com/ethereum/py-evm/issues/135",
  "id": 272554658,
  "node_id": "MDU6SXNzdWUyNzI1NTQ2NTg=",
  "number": 135,
  "title": "Some BaseChainDB methods may leave the database in an inconsistent state. ",
  "user": {
    "login": "gsalgado",
    "id": 412274,
    "node_id": "MDQ6VXNlcjQxMjI3NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gsalgado",
    "html_url": "https://github.com/gsalgado",
    "followers_url": "https://api.github.com/users/gsalgado/followers",
    "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
    "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
    "organizations_url": "https://api.github.com/users/gsalgado/orgs",
    "repos_url": "https://api.github.com/users/gsalgado/repos",
    "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gsalgado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-11-09T12:56:17Z",
  "updated_at": "2017-11-16T23:46:56Z",
  "closed_at": "2017-11-16T23:46:56Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "For instance, `persist_header_to_db()` stores the header in the DB, calculates the total difficulty for that block and then stores that in the DB as well, but it can crash when calculating the difficulty and in that case we'd end up with the header stored but without its total difficulty. \r\n\r\nThere are a few ways to address that:\r\n\r\n1. Use a database that supports ACID transactions\r\n2. Batch DB updates and apply them atomically\r\n3. Deal with it manually, with a bare except that rolls back updates\r\n\r\nNumber 1) is problematic because LevelDB does not support transactions, 3) is error prone and tedious, so I think 2) is our best option, but it means we need to add support for that to `MemoryDB` as well.",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/135/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/py-evm/issues/135/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/343288910",
    "html_url": "https://github.com/ethereum/py-evm/issues/135#issuecomment-343288910",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/135",
    "id": 343288910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzI4ODkxMA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-09T20:57:20Z",
    "updated_at": "2017-11-09T20:58:32Z",
    "author_association": "MEMBER",
    "body": "What about a wrapper that works for any KV store that I'll refer to as `BatchDB` until a better name surfaces.  It would present the following API\r\n\r\n```python\r\nwith BatchDB(db) as batch_db:\r\n    batch_db[b'a'] = b'arst'  # doesn't write the key to the database but rather to a local cache.\r\n    assert batch_db[b'a'] == b'arst'  # intelligently returns the value from the cache\r\n    batch_db[b'b'] = b'tsra'  \r\n# upon exiting the context, it writes all of the keys from the cache into the underlying database.\r\n```\r\n\r\nIn the case of an exception within the context block, no change would occur to the underlying database.  We could also implement an alternate API something like the following.\r\n\r\n```python\r\nbatch_db = BatchDB(db)\r\nbatch = batch_db.transaction()\r\nbatch[b'a'] = b'arst'\r\nbatch[b'b'] = b'tsra'\r\n\r\nbatch.commit()  # writes all the changes.\r\n```\r\n\r\nSeems simple enough and I think it fits loosely into option 2.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/343288910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/343417357",
    "html_url": "https://github.com/ethereum/py-evm/issues/135#issuecomment-343417357",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/135",
    "id": 343417357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQxNzM1Nw==",
    "user": {
      "login": "gsalgado",
      "id": 412274,
      "node_id": "MDQ6VXNlcjQxMjI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsalgado",
      "html_url": "https://github.com/gsalgado",
      "followers_url": "https://api.github.com/users/gsalgado/followers",
      "following_url": "https://api.github.com/users/gsalgado/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions",
      "organizations_url": "https://api.github.com/users/gsalgado/orgs",
      "repos_url": "https://api.github.com/users/gsalgado/repos",
      "events_url": "https://api.github.com/users/gsalgado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsalgado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T09:06:46Z",
    "updated_at": "2017-11-10T09:06:46Z",
    "author_association": "MEMBER",
    "body": "That is a nice API indeed. We'd still need the underlying KV stores to support batch updates, though, or else in our batch.commit() implementation we'd need to implement a rollback mechanism ourselves, in case anything fails while we're performing any of the updates",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/343417357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/345100042",
    "html_url": "https://github.com/ethereum/py-evm/issues/135#issuecomment-345100042",
    "issue_url": "https://api.github.com/repos/ethereum/py-evm/issues/135",
    "id": 345100042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTEwMDA0Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T23:46:56Z",
    "updated_at": "2017-11-16T23:46:56Z",
    "author_association": "MEMBER",
    "body": "I specified this in a separate ticket: https://github.com/pipermerriam/py-evm/issues/160",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/py-evm/issues/comments/345100042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
