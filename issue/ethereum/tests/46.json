{
  "url": "https://api.github.com/repos/ethereum/tests/issues/46",
  "repository_url": "https://api.github.com/repos/ethereum/tests",
  "labels_url": "https://api.github.com/repos/ethereum/tests/issues/46/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/tests/issues/46/comments",
  "events_url": "https://api.github.com/repos/ethereum/tests/issues/46/events",
  "html_url": "https://github.com/ethereum/tests/issues/46",
  "id": 52589763,
  "node_id": "MDU6SXNzdWU1MjU4OTc2Mw==",
  "number": 46,
  "title": "stSystemOperationsTest.json createNameRegistratorValueTooHigh -- problem",
  "user": {
    "login": "romanman",
    "id": 5822633,
    "node_id": "MDQ6VXNlcjU4MjI2MzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5822633?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/romanman",
    "html_url": "https://github.com/romanman",
    "followers_url": "https://api.github.com/users/romanman/followers",
    "following_url": "https://api.github.com/users/romanman/following{/other_user}",
    "gists_url": "https://api.github.com/users/romanman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/romanman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/romanman/subscriptions",
    "organizations_url": "https://api.github.com/users/romanman/orgs",
    "repos_url": "https://api.github.com/users/romanman/repos",
    "events_url": "https://api.github.com/users/romanman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/romanman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2014-12-21T08:23:24Z",
  "updated_at": "2014-12-23T08:28:28Z",
  "closed_at": "2014-12-22T11:36:41Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I think that exception should not happen.\n\n```\nroot@ip-10-167-187-237:~/cpp-poc-7/cpp-ethereum/build/test# ./testeth --log_level=test_suite --run_test=StateTests/userDefinedFileState --statetest /root/cpp-poc-7/tests/StateTests/stSystemOperationsTest.json createNameRegistratorValueTooHigh\nRunning 1 test case...\nEntering test suite \"EthereumTests\"\nEntering test suite \"StateTests\"\nEntering test case \"userDefinedFileState\"\n*** [ 08:18:49 | main ] Testing user defined test: /root/cpp-poc-7/tests/StateTests/stSystemOperationsTest.json\ncreateNameRegistratorValueTooHigh\n*** [ 08:18:50 | main ] state execution did throw an exception: /root/cpp-poc-7/cpp-ethereum/libethereum/Executive.cpp(77): Throw in function bool dev::eth::Executive::setup(dev::bytesConstRef)\nDynamic exception type: boost::exception_detail::clone_impl<dev::eth::NotEnoughCash>\nstd::exception::what: std::exception\n[dev::tag_required*] = 110000\n[dev::tag_got*] = 1000\n\nLeaving test case \"userDefinedFileState\"; testing time: 292969mks\nLeaving test suite \"StateTests\"\nLeaving test suite \"EthereumTests\"\n```\n",
  "closed_by": {
    "login": "CJentzsch",
    "id": 8452011,
    "node_id": "MDQ6VXNlcjg0NTIwMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CJentzsch",
    "html_url": "https://github.com/CJentzsch",
    "followers_url": "https://api.github.com/users/CJentzsch/followers",
    "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
    "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
    "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
    "repos_url": "https://api.github.com/users/CJentzsch/repos",
    "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/tests/issues/46/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/tests/issues/46/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67822435",
    "html_url": "https://github.com/ethereum/tests/issues/46#issuecomment-67822435",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/46",
    "id": 67822435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODIyNDM1",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-22T10:27:35Z",
    "updated_at": "2014-12-22T10:28:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why? In this test: value + gasPrice \\* gasLimit = 110000 > balance of sender , and there are only 1000 wei on the account, so this transaction can not be executed (NotEnoughCash exception)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67822435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67822781",
    "html_url": "https://github.com/ethereum/tests/issues/46#issuecomment-67822781",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/46",
    "id": 67822781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODIyNzgx",
    "user": {
      "login": "romanman",
      "id": 5822633,
      "node_id": "MDQ6VXNlcjU4MjI2MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5822633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanman",
      "html_url": "https://github.com/romanman",
      "followers_url": "https://api.github.com/users/romanman/followers",
      "following_url": "https://api.github.com/users/romanman/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanman/subscriptions",
      "organizations_url": "https://api.github.com/users/romanman/orgs",
      "repos_url": "https://api.github.com/users/romanman/repos",
      "events_url": "https://api.github.com/users/romanman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-22T10:31:26Z",
    "updated_at": "2014-12-22T10:31:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, so here the thing : it's sort of hustle to get an exception\nout of testcase, maybe it would be better to get a normal \nexecution and validate the exception on post , what do you think ? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67822781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67828030",
    "html_url": "https://github.com/ethereum/tests/issues/46#issuecomment-67828030",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/46",
    "id": 67828030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODI4MDMw",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-22T11:36:41Z",
    "updated_at": "2014-12-22T11:36:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "It a \"safe exception\" your program should not crash because of it. It as \"normal\" behaviour. You see in the post state that the nonce has not changed, so no tansaction has been executed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67828030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67849625",
    "html_url": "https://github.com/ethereum/tests/issues/46#issuecomment-67849625",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/46",
    "id": 67849625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODQ5NjI1",
    "user": {
      "login": "romanman",
      "id": 5822633,
      "node_id": "MDQ6VXNlcjU4MjI2MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5822633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanman",
      "html_url": "https://github.com/romanman",
      "followers_url": "https://api.github.com/users/romanman/followers",
      "following_url": "https://api.github.com/users/romanman/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanman/subscriptions",
      "organizations_url": "https://api.github.com/users/romanman/orgs",
      "repos_url": "https://api.github.com/users/romanman/repos",
      "events_url": "https://api.github.com/users/romanman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-22T15:30:51Z",
    "updated_at": "2014-12-22T15:30:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CJentzsch : \nyeah I do understand that , I am just want to improve the testing\nprocess , today I don't have a methodology to test for exception: \n\nmy offer is to introduce something like: `post-exception:{ \"NotEnoughCash\" }`\nsection in the json file.\n\nwhat do you think ? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67849625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67930488",
    "html_url": "https://github.com/ethereum/tests/issues/46#issuecomment-67930488",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/46",
    "id": 67930488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTMwNDg4",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T08:28:28Z",
    "updated_at": "2014-12-23T08:28:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Exception in ethereum are all well defined. So they are not real exceptions like in a programm, describing exceptional behaviour. Every thing a user can do is valid, and in the test you have a clear post state after the attempted transaction. You do not need to test for exception, or whatever a single client does, the only important part is, that you have the same post state, so that all clients have consensus. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/67930488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
