{
  "url": "https://api.github.com/repos/ethereum/tests/issues/1130",
  "repository_url": "https://api.github.com/repos/ethereum/tests",
  "labels_url": "https://api.github.com/repos/ethereum/tests/issues/1130/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/tests/issues/1130/comments",
  "events_url": "https://api.github.com/repos/ethereum/tests/issues/1130/events",
  "html_url": "https://github.com/ethereum/tests/issues/1130",
  "id": 1517704002,
  "node_id": "I_kwDOAO0i585adlNC",
  "number": 1130,
  "title": "EOF test vectors format",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-01-03T17:26:09Z",
  "updated_at": "2023-01-10T19:06:46Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Following the EOF specific tests suggestion:\r\nthe simple vectors format that will check if the given eof code valid or not \r\ngeneratable with t8n \r\n```\r\n\r\n\"Filler\"\r\n{\r\n    \"testname\" : \r\n    {\r\n        \"data\" : [\r\n            \":raw 0xeof\",\r\n            \":label code :raw 0xeof2\",\r\n            \":yul-eof {...}\",\r\n        ],\r\n        \"expect\" : [\r\n            {\r\n                \"indexes\" : {\r\n                        \"data\" : 1\r\n                },\r\n                \"network\" : [\">=Berlin\"],\r\n                \"result\" : true\r\n            },\r\n           {\r\n                \"indexes\" : {\r\n                        \"data\" : \":label code\"\r\n                },\r\n                \"network\" : [\">=Berlin\"],\r\n                \"result\" : true\r\n            },\r\n           {\r\n                \"indexes\" : {\r\n                        \"data\" : \":label invalid_code\"\r\n                },\r\n                \"network\" : [\">=Berlin\"],\r\n                \"result\" : false,\r\n                \"expectException\" : {\r\n                    \">=Berlin\" : \"EOF_INVALID_HEADER\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\"Test\"\r\n{\r\n    \"testname\" : \r\n    [\r\n        {\r\n            \"index\" : \"0\",\r\n            \"code\" : \"0xeof0\",\r\n            \"results\" : \r\n            {\r\n                \"Berlin\" : {\r\n                      \"result\" : false,\r\n                      \"exception\" : \"EOF_INVALID_HEADER\"\r\n                 },\r\n                \"Shanghai\" : {\r\n                      \"result\" : true\r\n                 }\r\n            }\r\n        },\r\n        {\r\n            \"index\" : \"1\",\r\n            \"code\" : \"0xeof2\",\r\n            \"results\" : \r\n            {\r\n                \"Berlin\" : {\r\n                      \"result\" : false,\r\n                      \"exception\" : \"EOF_INVALID_HEADER\"\r\n                 }\r\n                \"Shanghai\" : {\r\n                      \"result\" : false,\r\n                      \"exception\" : \"EOF_INVALID_HEADER\"\r\n                 }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/tests/issues/1130/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/tests/issues/1130/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370039184",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370039184",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370039184,
    "node_id": "IC_kwDOAO0i585RqSOQ",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T17:28:45Z",
    "updated_at": "2023-01-03T17:28:45Z",
    "author_association": "MEMBER",
    "body": "Might also be interesting to have error codes passed out and standardized?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370039184/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370041913",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370041913",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370041913,
    "node_id": "IC_kwDOAO0i585RqS45",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T17:31:27Z",
    "updated_at": "2023-01-03T17:31:27Z",
    "author_association": "MEMBER",
    "body": "yes. t8n tool report to stderror error message that we can check against ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370041913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370080414",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370080414",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370080414,
    "node_id": "IC_kwDOAO0i585RqcSe",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T18:13:14Z",
    "updated_at": "2023-01-03T18:13:14Z",
    "author_association": "MEMBER",
    "body": "Can also combine expect and data ibto one object and that seals one test code, one exception.\n\nOr if its better in state test style when you can assign one exception for many test vectors?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370080414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370085114",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370085114",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370085114,
    "node_id": "IC_kwDOAO0i585Rqdb6",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T18:18:38Z",
    "updated_at": "2023-01-03T18:18:38Z",
    "author_association": "MEMBER",
    "body": "I think the filled vectors should be as simple and verbose as possible. I don't have any strong preference on how the filler looks or what optimizations are there.\r\n\r\nOne other comment: why is `\"testname\"` an array? Wouldn't you want each test to have a name and only one input and an output for each fork it is filled against?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370085114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370197186",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370197186",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370197186,
    "node_id": "IC_kwDOAO0i585Rq4zC",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T20:31:08Z",
    "updated_at": "2023-01-03T20:31:08Z",
    "author_association": "MEMBER",
    "body": "> Wouldn't you want each test to have a name and only one input and an output for each fork it is filled against?\r\n\r\nNot necessarily, we might want to group related tests together. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370197186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370198376",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370198376",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370198376,
    "node_id": "IC_kwDOAO0i585Rq5Fo",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T20:32:41Z",
    "updated_at": "2023-01-03T20:33:15Z",
    "author_association": "MEMBER",
    "body": "> ```\r\n> \"data\" : [\r\n>             \":raw 0xeof\",\r\n>             \":label code :raw 0xeof2\",\r\n>             \":yul-eof {...}\",\r\n>         ],\r\n> ```\r\n\r\nI would appreciate the ability to have multiple lines in raw code, because that will let me put comments at exactly the right place. \r\n\r\nAnd of course I want to write fillers in yml, not JSON.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370198376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370208518",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1370208518",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1370208518,
    "node_id": "IC_kwDOAO0i585Rq7kG",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T20:46:25Z",
    "updated_at": "2023-01-03T20:46:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Being able to comment within code strings would be a great help to pinpoint what exactly is being tested.\r\n\r\n```\r\n\":label CALL :raw 0xef0001 010008 020002-000c-0002 030000 00 \r\n# 7 inputs 1 output,\r\n00000007-07010007 \r\n59-59-59-59-59-59-59-b00001-50-b1\r\n# No immediate data\r\nf1-b1\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1370208518/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1377720427",
    "html_url": "https://github.com/ethereum/tests/issues/1130#issuecomment-1377720427",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1130",
    "id": 1377720427,
    "node_id": "IC_kwDOAO0i585SHlhr",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-10T19:06:46Z",
    "updated_at": "2023-01-10T19:06:46Z",
    "author_association": "MEMBER",
    "body": "Gently bumping again that I would much prefer the filled tests be direct mappings of sting -> test rather than to a list of tests. I've generated some reference tests of this format from the fuzzing corpus Martin put together: https://gist.github.com/lightclient/3442c744e03c58435c7b50013733481d",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1377720427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
