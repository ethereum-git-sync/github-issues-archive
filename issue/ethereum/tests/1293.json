{
  "url": "https://api.github.com/repos/ethereum/tests/issues/1293",
  "repository_url": "https://api.github.com/repos/ethereum/tests",
  "labels_url": "https://api.github.com/repos/ethereum/tests/issues/1293/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/tests/issues/1293/comments",
  "events_url": "https://api.github.com/repos/ethereum/tests/issues/1293/events",
  "html_url": "https://github.com/ethereum/tests/issues/1293",
  "id": 1901418638,
  "node_id": "I_kwDOAO0i585xVViO",
  "number": 1293,
  "title": "Transcript invalid blocks in blockchain tests",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2023-09-18T17:25:05Z",
  "updated_at": "2023-09-19T08:14:51Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "evmone does not support rlp. Maybe some others too.\n\nThe current blockchain tests that have invalid blocks describe invalid block as rlp field only. And valid block as rlp and its json decoding into transactions, blockheader, etc.\n\nSince long time tests now have expected exceptions, and all invalid rlp tests are moved to rlp tests.\nSo the invalid blocks must be valid rlps just expected to be rejected.\n\nProposal is to parse block from test as invalid if it has expected exception other then that invalid block will have all the same fields in tests as a valid one.\n\nAffected: custom test runner tools\nBackwards compatibility: legacy tests will break.\n\nQuestion to the teams is this easy to implement in tools, is it ok? Some code might be hardcoded to expect rlp section only. \n\nAlternatively can have invalid blocks transcripted but in a different way than valid. Putting the json transcription into sub json section for instance.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/tests/issues/1293/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/tests/issues/1293/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724201513",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724201513",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724201513,
    "node_id": "IC_kwDOAO0i585mxTop",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T18:58:44Z",
    "updated_at": "2023-09-18T18:59:47Z",
    "author_association": "MEMBER",
    "body": "> evmone does not support rlp. Maybe some others too.\r\n\r\nIt is not possible for an ethereum mainnet EL client to not support rlp. Since evmone implements only the evm-part, they may pull it off, but it's definitely the odd one out. \r\n\r\n> all invalid rlp tests are moved to rlp tests.\r\n\r\nThat is good, because testing valid/invalid rlp is a much simpler proposition than testing validity of blocks. \r\n\r\n>  So the invalid blocks must be valid rlps just expected to be rejected.\r\n\r\nRight. Yes, definitely, exactly like If we were to describe them in `json`, then we'd have to use valid `json`. \r\n\r\n> Proposal is to parse block from test as invalid if it has expected exception other then that invalid block will have all the same fields in tests as a valid one.\r\n\r\nPlease clarify the proposal. Here is how I read it: \r\n\r\n> If the test has an `expected exception` field, then the block is supposed to be found `invalid`.\r\n\r\nBut I must be missing something, what am I missing?\r\n \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724201513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724264864",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724264864",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724264864,
    "node_id": "IC_kwDOAO0i585mxjGg",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T19:45:12Z",
    "updated_at": "2023-09-18T19:45:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Besu has their EVM code in a severable library, but our reference test code is still part of the whole ethereum client.  This is because some of the tests, as mentioned, depend on things like RLP and block validation which are not EVM concerns but block building concerns.\r\n\r\nIt would be nice if there was a clear subsection of the code that was RLP and block free (GeneralStateTests is mostly there, if not completely) but I don't see Besu ever not running full block tests, and that makes block free testing moot.  So I would say Besu is neither in favor nor opposed to removing rlp from regular tests.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724264864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724328382",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724328382",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724328382,
    "node_id": "IC_kwDOAO0i585mxym-",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T20:31:49Z",
    "updated_at": "2023-09-18T20:31:49Z",
    "author_association": "MEMBER",
    "body": "Rlp is not removed. It's an issue of parsing by the test runners.\n\nOld legacytests remain having only rlp field for invalid blocks.\nAnd rlp + json for valid.\n\nNew proposal:\n`exception + rlp + json` for invalid blocks.\n`No exception + rlp + json` for valid blocks.\n\nBecause there are many test runner tools I never change filled test format severely so not to break things.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724328382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724332396",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724332396",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724332396,
    "node_id": "IC_kwDOAO0i585mxzls",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T20:35:03Z",
    "updated_at": "2023-09-18T20:35:03Z",
    "author_association": "MEMBER",
    "body": "\n> Please clarify the proposal. Here is how I read it: \n> \n> > If the test has an `expected exception` field, then the block is supposed to be found `invalid`.\n> \n> But I must be missing something, what am I missing?\n>  \n> \n> \n\nYou got it right. \nYou missing that legacy tests will remain with rlp only for invalid blocks. And that introduction of json fields for invalid blocks might break the test runners that don't expect it there for invalid blocks and ignore expected exception field.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724332396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724684493",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724684493",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724684493,
    "node_id": "IC_kwDOAO0i585mzJjN",
    "user": {
      "login": "jangko",
      "id": 2784755,
      "node_id": "MDQ6VXNlcjI3ODQ3NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2784755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jangko",
      "html_url": "https://github.com/jangko",
      "followers_url": "https://api.github.com/users/jangko/followers",
      "following_url": "https://api.github.com/users/jangko/following{/other_user}",
      "gists_url": "https://api.github.com/users/jangko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jangko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jangko/subscriptions",
      "organizations_url": "https://api.github.com/users/jangko/orgs",
      "repos_url": "https://api.github.com/users/jangko/repos",
      "events_url": "https://api.github.com/users/jangko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jangko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T01:08:37Z",
    "updated_at": "2023-09-19T01:08:37Z",
    "author_association": "MEMBER",
    "body": "It will break nimbus-eth1 test, but it's easy to fix.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724684493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724888306",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724888306",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724888306,
    "node_id": "IC_kwDOAO0i585mz7Ty",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T06:14:33Z",
    "updated_at": "2023-09-19T06:14:33Z",
    "author_association": "MEMBER",
    "body": "Here is another option. That should be backwards compatible \r\n\r\n```\r\n\"rlp\" : \"0xf...\",\r\n\"rlp_decoded\" : {\r\n    \"blockheader\",\r\n    \"transactions\",\r\n    ...\r\n}\r\n```\r\n\r\nFor invalid blocks. For valid no change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724888306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724975126",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1724975126",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1724975126,
    "node_id": "IC_kwDOAO0i585m0QgW",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T07:31:36Z",
    "updated_at": "2023-09-19T07:31:36Z",
    "author_association": "MEMBER",
    "body": "I think the proposal should not be problematic to implement, for geth, however I do think it will lead to more problems. Decoding an rlp block is very simple, whereas decoding a `json`-structure into a block can be very ambiguous. \r\n\r\nA field missing from `json` can be interpreteted as `0`, in the case of `int` types. To clarify: For go-lang, a field defined as a non-pointer type is default initialized to the zero value, `0` for integers. In order to handle the case that something is not present, we need to know that beforehand and define it as an int-pointer. Therefore, say you want to create an \"invalid\" block that is missing a timestamp field in the header. In `rlp`, you would omit one of the fields, the field that representts the timestamp. In `json`, if you omit it, clients can choose wheher to implicitly assign it or not. \r\n\r\nSimilarly, if you want to add an extra field (perhaps an upcoming field, such as the beaconroot).  In `rlp`, you just shove it into the rlp-stream and bob's your uncle. In `json`, you'd add a `beacon_root` or whatever to the struct. Now, in go-lang, extraneous fields that are not defined are just ignored. So if geth is not defined to know that there exists a field called `beacon_root`, it will just not care about it. \r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1724975126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1725025163",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1725025163",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1725025163,
    "node_id": "IC_kwDOAO0i585m0cuL",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T08:07:49Z",
    "updated_at": "2023-09-19T08:07:49Z",
    "author_association": "MEMBER",
    "body": "You totally missing the point.\r\nRlp does not go anywhere. It remains there for invalid blocks.\r\nHow evmone going to construct blocks from json is their problem. Ideally you just ignore json representation of it, as you do for valid blocks. Just that the defenition of invalid block in blockchain test may conflict with the defenition of valid block if it also will have the json transcript. \r\n\r\nJson representation is there for the user btw, not to construct blocks from it. Hive works with rlps.\r\n\r\nBtw invalid header you describe is more of a structure test than a blockchain. Like we have in transaction tests. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1725025163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1725034506",
    "html_url": "https://github.com/ethereum/tests/issues/1293#issuecomment-1725034506",
    "issue_url": "https://api.github.com/repos/ethereum/tests/issues/1293",
    "id": 1725034506,
    "node_id": "IC_kwDOAO0i585m0fAK",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T08:14:51Z",
    "updated_at": "2023-09-19T08:14:51Z",
    "author_association": "MEMBER",
    "body": "Alright, well if the json is only there for decoration, then sure, not a problem for us",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/tests/issues/comments/1725034506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
