{
  "url": "https://api.github.com/repos/ethereum/tests/issues/487",
  "repository_url": "https://api.github.com/repos/ethereum/tests",
  "labels_url": "https://api.github.com/repos/ethereum/tests/issues/487/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/tests/issues/487/comments",
  "events_url": "https://api.github.com/repos/ethereum/tests/issues/487/events",
  "html_url": "https://github.com/ethereum/tests/issues/487",
  "id": 350921464,
  "node_id": "MDU6SXNzdWUzNTA5MjE0NjQ=",
  "number": 487,
  "title": "Thunder ideas for testing the EVM",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72763898,
      "node_id": "MDU6TGFiZWw3Mjc2Mzg5OA==",
      "url": "https://api.github.com/repos/ethereum/tests/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 666869651,
      "node_id": "MDU6TGFiZWw2NjY4Njk2NTE=",
      "url": "https://api.github.com/repos/ethereum/tests/labels/up-for-grabs",
      "name": "up-for-grabs",
      "color": "c2e0c6",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2018-08-15T18:46:21Z",
  "updated_at": "2018-08-15T18:47:17Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Rough outline of factors this contract should test for:\r\nbuilt in functions\r\n\r\n* big state writes\r\n* many state writes\r\n* big state reads\r\n* many state reads\r\n* state reads from very old data\r\n* many EVM operations (TODO outline diff types of EVM operations)\r\n* failing\r\n\r\nNote 1: that each of these functions should be dependent on some input data such that we can chain it with read operations to simulate waiting on disk reads.\r\n\r\nNote 2: read operations are log(N) where N is num entries in leveldb kv store so we would expect different results based on size of leveldb.\r\n\r\nNote 3: old data takes longer to access than newly written data from statedb, so the smart contract must be able to read state from itself that it wrote a long time ago.\r\n\r\nI think one design is to have functions emulating each of the above functionality and have the public interface be something like:\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/tests/issues/487/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/tests/issues/487/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
