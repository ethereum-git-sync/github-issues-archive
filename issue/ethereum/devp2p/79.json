{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/79/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/79/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/79/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/79",
  "id": 431463980,
  "node_id": "MDU6SXNzdWU0MzE0NjM5ODA=",
  "number": 79,
  "title": "discv5: choose findnode parameter",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/devp2p/milestones/2",
    "html_url": "https://github.com/ethereum/devp2p/milestone/2",
    "labels_url": "https://api.github.com/repos/ethereum/devp2p/milestones/2/labels",
    "id": 4220807,
    "node_id": "MDk6TWlsZXN0b25lNDIyMDgwNw==",
    "number": 2,
    "title": "Discovery v5.1",
    "description": "",
    "creator": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 22,
    "state": "closed",
    "created_at": "2019-04-11T11:36:18Z",
    "updated_at": "2020-10-07T19:09:49Z",
    "due_on": null,
    "closed_at": "2020-10-07T19:09:49Z"
  },
  "comments": 7,
  "created_at": "2019-04-10T12:01:28Z",
  "updated_at": "2019-08-04T21:38:52Z",
  "closed_at": "2019-08-04T21:38:52Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "In discovery v4, FINDNODE queries for nodes close to a certain public key.  \r\nIn the discovery v5 draft, we made it query for nodes in a given bucket instead.\r\n\r\nWhile implementing discv5, I noticed that querying by bucket doesn't work at all for small networks (i.e. ones with 10 nodes or less) because FINDNODE will just receive an empty response for most queries.\r\n\r\nShould we extend FINDNODE to also return nodes from neighboring buckets or switch back to querying by hash?",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/79/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/79/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481817043",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-481817043",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 481817043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgxNzA0Mw==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T18:50:21Z",
    "updated_at": "2019-04-10T20:03:18Z",
    "author_association": "MEMBER",
    "body": "I did think the issue through and requesting buckets may be a good idea after all if we request a few buckets instead of just one. Example:\r\n- node A address: 01001101\r\n- target address: 01100111\r\n- A xor target: 00101010\r\n\r\nIf you want to get all N nodes where (N xor target)<(A xor target) then you need to request the buckets where the corresponding bits of (A xor target) are 1. In this example 3, 5, 7 if bucket 1 is the lowers bucket with nodes where MSB is different.\r\nIf you request all of these buckets then you effectively give away your target address and in return also get exactly the same results. The lowest bucket provides the potentially most valuable results (closest to target) so if there are a lot of nodes in the DHT then you probably only need the lowest (or 2-3 lowest) buckets and you can also retain most of the info about your target. If the DHT is small and you don't get enough results you can still try requesting higher buckets.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481817043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481818676",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-481818676",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 481818676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgxODY3Ng==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T18:54:44Z",
    "updated_at": "2019-04-10T18:54:44Z",
    "author_association": "MEMBER",
    "body": "It is worth considering to allow specifying multiple buckets in the findNode packet. If there are too many results the lower buckets should have precedence. If the highest bucket is lower than one of the requested ones then the relevant entries can be filtered out from the contents of the highest bucket.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481818676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481848847",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-481848847",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 481848847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg0ODg0Nw==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T20:26:37Z",
    "updated_at": "2019-04-10T20:26:37Z",
    "author_association": "MEMBER",
    "body": "My current thinking is that this is an 'almost' non-issue. If the network size is so small that there is a non-trivial chance all other nodes are outside of the requested bucket, you can just request the next bucket, incurring a minor network overhead under rare circumstances.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481848847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481867688",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-481867688",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 481867688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg2NzY4OA==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T21:13:48Z",
    "updated_at": "2019-04-10T21:13:48Z",
    "author_association": "MEMBER",
    "body": "I'm fine with single-bucket requests too. We had a discussion with Felix today about whether bucket requests are a good idea at all and the main point of my comments is that my answer is a definite yes (with the addition that we should request multiple buckets corresponding to `A xor target` bits if necessary).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481867688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481874368",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-481874368",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 481874368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg3NDM2OA==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T21:36:08Z",
    "updated_at": "2019-04-11T07:48:01Z",
    "author_association": "MEMBER",
    "body": "Yes agreed. bucket requests are a radical improvement. Kademlia was originally designed in a context where it was assumed network participants were altruistic and trying to share content. Eg file sharing. Requesting close nodes by hash places trust on the remote peer they will abide by distance metric. We already had accidental eclipse scenario with mismatched parity implementation as a result. I don't easily see a better solution\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481874368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482051318",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-482051318",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 482051318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjA1MTMxOA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T10:00:41Z",
    "updated_at": "2019-04-11T10:00:41Z",
    "author_association": "MEMBER",
    "body": "I really want to avoid re-requesting with a different bucket because it will complicate the implementation a lot. Will try working in FINDNODE with multiple buckets.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482051318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482157722",
    "html_url": "https://github.com/ethereum/devp2p/issues/79#issuecomment-482157722",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/79",
    "id": 482157722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjE1NzcyMg==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T15:16:43Z",
    "updated_at": "2019-04-11T15:16:43Z",
    "author_association": "MEMBER",
    "body": "I think the approach should be that this is a non-issue. If there is a really small network with an unfortunate set of id's , such that a node cannot find other nodes, then that node should try re-booting with a different random target, or some such thing. I don't see this as a protocol issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482157722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
