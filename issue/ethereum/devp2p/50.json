{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/50/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/50/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/50/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/50",
  "id": 365158515,
  "node_id": "MDU6SXNzdWUzNjUxNTg1MTU=",
  "number": 50,
  "title": "EIP-1459: Node Discovery via DNS",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1272598186,
      "node_id": "MDU6TGFiZWwxMjcyNTk4MTg2",
      "url": "https://api.github.com/repos/ethereum/devp2p/labels/proposal",
      "name": "proposal",
      "color": "bffc9f",
      "default": false,
      "description": "Ideas and proposals related to devp2p"
    },
    {
      "id": 1272804162,
      "node_id": "MDU6TGFiZWwxMjcyODA0MTYy",
      "url": "https://api.github.com/repos/ethereum/devp2p/labels/eip",
      "name": "eip",
      "color": "e04595",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-09-29T19:03:16Z",
  "updated_at": "2022-11-17T11:12:14Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://eips.ethereum.org/EIPS/eip-1459\r\n\r\nThis issue is for discussion of the DNS-based discovery mechanism.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/50/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/50/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/426667848",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-426667848",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 426667848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY2Nzg0OA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T14:54:22Z",
    "updated_at": "2018-10-03T15:01:57Z",
    "author_association": "MEMBER",
    "body": "While working on the go implementation of the EIP, I realized that it might be better to split the 'link' tree from the 'enr' tree. This is better because clients want to track all the links, but don't necessarily want to download the entire tree to find them all. \r\n\r\nHaving all the links is important to make the web-of-trust work: the client starts with a single 'main' tree and discovers additional trees through links. When a link is deleted from the main tree, the client should stop following the linked tree. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/426667848/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/427561561",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-427561561",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 427561561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU2MTU2MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-06T10:00:52Z",
    "updated_at": "2018-10-06T10:00:52Z",
    "author_association": "MEMBER",
    "body": "Note to myself: the plan for creating up-to-date lists is to resolve records through the DHT before generating the tree. The code that does this should check whether there are any changes to record content. If the record found in DHT has identical content but a higher sequence number, it's better to include the older record in the tree to avoid pointless updates. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/427561561/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/430245116",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-430245116",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 430245116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI0NTExNg==",
    "user": {
      "login": "divan",
      "id": 880202,
      "node_id": "MDQ6VXNlcjg4MDIwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/880202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divan",
      "html_url": "https://github.com/divan",
      "followers_url": "https://api.github.com/users/divan/followers",
      "following_url": "https://api.github.com/users/divan/following{/other_user}",
      "gists_url": "https://api.github.com/users/divan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divan/subscriptions",
      "organizations_url": "https://api.github.com/users/divan/orgs",
      "repos_url": "https://api.github.com/users/divan/repos",
      "events_url": "https://api.github.com/users/divan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T13:50:48Z",
    "updated_at": "2018-10-16T13:50:48Z",
    "author_association": "NONE",
    "body": "What weight is on the \"always available\" part of rationale?\r\n\r\nAt Status.im we've been exploring different ways of distributing bootnodes' information, and DNS was one of the options, but we're assuming adversary environments, where ISPs are not our friends. It quickly became obvious that in public places (airports, shopping malls, public wifis, etc), DNS is often blocked on transport layer and only Access Point's own DNS server is permitted to use. For the scenarios where the government is actively trying to shut down the service, DNS is a an extremely easy target to control due to its hierarchical nature.\r\n\r\nI know our use case is a bit different, but adding it to discussion anyway.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/430245116/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/430280000",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-430280000",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 430280000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI4MDAwMA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T15:20:38Z",
    "updated_at": "2018-10-16T15:20:38Z",
    "author_association": "MEMBER",
    "body": "By \"always available\", I meant that DNS is widely deployed and you'll always have a name server within reach. That doesn't say the name server will be good. It's worth noting that the server can't modify the node list because it's signed. It can censor it, but any form of network communication can be censored.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/430280000/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/533125643",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-533125643",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 533125643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzEyNTY0Mw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-19T13:16:38Z",
    "updated_at": "2019-09-19T13:16:38Z",
    "author_association": "MEMBER",
    "body": "Go implementation: https://github.com/ethereum/go-ethereum/pull/20094\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/533125643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/542090786",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-542090786",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 542090786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjA5MDc4Ng==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T08:03:27Z",
    "updated_at": "2019-10-15T08:03:27Z",
    "author_association": "MEMBER",
    "body": "Spec update: https://github.com/ethereum/EIPs/pull/2313\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/542090786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1141320110",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-1141320110",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 1141320110,
    "node_id": "IC_kwDOAcJRYs5EBymu",
    "user": {
      "login": "nmaskens",
      "id": 66023811,
      "node_id": "MDQ6VXNlcjY2MDIzODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66023811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmaskens",
      "html_url": "https://github.com/nmaskens",
      "followers_url": "https://api.github.com/users/nmaskens/followers",
      "following_url": "https://api.github.com/users/nmaskens/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmaskens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmaskens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmaskens/subscriptions",
      "organizations_url": "https://api.github.com/users/nmaskens/orgs",
      "repos_url": "https://api.github.com/users/nmaskens/repos",
      "events_url": "https://api.github.com/users/nmaskens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmaskens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-30T16:14:55Z",
    "updated_at": "2022-05-30T16:14:55Z",
    "author_association": "NONE",
    "body": "> What weight is on the \"always available\" part of rationale?\r\n> \r\n> At Status.im we've been exploring different ways of distributing bootnodes' information, and DNS was one of the options, but we're assuming adversary environments, where ISPs are not our friends. It quickly became obvious that in public places (airports, shopping malls, public wifis, etc), DNS is often blocked on transport layer and only Access Point's own DNS server is permitted to use. For the scenarios where the government is actively trying to shut down the service, DNS is a an extremely easy target to control due to its hierarchical nature.\r\n> \r\n> I know our use case is a bit different, but adding it to discussion anyway.\r\n\r\nIs ENS a viable alternative?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1141320110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1318465133",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-1318465133",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 1318465133,
    "node_id": "IC_kwDOAcJRYs5Oli5t",
    "user": {
      "login": "317787106",
      "id": 23312631,
      "node_id": "MDQ6VXNlcjIzMzEyNjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/23312631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/317787106",
      "html_url": "https://github.com/317787106",
      "followers_url": "https://api.github.com/users/317787106/followers",
      "following_url": "https://api.github.com/users/317787106/following{/other_user}",
      "gists_url": "https://api.github.com/users/317787106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/317787106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/317787106/subscriptions",
      "organizations_url": "https://api.github.com/users/317787106/orgs",
      "repos_url": "https://api.github.com/users/317787106/repos",
      "events_url": "https://api.github.com/users/317787106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/317787106/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T11:04:03Z",
    "updated_at": "2022-11-17T11:04:03Z",
    "author_association": "NONE",
    "body": "I am very interesting at the DNS discovery, but the module seems a little complicate. Can you specify some scenario of dns discovery service? what's the fallback option when connectivity to the discovery DHT is unavailable as explained at https://geth.ethereum.org/docs/developers/dns-discovery-setup ?  if we supply an api such as get_all_nodes or get_random_node by the fullnode, this is very simple. Is there some advantage?  Thank you very much.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1318465133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1318475289",
    "html_url": "https://github.com/ethereum/devp2p/issues/50#issuecomment-1318475289",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/50",
    "id": 1318475289,
    "node_id": "IC_kwDOAcJRYs5OllYZ",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T11:12:14Z",
    "updated_at": "2022-11-17T11:12:14Z",
    "author_association": "MEMBER",
    "body": "@317787106 We have two separate peer discovery mechanisms right now: (1) the DHT (2) the DNS discovery. Both of them can be used to find peers to connect to. The DNS discovery is the 'fallback' in case the connection to DHT cannot be established.\r\n\r\nThe API idea `get_all_nodes` you are suggesting would not work so well, because every node would need to ask this API for nodes in the beginning. We use the DNS instead because it is easier to scale and easier to provide this 'common endpoint'.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/1318475289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
