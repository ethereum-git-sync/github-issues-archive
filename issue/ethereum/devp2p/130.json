{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/130/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/130/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/130/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/130",
  "id": 529248938,
  "node_id": "MDU6SXNzdWU1MjkyNDg5Mzg=",
  "number": 130,
  "title": "Discv5 issues",
  "user": {
    "login": "zilm13",
    "id": 6196452,
    "node_id": "MDQ6VXNlcjYxOTY0NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zilm13",
    "html_url": "https://github.com/zilm13",
    "followers_url": "https://api.github.com/users/zilm13/followers",
    "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
    "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
    "organizations_url": "https://api.github.com/users/zilm13/orgs",
    "repos_url": "https://api.github.com/users/zilm13/repos",
    "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zilm13/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2019-11-27T10:17:09Z",
  "updated_at": "2020-01-28T17:42:54Z",
  "closed_at": "2020-01-28T17:42:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "We've finished implementation of `discv5` without topics in Harmony and I have some feedback about the spec. A lot of work done, @fjl ,and we could move it further. Could we improve the spec in some of these ways?\r\n\r\n1. `FINDNODE` message replies only with peers with exact distance from recipient. So, how could we find 50 closest nodes, for example? Spamming messages with 0-200 distances, all with empty answers, and then, messages with nodes starting to appear. Of course, we could start from 255 and go down, but we need closest, yeah? \r\n2. Node ID derivation function is not defined anywhere in v5. Maybe it's somewhere in v4, but I have not found it in v5 spec.\r\n3. Spec isn't written in DDD way and a lot of things have different names in spec and in Go implementation. For example, `initiatorKey` and `recipientKey`  are called `writeKey` and `readKey` respectively. It's much better when all things have the same names in specification and in code, especially when you need to refer to the implementation to clarify understanding.  \r\n4. `id` field in ENR (not this spec, but related) could appear in any place. And it looks a bit oddly: you have the signature, but you don't have its type nearby, you parse pairs one by one until you have `id`. There is a chance, that your implementation is not compatible with such kind of id. So, my proposal is to put it next to the signature without `id` key pair: `[signature, id, seq, k, v...]`\r\n\r\nAny thoughts on these topics?",
  "closed_by": {
    "login": "zilm13",
    "id": 6196452,
    "node_id": "MDQ6VXNlcjYxOTY0NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zilm13",
    "html_url": "https://github.com/zilm13",
    "followers_url": "https://api.github.com/users/zilm13/followers",
    "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
    "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
    "organizations_url": "https://api.github.com/users/zilm13/orgs",
    "repos_url": "https://api.github.com/users/zilm13/repos",
    "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zilm13/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/130/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/130/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559089224",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559089224",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559089224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTA4OTIyNA==",
    "user": {
      "login": "Mikerah",
      "id": 4249799,
      "node_id": "MDQ6VXNlcjQyNDk3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4249799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mikerah",
      "html_url": "https://github.com/Mikerah",
      "followers_url": "https://api.github.com/users/Mikerah/followers",
      "following_url": "https://api.github.com/users/Mikerah/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mikerah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mikerah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mikerah/subscriptions",
      "organizations_url": "https://api.github.com/users/Mikerah/orgs",
      "repos_url": "https://api.github.com/users/Mikerah/repos",
      "events_url": "https://api.github.com/users/Mikerah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mikerah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-27T13:34:16Z",
    "updated_at": "2019-11-27T13:34:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `NodeID` derivation can be found in the [ENR spec](https://eips.ethereum.org/EIPS/eip-778). It's simply taking the `keccak256` hash of the uncompressed public key. This is meant to be backwards compatible with the `v4` spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559089224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559107479",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559107479",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559107479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEwNzQ3OQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-27T14:22:09Z",
    "updated_at": "2019-11-27T14:22:09Z",
    "author_association": "NONE",
    "body": "@Mikerah Oh I see, thank you. I'd highlight this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559107479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559782669",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559782669",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559782669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTc4MjY2OQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T13:00:49Z",
    "updated_at": "2019-11-29T13:00:49Z",
    "author_association": "MEMBER",
    "body": "> Node ID derivation function is not defined anywhere in v5. Maybe it's somewhere in v4, but I have not found it in v5 spec.\r\n\r\nIt is important to keep this flexible in your client because other identity schemes may be defined later.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559782669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559783597",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559783597",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559783597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTc4MzU5Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T13:04:45Z",
    "updated_at": "2019-11-29T13:04:45Z",
    "author_association": "MEMBER",
    "body": "> id field in ENR (not this spec, but related) could appear in any place. And it looks a bit oddly: you have the signature, but you don't have its type nearby, you parse pairs one by one until you have id\r\n\r\nI understand your concern and we could've changed it the way you suggest. Unfortunately it is too late now. EIP-778 is two years old and we have already deployed it on the network.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559783597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559784261",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559784261",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559784261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTc4NDI2MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T13:07:11Z",
    "updated_at": "2019-11-29T13:12:40Z",
    "author_association": "MEMBER",
    "body": "> FINDNODE message replies only with peers with exact distance from recipient. So, how could we find 50 closest nodes, for example? Spamming messages with 0-200 distances, all with empty answers, and then, messages with nodes starting to appear. Of course, we could start from 255 and go down, but we need closest, yeah?\r\n\r\nSee https://github.com/ethereum/devp2p/issues/79 and [this comment](https://github.com/ethereum/devp2p/issues/115#issuecomment-532595255) for previous discussion about this. I think the FINDNODE parameter is good the way it is because there is no way to get the answer wrong. Getting nodes at exact distance is simplest to implement and also simplest to verify on the 'client' side. \r\n\r\nThe downside is that getting many neighbors from a single node is inefficient. But maybe that's fine because you're supposed to use more than one node for lookup anyway. Getting nodes at all distances from another node is pretty rare I think.\r\n\r\nAn alternative idea would be to return nodes with distance <= d. \r\n\r\nWe can still make changes to FINDNODE because discv5 is not released yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559784261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559801330",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559801330",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559801330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTgwMTMzMA==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T14:08:06Z",
    "updated_at": "2019-11-29T14:08:42Z",
    "author_association": "NONE",
    "body": "@fjl so there are 2 simplest ways of implementation: 1) spamming node with hundreds of messages, 2) requesting 255 and down until first empty bucket/enough peers from this host. Why you may need nodes with distance 113 in any real network? \r\n\r\nGenerally, I don't see anything bad in requesting furthermost nodes from the peer (anyway `distance` is an artificial value), due to bucket definition you receive freshest peers in this case. But  it looks a bit odd why all peers are requesting **furthest** nodes and requires some comments in specification.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559801330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559852113",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559852113",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559852113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1MjExMw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T17:35:08Z",
    "updated_at": "2019-11-29T17:35:55Z",
    "author_association": "MEMBER",
    "body": "> And it looks a bit oddly: you have the signature, but you don't have its type nearby, you parse pairs one by one until you have id\r\n\r\nSome more about this: In general, the identity scheme may use any fields from the ENR. The \"v4\" scheme uses \"secp256k1\" for verification and for deriving the ID. So you need to parse all fields before attempting to derive the ID anyway and \"id\" is nothing special.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559852113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559852522",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-559852522",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 559852522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1MjUyMg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-29T17:37:18Z",
    "updated_at": "2019-11-29T17:37:18Z",
    "author_association": "MEMBER",
    "body": "> so there are 2 simplest ways of implementation: 1) spamming node with hundreds of messages\r\n\r\nI don't understand where your \"hundreds of messages\" are coming from. Can you explain how that would happen.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/559852522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/560098614",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-560098614",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 560098614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5ODYxNA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-01T11:59:22Z",
    "updated_at": "2019-12-01T11:59:22Z",
    "author_association": "MEMBER",
    "body": "Can you link your lookup code maybe?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/560098614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/561071767",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-561071767",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 561071767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTA3MTc2Nw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-03T09:12:46Z",
    "updated_at": "2019-12-03T09:12:46Z",
    "author_association": "NONE",
    "body": "> > so there are 2 simplest ways of implementation: 1) spamming node with hundreds of messages\r\n> \r\n> I don't understand where your \"hundreds of messages\" are coming from. Can you explain how that would happen.\r\n\r\nI want, say, 50 peers from every new node. If I start with distance 0 and go upwards, most replies would be empty. So, the best strategy for me is to start from 255 and go downwards.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/561071767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/561074413",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-561074413",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 561074413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTA3NDQxMw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-03T09:19:22Z",
    "updated_at": "2019-12-03T09:19:22Z",
    "author_association": "NONE",
    "body": "> > And it looks a bit oddly: you have the signature, but you don't have its type nearby, you parse pairs one by one until you have id\r\n> \r\n> Some more about this: In general, the identity scheme may use any fields from the ENR. The \"v4\" scheme uses \"secp256k1\" for verification and for deriving the ID. So you need to parse all fields before attempting to derive the ID anyway and \"id\" is nothing special.\r\n\r\nI understand this. The issue is that: you receive ENR with `id`, say, `vX` and to choose appropriate verifier/nodeId translator you need to parse whole message, though you may not support such id at all. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/561074413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562229042",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-562229042",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 562229042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjIyOTA0Mg==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T17:24:22Z",
    "updated_at": "2019-12-05T17:26:11Z",
    "author_association": "NONE",
    "body": "@fjl Finally I think `>=` looks like reliable fix:\r\nFor any distance N greater than 0  requested with `FINDNODE` message, we return nodes from buckets starting from N and going higher until k (value defining size of k-bucket) nodes found or buckets are over (256+).\r\n\r\nWith such approach we always could calculate from last node, where did it come from (from which bucket). And we could get all nodes from peer with several requests as bucket is not greater than k. And, of course, it fixes the need of sending a lot of requests for empty buckets.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562229042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562803793",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-562803793",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 562803793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgwMzc5Mw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-07T02:08:35Z",
    "updated_at": "2019-12-07T02:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "We pick a random peer and search for buckets of that distance. If not enough peers are returned, we send two more subsequent requests, which go either side of the distance. If distance to the random peer was 254, next request would be 255 and next would be 253. We only send 3 and if we don't get enough peers, we try again later. \r\n\r\nI borrowed this approach from the go-code, although not sure if it has changed since. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562803793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562824899",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-562824899",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 562824899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgyNDg5OQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-07T07:40:00Z",
    "updated_at": "2019-12-07T07:40:00Z",
    "author_association": "NONE",
    "body": "@AgeManning I think it's crucial to expand network using closest peers. It will be more randomized compared to using furthermost peers",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/562824899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/575752136",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-575752136",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 575752136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTc1MjEzNg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-17T18:57:31Z",
    "updated_at": "2020-01-17T18:57:31Z",
    "author_association": "MEMBER",
    "body": "I don't know how to resolve this issue. @zilm13 can you explain your problem better? I'm not entirely opposed to changing FINDNODE so it returns nodes with distance >= the given one, just need to think it through some more.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/575752136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/576269195",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-576269195",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 576269195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjI2OTE5NQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T13:15:07Z",
    "updated_at": "2020-01-20T13:15:07Z",
    "author_association": "NONE",
    "body": "@fjl I'm trying to simulate both cases, I will ping back when result is available",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/576269195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/579370367",
    "html_url": "https://github.com/ethereum/devp2p/issues/130#issuecomment-579370367",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/130",
    "id": 579370367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTM3MDM2Nw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-28T17:42:54Z",
    "updated_at": "2020-01-28T17:42:54Z",
    "author_association": "NONE",
    "body": "@fjl yeah, we'd better close this one, I'll re-open it targeted when new info is available.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/579370367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
