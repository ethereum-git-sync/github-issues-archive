{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/43/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/43/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/43/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/43",
  "id": 362327840,
  "node_id": "MDU6SXNzdWUzNjIzMjc4NDA=",
  "number": 43,
  "title": "EIP-778: Ethereum Node Records",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1272804162,
      "node_id": "MDU6TGFiZWwxMjcyODA0MTYy",
      "url": "https://api.github.com/repos/ethereum/devp2p/labels/eip",
      "name": "eip",
      "color": "e04595",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/devp2p/milestones/2",
    "html_url": "https://github.com/ethereum/devp2p/milestone/2",
    "labels_url": "https://api.github.com/repos/ethereum/devp2p/milestones/2/labels",
    "id": 4220807,
    "node_id": "MDk6TWlsZXN0b25lNDIyMDgwNw==",
    "number": 2,
    "title": "Discovery v5.1",
    "description": "",
    "creator": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 22,
    "state": "closed",
    "created_at": "2019-04-11T11:36:18Z",
    "updated_at": "2020-10-07T19:09:49Z",
    "due_on": null,
    "closed_at": "2020-10-07T19:09:49Z"
  },
  "comments": 47,
  "created_at": "2018-09-20T19:19:04Z",
  "updated_at": "2022-08-18T00:59:34Z",
  "closed_at": "2019-08-04T12:11:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://eips.ethereum.org/EIPS/eip-778\r\n\r\nThis issue is for discussions about ENR.",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/43/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/43/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472697745",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472697745",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472697745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjY5Nzc0NQ==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:12:40Z",
    "updated_at": "2019-03-14T04:27:33Z",
    "author_association": "NONE",
    "body": "> Node records can be relayed through a future version of the node discovery protocol. They can also be relayed through arbitrary other mechanisms such as DNS, ENS, a devp2p subprotocol, etc.\r\n\r\nDoes it make sense to approve something before we know how it will work out in practice? IMHO this would be more well-suited with a concrete use case, such as a new discovery message type or two (that would hopefully be reused for v5).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472697745/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472697826",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472697826",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472697826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjY5NzgyNg==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:13:05Z",
    "updated_at": "2019-03-14T04:13:05Z",
    "author_association": "NONE",
    "body": " > seq: The sequence number, a 64 bit integer\r\n\r\nWas there a reason to make it signed versus unsigned? The latter seems safer IMHO",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472697826/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472698920",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472698920",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472698920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjY5ODkyMA==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:20:54Z",
    "updated_at": "2019-03-14T04:20:54Z",
    "author_association": "NONE",
    "body": "> The resulting 64-byte signature is encoded as the concatenation of the r and s signature values.\r\n\r\nJust want to confirm that you intentionally left out the `v` (recovery id) parameter because that's pretty obvious (since it's either 0 or 1)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472698920/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472700035",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472700035",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472700035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMDAzNQ==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:28:35Z",
    "updated_at": "2019-03-14T04:30:52Z",
    "author_association": "NONE",
    "body": "> Node records improve cryptographic agility and handling of protocol upgrades.\r\n\r\nI believe this is referring to \"identity schemes\"? But if not would you be able to provide some examples to help me understand?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472700035/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472700190",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472700190",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472700190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMDE5MA==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:29:41Z",
    "updated_at": "2019-03-14T04:29:41Z",
    "author_association": "NONE",
    "body": "> The remainder of the record consists of arbitrary key/value pairs, which must be sorted by key.\r\n\r\nWhy do they have to be sorted? Do keys also have to be unique?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472700190/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472701703",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472701703",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472701703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMTcwMw==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:39:28Z",
    "updated_at": "2019-03-14T04:39:28Z",
    "author_association": "NONE",
    "body": "Although it can be found in the discovery v4 specification, it would be good to list the key-value pairs for the \"v4\" discovery team. One interesting thing to note is that by ordering the keys per the specification in here the RLP encoding is [no longer backward compatible](https://github.com/ethereum/go-ethereum/blob/master/p2p/discover/udp.go#L113).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472701703/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472701968",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472701968",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472701968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMTk2OA==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:41:16Z",
    "updated_at": "2019-03-14T04:41:16Z",
    "author_association": "NONE",
    "body": "Playing devil's advocate, two high level questions:\r\n\r\n(1) Is the process for making network-level protocol changes so slow that this level of generality is needed?\r\n(2) What (urgent) use case(s) is this enabling?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472701968/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472805227",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472805227",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472805227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjgwNTIyNw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T11:06:15Z",
    "updated_at": "2019-03-14T15:25:54Z",
    "author_association": "MEMBER",
    "body": "> MHO this would be more well-suited with a concrete use case, such as a new discovery message type or two (that would hopefully be reused for v5).\r\n\r\n* See https://eips.ethereum.org/EIPS/eip-868 for the EIP that adds the packet to discovery v4.\r\n* See https://eips.ethereum.org/EIPS/eip-1459 for an EIP that defines an alternative (non-DHT) discovery mechanism using the ENR format.\r\n* Discovery v5 relays ENRs natively and doesn't need a special packet.\r\n\r\n> Was there a reason to make it signed versus unsigned? The latter seems safer IMHO.\r\n\r\nUnsigned integer is implied, but I can add the word 'unsigned' to be explicit.\r\n\r\n> Just want to confirm that you intentionally left out the v (recovery id) parameter because that's pretty obvious (since it's either 0 or 1)?\r\n\r\nThe recovery id is not needed here and isn't part of the signature. The signature can be verified without the recovery id by checking it against the public key contained in the record itself (they're self-signed). I decided this way because another identity scheme might not use secp256k1 keys at all, but nodes may still list a secp256k1 key to be compatible with the RLPx transport.\r\n\r\n> I believe this is referring to \"identity schemes\"? But if not would you be able to provide some examples to help me understand?\r\n\r\nNode records can be signed with any kind of key, and can contain key material for multiple transports using different cryptosystems. Example:\r\n\r\nLet's say you want to provide two transport options: RLPx and libp2p secio. You want you node's 'identity key' to be an ed25519 key. You'd define an identity scheme that uses ed25519 and create a record that looks like this:\r\n\r\n```text\r\n[ \r\n  <sig>, <seq>, \r\n  \"ed25519\", <your static ed25519 public key>, \r\n  \"id\", \"ed25519\", \r\n  \"ip\", <your IP>,\r\n  \"secp256k1\", <your static secp256k1 public key>,\r\n  \"tcp\", <TCP port>,\r\n  \"transports\", [\"rlpx\", \"secio\"]\r\n]\r\n```\r\n\r\nThat record would provide sufficient information to connect with either transport and to derive a node ID for use with the DHT.\r\n\r\nPlease note that identity schemes aren't meant to be something you define all the time, it's more something that allows us to plan ahead when the specific hash function or signature scheme used is falling out of favor or attacks are discovered. An example for the process I had in mind: \r\n\r\nA collision attack on the keccak256 hash function is discovered and we decide that it's time to move on and use a different hash function. We'd define a new identity scheme in an EIP and implement it in clients, but don't use it yet. As time passes, all participants in the DHT upgrade their client software and support the new scheme. When a significant fraction of the DHT supports the scheme, we can enable it in clients.\r\n\r\n> Why do they have to be sorted? Do keys also have to be unique?\r\n\r\nBeing sorted just ensures there is a canonical encoding. Keys are supposed to be unique, I'll add that to the spec. There is also a nice practical benefit: if keys are guaranteed to be sorted, we can just verify that they're sorted once when validating the record and then use binary search to access key/value pairs. That's what the Go implementation of ENR does.\r\n\r\n> Although it can be found in the discovery v4 specification, it would be good to list the key-value pairs for the \"v4\" discovery team. One interesting thing to note is that by ordering the keys per the specification in here the RLP encoding is no longer backward compatible.\r\n\r\nThe encoding is not backwards compatible either way and that's fine. Discovery v4 is fine with the default keys in the EIP and doesn't need any extra keys (it actually doesn't need the \"tcp\" key). \r\n\r\n> Is the process for making network-level protocol changes so slow that this level of generality is needed? What (urgent) use case(s) is this enabling?\r\n\r\nI think it makes sense to agree on a standard format for node information that is the same across multiple discovery mechanisms. We've kind-of designed ourselves into a particular corner with discovery v4 and RLPx and I want implementations to be able to explore alternative transports and discovery mechanisms while still being compatible with the main DHT.\r\n\r\nMy most urgent use case is replacing RLPx with a saner transport, e.g. a transport built from libp2p components. That could happen pretty much immediately after the discovery v4 extension is adopted.\r\n\r\nOne thing ENRs solve by having an authenticated sequence number is the problem of node endpoint changes even in discovery v4. If we learn about node A from another node B, it's generally impossible to know how fresh the information about A shared by B is. Having the sequence number really helps because we'll always be able to know whether our local node's knowledge about A is fresher than what B knows. This property translates across mechanisms: if we found A in DNS previously, we can check whether the DHTs knowledge about A is newer without actually talking to A directly.\r\n\r\nAnother use case is relaying devp2p capabilities and eth network ID through discovery. That way we could dial smarter and stop connecting to every node we find just to check whether they're participating in mainnet, another chain, etc. \r\n\r\nA third use case that people have requested a lot is TOR support. Running an ethereum node on TOR \r\nis impossible because discovery uses UDP and leaks the IP. With ENR, you could just omit the \"ip\" key and put an onion service address as the node's primary endpoint. If that node would get listed in, say, a DNS discovery node list others would connect to that node using TOR without ever knowing the IP.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472805227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472910592",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472910592",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472910592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkxMDU5Mg==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:12:05Z",
    "updated_at": "2019-03-14T15:12:05Z",
    "author_association": "NONE",
    "body": "Thank you for the thoughtful response! It addresses most of the points I raised.\r\n\r\nWhat do you think about adding the [Discovery V4 ENR support (EIP 868)]( https://eips.ethereum.org/EIPS/eip-868 ) at the same time as this EIP? That way it is not only approved, but immediately applicable?\r\n\r\nFurther, I think the thing missing is how V4 will handle routing with the ENR knowledge. For example, it should ideally now help connect peers with shared capabilities.\r\n\r\nWe should also do an inventory of all the potential fields being discussed for various things and ensure they can fit within 300 bytes.  I'm worried that the key-value capability may encourage a lot more key-value pairs than can be held within these limits. There might need to be some more analysis to ensure this is a good size and if not how to address that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472910592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472918498",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472918498",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472918498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkxODQ5OA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:27:41Z",
    "updated_at": "2019-03-14T15:27:41Z",
    "author_association": "MEMBER",
    "body": "Yes it would make a lot of sense to include EIP-868 at the same time. I really just want consensus on the basic ENR format for now because nobody has commented on it for more than a year.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472918498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472919778",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472919778",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472919778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkxOTc3OA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:30:10Z",
    "updated_at": "2019-03-14T15:30:10Z",
    "author_association": "MEMBER",
    "body": "Regarding discv4 and ENR-based connectivity: there is no way to modify the protocol in a backwards-compatible way that relays ENRs because we always have to assume that there will be nodes in the DHT which do not support EIP-868 and you can't relay records through those.\r\n\r\nFull ENR relay is going to happen with discv5 which isn't backwards compatible and doesn't have this restriction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472919778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472938766",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472938766",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472938766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkzODc2Ng==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T16:08:44Z",
    "updated_at": "2019-03-14T16:08:44Z",
    "author_association": "NONE",
    "body": "It seems like the additional `enr-seq` field to the ping/pong packets can be used to signal whether there is v4 support for ENR? That field will be ignored on non-ENR compliant v4 peers because of the liberal parsing adopted in [EIP 8](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-8.md).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472938766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472945042",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-472945042",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 472945042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjk0NTA0Mg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T16:20:47Z",
    "updated_at": "2019-03-14T16:21:00Z",
    "author_association": "MEMBER",
    "body": "Yes, that's in the EIP. But we can't really change any other message or require that nodes start sending ENRs in Neighbors replies. The best we can do is fetching the ENR via UDP before connecting. But even if the peer doesn't support EIP-868 it might still be a good peer so it's not very useful. It is very useful to avoid dialing someone on mainnet if you're looking for testnet peers though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/472945042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/473320739",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-473320739",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 473320739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzMyMDczOQ==",
    "user": {
      "login": "Matthalp-zz",
      "id": 1238969,
      "node_id": "MDQ6VXNlcjEyMzg5Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Matthalp-zz",
      "html_url": "https://github.com/Matthalp-zz",
      "followers_url": "https://api.github.com/users/Matthalp-zz/followers",
      "following_url": "https://api.github.com/users/Matthalp-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Matthalp-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Matthalp-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Matthalp-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Matthalp-zz/orgs",
      "repos_url": "https://api.github.com/users/Matthalp-zz/repos",
      "events_url": "https://api.github.com/users/Matthalp-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Matthalp-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T15:02:44Z",
    "updated_at": "2019-03-15T15:02:44Z",
    "author_association": "NONE",
    "body": "Sure, but we can define some additional messages that can be exchanged amongst peers that have agreed that they both support ENR. Peers would use the existing DHT but there may be some auxiliary metadata stored for the ones who support ENR, which would enable two high-level message pairs I think would be useful are:\r\n\r\n`GetENRNeighbors` for doing a version of `GetNeighbors` for peers that support ENR\r\n`QueryENR` which would allow a peer to request a list of peers that meet some sort of criteria from within the DHT.\r\n\r\nI do understand that this is giving preference to some peers on the discovery layer. However, I view this as an incentive for peers to adopt ENR support. Nonetheless, it's all worth thinking through.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/473320739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/473968576",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-473968576",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 473968576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzk2ODU3Ng==",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T15:46:05Z",
    "updated_at": "2019-03-18T15:46:05Z",
    "author_association": "NONE",
    "body": "EIP 778 made a good test case for my RLP library (Java) https://github.com/esaulpaugh/headlong/commit/1c5878440abe2002bd0a18089f7084a1699b8b44",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/473968576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/477558833",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-477558833",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 477558833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzU1ODgzMw==",
    "user": {
      "login": "gumb0",
      "id": 1863135,
      "node_id": "MDQ6VXNlcjE4NjMxMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1863135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gumb0",
      "html_url": "https://github.com/gumb0",
      "followers_url": "https://api.github.com/users/gumb0/followers",
      "following_url": "https://api.github.com/users/gumb0/following{/other_user}",
      "gists_url": "https://api.github.com/users/gumb0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gumb0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gumb0/subscriptions",
      "organizations_url": "https://api.github.com/users/gumb0/orgs",
      "repos_url": "https://api.github.com/users/gumb0/repos",
      "events_url": "https://api.github.com/users/gumb0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gumb0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T11:36:28Z",
    "updated_at": "2019-03-28T11:36:28Z",
    "author_association": "MEMBER",
    "body": "Some nitpicks to the spec.\r\n\r\n> content   = rlp(seq) || rlp(k) || rlp(v) || ...\r\n> signature = rlp(sign(rlp_list(content)))\r\n\r\nThis notation is a bit confusing. I think by `||` you meant concatenating values to make a list, but it can be confused with byte concatenation. If I understand it correctly, I'd express it with something like\r\n```\r\ncontent   = rlp_list(seq, k, v, ...)\r\nsignature = sign(content)\r\nrecord    = rlp_list(signature, seq, k, v, ...)\r\n```\r\n\r\n> ip | IP address, 4 or 16 bytes\r\n\r\nShould we specify the byte order? Also for TCP & UDP ports.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/477558833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478289798",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-478289798",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 478289798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI4OTc5OA==",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T21:12:47Z",
    "updated_at": "2019-03-30T21:12:47Z",
    "author_association": "NONE",
    "body": "why is content wrapped in a singleton list anyway",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478289798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478920605",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-478920605",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 478920605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODkyMDYwNQ==",
    "user": {
      "login": "gumb0",
      "id": 1863135,
      "node_id": "MDQ6VXNlcjE4NjMxMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1863135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gumb0",
      "html_url": "https://github.com/gumb0",
      "followers_url": "https://api.github.com/users/gumb0/followers",
      "following_url": "https://api.github.com/users/gumb0/following{/other_user}",
      "gists_url": "https://api.github.com/users/gumb0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gumb0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gumb0/subscriptions",
      "organizations_url": "https://api.github.com/users/gumb0/orgs",
      "repos_url": "https://api.github.com/users/gumb0/repos",
      "events_url": "https://api.github.com/users/gumb0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gumb0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T09:37:11Z",
    "updated_at": "2019-04-02T09:37:11Z",
    "author_association": "MEMBER",
    "body": "Are sequence numbers 0-based?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478920605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478926836",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-478926836",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 478926836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODkyNjgzNg==",
    "user": {
      "login": "gumb0",
      "id": 1863135,
      "node_id": "MDQ6VXNlcjE4NjMxMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1863135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gumb0",
      "html_url": "https://github.com/gumb0",
      "followers_url": "https://api.github.com/users/gumb0/followers",
      "following_url": "https://api.github.com/users/gumb0/following{/other_user}",
      "gists_url": "https://api.github.com/users/gumb0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gumb0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gumb0/subscriptions",
      "organizations_url": "https://api.github.com/users/gumb0/orgs",
      "repos_url": "https://api.github.com/users/gumb0/repos",
      "events_url": "https://api.github.com/users/gumb0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gumb0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T09:54:58Z",
    "updated_at": "2019-04-02T09:54:58Z",
    "author_association": "MEMBER",
    "body": "> To derive a node address, take the keccak256 hash of the uncompressed public key.\r\n\r\nWhat address does this refer to? v4 enode-address includes all 512 bytes of public key. (is this Kademlia-address for distance calculation?)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/478926836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479403605",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-479403605",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 479403605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQwMzYwNQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:02:23Z",
    "updated_at": "2019-04-03T09:02:23Z",
    "author_association": "MEMBER",
    "body": "@esaulpaugh there is no particular reason for `content` being a list. One way to rationalize it is protection against (hypothetical) length-extension attacks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479403605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479410037",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-479410037",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 479410037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQxMDAzNw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:21:03Z",
    "updated_at": "2019-04-03T09:21:03Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/EIPs/pull/1906 contains some edits to make the spec clearer",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479410037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479410641",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-479410641",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 479410641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQxMDY0MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:22:40Z",
    "updated_at": "2019-04-03T09:22:40Z",
    "author_association": "MEMBER",
    "body": "@gumb0 You can start sequence number at zero or one. It doesn't really matter because the only rule is that that sequence number must increase when the record is updated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479410641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479728794",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-479728794",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 479728794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTcyODc5NA==",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T02:44:36Z",
    "updated_at": "2019-04-04T05:09:38Z",
    "author_association": "NONE",
    "body": "@fjl The record format seems very strange. `content` looks like it's wrapped in its own list for signing but when encoded in `record` it is not.\r\n\r\nIs it not more conventional and intuitive to have the record format simply be `signature(x) || x`, similar to Encrypt-then-MAC's `ciphertext || MAC(ciphertext)`? On that note, how about even `x || signature(x)`? Currently, `content` has to either be encoded two different ways (or just once if you're careful to avoid copying the extraneous (variable-length) list prefix over to `record`).\r\n\r\nI like the Encrypt-then-MAC style because it's all about reducing the attack surface. And I'm inclined to suggest that `content` and `record` should not be RLP lists at all but rather be concatenations (i.e. RLP sequences). Should save a few bytes as well. Thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/479728794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481656322",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-481656322",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 481656322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY1NjMyMg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T11:44:41Z",
    "updated_at": "2019-04-10T11:45:06Z",
    "author_association": "MEMBER",
    "body": "@esaulpaugh Records are often embedded into another RLP structure. This means a node record should be a single RLP value. If you are worried that encoding the record will be inefficient, please note that it's fine to just encode the elements of content once, then add a list header for signing and a different one when creating the final record. Turning a pre-encoded blob into an RLP list is cheap because it's literally just adding a length prefix.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481656322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481656897",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-481656897",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 481656897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY1Njg5Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T11:46:50Z",
    "updated_at": "2019-04-10T11:46:50Z",
    "author_association": "MEMBER",
    "body": "I'm leaning towards closing this discussion soon because the EIP was accepted a while ago and some people have started implementing it. It'll be too late for changes once records are deployed in a protocol. \r\n\r\n**If you are unhappy about anything in the spec, speak up soon.**",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/481656897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482947820",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-482947820",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 482947820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjk0NzgyMA==",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-14T10:56:48Z",
    "updated_at": "2019-04-14T10:56:48Z",
    "author_association": "NONE",
    "body": "Well, then can we change the nomenclature? What am I supposed to call `seq, k, v, ...` in my code? I can't call it `content` because `content` is `[seq, k, v, ...]`. Rather than calling it `contentContent` can we rename `content` to `contentList` and call `seq, k, v, ...` `content`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/482947820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/486182522",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-486182522",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 486182522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjE4MjUyMg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-24T11:23:47Z",
    "updated_at": "2019-04-24T11:23:47Z",
    "author_association": "MEMBER",
    "body": "@esaulpaugh I used `elements` in the Go implementation :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/486182522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487403974",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-487403974",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 487403974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzQwMzk3NA==",
    "user": {
      "login": "atoulme",
      "id": 16758,
      "node_id": "MDQ6VXNlcjE2NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atoulme",
      "html_url": "https://github.com/atoulme",
      "followers_url": "https://api.github.com/users/atoulme/followers",
      "following_url": "https://api.github.com/users/atoulme/following{/other_user}",
      "gists_url": "https://api.github.com/users/atoulme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atoulme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atoulme/subscriptions",
      "organizations_url": "https://api.github.com/users/atoulme/orgs",
      "repos_url": "https://api.github.com/users/atoulme/repos",
      "events_url": "https://api.github.com/users/atoulme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atoulme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-28T18:28:55Z",
    "updated_at": "2019-04-28T18:28:55Z",
    "author_association": "MEMBER",
    "body": "Are the pre-defined keys mandatory?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487403974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487404119",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-487404119",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 487404119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzQwNDExOQ==",
    "user": {
      "login": "atoulme",
      "id": 16758,
      "node_id": "MDQ6VXNlcjE2NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atoulme",
      "html_url": "https://github.com/atoulme",
      "followers_url": "https://api.github.com/users/atoulme/followers",
      "following_url": "https://api.github.com/users/atoulme/following{/other_user}",
      "gists_url": "https://api.github.com/users/atoulme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atoulme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atoulme/subscriptions",
      "organizations_url": "https://api.github.com/users/atoulme/orgs",
      "repos_url": "https://api.github.com/users/atoulme/repos",
      "events_url": "https://api.github.com/users/atoulme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atoulme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-28T18:30:39Z",
    "updated_at": "2019-04-28T18:30:39Z",
    "author_association": "MEMBER",
    "body": "It looks like the signature requires the secp256k1 key to be present for validation. What if I want to use a different curve? (I want to use SSB with an Edwards curve).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487404119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487905287",
    "html_url": "https://github.com/ethereum/devp2p/issues/43#issuecomment-487905287",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/43",
    "id": 487905287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzkwNTI4Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T10:41:13Z",
    "updated_at": "2019-04-30T10:41:13Z",
    "author_association": "MEMBER",
    "body": "The pre-defined keys are not mandatory. I put them in the EIP so we'd have some common ground regarding encoding of basic info such as IP and port.\r\n\r\nShould I add a notice to the EIP saying the keys aren't mandatory?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/487905287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
