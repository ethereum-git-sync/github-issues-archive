{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/115",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/115/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/115/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/115/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/115",
  "id": 489821734,
  "node_id": "MDU6SXNzdWU0ODk4MjE3MzQ=",
  "number": 115,
  "title": "discv5: lookup by distance question",
  "user": {
    "login": "jannikluhn",
    "id": 29854669,
    "node_id": "MDQ6VXNlcjI5ODU0NjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jannikluhn",
    "html_url": "https://github.com/jannikluhn",
    "followers_url": "https://api.github.com/users/jannikluhn/followers",
    "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
    "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
    "repos_url": "https://api.github.com/users/jannikluhn/repos",
    "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-09-05T14:59:56Z",
  "updated_at": "2019-10-22T14:51:51Z",
  "closed_at": "2019-10-22T14:51:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "How does the recursive lookup with distances instead of a target node id work? The spec still describes it with a target node id:\r\n\r\n> The lookup initiator starts by picking Î± closest nodes to the target it knows of.\r\n\r\nIn particular, if the node with ID `N` has chosen to refresh bucket for log distance `log2(d)` and sends a `FindNode` message to node `M` what log distance do they ask for? I guess the naive way would be `log2(abs(distance(N, M) - d))`, but I have the feeling that something is off there mathematically. \r\n\r\nAlso:\r\n\r\n> If a round of FINDNODE queries fails to return a node any closer than the closest already seen\r\n\r\nWhat does \"closer\" in the stopping condition refer to now? Closest distance to the center of the bucket we've chosen? Or do we pick a random point in the bucket and use that as the reference?",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/115/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/115/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532589652",
    "html_url": "https://github.com/ethereum/devp2p/issues/115#issuecomment-532589652",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/115",
    "id": 532589652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjU4OTY1Mg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T08:55:09Z",
    "updated_at": "2019-09-18T08:55:09Z",
    "author_association": "MEMBER",
    "body": "Related issue where we previously discussed this: #79 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532589652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532595255",
    "html_url": "https://github.com/ethereum/devp2p/issues/115#issuecomment-532595255",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/115",
    "id": 532595255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjU5NTI1NQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T09:09:15Z",
    "updated_at": "2019-09-18T09:09:15Z",
    "author_association": "MEMBER",
    "body": "> I guess the naive way would be log2(abs(distance(N, M) - d)), but I have the feeling that something is off there mathematically.\r\n\r\nYour intuition is right and we considered this a lot. We ended up with the current FINDNODE definition because it's easy to implement on the 'server' side (just return some nodes in the given k-bucket) and the response is easy to verify by the caller (just check if all results are at the requested distance from the callee). But it's obviously imperfect. To make lookups converge, the client may need to request nodes at multiple distances.\r\n\r\nIn Go, I use `log2(distance(target, dest))` for FINDNODE calls on node ID `dest` in a lookup for `target`. If this doesn't yield enough nodes FINDNODE is repeated for adjacent buckets on the same `dest` node, i.e. if `log2(distance(target, dest))` is `255`, it also tries with `256` and `254`.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532595255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532595660",
    "html_url": "https://github.com/ethereum/devp2p/issues/115#issuecomment-532595660",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/115",
    "id": 532595660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjU5NTY2MA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T09:10:12Z",
    "updated_at": "2019-09-18T09:10:12Z",
    "author_association": "MEMBER",
    "body": "> What does \"closer\" in the stopping condition refer to now? Closest distance to the center of the bucket we've chosen? Or do we pick a random point in the bucket and use that as the reference?\r\n\r\nIt still means that you should stop when no nodes closer to the ones you already know have been found.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/532595660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
