{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/113",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/113/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/113/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/113/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/113",
  "id": 482278150,
  "node_id": "MDU6SXNzdWU0ODIyNzgxNTA=",
  "number": 113,
  "title": "discv5: consider that clients may want to advertise servers",
  "user": {
    "login": "FrankSzendzielarz",
    "id": 33515470,
    "node_id": "MDQ6VXNlcjMzNTE1NDcw",
    "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/FrankSzendzielarz",
    "html_url": "https://github.com/FrankSzendzielarz",
    "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
    "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
    "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
    "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
    "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
    "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-19T12:17:43Z",
  "updated_at": "2019-11-29T09:08:13Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Until there is a reward system for nodes like LES servers, it is not really in the interests of servers to participate in 'proof of time'  or 'proof of work' to place ads. Someone running a node may be deterred from enabling these discovery or LES server features.\r\n\r\nHowever, a business developing a consumer application that needs to find servers, for example a mobile phone app running a light client, there is strong incentive for those clients to support each other in whatever ways possible to find the servers.\r\n\r\nThe onus is essentially on clients to advertise discovered servers (again, as long as there is no reward system in place). \r\n\r\nOne way of doing this could be for the clients to form their own overlay network and share information privately. Other ways could involve a common, shared scheme. One such common scheme could be the Topic Discovery subsystem: We can consider modifying the protocol so that clients can register servers (or in general, allow ads to be placed about someone else.)\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/113/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/113/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/522858158",
    "html_url": "https://github.com/ethereum/devp2p/issues/113#issuecomment-522858158",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/113",
    "id": 522858158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjg1ODE1OA==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-20T05:24:06Z",
    "updated_at": "2019-08-20T05:24:06Z",
    "author_association": "MEMBER",
    "body": "Notes:\r\n\r\n- Clients can place ads on themselves without any need for ReqTicket or RegTopic, thus bypassing any proof-of-X systems, and this mechanism is available even in the currently proposed system\r\n- Clients will be far more numerous than mainnet nodes. While there may be 10000 mainnet nodes, if light servers and layer-2 scaling solutions become stable and popular, there could be many millions of client nodes.\r\n- In this context node advert location will be fairly transient\r\n- Clients can take advantage of the communal topic system while maintaining private exclusivity by simply advertising proprietary topic names. Eg: a client implementation, of which there are 500,000 instances on Android, could identify LES servers using the code 'XYZ123' , and attempt to prevent other apps from benefiting from that knowledge\r\n- Spam adverts in this context would be a relatively minor problem for applications that are well adopted with many thousands of active installations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/522858158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/523351357",
    "html_url": "https://github.com/ethereum/devp2p/issues/113#issuecomment-523351357",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/113",
    "id": 523351357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzM1MTM1Nw==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-21T08:20:41Z",
    "updated_at": "2019-08-21T08:20:41Z",
    "author_association": "MEMBER",
    "body": "To clarify the above comment:\r\n1. In a situation with many more clients than servers, and where clients are fairly transient, the close radius around a topic hash may likely contain many transient nodes\r\n2. Applications (eg: mobile apps) may have their own implementations that simply take all LES servers they discover and advertise on their own local 'queue' (which might not even be a queue, just a dummy version of the API returning ENRs) so that other app installations can, when they discover and verify the LES server by any means, advertise it further in the same way, thus causing a viral spread of what the [popular] app requires. I am not suggesting this is necessarily an issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/523351357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
