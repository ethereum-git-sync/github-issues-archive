{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/90",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/90/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/90/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/90/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/90",
  "id": 434547239,
  "node_id": "MDU6SXNzdWU0MzQ1NDcyMzk=",
  "number": 90,
  "title": "Elaborate on the streaming capabilities of RLPx and devp2p",
  "user": {
    "login": "dryajov",
    "id": 1094341,
    "node_id": "MDQ6VXNlcjEwOTQzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1094341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dryajov",
    "html_url": "https://github.com/dryajov",
    "followers_url": "https://api.github.com/users/dryajov/followers",
    "following_url": "https://api.github.com/users/dryajov/following{/other_user}",
    "gists_url": "https://api.github.com/users/dryajov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dryajov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dryajov/subscriptions",
    "organizations_url": "https://api.github.com/users/dryajov/orgs",
    "repos_url": "https://api.github.com/users/dryajov/repos",
    "events_url": "https://api.github.com/users/dryajov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dryajov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2408299443,
      "node_id": "MDU6TGFiZWwyNDA4Mjk5NDQz",
      "url": "https://api.github.com/repos/ethereum/devp2p/labels/transport",
      "name": "transport",
      "color": "bfc90c",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-04-18T01:07:12Z",
  "updated_at": "2021-07-29T00:42:38Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Reposting from https://github.com/ethereum/devp2p/issues/71#issuecomment-483364828.\r\n\r\n> do any of the layer of the RLPx/devp2p stack break the streaming assumptions or not?\r\n\r\n> - RLP encoding, is it streaming and if so does it propagate all the way down to the - protocol/transport\r\n> - eth/X application level protocols, which messages are/should be streamable\r\n> - compression?\r\n> - encryption?\r\n> - muxing\r\n> - transport, etc...\r\n\r\nSome benefits of streaming are:\r\n\r\n- lower memory footprint\r\n  - no need to fetch all data ahead of time before sending out, this is important when large amounts of data need to be fetched from some sore (fs or local db).\r\n- potential to decrease on the wire traffic \r\n  - e.g. if a client requests some data, but midway thru it realizes that the data is stale, it can end the operation without waiting for the full sequence to be transmitted\r\n\r\nIn general, a stack that allows and encourages streaming fits really well with the overall requirements of Ethereum - i.e. sending sequences of blocks, or chunks of state are a natural fit for that. I believe this approach has great optimization potential, specially when viewed in the context of fast/warp sync.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/90/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/90/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/888712882",
    "html_url": "https://github.com/ethereum/devp2p/issues/90#issuecomment-888712882",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/90",
    "id": 888712882,
    "node_id": "IC_kwDOAcJRYs40-K6y",
    "user": {
      "login": "jlokier",
      "id": 19521990,
      "node_id": "MDQ6VXNlcjE5NTIxOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19521990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlokier",
      "html_url": "https://github.com/jlokier",
      "followers_url": "https://api.github.com/users/jlokier/followers",
      "following_url": "https://api.github.com/users/jlokier/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlokier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlokier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlokier/subscriptions",
      "organizations_url": "https://api.github.com/users/jlokier/orgs",
      "repos_url": "https://api.github.com/users/jlokier/repos",
      "events_url": "https://api.github.com/users/jlokier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlokier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-29T00:42:12Z",
    "updated_at": "2021-07-29T00:42:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "RLP blobs and lists encode the length in bytes at the start of the list.  In general, this makes it impossible to stream a request or response because the first few bytes to transmit are not known until the end of the data.\r\n\r\nThe encoding would have to change to something a little different from RLP to enable streaming.\r\n\r\nA slight workaround which reduces the round trip time (RTT) is to pipeline multiple requests for smaller amounts of data, which lets the sender break up its large requests, and the responder reply with those smaller data sets.\r\n\r\nIt's beneficial to pipeline anyway so that the gap between a reply and the next request is not \"wasted\".  Pipelining a bit more adds framing and compression/encryption overhead, but breaks the flow up to reduce the observable RTT, and allows high priority messages to be inserted during those flows.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/888712882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
