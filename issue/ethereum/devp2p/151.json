{
  "url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
  "repository_url": "https://api.github.com/repos/ethereum/devp2p",
  "labels_url": "https://api.github.com/repos/ethereum/devp2p/issues/151/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/devp2p/issues/151/comments",
  "events_url": "https://api.github.com/repos/ethereum/devp2p/issues/151/events",
  "html_url": "https://github.com/ethereum/devp2p/issues/151",
  "id": 621857371,
  "node_id": "MDU6SXNzdWU2MjE4NTczNzE=",
  "number": 151,
  "title": "discv5: add FINDNODEATT message",
  "user": {
    "login": "zilm13",
    "id": 6196452,
    "node_id": "MDQ6VXNlcjYxOTY0NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zilm13",
    "html_url": "https://github.com/zilm13",
    "followers_url": "https://api.github.com/users/zilm13/followers",
    "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
    "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
    "organizations_url": "https://api.github.com/users/zilm13/orgs",
    "repos_url": "https://api.github.com/users/zilm13/repos",
    "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zilm13/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/devp2p/milestones/3",
    "html_url": "https://github.com/ethereum/devp2p/milestone/3",
    "labels_url": "https://api.github.com/repos/ethereum/devp2p/milestones/3/labels",
    "id": 5938443,
    "node_id": "MDk6TWlsZXN0b25lNTkzODQ0Mw==",
    "number": 3,
    "title": "Discovery v5.2",
    "description": null,
    "creator": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 6,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2020-10-01T12:45:21Z",
    "updated_at": "2020-10-07T19:12:22Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 8,
  "created_at": "2020-05-20T15:29:51Z",
  "updated_at": "2021-11-09T15:10:42Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "HI!\r\n I've made another research, this one dedicated to efficiency, comparing ENR attribute and topic advertisement, and want to make a proposal which is going to dramatically improve search speed of ENR with certain attributes.\r\nHere's a proposal:\r\n\r\n---\r\nIn order to improve search time and reduce traffic for ENR attribute, make possible to find even smaller attributed fractions in network in small time and decrease traffic in all ENR search cases, following Discovery V5 API is proposed:\r\n\r\n---\r\n\r\n### FINDNODEATT Request (0x09)\r\n\r\n    message-data = [request-id, attribute-key, (attribute-value)]\r\n    message-type = 0x09\r\n    attribute-key = searched ENR attribute key\r\n    attribute-value = (optional) searched ENR attribute value for provided key\r\n\r\nFINDNODEATT queries for nodes with non-null ENR attribute identified by `attribute-key`.\r\nIf optional parameter `attribute-value` is provided, only ENRs with `attribute-key == attribute-value` should be returned. Maximum number of returned records is `K-BUCKET`. If more than `K-BUCKET` records are found by search, it is recommended to return a random subset of `K-BUCKET` size from it.\r\n\r\n---\r\n\r\nOptionality of `attribute-value` could be used for other features, when most nodes in a network are in one of subnetworks, omitting this field doesn’t improve search speed and traffic, so we are going to use it with `attribute-value` provided. This should limit output only to nodes that belong to a subnetwork of search and provide the answer from each peer in one query. Let’s see the results with  64 nodes advertised in 10,000 peers network. We are going to find 8 of them. We also applied 16 nodes limit to topic advertisement too.\r\n\r\nWe got 1.4 seconds on average search and just 3.3 Kb of traffic per searcher!\r\n\r\n![](https://i.imgur.com/KaBSfS8.png)\r\n\r\n---\r\n\r\nWhat do you think about it? I want it too be added to Discovery V5.\r\nFull research if you are interested in is [here](https://hackmd.io/@zilm/BJGorvHzL)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/151/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/devp2p/issues/151/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631568197",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-631568197",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 631568197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTU2ODE5Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T16:01:03Z",
    "updated_at": "2020-05-20T16:01:10Z",
    "author_association": "MEMBER",
    "body": "This looks really nice! I have read the research document very quickly (skipped some sections) and wonder how the new request would be used exactly. Would you just perform a random walk of the network with `FINDNODE` requests and query every found node using `FINDNODEATT`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631568197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631582727",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-631582727",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 631582727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTU4MjcyNw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T16:26:08Z",
    "updated_at": "2020-05-20T16:26:43Z",
    "author_association": "NONE",
    "body": "@fjl in simulation I've tried it just with peer's own Kademlia table and it works like a charm. I don't think that it's a big sense to make it complicated, as in simulation it was able to discover 8 peers from 16 advertised (means very small fraction) in 10,000 peers network just sending FINDNODEATT to everyone in his own Kademlia table.And it's just feature discovery limit without complication. Another good thing from moving it in this way is that you don't have localization, it's a peers from all parts of network, difficult to sybil.  \r\n\r\nI'd bet to leave it in this form until otherwise is requested by somebody. The only thing I'd reccommend is to get non-empty result from at least 3 different node, but I didn't dig into security properties much yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631582727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631596071",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-631596071",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 631596071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTU5NjA3MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T16:49:56Z",
    "updated_at": "2020-05-20T16:49:56Z",
    "author_association": "MEMBER",
    "body": "Hmm, I'm not sure if this is a sound idea then. If you only look in the local table, your view of the network is limited. It will also stop working well beyond a certain network size.\r\n\r\nI will think about this a bit more and re-read your research document. It still seems like a good idea, we just need to make some adjustments to really make it work for all cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631596071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631602038",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-631602038",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 631602038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTYwMjAzOA==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T17:00:52Z",
    "updated_at": "2020-05-20T17:01:30Z",
    "author_association": "NONE",
    "body": "Giving 150-200 peers you have in your table, you are filtering it from 40000 peers minus intersections. From my simulation peer scanned 5000 of total 10,000 in such search, as I were able to found half by almost every searcher. And even with your 200 peers it's already 20 seconds if you query 10 peers in a second. So it's a big part of network, half of network in case of 10,000 peers",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/631602038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/632559369",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-632559369",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 632559369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjU1OTM2OQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T08:08:19Z",
    "updated_at": "2020-05-22T08:09:15Z",
    "author_association": "NONE",
    "body": "@fjl Ok, we could try to expand search area but first round should be like I've explained, as it's most efficient. My first idea is to do this round, and then do `findnode(256)` to all that peers, ask the results for `findnodeatt`, next `findnode(255)`, ask the results for `findnodeatt` etc. I guess that any subsequent round will cover less and less not queried nodes but anyway I will measure the numbers to see, how bad is it. If you have an idea how to expand initial search in other way, please, share it, I will simulate and see, whether it's better or not",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/632559369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/633032877",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-633032877",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 633032877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzAzMjg3Nw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T11:36:00Z",
    "updated_at": "2020-05-23T11:37:08Z",
    "author_association": "NONE",
    "body": "I did several simulations, first was as described in [previous comment](https://github.com/ethereum/devp2p/issues/151#issuecomment-632559369). We are getting 45-50% coverage from the simple `FINDNODEATT` to our table in ~120 rounds, about 25% after the same number of rounds expanding, 10% after another 120 rounds and less and less further. Though I thought it is even less efficient when expanding.\r\n\r\n![](https://i.imgur.com/L4PPyUv.png)\r\n\r\nFor comparison I made \"spiral expand\"([code](https://github.com/zilm13/discv5/blob/master/src/main/kotlin/org/ethereum/discv5/CoverageSimulator.kt#L148-L188)), the idea is that closest nodes should have top buckets much different with our knowledge and furthest nodes, from our 256th bucket should have less intersections with our environment in their lowest buckets. I've simplified it for simulation, it should be very complicated if done right, anyway it didn't give any signifcant advantages compared to initial idea, moreover, it definitely increases variance.\r\n\r\n![](https://i.imgur.com/R8h39xL.png)\r\n\r\nBoth tests were done on 10,000 peers from searcher peers with simulated long live in network, meaning their Kademlia tables were  filled enough, though there are enough peers with small tables in observed network. For comparison I ran initial idea with 2,000 peers in network and 100,000. I didn't measure traffic and time separately, but both should be relative to number of rounds.\r\n\r\n![](https://i.imgur.com/3J42vvm.png)\r\n\r\n![](https://i.imgur.com/XcMuCRP.png)\r\n\r\nAfter all I stay with the simplest solution:\r\nstep 1: ask everyone you know with `FINDNODEATT`\r\nstep 2: ask everyone you know for `FIDNNODE(256)`, query all received nodes for `FINDNODEATT`, decrease distance by 1, continue\r\n\r\nStop on any step when you think you found enough nodes, because the further you go, the less efficient search is. And you'd never need all the nodes with certain attribute.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/633032877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/633468590",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-633468590",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 633468590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzQ2ODU5MA==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-25T09:10:17Z",
    "updated_at": "2020-05-25T09:10:17Z",
    "author_association": "NONE",
    "body": "I completely missed the thing that in Ethereum 2.0 we could participate in several subnetworks at time. So it's recorded in following form:\r\n\r\n> The ENR MAY contain an entry (attnets) signifying the attestation subnet bitfield with the following form to more easily discover peers participating in particular attestation gossip subnets.\r\n> \r\n> | Key  | Value  | \r\n> |---|---|\r\n> | attnets  | SSZ Bitvector[ATTESTATION_SUBNET_COUNT]  | \r\n\r\nAs it's a vector, it doesn't have any length data or whatever, just a plain bitset, so instead of equality we'd like to see inclusion more, so that\r\n`value AND input_value == input_value`\r\nor \r\n`value.include(input_value)`\r\n\r\nAs it has nothing special and relative to Ethereum 2.0, it could be using for short recording of any other capabilities.\r\n\r\nSo, I'd add another search message `FINDNODEATTINC (0x10)` for it",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/633468590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/964241981",
    "html_url": "https://github.com/ethereum/devp2p/issues/151#issuecomment-964241981",
    "issue_url": "https://api.github.com/repos/ethereum/devp2p/issues/151",
    "id": 964241981,
    "node_id": "IC_kwDOAcJRYs45eSo9",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-09T15:10:41Z",
    "updated_at": "2021-11-09T15:10:41Z",
    "author_association": "MEMBER",
    "body": "IMO looks really interesting from Eth-2 networking perspective 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/devp2p/issues/comments/964241981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
