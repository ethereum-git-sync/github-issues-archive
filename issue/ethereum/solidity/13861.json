{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13861/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13861/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13861/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13861",
  "id": 1528378090,
  "node_id": "I_kwDOAm_5kc5bGTLq",
  "number": 13861,
  "title": "Abi encoding should serialize parameters sequentially, to allow fluid composition and dynamic construction",
  "user": {
    "login": "RitzyDevBox",
    "id": 103006767,
    "node_id": "U_kgDOBiPCLw",
    "avatar_url": "https://avatars.githubusercontent.com/u/103006767?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RitzyDevBox",
    "html_url": "https://github.com/RitzyDevBox",
    "followers_url": "https://api.github.com/users/RitzyDevBox/followers",
    "following_url": "https://api.github.com/users/RitzyDevBox/following{/other_user}",
    "gists_url": "https://api.github.com/users/RitzyDevBox/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RitzyDevBox/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RitzyDevBox/subscriptions",
    "organizations_url": "https://api.github.com/users/RitzyDevBox/orgs",
    "repos_url": "https://api.github.com/users/RitzyDevBox/repos",
    "events_url": "https://api.github.com/users/RitzyDevBox/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RitzyDevBox/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-01-11T03:47:51Z",
  "updated_at": "2023-02-20T08:52:50Z",
  "closed_at": "2023-02-07T11:57:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The existing Solidity ABI encoding is poor design for several reasons:\r\n\r\n**Problem:**  \r\n   I want to be able to appended the results of governance proposals dynamically to the function calldata\r\n\r\n**Issue:**\r\nEncoding design is erratic, the structure of the encoding, causes dynamic parameters to be injected earlier in the encoding, to be aware of the offset.\r\n\r\n  1. There is no deterministic way to know what data is being sent, making it difficult to ensure the integrity of the data.\r\n  2. There is no way to extend the calldata, making it difficult to add new functionality to contracts without breaking existing ones.\r\n\r\n\r\n**Proposal.**\r\nAll parameters should be serialized seqentially, so the function selection can be swapped and additional calldata can be appended.",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13861/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13861/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420655307",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1420655307",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1420655307,
    "node_id": "IC_kwDOAm_5kc5UrXrL",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-07T11:57:54Z",
    "updated_at": "2023-02-07T11:57:54Z",
    "author_association": "MEMBER",
    "body": "The ABI encoding actually predates solidity :-). And yes, it's flawed in many ways - but there's almost no smooth way to break it at this point without wreaking backwards-compatibility havok.\r\nWithout looking them up, we'll definitely have different issues about that already, in any case, so I'm closing this as a duplicate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420655307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1421785034",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1421785034",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1421785034,
    "node_id": "IC_kwDOAm_5kc5UvrfK",
    "user": {
      "login": "RitzyDevBox",
      "id": 103006767,
      "node_id": "U_kgDOBiPCLw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103006767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RitzyDevBox",
      "html_url": "https://github.com/RitzyDevBox",
      "followers_url": "https://api.github.com/users/RitzyDevBox/followers",
      "following_url": "https://api.github.com/users/RitzyDevBox/following{/other_user}",
      "gists_url": "https://api.github.com/users/RitzyDevBox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RitzyDevBox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RitzyDevBox/subscriptions",
      "organizations_url": "https://api.github.com/users/RitzyDevBox/orgs",
      "repos_url": "https://api.github.com/users/RitzyDevBox/repos",
      "events_url": "https://api.github.com/users/RitzyDevBox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RitzyDevBox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T01:28:28Z",
    "updated_at": "2023-02-08T01:28:28Z",
    "author_association": "NONE",
    "body": "@ekpyron why do you think you would need to break backwards compatibility?\n\nAll you need to do is.\n\n1. Add a version when making a call to the contracts\n2. The version number is places in the dead bytes after the function\nselector.\n\nIf the version number is present change the decoder.\n\nThis version can affect other options\n\n\nOn Tue, Feb 7, 2023, 6:58 AM Daniel ***@***.***> wrote:\n\n> Closed #13861 <https://github.com/ethereum/solidity/issues/13861> as\n> completed.\n>\n> â€”\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/solidity/issues/13861#event-8457258845>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AYR4ELYXBD5ADYUXQ3ZRXYTWWI2E5ANCNFSM6AAAAAATXRS3IU>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1421785034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422515168",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1422515168",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1422515168,
    "node_id": "IC_kwDOAm_5kc5Uydvg",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T12:26:17Z",
    "updated_at": "2023-02-08T12:26:17Z",
    "author_association": "MEMBER",
    "body": "Which dead bytes after the function selector :-)? (Spoiler alert: there are none.)\r\nHaving two competing ABIs coexisting would increase the code size of all contracts in perpetuity in any case, which is quite non-ideal. There have been discussions about ABI versioning in the past you may find as a reference - but yeah, changing the ABI is extremely non-trivial - we couldn't even do it unilaterally, but it'd need to be a cross-language standard to maintain contract interoperability. Vyper recently made a move at defining a new ABI (albeit with a different focus) https://github.com/vyperlang/vyper/issues/2542 - but there hasn't been much movement (that I'm aware of) recently.\r\n\r\nSo as I said: yes, the current ABI is suboptimal, but no, we can't change it just like that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422515168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1423648605",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1423648605",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1423648605,
    "node_id": "IC_kwDOAm_5kc5U2ydd",
    "user": {
      "login": "RitzyDevBox",
      "id": 103006767,
      "node_id": "U_kgDOBiPCLw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103006767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RitzyDevBox",
      "html_url": "https://github.com/RitzyDevBox",
      "followers_url": "https://api.github.com/users/RitzyDevBox/followers",
      "following_url": "https://api.github.com/users/RitzyDevBox/following{/other_user}",
      "gists_url": "https://api.github.com/users/RitzyDevBox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RitzyDevBox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RitzyDevBox/subscriptions",
      "organizations_url": "https://api.github.com/users/RitzyDevBox/orgs",
      "repos_url": "https://api.github.com/users/RitzyDevBox/repos",
      "events_url": "https://api.github.com/users/RitzyDevBox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RitzyDevBox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T05:16:46Z",
    "updated_at": "2023-02-09T05:16:46Z",
    "author_association": "NONE",
    "body": "What do you mean there are no dead bytes, the function selector only takes\nup 8 of the 32 bytes?\n\nWhat are the other 24 bytes being used for?\n\nOn Wed, Feb 8, 2023, 7:26 AM Daniel ***@***.***> wrote:\n\n> Which dead bytes after the function selector :-)? (Spoiler alert: there\n> are none.)\n> Having two competing ABIs coexisting would increase the code size of all\n> contracts in perpetuity in any case, which is quite non-ideal. There have\n> been discussions about ABI versioning in the past you may find as a\n> reference - but yeah, changing the ABI is extremely non-trivial - we\n> couldn't even do it unilaterally, but it'd need to be a cross-language\n> standard to maintain contract interoperability. Vyper recently made a move\n> at defining a new ABI (albeit with a different focus) vyperlang/vyper#2542\n> <https://github.com/vyperlang/vyper/issues/2542> - but there hasn't been\n> much movement (that I'm aware of) recently.\n>\n> So as I said: yes, the current ABI is suboptimal, but no, we can't change\n> it just like that.\n>\n> â€”\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/solidity/issues/13861#issuecomment-1422515168>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AYR4ELZ2PDMYZGSRFWGOMSLWWOGHLANCNFSM6AAAAAATXRS3IU>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1423648605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424021701",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1424021701",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1424021701,
    "node_id": "IC_kwDOAm_5kc5U4NjF",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T11:14:01Z",
    "updated_at": "2023-02-09T11:15:18Z",
    "author_association": "MEMBER",
    "body": "Parameters are aligned to 32-bytes slots but the selector is not. It takes only 4 bytes and the parameters follow immediately, without any gap.\r\n\r\nSee [ABI encoding examples in the docs](https://docs.soliditylang.org/en/latest/abi-spec.html#examples).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424021701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424345209",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1424345209",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1424345209,
    "node_id": "IC_kwDOAm_5kc5U5ch5",
    "user": {
      "login": "RitzyDevBox",
      "id": 103006767,
      "node_id": "U_kgDOBiPCLw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103006767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RitzyDevBox",
      "html_url": "https://github.com/RitzyDevBox",
      "followers_url": "https://api.github.com/users/RitzyDevBox/followers",
      "following_url": "https://api.github.com/users/RitzyDevBox/following{/other_user}",
      "gists_url": "https://api.github.com/users/RitzyDevBox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RitzyDevBox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RitzyDevBox/subscriptions",
      "organizations_url": "https://api.github.com/users/RitzyDevBox/orgs",
      "repos_url": "https://api.github.com/users/RitzyDevBox/repos",
      "events_url": "https://api.github.com/users/RitzyDevBox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RitzyDevBox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T15:10:51Z",
    "updated_at": "2023-02-09T15:10:51Z",
    "author_association": "NONE",
    "body": "Okay everything's still fine then.  The parameters are aligned to 32\nbytes.  +4 bytes for the selector.\n\nNow just add 4 bytes for the version and change the offset to +8.\n\nIf the offset is +4 then use the old version of the offset is +8 check the\nversion\n\nOn Thu, Feb 9, 2023, 6:14 AM Kamil Åšliwak ***@***.***> wrote:\n\n> Paramters are aligned to 32-bytes slots but the selector is not. It takes\n> only 4 bytes and the parameters follow immediately, without any gap.\n>\n> â€”\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/solidity/issues/13861#issuecomment-1424021701>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AYR4EL2YSSV7VXPHCX6ELW3WWTGQLANCNFSM6AAAAAATXRS3IU>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424345209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1436566503",
    "html_url": "https://github.com/ethereum/solidity/issues/13861#issuecomment-1436566503",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13861",
    "id": 1436566503,
    "node_id": "IC_kwDOAm_5kc5VoEPn",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T08:52:50Z",
    "updated_at": "2023-02-20T08:52:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been working on an ABIv3 proposal: https://github.com/esaulpaugh/abiv3\r\n\r\nIn my opinion, existing contracts on Layer 1 are nearly irrelevant to the future of smart contracts. And Layer 2 is not standardized around ABIv2, so there would be no harm to compatibility overall. In fact, I believe compatibility would be helped by a more efficient standard that isn't prohibitively expensive in terms of gas costs. https://github.com/esaulpaugh/abiv3/blob/master/SPEC.md",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1436566503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
