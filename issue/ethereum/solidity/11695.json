{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11695/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11695/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11695/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11695",
  "id": 952863741,
  "node_id": "MDU6SXNzdWU5NTI4NjM3NDE=",
  "number": 11695,
  "title": "immutable for libraries / dynamic libraries / high-level delegatecall",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4438481746,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3bUg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have%20eventually",
      "name": "must have eventually",
      "color": "ffb04d",
      "default": false,
      "description": "Something we consider essential but not enough to prevent us from releasing Solidity 1.0 without it."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2021-07-26T12:44:27Z",
  "updated_at": "2023-03-20T16:13:39Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I'm pretty sure there are issues about this scattered across the project, but this has come up recently, so I'll create a new one.\r\n\r\nSince linking is a bit cumbersome, it has been brought up that libraries should be explicit immutable state variables, so that linking happens at construction time instead of before deployment. If we also open this up to non-immutable state variables for libraries, it will create a high-level interface for delegatecall and proxies, even though the library interface cannot be changed after compilation (i.e. for a truly generic proxy, we would need `.delegatecall` anyway).\r\n\r\nPros:\r\n- easier recompilation (no issue about using the compiler to link or substituting manually)\r\n- <list yours>\r\n\r\nCons:\r\n- it is more complicated for off-chain tools to get the library address (it is not directly in the metadata file, but has to be extracted from the constructor)\r\n- \"using for\" does not work",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11695/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11695/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886766375",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-886766375",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 886766375,
    "node_id": "IC_kwDOAm_5kc402vsn",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T14:44:53Z",
    "updated_at": "2021-07-26T14:44:53Z",
    "author_association": "MEMBER",
    "body": "> it is more complicated for off-chain tools to get the library address (it is not directly in the metadata file, but has to be extracted from the constructor)\r\n\r\nBecause of this property, I think this feature is rather about having \"dynamically linked\" (=deploy time) libraries, as opposed to \"statically linked\" (= compile time).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886766375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/921237350",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-921237350",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 921237350,
    "node_id": "IC_kwDOAm_5kc426Pdm",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-16T20:53:55Z",
    "updated_at": "2021-09-16T20:53:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure the pros list highlights the **radical** impact that implementing this issue would have. It would let developers fully do away with the notion of linked libraries, which means being able to drop linking tooling, not worry about bogus creation code (pre-replacement), the strange library replacement metadata, more easily expose libraries in use, among others. \r\n\r\nWith `immutable`, we can now have a drop-in replacement that still provides all linked library benefits (notably, reducing runtime bytecode size, which is becoming a **huge** issue in all non-trivial projects), while avoiding all of the weirdness that comes with linking. Libraries can finally be just another dependency passed as a constructor argument, and all contracts would be 'ready' after compilation, making linking a thing of the past.\r\n\r\nSeriously, I recently spent a considerable amount of time puzzling over whether it made sense to rely on assembly-level delegatecall rather than use linked libraries due to the sheer number of new edge cases those would force us to cover.\r\n\r\n---\r\n\r\nAnd that's saying nothing about _mutable_ libraries, if we allowed for delegatecalls to be performed on any stack address, whether it came from an `immutable` variable, a `storage` one, or even an external call. There's plenty of use cases here that don't involve upgrades, such as allowing external entities to access a contract's storage and do whatever heavyweight processing is required in a view-like manner: this would be a fantastic feature for e.g. price oracles or any other data-storing contract. \r\n\r\nBut even if this was only for `immutable`, it would be an **incredible win** for the language and ecosystem.\r\n\r\n>it is more complicated for off-chain tools to get the library address (it is not directly in the metadata file, but has to be extracted from the constructor)\r\n\r\nI disagree: this instead empowers the developer to provide better ways of querying this information (e.g. a simple public getter), instead of relying on an obscure piece of deta that is not often used for any other purpose.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/921237350/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/921836936",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-921836936",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 921836936,
    "node_id": "IC_kwDOAm_5kc428h2I",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T14:21:03Z",
    "updated_at": "2021-09-17T14:21:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "As @nventuro said, the biggest pro here is simplicity. Completely removing this concept of linking seems like a huge win both for tools and for users learning the language.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/921836936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922858948",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-922858948",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 922858948,
    "node_id": "IC_kwDOAm_5kc43AbXE",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T11:54:20Z",
    "updated_at": "2021-09-20T11:54:20Z",
    "author_association": "MEMBER",
    "body": "I think to avoid confusion, calling non-public (i.e. internal) functions on libraries via a library variable should be disallowed, even if it's immutable. You can still call it via the name of the library, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922858948/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922879003",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-922879003",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 922879003,
    "node_id": "IC_kwDOAm_5kc43AgQb",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T12:21:41Z",
    "updated_at": "2021-09-20T12:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth Does it make sense to keep that behavior of libraries now that free functions exist? More conceptual simplification of libraries would be nice. (I realize this is off-topic for this particular issue; I can create a new one if this idea is not completely off.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922879003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922931622",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-922931622",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 922931622,
    "node_id": "IC_kwDOAm_5kc43AtGm",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T13:32:06Z",
    "updated_at": "2021-09-20T13:32:06Z",
    "author_association": "MEMBER",
    "body": "> @chriseth Does it make sense to keep that behavior of libraries now that free functions exist? More conceptual simplification of libraries would be nice. (I realize this is off-topic for this particular issue; I can create a new one if this idea is not completely off.)\r\n\r\nWe still need #9211 in order to be able to phase out the call behaviour of libraries, but in general I would agree.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/922931622/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924879248",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-924879248",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 924879248,
    "node_id": "IC_kwDOAm_5kc43IImQ",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T12:23:03Z",
    "updated_at": "2021-09-22T12:23:03Z",
    "author_association": "MEMBER",
    "body": "As I understand this, libraries are also deployed during construction time. Is that correct? In that case, for users who rely on libraries to get around contract-size limit would have problems, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924879248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924880394",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-924880394",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 924880394,
    "node_id": "IC_kwDOAm_5kc43II4K",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T12:24:37Z",
    "updated_at": "2021-09-22T12:24:37Z",
    "author_association": "MEMBER",
    "body": "The constructor does not automatically deploy any libraries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924880394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924883922",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-924883922",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 924883922,
    "node_id": "IC_kwDOAm_5kc43IJvS",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T12:29:39Z",
    "updated_at": "2021-09-22T12:29:39Z",
    "author_association": "MEMBER",
    "body": "Does this mean that the library address needs to be passed as an argument during the constructor?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924883922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925072672",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925072672",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925072672,
    "node_id": "IC_kwDOAm_5kc43I30g",
    "user": {
      "login": "viraj124",
      "id": 26670962,
      "node_id": "MDQ6VXNlcjI2NjcwOTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26670962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/viraj124",
      "html_url": "https://github.com/viraj124",
      "followers_url": "https://api.github.com/users/viraj124/followers",
      "following_url": "https://api.github.com/users/viraj124/following{/other_user}",
      "gists_url": "https://api.github.com/users/viraj124/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/viraj124/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viraj124/subscriptions",
      "organizations_url": "https://api.github.com/users/viraj124/orgs",
      "repos_url": "https://api.github.com/users/viraj124/repos",
      "events_url": "https://api.github.com/users/viraj124/events{/privacy}",
      "received_events_url": "https://api.github.com/users/viraj124/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T16:07:51Z",
    "updated_at": "2021-09-22T16:07:51Z",
    "author_association": "NONE",
    "body": "on first thought as a solidity dev I believe for a contract using multiple libraries would need to have all those libraries deployed first before deploying the contract right might make deployment cumbersome would be good to know more details",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925072672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925096667",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925096667",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925096667,
    "node_id": "IC_kwDOAm_5kc43I9rb",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T16:37:37Z",
    "updated_at": "2021-09-22T16:37:37Z",
    "author_association": "MEMBER",
    "body": "Maybe to clarify: This is just about libraries with public functions, internal functions are a whole different thing. Calling functions on the libraries discussed here will use `delegatecall`, and not a direct jump.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925096667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925191515",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925191515",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925191515,
    "node_id": "IC_kwDOAm_5kc43JU1b",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T18:38:40Z",
    "updated_at": "2021-09-22T18:40:35Z",
    "author_association": "MEMBER",
    "body": "During the call, we briefly mentioned the idea of a library interface. The difference being that calls would be `delegatecall`. I think this might be another approach for this, and can be used as a replacement for some proxy designs that rely on low-level delegate calls.\r\n\r\nSyntax could look like:\r\n\r\n```solidity\r\ninterface library L {\r\n    function f() external;\r\n    function g() external;\r\n}\r\n```\r\n\r\nNow `L` can be treated similarly to how regular interfaces can be treated:\r\n1. they can be stored both as `immutable` state variable as well as regular state variable (to get upgradability).\r\n2. `new L()` isn't well-defined and cannot type check.\r\n3. `L(<address>).f()` would be a delegate call instead of call or staticcall.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925191515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925351910",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925351910",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925351910,
    "node_id": "IC_kwDOAm_5kc43J7_m",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T21:42:40Z",
    "updated_at": "2021-09-22T21:42:40Z",
    "author_association": "MEMBER",
    "body": "Do we also want to also document the calling convention for stuff that's not available in contract external functions? E.g. mappings or `storage` arguments?\r\n\r\nWe also discussed `new L()` (in case where it's a library rather than interface). I'm not really sure if that has a good use case. I mean, why would someone deploy multiple copies of a library if it cannot have any state? And if that's just a single copy, then isn't it strictly better to just deploy it rather than deploy a contract that contains its bytecode and can deploy it?\r\n\r\nBTW, for anyone who wants to brainstorm this, there's also a topic on the forum: [Dynamic linking for Libraries](https://forum.soliditylang.org/t/dynamic-linking-for-libraries/528).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925351910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925355715",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925355715",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925355715,
    "node_id": "IC_kwDOAm_5kc43J87D",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T21:50:04Z",
    "updated_at": "2021-09-22T21:50:04Z",
    "author_association": "CONTRIBUTOR",
    "body": ">I'm not really sure if that has a good use case. I mean, why would someone deploy multiple copies of a library if it cannot have any state? \r\n\r\nThe use case that lead to this discussion was me working on a factory contract where the created contracts needed to be linked to a library. Had this existed, I would've run `new L()` in the factory's constructor.\r\n\r\n>And if that's just a single copy, then isn't it strictly better to just deploy it rather than deploy a contract that contains its bytecode and can deploy it?\r\n\r\nSure, but that means you now need to send two transactions instead of one, making deployment slightly more difficult. I'm not saying that's a strong enough argument to have it, but if it can be done and it is simple to implement, why not be permissive? Work on this front might also open the door to libraries actually having constructors where they set `immutable` arguments (e.g. fixed point library with different decimal places), which would IMO be a fantastic development.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925355715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925367782",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925367782",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925367782,
    "node_id": "IC_kwDOAm_5kc43J_3m",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T22:13:27Z",
    "updated_at": "2021-09-22T22:13:55Z",
    "author_association": "MEMBER",
    "body": "> The use case that lead to this discussion was me working on a factory contract where the created contracts needed to be linked to a library.\r\n\r\nBut was that library the same for all created contracts? If so, then wouldn't it be much more efficient (like N+1 vs 2N) to link them all with a single instance of the library deployed beforehand?\r\n\r\n> Sure, but that means you now need to send two transactions instead of one, making deployment slightly more difficult. I'm not saying that's a strong enough argument to have it, but if it can be done and it is simple to implement, why not be permissive?\r\n\r\nThe whole language is generally going in the direction of being less permissive in cases that are known to be bad practices :) I think a new feature should at least have *some* good use cases that redeem it so I'm looking for one. Here it's mostly about cost so maybe you're right and we can afford to be permissive though.\r\n\r\nMy concern is simply that if you use `new`, you are basically deploying the library one extra time (as a part of your contract), which is a lot if it's meant to be deployed only once. I think we should not steer people towards doing it by default just because the other way is less convenient. Allowing variables of library types without allowing `new` would still be enough to make linking easier (you just pass the address to the constructor when deploying).\r\n\r\n> libraries actually having constructors where they set `immutable` arguments (e.g. fixed point library with different decimal places), which would IMO be a fantastic development.\r\n\r\nNow, that does sound interesting. I did not consider the possibility of immutables in the library itself.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925367782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925384531",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-925384531",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 925384531,
    "node_id": "IC_kwDOAm_5kc43KD9T",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T22:52:01Z",
    "updated_at": "2021-09-22T22:53:36Z",
    "author_association": "CONTRIBUTOR",
    "body": ">But was that library the same for all created contracts? If so, then wouldn't it be much more efficient (like N+1 vs 2N) to link them all with a single instance of the library deployed beforehand?\r\n\r\nMaybe I didn't explain this situation correctly. Imagine we live in a world where this issue is addressed, libraries can be `immutable` state variables and linking is not required. What I then have is:\r\n\r\n```\r\nlibrary L { }\r\n\r\ncontract MultipleCopies {\r\n   constructor(L) { ... } // store immutable reference\r\n}\r\n\r\ncontract Factory {\r\n  constructor() { l = new L() } // deploy lib to be used for contract creation\r\n  \r\n  function create() external { new MultipleCopies(l) }\r\n}\r\n```\r\n\r\nWith this in place, I don't have to worry about the fact that there's a library involved: the factory deploys it for me. \r\n\r\nIn particular, deployment of this factory is the same as deployment of a factory that does not use libraries, which is what I was actually going for: I had to extract some functionality out of a contract into a library due to bytecode size issues, but didn't want for that to have a large impact outside of the callsites. Unfortunately, this led me to not only having to deploy another contract as part of the deployment (the library), but also to deal with linking, hence the current conversation.\r\n\r\n---\r\n\r\nAgain, this was not particularly problematic: I can easily live with a multi-tx deployment. But it seems like such a natural thing to have that disallowing it feels a bit silly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925384531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936103195",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-936103195",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 936103195,
    "node_id": "IC_kwDOAm_5kc43y80b",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T12:02:30Z",
    "updated_at": "2021-10-06T12:02:43Z",
    "author_association": "MEMBER",
    "body": "About libraries and delegatecalls in general, there are two problems right now.\r\n1. Solidity currently doesn't provide a high level way to delegatecall a contract. You current need to do `address(...).delegatecall(abi.encode(...))` followed by checking if the call succeeded, and the return value (also maybe `extcodesize` check.\r\n2. Dynamic linking.\r\n\r\nI think problem 1 is much more important than problem 2. If we implement the current proposed solution for problem 2, then I think the solution would be somewhat abused to solve problem 1. Here's an example.\r\n\r\n```solidity\r\n// An interface that we want to delegatecall.\r\ninterface I {\r\n    function f(uint) external returns(uint);\r\n}\r\n// A fake library that will be used like an interface.\r\nlibrary L {\r\n    function f(uint) external returns(uint) { }\r\n}\r\ncontract C {\r\n    function g(I impl) external {\r\n        uint result = L(address(impl)).g();\r\n    }\r\n}\r\n```\r\n\r\nIf we implement this, I think it should be done together with library interfaces.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936103195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/937732797",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-937732797",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 937732797,
    "node_id": "IC_kwDOAm_5kc435Kq9",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T12:12:14Z",
    "updated_at": "2021-10-07T12:12:14Z",
    "author_association": "MEMBER",
    "body": "One thing to consider is that \"using for\" does not work for dynamically-linked libraries. The question is whether people are using that with non-internal functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/937732797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105354",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-1476105354",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 1476105354,
    "node_id": "IC_kwDOAm_5kc5X-5SK",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-20T12:05:39Z",
    "updated_at": "2023-03-20T12:05:39Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476289236",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-1476289236",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 1476289236,
    "node_id": "IC_kwDOAm_5kc5X_mLU",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T14:01:21Z",
    "updated_at": "2023-03-20T14:01:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I stand by my comments [here](https://github.com/ethereum/solidity/issues/11695#issuecomment-921237350), notably:\r\n\r\n>I'm not sure the pros list highlights the radical impact that implementing this issue would have. It would let developers fully do away with the notion of linked libraries, which means being able to drop linking tooling, not worry about bogus creation code (pre-replacement), the strange library replacement metadata, more easily expose libraries in use, among others.\r\n>\r\n>With immutable, we can now have a drop-in replacement that still provides all linked library benefits (notably, reducing runtime bytecode size, which is becoming a huge issue in all non-trivial projects), while avoiding all of the weirdness that comes with linking. Libraries can finally be just another dependency passed as a constructor argument, and all contracts would be 'ready' after compilation, making linking a thing of the past.\r\n>\r\n>Seriously, I recently spent a considerable amount of time puzzling over whether it made sense to rely on assembly-level delegatecall rather than use linked libraries due to the sheer number of new edge cases those would force us to cover.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476289236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476531887",
    "html_url": "https://github.com/ethereum/solidity/issues/11695#issuecomment-1476531887",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11695",
    "id": 1476531887,
    "node_id": "IC_kwDOAm_5kc5YAhav",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T16:12:56Z",
    "updated_at": "2023-03-20T16:12:56Z",
    "author_association": "MEMBER",
    "body": "Yeah - the way this will go down eventually is probably that we'll fully deprecate and remove the current libraries *eventually*. As in: we'll replace internal library functions with free functions (grouped into modules for namespacing) and we'll need *some* other kind of high-level delegatecall mechanism. So the question is rather whether we want to use this issue as umbrella issue for this general plan and protect it from being marked stale or whether we already have another one. We also don't have a concrete plan about when this will happen, but it will happen.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476531887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
