{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11692",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11692/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11692/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11692/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11692",
  "id": 952284276,
  "node_id": "MDU6SXNzdWU5NTIyODQyNzY=",
  "number": 11692,
  "title": "Balance of ERC20 token setting to 0 after try/catch ",
  "user": {
    "login": "MartinSchere",
    "id": 61954243,
    "node_id": "MDQ6VXNlcjYxOTU0MjQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/61954243?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MartinSchere",
    "html_url": "https://github.com/MartinSchere",
    "followers_url": "https://api.github.com/users/MartinSchere/followers",
    "following_url": "https://api.github.com/users/MartinSchere/following{/other_user}",
    "gists_url": "https://api.github.com/users/MartinSchere/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MartinSchere/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MartinSchere/subscriptions",
    "organizations_url": "https://api.github.com/users/MartinSchere/orgs",
    "repos_url": "https://api.github.com/users/MartinSchere/repos",
    "events_url": "https://api.github.com/users/MartinSchere/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MartinSchere/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 455256446,
      "node_id": "MDU6TGFiZWw0NTUyNTY0NDY=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/waiting%20for%20more%20input",
      "name": "waiting for more input",
      "color": "fef2c0",
      "default": false,
      "description": "Issues waiting for more input by the reporter"
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-07-25T14:18:18Z",
  "updated_at": "2022-11-25T12:45:21Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI'm working on a payment splitter contract that receives LP tokens as well as normal tokens:\r\n- If the token is LP, redeem them using `removeLiquidityETH` and then convert to ETH\r\n- Otherwise, just convert them to ETH\r\n\r\nHowever, I found a very weird bug with the try/catch statement: It's setting the token balance to 0 somehow:\r\n\r\n```solidity\r\nfunction receiveAndDistribute(uint256 amount, address token) external override {\r\n        require(amount > 0, \"Distribution: Amount must be greater than 0\");\r\n        \r\n        address WETH = router.WETH();\r\n        IERC20(token).transferFrom(address(msg.sender), address(this), amount);\r\n        IERC20(token).approve(address(router), amount);\r\n\r\n        uint balanceBefore = IERC20(token).balanceOf(address(this)); // Truffle debugger says it's 10\r\n\r\n        // Check if token is LP\r\n        try IUniswapV2Pair(token).getReserves() {\r\n            // Remove liquidity code\r\n        } catch {\r\n            uint balanceAfter = IERC20(token).balanceOf(address(this)); // Now it's 0 according to truffle?!\r\n        }\r\n    }\r\n```\r\n\r\nEven if I implement the most simple function:\r\n\r\n```solidity\r\nfunction checkLP(address token) internal view returns(bool){\r\n\t\tbool isLp;\r\n\t\ttry IUniswapV2Pair(token).token0(){\r\n\t\t\tisLp = true;\r\n\t\t} catch {\r\n\t\t\tisLp = false;\r\n\t\t}\r\n\t\treturn isLp;\r\n\t}\r\n```\r\nAnd then use it in the same function:\r\n\r\n ```solidity\r\n function receiveAndDistribute(uint256 amount, address token) external override {\r\n\t\trequire(amount > 0, \"Distribution: Amount must be greater than 0\");\r\n\t\t\r\n\t\taddress WETH = router.WETH();\r\n\t\tIERC20(token).transferFrom(address(msg.sender), address(this), amount);\r\n\t\tIERC20(token).approve(address(router), amount);\r\n\r\n\t\tuint balanceBefore = IERC20(token).balanceOf(address(this)); // 10 * 10**18\r\n\t\taddress addressBefore = address(this); // 0x28...27577\r\n\r\n\t\tbool isLp = checkLP(token); // This is where everything breaks\r\n\r\n\t\taddress addressAfter = address(this); // 0x28...27577\r\n\t\tuint balanceAfter = IERC20(token).balanceOf(address(this)); // 0\r\n}\r\n```\r\n\r\nWhen I remove the try/catch, the balance is correct and I'm able to call `transferFrom` in the token, otherwise I get `TransferHelper::transferFrom: transferFrom failed` (because the balance is 0)\r\n\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.2+commit.661d1103.Emscripten.clang\r\n- Target EVM version (as per compiler settings): istanbul \r\n- Framework/IDE (e.g. Truffle or Remix): truffle\r\n- EVM execution environment / backend / blockchain client: ganache\r\n- Operating system: WSL2 on Windows 10 pro\r\n\r\n## Steps to Reproduce\r\n\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\";\r\n\r\n\r\ncontract Distribution{\r\n\r\n\tIUniswapV2Router02 router;\r\n\r\n\tconstructor(IUniswapV2Router02 _router){\r\n\t\trouter = _router;\r\n\t}\r\n\r\n\tfunction testBug(uint256 amount, address token) external  {\r\n\t\tIERC20(token).transferFrom(address(msg.sender), address(this), amount);\r\n\t\tIERC20(token).approve(address(router), amount);\r\n\r\n\t\tuint balanceBefore = IERC20(token).balanceOf(address(this));\r\n\r\n\t\ttry IUniswapV2Pair(token).token0(){} catch {}\r\n\r\n\t\tuint balanceAfter = IERC20(token).balanceOf(address(this));\r\n\r\n\t}\r\n}\r\n```\r\n\r\nSteps:\r\n- Compile using 0.8.2\r\n- Instantiate the contract with UniswapRouterV2's address\r\n- Try using the function with any ERC20 token\r\n- With a debugger, check the values of `balanceBefore` and `balanceAfter`\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11692/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11692/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886555439",
    "html_url": "https://github.com/ethereum/solidity/issues/11692#issuecomment-886555439",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11692",
    "id": 886555439,
    "node_id": "IC_kwDOAm_5kc4018Mv",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T09:58:07Z",
    "updated_at": "2021-07-26T09:58:07Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\n\tfunction testBug(uint256 amount, address token) external  {\r\n\t\tIERC20(token).transferFrom(address(msg.sender), address(this), amount);\r\n\t\tIERC20(token).approve(address(router), amount);\r\n\r\n\t\tuint balanceBefore = IERC20(token).balanceOf(address(this));\r\n\r\n\t\ttry IUniswapV2Pair(token).token0(){} catch {}\r\n\r\n\t\tuint balanceAfter = IERC20(token).balanceOf(address(this));\r\n\r\n\t}\r\n```\r\n\r\nAre you saying that `balanceBefore` and `balanceAfter` is different in this case?\r\n\r\nIt might be easier to discuss this on solidity gitter / matrix: https://gitter.im/ethereum/solidity or https://matrix.to/#/#ethereum_solidity:gitter.im.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886555439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886805548",
    "html_url": "https://github.com/ethereum/solidity/issues/11692#issuecomment-886805548",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11692",
    "id": 886805548,
    "node_id": "IC_kwDOAm_5kc4025Qs",
    "user": {
      "login": "MartinSchere",
      "id": 61954243,
      "node_id": "MDQ6VXNlcjYxOTU0MjQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61954243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinSchere",
      "html_url": "https://github.com/MartinSchere",
      "followers_url": "https://api.github.com/users/MartinSchere/followers",
      "following_url": "https://api.github.com/users/MartinSchere/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinSchere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinSchere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinSchere/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinSchere/orgs",
      "repos_url": "https://api.github.com/users/MartinSchere/repos",
      "events_url": "https://api.github.com/users/MartinSchere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinSchere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T15:30:47Z",
    "updated_at": "2021-07-26T15:30:47Z",
    "author_association": "NONE",
    "body": "Yes, exactly. `balanceBefore` and `balanceAfter` are different, which is why I get a revert when trying to call `transferFrom` after the last line of the function.\r\n\r\nI found a workaround by moving the first `transferFrom` below the `checkLP` function described in the example. Now the balance is correct. I would still consider this a potentially dangerous bug.\r\n\r\nI asked for help in gitter, but I got your answer here first. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886805548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886812557",
    "html_url": "https://github.com/ethereum/solidity/issues/11692#issuecomment-886812557",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11692",
    "id": 886812557,
    "node_id": "IC_kwDOAm_5kc4026-N",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T15:40:03Z",
    "updated_at": "2021-07-26T15:40:03Z",
    "author_association": "MEMBER",
    "body": "@MartinSchere I don't really follow the problem. Could you please contact me on `hrkrshnn:matrix.org` on gitter / matrix? Or just ping me on solidity gitter?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886812557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886850335",
    "html_url": "https://github.com/ethereum/solidity/issues/11692#issuecomment-886850335",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11692",
    "id": 886850335,
    "node_id": "IC_kwDOAm_5kc403EMf",
    "user": {
      "login": "MartinSchere",
      "id": 61954243,
      "node_id": "MDQ6VXNlcjYxOTU0MjQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61954243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinSchere",
      "html_url": "https://github.com/MartinSchere",
      "followers_url": "https://api.github.com/users/MartinSchere/followers",
      "following_url": "https://api.github.com/users/MartinSchere/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinSchere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinSchere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinSchere/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinSchere/orgs",
      "repos_url": "https://api.github.com/users/MartinSchere/repos",
      "events_url": "https://api.github.com/users/MartinSchere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinSchere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T16:28:36Z",
    "updated_at": "2021-07-26T16:28:36Z",
    "author_association": "NONE",
    "body": "Sure",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886850335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
