{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12096",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12096/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12096/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12096/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12096",
  "id": 1018349411,
  "node_id": "I_kwDOAm_5kc48ssdj",
  "number": 12096,
  "title": "Library interfaces as a means for high level delegatecalls",
  "user": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-10-06T13:39:47Z",
  "updated_at": "2022-09-14T16:34:22Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "**Problem**: Solidity currently does not offer a way to do a high level delegatecall.\r\n\r\nFor example, to mimic a high level delegatecall to the following interface:\r\n\r\n```solidity\r\ninterface I {\r\n    function f(uint) external (uint);\r\n}\r\n```\r\n\r\none has to do the following:\r\n\r\n```solidity\r\nI impl = I(0x...);\r\nrequire(address(impl).code.length > 0);\r\n(bool sucess, bytes memory ret) = address(impl).delegatecall(abi.encodeWithSelector(I.f.selector, (...));\r\nrequire(success);\r\nuint ret_value = abi.decode(ret, (uint256));\r\n```\r\n\r\n----\r\n\r\n**Proposal**: Library interfaces.\r\n\r\n```solidity\r\nlibrary interface I {\r\n    function g(uint) external returns(uint);\r\n}\r\n```\r\n\r\nNow, the following is a high level `delegatecall`, that behaves exactly like the above code:\r\n```solidity\r\nuint ret_value = I(0x...).g(...);\r\n```\r\n\r\nEffectively the main difference between interfaces and library interfaces are that the former does a `call` or `staticcall`, whereas the latter does a `delegatecall`.\r\n\r\n---\r\n\r\nInheritance: should we allow libraries to inherit from library interfaces? \r\n\r\n```solidity\r\nlibrary interface I {\r\n    function f() external;\r\n}\r\n\r\nlibrary L is I {\r\n    function f() external {\r\n        // the actual implementation\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\nThey can be used as types and variables similar to how interfaces are used. This should cover applications mentioned in https://github.com/ethereum/solidity/issues/11695 (except for `new`).\r\n\r\nFor example:\r\n\r\n```solidity\r\nlibrary interface I {\r\n    function f() external;\r\n}\r\n\r\nlibrary interface J {\r\n   function g() external;\r\n}\r\n\r\ncontract C {\r\n    I immutable impl1;\r\n    J impl2\r\n    // Dynamic linking\r\n    constructor(I _impl1, J _impl2) {\r\n        impl1 = _impl1;\r\n        impl2 = impl2;\r\n    }\r\n\r\n    // Now impl1.f() and impl2.g() are high level delegate calls.\r\n\r\n    // some upgradability features\r\n    function update_impl2(J _impl2) {\r\n         impl2 = _impl2;\r\n    }\r\n}\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12096/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12096/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936269586",
    "html_url": "https://github.com/ethereum/solidity/issues/12096#issuecomment-936269586",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12096",
    "id": 936269586,
    "node_id": "IC_kwDOAm_5kc43zlcS",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T13:48:14Z",
    "updated_at": "2021-10-06T13:48:14Z",
    "author_association": "MEMBER",
    "body": "I don't see why a library should not be able to automatically be a library interface.\r\n\r\nI think libraries should be able to inherit from (multiple) library interfaces so that you can ensure that the interface conforms to the interface.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936269586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936272427",
    "html_url": "https://github.com/ethereum/solidity/issues/12096#issuecomment-936272427",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12096",
    "id": 936272427,
    "node_id": "IC_kwDOAm_5kc43zmIr",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T13:49:54Z",
    "updated_at": "2021-10-06T13:49:54Z",
    "author_association": "MEMBER",
    "body": "Another feature that people would maybe want to use (not sure we should add it) is to forward calls to unknown functions:\r\n```\r\nfallback() {\r\n  impl1.__delegatecall(msg.data);\r\n}\r\n```\r\nBut maybe we can resort to low-level calls in this case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936272427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936277508",
    "html_url": "https://github.com/ethereum/solidity/issues/12096#issuecomment-936277508",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12096",
    "id": 936277508,
    "node_id": "IC_kwDOAm_5kc43znYE",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T13:52:48Z",
    "updated_at": "2021-10-06T14:00:22Z",
    "author_association": "MEMBER",
    "body": "> I don't see why a library should not be able to automatically be a library interface.\r\n\r\nI think the two paradigms in this code `L.f()` and `l.f()` does not belong together. If we allow `l.f()`, then `L.f()` should be disallowed. I'm somewhat in favour of keeping `L.f()` because static linking is more efficient than using immutable.\r\n\r\n```solidity\r\nlibrary L {\r\n   function f() external {\r\n       // ...\r\n   }\r\n}\r\n\r\ncontract C {\r\n    L l = L(0x...);\r\n    function example() external {\r\n        L.f();\r\n        l.f();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/936277508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942304499",
    "html_url": "https://github.com/ethereum/solidity/issues/12096#issuecomment-942304499",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12096",
    "id": 942304499,
    "node_id": "IC_kwDOAm_5kc44Kmzz",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T13:24:12Z",
    "updated_at": "2021-10-13T13:24:12Z",
    "author_association": "MEMBER",
    "body": "Decided to talk with users of libraries and collect a bunch of questions to ask them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942304499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
