{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14404",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14404/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14404/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14404/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14404",
  "id": 1798603993,
  "node_id": "I_kwDOAm_5kc5rNITZ",
  "number": 14404,
  "title": "Duplicated error definitions in the ABI",
  "user": {
    "login": "ultrasecreth",
    "id": 241804,
    "node_id": "MDQ6VXNlcjI0MTgwNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ultrasecreth",
    "html_url": "https://github.com/ultrasecreth",
    "followers_url": "https://api.github.com/users/ultrasecreth/followers",
    "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
    "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
    "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
    "repos_url": "https://api.github.com/users/ultrasecreth/repos",
    "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-11T10:16:48Z",
  "updated_at": "2023-07-11T10:16:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nIf the same error is defined in different files within the inheritance/use chain, it ends up twice in the ABI despite having the same selector. \r\nThe generated bytecode seems fine as I couldn't find the selector being duplicated in it.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.20\r\n- Target EVM version (as per compiler settings): London\r\n- Framework/IDE (e.g. Truffle or Remix): Foundry\r\n- EVM execution environment / backend / blockchain client: N/A\r\n- Operating system: MacOS\r\n\r\n## Steps to Reproduce\r\n\r\n```solidity\r\npragma solidity 0.8.20;\r\n\r\nlibrary A {\r\n    error CustomError();\r\n\r\n    function iCustomError() internal pure {\r\n        revert CustomError();\r\n    }\r\n}\r\n\r\nlibrary B {\r\n    error CustomError();\r\n\r\n    function iCustomError() internal pure {\r\n        revert CustomError();\r\n    }\r\n}\r\n\r\ncontract SolidityBug {\r\n    function foo() public pure {\r\n        A.iCustomError();\r\n    }\r\n\r\n    function bar() public pure {\r\n        B.iCustomError();\r\n    }\r\n}\r\n```\r\n\r\nwill generate \r\n\r\n```json\r\n  \"abi\": [\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"CustomError\",\r\n      \"type\": \"error\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"CustomError\",\r\n      \"type\": \"error\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"bar\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"pure\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"foo\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"pure\",\r\n      \"type\": \"function\"\r\n    }\r\n  ]\r\n```\r\n\r\nI know this seems silly, but the real world example on how this can happen is the following. Here the `AddressEmptyCode` error will be defined in both OZ libs, and it'll end up twice in the ABI. (need to use the latest master from OZ)\r\n\r\n```solidity\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\ncontract SolidityBug is UUPSUpgradeable\r\n{\r\n    function _authorizeUpgrade(address newImplementation) internal override {}\r\n\r\n    function useSafeERC20(IERC20 token, address to, uint256 amount) external {\r\n        SafeERC20.safeTransferFrom(token, msg.sender, to, amount);\r\n    }\r\n}\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14404/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14404/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
