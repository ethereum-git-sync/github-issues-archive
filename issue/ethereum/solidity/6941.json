{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6941",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6941/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6941/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6941/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6941",
  "id": 456055074,
  "node_id": "MDU6SXNzdWU0NTYwNTUwNzQ=",
  "number": 6941,
  "title": "add a new instruction",
  "user": {
    "login": "summertanh",
    "id": 16298463,
    "node_id": "MDQ6VXNlcjE2Mjk4NDYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/16298463?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/summertanh",
    "html_url": "https://github.com/summertanh",
    "followers_url": "https://api.github.com/users/summertanh/followers",
    "following_url": "https://api.github.com/users/summertanh/following{/other_user}",
    "gists_url": "https://api.github.com/users/summertanh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/summertanh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/summertanh/subscriptions",
    "organizations_url": "https://api.github.com/users/summertanh/orgs",
    "repos_url": "https://api.github.com/users/summertanh/repos",
    "events_url": "https://api.github.com/users/summertanh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/summertanh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-06-14T04:28:59Z",
  "updated_at": "2019-11-05T14:09:54Z",
  "closed_at": "2019-11-05T14:09:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "If I want to add a new instruction in the solidity compiler, I have some confusions:\r\n How I pass all the unit tests in test directory?\r\nAnd how to avoid conflicts with the current code?\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6941/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6941/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/502033955",
    "html_url": "https://github.com/ethereum/solidity/issues/6941#issuecomment-502033955",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6941",
    "id": 502033955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjAzMzk1NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T09:11:18Z",
    "updated_at": "2019-06-14T09:11:18Z",
    "author_association": "MEMBER",
    "body": "You can check https://solidity.readthedocs.io/en/v0.5.9/contributing.html#running-the-compiler-tests for information about the tests - basically you'll need a running instance of ``aleth`` (https://github.com/ethereum/solidity) in test mode and run ``scripts/tests.sh``.\r\n\r\nFor adding a new instruction (I guess you mean a non-standard EVM instruction?) I think you mostly need to add it to the list in ``libevmasm/Instruction.h`` (giving it a previously unused 8-bit value, e.g. ``0xfb``). Then you need to define its name and information about it (e.g. number of arguments and return values, etc.) in the maps in ``libevmasm/Instruction.cpp``. After that you should be able to use it in inline assembly already and you can also emit it during code generation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/502033955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/502520079",
    "html_url": "https://github.com/ethereum/solidity/issues/6941#issuecomment-502520079",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6941",
    "id": 502520079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjUyMDA3OQ==",
    "user": {
      "login": "summertanh",
      "id": 16298463,
      "node_id": "MDQ6VXNlcjE2Mjk4NDYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16298463?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/summertanh",
      "html_url": "https://github.com/summertanh",
      "followers_url": "https://api.github.com/users/summertanh/followers",
      "following_url": "https://api.github.com/users/summertanh/following{/other_user}",
      "gists_url": "https://api.github.com/users/summertanh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/summertanh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/summertanh/subscriptions",
      "organizations_url": "https://api.github.com/users/summertanh/orgs",
      "repos_url": "https://api.github.com/users/summertanh/repos",
      "events_url": "https://api.github.com/users/summertanh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/summertanh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-17T03:14:32Z",
    "updated_at": "2019-06-17T03:14:32Z",
    "author_association": "NONE",
    "body": "@ekpyron Thanks for your great answer. I've passed all the test cases, and  added a new instruction successfully. But after adding a non-standard EVM instruction, almost all of the test cases cannot be passed again. How I modify the original test cases so that they can be compatible with the new instruction?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/502520079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/503126047",
    "html_url": "https://github.com/ethereum/solidity/issues/6941#issuecomment-503126047",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6941",
    "id": 503126047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzEyNjA0Nw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T13:04:13Z",
    "updated_at": "2019-06-18T13:04:13Z",
    "author_association": "MEMBER",
    "body": "I don't think that any of the existing tests should fail due to adding a new EVM instruction. If they do there might very well be a bug in your change (i.e. you might have inadvertently added the new instruction to the list in such a way that the byte value of existing instructions changed or something like that). We won't be able to properly help you here without knowing what you do exactly, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/503126047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
