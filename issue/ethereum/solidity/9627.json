{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9627/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9627/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9627/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9627",
  "id": 679122699,
  "node_id": "MDU6SXNzdWU2NzkxMjI2OTk=",
  "number": 9627,
  "title": "Make the hard-coded parts of the optimiser sequence configurable",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "nikola-matic",
    "id": 4415530,
    "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikola-matic",
    "html_url": "https://github.com/nikola-matic",
    "followers_url": "https://api.github.com/users/nikola-matic/followers",
    "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
    "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
    "repos_url": "https://api.github.com/users/nikola-matic/repos",
    "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2020-08-14T12:24:55Z",
  "updated_at": "2022-10-06T19:28:20Z",
  "closed_at": "2022-09-13T18:01:57Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The CSE run at the very end after the stack compressor actively causes problems in https://github.com/ethereum/solidity/issues/9622\r\n\r\nSo maybe we should think about making the hard-coded part of the sequence ``suite.runSequence(\"fDnTOc g\", ast);``, resp. the earlier ``suite.runSequence(\"g\", ast);`` configurable as well.\r\n\r\nMy idea would have been to add ``T``, the literal materializer to the end of the sequence to avoid the problem, but that's simply undone by the CSE without the possibility of preventing that :-).\r\n\r\nI think the main reason for it being done like that is the stack compressor being rather special and needing special care or preservation using the phaser... not sure what's the best solution for this, but it'd be good if this allowed more freedom to configure things if needed.",
  "closed_by": {
    "login": "nikola-matic",
    "id": 4415530,
    "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikola-matic",
    "html_url": "https://github.com/nikola-matic",
    "followers_url": "https://api.github.com/users/nikola-matic/followers",
    "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
    "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
    "repos_url": "https://api.github.com/users/nikola-matic/repos",
    "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9627/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9627/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/674084083",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-674084083",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 674084083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDA4NDA4Mw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T13:49:01Z",
    "updated_at": "2020-08-14T13:49:01Z",
    "author_association": "MEMBER",
    "body": "Here's the gist of my discussion with @ekpyron on Gitter:\r\n\r\nThe reason that the stack compressor and the `g` and `fDnTOc g` parts are hard-coded is that it's just final cleanup and we don't want them to disappear when we use a sequence produced by yul-phaser. This part is not meant to be evaluated using the same criteria as the rest of the sequence (i.e. just taking the size of the resulting code into account).\r\n\r\nIf Stack Compressor is safe to use at arbitrary points in the sequence (it does not have to be effective but must not crash the compiler), it could be assigned a letter and treated as any other step. I just didn't see any practical need for doing it like that and decided to keep it simple. It would need a tiny wrapper to make it accept the same parameters as other steps and the phaser would also need a special case to ignore the Stack Compressor step. Then the hard-coded part could be made a part of the main sequence.\r\n\r\nWe would just need to document that the cleanup part and the compressor should be included when using a custom sequence. Or, for better usability, it might be best to have two separate options: one to change the first part of the sequence (meant to optimize size) and the other to change the final cleanup. It would make it easier to override one without having to change the other. Having phaser actually treat it like two sequences and use different criteria is actually something that came up in my discussions with @chriseth while I was working on it.\r\n\r\nSo implementing it is not a problem, it's just a matter of deciding how configurable we want/need it to be.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/674084083/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/685718458",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-685718458",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 685718458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTcxODQ1OA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T12:58:50Z",
    "updated_at": "2020-09-02T12:58:50Z",
    "author_association": "MEMBER",
    "body": "We discussed it today and decided that making stack compressor a step and the whole sequence configurable is a good idea. Also, we want to keep it simple and have just a single option for changing the sequence.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/685718458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013074158",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1013074158",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1013074158,
    "node_id": "IC_kwDOAm_5kc48Ykju",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T12:24:00Z",
    "updated_at": "2022-01-14T12:24:00Z",
    "author_association": "MEMBER",
    "body": "We should prioritize this, since I think it will help to discuss the IR pipeline with debuggers, since only with this change we can really fine-tine exactly what the optimizer does and doesn't do without intransparent implicit default behaviour.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013074158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015464502",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1015464502",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1015464502,
    "node_id": "IC_kwDOAm_5kc48hsI2",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T14:27:14Z",
    "updated_at": "2022-01-18T14:27:14Z",
    "author_association": "MEMBER",
    "body": "I think we should actually treat it as a breaking change (unless we decide to add a new option instead of changing this one). Some projects I've seen in the wild are using it to avoid \"Stack too deep\" errors. We don't guarantee that the optimizer steps we run won't change between releases but this one is a bit more disruptive. It would make anyone using a custom sequence stop getting stack compressor and it might not be easy to figure out why all of a sudden there are so many stack problems :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015464502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015472228",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1015472228",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1015472228,
    "node_id": "IC_kwDOAm_5kc48huBk",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T14:35:19Z",
    "updated_at": "2022-01-18T14:35:19Z",
    "author_association": "MEMBER",
    "body": "Ultimately we wanted to get rid of the stack compressor anyways... but even if I find the time and manage to actually have the new evm code transform do that, we still have the problem that it will still have to be invoked and even invoked at a different point when compiling for homestead... I wonder if keeping the second path for homestead is really worth it actually...\r\nOr actually... even for newer EVM versions we call it at a different point if stack optimizations are disabled... I think all of this may require some additional thought :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015472228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015878922",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1015878922",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1015878922,
    "node_id": "IC_kwDOAm_5kc48jRUK",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T22:09:23Z",
    "updated_at": "2022-01-18T22:09:23Z",
    "author_association": "MEMBER",
    "body": "I'd stay with the current idea of creating a step just to keep the scope of this task small and manageable :)\r\n\r\nBTW, can you say more about how it relates to Homestead? I don't know much about that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1015878922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1016376145",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1016376145",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1016376145,
    "node_id": "IC_kwDOAm_5kc48lKtR",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-19T11:36:43Z",
    "updated_at": "2022-01-19T11:36:43Z",
    "author_association": "MEMBER",
    "body": "> BTW, can you say more about how it relates to Homestead? I don't know much about that.\r\n\r\nThe new code transform is incompatible with homestead, so we use the optimized version of the old code transform for it - and depending on the code transform it's better to call the stack compressor at different stages (the stack compressor is intertwined with the code transform - the code transform basically tells it which variables it should try to eliminate - for the old code transform that works rather heuristically, for the new one it's a very specific minimal set of variables and further steps afterwards may break things again)\r\n\r\nBut, actually, homestead is only one of two cases in which we run the stack compressor early - the second one is optimized compilation with disabled stack optimization - although I'm not sure that's a reasonable setting we want to keep.\r\n\r\nWe need to think about how to deal with this in the future - maintaining those separate paths right now is a bit unfortunate, but we haven't decided what to do yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1016376145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157626829",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1157626829",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1157626829,
    "node_id": "IC_kwDOAm_5kc5E__vN",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T12:53:51Z",
    "updated_at": "2022-06-16T12:53:51Z",
    "author_association": "MEMBER",
    "body": "This may by the way also partly, or even fully, address the allow performing no optimizations other than stack-to-memory part of https://github.com/ethereum/solidity/issues/13157...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157626829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157627198",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1157627198",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1157627198,
    "node_id": "IC_kwDOAm_5kc5E__0-",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T12:54:16Z",
    "updated_at": "2022-06-16T12:54:16Z",
    "author_association": "MEMBER",
    "body": "Also are we sure we have to consider this a breaking change?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157627198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158218292",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1158218292",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1158218292,
    "node_id": "IC_kwDOAm_5kc5FCQI0",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T22:35:33Z",
    "updated_at": "2022-06-16T22:36:16Z",
    "author_association": "MEMBER",
    "body": "Honestly, my biggest concern is not just that it's breaking but that the breakage will likely happen silently. Anyone actually using it will lose some optimizer steps, possibly without even realizing it.\r\n\r\nBut I have another idea: how about introducing some kind of prefix that will be required to enable the new behavior (for example `--yul-optimizations @fDnTOcg`) and keeping the current behavior by default until 0.9? Then we'd have no issues with breakage, silent or not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158218292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1201349487",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1201349487",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1201349487,
    "node_id": "IC_kwDOAm_5kc5HmyNv",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T15:24:47Z",
    "updated_at": "2022-08-01T15:45:49Z",
    "author_association": "MEMBER",
    "body": "I discussed it with @ekpyron today and adding a prefix would be fine but https://github.com/ethereum/solidity/issues/9627#issuecomment-1016376145 still leads to some ugly complications in the code. We would either have to parameterize `OptimiserSettings` on the EVM version and dialect or introduce some conditional syntax into the sequence.\r\n\r\nWe now lean towards going back to the idea of having a separate \"cleanup\" sequence. So this way the current option would stay as is (i.e. full backwards compatibility) and we would just introduce another one for the `fDnTOc g` part.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1201349487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206335444",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1206335444",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1206335444,
    "node_id": "IC_kwDOAm_5kc5H5zfU",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T11:19:17Z",
    "updated_at": "2022-08-05T11:19:17Z",
    "author_association": "MEMBER",
    "body": "So as for some more guidance:\r\nWe currently have the command line option ``-yul-optimizations steps`` and the standard json option ``optimizerSteps`` (in ``settings.optimizer.yulDetails``) which determines the sequence of yul optimizer steps to be run. The default is defined in ``OptimiserSettings::DefaultYulOptimiserSteps`` in ``libsolidity/interface/OptimiserSettings.h``.\r\nThe sequence is actually run in ``OptimiserSuite::run`` (``libyul/optimiser/Suite.cpp``).\r\n\r\nYou'll see in ``OptimiserSuite::run``, however, that we also have hardcoded parts.\r\nThe initial sequence ``\"hgfo\"`` is fixed and cannot be changed, since it creates the standard form of Yul that's a prerequisite for all optimizer steps.\r\nHowever, for the \"cleanup\" sequence ``\"fDnTOc g\"`` (line 142), it makes sense to make it configurable as well.\r\n\r\nSo the task is to add a separate option, resp. a way to change, that cleanup sequence.\r\n\r\nFirst thing to do would be to add a field for that in ``OptimiserSettings`` with the appropriate default.\r\nThen we'll need to decide how to set them from the outside in the CLI and standard json interfaces (I'm sceptical about a full new CLI option for it and am considering introducing a separator in the current option to split off the cleanup sequence, but I'd like @cameel's input on that).\r\n\r\nThere's one part of the cleanup sequence that will have to remain hardcoded, that's the \"g\" in the end. That's a hard requirement for the later pipeline.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206335444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206348487",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1206348487",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1206348487,
    "node_id": "IC_kwDOAm_5kc5H52rH",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T11:36:18Z",
    "updated_at": "2022-08-05T11:36:18Z",
    "author_association": "MEMBER",
    "body": "So yeah, after talking with @cameel once more passing it in from CLI and standard json should work as follows:\r\n\r\nWe allow a colon in the optimizer steps string as a separator. The behaviour should be as follows:\r\n- Without a colon, the sequence only sets the main optimizer steps just as it does now and uses the default \"fDnTOc\" as cleanup sequence.\r\n- With a colon, everything before the colon is the main optimizer steps and everything after the colon replaces the cleanup sequence.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206348487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206496858",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1206496858",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1206496858,
    "node_id": "IC_kwDOAm_5kc5H6a5a",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T14:06:18Z",
    "updated_at": "2022-08-05T14:06:18Z",
    "author_association": "MEMBER",
    "body": "And we should also have a change in the `breaking` branch that disallows usage without a colon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206496858/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209214004",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1209214004",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1209214004,
    "node_id": "IC_kwDOAm_5kc5IEyQ0",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T10:40:55Z",
    "updated_at": "2022-08-09T10:40:55Z",
    "author_association": "MEMBER",
    "body": "@cameel, as discussed with @ekpyron, one of the things we'll disallow is custom cleanup sequence in nested sequences, i.e. a sequence such as `dhfo[Dg:vu]lfnTUtnIf` would be illegal, as we only want to see the `:` delimiter at nesting level zero. However, should we allow the delimiter to be placed at the beginning, or at the end of a sequence, thus making either the optimizer sequence or cleanup sequence empty? E.g., would these be OK: `:dhfoDgvulfnTUtnIf` or `dhfoDgvulfnTUtnIf:`?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209214004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209217089",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1209217089",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1209217089,
    "node_id": "IC_kwDOAm_5kc5IEzBB",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T10:44:12Z",
    "updated_at": "2022-08-09T10:44:12Z",
    "author_association": "MEMBER",
    "body": "Yes, both at the beginning and at the end is fine.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209217089/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209218209",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1209218209",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1209218209,
    "node_id": "IC_kwDOAm_5kc5IEzSh",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T10:45:27Z",
    "updated_at": "2022-08-09T10:45:27Z",
    "author_association": "MEMBER",
    "body": "Also ``\":\"`` is fine. That's actually among the expected use cases of this :-). (I.e. not perform any optimization other than stack compression and moving variables to memory, if running out of stack space - that'd be the effect of ``\":\"``).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1209218209/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1270580972",
    "html_url": "https://github.com/ethereum/solidity/issues/9627#issuecomment-1270580972",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9627",
    "id": 1270580972,
    "node_id": "IC_kwDOAm_5kc5Lu4bs",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T19:28:20Z",
    "updated_at": "2022-10-06T19:28:20Z",
    "author_association": "MEMBER",
    "body": "I just noticed that we did not update the docs for StandardJSON to mention the cleanup sequence: #13618.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1270580972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
