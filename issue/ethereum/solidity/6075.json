{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6075/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6075/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6075/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6075",
  "id": 413766000,
  "node_id": "MDU6SXNzdWU0MTM3NjYwMDA=",
  "number": 6075,
  "title": "Optimized Compiler failing to optimize simple functions",
  "user": {
    "login": "BrendanChou",
    "id": 3680392,
    "node_id": "MDQ6VXNlcjM2ODAzOTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BrendanChou",
    "html_url": "https://github.com/BrendanChou",
    "followers_url": "https://api.github.com/users/BrendanChou/followers",
    "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
    "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
    "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
    "repos_url": "https://api.github.com/users/BrendanChou/repos",
    "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2019-02-24T01:13:49Z",
  "updated_at": "2019-03-14T15:50:59Z",
  "closed_at": "2019-03-14T10:19:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n-->\r\n\r\n## Description\r\n\r\nsolc 0.5.4 with optimizer runs is failing to properly optimize simple functions such as those in SafeMath as compared to using assembly.\r\n\r\nSee https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1635\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.5.4 (Optimizer with at least 200 runs)\r\n- Framework/IDE (e.g. Truffle or Remix): both Remix (200 runs) and Truffle (10000 runs)",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6075/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6075/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/466955083",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-466955083",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 466955083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njk1NTA4Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T10:16:20Z",
    "updated_at": "2019-02-25T10:16:20Z",
    "author_association": "MEMBER",
    "body": "Could you be more specific? What is your expectation and what does the compiler do?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/466955083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467206596",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467206596",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467206596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzIwNjU5Ng==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T22:17:22Z",
    "updated_at": "2019-02-25T22:18:25Z",
    "author_association": "NONE",
    "body": "I'm not sure exactly what the compiler output is in either case, but \r\n\r\n```\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n    return c;\r\n}\r\n```\r\nis using 38 more gas than:\r\n```\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256 r) {\r\n    assembly {\r\n        if iszero(b) { revert(0, 0) }\r\n        r := div(a, b)\r\n   }\r\n}\r\n```\r\n\r\nThere are more examples in the link given. Almost all SafeMath functions are not compiling in an optimal way",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467206596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467222031",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467222031",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467222031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzIyMjAzMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T23:09:37Z",
    "updated_at": "2019-02-25T23:11:03Z",
    "author_association": "MEMBER",
    "body": "Unoptimised:\r\n```\r\n   div(uint256,uint256):\t407\r\n   div2(uint256,uint256):\t343\r\n```\r\n\r\nOptimised:\r\n```\r\n   div(uint256,uint256):\t328\r\n   div2(uint256,uint256):\t268\r\n```\r\n\r\nWhere `div2` is the hand written assembly and both are public functions in a contract.\r\n\r\nThe unoptimised output:\r\n```\r\n        /* \"opt.sol\":140:292  function div2(uint256 a, uint256 b) pure public returns (uint256 r) {... */\r\n    tag_7:\r\n        /* \"opt.sol\":197:206  uint256 r */\r\n      0x00\r\n        /* \"opt.sol\":243:244  b */\r\n      dup2\r\n        /* \"opt.sol\":236:245  iszero(b) */\r\n      iszero\r\n        /* \"opt.sol\":233:235  if */\r\n      iszero\r\n      tag_12\r\n      jumpi\r\n        /* \"opt.sol\":258:259  0 */\r\n      0x00\r\n        /* \"opt.sol\":255:256  0 */\r\n      dup1\r\n        /* \"opt.sol\":248:260  revert(0, 0) */\r\n      revert\r\n        /* \"opt.sol\":233:235  if */\r\n    tag_12:\r\n        /* \"opt.sol\":283:284  b */\r\n      dup2\r\n        /* \"opt.sol\":280:281  a */\r\n      dup4\r\n        /* \"opt.sol\":276:285  div(a, b) */\r\n      div\r\n        /* \"opt.sol\":271:285  r := div(a, b) */\r\n      swap1\r\n      pop\r\n        /* \"opt.sol\":223:290  {... */\r\n      swap3\r\n      swap2\r\n      pop\r\n      pop\r\n      jump\t// out\r\n```\r\n\r\n```\r\n        /* \"opt.sol\":13:138  function div(uint256 a, uint256 b) pure public returns (uint256) {... */\r\n    tag_10:\r\n        /* \"opt.sol\":69:76  uint256 */\r\n      0x00\r\n        /* \"opt.sol\":96:97  0 */\r\n      dup1\r\n        /* \"opt.sol\":92:93  b */\r\n      dup3\r\n        /* \"opt.sol\":92:97  b > 0 */\r\n      gt\r\n        /* \"opt.sol\":84:98  require(b > 0) */\r\n      iszero\r\n      iszero\r\n      tag_14\r\n      jumpi\r\n      0x00\r\n      dup1\r\n      revert\r\n    tag_14:\r\n        /* \"opt.sol\":104:113  uint256 c */\r\n      0x00\r\n        /* \"opt.sol\":120:121  b */\r\n      dup3\r\n        /* \"opt.sol\":116:117  a */\r\n      dup5\r\n        /* \"opt.sol\":116:121  a / b */\r\n      dup2\r\n      iszero\r\n      iszero\r\n      tag_15\r\n      jumpi\r\n      invalid\r\n    tag_15:\r\n      div\r\n        /* \"opt.sol\":104:121  uint256 c = a / b */\r\n      swap1\r\n      pop\r\n        /* \"opt.sol\":134:135  c */\r\n      dup1\r\n        /* \"opt.sol\":127:135  return c */\r\n      swap2\r\n      pop\r\n      pop\r\n        /* \"opt.sol\":13:138  function div(uint256 a, uint256 b) pure public returns (uint256) {... */\r\n      swap3\r\n      swap2\r\n      pop\r\n      pop\r\n      jump\t// out\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467222031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467222835",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467222835",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467222835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzIyMjgzNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T23:12:44Z",
    "updated_at": "2019-02-25T23:18:43Z",
    "author_association": "MEMBER",
    "body": "The main difference I see is the check for division-by-zero, which you are missing in the hand written version.\r\n\r\nWe could consider tracking value ranges of variables and due to the `require` statement the code generator could avoid adding the check again. We do this in the SMTChecker but that state is not used anywhere else.\r\n\r\nBtw, what is the point of `div` in SafeMath? The compiler generates runtime assertion for division by zero since mid-2016.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467222835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467265609",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467265609",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467265609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI2NTYwOQ==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T02:17:30Z",
    "updated_at": "2019-02-26T02:17:30Z",
    "author_association": "NONE",
    "body": "The newest SafeMath prefers to generate the `revert` opcode instead of the `invalid` opcode. The previous version of `div()` in SafeMath did not do anything besides return `a/b`. I didn't realize that the invalid check was created by the compiler and not the EVM (which will output 0 in the case of a zero divisor)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467265609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467267905",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467267905",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467267905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI2NzkwNQ==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T02:27:57Z",
    "updated_at": "2019-02-26T02:28:58Z",
    "author_association": "NONE",
    "body": "Okay it makes sense that the hand-written version is less gas then. One possible compiler optimization that stands out is optimizing to `a>0` be `iszero(iszero(a))` instead of `iszero(iszero(gt(a,0)))` for any unsigned types.\r\n\r\nBut that's sort of a separate issue, feel free to close this one if it is no longer helpful for you",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467267905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467268417",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467268417",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467268417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI2ODQxNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T02:30:08Z",
    "updated_at": "2019-02-26T02:51:38Z",
    "author_association": "MEMBER",
    "body": "> `iszero(iszero(gt(a,0)))`\r\n\r\nShould be picked up by the optimiser and replaced with `gt(a,0)` according to the rule list.\r\n\r\nUpdate: the optimiser picks it up correctly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467268417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467270107",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467270107",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467270107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI3MDEwNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T02:38:10Z",
    "updated_at": "2019-02-26T02:38:22Z",
    "author_association": "MEMBER",
    "body": "I think we can add the following new optimiser rules:\r\n- `lt(x, 0)` -> `0` -- since this cannot ever be true, `slt` can be used for two's complement <0 checks\r\n- `gt(x, 0)` -> `iszero(iszero(x))` -- same here, there's `sgt` for signed comparison\r\n- `gt(x, ~0))` -> `0`\r\n\r\nThe middle rule makes sense because `iszero(iszero(iszero(iszero(x))))` will be picked up and reduced into `iszero(iszero(x))`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467270107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467374324",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467374324",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467374324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3NDMyNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T09:57:36Z",
    "updated_at": "2019-02-26T09:57:36Z",
    "author_association": "MEMBER",
    "body": "What are the gas costs of just using division in Solidity compared to the assembly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467374324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467375087",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467375087",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467375087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3NTA4Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T09:59:35Z",
    "updated_at": "2019-02-26T09:59:35Z",
    "author_association": "MEMBER",
    "body": "Value range / condition tracking has been on the roadmap, and I think for the yul optimizer we should really implement it. It should also not be that difficult because we already track the values of variables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467375087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467536178",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467536178",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467536178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUzNjE3OA==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T17:35:05Z",
    "updated_at": "2019-02-26T17:35:05Z",
    "author_association": "NONE",
    "body": "Not sure if this is the case, but is the sequence\r\n\r\n```\r\niszero\r\niszero\r\ntag_#\r\njumpi\r\n```\r\n\r\nreducable to simply\r\n\r\n```\r\ntag_#\r\njumpi\r\n```\r\n\r\nsince `jumpi` as I understand it already checks for a non-zero value",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467536178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467548760",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467548760",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467548760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0ODc2MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T18:08:38Z",
    "updated_at": "2019-02-26T18:08:38Z",
    "author_association": "MEMBER",
    "body": "That is true, but I think our current framework can only optimize expressions and not statements. We could add this to the peephole optimizer, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467548760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467550428",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-467550428",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 467550428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU1MDQyOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T18:13:28Z",
    "updated_at": "2019-02-26T18:13:28Z",
    "author_association": "MEMBER",
    "body": "> We could add this to the peephole optimizer, though.\r\n\r\nI think that sounds good.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/467550428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472622304",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472622304",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472622304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjYyMjMwNA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T21:58:01Z",
    "updated_at": "2019-03-13T22:00:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "From https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1678 (I didn't want to creat a new issue, since the topic is the same)\r\n\r\nAs shown by @wjmelements [here](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1678#issuecomment-472605219), when compiling on both [v0.4.24](https://rinkeby.etherscan.io/address/0xff3a0211857b597161f8501eb8436de21ecb8291#code) and [v0.5.5](https://rinkeby.etherscan.io/address/0xb1b7463424f1307ef87d6fbdae7b061dcd1e6206#code), Solidity seems to emit less efficient bytecode when a returned variable is declared inside a function, as opposed to the return value being named in the function declaration and assigned to):\r\n\r\n```\r\n// This one costs more gas to call\r\nfunction add1(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n}\r\n\r\n// This one is cheaper to call\r\nfunction add2(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    require(c >= a);\r\n}\r\n```\r\n\r\nThe difference is not very large (around 400 and 800 gas, depending on the compiler version, when calling the function in question 100 times, so a 1% gas difference for a transaction that only calls said function in a loop), but it may still be worthwhile looking into to find out where this discrepancy comes from.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472622304/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472787757",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472787757",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472787757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc4Nzc1Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T10:15:53Z",
    "updated_at": "2019-03-14T10:15:53Z",
    "author_association": "MEMBER",
    "body": "The difference seemse to be 5 gas for optimized code and 13 for unoptimized code (which I would not consider here).\r\n```\r\n> solc --gas --optimize /tmp/x.sol  \r\n======= /tmp/x.sol:C1 =======\r\nGas estimation:\r\nconstruction:\r\n   87 + 32600 = 32687\r\nexternal:\r\n   add1(uint256,uint256):\t277\r\n\r\n======= /tmp/x.sol:C2 =======\r\nGas estimation:\r\nconstruction:\r\n   81 + 32000 = 32081\r\nexternal:\r\n   add2(uint256,uint256):\t272\r\n```\r\n```\r\n> solc --gas  /tmp/x.sol  \r\n======= /tmp/x.sol:C1 =======\r\nGas estimation:\r\nconstruction:\r\n   87 + 38400 = 38487\r\nexternal:\r\n   add1(uint256,uint256):\t352\r\n\r\n======= /tmp/x.sol:C2 =======\r\nGas estimation:\r\nconstruction:\r\n   87 + 37400 = 37487\r\nexternal:\r\n   add2(uint256,uint256):\t339\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472787757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472788685",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472788685",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472788685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc4ODY4NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T10:18:31Z",
    "updated_at": "2019-03-14T10:18:31Z",
    "author_association": "MEMBER",
    "body": "Since the return variable is an actual variable that can be referenced, it occupies a stack slot. The old optimizer (the new cannot yet be used here) is based on basic blocks and it only optimizes what happens to the stack from block start to block end - it will not modify the stack layout between blocks and thus it cannot remove this stack slot.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472788685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472789206",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472789206",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472789206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc4OTIwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T10:19:59Z",
    "updated_at": "2019-03-14T10:19:59Z",
    "author_association": "MEMBER",
    "body": "I'm closing this now, since everything discussed here that can be implemented with reasonable effort has been implemented. Value range tracking is on the roadmap for the yul optimizer: #6252 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472789206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472924868",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472924868",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472924868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkyNDg2OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:39:47Z",
    "updated_at": "2019-03-14T15:39:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, that makes sense then, considering how the optimizer works. Will the Yul optimizer be able to modify the stack layout across blocks?\r\n\r\nAlso, is there a rough estimate for when you'd expect solc to be able to compile to Yul to make use if its optimizer?\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472924868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472930126",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472930126",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472930126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkzMDEyNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:50:28Z",
    "updated_at": "2019-03-14T15:50:28Z",
    "author_association": "MEMBER",
    "body": "Yes, the yul optimizer was designed to allow cross-block and even cross-function optimizations. The traditional optimizer is a little better on optimizing stack layout, but I think we will get there also with the yul optimizer. I cannot really tell how solidity -> yul will progress, but we currently estimate end of the year for a usable prototype.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472930126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472930380",
    "html_url": "https://github.com/ethereum/solidity/issues/6075#issuecomment-472930380",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6075",
    "id": 472930380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkzMDM4MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T15:50:59Z",
    "updated_at": "2019-03-14T15:50:59Z",
    "author_association": "MEMBER",
    "body": "Here is the first PR on this road: https://github.com/ethereum/solidity/pull/2320",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/472930380/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
