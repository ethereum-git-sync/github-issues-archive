{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8917/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8917/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8917/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8917",
  "id": 616884444,
  "node_id": "MDU6SXNzdWU2MTY4ODQ0NDQ=",
  "number": 8917,
  "title": "Access to calldata variables of reference type in inline assembly.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2020-05-12T18:57:31Z",
  "updated_at": "2020-11-19T23:36:37Z",
  "closed_at": "2020-11-18T11:09:12Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Came up in https://github.com/ethereum/solidity/issues/1803\r\nWe probably need a similar mechanism as for storage slot/offset for this, only with ``_offset`` and ``_length`` (if it's a dynamic array).\r\nSomething like the following should pass:\r\n```\r\ncontract C {\r\n  function g(uint256[] calldata x, uint256 index) external returns(uint256 val) {\r\n    assembly {\r\n      switch lt(val, x_length)\r\n      case 0 {\r\n         val := 0xFF\r\n      }\r\n      default {\r\n        val := calldataload(add(x_offset, mul(index, 32)))\r\n      }\r\n    }\r\n  }\r\n  function f() public returns (bool) {\r\n    uint256[] memory x = new uint256[](3);\r\n    x[0] = 0x41; x[1] = 0x42; x[2] = 0x43;\r\n    assert(this.g(x,0) == 0x41);\r\n    assert(this.g(x,1) == 0x42);\r\n    assert(this.g(x,2) == 0x43);\r\n    assert(this.g(x,3) == 0xFF);\r\n    return true;\r\n  }\r\n}\r\n// ----\r\n// f() -> true\r\n```\r\n\r\n``function f(uint256[3] calldata x) public { assembly { let y := x_length } }`` or ``struct S { ... } function f(S calldata x) public { assembly { let y := x_length } }`` should be TypeErrors (``_length`` is only present for dynamically sized types).\r\nRegarding name collisions the behaviour should be the same as for ``_offset`` and ``_slot`` for ``storage`` variables.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8917/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8917/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/641886068",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-641886068",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 641886068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTg4NjA2OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T09:43:27Z",
    "updated_at": "2020-06-10T09:43:27Z",
    "author_association": "MEMBER",
    "body": "Decision in chat: we indeed do this as ``_offset`` and ``_length`` now. I'll open a separate language design issue to consider moving those underscore suffices to use dots instead, but for now in 0.6 this should be implemented using underscores first.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/641886068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/641987552",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-641987552",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 641987552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTk4NzU1Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T12:55:07Z",
    "updated_at": "2020-06-10T12:55:07Z",
    "author_association": "MEMBER",
    "body": "For making this non-breaking: We allow name collisions, i.e. the following is allowed, but issues a warning:\r\n```\r\nfunction f(uint[] calldata x) {\r\n  assembly {\r\n    let x_offset := 0 // Warning: x_offset shadows the offset of calldata variable x.\r\n    let x_length := 0 // Warning: x_offset shadows the length of calldata variable x.\r\n  }\r\n}\r\n```\r\n\r\nWith 0.7 this warning should etiher become an error, or the problem will vanish anyways if we go for https://github.com/ethereum/solidity/issues/9169 .\r\n\r\nFor now I'd say we just allow this as well without even warning about it:\r\n```\r\nuint x_offset; assembly { let y := x_offset }\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/641987552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642422551",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-642422551",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 642422551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjQyMjU1MQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T05:47:02Z",
    "updated_at": "2020-06-11T05:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since this is finally being done for calldata pointers, how about something similar for external function pointers, with `address` and `selector`?  (Like I suggested earlier. :) ) That being the one other type that takes up two stack slots!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642422551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642494788",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-642494788",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 642494788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjQ5NDc4OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T08:27:11Z",
    "updated_at": "2020-06-11T08:27:11Z",
    "author_association": "MEMBER",
    "body": "@haltman-at you can access these slots via solidity, so I don't think there is a need to add them to inline assembly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642494788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642734889",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-642734889",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 642734889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjczNDg4OQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T15:25:51Z",
    "updated_at": "2020-06-11T15:25:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's read-only though.  Or were these calldata slots going to be read-only as well?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642734889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642791707",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-642791707",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 642791707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjc5MTcwNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T16:30:03Z",
    "updated_at": "2020-06-11T16:30:03Z",
    "author_association": "MEMBER",
    "body": "Ah ok, that of course makes sense! You can do a lot of harm with that, though, since the selector should be tied to the type...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642791707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642800733",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-642800733",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 642800733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjgwMDczMw==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T16:43:28Z",
    "updated_at": "2020-06-11T16:43:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I mean, of course it's dangerous, but I thought that's the point of assembly. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642800733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/695157098",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-695157098",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 695157098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTE1NzA5OA==",
    "user": {
      "login": "saurik",
      "id": 36743,
      "node_id": "MDQ6VXNlcjM2NzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurik",
      "html_url": "https://github.com/saurik",
      "followers_url": "https://api.github.com/users/saurik/followers",
      "following_url": "https://api.github.com/users/saurik/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurik/subscriptions",
      "organizations_url": "https://api.github.com/users/saurik/orgs",
      "repos_url": "https://api.github.com/users/saurik/repos",
      "events_url": "https://api.github.com/users/saurik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T03:22:08Z",
    "updated_at": "2020-09-19T03:22:08Z",
    "author_association": "NONE",
    "body": "This isn't done yet, right? Like, as it stands, if I have a \"bytes calldata\" there isn't a way to figure out where in calldata it is from either Solidity or assembly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/695157098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719503393",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-719503393",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 719503393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTUwMzM5Mw==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:38:31Z",
    "updated_at": "2020-10-30T11:46:06Z",
    "author_association": "NONE",
    "body": "Any reason why `calldata` variables can't work like `memory` ones in assembly, where its value is just its offset in the call data (the analogy with memory variables that they are treated like their memory offset in assembly)?\r\n\r\nFor example\r\n```solidity\r\n    function foo(bytes calldata bar) external pure returns (uint256 offset, uint256 length, uint256 firstWord) {\r\n        assembly {\r\n            // either:\r\n            offset := add(calldataload(bar /*0x04*/), 4)\r\n            // or (this would imply that `calldata` variables already read their ABI-encoded offset from the calldata:\r\n            offset := bar /*0x24*/\r\n            length := calldataload(offset)\r\n            firstWord := calldataload(add(offset, 32))\r\n        }\r\n    }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719503393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/729621841",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-729621841",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 729621841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTYyMTg0MQ==",
    "user": {
      "login": "saurik",
      "id": 36743,
      "node_id": "MDQ6VXNlcjM2NzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurik",
      "html_url": "https://github.com/saurik",
      "followers_url": "https://api.github.com/users/saurik/followers",
      "following_url": "https://api.github.com/users/saurik/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurik/subscriptions",
      "organizations_url": "https://api.github.com/users/saurik/orgs",
      "repos_url": "https://api.github.com/users/saurik/repos",
      "events_url": "https://api.github.com/users/saurik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T11:35:31Z",
    "updated_at": "2020-11-18T11:35:31Z",
    "author_association": "NONE",
    "body": "@chriseth Does this new patch support being able to get the calldata offset of a non-dynamic non-array calldata variable, such as (specifically, for my interests) a struct?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/729621841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730055159",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-730055159",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 730055159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDA1NTE1OQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T01:02:58Z",
    "updated_at": "2020-11-19T01:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth Should I open a new issue for my suggestion above about external function pointers?\r\n\r\n@saurik While I'm not @chriseth (or even on the Solidity team :P ), I'm pretty sure I can answer your question: You could already do that!  In assembly, that offset is what the variable would contain (as that's what's in the variable's stack slot).  No need for any additional syntax.  Am I mistaken there?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730055159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730259825",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-730259825",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 730259825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDI1OTgyNQ==",
    "user": {
      "login": "saurik",
      "id": 36743,
      "node_id": "MDQ6VXNlcjM2NzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurik",
      "html_url": "https://github.com/saurik",
      "followers_url": "https://api.github.com/users/saurik/followers",
      "following_url": "https://api.github.com/users/saurik/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurik/subscriptions",
      "organizations_url": "https://api.github.com/users/saurik/orgs",
      "repos_url": "https://api.github.com/users/saurik/repos",
      "events_url": "https://api.github.com/users/saurik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T09:56:25Z",
    "updated_at": "2020-11-19T09:56:25Z",
    "author_association": "NONE",
    "body": "@haltman-at OK... touche; I now don't remember what problem I ran into that led me to care about this issue in the first place, but it apparently wasn't \"non-dynamic structs\" as I just tested that and it worked (and in fact so did dynamic structs). Maybe I had a dynamic array somewhere before (I have long since rearchitected all of my code to work around this issue, so it is hard to remember what I was doing before ;P). Regardless, thanks for the answer, and sorry about the useless question :) / :(.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730259825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730430278",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-730430278",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 730430278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDQzMDI3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T14:57:50Z",
    "updated_at": "2020-11-19T14:57:50Z",
    "author_association": "MEMBER",
    "body": "@haltman-at yes, please create an issue!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730430278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730704523",
    "html_url": "https://github.com/ethereum/solidity/issues/8917#issuecomment-730704523",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8917",
    "id": 730704523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDcwNDUyMw==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T23:36:37Z",
    "updated_at": "2020-11-19T23:36:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, did that as #10358!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/730704523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
