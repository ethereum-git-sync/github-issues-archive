{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1682",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1682/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1682/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1682/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1682",
  "id": 206854539,
  "node_id": "MDU6SXNzdWUyMDY4NTQ1Mzk=",
  "number": 1682,
  "title": "Contract function that references `msg.sender` fails when called from within another contract",
  "user": {
    "login": "Grety",
    "id": 8309006,
    "node_id": "MDQ6VXNlcjgzMDkwMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8309006?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Grety",
    "html_url": "https://github.com/Grety",
    "followers_url": "https://api.github.com/users/Grety/followers",
    "following_url": "https://api.github.com/users/Grety/following{/other_user}",
    "gists_url": "https://api.github.com/users/Grety/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Grety/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Grety/subscriptions",
    "organizations_url": "https://api.github.com/users/Grety/orgs",
    "repos_url": "https://api.github.com/users/Grety/repos",
    "events_url": "https://api.github.com/users/Grety/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Grety/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 455256446,
      "node_id": "MDU6TGFiZWw0NTUyNTY0NDY=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/waiting%20for%20more%20input",
      "name": "waiting for more input",
      "color": "fef2c0",
      "default": false,
      "description": "Issues waiting for more input by the reporter"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-02-10T17:19:59Z",
  "updated_at": "2017-02-15T18:11:39Z",
  "closed_at": "2017-02-15T18:10:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Is it supposed to be like this and I am just missing some docs or is it a bug?\r\n\r\nAfter getting stuck with own implementation I started searching web. The closest MCVE is this [ethereum.stackexchange.com answer](http://ethereum.stackexchange.com/a/2831/4853). \r\n\r\nI simplified Solidity code from that post a little. There is no need in base contract `mortal` and I pass the address of `Name` instance (`watch_addr` from the post) for the sake of changeability.\r\n```\r\npragma solidity ^0.4.9;\r\n\r\ncontract Name {\r\n\r\n    mapping(address=>string) public text;\r\n    string public test;\r\n\r\n    function register(string _text){\r\n        text[msg.sender]    = _text;\r\n    }\r\n\r\n    function getName() constant returns (string) {\r\n    \treturn text[msg.sender];\r\n    }\r\n}\r\n\r\ncontract Proxy {\r\n\r\n    address user_addr   = msg.sender;\r\n\r\n    function register(string _text, address watch_addr){\r\n        Name name = Name(watch_addr);\r\n        name.register(_text);\r\n    }\r\n}\r\n```\r\n\r\nWhen used via `Proxy` the method call `register` silently throws internally and has no affect on the storage.\r\n```\r\n...\r\nyield name.register('test name');\r\nconsole.log(`registered name is ${name.getName()}`);// registered name is test name\r\nyield proxy.register('proxy overridden name', addresses.Name);\r\nconsole.log(`registered name is ${name.getName()}`);// registered name is test name\r\n...\r\n```\r\nHowever, if I change the text of contract function `Name.register` and `Name.getName`  to work with a static address (it works well with just `0x001`) instead of `msg.sender` the last line in js code prints `registered name is proxy overriden name`.\r\n\r\n**Environment**: Geth/v1.5.5-stable-ff07d548/linux/go1.7.3, js code runs in Node v7.4.0, compiler: npm/solc/v0.4.9\r\n\r\nThanks for looking into this!",
  "closed_by": {
    "login": "Grety",
    "id": 8309006,
    "node_id": "MDQ6VXNlcjgzMDkwMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8309006?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Grety",
    "html_url": "https://github.com/Grety",
    "followers_url": "https://api.github.com/users/Grety/followers",
    "following_url": "https://api.github.com/users/Grety/following{/other_user}",
    "gists_url": "https://api.github.com/users/Grety/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Grety/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Grety/subscriptions",
    "organizations_url": "https://api.github.com/users/Grety/orgs",
    "repos_url": "https://api.github.com/users/Grety/repos",
    "events_url": "https://api.github.com/users/Grety/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Grety/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1682/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1682/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279163097",
    "html_url": "https://github.com/ethereum/solidity/issues/1682#issuecomment-279163097",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1682",
    "id": 279163097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTE2MzA5Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-11T17:49:05Z",
    "updated_at": "2017-02-11T17:49:05Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what setup you are using, but it works well with [remix](https://remix.ethereum.org/). Also note that `msg.sender` will be the address of the `Proxy` instance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279163097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/280084900",
    "html_url": "https://github.com/ethereum/solidity/issues/1682#issuecomment-280084900",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1682",
    "id": 280084900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA4NDkwMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T17:49:33Z",
    "updated_at": "2017-02-15T17:49:33Z",
    "author_association": "MEMBER",
    "body": "The only reason I see why this would throw is that you pass the wrong address. Note that every function call checks that there actually is code at the other end. If you pass a wrong address, it will throw.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/280084900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/280090828",
    "html_url": "https://github.com/ethereum/solidity/issues/1682#issuecomment-280090828",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1682",
    "id": 280090828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA5MDgyOA==",
    "user": {
      "login": "Grety",
      "id": 8309006,
      "node_id": "MDQ6VXNlcjgzMDkwMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8309006?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Grety",
      "html_url": "https://github.com/Grety",
      "followers_url": "https://api.github.com/users/Grety/followers",
      "following_url": "https://api.github.com/users/Grety/following{/other_user}",
      "gists_url": "https://api.github.com/users/Grety/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Grety/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Grety/subscriptions",
      "organizations_url": "https://api.github.com/users/Grety/orgs",
      "repos_url": "https://api.github.com/users/Grety/repos",
      "events_url": "https://api.github.com/users/Grety/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Grety/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T18:10:27Z",
    "updated_at": "2017-02-15T18:11:39Z",
    "author_association": "NONE",
    "body": "Sorry for troubling. Eventually it turned out that the reason was Out of gas for transaction. I was not sending any additional gas, just default value. So it crashed at various places on heavy operations. But still [as far as I understood](https://github.com/ethereum/go-ethereum/issues/3163) gas estimation doesn't work for contract methods... At least I failed to set it up correctly. Now I do estimation but it always estimates to consume all sent gas. Which is not the case if I send real transaction. So I just ran several tests and now send excessive amounts of gas for my contract calls",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/280090828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
