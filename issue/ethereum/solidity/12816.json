{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12816",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12816/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12816/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12816/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12816",
  "id": 1173461709,
  "node_id": "I_kwDOAm_5kc5F8ZrN",
  "number": 12816,
  "title": "Internal getters for mappings",
  "user": {
    "login": "134dd3v",
    "id": 88387604,
    "node_id": "MDQ6VXNlcjg4Mzg3NjA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/88387604?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/134dd3v",
    "html_url": "https://github.com/134dd3v",
    "followers_url": "https://api.github.com/users/134dd3v/followers",
    "following_url": "https://api.github.com/users/134dd3v/following{/other_user}",
    "gists_url": "https://api.github.com/users/134dd3v/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/134dd3v/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/134dd3v/subscriptions",
    "organizations_url": "https://api.github.com/users/134dd3v/orgs",
    "repos_url": "https://api.github.com/users/134dd3v/repos",
    "events_url": "https://api.github.com/users/134dd3v/events{/privacy}",
    "received_events_url": "https://api.github.com/users/134dd3v/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-03-18T11:03:29Z",
  "updated_at": "2022-09-26T21:38:38Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nThe following method exists:\r\n\r\n```solidity\r\nfunction implementedMethod(\r\n        function(int16) view returns (uint256) self,\r\n        int24 someArgs\r\n) internal view returns (int24 someReturnValues) {\r\n        // .... logic\r\n}\r\n```\r\n\r\nNow I want to use the above method to implement:\r\n\r\n```solidity\r\n function overloadedMethod(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 someArgs\r\n) internal view returns (int24 someReturnValues) {\r\n        return implementedMethod(mappingToFunction(self), someArgs);\r\n}\r\n\r\nfunction mappingToFunction(\r\n        mapping(int16 => uint256) storage self, \r\n        int16 val\r\n) internal returns (function(int16) view returns (uint256)) {\r\n        return function (int16 val) internal {\r\n                return self[val];\r\n        };\r\n}\r\n```\r\n\r\nThe above code doesn't work obviously, but is it possible to convert mapping into a view function?\r\n\r\n## Motivation\r\n\r\nMappings are sort of like view functions with one input and one output. So there should be a way to cast a mapping type into a view function.\r\n\r\n## Specification\r\n\r\n```solidity\r\nmapping(typeA => typeB) hello;\r\n\r\nhello.toFunction // type of this should be function(typeA) view returns (typeB)\r\n```\r\n\r\nThe `toFunction` can be something else.\r\n\r\n## Backwards Compatibility\r\n\r\nNo issue\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12816/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12816/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1072502994",
    "html_url": "https://github.com/ethereum/solidity/issues/12816#issuecomment-1072502994",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12816",
    "id": 1072502994,
    "node_id": "IC_kwDOAm_5kc4_7RjS",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-18T15:09:24Z",
    "updated_at": "2022-03-18T15:10:52Z",
    "author_association": "MEMBER",
    "body": "So, basically, you'd like to have a way to ask the compiler to automatically generate an internal getter function for any mapping?\r\n\r\nNote that currently you can do this with with external functions if your mapping is public (because the compiler generates a getter in that case):\r\n```solidity\r\ncontract C {\r\n    mapping(int16 => uint256) public map;\r\n\r\n    function foo(function(int16) external view returns (uint256)) internal view {}\r\n\r\n    function test() public {\r\n        foo(this.map);\r\n    }\r\n}\r\n```\r\n\r\nWith internal functions you can achieve this by defining the function yourself as long as you can access the original storage variable:\r\n```solidity\r\ncontract C {\r\n    mapping(int16 => uint256) map;\r\n\r\n    function mapGetter(int16 key) internal view returns (uint256) {\r\n        return map[key];\r\n    }\r\n\r\n    function foo(function(int16) view returns (uint256)) internal view {}\r\n\r\n    function test() public {\r\n        foo(mapGetter);\r\n    }\r\n}\r\n```\r\nIf you only have a variable reference via a `storage` parameter, this is not currently doable but will be if we implement #12297.\r\n\r\n> Backwards Compatibility\r\n> No issue\r\n\r\nThere is an issue, at least with your proposed syntax. Due to `using for`, state variables can have arbitrary members and adding a special `toFunction` would conflict with that. We would have to reserve that name and that would be breaking.\r\n\r\n---\r\n\r\nFinally, can you describe your use case? We need to determine if this is common/useful enough that it would make sense to add special language support for it. What benefit would it have that defining a function manually (or using a closure after #12297) would not provide?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1072502994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1072509061",
    "html_url": "https://github.com/ethereum/solidity/issues/12816#issuecomment-1072509061",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12816",
    "id": 1072509061,
    "node_id": "IC_kwDOAm_5kc4_7TCF",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-18T15:15:28Z",
    "updated_at": "2022-03-18T15:15:51Z",
    "author_association": "MEMBER",
    "body": "Actually, I think that one advantage over #12297 would be that this is much simpler to implement than closures in general. So the main issue is mainly how common is this - we need use cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1072509061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
