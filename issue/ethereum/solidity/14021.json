{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14021",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14021/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14021/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14021/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14021",
  "id": 1606131234,
  "node_id": "I_kwDOAm_5kc5fu54i",
  "number": 14021,
  "title": "Insufficient check for uninitialized storage pointer access",
  "user": {
    "login": "qwaz-theori",
    "id": 113422569,
    "node_id": "U_kgDOBsKw6Q",
    "avatar_url": "https://avatars.githubusercontent.com/u/113422569?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwaz-theori",
    "html_url": "https://github.com/qwaz-theori",
    "followers_url": "https://api.github.com/users/qwaz-theori/followers",
    "following_url": "https://api.github.com/users/qwaz-theori/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwaz-theori/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwaz-theori/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwaz-theori/subscriptions",
    "organizations_url": "https://api.github.com/users/qwaz-theori/orgs",
    "repos_url": "https://api.github.com/users/qwaz-theori/repos",
    "events_url": "https://api.github.com/users/qwaz-theori/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwaz-theori/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 3104779662,
      "node_id": "MDU6TGFiZWwzMTA0Nzc5NjYy",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20report%20error",
      "name": "should report error",
      "color": "666666",
      "default": false,
      "description": "Compiles without errors but should not."
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438481746,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3bUg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have%20eventually",
      "name": "must have eventually",
      "color": "ffb04d",
      "default": false,
      "description": "Something we consider essential but not enough to prevent us from releasing Solidity 1.0 without it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-03-02T05:22:56Z",
  "updated_at": "2023-03-06T11:20:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n```solidity\r\ncontract Foo {\r\n    struct Hi {\r\n        uint256 hello;\r\n    }\r\n\r\n    function foo() internal returns (Hi storage ret) {\r\n        ret = ret;\r\n        ret.hello = 123;\r\n    }\r\n}\r\n```\r\n\r\nThis code accesses `ret` storage pointer without initializing it. It should not compile, but the Solidity compiler accepts this code.\r\n\r\n## Environment\r\n\r\n- Compiler version: `Version: 0.8.18+commit.87f61d96.Linux.g++`\r\n- Target EVM version (as per compiler settings): Default setting\r\n- Operating system: Ubuntu 22.04\r\n\r\n## Steps to Reproduce\r\n\r\nSave the above file as `test.sol` and run `solc test.sol`.\r\n\r\nWithout `ret = ret;` line, the expected warning message is printed:\r\n```\r\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\r\n--> test.sol\r\n\r\nWarning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.18;\"\r\n--> test.sol\r\n\r\nError: This variable is of storage pointer type and can be returned without prior assignment, which would lead to undefined behaviour.\r\n --> test.sol:6:38:\r\n  |\r\n6 |     function foo() internal returns (Hi storage ret) {\r\n  |                                      ^^^^^^^^^^^^^^\r\n\r\nError: This variable is of storage pointer type and can be accessed without prior assignment, which would lead to undefined behaviour.\r\n --> test.sol:7:9:\r\n  |\r\n7 |         ret.hello = 123;\r\n  |         ^^^\r\nNote: The variable was declared here.\r\n --> test.sol:6:38:\r\n  |\r\n6 |     function foo() internal returns (Hi storage ret) {\r\n  |                                      ^^^^^^^^^^^^^^\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14021/reactions",
    "total_count": 3,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14021/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1455916876",
    "html_url": "https://github.com/ethereum/solidity/issues/14021#issuecomment-1455916876",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14021",
    "id": 1455916876,
    "node_id": "IC_kwDOAm_5kc5Wx4dM",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T11:00:00Z",
    "updated_at": "2023-03-06T11:00:00Z",
    "author_association": "MEMBER",
    "body": "Yeah, looks like a bug. The compiler normally would not let you use `ret` in an expression before it is initialized. After the assignment it would stop complaining. Here it's wrongly assuming it has already been assigned when processing the right-hand side.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1455916876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1455950010",
    "html_url": "https://github.com/ethereum/solidity/issues/14021#issuecomment-1455950010",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14021",
    "id": 1455950010,
    "node_id": "IC_kwDOAm_5kc5WyAi6",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T11:20:14Z",
    "updated_at": "2023-03-06T11:20:14Z",
    "author_association": "MEMBER",
    "body": "After discussing it in the team it turns out that it was at least partially intentional. You can suppress a warning about an unused return variable by assigning it to itself - any expression involving the variable on the right-hand side of the assignment will do this. However, this was done way back, before you could assign to storage variables in inline assembly, which would be a better and more explicit way to silence it. The storage case is potentially more dangerous than other cases so we're still going to consider it a bug and disallow it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1455950010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
