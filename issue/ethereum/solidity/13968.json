{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13968",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13968/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13968/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13968/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13968",
  "id": 1582737865,
  "node_id": "I_kwDOAm_5kc5eVqnJ",
  "number": 13968,
  "title": "Compilation time much longer without optimizations enabled than with them enabled",
  "user": {
    "login": "Jack-Clark",
    "id": 13239506,
    "node_id": "MDQ6VXNlcjEzMjM5NTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/13239506?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jack-Clark",
    "html_url": "https://github.com/Jack-Clark",
    "followers_url": "https://api.github.com/users/Jack-Clark/followers",
    "following_url": "https://api.github.com/users/Jack-Clark/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jack-Clark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jack-Clark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jack-Clark/subscriptions",
    "organizations_url": "https://api.github.com/users/Jack-Clark/orgs",
    "repos_url": "https://api.github.com/users/Jack-Clark/repos",
    "events_url": "https://api.github.com/users/Jack-Clark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jack-Clark/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 682993385,
      "node_id": "MDU6TGFiZWw2ODI5OTMzODU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/performance%20:racehorse:",
      "name": "performance :racehorse:",
      "color": "c5def5",
      "default": false,
      "description": ""
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    },
    {
      "id": 4858664852,
      "node_id": "LA_kwDOAm_5kc8AAAABIZlXlA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20investigation",
      "name": "needs investigation",
      "color": "9F804C",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-13T17:08:16Z",
  "updated_at": "2023-05-30T12:04:14Z",
  "closed_at": "2023-05-30T12:04:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\nThe program below takes a long time to compile **without** optimizations enabled, but is very quick with optimizations enabled. This seems like odd behaviour and may suggest something weird going on in the compiler.\r\n```\r\nuint160 constant v0 = (((0 % ((uint96(0 < 0 ? (0) : ((57896044618658097711785492504343953926634992332820282019728792003956564819967)))) - 0))));\r\nuint160 constant v1 = (((v0 ** (((((int256(((((65535) )) )) < 0 ? (((((((65535) ))) ))) : uint256(int256((((((65535) - ((65535)) ))) ))))))) == 0 ? v0 : uint16(((((((((6553565535) ))) )) < 0 ? (((((((6553565535) ))) ))) : ((((((65535))) ))))))))) == 0 ? ((uint8((((((((255255) )) )) < 0 ? uint256((((((255255) )) ))) : uint256(int256(((((((255)) ))) )))))) ** v0) & (uint120((uint120(((((((1329227995784915872903807060280344575) ))) )) < 0 ? uint256(((((((1329227995784915872903807060280344575) ))) ))) : (((((((1329227995784915872903807060280344575) - (1329227995784915872903807060280344575) ))) )))))))) : ((((uint8(int256((((( - (255) ))) )) < 0 ? uint256((((((  (255) ))) ))) : uint256(((((((255) - (255) ))) )))))) *   uint120((uint120(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((633622243003627655816303902590537618024298437763948046000 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) / (uint96(v0) ** ((uint16((uint16(int256((0 % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(0)) : uint256(int256((((- (((63333589844528659455904546595419459198716447290645670587 )) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) == 0 ? v0 : v0 % uint16((uint16(int256((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) )) < 0 ? uint256(((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));\r\nuint160 constant v2 = ((uint96(v1) << (v0 >> uint216((uint216(int256((((- (((1212546125244198100003483652170244291651820393 % 105312291668557186697918027683670432318895095400549111254310977535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((1212546125244198100003483652170244291651820393 % 105312291668557186697918027683670432318895095400549111254310977535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) )))))))) - ((v1 & uint96((uint96(int256((57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(((57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((602744 % 79228162514264337593543950335)) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));\r\nuint160 constant v3 = (((v2 * ((uint112(int256((((- (((37131 % 5192296858534827628530496329220095)) ))) )) < 0 ? uint256(-int256((((- (((37131 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((37131 % 5192296858534827628530496329220095)) % 1))) )))))) >> v2)) & ((uint80((uint80(int256(((((((1208925819614629174706175))) - (((1208925819614629174706175)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((30355150732171146360656859781356 % 120892581961462917470617530355150732171146360656859781356 % 1208925819614629174706175)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((30355150732171146360656859781356 % 12089258196146291747061751208925819614629174706175)) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) ** v0) << ((uint8((uint8(int256((((- (((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) == 0 ? v0 : v0 / uint8((uint8(int256(((((((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 25511504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((255))) - (((255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));\r\nuint192 constant v4 = (((uint40((uint40(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) ** v3) >= (v3 ** uint16((uint16(int256(((((((9.80 % 9.80 % 65535)) % 1))) )) < 0 ? uint256((((((((9.80 % 65535))) - (((9.80 % 65535)) ))) ))) : uint256(int256(((((((9.80 % 65535))) - (((9.80 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) ? ((v3 + uint192((uint192(int256(((((((419667436760 % 6277101735386680763835789423207666416102355444464034512895419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) | (v2 - uint112((uint112(int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) : ((uint136((uint136(int256((((- (((1594235690288794038468860480509258594591250747359972 % 87112285931760246646623899502532662132735)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256((((((((8711228593176024664662389950253266213273587112285931760246646623899502532662132735)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((1594235690288794038468860480509258594591250747359972 % 87112285931760246646623899502532662132735)) ))) )))))) >> v1) - (uint120((uint120(int256(((((((3394355531188923 % 13292279957849158729038070602803445753394355531188923 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((3394355531188923 % 13292279957849158729038070602803445753394355531188923 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((3394355531188923 % 13292279957849158729038070602803445751329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) * v3)));\r\nuint160 constant v5 = uint160(v4) + uint160(v3) + uint160(v2) + uint160(v1) + uint160(v0);\r\nuint160 constant v6 = v5 + v3;\r\nuint160 constant v7 = v6 + v2;\r\nuint160 constant v8 = v7 + v0;\r\nuint160 constant v9 = v8 + v1;\r\n\r\ncontract Test {\r\n\tfunction test() public returns (uint160) {\r\n\t\t// It seems like having a statically detectable infinite loop is necessary in order to \r\n\t\t// trigger a long compilation time.\r\n\t\tfor(;;) {}\r\n\t\tuint160 v10;\r\n\t\tunchecked {\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t\tv10 += v9;\r\n\t\t}\r\n\t\treturn v10;\r\n\t}\r\n}\r\n```\r\n```\r\n$ time solc --bin very_slow_compilation_modified.sol\r\nreal\t5m19.718s\r\nuser\t4m21.302s\r\nsys\t0m57.960s\r\n```\r\n```\r\n$ time solc --bin --optimize very_slow_compilation_modified.sol\r\nreal\t0m26.746s\r\nuser\t0m26.630s\r\nsys\t0m0.100s\r\n```\r\n```\r\n$ time solc --bin --optimize --via-ir very_slow_compilation_modified.sol\r\nreal\t0m0.170s\r\nuser\t0m0.165s\r\nsys\t0m0.004s\r\n```\r\nAs the comments in the program suggest, this seems to require a statically detectable infinite loop. Furthermore, the expressions that impact the compilation time must come after this infinite loop. The requirement for a statically detectable infinite loop potentially limits the scope of the impact, however, it does seem like odd behaviour.\r\n\r\n## Environment\r\n\r\n- Compiler version: Version: 0.8.18+commit.87f61d96.Linux.g++\r\n- Operating system: Ubuntu 20.04\r\n\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13968/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13968/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1436111162",
    "html_url": "https://github.com/ethereum/solidity/issues/13968#issuecomment-1436111162",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13968",
    "id": 1436111162,
    "node_id": "IC_kwDOAm_5kc5VmVE6",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-19T22:11:49Z",
    "updated_at": "2023-02-19T22:11:49Z",
    "author_association": "MEMBER",
    "body": "This is an interesting case. Thanks for the report! It's not specifically infinite loops. Looks like is triggered by any dead code. A simple `revert()` or `return;` will cause this too. The optimizer removes dead code, so I'm not surprised that it's fast with optimization. But looking at `--bin` output, the unused code actually still gets removed even with optimizer disabled. Apparently something between the point where the optimizer normally runs and the point where this dead code is removed (EVM code generation?) is pretty slow.\r\n\r\nThe earliest version where I was able to reproduce this problem is 0.4.17 (with small adjustments - file level constants were not allowed back then). The one thing that stands out to me in the changelog for that version is this:\r\n\r\n> - Optimizer: Add new optimization step to remove unused `JUMPDEST`s.\r\n\r\nThe fact is, on the CLI the optimizer is never truly disabled. We always run the peephole optimizer and **jumpdest removal** steps. It's only possible to disable it completely via Standard JSON. This step probably has something to do with the slowdown. It would be interesting to run this via Standard JSON with the whole optimizer disabled and see if this is the source of the problem.\r\n\r\nAlso, could you check if this affects `--via-ir` as well? If it does, it gives the problem a bit more impact (though in either case I'd still say the impact is low given that it affects only contracts with huge bits of dead code). It can't really be verified on the CLI because `--via-ir` without optimization results in \"Stack too deep\" but you can set minimal optimizations the way described in https://github.com/ethereum/solidity/issues/12533#issuecomment-1013073350 to get only enough optimization to prevent \"stack too deep\" errors.\r\n\r\nOverall, I'm not sure if we should classify this as a bug. I'm inclined to say so, but if it's jumpdest remover, it could just have been designed with the assumption that such pathological dead code is already removed when it runs. @chriseth, what do you think about all this?\r\n\r\nBy the way, the `Test` contract can be reduced quite a bit and still give a measurable difference between versions with and without dead code:\r\n\r\n```solidity\r\ncontract Test {\r\n    function test() public {\r\n        return;\r\n        v5;\r\n    }\r\n}\r\n```\r\n\r\nOn my machine this still takes ~2s with dead code, but finishes almost instantly (~100 ms), with `return` commented out.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1436111162/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1437263377",
    "html_url": "https://github.com/ethereum/solidity/issues/13968#issuecomment-1437263377",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13968",
    "id": 1437263377,
    "node_id": "IC_kwDOAm_5kc5VquYR",
    "user": {
      "login": "Jack-Clark",
      "id": 13239506,
      "node_id": "MDQ6VXNlcjEzMjM5NTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13239506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jack-Clark",
      "html_url": "https://github.com/Jack-Clark",
      "followers_url": "https://api.github.com/users/Jack-Clark/followers",
      "following_url": "https://api.github.com/users/Jack-Clark/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jack-Clark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jack-Clark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jack-Clark/subscriptions",
      "organizations_url": "https://api.github.com/users/Jack-Clark/orgs",
      "repos_url": "https://api.github.com/users/Jack-Clark/repos",
      "events_url": "https://api.github.com/users/Jack-Clark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jack-Clark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T16:16:18Z",
    "updated_at": "2023-02-20T16:16:18Z",
    "author_association": "NONE",
    "body": "Thanks for taking a look at this @cameel. I can produce a measurable difference in execution time using your version of the code and standard json input with the following settings:\r\n```\r\n\"optimizer\": {\r\n    \"enabled\": false,\r\n    \"details\": {\r\n        \"peephole\": true,\r\n        \"inliner\": false,\r\n        \"jumpdestRemover\": true,\r\n        \"orderLiterals\": false,\r\n        \"deduplicate\": false,\r\n        \"cse\": false,\r\n        \"constantOptimizer\": false,\r\n        \"yul\": false\r\n    }\r\n},\r\n\"evmVersion\": \"paris\",\r\n\"viaIR\": false,\r\n```\r\nIt seems like both the peephole and jumpdest optimizations need to be enabled to cause the issue. One thing I didn't mention in the initial report is that it seems like the compile time is increasing non-linearly with the amount of dead code. Very roughly, doubling the amount of dead code increases the compile time by 3x-4x. For example, adding another `v5` increases the compile time from 0.8s to 2.6s and adding a further two `v5`s increases the compile time to 10s. I don't know if this helps pin down the issue. It also doesn't look like this affects `--via-ir`. Using the following settings, I get a \"normal\" compilation time:\r\n```\r\n        \"optimizer\": {\r\n            \"enabled\": false,\r\n            \"details\": {\r\n                \"peephole\": true,\r\n                \"inliner\": false,\r\n                \"jumpdestRemover\": true,\r\n                \"orderLiterals\": false,\r\n                \"deduplicate\": false,\r\n                \"cse\": false,\r\n                \"constantOptimizer\": false,\r\n                \"yul\": true,\r\n                \"yulDetails\": {\r\n                    \"stackAllocation\": true,\r\n                    \"optimizerSteps\": \"\"\r\n                }\r\n            }\r\n        },\r\n        \"evmVersion\": \"paris\",\r\n        \"viaIR\": true,\r\n```\r\nI set `stackAllocation` to true to avoid the stack too deep errors. For completeness, here's the full standard json that is causing issues:\r\n```\r\n{\r\n    \"language\": \"Solidity\",\r\n    \"sources\":\r\n    {\r\n      \"destructible\":\r\n      {\r\n        \"content\": \"uint160 constant v0 = (((0 % ((uint96(0 < 0 ? (0) : ((57896044618658097711785492504343953926634992332820282019728792003956564819967)))) - 0))));uint160 constant v1 = (((v0 ** (((((int256(((((65535) )) )) < 0 ? (((((((65535) ))) ))) : uint256(int256((((((65535) - ((65535)) ))) ))))))) == 0 ? v0 : uint16(((((((((6553565535) ))) )) < 0 ? (((((((6553565535) ))) ))) : ((((((65535))) ))))))))) == 0 ? ((uint8((((((((255255) )) )) < 0 ? uint256((((((255255) )) ))) : uint256(int256(((((((255)) ))) )))))) ** v0) & (uint120((uint120(((((((1329227995784915872903807060280344575) ))) )) < 0 ? uint256(((((((1329227995784915872903807060280344575) ))) ))) : (((((((1329227995784915872903807060280344575) - (1329227995784915872903807060280344575) ))) )))))))) : ((((uint8(int256((((( - (255) ))) )) < 0 ? uint256((((((  (255) ))) ))) : uint256(((((((255) - (255) ))) )))))) *   uint120((uint120(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((633622243003627655816303902590537618024298437763948046000 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) / (uint96(v0) ** ((uint16((uint16(int256((0 % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(0)) : uint256(int256((((- (((63333589844528659455904546595419459198716447290645670587 )) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) == 0 ? v0 : v0 % uint16((uint16(int256((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) )) < 0 ? uint256(((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((63333589844528659455904546595419459198716447290645670587 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));uint160 constant v2 = ((uint96(v1) << (v0 >> uint216((uint216(int256((((- (((1212546125244198100003483652170244291651820393 % 105312291668557186697918027683670432318895095400549111254310977535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((1212546125244198100003483652170244291651820393 % 105312291668557186697918027683670432318895095400549111254310977535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) )))))))) - ((v1 & uint96((uint96(int256((57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(((57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((602744 % 79228162514264337593543950335)) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));uint160 constant v3 = (((v2 * ((uint112(int256((((- (((37131 % 5192296858534827628530496329220095)) ))) )) < 0 ? uint256(-int256((((- (((37131 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((37131 % 5192296858534827628530496329220095)) % 1))) )))))) >> v2)) & ((uint80((uint80(int256(((((((1208925819614629174706175))) - (((1208925819614629174706175)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((30355150732171146360656859781356 % 120892581961462917470617530355150732171146360656859781356 % 1208925819614629174706175)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((30355150732171146360656859781356 % 12089258196146291747061751208925819614629174706175)) ))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) ** v0) << ((uint8((uint8(int256((((- (((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) == 0 ? v0 : v0 / uint8((uint8(int256(((((((11504625071530220116791815411563636715055106176383590791724100624698481300350 % 25511504625071530220116791815411563636715055106176383590791724100624698481300350 % 255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((255))) - (((255)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))));uint192 constant v4 = (((uint40((uint40(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) ** v3) >= (v3 ** uint16((uint16(int256(((((((9.80 % 9.80 % 65535)) % 1))) )) < 0 ? uint256((((((((9.80 % 65535))) - (((9.80 % 65535)) ))) ))) : uint256(int256(((((((9.80 % 65535))) - (((9.80 % 65535)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) ? ((v3 + uint192((uint192(int256(((((((419667436760 % 6277101735386680763835789423207666416102355444464034512895419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((419667436760 % 6277101735386680763835789423207666416102355444464034512895)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) | (v2 - uint112((uint112(int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((22501639574477468342322750253400633278227133977546808687 % 5192296858534827628530496329220095)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))))) : ((uint136((uint136(int256((((- (((1594235690288794038468860480509258594591250747359972 % 87112285931760246646623899502532662132735)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256((((((((8711228593176024664662389950253266213273587112285931760246646623899502532662132735)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256((((- (((1594235690288794038468860480509258594591250747359972 % 87112285931760246646623899502532662132735)) ))) )))))) >> v1) - (uint120((uint120(int256(((((((3394355531188923 % 13292279957849158729038070602803445753394355531188923 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)) < 0 ? uint256(-int256(((((((3394355531188923 % 13292279957849158729038070602803445753394355531188923 % 1329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967))) : uint256(int256(((((((3394355531188923 % 13292279957849158729038070602803445751329227995784915872903807060280344575)) % 1))) % 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) * v3)));uint160 constant v5 = uint160(v4) + v3 + v2 + v1 + v0;contract Test {function test() public {return;v5;}}\"\r\n      }\r\n    },\r\n    \"settings\": \r\n    {\r\n        \"optimizer\": {\r\n            \"enabled\": false,\r\n            \"details\": {\r\n                \"peephole\": true,\r\n                \"inliner\": false,\r\n                \"jumpdestRemover\": true,\r\n                \"orderLiterals\": false,\r\n                \"deduplicate\": false,\r\n                \"cse\": false,\r\n                \"constantOptimizer\": false,\r\n                \"yul\": false\r\n            }\r\n        },\r\n        \"evmVersion\": \"paris\",\r\n        \"viaIR\": false,\r\n        \"outputSelection\": {\r\n            \"*\": {\r\n                \"*\": [\r\n                \"metadata\", \"evm.bytecode\", \"evm.deployedBytecode\"\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1437263377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1557099601",
    "html_url": "https://github.com/ethereum/solidity/issues/13968#issuecomment-1557099601",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13968",
    "id": 1557099601,
    "node_id": "IC_kwDOAm_5kc5cz3RR",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-05-22T12:04:26Z",
    "updated_at": "2023-05-22T12:04:26Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1557099601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1568315220",
    "html_url": "https://github.com/ethereum/solidity/issues/13968#issuecomment-1568315220",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13968",
    "id": 1568315220,
    "node_id": "IC_kwDOAm_5kc5depdU",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-05-30T12:04:12Z",
    "updated_at": "2023-05-30T12:04:12Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1568315220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
