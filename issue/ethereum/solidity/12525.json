{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12525/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12525/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12525/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12525",
  "id": 1101592045,
  "node_id": "I_kwDOAm_5kc5BqPXt",
  "number": 12525,
  "title": "Shadowing named return variable declaration should be an error",
  "user": {
    "login": "artdgn",
    "id": 29574203,
    "node_id": "MDQ6VXNlcjI5NTc0MjAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/29574203?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/artdgn",
    "html_url": "https://github.com/artdgn",
    "followers_url": "https://api.github.com/users/artdgn/followers",
    "following_url": "https://api.github.com/users/artdgn/following{/other_user}",
    "gists_url": "https://api.github.com/users/artdgn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/artdgn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/artdgn/subscriptions",
    "organizations_url": "https://api.github.com/users/artdgn/orgs",
    "repos_url": "https://api.github.com/users/artdgn/repos",
    "events_url": "https://api.github.com/users/artdgn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/artdgn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-01-13T11:40:33Z",
  "updated_at": "2023-01-05T10:44:38Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nShadowing a named return variable declaration is a warning, but should be an error since the value that is returned is of the one from the signature declaration. Only explicitly returning the variable works, but this defeats the purpose of the syntactic sugar of the named signature declaration and avoiding explicit return statements.\r\n\r\n## Environment\r\n\r\nLatest Remix environment, with latest compiler 0.8.7.\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\npragma solidity 0.8.7;\r\n\r\ncontract Test {\r\n\r\n    function veryBad() public view returns(uint good, uint bad) {\r\n        good = 5;\r\n        uint bad = 5;\r\n        // returns (5, 0) which is totally unexpected\r\n    }\r\n\r\n    function notGood() public view returns(uint good, uint bad) {\r\n        good = 5;\r\n        uint bad = 5;\r\n        return (good, bad);\r\n        // returns (5, 5) which is good, but defeats the point of using named return variables\r\n    }\r\n}\r\n```\r\n\r\n## Expected behavior\r\nEither:\r\n1. The compiler raises an error \"error: shadowing named return variables is not allowed\".\r\n2. The compiler returns the last variable with the matching name instead of the first one.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12525/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12525/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012073143",
    "html_url": "https://github.com/ethereum/solidity/issues/12525#issuecomment-1012073143",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
    "id": 1012073143,
    "node_id": "IC_kwDOAm_5kc48UwK3",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T12:02:21Z",
    "updated_at": "2022-01-13T12:02:21Z",
    "author_association": "MEMBER",
    "body": "I don't think option 2 is a good way to go, but I'd be open to promoting this shadowing warning, together with all other shadowing warnings, to errors. However, that would be a breaking change, so we could only do it for 0.9.0.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012073143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012119524",
    "html_url": "https://github.com/ethereum/solidity/issues/12525#issuecomment-1012119524",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
    "id": 1012119524,
    "node_id": "IC_kwDOAm_5kc48U7fk",
    "user": {
      "login": "artdgn",
      "id": 29574203,
      "node_id": "MDQ6VXNlcjI5NTc0MjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/29574203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artdgn",
      "html_url": "https://github.com/artdgn",
      "followers_url": "https://api.github.com/users/artdgn/followers",
      "following_url": "https://api.github.com/users/artdgn/following{/other_user}",
      "gists_url": "https://api.github.com/users/artdgn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artdgn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artdgn/subscriptions",
      "organizations_url": "https://api.github.com/users/artdgn/orgs",
      "repos_url": "https://api.github.com/users/artdgn/repos",
      "events_url": "https://api.github.com/users/artdgn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artdgn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T13:06:41Z",
    "updated_at": "2022-01-13T13:06:41Z",
    "author_association": "NONE",
    "body": ">  but I'd be open to promoting this shadowing warning, together with all other shadowing warnings\r\n\r\nI'm not sure if other cases of shadowing must be errors, but this one is extra dangerous because it's actually reverse-shadowing. The shadowee, rather than the shadower is what's actually returned in the end, even though the correct variable may be used throughout the method. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012119524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012125640",
    "html_url": "https://github.com/ethereum/solidity/issues/12525#issuecomment-1012125640",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
    "id": 1012125640,
    "node_id": "IC_kwDOAm_5kc48U8_I",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T13:14:36Z",
    "updated_at": "2022-01-13T13:14:36Z",
    "author_association": "MEMBER",
    "body": "Ok, I see that one might interpret it like that, yeah...\r\nTo me it seems just like regular shadowing: until I redeclare ``bad``, the name refers to the return variable, so assigning to it will change what is returned, and after I redeclare ```bad`` as a local variable, the name just refers to that local variable and assigning doesn't affect the return value anymore.\r\nThat's also why I wouldn't go for option 2: to me there seems to be little reason to expect the shadowing local variable to end up affecting the returned value - it's just a regular local variable.\r\n\r\nBut independently of that, you may be right, we could consider shadowing return variables to be \"potentially more harmful\" than other forms of shadowing.\r\n\r\nSo we have three options to consider:\r\n1. Rely solely on the warning as we emit now.\r\n2. Make shadowing return variables an error specifically.\r\n3. Make any kind of shadowing an error.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012125640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012603958",
    "html_url": "https://github.com/ethereum/solidity/issues/12525#issuecomment-1012603958",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
    "id": 1012603958,
    "node_id": "IC_kwDOAm_5kc48Wxw2",
    "user": {
      "login": "artdgn",
      "id": 29574203,
      "node_id": "MDQ6VXNlcjI5NTc0MjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/29574203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artdgn",
      "html_url": "https://github.com/artdgn",
      "followers_url": "https://api.github.com/users/artdgn/followers",
      "following_url": "https://api.github.com/users/artdgn/following{/other_user}",
      "gists_url": "https://api.github.com/users/artdgn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artdgn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artdgn/subscriptions",
      "organizations_url": "https://api.github.com/users/artdgn/orgs",
      "repos_url": "https://api.github.com/users/artdgn/repos",
      "events_url": "https://api.github.com/users/artdgn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artdgn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T23:13:29Z",
    "updated_at": "2022-01-13T23:13:29Z",
    "author_association": "NONE",
    "body": "> To me it seems just like regular shadowing: until I redeclare bad, the name refers to the return variable, so assigning to it will change what is returned, and after I redeclare ```bad`` as a local variable, the name just refers to that local variable and assigning doesn't affect the return value anymor\r\n\r\nI think it depends on the mental model of the user. My simplistic mental model (not being aware of how the implementation works), is that named return variables work as if they add an implicit `return (namedVar1, namedVar2);` that I don't need to write myself (e.g. if there are multiple `if` branches in the method). However, in reality, in case of shadowing, the explicit `return (namedVar1, namedVar2);` returns local variables, but the implicit `return (namedVar1, namedVar2);` returns signature variables. \r\n\r\nThe danger is in a large enough project with already existing compiler warnings that are disregarded (for various reasons). A new warning might be easily missed by someone working on a particular scoped change, and the reviewer of that code might miss the shadowing, or have the wrong mental model about it, thinking that it should work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012603958/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013089222",
    "html_url": "https://github.com/ethereum/solidity/issues/12525#issuecomment-1013089222",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12525",
    "id": 1013089222,
    "node_id": "IC_kwDOAm_5kc48YoPG",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T12:47:49Z",
    "updated_at": "2022-01-14T12:47:49Z",
    "author_association": "MEMBER",
    "body": "Yes, I see!\r\nJust as a side-remark unrelated to the issue at hand (you make a good case for making this particular case a full error): our goal is actually that there are no warnings whatsoever that (1) cannot be explicitly silenced via minor adjustments to the code (while retaining the desired behaviour) and (2) for which it is just fine to just ignore them completely.\r\nSo any warning should be taken seriously and production code should never have any residual warnings. If you know cases, in which this is impossible for any reason whatsoever, it may be worthwhile to open separate issues about that.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013089222/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
