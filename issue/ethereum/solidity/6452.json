{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6452/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6452/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6452/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6452",
  "id": 428631250,
  "node_id": "MDU6SXNzdWU0Mjg2MzEyNTA=",
  "number": 6452,
  "title": "msg.sender, tx.origin and address literals should not be payable.",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2019-04-03T08:29:47Z",
  "updated_at": "2020-12-14T19:17:14Z",
  "closed_at": "2020-12-14T19:17:14Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently, `msg.sender` is considered an `address payable` by the Solidity compiler.  However, there is no guarantee that `msg.sender` is `payable` at all, and in fact for a lot of cross-contract calls it is explicitly not payable.  Because the compiler cannot guarantee that `msg.sender` is `payable`, I believe the correct course of action is to mark `msg.sender` as `address` and require the developer to do an explicit cast to `address payable` after they have validated in some way that the caller is in fact `address payable`.\r\n\r\nThis change would follow the theme of moving Solidity towards a more explicit language, which reduces the incident rate of bugs and exploits.  By changing `msg.sender` to `address`, the compiler will validate for the developer what it can assert, but it will not assert things that it cannot know.  The compiler would give the developer a warning, and the developer can then assert additional information that they know (e.g., that `msg.sender` is `address payable`) before proceeding.\r\n\r\nOne difficulty with this is that at the moment, you cannot do an explicit cast from `address` to `address payable`.  My recommendation would be to allow for such an _explicit_ cast, or provide a built-in function that does an explicit cast.  Generally speaking, I want the compiler to stop me when I'm doing something implicitly that cannot be guaranteed by static analysis, or I want it to stop me when I try to do something that the static analyzer can assert is not possible.  However, I do not want the compiler to stop me from _explicitly_ doing something that _may_ be possible (such as converting from `address` to `address payable`).",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6452/reactions",
    "total_count": 7,
    "+1": 5,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6452/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479396386",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479396386",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479396386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTM5NjM4Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T08:41:45Z",
    "updated_at": "2019-04-03T08:41:45Z",
    "author_association": "MEMBER",
    "body": "You're making a good point. As a side remark: You are aware that there is a workaround for converting ``address`` to ``address payable``? You can use ``address x; address payable y = address(uint160(x));`` - we might want to think about adding a smoother way to do this, though.\r\n\r\nApart from that (and given that such an explicit conversion is in fact possible) I think you're right and we should definitely consider changing ``msg.sender`` to ``address`` - that'd be a breaking change, though, so I'll add this for being discussed for the (hopefully soonish) upcoming 0.6.0 release.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479396386/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479398541",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479398541",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479398541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTM5ODU0MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T08:47:58Z",
    "updated_at": "2019-04-03T08:48:24Z",
    "author_association": "MEMBER",
    "body": "Yeah, I'm familiar with routing through `uint16`.  I feel like the developer shouldn't have to try to trick the compiler into letting it do something that the compiler should recognize is a distinct possibility.  It is similar to how if you have a `Cat` class that derives from an `Animal` class, the compiler may know you have an `Animal` and it will refuse to implicitly cast it into a `Cat` but it will allow you to explicitly cast it into a `Cat`.  This explicit cast is the developers way of saying, \"I have done the necessary checks to ensure that this is in fact a `Cat`, so treat it as a `Cat` from here on out.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479398541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479407884",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479407884",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479407884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQwNzg4NA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:14:55Z",
    "updated_at": "2019-04-03T09:14:55Z",
    "author_association": "MEMBER",
    "body": "The main reason for not allowing casts like ``address payable(x);`` is that two-keyword casts look kind of awkward (and would slightly complicate parsing). I wouldn't necessarily think of casting via ``uint160`` as \"tricking the compiler\", but yeah - maybe you're right and we should think of a nicer way for the explicit cast :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479407884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479415444",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479415444",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479415444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQxNTQ0NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:36:35Z",
    "updated_at": "2019-04-03T09:36:35Z",
    "author_association": "MEMBER",
    "body": "The main reason for making `msg.sender` payable is that it simplifies the withdrawal pattern. I think we should find a good solution for the withdrawal pattern first before making this change.\r\n\r\nFor the explicit cast: Perhaps `payable(x)` would be fine already?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479415444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479418399",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479418399",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479418399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQxODM5OQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:45:34Z",
    "updated_at": "2019-04-04T02:40:59Z",
    "author_association": "MEMBER",
    "body": "@chriseth Assuming `payable(x)` works for an explicit cast, what is the problem with the withdraw pattern?\r\n```\r\nfunction withdrawAll() payable {\r\n    payable(msg.sender).call.value(this.balance)();\r\n}\r\n```\r\n\r\nIn this example, the author is explicitly telling the compiler:\r\n> I'm aware that not all `msg.sender`s are `payable`, but I'm either confident that all callers of this method _are_ `payable` or I am OK with the transaction failing if `msg.sender` is not payable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479418399/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479646105",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479646105",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479646105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY0NjEwNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T20:27:47Z",
    "updated_at": "2019-04-03T20:27:47Z",
    "author_association": "MEMBER",
    "body": "@MicahZoltu indeed, it was a proposal on how to solve it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479646105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479646274",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479646274",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479646274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY0NjI3NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T20:28:18Z",
    "updated_at": "2019-04-03T20:28:18Z",
    "author_association": "MEMBER",
    "body": "Oh but it would be\r\n```\r\npayable(msg.sender).transfer(this.balance);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479646274/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479728441",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-479728441",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 479728441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTcyODQ0MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T02:42:29Z",
    "updated_at": "2019-04-04T02:42:29Z",
    "author_association": "MEMBER",
    "body": "Wow, totally screwed up my code snippet example.  Fixed above, though not using `.transfer` because no one should ever use `.transfer` or `.send`.  😉",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/479728441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/493773484",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-493773484",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 493773484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc3MzQ4NA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-19T16:59:48Z",
    "updated_at": "2019-05-19T16:59:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this is changed then need to change the note here: https://solidity.readthedocs.io/en/v0.5.8/types.html#address which says \"For example, if you are using the withdrawal pattern, you can (and should) store the address itself as address, because you invoke the transfer function on msg.sender, which is an address payable\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/493773484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574706133",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-574706133",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 574706133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDcwNjEzMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T15:16:48Z",
    "updated_at": "2020-01-15T15:16:48Z",
    "author_association": "MEMBER",
    "body": "With this change, we should maybe also make address literals non-payable, i.e. in general anything that is not know to be payable should be non-payable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574706133/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742695668",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-742695668",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 742695668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjY5NTY2OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T18:06:33Z",
    "updated_at": "2020-12-10T20:42:46Z",
    "author_association": "MEMBER",
    "body": "@MicahZoltu Just to confirm back with you that we arrive at what you want here ;-). The issue only talkes about address literals, not about integers and we just realized that the open PR still lets ``address(uint160(0))`` be ``address payable`` - that's *not* what we want, right :-)?\r\n\r\nBut then, if we make those cases non-payable as well, the only case left in which ``address(...)`` will be ``address payable`` would be ``address(contract)`` where ``contract`` has a ``receive`` function.\r\n\r\nWhich is ok, but @hrkrshnn and I now started to wonder, if we should go even a step further:\r\n``address(...)`` is just *always* ``address`` (non-payable). The only way to get an ``address payable`` would then be to explicitly use ``payable(...)``.\r\nNow as for contracts: ``address(contract)`` would also always be non-payable and ``payable(contract)`` would *only* be valid if ``contract`` has a ``receive`` function, otherwise it's a compile-time error.\r\n\r\nSo with what part of that do you agree and what do you like most?\r\n\r\nEDIT: @chriseth just mentioned on gitter, that he rather wants to keep ``address(contract)`` being payable, if ``contract`` is payable (i.e. has a ``receive`` function), so we'll go for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742695668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742825369",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-742825369",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 742825369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjgyNTM2OQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T21:57:13Z",
    "updated_at": "2020-12-10T21:57:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hm, why `tx.origin`?  That one should be always be payable, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742825369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742826927",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-742826927",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 742826927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjgyNjkyNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T22:00:26Z",
    "updated_at": "2020-12-10T22:00:26Z",
    "author_association": "MEMBER",
    "body": "Technically today yes, as an EOA must be the origin so it is always payable.\r\n\r\nHowever with a bunch of proposals (like AA) this won't be the case. Perhaps this is too eagerly done, but maybe it is better to prepare for it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742826927/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742949771",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-742949771",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 742949771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjk0OTc3MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T03:50:02Z",
    "updated_at": "2020-12-11T03:50:02Z",
    "author_association": "MEMBER",
    "body": "> `address(...)` is just _always_ `address` (non-payable). The only way to get an `address payable` would then be to explicitly use `payable(...)`.\r\n> Now as for contracts: `address(contract)` would also always be non-payable and `payable(contract)` would _only_ be valid if `contract` has a `receive` function, otherwise it's a compile-time error.\r\n> @chriseth just mentioned on gitter, that he rather wants to keep `address(contract)` being payable, if `contract` is payable (i.e. has a `receive` function), so we'll go for that.\r\n\r\nI have a minor preference for `payable(anything)` always returns an `address payable` and `address(anything)` always returns an `address`.  This is mainly just for consistency and simplicity in the language.  It is generally easier to audit things when everything is explicit and there are no implicit conversions.  To me it feels like `address(contract)` where `contract` has a `receive` function is something that dev time tooling could notice and help a user out with \"this contract has a receive function, did you mean `payable(contract)`?\"\r\n\r\n@chriseth What is the argument for having the implicit conversion?  `address` and `payable` both have a similar number of characters, so it is unclear to me what we gain by having an implicit conversion here?\r\n\r\n----\r\n\r\nOn a separate topic, why don't we just have a type `payable` instead of `address payable`?  I'm guessing this has already been discussed and I just missed or forgot the discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/742949771/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/743180968",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-743180968",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 743180968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzE4MDk2OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T13:03:38Z",
    "updated_at": "2020-12-11T13:03:38Z",
    "author_association": "MEMBER",
    "body": "> On a separate topic, why don't we just have a type payable instead of address payable? I'm guessing this has already been discussed and I just missed or forgot the discussion.\r\n\r\nYeah, that's a bit unfortunate... IIRC initially we wanted to have two single-word names for both types that are now ``address`` and ``address payable``, but we didn't find consensus about names and then went for ``address payable`` as compromise (it may even be that I'm to blame for bringing that suggestion up back then) - which in retrospect may not have been overly wise... but ``payable`` for example is not a particularly good name for a type, is it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/743180968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/743705129",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-743705129",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 743705129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzcwNTEyOQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T05:15:44Z",
    "updated_at": "2020-12-12T05:15:44Z",
    "author_association": "MEMBER",
    "body": "I would argue that pretty much *any* single word name is superior to a two-word name.  😄 Multi-word types increases parser complexity which makes writing tooling harder.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/743705129/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/744416666",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-744416666",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 744416666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQxNjY2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T12:48:19Z",
    "updated_at": "2020-12-14T12:48:19Z",
    "author_association": "MEMBER",
    "body": "That is indeed a point: The reason for `address(<contract>)` to be an `address payable` depending on the presence of a payable fallback or receive function was that otherwise, these functions serve no purpose in the type system. We could, though, also do it in the following way:\r\n\r\n - `address(<contract>)` is always possible, it returns a non-payable address\r\n - `payable(<contract>)` is only possible if there is a payable fallback or receive function and it returns an `address payable`.\r\n\r\nYou can still use `payable(address(<contract>))` to force the conversion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/744416666/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/744653210",
    "html_url": "https://github.com/ethereum/solidity/issues/6452#issuecomment-744653210",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6452",
    "id": 744653210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDY1MzIxMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T19:17:14Z",
    "updated_at": "2020-12-14T19:17:14Z",
    "author_association": "MEMBER",
    "body": "FIxed by https://github.com/ethereum/solidity/pull/10496",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/744653210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
