{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13972",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13972/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13972/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13972/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13972",
  "id": 1583111287,
  "node_id": "I_kwDOAm_5kc5eXFx3",
  "number": 13972,
  "title": "Enable minimal yul optimizations by default.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/55",
    "html_url": "https://github.com/ethereum/solidity/milestone/55",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/55/labels",
    "id": 9037873,
    "node_id": "MI_kwDOAm_5kc4Aiegx",
    "number": 55,
    "title": "0.8.20",
    "description": "",
    "creator": {
      "login": "NunoFilipeSantos",
      "id": 2582498,
      "node_id": "MDQ6VXNlcjI1ODI0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NunoFilipeSantos",
      "html_url": "https://github.com/NunoFilipeSantos",
      "followers_url": "https://api.github.com/users/NunoFilipeSantos/followers",
      "following_url": "https://api.github.com/users/NunoFilipeSantos/following{/other_user}",
      "gists_url": "https://api.github.com/users/NunoFilipeSantos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NunoFilipeSantos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NunoFilipeSantos/subscriptions",
      "organizations_url": "https://api.github.com/users/NunoFilipeSantos/orgs",
      "repos_url": "https://api.github.com/users/NunoFilipeSantos/repos",
      "events_url": "https://api.github.com/users/NunoFilipeSantos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NunoFilipeSantos/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 7,
    "closed_issues": 3,
    "state": "open",
    "created_at": "2023-02-13T14:11:41Z",
    "updated_at": "2023-04-17T15:59:07Z",
    "due_on": "2023-04-05T07:00:00Z",
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2023-02-13T21:41:55Z",
  "updated_at": "2023-04-17T16:12:27Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This was mentioned in other issues, including https://github.com/ethereum/solidity/issues/13721 and https://github.com/ethereum/solidity/issues/12533.\r\n\r\nThe gist is that we want to enable a minimal set of optimizations for the via-IR pipeline, such that:\r\n- Most contracts are likely to compile without error (stack-too-deep)\r\n- Tooling is still likely to be able to analyze bytecode without major hickups (e.g. conservative code deduplication, etc.), while also not having to deal with weird artifacts like redundant library references.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13972/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13972/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1494478075",
    "html_url": "https://github.com/ethereum/solidity/issues/13972#issuecomment-1494478075",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13972",
    "id": 1494478075,
    "node_id": "IC_kwDOAm_5kc5ZE-z7",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T14:54:43Z",
    "updated_at": "2023-04-03T14:54:43Z",
    "author_association": "MEMBER",
    "body": "When we do this, we should replace the \"unoptimized\" preset and also the one with EVMASM optimizer only in external tests with one that uses this minimal optimization level. This will finally let us have all presets pass via IR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1494478075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1505195888",
    "html_url": "https://github.com/ethereum/solidity/issues/13972#issuecomment-1505195888",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13972",
    "id": 1505195888,
    "node_id": "IC_kwDOAm_5kc5Zt3dw",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T12:32:56Z",
    "updated_at": "2023-04-12T12:32:56Z",
    "author_association": "MEMBER",
    "body": "Some extra details on the implementation from @ekpyron:\r\n\r\n> Basically a minimal version of the yul optimizer (like \"u\" and implicitly the optimized evm code transform and stack-to-memory) should run by default (i.e. with `--via-ir` without `--optimize`). But `not` the libevmasm optimizer or more yul optimization steps. And we need the additional option to disable those minimal optimizations as well.\r\n\r\nReconciling that with the existing options in a natural way (i.e. what happens when user explicitly sets `settings.optimizer.yul` to `false`?) is a part of the task. Best if we can limit ourselves to keeping existing options and just flipping their defaults.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1505195888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1511658889",
    "html_url": "https://github.com/ethereum/solidity/issues/13972#issuecomment-1511658889",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13972",
    "id": 1511658889,
    "node_id": "IC_kwDOAm_5kc5aGhWJ",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T16:03:23Z",
    "updated_at": "2023-04-17T16:04:06Z",
    "author_association": "MEMBER",
    "body": "@ekpyron I think that the simplest way to go about it is:\r\n\r\n1. Do not allow disabling Yul optimizer on the CLI.\r\n1. Change default optimizer sequence to `\"u\"` when `--optimize` is not provided\r\n    - Not sure if we should let the user change it in that state. The optimizer is officially disabled after all.\r\n1. Change `settings.optimizer.details.yul` so that `false` does not disable Yul optimizer.\r\n1. `settings.optimizer.details.yulDetails.optimizerSteps` defaults to `\"u\"` when `details.yul` is set to `false`.\r\n\r\nIt's consistent with how currently `optimizer.enabled: false` does not *really* disable the optimizer.\r\n\r\n#### Alternative solution\r\nStill, I don't like the fact that options do not really mean what they sound like so here's an alternative way to do this:\r\n1. Add `--no-optimize` CLI option equivalent to `OptimiserSettings::none()`, i.e. no optimization at all\r\n1. Add new CLI option and make it the default: `--optimize-minimal`\r\n    - equivalent to `OptimiserSettings::minimal()` + minimal Yul optimization\r\n        - Yul optimizer enabled, but sequence set to `\"u\"`\r\n        - `yulDetails.stackAllocation` enabled\r\n        - peephole optimizer enabled\r\n        - jumpdest remover enabled\r\n1. Make `settings.optimizer.enabled: false`, actually disable all of the optimizer.\r\n1. Add `settings.optimizer.baseLevel`, which only changes the set of defaults we use for optimizer settings:\r\n     - `null`: defaults equivalent to `--no-optimize`\r\n     - `\"minimal\"` (default): defaults equivalent to `--optimize-minimal`\r\n     - `\"standard\"`: defaults equivalent to `--optimize`\r\n     - These levels can be now combined with existing settings if the user wants to override something.\r\n\r\nThis provides more fine grained control over the optimizer and makes the options actually mean what they sound like.\r\n\r\nI suspect that you'll say this is too complicated, so I'm going to go with the first variant anyway, but I wanted to put it out there in case you do think this is worthwhile. There's a possibility that we actually do want to have a way to disable the Yul optimizer and the first variant makes it impossible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1511658889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1511681397",
    "html_url": "https://github.com/ethereum/solidity/issues/13972#issuecomment-1511681397",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13972",
    "id": 1511681397,
    "node_id": "IC_kwDOAm_5kc5aGm11",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T16:12:27Z",
    "updated_at": "2023-04-17T16:12:27Z",
    "author_association": "MEMBER",
    "body": "We shouldn't care about CLI too much. We already can't e.g. disable the peephole optimizer in CLI - it's perfectly fine not to be able to disable minimal yul optimizations via CLI either. (And remember, we'll fix this with our CLI rewrite eventually ;-)).\r\n\r\nAlso to help you with disliking that the options don't do what they say they do:\r\n\r\nWith this change, you can *actually* consider the \"minimal yul optimizations\" as having the optimizer *disabled*. Those minimal optimizations just become parts of a Yul transformation for enabling code generation. That's really how we should think about this generally.\r\nSo it's perfectly fine to think of optimizations as disabled while still running those transformations.\r\n\r\nSo I'd go for the simplest solution here. Sounds good enough to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1511681397/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
