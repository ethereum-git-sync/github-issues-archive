{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/2326",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/2326/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/2326/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/2326/events",
  "html_url": "https://github.com/ethereum/solidity/issues/2326",
  "id": 232195800,
  "node_id": "MDU6SXNzdWUyMzIxOTU4MDA=",
  "number": 2326,
  "title": "compiler error (solc 0.4.11) - caused by name of function",
  "user": {
    "login": "lowcid",
    "id": 5903250,
    "node_id": "MDQ6VXNlcjU5MDMyNTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5903250?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lowcid",
    "html_url": "https://github.com/lowcid",
    "followers_url": "https://api.github.com/users/lowcid/followers",
    "following_url": "https://api.github.com/users/lowcid/following{/other_user}",
    "gists_url": "https://api.github.com/users/lowcid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lowcid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lowcid/subscriptions",
    "organizations_url": "https://api.github.com/users/lowcid/orgs",
    "repos_url": "https://api.github.com/users/lowcid/repos",
    "events_url": "https://api.github.com/users/lowcid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lowcid/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-05-30T09:39:00Z",
  "updated_at": "2017-06-28T17:17:10Z",
  "closed_at": "2017-06-28T17:16:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi,\r\n\r\nIt seems the name of a function in a contract is causing a compiler error related to the stack.\r\nThe error arises when the name \"nredit\" is used for a specific function.\r\n**When changing this function name to \"credit\" the contract compiles without errors.**\r\n```\r\nInternal compiler error during compilation:\r\n/build/solidity/src/solidity/libsolidity/../libsolidity/codegen/CompilerContext.h(69): Throw in function unsigned int dev::solidity::CompilerContext::stackHeight() const\r\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\r\nstd::exception::what: std::exception\r\n[dev::tag_comment*] = \r\n```\r\nUsing:\r\n```\r\nlocalhost% solc --version                                                                \r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.4.11+commit.68ef5810.Linux.g++\r\n```\r\nAlso it seems to be related to the other two constant return functions in the contract. When i remove one of them the contract compiles with \"credit\" and also with \"nredit\".\r\n\r\nThe contract (that gives the compile error):\r\n```\r\npragma solidity ^ 0.4.11;\r\n\r\ncontract MyContract {\r\n    address public organizer;\r\n    address first;\r\n    address second;\r\n    address third;\r\n    address nulladdress;\r\n    mapping(uint => Invoice) public invoices;\r\n    mapping(uint => Payment) public payments;\r\n    mapping(uint => CreditNote) public creditnotes;\r\n    uint[] public APlist;\r\n    uint[] public BPlist;\r\n    uint[] public CPlist;\r\n    struct Invoice {\r\n        uint AID;\r\n        uint date; //julian date\r\n        bool Aboola; \r\n        bytes32[3] Abytesa;\r\n        bytes32[3] bytesb;\r\n        bytes32[2] bytesc;\r\n        uint amount;\r\n        bool Aboolb;\r\n\t\tbool Aboolc;\r\n\t\tbool exists;\r\n        uint[] Alista;\r\n        uint[] Alistb;\r\n    }\r\n    struct Payment {\r\n        uint BID;\r\n        uint date; //julian date\r\n        uint RID;\r\n        bool Bboola; \r\n        bytes32[3] bytesb;\r\n        bytes32[2] bytesc;\r\n        uint amount;\r\n        bool Bboolb;\r\n        bool exists;\r\n    }\r\n    struct CreditNote {\r\n        uint CID;\r\n        uint date; //julian date\r\n        uint RID;\r\n        bool Cboola; \r\n        uint amount;\r\n        bool exists;\r\n    }\r\n    function MyContract(address _addra, address _addrb, address _addrc) {\r\n        organizer = msg.sender;\r\n        first = _addra; \r\n        second = _addrb; \r\n        third = _addrc; \r\n        nulladdress = 0x0000000000000000000000000000000000000000;\r\n    }\r\n    function nredit(uint startindex) public constant returns(uint[500] CIDs, uint[500] dates, uint[500] RIDs, bool[500] Cboolas, uint[500] amounts){\r\n    \tuint index = 0;\r\n    \tfor(uint i = startindex; i < getEndIndex(CPlist.length, startindex); i++){\r\n    \t\tCreditNote c = creditnotes[CPlist[i]];\r\n    \t\tCIDs[index] = c.CID;\r\n\t\t\tdates[index] = c.date;\r\n\t\t\tRIDs[index] = c.RID;\r\n\t\t\tCboolas[index] = c.Cboola;\r\n\t\t\tamounts[index] = c.amount;\r\n\t\t\tindex += 1;\r\n    \t}\r\n    }\r\n    function return500InvoicesByDates(uint begindate, uint enddate, uint startindex) public constant returns(uint[500] AIDs, bool[500] Aboolas, uint[500] dates, bytes32[3][500] Abytesas, bytes32[3][500] bytesbs, bytes32[2][500] bytescs, uint[500] amounts, bool[500] Aboolbs, bool[500] Aboolcs){\r\n    \tuint index = 0;\r\n    \tfor(uint i = startindex; i < getEndIndex(APlist.length, startindex); i++){\r\n    \t\tInvoice inv = invoices[APlist[i]];\r\n    \t\tif (inv.date >= begindate && inv.date <= enddate){\r\n    \t\t\tAIDs[index] = inv.AID;\r\n                Aboolas[index] = inv.Aboola;\r\n    \t\t\tdates[index] = inv.date;\r\n    \t\t\tAbytesas[index] = inv.Abytesa;\r\n    \t\t\tbytesbs[index] = inv.bytesb;\r\n    \t\t\tbytescs[index] = inv.bytesc;\r\n   \t \t\t\tamounts[index] = inv.amount;\r\n    \t\t\tAboolbs[index] = inv.Aboolb;\r\n    \t\t\tAboolcs[index] = inv.Aboolc;\r\n    \t\t\tindex += 1;\r\n    \t\t}\r\n    \t}\r\n    }\r\n    function return500PaymentsByDates(uint begindate, uint enddate, uint startindex) public constant returns(uint[500] BIDs, uint[500] dates, uint[500] RIDs, bool[500] Bboolas, bytes32[3][500] bytesbs,bytes32[2][500] bytescs, uint[500] amounts, bool[500] Bboolbs){\r\n    \tuint index = 0;\r\n    \tfor(uint i = 0; i < getEndIndex(BPlist.length, startindex); i++){\r\n    \t\tPayment p = payments[BPlist[i]];\r\n    \t\tif (p.date >= begindate && p.date <= enddate){\r\n    \t\t\tBIDs[index] = p.BID;\r\n\t\t\t\tdates[index] = p.date;\r\n\t\t\t\tRIDs[index] = p.RID;\r\n\t\t\t\tBboolas[index] = p.Bboola;\r\n\t\t\t\tbytesbs[index] = p.bytesb;\r\n    \t\t\tbytescs[index] = p.bytesc;\r\n    \t\t\tamounts[index] = p.amount;\r\n    \t\t\tBboolbs[index] = p.Bboolb; \r\n\t\t\t\tindex += 1;\r\n    \t\t}\r\n    \t}\r\n    }\r\n    function getEndIndex(uint GUIDsLength, uint startindex) internal returns(uint){\r\n    \treturn (GUIDsLength > startindex + 500) ? startindex + 500 : GUIDsLength;\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/2326/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/2326/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/310623267",
    "html_url": "https://github.com/ethereum/solidity/issues/2326#issuecomment-310623267",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2326",
    "id": 310623267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDYyMzI2Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T09:48:28Z",
    "updated_at": "2017-06-23T09:48:28Z",
    "author_association": "MEMBER",
    "body": "Reduced to\r\n```\r\npragma solidity ^ 0.4.11;\r\n\r\ncontract MyContract {\r\n    mapping(uint => Invoice) public invoices;\r\n    struct Invoice {\r\n        uint AID;\r\n        bool Aboola; \r\n\t\tbool Aboolc;\r\n\t\tbool exists;\r\n    }\r\n    function nredit(uint startindex) public constant returns(uint[500] CIDs, uint[500] dates, uint[500] RIDs, bool[500] Cboolas, uint[500] amounts){\r\n    }\r\n    function return500InvoicesByDates(uint begindate, uint enddate, uint startindex) public constant returns(uint[500] AIDs, bool[500] Aboolas, uint[500] dates, bytes32[3][500] Abytesas, bytes32[3][500] bytesbs, bytes32[2][500] bytescs, uint[500] amounts, bool[500] Aboolbs, bool[500] Aboolcs){\r\n    }\r\n    function return500PaymentsByDates(uint begindate, uint enddate, uint startindex) public constant returns(uint[500] BIDs, uint[500] dates, uint[500] RIDs, bool[500] Bboolas, bytes32[3][500] bytesbs,bytes32[2][500] bytescs, uint[500] amounts, bool[500] Bboolbs){\r\n    }\r\n}\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/310623267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
