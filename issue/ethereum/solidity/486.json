{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/486",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/486/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/486/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/486/events",
  "html_url": "https://github.com/ethereum/solidity/issues/486",
  "id": 146712325,
  "node_id": "MDU6SXNzdWUxNDY3MTIzMjU=",
  "number": 486,
  "title": "segfault on gas parameter",
  "user": {
    "login": "VoR0220",
    "id": 7756785,
    "node_id": "MDQ6VXNlcjc3NTY3ODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/VoR0220",
    "html_url": "https://github.com/VoR0220",
    "followers_url": "https://api.github.com/users/VoR0220/followers",
    "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
    "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
    "organizations_url": "https://api.github.com/users/VoR0220/orgs",
    "repos_url": "https://api.github.com/users/VoR0220/repos",
    "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
    "received_events_url": "https://api.github.com/users/VoR0220/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/5",
    "html_url": "https://github.com/ethereum/solidity/milestone/5",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/5/labels",
    "id": 1672322,
    "node_id": "MDk6TWlsZXN0b25lMTY3MjMyMg==",
    "number": 5,
    "title": "Backlog",
    "description": "",
    "creator": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 4,
    "state": "closed",
    "created_at": "2016-03-29T16:51:30Z",
    "updated_at": "2016-08-08T10:35:00Z",
    "due_on": null,
    "closed_at": "2016-08-08T10:35:00Z"
  },
  "comments": 19,
  "created_at": "2016-04-07T18:49:24Z",
  "updated_at": "2016-06-10T05:03:03Z",
  "closed_at": "2016-06-10T05:03:00Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\nvor0220@CaptainNumNutz:solidity/build ‹develop›$ soltest\nRunning 827 test cases...\n\nunknown location:0: fatal error: in \"GasMeterTests/non_overlapping_filtered_costs\": signal: SIGSEGV, si_code: 0 (memory access violation at address: 0x00000000)\n/Users/vor0220/webthree-umbrella/solidity/test/libsolidity/GasMeter.cpp:53: last checkpoint\n\n*** 1 failure is detected in the test module \"EthereumTests\"\n```\n",
  "closed_by": {
    "login": "bobsummerwill",
    "id": 3788156,
    "node_id": "MDQ6VXNlcjM3ODgxNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3788156?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bobsummerwill",
    "html_url": "https://github.com/bobsummerwill",
    "followers_url": "https://api.github.com/users/bobsummerwill/followers",
    "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
    "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
    "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
    "repos_url": "https://api.github.com/users/bobsummerwill/repos",
    "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/486/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/486/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207377928",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-207377928",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 207377928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzM3NzkyOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T11:02:50Z",
    "updated_at": "2016-04-08T11:02:50Z",
    "author_association": "MEMBER",
    "body": "Can you provide a stack trace?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207377928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207524761",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-207524761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 207524761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzUyNDc2MQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T17:22:27Z",
    "updated_at": "2016-04-08T17:22:27Z",
    "author_association": "MEMBER",
    "body": "how would one go about providing a stack trace in this context? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207524761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207712450",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-207712450",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 207712450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzcxMjQ1MA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-09T05:28:20Z",
    "updated_at": "2016-04-09T05:28:20Z",
    "author_association": "MEMBER",
    "body": "Alright, thought about it and yeah, I ran the code with the gas command appended and I get a seg fault :( \n\n```\ncontract test {\n            bytes x;\n            function f(uint a) returns (uint b) {\n                x.length = a;\n                for (; a < 200; ++a) {\n                    x[a] = 9;\n                    b = a * a;\n                }\n                return f(a - 1);\n            }\n        }\n```\n\nproduces\n\n```\nvor0220@CaptainNumNutz:solidity/build ‹fixedDataType*›$ solc inlineArray.sol --gas\n\n======= test =======\nGas estimation:\nconstruction:\n   141 + 116400 = 116541\nexternal:\n[1]    24672 segmentation fault  solc inlineArray.sol --gas\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207712450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207924298",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-207924298",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 207924298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzkyNDI5OA==",
    "user": {
      "login": "bobsummerwill",
      "id": 3788156,
      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3788156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobsummerwill",
      "html_url": "https://github.com/bobsummerwill",
      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T05:54:35Z",
    "updated_at": "2016-04-10T05:54:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@VoR0220 Seg fault?   Ouch!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207924298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207942557",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-207942557",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 207942557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk0MjU1Nw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T08:24:37Z",
    "updated_at": "2016-04-10T08:24:37Z",
    "author_association": "MEMBER",
    "body": "Welp...here's my LLDB output....haven't gotten into the variables yet...but this will give us the idea of where to look. \n\n```\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009467db libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=0x00007fff5fbfe410) + 1131 at GasEstimator.cpp:71, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009467db libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=0x00007fff5fbfe410) + 1131 at GasEstimator.cpp:71\n   68       {\n   69           gasCosts[&_parent][1] += gasCosts[&_child][1];\n   70       };\n-> 71       ASTReduce folder(onNode, onEdge);\n   72       for (ASTNode const* ast: _ast)\n   73           ast->accept(folder);\n   74\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x0000000100946895 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=0x00007fff5fbfe410) + 1317 at GasEstimator.cpp:72, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x0000000100946895 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=0x00007fff5fbfe410) + 1317 at GasEstimator.cpp:72\n   69           gasCosts[&_parent][1] += gasCosts[&_child][1];\n   70       };\n   71       ASTReduce folder(onNode, onEdge);\n-> 72       for (ASTNode const* ast: _ast)\n   73           ast->accept(folder);\n   74\n   75       return gasCosts;\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009468a1 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1329 at iterator:1358, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009468a1 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1329 at iterator:1358\n   1355 bool\n   1356 operator!=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT\n   1357 {\n-> 1358     return !(__x == __y);\n   1359 }\n   1360\n   1361 template <class _Iter1>\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009468b0 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1344 at GasEstimator.cpp:72, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009468b0 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1344 at GasEstimator.cpp:72\n   69           gasCosts[&_parent][1] += gasCosts[&_child][1];\n   70       };\n   71       ASTReduce folder(onNode, onEdge);\n-> 72       for (ASTNode const* ast: _ast)\n   73           ast->accept(folder);\n   74\n   75       return gasCosts;\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009468b3 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1347 at GasEstimator.cpp:73, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009468b3 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1347 at GasEstimator.cpp:73\n   70       };\n   71       ASTReduce folder(onNode, onEdge);\n   72       for (ASTNode const* ast: _ast)\n-> 73           ast->accept(folder);\n   74\n   75       return gasCosts;\n   76   }\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009468bf libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1359 at GasEstimator.cpp:72, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009468bf libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1359 at GasEstimator.cpp:72\n   69           gasCosts[&_parent][1] += gasCosts[&_child][1];\n   70       };\n   71       ASTReduce folder(onNode, onEdge);\n-> 72       for (ASTNode const* ast: _ast)\n   73           ast->accept(folder);\n   74\n   75       return gasCosts;\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001009468c8 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1368 at GasEstimator.cpp:76, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001009468c8 libsolidity.dylib`dev::solidity::GasEstimator::structuralEstimation(_items=size=366, _ast=<unavailable>) + 1368 at GasEstimator.cpp:76\n   73           ast->accept(folder);\n   74\n   75       return gasCosts;\n-> 76   }\n   77\n   78   map<ASTNode const*, GasMeter::GasConsumption> GasEstimator::breakToStatementLevel(\n   79       ASTGasConsumptionSelfAccumulated const& _gasCosts,\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001000a932b soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 683 at GasMeter.cpp:55, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001000a932b soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 683 at GasMeter.cpp:55\n   52           ASTNode const& sourceUnit = m_compiler.ast();\n   53           BOOST_REQUIRE(items != nullptr);\n   54           m_gasCosts = GasEstimator::breakToStatementLevel(\n-> 55               GasEstimator::structuralEstimation(*items, vector<ASTNode const*>({&sourceUnit})),\n   56               {&sourceUnit}\n   57           );\n   58       }\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001000a932f soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 687 at GasMeter.cpp:56, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001000a932f soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 687 at GasMeter.cpp:56\n   53           BOOST_REQUIRE(items != nullptr);\n   54           m_gasCosts = GasEstimator::breakToStatementLevel(\n   55               GasEstimator::structuralEstimation(*items, vector<ASTNode const*>({&sourceUnit})),\n-> 56               {&sourceUnit}\n   57           );\n   58       }\n   59\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001000a9370 soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 752 at GasMeter.cpp:54, queue = 'com.apple.main-thread', stop reason = step over\n    frame #0: 0x00000001000a9370 soltest`dev::solidity::test::GasMeterTestFramework::compile(this=0x00007fff5fbfeb90, _sourceCode=<unavailable>) + 752 at GasMeter.cpp:54\n   51           AssemblyItems const* items = m_compiler.runtimeAssemblyItems(\"\");\n   52           ASTNode const& sourceUnit = m_compiler.ast();\n   53           BOOST_REQUIRE(items != nullptr);\n-> 54           m_gasCosts = GasEstimator::breakToStatementLevel(\n   55               GasEstimator::structuralEstimation(*items, vector<ASTNode const*>({&sourceUnit})),\n   56               {&sourceUnit}\n   57           );\n(lldb)\nProcess 59811 stopped\n* thread #1: tid = 0xfac57c, 0x00000001000a93eb soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n    frame #0: 0x00000001000a93eb soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350\n   1347         __end_node()->__left_->__parent_ = static_cast<__node_base_pointer>(__end_node());\n   1348         __t.__begin_node() = __t.__end_node();\n   1349         __t.__end_node()->__left_ = nullptr;\n-> 1350         __t.size() = 0;\n   1351     }\n   1352 }\n   1353\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207942557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/208313692",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-208313692",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 208313692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODMxMzY5Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T12:20:49Z",
    "updated_at": "2016-04-11T12:20:49Z",
    "author_association": "MEMBER",
    "body": "What kind of output is the above? It does not look like a stack trace.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/208313692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/208428912",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-208428912",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 208428912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQyODkxMg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T16:08:54Z",
    "updated_at": "2016-04-11T16:08:54Z",
    "author_association": "MEMBER",
    "body": "^That's me running lldb. I'm not getting a stack trace...just a seg fault....not sure what you mean by getting the stack trace in this context. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/208428912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209156738",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-209156738",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 209156738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTE1NjczOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T00:01:42Z",
    "updated_at": "2016-04-13T00:01:42Z",
    "author_association": "MEMBER",
    "body": "@VoR0220 run `gdb solc`, then `run <your parameters>` and when it crashes look up the stack trace with `bt`. There's more to it, but that's the basics.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209156738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209157216",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-209157216",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 209157216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTE1NzIxNg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T00:04:48Z",
    "updated_at": "2016-04-13T00:04:48Z",
    "author_association": "MEMBER",
    "body": "@axic running on Mac...gdb doesn't exist. That's why I was using LLDB...although I did forget to put the backtrace in there...so I think I'll do that. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209157216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209157466",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-209157466",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 209157466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTE1NzQ2Ng==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T00:06:25Z",
    "updated_at": "2016-04-13T00:06:25Z",
    "author_association": "MEMBER",
    "body": "```\n(lldb) target create \"soltest\"\nCurrent executable set to 'soltest' (x86_64).\n(lldb) settings set -- target.run-args  \"-t\" \"GasMeterTests/*\"\n(lldb) run\nProcess 18890 launched: '/usr/local/bin/soltest' (x86_64)\nRunning 7 test cases...\nProcess 18890 stopped\n* thread #1: tid = 0x11c4346, 0x00007fff9cc13823 libc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long) + 19, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x70)\n    frame #0: 0x00007fff9cc13823 libc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long) + 19\nlibc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign:\n->  0x7fff9cc13823 <+19>: movb   (%r14), %cl\n    0x7fff9cc13826 <+22>: movl   $0x16, %eax\n    0x7fff9cc1382b <+27>: testb  $0x1, %cl\n    0x7fff9cc1382e <+30>: je     0x7fff9cc1383d            ; <+45>\n(lldb) bt\n* thread #1: tid = 0x11c4346, 0x00007fff9cc13823 libc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long) + 19, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x70)\n  * frame #0: 0x00007fff9cc13823 libc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long) + 19\n    frame #1: 0x00007fff9cc13658 libc++.1.dylib`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 46\n    frame #2: 0x00000001022c0b97 libethereum.dylib`dev::eth::ChainParams::createSealEngine() [inlined] dev::eth::ChainOperationParams::operator=(this=0x0000000000000070, (null)=0x00007fff5fbfddb0) + 11 at ChainOperationParams.h:51\n    frame #3: 0x00000001022c0b8c libethereum.dylib`dev::eth::ChainParams::createSealEngine() [inlined] dev::eth::SealEngineFace::setChainParams(this=0x0000000000000000, _params=0x00007fff5fbfddb0) + 4 at SealEngine.h:76\n    frame #4: 0x00000001022c0b88 libethereum.dylib`dev::eth::ChainParams::createSealEngine(this=0x00007fff5fbfddb0) + 24 at ChainParams.cpp:119\n    frame #5: 0x00000001000585cc soltest`dev::solidity::test::ExecutionFramework::ExecutionFramework(this=0x00007fff5fbfeb90) + 60 at solidityExecutionFramework.h:48\n    frame #6: 0x00000001000a40d7 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() [inlined] dev::solidity::test::GasMeterTestFramework::GasMeterTestFramework() + 5 at GasMeter.cpp:45\n    frame #7: 0x00000001000a40d2 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() [inlined] dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs::non_overlapping_filtered_costs(this=<unavailable>) at GasMeter.cpp:100\n    frame #8: 0x00000001000a40d2 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() [inlined] dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs::non_overlapping_filtered_costs(this=<unavailable>) at GasMeter.cpp:100\n    frame #9: 0x00000001000a40d2 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() + 738 at GasMeter.cpp:100\n    frame #10: 0x0000000100046d6f soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::function0<void>::operator(this=<unavailable>)() const + 31 at function_template.hpp:770\n    frame #11: 0x0000000100046d5c soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::detail::forward::operator()() + 8 at execution_monitor.ipp:1304\n    frame #12: 0x0000000100046d54 soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(function_obj_ptr=<unavailable>) + 4 at function_template.hpp:138\n    frame #13: 0x000000010000e188 soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] boost::function0<int>::operator()() const + 29 at function_template.hpp:770\n    frame #14: 0x000000010000e16b soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(F=<unavailable>)> const&) + 25 at execution_monitor.ipp:281\n    frame #15: 0x000000010000e152 soltest`boost::execution_monitor::catch_signals(this=<unavailable>, F=<unavailable>)> const&) + 146 at execution_monitor.ipp:870\n    frame #16: 0x000000010000e2e4 soltest`boost::execution_monitor::execute(this=<unavailable>, F=<unavailable>)> const&) + 20 at execution_monitor.ipp:1207\n    frame #17: 0x0000000100009c2b soltest`boost::execution_monitor::vexecute(this=<unavailable>, F=<unavailable>)> const&) + 43 at execution_monitor.ipp:1313\n    frame #18: 0x0000000100017ca1 soltest`boost::unit_test::unit_test_monitor_t::execute_and_translate(this=<unavailable>, func=<unavailable>, timeout=<unavailable>)> const&, unsigned int) + 273 at unit_test_monitor.ipp:46\n    frame #19: 0x0000000100027c7e soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100572430, tu_id=<unavailable>, timeout=<unavailable>) + 2046 at framework.ipp:691\n    frame #20: 0x0000000100027d3d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100572430, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #21: 0x0000000100027d3d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100572430, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #22: 0x000000010000be8f soltest`boost::unit_test::framework::run(id=<unavailable>, continue_test=<unavailable>) + 1775 at framework.ipp:1230\n    frame #23: 0x0000000100017779 soltest`boost::unit_test::unit_test_main(init_func=<unavailable>, argc=<unavailable>, argv=<unavailable>)(int, char**), int, char**) + 937 at unit_test_main.ipp:229\n    frame #24: 0x00007fff9c2b35ad libdyld.dylib`start + 1\n(lldb)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209157466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209158243",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-209158243",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 209158243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTE1ODI0Mw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T00:09:39Z",
    "updated_at": "2016-04-13T00:09:39Z",
    "author_association": "MEMBER",
    "body": "main problem I'm having is that I can't list the contents of the ast nodes and having problems running variables in general...fucking LLDB...\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/209158243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210584416",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-210584416",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 210584416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU4NDQxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T18:37:25Z",
    "updated_at": "2016-04-15T18:37:25Z",
    "author_association": "MEMBER",
    "body": "Second crash seems to be in a different place, the PR might fix it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210584416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210593816",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-210593816",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 210593816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU5MzgxNg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T18:48:24Z",
    "updated_at": "2016-04-15T18:48:24Z",
    "author_association": "MEMBER",
    "body": ":/ it doesn't. Just tested. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210593816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210594096",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-210594096",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 210594096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU5NDA5Ng==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T18:49:23Z",
    "updated_at": "2016-04-15T18:49:23Z",
    "author_association": "MEMBER",
    "body": "stack trace\n\n```\nvor0220@CaptainNumNutz:solidity/build ‹fixedDataType›$ lldb soltest -- -t GasMeterTests/*\n(lldb) target create \"soltest\"\nCurrent executable set to 'soltest' (x86_64).\n(lldb) settings set -- target.run-args  \"-t\" \"GasMeterTests/*\"\n(lldb) run\nProcess 40328 launched: '/usr/local/bin/soltest' (x86_64)\nRunning 7 test cases...\nProcess 40328 stopped\n* thread #1: tid = 0x219e59, 0x00000001000aa02b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n    frame #0: 0x00000001000aa02b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350\n   1347         __end_node()->__left_->__parent_ = static_cast<__node_base_pointer>(__end_node());\n   1348         __t.__begin_node() = __t.__end_node();\n   1349         __t.__end_node()->__left_ = nullptr;\n-> 1350         __t.size() = 0;\n   1351     }\n   1352 }\n   1353\n(lldb) bt\n* thread #1: tid = 0x219e59, 0x00000001000aa02b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n  * frame #0: 0x00000001000aa02b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350\n    frame #1: 0x00000001000a9fd1 soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::operator=(this=<unavailable>) at __tree:1409\n    frame #2: 0x00000001000a9fd1 soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::map<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption, std::__1::less<dev::solidity::ASTNode const*>, std::__1::allocator<std::__1::pair<dev::solidity::ASTNode const* const, dev::eth::GasMeter::GasConsumption> > >::operator=(this=<unavailable>) at map:961\n    frame #3: 0x00000001000a9fd1 soltest`dev::solidity::test::GasMeterTestFramework::compile(this=<unavailable>, _sourceCode=<unavailable>) + 785 at GasMeter.cpp:54\n    frame #4: 0x00000001000a4ac0 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs::test_method(this=0x00007fff5fbfeb90) + 96 at GasMeter.cpp:115\n    frame #5: 0x00000001000a457a soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() + 1418 at GasMeter.cpp:100\n    frame #6: 0x0000000100046eaf soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::function0<void>::operator(this=<unavailable>)() const + 31 at function_template.hpp:770\n    frame #7: 0x0000000100046e9c soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::detail::forward::operator()() + 8 at execution_monitor.ipp:1304\n    frame #8: 0x0000000100046e94 soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(function_obj_ptr=<unavailable>) + 4 at function_template.hpp:138\n    frame #9: 0x000000010000e2c8 soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] boost::function0<int>::operator()() const + 29 at function_template.hpp:770\n    frame #10: 0x000000010000e2ab soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(F=<unavailable>)> const&) + 25 at execution_monitor.ipp:281\n    frame #11: 0x000000010000e292 soltest`boost::execution_monitor::catch_signals(this=<unavailable>, F=<unavailable>)> const&) + 146 at execution_monitor.ipp:870\n    frame #12: 0x000000010000e424 soltest`boost::execution_monitor::execute(this=<unavailable>, F=<unavailable>)> const&) + 20 at execution_monitor.ipp:1207\n    frame #13: 0x0000000100009d6b soltest`boost::execution_monitor::vexecute(this=<unavailable>, F=<unavailable>)> const&) + 43 at execution_monitor.ipp:1313\n    frame #14: 0x0000000100017de1 soltest`boost::unit_test::unit_test_monitor_t::execute_and_translate(this=<unavailable>, func=<unavailable>, timeout=<unavailable>)> const&, unsigned int) + 273 at unit_test_monitor.ipp:46\n    frame #15: 0x0000000100027dbe soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100555440, tu_id=<unavailable>, timeout=<unavailable>) + 2046 at framework.ipp:691\n    frame #16: 0x0000000100027e7d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100555440, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #17: 0x0000000100027e7d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100555440, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #18: 0x000000010000bfcf soltest`boost::unit_test::framework::run(id=<unavailable>, continue_test=<unavailable>) + 1775 at framework.ipp:1230\n    frame #19: 0x00000001000178b9 soltest`boost::unit_test::unit_test_main(init_func=<unavailable>, argc=<unavailable>, argv=<unavailable>)(int, char**), int, char**) + 937 at unit_test_main.ipp:229\n    frame #20: 0x00007fff997c25ad libdyld.dylib`start + 1\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210594096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210594333",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-210594333",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 210594333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU5NDMzMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T18:50:11Z",
    "updated_at": "2016-04-15T18:50:11Z",
    "author_association": "MEMBER",
    "body": "ok, that's a different place, let me check that\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/210594333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/212523942",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-212523942",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 212523942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUyMzk0Mg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:26:33Z",
    "updated_at": "2016-04-20T17:26:33Z",
    "author_association": "MEMBER",
    "body": "@chriseth 's command from another bug caused by a similar thing solved this problem. Command is: `cmake -DCMAKE_BUILD_TYPE=Debug .. && make -j 10`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/212523942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/212549630",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-212549630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 212549630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjU0OTYzMA==",
    "user": {
      "login": "bobsummerwill",
      "id": 3788156,
      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3788156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobsummerwill",
      "html_url": "https://github.com/bobsummerwill",
      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T18:34:23Z",
    "updated_at": "2016-04-20T18:34:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re-opening, because building in Debug configuration isn't a solution.\n\nWe still have a problem here.   Maybe a nasty optimizer-specific one.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/212549630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/213675988",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-213675988",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 213675988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzY3NTk4OA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-23T06:48:21Z",
    "updated_at": "2016-04-23T06:48:21Z",
    "author_association": "MEMBER",
    "body": "It's back again. Here's the stack trace. \n\n```\nvor0220@CaptainNumNutz:solidity/build ‹develop*›$ lldb soltest -- -t GasMeterTests/*\n(lldb) target create \"soltest\"\nCurrent executable set to 'soltest' (x86_64).\n(lldb) settings set -- target.run-args  \"-t\" \"GasMeterTests/*\"\n(lldb) run\nProcess 29196 launched: '/usr/local/bin/soltest' (x86_64)\nRunning 7 test cases...\nProcess 29196 stopped\n* thread #1: tid = 0x1c2335, 0x00000001000a941b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n    frame #0: 0x00000001000a941b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350\n   1347         __end_node()->__left_->__parent_ = static_cast<__node_base_pointer>(__end_node());\n   1348         __t.__begin_node() = __t.__end_node();\n   1349         __t.__end_node()->__left_ = nullptr;\n-> 1350         __t.size() = 0;\n   1351     }\n   1352 }\n   1353\n(lldb) bt\n* thread #1: tid = 0x1c2335, 0x00000001000a941b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n  * frame #0: 0x00000001000a941b soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::__move_assign(this=<unavailable>) + 90 at __tree:1350\n    frame #1: 0x00000001000a93c1 soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::__tree<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::__map_value_compare<dev::solidity::ASTNode const*, std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption>, std::__1::less<dev::solidity::ASTNode const*>, true>, std::__1::allocator<std::__1::__value_type<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption> > >::operator=(this=<unavailable>) at __tree:1409\n    frame #2: 0x00000001000a93c1 soltest`dev::solidity::test::GasMeterTestFramework::compile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) [inlined] std::__1::map<dev::solidity::ASTNode const*, dev::eth::GasMeter::GasConsumption, std::__1::less<dev::solidity::ASTNode const*>, std::__1::allocator<std::__1::pair<dev::solidity::ASTNode const* const, dev::eth::GasMeter::GasConsumption> > >::operator=(this=<unavailable>) at map:961\n    frame #3: 0x00000001000a93c1 soltest`dev::solidity::test::GasMeterTestFramework::compile(this=<unavailable>, _sourceCode=<unavailable>) + 785 at GasMeter.cpp:54\n    frame #4: 0x00000001000a3eb0 soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs::test_method(this=0x00007fff5fbfeb30) + 96 at GasMeter.cpp:115\n    frame #5: 0x00000001000a396a soltest`dev::solidity::test::GasMeterTests::non_overlapping_filtered_costs_invoker() + 1418 at GasMeter.cpp:100\n    frame #6: 0x00000001000462bf soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::function0<void>::operator(this=<unavailable>)() const + 31 at function_template.hpp:770\n    frame #7: 0x00000001000462ac soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) [inlined] boost::detail::forward::operator()() + 8 at execution_monitor.ipp:1304\n    frame #8: 0x00000001000462a4 soltest`boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(function_obj_ptr=<unavailable>) + 4 at function_template.hpp:138\n    frame #9: 0x000000010000d6d8 soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] boost::function0<int>::operator()() const + 29 at function_template.hpp:770\n    frame #10: 0x000000010000d6bb soltest`boost::execution_monitor::catch_signals(boost::function<int ()> const&) [inlined] int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(F=<unavailable>)> const&) + 25 at execution_monitor.ipp:281\n    frame #11: 0x000000010000d6a2 soltest`boost::execution_monitor::catch_signals(this=<unavailable>, F=<unavailable>)> const&) + 146 at execution_monitor.ipp:870\n    frame #12: 0x000000010000d834 soltest`boost::execution_monitor::execute(this=<unavailable>, F=<unavailable>)> const&) + 20 at execution_monitor.ipp:1207\n    frame #13: 0x000000010000917b soltest`boost::execution_monitor::vexecute(this=<unavailable>, F=<unavailable>)> const&) + 43 at execution_monitor.ipp:1313\n    frame #14: 0x00000001000171f1 soltest`boost::unit_test::unit_test_monitor_t::execute_and_translate(this=<unavailable>, func=<unavailable>, timeout=<unavailable>)> const&, unsigned int) + 273 at unit_test_monitor.ipp:46\n    frame #15: 0x00000001000271ce soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100556440, tu_id=<unavailable>, timeout=<unavailable>) + 2046 at framework.ipp:691\n    frame #16: 0x000000010002728d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100556440, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #17: 0x000000010002728d soltest`boost::unit_test::framework::state::execute_test_tree(this=0x0000000100556440, tu_id=<unavailable>, timeout=<unavailable>) + 2237 at framework.ipp:642\n    frame #18: 0x000000010000b3df soltest`boost::unit_test::framework::run(id=<unavailable>, continue_test=<unavailable>) + 1775 at framework.ipp:1230\n    frame #19: 0x0000000100016cc9 soltest`boost::unit_test::unit_test_main(init_func=<unavailable>, argc=<unavailable>, argv=<unavailable>)(int, char**), int, char**) + 937 at unit_test_main.ipp:229\n    frame #20: 0x00007fff967fd5ad libdyld.dylib`start + 1\n(lldb)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/213675988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/225093812",
    "html_url": "https://github.com/ethereum/solidity/issues/486#issuecomment-225093812",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/486",
    "id": 225093812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA5MzgxMg==",
    "user": {
      "login": "bobsummerwill",
      "id": 3788156,
      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3788156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobsummerwill",
      "html_url": "https://github.com/bobsummerwill",
      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T05:03:00Z",
    "updated_at": "2016-06-10T05:03:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed as dupe of \"The Heisenbug\" - https://github.com/ethereum/webthree-umbrella/issues/565.   We can reopen if we later find there is anything unique here.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/225093812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
