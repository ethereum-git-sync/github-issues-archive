{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3215/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3215/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3215/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3215",
  "id": 274894832,
  "node_id": "MDU6SXNzdWUyNzQ4OTQ4MzI=",
  "number": 3215,
  "title": "Support for Custom opcodes in in-line assembly",
  "user": {
    "login": "SergioDemianLerner",
    "id": 1752347,
    "node_id": "MDQ6VXNlcjE3NTIzNDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SergioDemianLerner",
    "html_url": "https://github.com/SergioDemianLerner",
    "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
    "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
    "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
    "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
    "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
    "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2017-11-17T15:10:42Z",
  "updated_at": "2021-05-23T17:02:03Z",
  "closed_at": "2021-05-23T17:02:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "For experimentation, we are creating new Ethereum opcodes. The Solidity documentation does not mention any way of embedding a custom opcode in the inline assembly code. \r\nTherefore new opcodes cannot be accessed from Solidity without modifying its source code. One temporal solution we're doing is calling the new opcodes through a \"system trap\" by overriding the CALL opcode. The result is something like:\r\n```\r\n    assembly {\r\n            call(not(0x0),0,not(0x0), {new=opcode} , {new-opcode arg0}, {..arg1}, {..arg2})\r\n            pop\r\n        }\r\n```\r\nEven this works, it's ugly. It would be very helpful that the assembly adds a meta-opcode:\r\n```\r\ninNoutM(opcode,args....)\r\n```\r\n\r\nTherefore an opcode with code 0xaf with 2 inputs arguments and 1 output argument can be called like this:\r\n```\r\nr :=in2out1(0xaf, 0x01, 0x02)\r\n```\r\nAn opcode 0xae with 1 input an zero outputs like this\r\n```\r\nin1out0(0xae,0x01)\r\n```\r\n\r\nI offer to create the code and do a pull request in order to enable this functionality. \r\nAlso maybe there is a better cleaner alternative I haven't thought about. Maybe one could just define the new opcode with a syntax like: \r\n```\r\n  define(0xaf,2,1,ERASE)\r\n  ...\r\n  r := erase(0x01,0x02)\r\n```",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3215/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3215/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345271304",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345271304",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345271304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3MTMwNA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:16:33Z",
    "updated_at": "2017-11-17T15:18:18Z",
    "author_association": "MEMBER",
    "body": "I like the idea of defining new opcodes, but unfortunately this goes straight in contrast to the planned evolution of the assembly language (see #2129), where no instructions (opcodes) are present only functions and those are defined by the backend.\r\n\r\nDo you have any suggestions how to fit this into such a system?\r\n\r\nAlso it is questionable how many and frequently new opcodes should be added to the EVM and if that warrants a system to include new opcodes on the fly as opposed to adding them as 3 new lines in to the C++ source code. Is that such a big overhead considering they must also be implemented in clients?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345271304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345271610",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345271610",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345271610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3MTYxMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:17:43Z",
    "updated_at": "2017-11-17T15:17:43Z",
    "author_association": "MEMBER",
    "body": "This is something that would be really useful. The problem is that it is not really portable, but something like the following could be a good compromise:\r\n\r\n```\r\nfunction newOpcode(a, b, c) -> d = EVM1 { 0xab }\r\n```\r\n\r\nSo basically you only define how it will be implemented for EVM 1.0 and fail for the other backends ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345271610/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345272206",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345272206",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345272206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3MjIwNg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:19:47Z",
    "updated_at": "2017-11-17T15:20:45Z",
    "author_association": "MEMBER",
    "body": "@chriseth where this becomes quite complicated is supporting multi-byte opcodes or opcodes with immediate arguments (e.g. the SIMD proposal).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345272206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345275022",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345275022",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345275022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3NTAyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:29:33Z",
    "updated_at": "2017-11-17T15:29:33Z",
    "author_association": "MEMBER",
    "body": "@axic yes, so perhaps it is better to keep the requirement for compiler modification but make it easy by providing a set of built-in functions, so what we were planning anyway ;-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345275022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345368817",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345368817",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345368817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTM2ODgxNw==",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T21:22:52Z",
    "updated_at": "2017-11-17T21:22:52Z",
    "author_association": "NONE",
    "body": "Any option is good for me.  I think It's not so important if the solution we pick today will be forever supported in the language. If Solidity migrates to another way of defining custom opcodes, then users can very easily change that part of the code. Any use of custom opcodes will be generally encapsulated in higher level solidity functions. Upgrading contracts will be easy.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345368817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345469490",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-345469490",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 345469490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ2OTQ5MA==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T20:36:17Z",
    "updated_at": "2017-11-18T20:36:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am more inclined to add a function/meta-instruction but making it really clear that it's not an \"official\" part of the language API, just a workaround for some use cases. If we can infer the in-out argument count we could perhaps do something like this:\r\n```\r\nr := unsafeExecuteOpcode(0x67, a, b)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/345469490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346897811",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-346897811",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 346897811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg5NzgxMQ==",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T21:28:25Z",
    "updated_at": "2017-11-24T21:28:25Z",
    "author_association": "NONE",
    "body": "Would you accept a pull request with an implementation of this in one of the possible ways? I want to know if it's worth working on it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346897811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/347199914",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-347199914",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 347199914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzE5OTkxNA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T14:35:56Z",
    "updated_at": "2017-11-27T14:35:56Z",
    "author_association": "MEMBER",
    "body": "I am still not sure it is worth supporting a soon to be deprecated construct given it takes so long to make breaking releases.\r\n\r\nHave you tried adding new opcodes to C++? If you have found any issues with that let us make it easier to add new ones to C++ as a solution. After all, whoever needs new opcodes will need to adjust client implementations too with similar level of complexity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/347199914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/846594047",
    "html_url": "https://github.com/ethereum/solidity/issues/3215#issuecomment-846594047",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3215",
    "id": 846594047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjU5NDA0Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-23T17:02:03Z",
    "updated_at": "2021-05-23T17:02:03Z",
    "author_association": "MEMBER",
    "body": "This has been discussed and eventually implemented in #10869.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/846594047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
