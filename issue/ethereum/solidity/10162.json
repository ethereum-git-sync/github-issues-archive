{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10162/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10162/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10162/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10162",
  "id": 733354658,
  "node_id": "MDU6SXNzdWU3MzMzNTQ2NTg=",
  "number": 10162,
  "title": "Range based loops",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4438488423,
      "node_id": "LA_kwDOAm_5kc8AAAABCI31Zw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have",
      "name": "must have",
      "color": "ffa12a",
      "default": false,
      "description": "Something we consider an essential part of Solidity 1.0."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2020-10-30T17:07:47Z",
  "updated_at": "2023-01-31T20:06:33Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Range based loops were discussed several times, including at the Solidity Summit (#9054), in #4596, and in #9117.\r\n\r\nMain motivation is improving code for analysis and reducing gas cost of checked array access.\r\n\r\nThis is a dedicated issue discussing the syntax and semantics:\r\n```solidity\r\nuint[] array;\r\n\r\nfor (uint value: array) {}\r\n\r\n// And with slicing\r\nfor (uint value: array[start:end]) {}\r\n```\r\n\r\nOf course for value types this doesn't support references, but references/pointers is probably something we should solve separately in general.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10162/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10162/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719682275",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-719682275",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 719682275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTY4MjI3NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T17:14:11Z",
    "updated_at": "2020-10-30T17:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Iterating over array of structs seems to be becoming increasingly more common, specially with the ABIEncoderV2 no longer being considered experimental. Supporting range-based loops for memory struct arrays would be fantastic. Could it also be made for `calldata` struct arrays?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719682275/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719687547",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-719687547",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 719687547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTY4NzU0Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T17:23:05Z",
    "updated_at": "2020-10-30T17:23:05Z",
    "author_association": "MEMBER",
    "body": "I think it would be a generic feature, but limitations/complications is something we should discuss here. Also note in the above example slicing would only work on calldata at the moment anyhow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719687547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719690515",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-719690515",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 719690515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTY5MDUxNQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T17:28:20Z",
    "updated_at": "2020-10-30T17:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mentioning here so that it doesn't get lost in the discussion: a critical value add of this feature would be reduced gas costs, as the compiler would know it doesn't need to check out-of-bounds access when retrieving each element.\r\n\r\nSomething else to consider is what would happen would array mutability inside of the loop block, in particular, whether the array's length can change. Some languages (C++) leave it up for the developer to not invalidate the iterators, while others (Rust) disallow this sort of mutation altogether.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719690515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720379972",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-720379972",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 720379972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDM3OTk3Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T10:22:09Z",
    "updated_at": "2020-11-02T10:22:09Z",
    "author_association": "MEMBER",
    "body": "If we allow the array length to be changed, then we would need an sload/mload for each iteration to re-retrieve the length. I actually don't think we can safely get rid of that check anyway, so I would not pose any restrictions on the body.\r\n\r\nI don't see why arrays of reference types should be any problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720379972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720380669",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-720380669",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 720380669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDM4MDY2OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T10:23:28Z",
    "updated_at": "2020-11-02T10:23:28Z",
    "author_association": "MEMBER",
    "body": "> I don't see why arrays of reference types should be any problem.\r\n\r\nBy references I meant \"pointers to value types\", such that the range based loop could modify the values.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720380669/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720386976",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-720386976",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 720386976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDM4Njk3Ng==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T10:35:28Z",
    "updated_at": "2020-11-02T10:35:28Z",
    "author_association": "MEMBER",
    "body": "That's consistent with how local variables work so I think it's completely intuitive. If it was possible to make such references then I think it should have some special syntax.\r\n\r\nThis could be a use case for #1013 - explicitly making it an alias pointing at the current element would allow you to modify it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720386976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720397661",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-720397661",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 720397661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDM5NzY2MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T10:55:52Z",
    "updated_at": "2020-11-02T10:55:52Z",
    "author_association": "MEMBER",
    "body": "> If it was possible to make such references then I think it should have some special syntax.\r\n\r\nExactly, that's why I said \"but references/pointers is probably something we should solve separately in general.\"\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720397661/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721637349",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-721637349",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 721637349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTYzNzM0OQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T10:05:53Z",
    "updated_at": "2020-11-04T10:05:53Z",
    "author_association": "MEMBER",
    "body": "I would prefer if the length cannot change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721637349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721644209",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-721644209",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 721644209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTY0NDIwOQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T10:19:43Z",
    "updated_at": "2020-11-04T10:19:43Z",
    "author_association": "MEMBER",
    "body": "> Something else to consider is what would happen would array mutability inside of the loop block, in particular, whether the array's length can change. Some languages (C++) leave it up for the developer to not invalidate the iterators, while others (Rust) disallow this sort of mutation altogether.\r\n\r\nThat's not completely true. Rust does disallow that by default, but it's because of a different reason. It doesn't simply add the explicit restriction \"the container cannot be changed\", it moves the container into immutable iterators, thus you can't change the container. You **can** also use mutable references and change the array, the language itself doesn't really care about you changing the array or not.\r\nI think if we decide to disallow container changes it should be something generic like that, part of the type system, and not just an explicit \"you can't change the array\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721644209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721746235",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-721746235",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 721746235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc0NjIzNQ==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T13:56:38Z",
    "updated_at": "2020-11-04T13:56:50Z",
    "author_association": "MEMBER",
    "body": "In the discussion the idea came up to also have indices support for the range based loops. Some possible scenarios where this is helpful:\r\n\r\n* Access to the elements of a second array with equal length. This of course would be even nicer solved with something like pythons `zip` function\r\n* Different logic based on the index, e.g. the first or last or every second element should be treated differently\r\n* Simple output or debugging of the index + the element for enumeration or such..\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721746235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721957497",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-721957497",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 721957497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTk1NzQ5Nw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T20:27:37Z",
    "updated_at": "2020-11-04T20:27:37Z",
    "author_association": "MEMBER",
    "body": "Another common scenario: implementing a `find()` function that looks for an element in an array and returns its index. It might be more common to implement something like this in Solidity than in other languages due to the lack of a rich standard library and generics. A variant of this would be also looking for a substring in a string.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721957497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410793009",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-1410793009",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 1410793009,
    "node_id": "IC_kwDOAm_5kc5UFv4x",
    "user": {
      "login": "Rassska",
      "id": 73281386,
      "node_id": "MDQ6VXNlcjczMjgxMzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/73281386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rassska",
      "html_url": "https://github.com/Rassska",
      "followers_url": "https://api.github.com/users/Rassska/followers",
      "following_url": "https://api.github.com/users/Rassska/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rassska/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rassska/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rassska/subscriptions",
      "organizations_url": "https://api.github.com/users/Rassska/orgs",
      "repos_url": "https://api.github.com/users/Rassska/repos",
      "events_url": "https://api.github.com/users/Rassska/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rassska/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T17:33:26Z",
    "updated_at": "2023-01-31T17:33:26Z",
    "author_association": "NONE",
    "body": "@cameel , @ekpyron , \r\n\r\nHey there! Can I try to make some steps towards implementing it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410793009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410993298",
    "html_url": "https://github.com/ethereum/solidity/issues/10162#issuecomment-1410993298",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10162",
    "id": 1410993298,
    "node_id": "IC_kwDOAm_5kc5UGgyS",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T20:06:32Z",
    "updated_at": "2023-01-31T20:06:32Z",
    "author_association": "MEMBER",
    "body": "@Rassska Unfortunately there are too many open questions here. We know we want this feature eventually but we need design first and our backlog is full right now so this has to wait.\r\n\r\nIf you're interested in contributing to the compiler, please come to our [#solidity-dev](https://app.element.io/#/room/#ethereum_solidity-dev:gitter.im) channel on Matrix. We can find you a more well-defined task.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410993298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
