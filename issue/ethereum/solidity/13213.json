{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13213",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13213/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13213/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13213/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13213",
  "id": 1284723157,
  "node_id": "I_kwDOAm_5kc5Mk1HV",
  "number": 13213,
  "title": "\"for each\" iteration through arrays",
  "user": {
    "login": "lukehutch",
    "id": 811305,
    "node_id": "MDQ6VXNlcjgxMTMwNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/811305?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lukehutch",
    "html_url": "https://github.com/lukehutch",
    "followers_url": "https://api.github.com/users/lukehutch/followers",
    "following_url": "https://api.github.com/users/lukehutch/following{/other_user}",
    "gists_url": "https://api.github.com/users/lukehutch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lukehutch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lukehutch/subscriptions",
    "organizations_url": "https://api.github.com/users/lukehutch/orgs",
    "repos_url": "https://api.github.com/users/lukehutch/repos",
    "events_url": "https://api.github.com/users/lukehutch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lukehutch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-06-25T21:47:13Z",
  "updated_at": "2022-07-04T09:24:51Z",
  "closed_at": "2022-06-28T10:14:09Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nThere is currently no \"for each\" notation for iterating through arrays in solidity. This should be added, either as a \"for each\" operator, or as an implicit iteration (if lambdas are supported at some point).\r\n\r\n## Motivation\r\n\r\nCurrently the best means we have to iterate through an array in Solidity is:\r\n\r\n```solidity\r\nfor (uint256 i = 0; i < arr.length; ++i) { ... }\r\n```\r\n\r\nThis has a few problems:\r\n\r\n1. It's wasteful on gas to evaluate `arr.length` every time, but the alternative is verbose and pollutes the namespace:\r\n    ```solidity\r\n    uint256 arrLen = arr.length;\r\n    for (uint256 i = 0; i < arrLen; ++i) { ... }\r\n    ```\r\n    (See proposal [here](https://github.com/ethereum/solidity/issues/13212) for supporting multiple variables in the first clause of a `for` statement, which solves the namespace polluting problem, but it's still verbose.)\r\n2. In Solidity ^0.8.x, all arithmetic is checked by default, so the `++i` is inefficient, and yet it's not possible to write\r\n    ```\r\n    for (uint256 i = 0; i < arr.length; unchecked { ++i; } ) { ... }\r\n    ```\r\n    Whereas in reality it would be impossibly expensive to create an array that is `type(uint256).max` in size, so the `++i` can be unchecked. This then requires the following format to eliminate this inefficiency:\r\n    ```solidity\r\n    for (uint256 i = 0; i < arr.length; ) {\r\n        // ...\r\n        unchecked { ++i; }\r\n    }\r\n    ```\r\n\r\nInstead, the following notification (or similar) should be supported (for some appropriate element type `ELT_TYPE`):\r\n\r\n```solidity\r\nfor (ELT_TYPE elt : arr) { ... }\r\n```\r\n\r\n`:` could also be `in` or similar, but it might be better to follow Java's lead and not reserve `in` as a keyword.\r\n\r\nThe compiler could then implement the iteration through the array with maximal efficiency (e.g. by not re-checking the array length on each iteration, if the array can't change size, and by using unchecked math).\r\n\r\nIn particular this will lead to much more efficient loops in eWasm, because the loop counter won't have to be a `uint256` if the array is small in size.\r\n\r\nIn future, if lambdas are supported in Solidity, then implicit iteration could be used:\r\n\r\n```solidity\r\nuint256 sum = 0;\r\narr.forEach(ELT_TYPE x => { sum += x; });\r\n```\r\n\r\n## Specification\r\n\r\nIn the basic implementation, a \"for each\" operator e.g. `:` would be added to Solidity's `for` syntax, as shown above.\r\n\r\n## Backwards Compatibility\r\n\r\nThis would be backwards compatible, as it is a superset of current functionality.",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13213/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13213/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1168524867",
    "html_url": "https://github.com/ethereum/solidity/issues/13213#issuecomment-1168524867",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13213",
    "id": 1168524867,
    "node_id": "IC_kwDOAm_5kc5FpkZD",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T10:14:09Z",
    "updated_at": "2022-06-28T10:14:09Z",
    "author_association": "MEMBER",
    "body": "I think this is a duplicate of #10162, which has a lot of discussion on the topic.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1168524867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
