{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7114/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7114/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7114/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7114",
  "id": 468883515,
  "node_id": "MDU6SXNzdWU0Njg4ODM1MTU=",
  "number": 7114,
  "title": "abi.decode() results can occupy the same memory location",
  "user": {
    "login": "dorothy-zbornak",
    "id": 48803443,
    "node_id": "MDQ6VXNlcjQ4ODAzNDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/48803443?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dorothy-zbornak",
    "html_url": "https://github.com/dorothy-zbornak",
    "followers_url": "https://api.github.com/users/dorothy-zbornak/followers",
    "following_url": "https://api.github.com/users/dorothy-zbornak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dorothy-zbornak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dorothy-zbornak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dorothy-zbornak/subscriptions",
    "organizations_url": "https://api.github.com/users/dorothy-zbornak/orgs",
    "repos_url": "https://api.github.com/users/dorothy-zbornak/repos",
    "events_url": "https://api.github.com/users/dorothy-zbornak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dorothy-zbornak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-07-16T21:58:36Z",
  "updated_at": "2019-08-07T13:42:15Z",
  "closed_at": "2019-08-07T13:42:15Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n-->\r\n\r\n## Description\r\n\r\n<!--Please shortly describe the bug you have found, and what you expect instead.-->\r\n\r\nIf we provide `abi.decode(data)` compressed data, e.g., where two encoded dynamic arrays point to the same location, and depending on whether `data` resides in `calldata` or `memory`, you get different behaviors:\r\n\r\n- If `data` is in `memory`, the results will share the same memory location.\r\n- If `data` is in `calldata`, the results will *not* share the same memory location.\r\n\r\nThe latter should be the correct behavior. Otherwise, it is easy to enter a scenario where you are manipulating one array without realizing you are also manipulating the other. This is a potential attack vector.\r\n\r\nIt should be noted that this behavior is consistent and correct (always the second case) when `pragma experimental ABIEncoderV2` is enabled.\r\n\r\n## Environment\r\n\r\n- Compiler version: `0.5.10`\r\n- Target EVM version (as per compiler settings): `constantinople`\r\n- Framework/IDE (e.g. Truffle or Remix): Remix\r\n- EVM execution environment / backend / blockchain client: Javascript VM\r\n- Operating system: N/A\r\n\r\n## Steps to Reproduce\r\n\r\nPlug the following contract into Remix, deploy, and execute `runTests()`:\r\n\r\n```solidity\r\npragma solidity ^0.5;\r\n// Results are consistent with ABIEncoderV2.\r\n// pragma experimental ABIEncoderV2;\r\n\r\ncontract DecodeTest {\r\n    \r\n    // Run `abiDecodeTestMemory()` and `abiDecodeTestCalldata()`\r\n    function runTests() external view returns (bool memorySameMemory, bool calldataSameMemory) {\r\n        memorySameMemory = abiDecodeTestMemory(encode());\r\n        calldataSameMemory = this.abiDecodeTestCalldata(encode());\r\n    }\r\n    \r\n    // With ABIEncoderV2 off, `arr1` and `arr2` point to the same memory when decoding from memory.\r\n    function abiDecodeTestMemory(bytes memory buf) public pure returns (bool isSameLoc) {\r\n        (uint256[] memory arr1, uint256[] memory arr2) = abi.decode(buf, (uint256[], uint256[]));\r\n        isSameLoc = _isSameLoc(arr1, arr2);\r\n    }\r\n    \r\n    // `arr1` and `arr2` always point to different memory locations when decoding from calldata.\r\n    function abiDecodeTestCalldata(bytes calldata buf) external pure returns (bool isSameLoc) {\r\n        (uint256[] memory arr1, uint256[] memory arr2) = abi.decode(buf, (uint256[], uint256[]));\r\n        isSameLoc = _isSameLoc(arr1, arr2);\r\n    }\r\n    \r\n    // ABI-encode two uint256[] arrays that point to the same location. \r\n    function encode() public pure returns (bytes memory) {\r\n        bytes memory buf = new bytes(128);\r\n        assembly {\r\n            mstore(add(buf, 32), 64)\r\n            mstore(add(buf, 64), 64)\r\n            mstore(add(buf, 96), 1)\r\n            mstore(add(buf, 128), 0xdeadbeef)\r\n        }\r\n        return buf;\r\n    }\r\n    \r\n    function _isSameLoc(uint256[] memory arr1, uint256[] memory arr2) internal pure returns (bool same) {\r\n        assembly {\r\n            same := eq(arr1, arr2)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nYou should see these results, which indicate that the `abi.decode()` in `abiDecodeTestMemory()` returns two arrays that share the same memory location, but not the one in `abiDecodeTestCalldata()`:\r\n```\r\n0: bool: memorySameMemory true\r\n1: bool: calldataSameMemory false\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7114/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7114/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512043100",
    "html_url": "https://github.com/ethereum/solidity/issues/7114#issuecomment-512043100",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
    "id": 512043100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjA0MzEwMA==",
    "user": {
      "login": "abandeali1",
      "id": 18060168,
      "node_id": "MDQ6VXNlcjE4MDYwMTY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18060168?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abandeali1",
      "html_url": "https://github.com/abandeali1",
      "followers_url": "https://api.github.com/users/abandeali1/followers",
      "following_url": "https://api.github.com/users/abandeali1/following{/other_user}",
      "gists_url": "https://api.github.com/users/abandeali1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abandeali1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abandeali1/subscriptions",
      "organizations_url": "https://api.github.com/users/abandeali1/orgs",
      "repos_url": "https://api.github.com/users/abandeali1/repos",
      "events_url": "https://api.github.com/users/abandeali1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abandeali1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T23:45:29Z",
    "updated_at": "2019-07-16T23:48:15Z",
    "author_association": "NONE",
    "body": "I want to provide an example of a pretty innocent looking function to emphasize the severity of this (this could have easily been code used in production):\r\n\r\n```\r\n/// @dev Transfers batch of ERC1155 assets. Either succeeds or throws.\r\n/// @param assetData Byte array encoded with ERC1155 token address, array of ids, array of values, and callback data.\r\n/// @param from Address to transfer assets from.\r\n/// @param to Address to transfer assets to.\r\n/// @param amount Amount that will be multiplied with each element of `assetData.values` to scale the\r\n///        values that will be transferred.\r\nfunction transferFrom(\r\n    bytes calldata assetData,\r\n    address from,\r\n    address to,\r\n    uint256 amount\r\n)\r\n    external\r\n    onlyAuthorized\r\n{\r\n    // Decode params from `assetData`\r\n    (\r\n        address erc1155TokenAddress,\r\n        uint256[] memory ids,\r\n        uint256[] memory values,\r\n        bytes memory data\r\n    ) = abi.decode(\r\n        assetData.sliceDestructive(4, assetData.length),\r\n        (address, uint256[], uint256[], bytes)\r\n    );\r\n\r\n    // Scale values up by `amount`\r\n    uint256 length = values.length;\r\n    for (uint256 i = 0; i != length; i++) {\r\n        values[i] = safeMul(values[i], amount);\r\n    }\r\n\r\n    // Execute `safeBatchTransferFrom` call\r\n    // Either succeeds or throws\r\n    IERC1155(erc1155TokenAddress).safeBatchTransferFrom(\r\n        from,\r\n        to,\r\n        ids,\r\n        values,\r\n        data\r\n    );\r\n}\r\n```\r\n\r\nNow take an input where `values` and `ids` are both `[1, 2]`. The optimized calldata would look like:\r\n\r\n```\r\n// 0x         0000000000000000000000000b1ba0af832d7c05fd64161e0db78e85978e8082      // ERC1155 contract address\r\n// 0x20       0000000000000000000000000000000000000000000000000000000000000080      // Offset to token IDs\r\n// 0x40       0000000000000000000000000000000000000000000000000000000000000080      // Offset to token values (same as IDs)\r\n// 0x60       00000000000000000000000000000000000000000000000000000000000000e0      // Offset to data\r\n// 0x80       0000000000000000000000000000000000000000000000000000000000000002      // Length of token Ids / token values\r\n// 0xA0       0000000000000000000000000000000000000000000000000000000000000001      // First Token ID / Token value\r\n// 0xC0       0000000000000000000000000000000000000000000000000000000000000002      // Second Token ID / Token value\r\n// 0xE0       0000000000000000000000000000000000000000000000000000000000000004      // Length of callback data\r\n// 0x100      0102030400000000000000000000000000000000000000000000000000000000      // Callback data\r\n```\r\n\r\nIn this case, `values[i] = safeMul(values[i], amount)` also ends up modifying `ids[i]` because they are stored in the same memory location. So if `amount` equals 2, we end up transferring 2 of id 2 and 4 of id 4 instead of 2 of id 1 and 4 of id 2!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512043100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512205404",
    "html_url": "https://github.com/ethereum/solidity/issues/7114#issuecomment-512205404",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
    "id": 512205404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjIwNTQwNA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T10:55:24Z",
    "updated_at": "2019-07-17T10:55:24Z",
    "author_association": "MEMBER",
    "body": "@dorothy-zbornak I still don't know why the results from `abi.decode` point to the same location, but I'm not sure function `encode` does what the comment says (`// ABI-encode two uint256[] arrays that point to the same location`)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512205404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512207530",
    "html_url": "https://github.com/ethereum/solidity/issues/7114#issuecomment-512207530",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
    "id": 512207530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjIwNzUzMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T11:02:40Z",
    "updated_at": "2019-07-17T11:02:40Z",
    "author_association": "MEMBER",
    "body": "@leonardoalt I think the old decoder does not explicitly copy everything, because it was not meant to be used like that in the beginning.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512207530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512207621",
    "html_url": "https://github.com/ethereum/solidity/issues/7114#issuecomment-512207621",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
    "id": 512207621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjIwNzYyMQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T11:03:01Z",
    "updated_at": "2019-07-17T11:03:38Z",
    "author_association": "MEMBER",
    "body": "As an example, I changed function `encode` to:\r\n```\r\nuint[] memory buf = new uint[](4);\r\nbuf[0] = 0xcafecafe;\r\nuint[] memory buf2 = buf;\r\nreturn abi.encode(buf, buf2);\r\n```\r\nEven though `buf` and `buf2` point to the same location, the data is duplicated in the resulting bytes.\r\nIn this case `runTests` returns\r\n```\r\n0: bool: memorySameMemory false\r\n1: bool: calldataSameMemory false\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512207621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512209167",
    "html_url": "https://github.com/ethereum/solidity/issues/7114#issuecomment-512209167",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7114",
    "id": 512209167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjIwOTE2Nw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T11:08:55Z",
    "updated_at": "2019-07-17T11:08:55Z",
    "author_association": "MEMBER",
    "body": "Oh ok, my bad, I see it now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512209167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
