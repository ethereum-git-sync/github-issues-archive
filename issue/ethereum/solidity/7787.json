{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7787/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7787/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7787/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7787",
  "id": 528782158,
  "node_id": "MDU6SXNzdWU1Mjg3ODIxNTg=",
  "number": 7787,
  "title": "Segfault with `solc --error-recovery`",
  "user": {
    "login": "erak",
    "id": 20012009,
    "node_id": "MDQ6VXNlcjIwMDEyMDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/20012009?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/erak",
    "html_url": "https://github.com/erak",
    "followers_url": "https://api.github.com/users/erak/followers",
    "following_url": "https://api.github.com/users/erak/following{/other_user}",
    "gists_url": "https://api.github.com/users/erak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/erak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/erak/subscriptions",
    "organizations_url": "https://api.github.com/users/erak/orgs",
    "repos_url": "https://api.github.com/users/erak/repos",
    "events_url": "https://api.github.com/users/erak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/erak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376148917,
      "node_id": "MDU6TGFiZWwyMzc2MTQ4OTE3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20report%20better%20error",
      "name": "should report better error",
      "color": "53e0b5",
      "default": false,
      "description": "Error is just badly reported. Should be a proper type error - source is not fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-11-26T15:01:32Z",
  "updated_at": "2023-11-30T08:49:16Z",
  "closed_at": "2023-11-30T08:49:15Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCalling `solc --error-recovery` will segfault for a lot of contracts, because there are places in which we not always check for `nulllptr`. For example in `CompilerStack::analyze()` (`source->ast`) or `Types::transformParametersToExterna()` (`type`).\r\n\r\nOne could run `valgrind solc --error-recovery [input-file]` to find and fix all the places where an additional check is needed.\r\n\r\n## Environment\r\n\r\n- Compiler version:\r\n- Target EVM version (as per compiler settings):\r\n- Framework/IDE (e.g. Truffle or Remix):\r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system:\r\n\r\n## Steps to Reproduce\r\n\r\nCan be reproduced with various contracts in our syntax tests e.g.\r\n\r\n`solc --error-recovery test/libsolidity/syntaxTests/parsing/return_var.sol`\r\n",
  "closed_by": {
    "login": "nikola-matic",
    "id": 4415530,
    "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikola-matic",
    "html_url": "https://github.com/nikola-matic",
    "followers_url": "https://api.github.com/users/nikola-matic/followers",
    "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
    "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
    "repos_url": "https://api.github.com/users/nikola-matic/repos",
    "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7787/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7787/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/658147885",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-658147885",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 658147885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODE0Nzg4NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T12:20:59Z",
    "updated_at": "2020-07-14T12:20:59Z",
    "author_association": "MEMBER",
    "body": "I though this could be a duplicate of #9404, but even after it, this crashes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/658147885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719816195",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-719816195",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 719816195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTgxNjE5NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T21:51:06Z",
    "updated_at": "2020-10-30T21:51:06Z",
    "author_association": "MEMBER",
    "body": "While I didn't encounter crashes, there are plenty of exceptions.\r\n```\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/declaring_fixed_and_ufixed_variables.sol\r\nUnimplemented feature:\r\n/Users/alex/Projects/solidity/libsolidity/codegen/CompilerUtils.cpp(766): Throw in function void solidity::frontend::CompilerUtils::convertType(const solidity::frontend::Type &, const solidity::frontend::Type &, bool, bool, bool)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::UnimplementedFeatureError>\r\nstd::exception::what: Not yet implemented - FixedPointType.\r\n[solidity::util::tag_comment*] = Not yet implemented - FixedPointType.\r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/import_complex.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/interface/CompilerStack.cpp(1125): Throw in function auto solidity::frontend::CompilerStack::resolveImports()::(anonymous class)::operator()(const solidity::frontend::CompilerStack::Source *) const\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/import_simple.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/interface/CompilerStack.cpp(1125): Throw in function auto solidity::frontend::CompilerStack::resolveImports()::(anonymous class)::operator()(const solidity::frontend::CompilerStack::Source *) const\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/max_depth_reached_4.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/parsing/Parser.cpp(127): Throw in function ASTPointer<solidity::frontend::SourceUnit> solidity::frontend::Parser::parse(const shared_ptr<solidity::langutil::Scanner> &)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/multiple_modifier_arg_trailing_comma.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/ast/AST.h(820): Throw in function solidity::frontend::FunctionDefinition::FunctionDefinition(int64_t, const solidity::frontend::ASTNode::SourceLocation &, const ASTPointer<solidity::frontend::ASTString> &, solidity::frontend::Visibility, solidity::frontend::StateMutability, bool, solidity::langutil::Token, bool, const ASTPointer<solidity::frontend::OverrideSpecifier> &, const ASTPointer<solidity::frontend::StructuredDocumentation> &, const ASTPointer<solidity::frontend::ParameterList> &, std::vector<ASTPointer<ModifierInvocation> >, const ASTPointer<solidity::frontend::ParameterList> &, const ASTPointer<solidity::frontend::Block> &)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/single_modifier_arg_trailing_comma.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/ast/AST.h(820): Throw in function solidity::frontend::FunctionDefinition::FunctionDefinition(int64_t, const solidity::frontend::ASTNode::SourceLocation &, const ASTPointer<solidity::frontend::ASTString> &, solidity::frontend::Visibility, solidity::frontend::StateMutability, bool, solidity::langutil::Token, bool, const ASTPointer<solidity::frontend::OverrideSpecifier> &, const ASTPointer<solidity::frontend::StructuredDocumentation> &, const ASTPointer<solidity::frontend::ParameterList> &, std::vector<ASTPointer<ModifierInvocation> >, const ASTPointer<solidity::frontend::ParameterList> &, const ASTPointer<solidity::frontend::Block> &)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n\r\n$ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/pragma_illegal.sol\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/analysis/SyntaxChecker.cpp(81): Throw in function virtual bool solidity::frontend::SyntaxChecker::visit(const solidity::frontend::PragmaDirective &)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719816195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719854045",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-719854045",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 719854045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTg1NDA0NQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-31T00:18:04Z",
    "updated_at": "2020-10-31T00:18:04Z",
    "author_association": "MEMBER",
    "body": "> ```\r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/declaring_fixed_and_ufixed_variables.sol\r\n> Unimplemented feature:\r\n> /Users/alex/Projects/solidity/libsolidity/codegen/CompilerUtils.cpp(766): Throw in function void solidity::frontend::CompilerUtils::convertType(const solidity::frontend::Type &, const solidity::frontend::Type &, bool, bool, bool)\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::UnimplementedFeatureError>\r\n> std::exception::what: Not yet implemented - FixedPointType.\r\n> [solidity::util::tag_comment*] = Not yet implemented - FixedPointType.\r\n> ```\r\n\r\nIt causes an ICE even without the `--error-recovery` option.\r\n\r\n> ```\r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/import_complex.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/interface/CompilerStack.cpp(1125): Throw in function auto solidity::frontend::CompilerStack::resolveImports()::(anonymous class)::operator()(const solidity::frontend::CompilerStack::Source *) const\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n> \r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/import_simple.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/interface/CompilerStack.cpp(1125): Throw in function auto solidity::frontend::CompilerStack::resolveImports()::(anonymous class)::operator()(const solidity::frontend::CompilerStack::Source *) const\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n> \r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/max_depth_reached_4.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/parsing/Parser.cpp(127): Throw in function ASTPointer<solidity::frontend::SourceUnit> solidity::frontend::Parser::parse(const shared_ptr<solidity::langutil::Scanner> &)\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n> ```\r\n\r\nThese three are legit. ICE since 0.5.11 (0.5.14 was in develop at the time of this report). No ICE only on 0.5.10 which introduced the `--error-recovery` option. Not using `--error-recovery` makes the ICE go away in all versions I checked.\r\n\r\n> ```\r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/multiple_modifier_arg_trailing_comma.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/ast/AST.h(820): Throw in function solidity::frontend::FunctionDefinition::FunctionDefinition(int64_t, const solidity::frontend::ASTNode::SourceLocation &, const ASTPointer<solidity::frontend::ASTString> &, solidity::frontend::Visibility, solidity::frontend::StateMutability, bool, solidity::langutil::Token, bool, const ASTPointer<solidity::frontend::OverrideSpecifier> &, const ASTPointer<solidity::frontend::StructuredDocumentation> &, const ASTPointer<solidity::frontend::ParameterList> &, std::vector<ASTPointer<ModifierInvocation> >, const ASTPointer<solidity::frontend::ParameterList> &, const ASTPointer<solidity::frontend::Block> &)\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n>\r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/single_modifier_arg_trailing_comma.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/ast/AST.h(820): Throw in function solidity::frontend::FunctionDefinition::FunctionDefinition(int64_t, const solidity::frontend::ASTNode::SourceLocation &, const ASTPointer<solidity::frontend::ASTString> &, solidity::frontend::Visibility, solidity::frontend::StateMutability, bool, solidity::langutil::Token, bool, const ASTPointer<solidity::frontend::OverrideSpecifier> &, const ASTPointer<solidity::frontend::StructuredDocumentation> &, const ASTPointer<solidity::frontend::ParameterList> &, std::vector<ASTPointer<ModifierInvocation> >, const ASTPointer<solidity::frontend::ParameterList> &, const ASTPointer<solidity::frontend::Block> &)\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n> ```\r\n\r\nThese two actually crash the compiler between 0.5.11 and 0.5.17 (segmentation fault). On 0.6.0 and 0.7.0 they recover and report compiler errors as expected. Since 0.7.1 they cause an ICE.\r\n\r\n> ```\r\n> $ solc/solc --error-recovery ../test/libsolidity/syntaxTests/parsing/pragma_illegal.sol\r\n> Internal compiler error during compilation:\r\n> /Users/alex/Projects/solidity/libsolidity/analysis/SyntaxChecker.cpp(81): Throw in function virtual bool solidity::frontend::SyntaxChecker::visit(const solidity::frontend::PragmaDirective &)\r\n> Dynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\n> std::exception::what: \r\n> [solidity::util::tag_comment*] = \r\n> ```\r\n\r\nThis one is legit too. Works on 0.5.10. ICE since 0.5.11.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719854045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720352336",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-720352336",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 720352336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDM1MjMzNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T09:30:24Z",
    "updated_at": "2020-11-02T09:30:24Z",
    "author_association": "MEMBER",
    "body": "Maybe we could just remove that feature again...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/720352336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/807843342",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-807843342",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 807843342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzg0MzM0Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T00:47:24Z",
    "updated_at": "2021-03-26T00:47:24Z",
    "author_association": "MEMBER",
    "body": "Isn't `--error-recovery` very useful for the LSP, @chriseth @christianparpart ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/807843342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/808124778",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-808124778",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 808124778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODEyNDc3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T11:05:01Z",
    "updated_at": "2021-03-26T11:05:01Z",
    "author_association": "MEMBER",
    "body": "It is useful, but I very much doubt that we can get it to work even remotely reliable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/808124778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/821060432",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-821060432",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 821060432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTA2MDQzMg==",
    "user": {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-16T09:51:11Z",
    "updated_at": "2021-04-16T09:51:11Z",
    "author_association": "MEMBER",
    "body": "> Isn't `--error-recovery` very useful for the LSP, @chriseth @christianparpart ?\r\n\r\nmaybe not the way it works right now (I didn't invest into this much yet). Before I attempt to touch this, I want to make the lower hanging fruits workable.\r\n\r\n> It is useful, but I very much doubt that we can get it to work even remotely reliable.\r\n\r\n@chriseth I don't even think it (error-recovery) has to. In the context of code completion, what the user is interested in (I hope) is getting a completion when typing `.` on scoped objects.  But I think we can say more about that subject when we've tried to evaluate that (later).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/821060432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1833336992",
    "html_url": "https://github.com/ethereum/solidity/issues/7787#issuecomment-1833336992",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7787",
    "id": 1833336992,
    "node_id": "IC_kwDOAm_5kc5tRoCg",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-30T08:49:15Z",
    "updated_at": "2023-11-30T08:49:15Z",
    "author_association": "MEMBER",
    "body": "Fixed by removing experimental `--error-recovery` in https://github.com/ethereum/solidity/issues/14395 and https://github.com/ethereum/solidity/pull/14479.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1833336992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
