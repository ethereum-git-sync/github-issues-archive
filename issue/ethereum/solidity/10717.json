{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10717/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10717/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10717/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10717",
  "id": 779110677,
  "node_id": "MDU6SXNzdWU3NzkxMTA2Nzc=",
  "number": 10717,
  "title": "[SMTChecker] Underflow/overflow should only warn if always happens",
  "user": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2021-01-05T14:36:12Z",
  "updated_at": "2021-08-11T15:48:51Z",
  "closed_at": "2021-08-11T15:48:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Now that underflow/overflow always reverts (in checked arithmetic) it feels kinda weird to generally warn for underflow/overflow:\r\n```\r\n    function f(uint a, uint b) pure public returns (uint) {\r\n        return a + b;\r\n    }\r\n```\r\nThis reports\r\n```\r\n\r\nWarning: CHC: Overflow (resulting value larger than 2**256 - 1) happens here.\r\nCounterexample:\r\n\r\na = 1\r\nb = 115792089237316195423570985008687907853269984665640564039457584007913129639935\r\n = 0\r\n\r\nTransaction trace:\r\nC.constructor()\r\nC.f(1, 115792089237316195423570985008687907853269984665640564039457584007913129639935)\r\n --> o.sol:5:10:\r\n  |\r\n5 | \t\treturn a + b;\r\n```\r\nwhich is kinda weird because the overflow cases will never reach the end of the function.\r\n\r\nI think the interesting case is rather \"always overflows\", because the contract is then locked. This can be more generalized to \"function does not terminate\".\r\n\r\nI guess my suggestion here is to remove underflow/overflow checks and add function termination checks.\r\n@axic @blishko @chriseth @ekpyron ideas?",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10717/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10717/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754676612",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754676612",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754676612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY3NjYxMg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T14:41:30Z",
    "updated_at": "2021-01-05T14:41:30Z",
    "author_association": "MEMBER",
    "body": "Hm... are we all-in on the idea that automatic overflow checks basically function as implicit ``require``? I'd say it still makes sense to report overflows, even if they revert by default, forcing you to think about reasonable limits that you specifically, manually ``require`` yourself...\r\nIn general I'd still treat failing auto-generated as failed assertions... but not sure if I'm alone in that view ;-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754676612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754678060",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754678060",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754678060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY3ODA2MA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T14:43:56Z",
    "updated_at": "2021-01-05T14:43:56Z",
    "author_association": "MEMBER",
    "body": "Well, no one is going to write\r\n```\r\n  function f(uint a, uint b) pure public returns (uint) {\r\n        require(a + b >= a);\r\n        return a + b;\r\n    }\r\n```\r\nin 0.8, the effect is the same",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754678060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754679759",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754679759",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754679759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY3OTc1OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T14:46:54Z",
    "updated_at": "2021-01-05T14:47:06Z",
    "author_association": "MEMBER",
    "body": "What you should do is\r\n```\r\n  function f(uint a, uint b) pure public returns (uint) {\r\n        require(a < 1000, \"unreasonable amount for a\");\r\n        require(b < 1000, \"unreasonable amount for b\");\r\n        return a + b;\r\n    }\r\n```\r\nI'd say that actual overflows are never really reasonable bounds for anything.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754679759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754680961",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754680961",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754680961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY4MDk2MQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T14:48:57Z",
    "updated_at": "2021-01-05T14:48:57Z",
    "author_association": "MEMBER",
    "body": "Right, but no one is going to do that. I think most people are just going to do math and use the compiler generated reverts to get rid of that behavior. In that case, people are gonna get tens or hundreds of useless overflow messages",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754680961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754692886",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754692886",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754692886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5Mjg4Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:06:25Z",
    "updated_at": "2021-01-05T15:06:25Z",
    "author_association": "MEMBER",
    "body": "I'm not sure if we should go for assuming people do things badly anyways and thereby build things towards people doing things badly :-). But yeah... since I expect to be outvoted on that anyways ;-):\r\n\r\n\"always overflows\" is indeed an interesting property to check for, especially in CHC where you should be able to tell, if a contract can reach a state in which some function won't work anymore because of it... but: by the same argument as for the \"may sometimes overflow\" case: won't this be expected as well and result in similarly \"useless\" warnings?\r\n\r\nI.e.:\r\n```\r\ncontract C {\r\n  uint8 numMembers;\r\n  function addMember() { numMembers++; ... }\r\n}\r\n```\r\nUnder the assumption that people will just use implicit overflow checks as \"require\", in this case here, in which I indeed can reach a case of 255 members, in which ``addMember`` always overflows, don't I have to assume that that's also just as well by design and nothing to warn about then? Why would I expect people do add ``require(numMembers <= 255);`` here, but not in other cases?\r\n\r\nSo I'd say one could argue: if we really expect people to use implicit overflow checks as ``require``s and thus want to treat them as ``require``s, it's never actually justified to warn about over-/underflows anymore...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754692886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754694644",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754694644",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754694644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5NDY0NA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:09:01Z",
    "updated_at": "2021-01-05T15:09:13Z",
    "author_association": "MEMBER",
    "body": "Or do you mean \"always overflows\" as in \"locally always overflows\" only, as in ``uint8 a = 200; uint8 b = 200; a + b;``? About that of course it definitely always makes sense to warn, even though I wouldn't expect it to happen very often...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754694644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754696027",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754696027",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754696027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5NjAyNw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:11:16Z",
    "updated_at": "2021-01-05T15:11:16Z",
    "author_association": "MEMBER",
    "body": "So local function termination checks (i.e. \"function never terminates regardless of contract state\") probably generally make sense. One could consider to make warning about overflows optional... but not sure if that'd open the way to SMT settings hell...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754696027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754696700",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754696700",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754696700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5NjcwMA==",
    "user": {
      "login": "blishko",
      "id": 16404346,
      "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blishko",
      "html_url": "https://github.com/blishko",
      "followers_url": "https://api.github.com/users/blishko/followers",
      "following_url": "https://api.github.com/users/blishko/following{/other_user}",
      "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
      "organizations_url": "https://api.github.com/users/blishko/orgs",
      "repos_url": "https://api.github.com/users/blishko/repos",
      "events_url": "https://api.github.com/users/blishko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blishko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:12:27Z",
    "updated_at": "2021-01-05T15:12:27Z",
    "author_association": "MEMBER",
    "body": "Personally, I also think that overflow warnings would be useful, but I guess it depends on what philosophy are you trying to put forward.\r\nIt is also possible to wait and see what the reaction is from the users :)\r\nAnother possibility would be to turn this into an option which the users could turn on or off.\r\n\r\nRegarding the \"always overflows\", it sounds like a useful thing to detect.\r\nBut exactly as @ekpyron writes, it depends what you mean. The \"locally always overflows\" does not sound like something you write by accident (but maybe I am wrong).\r\nThe other case, where there is some transaction sequence which leads to a state where calling a function will always revert because of overflow, I am not sure if this is possible to detect with the current framework (but again, I might be wrong).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754696700/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754702824",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754702824",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754702824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDcwMjgyNA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:22:27Z",
    "updated_at": "2021-01-05T15:23:24Z",
    "author_association": "MEMBER",
    "body": "I see those points, what I'm thinking in practice is:\r\nImagine a current contract that uses a bunch of SafeMath. 70% of the current unique deployed contracts do. When upgrading to 0.8, the devs simply remove the SafeMath calls and use the appropriate arithmetic operator, as in replacing `x.add(y)` by `x + y`.\r\nIn this case, every single arithmetic operation will warn \"overflow\", where the dev probably reacts with \"well, yes, that's what I used SafeMath for, and now rely on the compiler\".\r\nI can imagine this just bloats the ouptut.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754702824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754705172",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754705172",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754705172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDcwNTE3Mg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:25:49Z",
    "updated_at": "2021-01-05T15:26:12Z",
    "author_association": "MEMBER",
    "body": "I mean an operation causing transactions to always revert",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754705172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754724846",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-754724846",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 754724846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDcyNDg0Ng==",
    "user": {
      "login": "blishko",
      "id": 16404346,
      "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blishko",
      "html_url": "https://github.com/blishko",
      "followers_url": "https://api.github.com/users/blishko/followers",
      "following_url": "https://api.github.com/users/blishko/following{/other_user}",
      "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
      "organizations_url": "https://api.github.com/users/blishko/orgs",
      "repos_url": "https://api.github.com/users/blishko/repos",
      "events_url": "https://api.github.com/users/blishko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blishko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:57:05Z",
    "updated_at": "2021-01-05T15:57:05Z",
    "author_association": "MEMBER",
    "body": "> I mean an operation causing transactions to always revert\r\n\r\nAlways reverts regardless of the state of the contract or depending on the state of the contract?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/754724846/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/756773650",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-756773650",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 756773650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Njc3MzY1MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-08T14:08:45Z",
    "updated_at": "2021-01-08T14:08:45Z",
    "author_association": "MEMBER",
    "body": "Overflows create a panic error just as division by zero or invalid array access does, so I think any potential panic should be reported.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/756773650/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785375471",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-785375471",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 785375471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTM3NTQ3MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T20:50:37Z",
    "updated_at": "2021-02-24T20:50:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm not sure if we should go for assuming people do things badly anyways and thereby build things towards people doing things badly \r\n\r\nThis is the first time I hear that relying on the compiler overflow checks would be considered doing things badly. Is that really the case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785375471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787428288",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-787428288",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 787428288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzQyODI4OA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-28T10:14:12Z",
    "updated_at": "2021-02-28T10:14:12Z",
    "author_association": "MEMBER",
    "body": "> Overflows create a panic error just as division by zero or invalid array access does, so I think any potential panic should be reported.\r\n\r\nIt's not the same. That is a `panic` that *will* be reached *all the time*. I myself when writing 0.8 contracts do not guard the arithmetic operations with previous requires and just rely on the compiler to filter it out for me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787428288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787800179",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-787800179",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 787800179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzgwMDE3OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-01T09:26:45Z",
    "updated_at": "2021-03-01T09:26:45Z",
    "author_association": "MEMBER",
    "body": "> > I'm not sure if we should go for assuming people do things badly anyways and thereby build things towards people doing things badly\r\n> \r\n> This is the first time I hear that relying on the compiler overflow checks would be considered doing things badly. Is that really the case?\r\n\r\nWell, I don't think there is complete consensus about that. But I personally would say: most definitely yes, just as relying on SafeMath was doing things badly ;-). Both should always only have been considered as last safety net just in case you messed up and some case slipped through your fingers that *isn't* caught by explicit ``require``'s. I'd still maintain that doing https://github.com/ethereum/solidity/issues/10717#issuecomment-754679759 and having the compiler optimize away the autogenerated check in ``a+b`` would be ideal. And I don't think anyone would actually argue against that being ideal.\r\nHowever in practice the problem is both that this appears to be hardly adhered to by anyone and that the optimizer still has a hard time removing redundant checks like that so far.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787800179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787812327",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-787812327",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 787812327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzgxMjMyNw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-01T09:45:02Z",
    "updated_at": "2021-03-01T09:45:02Z",
    "author_association": "MEMBER",
    "body": "Tbh I think it's naive to think that this will happen. The automatic replacement for SafeMath will be to just rely on the compiler, also because of gas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/787812327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/896940996",
    "html_url": "https://github.com/ethereum/solidity/issues/10717#issuecomment-896940996",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10717",
    "id": 896940996,
    "node_id": "IC_kwDOAm_5kc41djvE",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-11T15:48:51Z",
    "updated_at": "2021-08-11T15:48:51Z",
    "author_association": "MEMBER",
    "body": "We moved on to not reporting underflow/overflow by default, so closing this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/896940996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
