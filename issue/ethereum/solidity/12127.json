{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12127/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12127/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12127/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12127",
  "id": 1025048056,
  "node_id": "I_kwDOAm_5kc49GP34",
  "number": 12127,
  "title": "Re-check if the identity precompile should be used for memcopy",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 682993385,
      "node_id": "MDU6TGFiZWw2ODI5OTMzODU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/performance%20:racehorse:",
      "name": "performance :racehorse:",
      "color": "c5def5",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-10-13T10:06:34Z",
  "updated_at": "2022-09-14T14:57:02Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Since london, it could be cheaper again to use the identity precompile than mload / mstore in a loop to copy memory.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12127/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12127/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942388739",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-942388739",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 942388739,
    "node_id": "IC_kwDOAm_5kc44K7YD",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T14:54:47Z",
    "updated_at": "2021-10-13T14:54:47Z",
    "author_association": "MEMBER",
    "body": "I think only Berlin's EIP-2929 affects it, and nothing in London does.\r\n\r\nHowever if the saving is not significant, then to avoid the potential for future repricing adversely affecting it, I would not enable it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942388739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/976623285",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-976623285",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 976623285,
    "node_id": "IC_kwDOAm_5kc46Nha1",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T14:31:12Z",
    "updated_at": "2021-11-23T14:31:12Z",
    "author_association": "MEMBER",
    "body": "Some relevant discussion from the chat:\r\n\r\n@hrkrshnn \r\n> A random idea: about this: https://github.com/ethereum/solidity/issues/12127. I think we should do it, a rough calculation is that a precompile staticcall should cost  about the same in case of  copying 2 words and get cheaper for more than 2 words.\r\n> \r\n> Related to that, we should probably add a new built-in to Yul called `memcopy(in, insize, out)` that gets translated to `staticcall(gas(), 4, in, insize, out, insize)`. I think having a specific built-in in Yul should help us easily reason about redundant memory copies.\r\n\r\n@cameel\r\n> Regarding a new builtin - I'm not sure if it would help all that much, at least with the upcoming optimization steps.\r\n> [RedundantStoreEliminator](https://github.com/ethereum/solidity/pull/11352) can already deal with memory read and written by `staticcall()` just as if it was a pair of `mload()`/`mstore()` and it does not really care about the content being read/written.\r\n> [EqualStoreEliminator](https://github.com/ethereum/solidity/pull/12272) on the other hand only deals with simple single-slot store operations.\r\n>\r\n> Oh, one thing it might help with is that currently for `staticcall` we have to assume that arbitrary storage reads are possible during the call. So using it for memory copy in between two overlapping stores would prevent `RedundantStoreEliminator` from removing the redundant one.\r\nI guess that with the builtin we could just assume that the precompile does not read or write any storage?\r\n\r\n@hrkrshnn \r\n> Yeah, there are two things here. Loops are hard to work with. So if we can replace a for loop doing `mstore` by `memcopy`, analysis becomes easier. The other thing as you said is if you replace the loop by `staticcal(gas(), 4, ...)`, we'll need to start modelling `staticall` opcode's side-effects based on the address it calls.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/976623285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/977313679",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-977313679",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 977313679,
    "node_id": "IC_kwDOAm_5kc46QJ-P",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-24T00:23:27Z",
    "updated_at": "2021-11-24T00:23:51Z",
    "author_association": "MEMBER",
    "body": "I'm in favour of having a built in yul, especially if it can be also used in inline assembly. Though we may want to consider making this more generic.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/977313679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243853125",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-1243853125",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 1243853125,
    "node_id": "IC_kwDOAm_5kc5KI7FF",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T14:46:30Z",
    "updated_at": "2022-09-12T14:46:30Z",
    "author_association": "MEMBER",
    "body": "Marking as breaking since the way we will probably implement it (i.e. as a new Yul builtin) seems to be breaking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243853125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1244559486",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-1244559486",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 1244559486,
    "node_id": "IC_kwDOAm_5kc5KLnh-",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T21:57:25Z",
    "updated_at": "2022-09-12T21:57:25Z",
    "author_association": "MEMBER",
    "body": "> way we will probably implement it (i.e. as a new Yul builtin) seems to be breaking\r\n\r\nI think it should be possible to implement it in a way that's not breaking. We did this when `basefee` was introduced. Alternatively, this can be an annotation similar to \"memory safe\", but for selecting the Yul dialect.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1244559486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245399064",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-1245399064",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 1245399064,
    "node_id": "IC_kwDOAm_5kc5KO0gY",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T13:15:44Z",
    "updated_at": "2022-09-13T13:15:44Z",
    "author_association": "MEMBER",
    "body": "You mean, introduce the new builtin, but still allow to shadow it with user-defined functions (emitting a warning or so)? Yeah, always possible, never really nice, though... we could actually consider that for ``prevrandao``, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245399064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245444808",
    "html_url": "https://github.com/ethereum/solidity/issues/12127#issuecomment-1245444808",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12127",
    "id": 1245444808,
    "node_id": "IC_kwDOAm_5kc5KO_rI",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T13:51:25Z",
    "updated_at": "2022-09-13T13:51:25Z",
    "author_association": "MEMBER",
    "body": "ok, if we have that option then I guess I'll remove the label since whether it's breaking or not will simply depend on whether we decide to do it in 0.9.0 or before.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245444808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
