{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13132",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13132/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13132/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13132/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13132",
  "id": 1270037455,
  "node_id": "I_kwDOAm_5kc5LszvP",
  "number": 13132,
  "title": "Better error needed when trying to call an `external` function from the same contract",
  "user": {
    "login": "lukehutch",
    "id": 811305,
    "node_id": "MDQ6VXNlcjgxMTMwNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/811305?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lukehutch",
    "html_url": "https://github.com/lukehutch",
    "followers_url": "https://api.github.com/users/lukehutch/followers",
    "following_url": "https://api.github.com/users/lukehutch/following{/other_user}",
    "gists_url": "https://api.github.com/users/lukehutch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lukehutch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lukehutch/subscriptions",
    "organizations_url": "https://api.github.com/users/lukehutch/orgs",
    "repos_url": "https://api.github.com/users/lukehutch/repos",
    "events_url": "https://api.github.com/users/lukehutch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lukehutch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 838064207,
      "node_id": "MDU6TGFiZWw4MzgwNjQyMDc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/annoys%20users%20:cry:",
      "name": "annoys users :cry:",
      "color": "ea2cab",
      "default": false,
      "description": ""
    },
    {
      "id": 1012613901,
      "node_id": "MDU6TGFiZWwxMDEyNjEzOTAx",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/easy%20difficulty",
      "name": "easy difficulty",
      "color": "0b3f89",
      "default": false,
      "description": ""
    },
    {
      "id": 2376148917,
      "node_id": "MDU6TGFiZWwyMzc2MTQ4OTE3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20report%20better%20error",
      "name": "should report better error",
      "color": "53e0b5",
      "default": false,
      "description": "Error is just badly reported. Should be a proper type error - source is not fine."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-06-13T22:38:17Z",
  "updated_at": "2022-08-28T21:25:43Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen trying to call an `external` function from the same contract, the error message generated is:\r\n\r\n```\r\nDeclarationError: Undeclared identifier. \"functionName\" is not (or not yet) visible at this point.\r\n```\r\n\r\nThis is confusing as a newcomer to Solidity. It took me forever to realize that `external` functions cannot be called by other functions within the same contract. The assumption I made was that `external` was a superset of `public`, but actually it is the other way around.\r\n\r\nI would suggest reporting an error like the following in this situation:\r\n\r\n```\r\nDeclarationError: Undeclared identifier. \"functionName\" is not visible at this point, because it is marked as external, not public.\r\n```\r\n\r\nSimilarly trying to call a `private` function from a subcontract should probably show the same sort of warning that the function is marked `private` and not `internal`, although the reason for lack of visibility is far more obvious in that situation.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.14\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13132/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13132/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157592743",
    "html_url": "https://github.com/ethereum/solidity/issues/13132#issuecomment-1157592743",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13132",
    "id": 1157592743,
    "node_id": "IC_kwDOAm_5kc5E_3an",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T12:15:55Z",
    "updated_at": "2022-06-16T12:26:34Z",
    "author_association": "MEMBER",
    "body": "Yes, that's definitely true. There could very well be a duplicate for this one already, but in any case, it shouldn't be too hard to improve the error message here and we should do it.\r\n\r\nTo be a bit more precise, the case is the following:\r\n```\r\ncontract C {\r\n        function f() external { }\r\n        function g() external {\r\n                f();\r\n        }\r\n}\r\n// ----\r\n// DeclarationError 7576: (67-68): Undeclared identifier. \"f\" is not (or not yet) visible at this point.\r\n```\r\n\r\nThe idea would be to change the error message in this case. I'd suggest something along the lines of:\r\n\r\n```\r\n// DeclarationError 7576: (67-68): Undeclared identifier. \"f\" is an external function and thereby not visible unqualified. Either make ``f`` public to be able to use ``f`` as an internal function or use ``this.f`` to refer to ``f`` as an external function.\r\n```\r\n\r\nThe place to start would probably be ``NameAndTypeResolver.cpp:L521``, where several cases of \"invisible\" declarations are collapsed - there it should be able to specially mark external functions and report that via ``registerDeclaration`` to the ``DeclarationContainer``, which would allow for the ``DeclarationContainer`` to report more information to ``NameAndTypeResolver`` to be passed down ultimately to ``ReferencesResolver.cpp:L133`` where the error is produced. It may take some time to look through the inter-dependencies of all these, but ultimately it should be easy to store the required information and use it for improving the error message.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157592743/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158240227",
    "html_url": "https://github.com/ethereum/solidity/issues/13132#issuecomment-1158240227",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13132",
    "id": 1158240227,
    "node_id": "IC_kwDOAm_5kc5FCVfj",
    "user": {
      "login": "lukehutch",
      "id": 811305,
      "node_id": "MDQ6VXNlcjgxMTMwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/811305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukehutch",
      "html_url": "https://github.com/lukehutch",
      "followers_url": "https://api.github.com/users/lukehutch/followers",
      "following_url": "https://api.github.com/users/lukehutch/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukehutch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukehutch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukehutch/subscriptions",
      "organizations_url": "https://api.github.com/users/lukehutch/orgs",
      "repos_url": "https://api.github.com/users/lukehutch/repos",
      "events_url": "https://api.github.com/users/lukehutch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukehutch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T22:57:01Z",
    "updated_at": "2022-06-16T22:57:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "`and thereby not visible unqualified` doesn't seem grammatical...\r\n\r\nIf this is some compiler-internal terminology, it should be surfaced in a more comprehensible way to the public via the error message.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158240227/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158884633",
    "html_url": "https://github.com/ethereum/solidity/issues/13132#issuecomment-1158884633",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13132",
    "id": 1158884633,
    "node_id": "IC_kwDOAm_5kc5FEy0Z",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-17T13:41:47Z",
    "updated_at": "2022-06-17T13:41:47Z",
    "author_association": "MEMBER",
    "body": "Just to explain: Technically, a name/identifier being ``qualified`` means that its scope is explicitly mentioned, whereas ``unqualified`` means it does not mention its scope, i.e. ``f`` is unqualified, ``this.f`` is qualified...  but yeah, may be better to use some lighter phrasing for the message.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1158884633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1229557253",
    "html_url": "https://github.com/ethereum/solidity/issues/13132#issuecomment-1229557253",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13132",
    "id": 1229557253,
    "node_id": "IC_kwDOAm_5kc5JSY4F",
    "user": {
      "login": "mr-abims",
      "id": 74251327,
      "node_id": "MDQ6VXNlcjc0MjUxMzI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/74251327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mr-abims",
      "html_url": "https://github.com/mr-abims",
      "followers_url": "https://api.github.com/users/mr-abims/followers",
      "following_url": "https://api.github.com/users/mr-abims/following{/other_user}",
      "gists_url": "https://api.github.com/users/mr-abims/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mr-abims/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mr-abims/subscriptions",
      "organizations_url": "https://api.github.com/users/mr-abims/orgs",
      "repos_url": "https://api.github.com/users/mr-abims/repos",
      "events_url": "https://api.github.com/users/mr-abims/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mr-abims/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-28T21:25:43Z",
    "updated_at": "2022-08-28T21:25:43Z",
    "author_association": "NONE",
    "body": "\r\n> contract C {\r\n>         function f() external { }\r\n>         function g() external {\r\n>                 f();\r\n>         }\r\n> }\r\n\r\nUsing your example one way that i know solidity support to call an external function is by using this format\r\n\r\n         function f() external {\r\n        \r\n         }\r\n\r\n        function g() public {\r\n                this.f();\r\n        }",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1229557253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
