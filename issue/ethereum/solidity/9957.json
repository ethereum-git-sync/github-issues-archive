{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9957/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9957/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9957/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9957",
  "id": 714875534,
  "node_id": "MDU6SXNzdWU3MTQ4NzU1MzQ=",
  "number": 9957,
  "title": "ICE in calldataEncodedSize() when a public library function takes a storage parameter containing a nested maping",
  "user": {
    "login": "agroce",
    "id": 967816,
    "node_id": "MDQ6VXNlcjk2NzgxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/agroce",
    "html_url": "https://github.com/agroce",
    "followers_url": "https://api.github.com/users/agroce/followers",
    "following_url": "https://api.github.com/users/agroce/following{/other_user}",
    "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
    "organizations_url": "https://api.github.com/users/agroce/orgs",
    "repos_url": "https://api.github.com/users/agroce/repos",
    "events_url": "https://api.github.com/users/agroce/events{/privacy}",
    "received_events_url": "https://api.github.com/users/agroce/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 1333817191,
      "node_id": "MDU6TGFiZWwxMzMzODE3MTkx",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/fuzz-blocker",
      "name": "fuzz-blocker",
      "color": "e56129",
      "default": false,
      "description": "High priority bug. Blocks further fuzzing until fixed."
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "a3d4",
    "id": 60588784,
    "node_id": "MDQ6VXNlcjYwNTg4Nzg0",
    "avatar_url": "https://avatars.githubusercontent.com/u/60588784?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a3d4",
    "html_url": "https://github.com/a3d4",
    "followers_url": "https://api.github.com/users/a3d4/followers",
    "following_url": "https://api.github.com/users/a3d4/following{/other_user}",
    "gists_url": "https://api.github.com/users/a3d4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a3d4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a3d4/subscriptions",
    "organizations_url": "https://api.github.com/users/a3d4/orgs",
    "repos_url": "https://api.github.com/users/a3d4/repos",
    "events_url": "https://api.github.com/users/a3d4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a3d4/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "a3d4",
      "id": 60588784,
      "node_id": "MDQ6VXNlcjYwNTg4Nzg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/60588784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a3d4",
      "html_url": "https://github.com/a3d4",
      "followers_url": "https://api.github.com/users/a3d4/followers",
      "following_url": "https://api.github.com/users/a3d4/following{/other_user}",
      "gists_url": "https://api.github.com/users/a3d4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a3d4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a3d4/subscriptions",
      "organizations_url": "https://api.github.com/users/a3d4/orgs",
      "repos_url": "https://api.github.com/users/a3d4/repos",
      "events_url": "https://api.github.com/users/a3d4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a3d4/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-10-05T14:08:53Z",
  "updated_at": "2020-10-08T15:17:10Z",
  "closed_at": "2020-10-08T15:17:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThis contract:\r\n```solidity\r\nlibrary Test {\r\n   struct Nested { mapping(uint => uint )[2][] a; } uint y;\r\n    struct X { Nested n; }\r\n    function f(X storage x){}\r\n}\r\n```\r\n\r\nproduces:\r\n\r\n```\r\nInternal compiler error during compilation:\r\n/home/user/solidity/libsolidity/ast/Types.h(224): Throw in function virtual unsigned int solidity::frontend::Type::calldataEncodedSize(bool) const\r\nDynamic exception type: boost::exception_detail::clone_impl<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\n[solidity::util::tag_comment*] = \r\n```\r\n\r\nwhen compiled with solc.\r\n\r\nOn master, using AFL fuzzing.  Another discovery using https://github.com/agroce/afl-compiler-fuzzer.\r\n\r\n## Environment\r\n\r\n- Compiler version:  0.7.3-develop.2020.10.2+commit.756e21a8.Linux.clang\r\n- Target EVM version (as per compiler settings): N/A\r\n- Framework/IDE (e.g. Truffle or Remix): N/A\r\n- EVM execution environment / backend / blockchain client: N/A\r\n- Operating system: Ubuntu 18.04 in docker\r\n\r\n## Steps to Reproduce\r\n\r\nAbove shows pretty clearly, I think.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9957/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9957/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703665441",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-703665441",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 703665441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzY2NTQ0MQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-05T14:22:42Z",
    "updated_at": "2020-10-05T14:24:29Z",
    "author_association": "MEMBER",
    "body": "An older one this time. It started crashing the compiler in 0.6.7.\r\n\r\nAnd it's a nice construction. I tried simplifying it but removing pretty much anything makes it report a compiler error instead.\r\n\r\n### Errors on 0.6.6\r\n```\r\nError: No visibility specified. Did you intend to add \"public\"?\r\n --> /tmp/test.sol:4:5:\r\n  |\r\n4 |     function f(X storage x){}\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nError: Library cannot have non-constant state variables\r\n --> /tmp/test.sol:2:53:\r\n  |\r\n2 |    struct Nested { mapping(uint => uint )[2][] a; } uint y;\r\n  |                                                     ^^^^^^\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703665441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703674218",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-703674218",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 703674218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzY3NDIxOA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-05T14:36:28Z",
    "updated_at": "2020-10-05T14:36:28Z",
    "author_association": "NONE",
    "body": "The construction is luck; for Solidity I tend to just run a line-based minimizer on what my custom AFL finds.  Here, I think it only had to remove a single comment line, anyway.\r\n\r\nI could go more aggressive on reducing, but they seem small enough to be easy to hand-polish as it is, and I'm storing the line-reduced versions for some investigation of where the interesting code comes from (something beyond line reduction makes that provenance a lot harder to figure out).  If you all would find more reduction helpful, I can install CReduce or something...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703674218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703686335",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-703686335",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 703686335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzY4NjMzNQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-05T14:55:41Z",
    "updated_at": "2020-10-05T14:55:41Z",
    "author_association": "MEMBER",
    "body": "Getting even smaller examples is always nice but they're already very small an easy to work with. Just the fact that they're self-contained makes them very easy to reproduce and debug. It's much, much easier than when someone submits e.g. a whole Truffle project and gets an error somewhere in the middle of a test run. Basically a perfect repro.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703686335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704192843",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-704192843",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 704192843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDE5Mjg0Mw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-06T11:00:23Z",
    "updated_at": "2020-10-06T11:00:23Z",
    "author_association": "MEMBER",
    "body": "Smaller test case found by @hrkrshnn. And this one is valid code so it's not just a cosmetic issue after all.\r\n```solidity\r\nstruct Nested { mapping(uint => uint )[2][] a; } \r\nstruct X { Nested n; }\r\nlibrary Test {\r\n    function f(X storage x) public {}\r\n}  \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704192843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704397039",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-704397039",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 704397039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDM5NzAzOQ==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-06T16:27:21Z",
    "updated_at": "2020-10-06T16:27:21Z",
    "author_association": "NONE",
    "body": "Oh, nice",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704397039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704397565",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-704397565",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 704397565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDM5NzU2NQ==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-06T16:28:17Z",
    "updated_at": "2020-10-06T16:28:17Z",
    "author_association": "NONE",
    "body": "Too bad there's no way I can think of to take a crashing input and automatically explore around to see if there's a \"should compile\" variation, when it's not compiling.  But depending on if it is a long-standing or novel bug, I can't see an easy way to even determine if it should compile.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704397565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704425032",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-704425032",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 704425032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDQyNTAzMg==",
    "user": {
      "login": "a3d4",
      "id": 60588784,
      "node_id": "MDQ6VXNlcjYwNTg4Nzg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/60588784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a3d4",
      "html_url": "https://github.com/a3d4",
      "followers_url": "https://api.github.com/users/a3d4/followers",
      "following_url": "https://api.github.com/users/a3d4/following{/other_user}",
      "gists_url": "https://api.github.com/users/a3d4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a3d4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a3d4/subscriptions",
      "organizations_url": "https://api.github.com/users/a3d4/orgs",
      "repos_url": "https://api.github.com/users/a3d4/repos",
      "events_url": "https://api.github.com/users/a3d4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a3d4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-06T17:16:55Z",
    "updated_at": "2020-10-06T17:16:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Slightly simplified:\r\n```\r\nstruct S { mapping(uint => uint)[2] a; }\r\nlibrary L {\r\n    function f(S storage s) public {}\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704425032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704466459",
    "html_url": "https://github.com/ethereum/solidity/issues/9957#issuecomment-704466459",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9957",
    "id": 704466459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDQ2NjQ1OQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-06T18:28:28Z",
    "updated_at": "2020-10-06T18:28:28Z",
    "author_association": "MEMBER",
    "body": "@agroce Passing it through an external grammar checker might tell you if it looks like a something that could be valid code. Unfortunately our [grammar definition](https://solidity.readthedocs.io/en/latest/grammar.html) is probably not detailed enough for this.\r\n\r\nBut from practical standpoint, identifying bugs in the first place is the biggest value a fuzzer can add. Once we have a small, self-contained repro, simplifying it further is usually straightforward. Even in cases like in this one where it's less obvious, the person fixing the bug can find better examples fairly easily after digging into the problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/704466459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
