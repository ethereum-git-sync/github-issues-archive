{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9443",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9443/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9443/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9443/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9443",
  "id": 660264046,
  "node_id": "MDU6SXNzdWU2NjAyNjQwNDY=",
  "number": 9443,
  "title": "Stack overflow in solc due to recursive BFS",
  "user": {
    "login": "Changochen",
    "id": 18531282,
    "node_id": "MDQ6VXNlcjE4NTMxMjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/18531282?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Changochen",
    "html_url": "https://github.com/Changochen",
    "followers_url": "https://api.github.com/users/Changochen/followers",
    "following_url": "https://api.github.com/users/Changochen/following{/other_user}",
    "gists_url": "https://api.github.com/users/Changochen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Changochen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Changochen/subscriptions",
    "organizations_url": "https://api.github.com/users/Changochen/orgs",
    "repos_url": "https://api.github.com/users/Changochen/repos",
    "events_url": "https://api.github.com/users/Changochen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Changochen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-07-18T17:11:02Z",
  "updated_at": "2020-08-27T13:55:09Z",
  "closed_at": "2020-08-27T13:55:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\nConsider the following POC:\r\n```solidity\r\nlibrary a {\r\n    struct b {\r\n        mapping ( uint => b ) c ;\r\n    }\r\n    function d( b memory) public ;\r\n\r\n}\r\n```\r\n\r\nRun with `solc --bin -o poc poc.sol` with an solc built with asan and we got \r\n```\r\nASAN:DEADLYSIGNAL\r\n=================================================================\r\n==79623==ERROR: AddressSanitizer: stack-overflow on address 0x7fffe28e5ae8 (pc 0x7f9ea88fd509 bp 0x7fffe28e6350 sp 0x7fffe28e5ac0 T0)\r\n    #0 0x7f9ea88fd508  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79508)\r\n    #1 0x56550e151170 in std::char_traits<char>::copy(char*, char const*, unsigned long) (/home/yongheng/solidity/asan/solc/solc+0x22c170)\r\n    #2 0x56550e164241 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (/home/yongheng/solidity/asan/solc/solc+0x23f241)\r\n    #3 0x56550e2d94de in solidity::util::Result<solidity::frontend::Type const*>::Result(solidity::frontend::Type const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (/home/yongheng/solidity/asan/solc/solc+0x3b44de)\r\n    #4 0x56550e2c1d00 in solidity::util::Result<solidity::frontend::Type const*>::Result(solidity::frontend::Type const*) (/home/yongheng/solidity/asan/solc/solc+0x39cd00)\r\n    #5 0x56550e27a2f8 in solidity::frontend::StructType::interfaceType(bool) const (/home/yongheng/solidity/asan/solc/solc+0x3552f8)\r\n    #6 0x56550e29eddd in solidity::frontend::MappingType::interfaceType(bool) const (/home/yongheng/solidity/asan/solc/solc+0x379ddd)\r\n    #7 0x56550e2ab73c in solidity::frontend::StructType::interfaceType(bool) const::{lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}::operator()<solidity::util::BreadthFirstSearch& solidity::util::BreadthFirstSearch<solidity::frontend::StructDefinition const*>::run<{lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}>({lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}&&)::{lambda(solidity::frontend::StructDefinition const*)#1}>(auto, solidity::frontend::StructDefinition const*, {lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}&&) const (/home/yongheng/solidity/asan/solc/solc+0x38673c)\r\n    #8 0x56550e2abfb0 in solidity::util::BreadthFirstSearch<solidity::frontend::StructDefinition const*>& solidity::util::BreadthFirstSearch<solidity::frontend::StructDefinition const*>::run<solidity::frontend::StructType::interfaceType(bool) const::{lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}>(solidity::frontend::StructType::interfaceType(bool) const::{lambda(solidity::frontend::StructDefinition const*, auto:1&&)#1}&&) (/home/yongheng/solidity/asan/solc/solc+0x386fb0)\r\n....\r\n```\r\n## Environment\r\n\r\n- Compiler version:Version: 0.6.12-develop.2020.7.17+commit.d808302c.Linux.g++\r\n- Target EVM version (as per compiler settings):\r\n- Framework/IDE (e.g. Truffle or Remix):\r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system: Ubuntu 16",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9443/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9443/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/660951604",
    "html_url": "https://github.com/ethereum/solidity/issues/9443#issuecomment-660951604",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9443",
    "id": 660951604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDk1MTYwNA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-20T10:44:39Z",
    "updated_at": "2020-07-20T10:44:39Z",
    "author_association": "MEMBER",
    "body": "The patch should \"fix\" the issue. But the same problem would be valid for recursive structs passed as storage, the error message therefore isn't correct. Does it make sense to allow recursive structs passed as storage pointers? @chriseth \r\n\r\n```patch\r\ndiff --git a/libsolidity/ast/Types.cpp b/libsolidity/ast/Types.cpp\r\nindex 825fc8d0c..fb6270af4 100644\r\n--- a/libsolidity/ast/Types.cpp\r\n+++ b/libsolidity/ast/Types.cpp\r\n@@ -2396,6 +2396,12 @@ TypeResult StructType::interfaceType(bool _inLibrary) const\r\n \telse if (m_interfaceType_library.has_value())\r\n \t\treturn *m_interfaceType_library;\r\n \r\n+\tif (recursive() && !(location() == DataLocation::Storage))\r\n+\t\treturn TypeResult::err(\r\n+\t\t\t\"Recursive structs can only be passed as storage pointers to libraries, \"\r\n+\t\t\t\"not as memory objects to contract functions.\"\r\n+\t\t);\r\n+\r\n \tTypeResult result{TypePointer{}};\r\n \r\n \tutil::BreadthFirstSearch<StructDefinition const*> breadthFirstSearch{{&m_struct}};\r\n@@ -2421,18 +2427,7 @@ TypeResult StructType::interfaceType(bool _inLibrary) const\r\n \t\t\t\t\t\tmemberType = dynamic_cast<ArrayType const*>(memberType)->baseType();\r\n \r\n \t\t\t\t\tif (StructType const* innerStruct = dynamic_cast<StructType const*>(memberType))\r\n-\t\t\t\t\t{\r\n-\t\t\t\t\t\tif (innerStruct->recursive() && !(_inLibrary && location() == DataLocation::Storage))\r\n-\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\tresult = TypeResult::err(\r\n-\t\t\t\t\t\t\t\t\"Recursive structs can only be passed as storage pointers to libraries, not as memory objects to contract functions.\"\r\n-\t\t\t\t\t\t\t);\r\n-\t\t\t\t\t\t\tbreadthFirstSearch.abort();\r\n-\t\t\t\t\t\t\treturn;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\t_addChild(&innerStruct->structDefinition());\r\n-\t\t\t\t\t}\r\n+\t\t\t\t\t\t_addChild(&innerStruct->structDefinition());\r\n \t\t\t\t\telse\r\n \t\t\t\t\t{\r\n \t\t\t\t\t\tauto iType = memberType->interfaceType(_inLibrary);\r\n ```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/660951604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661080273",
    "html_url": "https://github.com/ethereum/solidity/issues/9443#issuecomment-661080273",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9443",
    "id": 661080273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTA4MDI3Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-20T14:37:33Z",
    "updated_at": "2020-07-20T14:37:33Z",
    "author_association": "MEMBER",
    "body": "Can you check if this is fixed in the breaking branch?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661080273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661088630",
    "html_url": "https://github.com/ethereum/solidity/issues/9443#issuecomment-661088630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9443",
    "id": 661088630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTA4ODYzMA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-20T14:51:22Z",
    "updated_at": "2020-07-20T14:51:22Z",
    "author_association": "MEMBER",
    "body": "@chriseth This is not fixed in breaking branch. This happens during `contractLevelChecker`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661088630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/664399598",
    "html_url": "https://github.com/ethereum/solidity/issues/9443#issuecomment-664399598",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9443",
    "id": 664399598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDM5OTU5OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-27T13:33:58Z",
    "updated_at": "2020-07-27T13:33:58Z",
    "author_association": "MEMBER",
    "body": "I think your fix looks good. Note that there are two kinds of recursive structs: Directly recursive structs like `struct S { S x; }` or `struct S { S[] x; }` and indirectly recursive structs `struct S { S[] x; }`.\r\n\r\nDirectly recursive structs are disallowed everywhere, but indirectly recursive structs are fine in storage and memory, but not in calldata (and thus not fine as a memory parameter of a public or external function).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/664399598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
