{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4893/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4893/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4893/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4893",
  "id": 356809523,
  "node_id": "MDU6SXNzdWUzNTY4MDk1MjM=",
  "number": 4893,
  "title": "Exponentiation producing inconsistent results",
  "user": {
    "login": "nweller",
    "id": 26663729,
    "node_id": "MDQ6VXNlcjI2NjYzNzI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/26663729?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nweller",
    "html_url": "https://github.com/nweller",
    "followers_url": "https://api.github.com/users/nweller/followers",
    "following_url": "https://api.github.com/users/nweller/following{/other_user}",
    "gists_url": "https://api.github.com/users/nweller/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nweller/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nweller/subscriptions",
    "organizations_url": "https://api.github.com/users/nweller/orgs",
    "repos_url": "https://api.github.com/users/nweller/repos",
    "events_url": "https://api.github.com/users/nweller/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nweller/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-09-04T13:26:42Z",
  "updated_at": "2018-09-14T09:16:57Z",
  "closed_at": "2018-09-10T12:22:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Across multiple unsigned integer types I've tried - e.g. uint8 - the exponentiation operator can produce a result which is outside of the range of that type in some contexts, but exhibits the truncation behavior I'd expect in other contexts.\r\n\r\nI get different failure modes in the truffle-based test framework I'm using (with ganache-cli, Linux, solc-js 0.4.24 - this produces unexpected values) and http://remix.ethereum.org/ (this produces a VM error).\r\n\r\nSee:\r\n\r\n    contract c0 {\r\n      // OK: 0 ** 0 returns 1\r\n      function f1() returns (uint8) { return uint8(0) ** uint8(0); }\r\n\r\n      // FAILURE:\r\n      //   - In truffle: returns 0, indicating as per above that\r\n      // \"uint8(uint8(2) ** uint8(8))\" is not 0 - but it should be as per the uint8 range \r\n      //   - In Remix: transaction fails due to a VM eror\r\n      function f2() returns (uint8) { return uint8(0) ** uint8(uint8(2) ** uint8(8)); }\r\n\r\n      // OK: 2 ** 8 returns the expected zero-truncated result\r\n      function f3() returns (uint8) { return uint8(2) ** uint8(8); }\r\n\r\n      // OK: In this context, \"uint8(uint8(2) ** uint8(8))\" is 0, contradicting\r\n      // the exponentiation context above\r\n      function f4() returns (bool) { return uint8((uint8(2) ** uint8(8))) > 0; }\r\n    }\r\n\r\n\r\nThis probably has something to do with this statement from the docs, which indicates that intermediate results exceeding the size of their input operand types can be produced:\r\n\r\n\thttps://solidity.readthedocs.io/en/v0.4.24/types.html\r\n\r\n\tNumber literal expressions retain arbitrary precision until they are converted\r\n\tto a non-literal type (i.e. by using them together with a non-literal expression).\r\n\tThis means that computations do not overflow and divisions do not truncate in\r\n\tnumber literal expressions.\r\n\r\n\tFor example, (2**800 + 1) - 2**800 results in the constant 1 (of type uint8) \r\n\talthough intermediate results would not even fit the machine word size.\r\n\r\nIf I understand this correctly, the expression \"x ** y\" is dynamically typed and may  produce a result which is outside of the range of x's type. But in that case using an explicit conversion to the smaller type should at least consistently always truncate (preferred, IMO) or never truncate.\r\n\r\n(This report is part of an ICE Center@ETH Zurich project on automated compiler validation funded by the Ethereum Foundation.)",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4893/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4893/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418392635",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418392635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418392635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM5MjYzNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T14:40:37Z",
    "updated_at": "2018-09-10T08:56:09Z",
    "author_association": "MEMBER",
    "body": "This is unrelated to the part of the documentation you cite because due to the type conversions to `uint8` we are not in the domain of literal expressions anymore.\r\n\r\nI would assume this is due to cleanup not being performed for intermediate values. \"Lazy cleanup\" can be done as long as cleanup and operation \"commute\" which is the case for addition and multiplication and I would guess also \"almost\" for EXP except for the special case of zero.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418392635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418394390",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418394390",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418394390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM5NDM5MA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T14:44:55Z",
    "updated_at": "2018-09-04T14:44:55Z",
    "author_association": "MEMBER",
    "body": "The following returns ``(0,0,0)`` in remix...\r\n```\r\ncontract C {\r\n    function f() public pure returns (uint8, uint8, uint8) {\r\n        return (42, uint8(0) ** uint8(uint8(2) ** uint8(8)), 21);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418394390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418394700",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418394700",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418394700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM5NDcwMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T14:45:40Z",
    "updated_at": "2018-09-04T14:45:40Z",
    "author_association": "MEMBER",
    "body": "I would assume that we do not have to clean the base, but we do have to clean the exponent, and the only special case here would be where the exponent is zero (in the respective representation).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418394700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418395060",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418395060",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418395060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM5NTA2MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T14:46:37Z",
    "updated_at": "2018-09-04T14:46:37Z",
    "author_association": "MEMBER",
    "body": "So basically `0**0 == 1`, but `0**0x100 == 0`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418395060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418505342",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418505342",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418505342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUwNTM0Mg==",
    "user": {
      "login": "nweller",
      "id": 26663729,
      "node_id": "MDQ6VXNlcjI2NjYzNzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/26663729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nweller",
      "html_url": "https://github.com/nweller",
      "followers_url": "https://api.github.com/users/nweller/followers",
      "following_url": "https://api.github.com/users/nweller/following{/other_user}",
      "gists_url": "https://api.github.com/users/nweller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nweller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nweller/subscriptions",
      "organizations_url": "https://api.github.com/users/nweller/orgs",
      "repos_url": "https://api.github.com/users/nweller/repos",
      "events_url": "https://api.github.com/users/nweller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nweller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T20:23:18Z",
    "updated_at": "2018-09-04T20:38:36Z",
    "author_association": "NONE",
    "body": "Thanks for the replies.\r\n\r\nIs the following case - which also involves the exponentiation operator - a duplicate, or something else? It behaves differently for me in Remix by producing an unexpected result rather than a VM error.\r\n\r\nI construct a value of 1 to use as exponent using the unary minus operator, which results in some invalid value, see:\r\n\r\n    contract c0 {\r\n        event UINT8(uint8 arg);\r\n        event UINT256(uint256 arg);\r\n\r\n      function f() public payable {\r\n          // FAILURE: event result is 0, even though the exponent \"uint8(-uint8(0xff))\"\r\n          // should be 1 and the base is 2\r\n          emit UINT8(uint8(2) ** (uint8(-uint8(0xff))));\r\n          // OK - 2^1 returns 2\r\n          emit UINT8(uint8(2) ** uint8(1));\r\n          // OK - confirms that \"uint8(-uint8(0xff))\" yields 1 in isolation\r\n          emit UINT8(uint8(-uint8(0xff)));\r\n\r\n          // The following statements show that the problem does not occur for uint256,\r\n          // so it may also only affect small types\r\n          emit UINT256(uint256(2) ** (uint256(-uint256(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))));\r\n          emit UINT256(uint256(2) ** uint256(1));\r\n          emit UINT256(uint256(-uint256(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)));\r\n      }\r\n    }",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418505342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418630290",
    "html_url": "https://github.com/ethereum/solidity/issues/4893#issuecomment-418630290",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4893",
    "id": 418630290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYzMDI5MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T07:37:11Z",
    "updated_at": "2018-09-05T07:37:11Z",
    "author_association": "MEMBER",
    "body": "Phew, I almost thought that we have the same problem with unary minus, but this is actually another incarnation of the missing cleanup for exponentiation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418630290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
