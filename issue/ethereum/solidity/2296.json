{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/2296/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/2296/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/2296/events",
  "html_url": "https://github.com/ethereum/solidity/issues/2296",
  "id": 230964210,
  "node_id": "MDU6SXNzdWUyMzA5NjQyMTA=",
  "number": 2296,
  "title": "Syntax for creating copies of contracts",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2017-05-24T08:46:41Z",
  "updated_at": "2022-08-17T13:49:45Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The factory pattern that creates multiple instances of the same contract is quite common. Solidity only provides a way to implement it which requires full copies of the contracts and thus is rather costly. After metropolis, delegatecall-proxies are possible and they should also be supported for contracts created from contracts.\r\n\r\n--\r\n\r\nAlternative 1:\r\n\r\nIf we have an existing contract `c` of type `C`, then `copyof c(arg1, ..., argn)` creates a delegatecall proxy with constructor taken from `C` and supplied arguments `arg1`, ..., `argn`.\r\n\r\nDrawbacks:\r\nThe programmer has to explicitly create a \"master copy\" of the contract and has to ensure that it will not be selfdestructed as long as there are other copies.\r\n\r\n--\r\n\r\nAlternative 2:\r\n\r\nAnother suggestion might be that the master copy M of all contracts created by a contract C is created as part of the constructor of C. This master copy ensures that it cannot be selfdestructed by storing a flag in its storage at a certain location. Every time the master copy runs, it reads that location. If the flag is set, it throws. The idea is that actual copies will have that flag set to false, while the master copy has it set to true. This way, the master copy can only be delegatecalled and will throw if it is called regularly.\r\n\r\nAnother way to ensure this would be to not use storage but instead store the address of the master copy inside its code at the time where the constructor of the master copy runs. At runtime, the current address is compared with this address and results in a reversion if they are equal.\r\n\r\nThe syntax here would rather be `copyof C(arg1, ..., argn)` where `C` is the type of the contract and the address is either stored at a location in storage or the master copy is created using `CREATE2` and thus its address is known.\r\n\r\nWe could also change the way `new` creates contract to this method.\r\n\r\nIn all cases, the fallback function of a copy should probably stay as cheap as possible and thus it should not delegatecall into the copy, i.e. all functions it calls internally have to be copied.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/2296/reactions",
    "total_count": 12,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 4,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/2296/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/304920125",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-304920125",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 304920125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDkyMDEyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T15:42:33Z",
    "updated_at": "2017-05-30T15:42:33Z",
    "author_association": "MEMBER",
    "body": "Alternative 2 also has the benefit that the code of the contract to be created is only part of the creation transaction code and not part of the deployed code (as it is currently).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/304920125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305142897",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-305142897",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 305142897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE0Mjg5Nw==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T09:53:41Z",
    "updated_at": "2017-05-31T15:54:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The programmer has to explicitly create a \"master copy\" of the contract and has to ensure that it will not be selfdestructed as long as there are other copies.\r\n\r\nSeems to me that this would require storing a list of \"child\" contracts, and it is possible to block the destruction of \"master\" by creating a copy and throwing away the key.\r\n\r\n-----\r\n\r\nEDIT: Won't work, see next comment.\r\n\r\n> Every time the master copy runs, it reads that location. If the flag is set, it throws.\r\n\r\nInstead of a separate flag, can this be achieved by having the first five bytes of a master contract as\r\n\r\n`0x 60 `**`00`**` 60 `**`ff 57`**` (PUSH1 `**`0x00`**` PUSH1 `**`0xff JUMPI`**`)`\r\n\r\ninstead of (current)\r\n\r\n`0x 60 `**`60`**` 60 `**`40 52`**` (PUSH1 `**`0x60`**` PUSH1 `**`0x40 MSTORE`**`)`\r\n\r\nor is this too hackish?..\r\n\r\nThe master throws due to the infinite loop consuming all gas. ~~Or~~ Does doing `DELEGATECALL` execute that piece, too?\r\n\r\n-----\r\n\r\n> We could also change the way `new` creates contract to this method.\r\n\r\nBytecode will differ then if compiled with a previous version and the new one (SFTP). IMO it's best to avoid semantic changes in keywords if possible. This makes some forms of analysis more difficult. `copyof` looks fine to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305142897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305178902",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-305178902",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 305178902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE3ODkwMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T12:59:51Z",
    "updated_at": "2017-05-31T12:59:59Z",
    "author_association": "MEMBER",
    "body": "@veox thanks for your comment! Unfortunately, just changing the code is not an option, also the regular call would run into an infinite loop. But it seems that there is a cheaper way: At deploy time, the address of the master is stored in its own code and that is checked for each call. (updated the description)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305178902/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305228408",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-305228408",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 305228408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIyODQwOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T15:42:30Z",
    "updated_at": "2017-05-31T15:42:30Z",
    "author_association": "MEMBER",
    "body": "Suggestion for the syntax for alternative 2: `create C(x1, ..., xn)`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/305228408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/311990141",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-311990141",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 311990141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTk5MDE0MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-29T14:48:38Z",
    "updated_at": "2017-06-29T14:48:38Z",
    "author_association": "MEMBER",
    "body": "One thing to keep in mind here is that the fallback function should probably stay as cheap as possible, i.e. it should not delegatecall into the copy contract. If we do this, it has to \"pull in\" all functions it calls to internally (the same holds true for the constructor).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/311990141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316523086",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-316523086",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 316523086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUyMzA4Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T21:28:30Z",
    "updated_at": "2017-07-19T21:28:37Z",
    "author_association": "MEMBER",
    "body": "@chriseth do you remember what was the design we agreed the last time (~5 meetings ago)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316523086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317777222",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-317777222",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 317777222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzc3NzIyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T15:33:54Z",
    "updated_at": "2017-07-25T15:33:54Z",
    "author_association": "MEMBER",
    "body": "Hm, I don't remember that we decided anything about this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317777222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/329820389",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-329820389",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 329820389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgyMDM4OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T15:43:58Z",
    "updated_at": "2017-09-15T15:43:58Z",
    "author_association": "MEMBER",
    "body": "New proposal is to use `new shared C(arg1, .. argN)` from the BLWS'17.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/329820389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636146",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-343636146",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 343636146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjE0Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:12:32Z",
    "updated_at": "2017-11-11T03:16:11Z",
    "author_association": "MEMBER",
    "body": "We could consider introducing some kind of flag \"in-master-copy\", which would be accessible in the code and the user could code different behaviour using that (this also could work well with modifier areas).\r\n\r\n```\r\ncontract Wallet {\r\n  address owner;\r\n\r\n  modifier ownerOnly { require(msg.sender == owner); _; }\r\n  modifier onlyInInstance { require(isInMasterCopy == false); _; }\r\n\r\n  onlyInInstance {\r\n    function transfer(address to) ownerOnly {}\r\n    function otherriskyfunction() {}\r\n  }\r\n\r\n  function Wallet(address _owner) { owner = _owner; }\r\n}\r\n\r\ncontract walletFactory {\r\n  function deployInstance() returns (address) {\r\n    return new shared Wallet(msg.sender);\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636742",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-343636742",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 343636742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjc0Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:22:10Z",
    "updated_at": "2017-11-11T03:22:10Z",
    "author_association": "MEMBER",
    "body": "Thinking more about this, it perhaps makes sense to have a special marker for such contracts/libraries: `shared contract Wallet` or `shared library Wallet`. The `isInMasterCopy` would only be available in such contracts and the `new shared` expression would only work with them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/350976855",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-350976855",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 350976855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDk3Njg1NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T08:14:52Z",
    "updated_at": "2017-12-12T08:14:52Z",
    "author_association": "MEMBER",
    "body": "As a first stage of this feature, I would propose the following:\r\n\r\nIt is possible to create contracts using `new shared ContractName`. The constructor of a contract that contains a `new shared ContractName` directive deploys master copies of such contracts. The master copy ignores the constructor code but retains the full deployed code. The location of the master copy is stored in the code. The deployed code will be call-protected. Whenever a `new shared ContractName` is executed, a special contract is created that:\r\n\r\n - runs the full constructor of ContractName\r\n - deploys a delegatecall-proxy to the stored master copy address (it delegates everything that has nonempty calldata)\r\n - still contains the fallback function and all functions called from there",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/350976855/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394990853",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-394990853",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 394990853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk5MDg1Mw==",
    "user": {
      "login": "rayeaster",
      "id": 1487283,
      "node_id": "MDQ6VXNlcjE0ODcyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1487283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rayeaster",
      "html_url": "https://github.com/rayeaster",
      "followers_url": "https://api.github.com/users/rayeaster/followers",
      "following_url": "https://api.github.com/users/rayeaster/following{/other_user}",
      "gists_url": "https://api.github.com/users/rayeaster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rayeaster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rayeaster/subscriptions",
      "organizations_url": "https://api.github.com/users/rayeaster/orgs",
      "repos_url": "https://api.github.com/users/rayeaster/repos",
      "events_url": "https://api.github.com/users/rayeaster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rayeaster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T08:42:18Z",
    "updated_at": "2018-06-06T08:42:18Z",
    "author_association": "NONE",
    "body": "any illustrative code for this proxy feature?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394990853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/562610002",
    "html_url": "https://github.com/ethereum/solidity/issues/2296#issuecomment-562610002",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2296",
    "id": 562610002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjYxMDAwMg==",
    "user": {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-06T15:11:40Z",
    "updated_at": "2019-12-06T15:11:40Z",
    "author_association": "MEMBER",
    "body": "While I was coming from the CREATE2 ticket linked above, I wanted to give an example on how other languages (here: F#) provide [a somewhat equivalent feature](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/copy-and-update-record-expressions):\r\n\r\n```fsharp\r\n{ masterCopy with X = 1, Y = 2 }\r\n```\r\nwhereas `X` and `Y` here could be the named parameters of the constructor of the type of `masterCopy`.\r\n\r\nLinking this with the CREATE2 ticket, we could extend this to:\r\n```fsharp\r\n{ masterCopy with X = 1, Y = 2, salt = ... }\r\n```\r\n\r\nAlternatively\r\n```fsharp\r\n{ masterCopy <salt=...> with X = 1, Y = 2 }\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/562610002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
