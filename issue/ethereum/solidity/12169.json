{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12169/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12169/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12169/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12169",
  "id": 1031829775,
  "node_id": "I_kwDOAm_5kc49gHkP",
  "number": 12169,
  "title": "[Yul Optimizer] Do not move loop invariants that consume a lot of gas",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2021-10-20T21:05:35Z",
  "updated_at": "2022-11-28T07:14:07Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a weird one.\r\n\r\n```\r\ncontract C0 {\r\n  function f0() external returns (bytes memory o1)\r\n  {\r\n    assembly\r\n    {\r\n      for { let i := 0 } lt(i, 1) { i := add(i, 1) }\r\n      {\r\n        if o1 { break }\r\n        o1 := keccak256(0, 12345678912)\r\n      }\r\n    }\r\n  }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f0() -> 0x20, 0\r\n```\r\n\r\nfails via Yul.\r\n\r\nTo repro\r\n\r\n```\r\n$ cp test.sol test/libsolidity/semanticTests\r\n$ isoltest -t semanticTests/test --optimize --show-messages\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12169/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12169/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948045840",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-948045840",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 948045840,
    "node_id": "IC_kwDOAm_5kc44gggQ",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T21:21:01Z",
    "updated_at": "2021-10-20T21:21:01Z",
    "author_association": "MEMBER",
    "body": "Asm diff that I tried to make sense of but gave me :-(\r\n\r\nhttps://gist.github.com/bshastry/0cbd6bb471f3b9c22ebf4b859669ce08\r\n\r\n`---` obtained from `solc test.sol --experimental-via-ir --asm`\r\n`+++` obtained from `solc test.sol --ir-optimized --asm`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948045840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948551002",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-948551002",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 948551002,
    "node_id": "IC_kwDOAm_5kc44ib1a",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-21T12:11:28Z",
    "updated_at": "2021-10-21T12:11:28Z",
    "author_association": "MEMBER",
    "body": "Another example\r\n\r\n```\r\ncontract C0 {\r\n  function f1() external returns (bytes memory o0)\r\n  {\r\n  assembly\r\n    {\r\n      {\r\n          for { o0 := selfbalance() } o0\r\n              {\r\n                o0 := keccak256(0, 1155939646350332)\r\n              } {}\r\n      }\r\n    }\r\n  }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f1() -> 0x20, 0\r\n```\r\n\r\nfails similarly via optimized IR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948551002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953838002",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-953838002",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 953838002,
    "node_id": "IC_kwDOAm_5kc442mmy",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T13:19:49Z",
    "updated_at": "2021-10-28T13:19:49Z",
    "author_association": "MEMBER",
    "body": "This seems to be due to loop-invariant code motion. cc @hrkrshnn\r\nMaybe we should not pull out things that are potentially very expensive?\r\nOn the other hand, the assumption was that if a loop is present in the code, we expect it to be executed at least once.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953838002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953984863",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-953984863",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 953984863,
    "node_id": "IC_kwDOAm_5kc443Kdf",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T16:00:41Z",
    "updated_at": "2021-10-28T16:00:41Z",
    "author_association": "MEMBER",
    "body": "Yeah, the issue is with loop invariant code motion. The `keccak` is taken out of the loop, where it fails out of gas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953984863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953989438",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-953989438",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 953989438,
    "node_id": "IC_kwDOAm_5kc443Lk-",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T16:06:15Z",
    "updated_at": "2021-10-28T16:06:25Z",
    "author_association": "MEMBER",
    "body": "To be fair, there is no way to fix this without preventing `mload`, `keccak` from getting taken out of the loop. Especially if the offsets are not static. It's somewhat implicit that the optimizer assumes infinite gas, but this is a grey area, since EVM implementations seems to explicitly use `2**32` as max memory size and revert in all other cases. So not sure how we want to proceed here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953989438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954058036",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-954058036",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 954058036,
    "node_id": "IC_kwDOAm_5kc443cU0",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T17:36:43Z",
    "updated_at": "2021-10-28T17:36:43Z",
    "author_association": "MEMBER",
    "body": "> On the other hand, the assumption was that if a loop is present in the code, we expect it to be executed at least once.\r\n\r\nJust to be precise, the assumption would be `if loop present, all paths inside the loop body are executed at least once`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954058036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954685845",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-954685845",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 954685845,
    "node_id": "IC_kwDOAm_5kc4451mV",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-29T12:01:22Z",
    "updated_at": "2021-10-29T12:01:22Z",
    "author_association": "MEMBER",
    "body": "> It's somewhat implicit that the optimizer assumes infinite gas, but this is a grey area, since EVM implementations seems to explicitly use 2**32 as max memory size and revert in all other cases.\n\nThe new codegen does assume a Max memory size, right?\n\nSee: https://github.com/ethereum/solidity/pull/11714",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954685845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954692195",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-954692195",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 954692195,
    "node_id": "IC_kwDOAm_5kc4453Jj",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-29T12:11:25Z",
    "updated_at": "2021-10-29T12:11:25Z",
    "author_association": "MEMBER",
    "body": "> The new codegen does assume a Max memory size, right?\r\n\r\nThe optimizer doesn't assume this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954692195/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/955173355",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-955173355",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 955173355,
    "node_id": "IC_kwDOAm_5kc447snr",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-30T08:33:51Z",
    "updated_at": "2021-10-30T08:33:51Z",
    "author_association": "MEMBER",
    "body": "I'm fine with closing this as won't fix since I can't think of a strong enough threat model.\n\nI was thinking along the lines of\n\n\"Malicious smart contract steals ether (gas) by placing keccak inside a for loop that would only be evaluated if the Yul optimizer is enabled.\"\n\nBut I'm afraid that's not a strong enough threat model.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/955173355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1328643274",
    "html_url": "https://github.com/ethereum/solidity/issues/12169#issuecomment-1328643274",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12169",
    "id": 1328643274,
    "node_id": "IC_kwDOAm_5kc5PMXzK",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-28T07:14:07Z",
    "updated_at": "2022-11-28T07:14:07Z",
    "author_association": "MEMBER",
    "body": "This came up again while fuzzing the optimized EVM code transform\r\n\r\n```\r\n{\r\n   function f()\r\n   {\r\n       for { } lt(0, 60) { }\r\n       {\r\n           {\r\n               if xor(origin(), 0xff) { break }\r\n               if mload(0x3fffffffff)\r\n               {\r\n                   revert(0, 0xf)\r\n               }\r\n           }\r\n       }\r\n   }\r\n   f()\r\n}\r\n```\r\n\r\nis optimised to\r\n\r\n```\r\n{\r\n    let _1 := mload(0x3fffffffff)\r\n    let _2 := iszero(eq(origin(), 0xff))\r\n    for { } iszero(_2) { }\r\n    { if _1 { revert(0, 0xf) } }\r\n}\r\n```\r\n\r\nThe unoptimised code does not run out of gas because the `mload` is not evaluated. The optimised code runs out of gas because `mload` is evaluated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1328643274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
