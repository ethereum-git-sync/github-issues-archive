{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/493",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/493/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/493/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/493/events",
  "html_url": "https://github.com/ethereum/solidity/issues/493",
  "id": 147426213,
  "node_id": "MDU6SXNzdWUxNDc0MjYyMTM=",
  "number": 493,
  "title": "inline functions",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/5",
    "html_url": "https://github.com/ethereum/solidity/milestone/5",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/5/labels",
    "id": 1672322,
    "node_id": "MDk6TWlsZXN0b25lMTY3MjMyMg==",
    "number": 5,
    "title": "Backlog",
    "description": "",
    "creator": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 4,
    "state": "closed",
    "created_at": "2016-03-29T16:51:30Z",
    "updated_at": "2016-08-08T10:35:00Z",
    "due_on": null,
    "closed_at": "2016-08-08T10:35:00Z"
  },
  "comments": 3,
  "created_at": "2016-04-11T13:23:25Z",
  "updated_at": "2016-05-05T11:37:05Z",
  "closed_at": "2016-05-05T11:37:01Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Libraries can be seen as \"implied\" base contracts for any other contract. Because they cannot inherit and cannot be (explicitly) inherited from, this fits the inheritance system. Library functions are not taken into account in virtual method resolution, they can only be called explicitly via the already existing `<BaseContract>.<functionName>` way of selecting specific functions in virtual function overrides.\n\nBecause of that, it makes sense to allow contracts to call internal functions of libraries as if that library were a base contract of the caller. The calling convention will change to \"internal\" meaning in effect that the code of the library function (and anything called from therein) has to be included together with the code of the caller.\n- [x] make internal functions visible in library contract types and change calling convention to internal\n- [x] check that it is not possible to call function on library _instances_ (not exactly in scope but good to fix anyway)\n- [x] internal functions should not be part of the abi-interface\n- [x] check that it is possible to pass memory structs back and forth\n- [x] check that it is possible to return variably-sized memory data\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/493/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/493/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/211537759",
    "html_url": "https://github.com/ethereum/solidity/issues/493#issuecomment-211537759",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/493",
    "id": 211537759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUzNzc1OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T19:19:19Z",
    "updated_at": "2016-04-18T19:19:19Z",
    "author_association": "MEMBER",
    "body": "I came across another issue with libraries, because they are and behave like a contract. Any method which would return something currently categorized as internal (such as a struct) is not allowed as external. Would be nice if the `inline` keyword would allow them (just as `internal` allows it).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/211537759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/214750338",
    "html_url": "https://github.com/ethereum/solidity/issues/493#issuecomment-214750338",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/493",
    "id": 214750338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc1MDMzOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T13:46:34Z",
    "updated_at": "2016-04-26T13:46:34Z",
    "author_association": "MEMBER",
    "body": "@chriseth actually this question comes down to whether we consider a user of a library a derived contract or not.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/214750338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/215023977",
    "html_url": "https://github.com/ethereum/solidity/issues/493#issuecomment-215023977",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/493",
    "id": 215023977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTAyMzk3Nw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T09:20:35Z",
    "updated_at": "2016-04-27T09:20:35Z",
    "author_association": "MEMBER",
    "body": "To solidify (heh) my thoughts expressed in Gitter:\n\nI believe 'inline' is the wrong keyword to use for this. In other languages, 'inline' is universally a request to the compiler that it apply a specific optimization strategy, taking the body of the inline function and inserting it at all its call sites. This is quite different from the meaning intended here, which is \"link this function into the calling contract's code\".\n\nThe former behavior is transparent to the user: whether or not the compiler honored the request, the code executes the same. The latter has real runtime implications on how values are passed, what return types are supported, and whether caller arguments can be mutated. Using 'inline' to mean this will confuse anyone familiar with an existing language that uses the term in its accustomed manner.\n\nI would strongly suggest using the existing keyword 'internal'. The existing semantics of this keyword match what's desired: it may only be called from inside the contract or derived contracts, and exposes no external ABI. If you consider a contract that uses a library as the same sort of relationship as deriving from another contract, this isn't a problem. The 'private' keyword is still available to libraries wishing to disguise implementation details from their callers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/215023977/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
