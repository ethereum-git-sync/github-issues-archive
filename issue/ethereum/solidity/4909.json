{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4909",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4909/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4909/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4909/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4909",
  "id": 357197651,
  "node_id": "MDU6SXNzdWUzNTcxOTc2NTE=",
  "number": 4909,
  "title": "memory can be freed somehow",
  "user": {
    "login": "liangdzou",
    "id": 1409883,
    "node_id": "MDQ6VXNlcjE0MDk4ODM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/liangdzou",
    "html_url": "https://github.com/liangdzou",
    "followers_url": "https://api.github.com/users/liangdzou/followers",
    "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
    "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
    "organizations_url": "https://api.github.com/users/liangdzou/orgs",
    "repos_url": "https://api.github.com/users/liangdzou/repos",
    "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/liangdzou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-09-05T12:05:39Z",
  "updated_at": "2018-09-06T16:51:42Z",
  "closed_at": "2018-09-06T16:51:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "IMHO, the functions that return memory reference cannot reset the free memory pointer. This is known statically, so, we can insert those instructions for the functions that do not return memory references. Even if one function returns memory reference, the memory can be freed by the first ancestor that does not return memory reference. I think this will also help to save some gas.\r\n\r\nBy the way, can we implement the returned memory by allocating the memory by its parent an pass by reference?\r\n\r\n**The following is copied from issue #4881. I did not find a way to open it. I still have some idea to discuss. so, I have to create a new one. Sorry for the inconvenient caused.**\r\n\r\n## Abstract\r\n\r\nWrite a simple example as follows.\r\n```\r\n  1 pragma solidity ^0.4.15;                                                        \r\n  2 contract Hello {                                                                \r\n  3   function f() public {                                                         \r\n  4     int[10] memory x;                                                                                                                                                                                                                                                     \r\n  5   }                                                                             \r\n  6 }                                                                               \r\n```\r\nI only found one place changes the \"free memory pointer\" in the generated ASM.\r\n\r\n```\r\n 81       0x140\r\n 82       mload(0x40)                                                               \r\n 83       swap1                                                                     \r\n 84       dup2                                                                      \r\n 85       add                                                                       \r\n 86       0x40                                                                      \r\n 87       mstore                                                                    \r\n```\r\n\r\nSo, the memory is never freed.\r\nThis can be fixed by insert \"mload\" at the beginning of a function call and \"mstore\" at the end of the function call.\r\n\r\n## Motivation\r\n\r\nCurrently, Solidity does not free memory automatically. I have tried a few examples, the ASM code generated by Solidity never subtracts the \"free memory pointer\" in memory location 0x40. This can be fixed by insert two instructions.\r\n\r\n## Specification\r\n\r\nInsert one instruction \"mload 0x40\" at the beginning of a function call and store it back to \"free memory pointer\" by \"mstore 0x40 value\".\r\nThe cost is very low and actually can save lots of memory. I think at least this can be an optimization option.\r\n\r\n## Backwards Compatibility\r\n\r\nThis change does not bring any backwards compatibility problem.",
  "closed_by": {
    "login": "liangdzou",
    "id": 1409883,
    "node_id": "MDQ6VXNlcjE0MDk4ODM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/liangdzou",
    "html_url": "https://github.com/liangdzou",
    "followers_url": "https://api.github.com/users/liangdzou/followers",
    "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
    "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
    "organizations_url": "https://api.github.com/users/liangdzou/orgs",
    "repos_url": "https://api.github.com/users/liangdzou/repos",
    "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/liangdzou/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4909/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4909/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418708768",
    "html_url": "https://github.com/ethereum/solidity/issues/4909#issuecomment-418708768",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4909",
    "id": 418708768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODcwODc2OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T12:16:16Z",
    "updated_at": "2018-09-05T12:16:16Z",
    "author_association": "MEMBER",
    "body": "Thanks for the additional input. I still don't see many use-cases of local memory variables that are neither passed in nor out of a function, because that would be the only place where we could free the memory easily.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418708768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418789367",
    "html_url": "https://github.com/ethereum/solidity/issues/4909#issuecomment-418789367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4909",
    "id": 418789367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODc4OTM2Nw==",
    "user": {
      "login": "liangdzou",
      "id": 1409883,
      "node_id": "MDQ6VXNlcjE0MDk4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liangdzou",
      "html_url": "https://github.com/liangdzou",
      "followers_url": "https://api.github.com/users/liangdzou/followers",
      "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
      "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
      "organizations_url": "https://api.github.com/users/liangdzou/orgs",
      "repos_url": "https://api.github.com/users/liangdzou/repos",
      "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liangdzou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T16:12:03Z",
    "updated_at": "2018-09-05T16:12:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it is easier to free the memory if there is no memory passed between functions. If there is no memory passed between functions, the memory allocated in the function will never be used after the function call instance is finished. Next time, when the function is called again, the memory will be allocated again. (correct me if I am wrong.) I think the only way to reuse a memory in Solidity is by passing by reference.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418789367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/419165260",
    "html_url": "https://github.com/ethereum/solidity/issues/4909#issuecomment-419165260",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4909",
    "id": 419165260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE2NTI2MA==",
    "user": {
      "login": "liangdzou",
      "id": 1409883,
      "node_id": "MDQ6VXNlcjE0MDk4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liangdzou",
      "html_url": "https://github.com/liangdzou",
      "followers_url": "https://api.github.com/users/liangdzou/followers",
      "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
      "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
      "organizations_url": "https://api.github.com/users/liangdzou/orgs",
      "repos_url": "https://api.github.com/users/liangdzou/repos",
      "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liangdzou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T16:51:42Z",
    "updated_at": "2018-09-06T16:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, this seems not so important since all smart contracts are gas limited. When a smart contract is finished the EVM instance is freed which cause all the memory is freed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/419165260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
