{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6726",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6726/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6726/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6726/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6726",
  "id": 443232621,
  "node_id": "MDU6SXNzdWU0NDMyMzI2MjE=",
  "number": 6726,
  "title": "[YulOpt] Common code motion",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-05-13T06:52:25Z",
  "updated_at": "2022-08-17T13:48:46Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Code that is common in all branches of the same control flow should be moved prior to the branch point. This might be especially interesting for loop invariant code motion, but could also be useful for if and switch statements.\r\n\r\nExample, taken from the SolYul code gen:\r\n```\r\nlet selector := shift_right_224_unsigned(calldataload(0))\r\nswitch selector\r\ncase 0x26121ff0\r\n{\r\n    if callvalue() { revert(0, 0) }\r\n    fun_f_4()\r\n    return(0, 0)\r\n}\r\ncase 0xe2179b8e\r\n{\r\n    if callvalue() { revert(0, 0) }\r\n    fun_g_5()\r\n    return(0, 0)\r\n}\r\ndefault { revert(0, 0) }\r\n```\r\n\r\nThe `callvalue` check can obviously be done before the switch: The `default` case does not have a callvalue check, but it does revert. This might be a tricky decision depending on the cost of the common code (it might even contain a revert itself!). In contracts in general, there will be payable and non-payable functions and those can be grouped: The switch can be split into one case that does not have the common code and the other case that has the common code:\r\n\r\n```\r\nswitch x\r\ncase 1: ...\r\ncase 2: ...\r\ncase 3: ...\r\ndefault {\r\n  <common code>\r\n  switch x\r\n    case 4: ...\r\n    case 5: ...\r\n    case 6: ...\r\n    default: ...\r\n }\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6726/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6726/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527186586",
    "html_url": "https://github.com/ethereum/solidity/issues/6726#issuecomment-527186586",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6726",
    "id": 527186586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE4NjU4Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T15:33:19Z",
    "updated_at": "2019-09-02T15:33:19Z",
    "author_association": "MEMBER",
    "body": "Detecting common code in the branches might be achieved by something similar to the currently abandoned block outliner https://github.com/ethereum/solidity/pull/6720",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527186586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/759587993",
    "html_url": "https://github.com/ethereum/solidity/issues/6726#issuecomment-759587993",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6726",
    "id": 759587993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTU4Nzk5Mw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-13T17:05:30Z",
    "updated_at": "2021-02-03T12:46:26Z",
    "author_association": "MEMBER",
    "body": "The actual case of the current external function dispatch, unfortunately, no longer matches this...\r\nI.e. for a simple contract with two payable functions, I get:\r\n```\r\n            // ...\r\n            if iszero(lt(calldatasize(), 4))\r\n            {\r\n                let selector := shift_right_224_unsigned(calldataload(0))\r\n                switch selector\r\n                case 0x26121ff0\r\n                {\r\n                    // f()\r\n                    if callvalue() { revert(0, 0) }\r\n                    // ...\r\n                    return(...)\r\n                }\r\n                case 0xe2179b8e\r\n                {\r\n                    // g()\r\n                    if callvalue() { revert(0, 0) }\r\n                    // ...\r\n                    return(...)\r\n                }\r\n\r\n                default {}\r\n            }\r\n            if iszero(calldatasize()) {  }\r\n            revert(0, 0)\r\n```\r\nAfter regular optimization, I end up with something like:\r\n```\r\n                if iszero(lt(calldatasize(), 4))\r\n                {\r\n                    let _1 := 0\r\n                    switch shr(224, calldataload(_1))\r\n                    case 0x26121ff0 {\r\n                        if callvalue() { revert(_1, _1) }\r\n                        // ...\r\n                        return(....)\r\n                    }\r\n                    case 0xe2179b8e {\r\n                        if callvalue() { revert(_1, _1) }\r\n                        // ...\r\n                        return(....)\r\n                    }\r\n                }\r\n                revert(0, 0)\r\n```\r\n\r\nIn order to move out the callvalue check, I need to be aware that the default case of the switch ultimately reverts... but in actuality this is not even a local property to the switch or even the block the switch is contained in!\r\nAnd that doesn't even touch the problem that I'd need to make sure that ``revert(_1, _1)`` and ``revert(0, 0)`` is the same kind of revert (i.e. emits the same message)...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/759587993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
