{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4854/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4854/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4854/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4854",
  "id": 353374429,
  "node_id": "MDU6SXNzdWUzNTMzNzQ0Mjk=",
  "number": 4854,
  "title": "[ASSEMBLY] Read struct from storage. Combine it with memory.",
  "user": {
    "login": "kyriediculous",
    "id": 22256858,
    "node_id": "MDQ6VXNlcjIyMjU2ODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kyriediculous",
    "html_url": "https://github.com/kyriediculous",
    "followers_url": "https://api.github.com/users/kyriediculous/followers",
    "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
    "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
    "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
    "repos_url": "https://api.github.com/users/kyriediculous/repos",
    "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 455256446,
      "node_id": "MDU6TGFiZWw0NTUyNTY0NDY=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/waiting%20for%20more%20input",
      "name": "waiting for more input",
      "color": "fef2c0",
      "default": false,
      "description": "Issues waiting for more input by the reporter"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2018-08-23T13:12:34Z",
  "updated_at": "2018-11-17T00:40:13Z",
  "closed_at": "2018-11-16T13:24:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi,\r\n\r\nI've tried asking on stackexchange, gitter and openzeppelin slack but to no avail yet. \r\n\r\nI'm using a low level delegatecall to forward my calls to a library but I'm not familiar enough with inline assemblyl to make it work. \r\n\r\nThe full code can be found in this fiddle: https://ethfiddle.com/sd1ATrDtjy\r\nAdditionally the migrations can be found here: https://gist.github.com/kyriediculous/d2286a8a580d28a3903395490b15bcaa\r\n\r\nI need to (in this order) :\r\n\r\n- load bytes4 sig into _message from memory\r\n\r\n- load bounty (STRUCT) into _message from storage \r\n\r\n- load bytes _data into _message\r\n\r\n- Delegatecall with the new message\r\n\r\n- Get return values \r\n\r\n\r\nThe contract & library works as proven by the getBounty() function I added. The forwarder is what I'm having trouble with.\r\n- How do I load in the bounty struct from storage? \r\n- How do I properly split my calldata at the first 4 bytes , copy it to memory and put the bounty struct in between? \r\n\r\nIt seems like the struct is unpacked when I call getStorageAt, do I have to repack it? \r\n\r\n```\r\n0x00\r\n0x687474703a2f2f6170692e6269746275636b65742e636f6d2f33303433303430\r\n0xe1bb4acb579f780cbaf21cef9ac3641b8e3fcd69\r\n0x5b7eb10c\r\n0x3334303330340000000000000000000000000000000000000000000000000000\r\n0x012a05f200\r\n0x00\r\n0x00\r\n0x059ce9161d4fb0\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n0x00\r\n```\r\n\r\nPlease feel free to refer to stackexchange as well: https://ethereum.stackexchange.com/questions/57197/get-return-data-from-delegatecall\r\n\r\nMany thanks.",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4854/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4854/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415750069",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-415750069",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 415750069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc1MDA2OQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T12:54:21Z",
    "updated_at": "2018-08-24T12:54:21Z",
    "author_association": "MEMBER",
    "body": "I haven't fully checked yet, but I'd suggest that you use `pragma experimental ABIEncoderV2`. Then you can use `abi.encode(bounty)` which is probably easier than doing the whole thing in assembly. You could also use `abi.encodeWithSignature(...)` in case it fits your case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415750069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415752367",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-415752367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 415752367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc1MjM2Nw==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T13:03:47Z",
    "updated_at": "2018-08-24T13:03:47Z",
    "author_association": "NONE",
    "body": "Ah yes, great remark. I haven't though about that. \r\n\r\nAltough I still think writing it in assembly would be  more gas efficient and robusty, which is the whole goal of this endeavour (deployment costs are cut in half, I just need to get the forwarder to work).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415752367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415826376",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-415826376",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 415826376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTgyNjM3Ng==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T17:25:43Z",
    "updated_at": "2018-08-24T17:25:43Z",
    "author_association": "NONE",
    "body": "abi.encode doesn't work. \"Item can not be encoded\" probably because when referencing it that way it already is encoded. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/415826376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/416486256",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-416486256",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 416486256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ4NjI1Ng==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T07:52:01Z",
    "updated_at": "2018-08-28T07:52:01Z",
    "author_association": "NONE",
    "body": "@chriseth , do you have an idea? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/416486256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418140425",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-418140425",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 418140425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODE0MDQyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-03T15:05:12Z",
    "updated_at": "2018-09-03T15:05:12Z",
    "author_association": "MEMBER",
    "body": "Focusing on costs instead of security / clarity turned out to be fatal in several cases.\r\n\r\nI'm sorry, but I cannot access ethfiddle because they use some google tracking which my browser cannot handle. Could you post your code to github gist or something like that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418140425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418668849",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-418668849",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 418668849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODY2ODg0OQ==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T09:43:21Z",
    "updated_at": "2018-09-05T09:43:21Z",
    "author_association": "NONE",
    "body": "Oh I put it in ethfiddle because other folks I asked at OpenZep couldn't access the gist :D \r\n\r\nI've tried multiple things here and there but this gist should give you an idea of what it is I want to accomplish:  https://gist.github.com/kyriediculous/be33b19823324746942aa72930bb8b38 \r\n\r\nThere's two functions on the proxy contract : getBounty() and forward() \r\ngetBounty() is the traditional way of delegating to libraries, forward() is the way I want to do it.\r\n\r\nIn order to do that I need to make calldata out of \r\n1. signature \r\n2. bounty storage struct \r\n3. function parameters\r\n\r\nYou're right about security, doing this in assembly could need some revisions and community audits but I really think the repeated deployment cost decrease is worth it. \r\n\r\nI've found a similar issue on stackexchange as well : https://ethereum.stackexchange.com/questions/13568/how-do-i-use-delegatecall-assembly-with-a-storage-pointer-to-a-struct#comment69160_13568\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418668849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/419162747",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-419162747",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 419162747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE2Mjc0Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T16:44:04Z",
    "updated_at": "2018-09-06T16:44:04Z",
    "author_association": "MEMBER",
    "body": "Ok, this will not be a full answer, but at least allow you to make some progress:\r\n\r\nChange\r\n``` \r\nmstore(add(_message, 4), sload(bounty_slot))\r\n```\r\nto\r\n```\r\nmstore(add(_message, 4), bounty_slot)\r\n```\r\n(you only send over the slot reference to the variable)\r\n\r\nIn contrast,\r\n```\r\nmstore(add(_message, 36), data)\r\n```\r\nonly copies the memory reference, but not the actual data. You need a loop that performs iterated mstores.\r\n\r\nBecause you are dealing the storage references, I think you still have to use assembly to at least retrieve the storage offset, but then you should be able to use `abi.encode`\r\n```\r\nuint sl;\r\nassembly { sl := bounty_slot }\r\nmyLibrary.delegatecall(abi.encodeWithSelector(bytes4(_sig), sl, data))\r\n```\r\n\r\nIf you provide data like that, your library function has to be `f(Bounty storage, bytes)`.\r\n\r\nIf you want data to be encoded data, I think you are out of luck, because you have to adjust all the dynamic data offsets inside there (add 0x20) because of the first storage reference.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/419162747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/437465473",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-437465473",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 437465473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzQ2NTQ3Mw==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T19:16:31Z",
    "updated_at": "2018-11-09T19:16:31Z",
    "author_association": "NONE",
    "body": "Hi Chris,\r\n\r\nThank you sincerely for your reply.\r\nI haven't revisited this problem since september as I was busy building the application layer for my project. \r\n\r\nNow that it's finished I will explore this further. \r\n\r\nWill update the issue if I find a solution. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/437465473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439391844",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-439391844",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 439391844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM5MTg0NA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T13:24:59Z",
    "updated_at": "2018-11-16T13:24:59Z",
    "author_association": "MEMBER",
    "body": "@kyriediculous I'm closing the issue after @chriseth 's and your answer. Please feel free to reopen and update this issue if you have news.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439391844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439570288",
    "html_url": "https://github.com/ethereum/solidity/issues/4854#issuecomment-439570288",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4854",
    "id": 439570288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTU3MDI4OA==",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-17T00:40:12Z",
    "updated_at": "2018-11-17T00:40:12Z",
    "author_association": "NONE",
    "body": "The guys of origin were so kind to share this post by vitalik https://www.reddit.com/r/ethereum/comments/6c1jui/delegatecall_forwarders_how_to_save_5098_on/ \r\n\r\nWhich essentially gets rid of the library.\r\nThe instances are now just forwarders delegating calls to a master contract with all definitions.\r\n\r\nTheir example: https://github.com/tyleryasaka/identity-proposals/pull/1\r\n\r\nI must have missed something in the delegatecall docs. I assumed it took the context of the calling contract and never the called contract. But it seems here the calling contract takes on the storage definitions of the called contract and has its own storage. \r\n\r\nI guess this means problem solved and loads of time wasted :D \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439570288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
