{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11410",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11410/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11410/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11410/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11410",
  "id": 894929943,
  "node_id": "MDU6SXNzdWU4OTQ5Mjk5NDM=",
  "number": 11410,
  "title": "Disallow absolute import paths (path spec v3)",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-05-19T02:31:33Z",
  "updated_at": "2023-03-26T12:04:22Z",
  "closed_at": "2023-03-26T12:04:22Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Closes #9346.\r\nDepends on #11409.\r\nPart of a set of issues that replaces #11138.\r\n\r\n## Abstract\r\nDisallow absolute paths in the virtual filesystem to make it harder to create non-portable metadata containg system-dependent paths.\r\n\r\n## Motivation\r\nAbsolute paths are in most cases different on every machine (especially when they include the path to user's home directory) and using them results in non-reproducible bytecode (because they end up in metadata and metadata hash is included in the bytecode). This leads to verification tools giving up and just stripping metadata completely. Even if such paths are not directly used in imports, frameworks often use them in Standard JSON input or remappings. While it's entirely possible to structure a project in such a way that it uses only relative paths, it's not always convenient or even clear how to do it when using external libraries.\r\n\r\n#11409 adds a mechanism that allows conveniently importing files from libraries stored in arbitrary locations using relative paths.\r\nOnce it's implemented we could deprecate and later completely disallow absolute paths in the VFS without taking away any useful functionality.\r\n\r\n## Specification\r\n1. In the VFS disallow any source unit names that start with `/`. This means that they would be also disallowed in import statements and on the `urls` list in `source` dict in Standard JSON.\r\n2. Disallow using empty path for `--base-path`.\r\n    - An empty path is currently the default value. Make the path to the current working directory the default.\r\n3. On the command line only allow specifying paths to files that are located inside `--base-path` or `--include-paths`.\r\n    - The paths on the command line can of course still be both relative and absolute because due to #11408 and #11409 they will always be normalized and made relative before they end up in the VFS.\r\n    - Also adjust [solcjs](https://github.com/ethereum/solc-js/blob/master/solcjs) to behave in the same way.\r\n4. (Optional) In Standard JSON provide a new key called `path` inside `sources`, in addition to the currently available `content` and `urls`.\r\n    - This would be a way to preserve the ability to load files from absolute paths, which some users find useful (#9346). These are not included in metadata so allowing absolute paths here would not be harmful.\r\n    - The value is not passed to the file loader callback. Instead the file is loaded directly from the specified path.\r\n    - Path can be absolute or relative to the current working directory. It's not affected by `--base-path`.\r\n    - Path must be within `--allowed-paths`.\r\n    - The feature is only available when using the native compiler which has access to the underlying filesystem.\r\n    - It cannot be used together with with `content` or `urls`.\r\n\r\n**NOTE**: `--allowed-directories` becomes almost redundant after these changes. There are now only two cases where it's needed:\r\n- When a file is a symlink that leads to a file outside of base path or include directories. The directory containing the symlink target must be in `--allowed-directories` for this to be allowed.\r\n- The optional `sources.path` key mentioned above.\r\n\r\n## Backwards Compatibility\r\nThe change is not backwards-compatible. It will require adjusting code or compiler options in several use cases:\r\n- Contracts importing directly from absolute paths.\r\n- Absolute paths used for source unit names in Standard JSON.\r\n- Import remappings with absolute path as a target.\r\n- Absolute paths in `sources.urls` in Standard JSON (they will now work as if they were relative).\r\n\r\nAll of these can easily be solved by using `--base-path` and `--include-paths`.\r\n\r\n### Path resolution in frameworks\r\nThis change will require changes in popular frameworks. Of the four I investigated, two (Truffle and Brownie) are using absolute paths in some cases and will require adjustments. The other two (Hardhat and dapp.tools) should be unaffected.\r\n\r\n#### Truffle\r\nTruffle has a [resolver](https://github.com/trufflesuite/truffle/tree/develop/packages/resolver) package which is responsible for finding a library on disk based on the path used in the import and the path of the importing source unit. The whole system is pretty [modular](https://github.com/trufflesuite/truffle/tree/develop/packages/resolver/lib/sources) and can find files in npm's `node_modules/` (global and local), EthPM registry or even files auto-generated from ABI JSON using `abi-to-sol`. Located source is inserted into Standard JSON input as `content` and it does not rely on the file loader callback. In case of npm packages the source unit name used is a relative path.\r\n\r\nIt allows importing from arbitrary locations in the filesystem too, in which case the path ends up being absolute.\r\n\r\nOne thing that will no longer be possible in Truffle will be imports like `import \"../node_modules/@openzeppelin/contracts/utils.sol\"` in a file located in `contracts/` that exists at the same level as `node_modules/`. I've seen some people using them as workarounds for other problems with imports (https://github.com/trufflesuite/truffle/issues/593#issuecomment-635143731). It works if the source unit name of the importing file in the virtual filesystem is an absolute path because then going one level above `node_modules/` in the directory tree is allowed. It the source unit name was just the name of the file, the import would break.\r\n\r\nThe use of absolute paths has been already recognized as a problem in https://github.com/trufflesuite/truffle/issues/1621.\r\n\r\n#### Hardhat\r\nHardhat, just like Truffle, uses Standard JSON and does not rely on a file loader callback but its path resolution is much simpler. Its [`localPathToSourceName()`](https://github.com/nomiclabs/hardhat/blob/hardhat-core-v2.3.0/packages/hardhat-core/src/utils/source-names.ts#L112-L138) only has special cases for relative imports (starting with `../`) and for `node_modules/`.\r\n\r\nIt does not allow using absolute paths in imports at all (reports error `HH407`).\r\n\r\n#### Brownie\r\nBrownie uses Standard JSON but only includes project files as `content` in it. For loading libraries it relies on the default file loader. It has [its own package manager](https://eth-brownie.readthedocs.io/en/stable/package-manager.html), which by default installs libraries in `~/.brownie/packages/`. For example Open Zeppelin 3.0.0 is installed in `~/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.0.0`. By default it adds remappings of the form `OpenZeppelin=/home/user/.brownie/packages/OpenZeppelin` so that files can be imported with `import \"OpenZeppelin/openzeppelin-contracts@3.0.0/contracts/math/SafeMath.sol\"`. It also encourages users to use additional remappings to make imports of the form `import \"@openzeppelin/contracts/math/SafeMath.sol\"` work as well.\r\n\r\n#### dapp.tools\r\ndapp.tools, like Brownie, uses Standard JSON and relies on the default file loader and import remappings. Unlike Brownie, it requires a rigid project structure where all project and library files are stored (or symlinked) inside the same root directory (project files under `src/`, libraries under `lib/`) so absolute paths are not necessary and not used.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11410/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11410/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/849738281",
    "html_url": "https://github.com/ethereum/solidity/issues/11410#issuecomment-849738281",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11410",
    "id": 849738281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTczODI4MQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-27T15:41:09Z",
    "updated_at": "2021-05-27T15:41:09Z",
    "author_association": "MEMBER",
    "body": "We talked about this on today's call but did not make a decision yet. It's at least clear that we do not want this to be a sudden change that catches anyone by surprise. If we want to get it through, we need to reach out to frameworks first and help them get rid of absolute paths from metadata. Only then it would be feasible to phase out paths starting with `/`.\r\n\r\nReporting warnings instead of errors when absolute paths are used is also not necessarily something we want to do.\r\n\r\nOur primary motivation here is actually reducing confusion among users about what absolute paths used in imports mean.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/849738281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1474830270",
    "html_url": "https://github.com/ethereum/solidity/issues/11410#issuecomment-1474830270",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11410",
    "id": 1474830270,
    "node_id": "IC_kwDOAm_5kc5X6B--",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-18T12:04:40Z",
    "updated_at": "2023-03-18T12:04:40Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1474830270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1484076223",
    "html_url": "https://github.com/ethereum/solidity/issues/11410#issuecomment-1484076223",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11410",
    "id": 1484076223,
    "node_id": "IC_kwDOAm_5kc5YdTS_",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-26T12:04:20Z",
    "updated_at": "2023-03-26T12:04:20Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1484076223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
