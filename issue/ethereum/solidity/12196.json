{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12196/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12196/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12196/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12196",
  "id": 1036549577,
  "node_id": "I_kwDOAm_5kc49yH3J",
  "number": 12196,
  "title": "\"unchecked\" code is not truly unchecked",
  "user": {
    "login": "drortirosh",
    "id": 40341007,
    "node_id": "MDQ6VXNlcjQwMzQxMDA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drortirosh",
    "html_url": "https://github.com/drortirosh",
    "followers_url": "https://api.github.com/users/drortirosh/followers",
    "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
    "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
    "organizations_url": "https://api.github.com/users/drortirosh/orgs",
    "repos_url": "https://api.github.com/users/drortirosh/repos",
    "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drortirosh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2021-10-26T17:11:27Z",
  "updated_at": "2021-11-12T02:43:42Z",
  "closed_at": "2021-10-27T13:16:29Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The `unchecked {}` construct is very beneficial, to prevent unnecessary  checks, where the developer knows these checks are already made elsewhere.\r\nhowever, there are checks that still get into the code even if \"unchecked\" is specified.\r\n\r\ne.g there is a call to EXTCODESIZE before each \"call\", to make sure the target is indeed a contract and not an EOA.\r\nThis is not always required, in case the code is expected to return specific return values, or in case multiple calls to the same contract are made.\r\n\r\n### Suggestion\r\n\r\nThe `unchecked` semantics should be applied to all the checks injected by the compiler.\r\nthe only exception might be reverts from external calls (which can be handled with try/catch constructs)",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12196/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12196/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952148497",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-952148497",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 952148497,
    "node_id": "IC_kwDOAm_5kc44wKIR",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T17:19:12Z",
    "updated_at": "2021-10-26T17:19:12Z",
    "author_association": "MEMBER",
    "body": "I think this is a duplicate of #11125.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952148497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952695511",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-952695511",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 952695511,
    "node_id": "IC_kwDOAm_5kc44yPrX",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T09:00:21Z",
    "updated_at": "2021-10-27T09:03:30Z",
    "author_association": "MEMBER",
    "body": "> or in case multiple calls to the same contract are made.\r\n\r\nUnless the contract was selfdestructed between. Maybe we can add an optimization rule where `extcodesize` would be an invariant as long as there are no state modifying operations in between (excluding `staticcall`, `sstore`?)\r\n\r\nNote that since EIP-2929, the additional `extcodesize` check costs 100 (previously 800). \r\n\r\nI was somewhat against this idea in the past, but now that users are really writing code to avoid the `extcodesize` check, I'm having second thoughts. It might be true that the `returndata` checks may be enough for some cases; but need to think this through. The usual approach to get around this currently is `<address>.call(abi.encodeWithSelector(..., ...))`. Perhaps a reasonable middle ground would be a type safe encoding, such as https://github.com/ethereum/solidity/issues/11849?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952695511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952703601",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-952703601",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 952703601,
    "node_id": "IC_kwDOAm_5kc44yRpx",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T09:08:34Z",
    "updated_at": "2021-10-27T09:08:34Z",
    "author_association": "MEMBER",
    "body": "Currently, `unchecked` is used exclusively for arithmetic overflows--a replacement for the SafeMath libraries. For example, conversions are still unchecked currently. If we decide to go this route, `unchecked` might not be the right keyword for this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952703601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952918488",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-952918488",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 952918488,
    "node_id": "IC_kwDOAm_5kc44zGHY",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T13:16:29Z",
    "updated_at": "2021-10-27T13:16:29Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this as a duplicate. @hrkrshnn can you repost your comments in the other issue?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952918488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952973336",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-952973336",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 952973336,
    "node_id": "IC_kwDOAm_5kc44zTgY",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T14:13:15Z",
    "updated_at": "2021-10-27T14:13:15Z",
    "author_association": "MEMBER",
    "body": "A reasonable compromise is https://github.com/ethereum/solidity/issues/12204. Done automatically by the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952973336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953179649",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-953179649",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 953179649,
    "node_id": "IC_kwDOAm_5kc440F4B",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T18:02:33Z",
    "updated_at": "2021-10-27T18:02:33Z",
    "author_association": "NONE",
    "body": "This solves some cases.\r\nStill, a developer control is still needed.\r\nAs an example, we have another case where one contract makes multiple calls to another contract.\r\nThere is no need to repeat this check for extcodesize",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953179649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953736332",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-953736332",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 953736332,
    "node_id": "IC_kwDOAm_5kc442NyM",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T10:59:21Z",
    "updated_at": "2021-10-28T11:02:16Z",
    "author_association": "MEMBER",
    "body": "@drortirosh Would you consider https://github.com/ethereum/solidity/issues/11849 to be a way for the developer to control this? If you have a function `f` without returndata, then `<address>.call(abi.encodeCall(f, (args))` would be both typesafe, avoids the `extcodesize` check and hopefully not too clumsy. Currently, `<address>.call(abi.encodeWithSelector(...))` would also be a way to avoid the `extcodesize` check, although not as type safe.\r\n\r\nIMO, having a syntax to avoid this `extcodesize` check adds more nuances / magic to the language. We generally want to avoid this. Also, doing this inside `unchecked` will make this feature a breaking change. I have a feeling that there will be a big push back against this from library authors.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953736332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953902467",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-953902467",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 953902467,
    "node_id": "IC_kwDOAm_5kc4422WD",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T14:28:07Z",
    "updated_at": "2021-10-28T14:28:07Z",
    "author_association": "NONE",
    "body": "IMHO, requiring me to add a return value to a function signature just to make it cheaper doesn't seem right.  Just consider a case where a user want to use an existing ABI (e.g. token transfer)\r\n\r\nI think that the current `unchecked` gives an impression that \"no checks are done\" - which is not exact\r\nI think should have parameter one (or more) of:\r\n- math\r\n- call-target\r\n- array index \r\n- all\r\n\r\nFor backward compatibility, the default should be `unchecked \"math\"`\r\nBTW: I think this is default counter-intuitive, and the default assumption for a developer would be \"all\" - but that what is currently defined.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953902467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953934053",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-953934053",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 953934053,
    "node_id": "IC_kwDOAm_5kc442-Dl",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T15:03:08Z",
    "updated_at": "2021-10-28T15:03:08Z",
    "author_association": "MEMBER",
    "body": "@drortirosh Perhaps, it's better to add your concerns about `unchecked` in the other issue, i.e., https://github.com/ethereum/solidity/issues/11125\r\n\r\n> IMHO, requiring me to add a return value to a function signature just to make it cheaper doesn't seem right.\r\n\r\nMaybe I didn't communicate this clearly, the idea is that if we want to avoid the `extcodesize`, we use a low-level `call`. Either `address.call(...)` or inside inline assembly; it fits well with the philosophy that fine-grained control should be done using low-level syntax. A high-level call should have additional checks, to deal with generic cases.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953934053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954155169",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-954155169",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 954155169,
    "node_id": "IC_kwDOAm_5kc4430Ch",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T19:56:40Z",
    "updated_at": "2021-10-28T19:59:40Z",
    "author_association": "NONE",
    "body": "`address.call(...)` has its own set problems...\r\nIt is more expensive to do `address.call(abi.encodeWithSelector(...)` than it is to make a direct call. somehow, the encoding method is far less efficient than encoding for making an actual call\r\n(the more parameters you add the more inefficient the code becomes.)\r\n\r\nWe make calls that get structure as parameters. it is possible to encode with abi.encodeWithSelector, but as I said, its inefficient.\r\nencoding it with assembly is possible, but it is VERY error-prone. Also, referencing struct fields in assembly is highly tricky, since even the offsets of members within the struct are inaccessible in assembly. You have to use numeric constants, and manually handle dynamic parameter offsets, which is a pain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/954155169/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/966775261",
    "html_url": "https://github.com/ethereum/solidity/issues/12196#issuecomment-966775261",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12196",
    "id": 966775261,
    "node_id": "IC_kwDOAm_5kc45n9Hd",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-12T02:43:42Z",
    "updated_at": "2021-11-12T02:43:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes please we still dearly need a way to prevent extcodesize checks on no-returndata calls without using low level calls. as @drortirosh said its often more expensive to encode for low level calls— not to mention its gross and unsafe",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/966775261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
