{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7070",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7070/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7070/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7070/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7070",
  "id": 465737603,
  "node_id": "MDU6SXNzdWU0NjU3Mzc2MDM=",
  "number": 7070,
  "title": "[Yul] add types to dialects, but keep a default type",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/47",
    "html_url": "https://github.com/ethereum/solidity/milestone/47",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/47/labels",
    "id": 5046900,
    "node_id": "MDk6TWlsZXN0b25lNTA0NjkwMA==",
    "number": 47,
    "title": "Sprint 2",
    "description": "Capacity multiplier: 27\r\nStory points: 17.5\r\nVelocity: 0.65",
    "creator": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2020-01-27T19:46:47Z",
    "updated_at": "2020-03-11T11:39:20Z",
    "due_on": "2020-02-26T08:00:00Z",
    "closed_at": "2020-02-26T11:36:50Z"
  },
  "comments": 3,
  "created_at": "2019-07-09T11:54:02Z",
  "updated_at": "2020-02-24T19:05:05Z",
  "closed_at": "2020-02-24T19:05:05Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Since eWasm has different types, we have to enable the type system in Yul before eWasm can be completed. To make the code better readable, each Yul dialect will have a default type which does not have to be explicitly mentioned. For eWasm this is u64, for EVM it is u256.\r\n\r\nThe Yul parser, analyzer and printer should all honour types and the analyzer should also check them (#2324).\r\n\r\nIt is to be discussed whether `bool` should be introduced as a type in the EVM dialect.\r\n\r\nIt should also be discussed how dialects deal with types for literals.\r\n\r\n\r\n- [x] check that default types work both in parser and printer\r\n- [x] perform type checking in analysis phase ( https://github.com/ethereum/solidity/issues/2324 )\r\n- [ ] introduce types in optimizer phases (splitter, etc)\r\n  - [ ] ControlFlowSimplifier::reduceSingleCaseSwitch: introduce typed dialect::equalityFunction and ::discardFunction and use. Same for all uses for makeDiscardCall in that file.\r\n  - [x] ExpressionSplitter::outlineExpression needs to determine the type of the expression\r\n  - [ ] ForLoopOutOfBody needs to select the proper negation function depending on the type.\r\n  - [ ] test that FullInliner properly assigns types for new variables (for parameters and return parameters).\r\n  - [ ] ssa transform needs to determine types for assignments.\r\n  - [ ] VarDeclInitializer has to use `false` for bool variables.\r\n",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7070/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7070/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/549555399",
    "html_url": "https://github.com/ethereum/solidity/issues/7070#issuecomment-549555399",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7070",
    "id": 549555399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTU1NTM5OQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T21:28:58Z",
    "updated_at": "2019-11-04T21:28:58Z",
    "author_association": "MEMBER",
    "body": ">  For eWasm this is u64, for EVM it is u265.\r\n\r\n@chriseth I think you meant `u256`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/549555399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/567560773",
    "html_url": "https://github.com/ethereum/solidity/issues/7070#issuecomment-567560773",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7070",
    "id": 567560773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzU2MDc3Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-19T16:25:49Z",
    "updated_at": "2019-12-19T16:25:49Z",
    "author_association": "MEMBER",
    "body": "I think a good step here is to modify the AST right after parsing (or during?) by replacing all empty types by the default type. Likewise, during printing, all default types are replaced by the empty type.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/567560773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/587538120",
    "html_url": "https://github.com/ethereum/solidity/issues/7070#issuecomment-587538120",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7070",
    "id": 587538120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzUzODEyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T16:07:17Z",
    "updated_at": "2020-02-18T16:07:17Z",
    "author_association": "MEMBER",
    "body": "@mijovic something similar to the VarDeclInitializer should be done to `InlineModifier::performInline`, line 201. Maybe it could make sense to make \"zeroLiteralForType\" a virtual function of Dialect.\r\n\r\nPlease create a new test similar to `test/libyul/yulOptimizerTests/fullInliner/multi_return.yul`, but with evmTyped as dialect and change one of the return variables of the function to `bool`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/587538120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
