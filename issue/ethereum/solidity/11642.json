{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11642/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11642/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11642/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11642",
  "id": 941276668,
  "node_id": "MDU6SXNzdWU5NDEyNzY2Njg=",
  "number": 11642,
  "title": "[solc] Unassigned immutables cryptic error",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2021-07-10T15:55:01Z",
  "updated_at": "2022-09-27T10:54:01Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\ncontract C1 {\r\n  bool immutable s1 = false;\r\n  constructor() { (int8(127) * 3); }\r\n  function f() external returns (bool) {\r\n    if (s1)\r\n        return true;\r\n    else\r\n        return false;\r\n  }\r\n}\r\n```\r\n\r\n```\r\n$ solc --experimental-via-ir --optimize test.sol\r\n...\r\nWarning: Source file does not specify required compiler version!\r\n--> test/libsolidity/semanticTests/testYulCompilerOptimisation.sol\r\n\r\nWarning: Statement has no effect.\r\n --> test/libsolidity/semanticTests/testYulCompilerOptimisation.sol:3:19:\r\n  |\r\n3 |   constructor() { (int8(127) * 3); }\r\n  |                   ^^^^^^^^^^^^^^^\r\n\r\nWarning: Function state mutability can be restricted to view\r\n --> test/libsolidity/semanticTests/testYulCompilerOptimisation.sol:4:3:\r\n  |\r\n4 |   function f() external returns (bool) {\r\n  |   ^ (Relevant source part starts here and spans across multiple lines).\r\n\r\nError: Some immutables were read from but never assigned, possibly because of optimization.\r\n```\r\n\r\nLegacy optimizer does not report and error. Legacy and Sol->Yul without optimization don't report either. Both legacy (with and without opt) and Sol->Yul (without opt) result in a runtime failure due to `int8` overflow inside the constructor.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11642/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11642/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878045303",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-878045303",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 878045303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODA0NTMwMw==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T07:34:55Z",
    "updated_at": "2021-07-12T10:21:12Z",
    "author_association": "MEMBER",
    "body": "The constructor always reverts (checked arithmetic), and therefore the `DeadCodeEliminator` removes the code following the `revert`, which includes `setimmutable`.\r\n\r\nNot sure what should be done in this case. Perhaps improve the error to say that it's likely that the constructor will always revert?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878045303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878194822",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-878194822",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 878194822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODE5NDgyMg==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T11:17:46Z",
    "updated_at": "2021-07-12T11:17:46Z",
    "author_association": "MEMBER",
    "body": "> The constructor always reverts (checked arithmetic), and therefore the `DeadCodeEliminator` removes the code following the `revert`, which includes `setimmutable`.\r\n\r\nYeah, came to that conclusion.\r\n\r\n> Not sure what should be done in this case. Perhaps improve the error to say that it's likely that the constructor will always revert?\r\n\r\nPerhaps the error could say \"constructor will always revert\". At least that is easier to follow than the somewhat cryptic immutables are unassigned? Just curious if it's always cos of constructor revert though, because if it is not there may be cases where even the new error may not make sense :-)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878194822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878391370",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-878391370",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 878391370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODM5MTM3MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T15:49:57Z",
    "updated_at": "2021-07-12T15:49:57Z",
    "author_association": "MEMBER",
    "body": "The same error will be generated for\r\n```\r\ncontract C {\r\nuint immutable x;\r\nconstructor() {\r\nif (false)  { x = 2; }\r\n}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878391370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/880192867",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-880192867",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 880192867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDE5Mjg2Nw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-14T20:38:41Z",
    "updated_at": "2021-07-14T20:38:41Z",
    "author_association": "MEMBER",
    "body": "Wondering if this could be a warning instead of an error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/880192867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/880537987",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-880537987",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 880537987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDUzNzk4Nw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T09:19:48Z",
    "updated_at": "2021-07-15T09:19:48Z",
    "author_association": "MEMBER",
    "body": "Small update: This is not solely a Sol->Yul issue, also happens with the legacy compiler (even without optimization turned on)\r\n\r\n```\r\ncontract C {\r\n  int8 immutable s4 = 15;\r\n  constructor () {\r\n      for(;;) {}\r\n  }\r\n  function f2() external returns (int8) {\r\n    return s4 / 2;\r\n  }\r\n}\r\n```\r\n\r\n```\r\n$ solc test.sol\r\n...\r\nError: Some immutables were read from but never assigned, possibly because of optimization.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/880537987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883574994",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-883574994",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 883574994,
    "node_id": "IC_kwDOAm_5kc40qkjS",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T17:41:14Z",
    "updated_at": "2021-07-20T17:41:14Z",
    "author_association": "MEMBER",
    "body": "Hmm, shouldn't it be a requirement that an immutable must always be assigned in the constructor? As opposed to allow the \"default value\" rule?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883574994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886668725",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-886668725",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 886668725,
    "node_id": "IC_kwDOAm_5kc402X21",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T12:42:46Z",
    "updated_at": "2021-07-26T12:42:46Z",
    "author_association": "MEMBER",
    "body": "> Hmm, shouldn't it be a requirement that an immutable must always be assigned in the constructor\r\n\r\nBut how would that be enforced? One can always have a `setimmutable` inside a conditional branch that will never be reached.\r\n\r\nThe default value of zero for uninitialized immutable does seem consistent.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886668725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886692872",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-886692872",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 886692872,
    "node_id": "IC_kwDOAm_5kc402dwI",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T13:14:42Z",
    "updated_at": "2021-07-26T13:14:42Z",
    "author_association": "MEMBER",
    "body": "> Error: Some immutables were read from but never assigned, possibly because of optimization.\r\n\r\nThen why this error? If zero-by-default is allowed, then we do not need this special error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886692872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886718249",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-886718249",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 886718249,
    "node_id": "IC_kwDOAm_5kc402j8p",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T13:47:02Z",
    "updated_at": "2021-07-26T13:47:02Z",
    "author_association": "MEMBER",
    "body": "You cannot assign an immutable in a conditional branch. We do not rely on the default value.\r\n\r\nThis error is about the optimizer removing the `setimmutable` and it is an additional low-level check because the high-level check does not catch all situations.\r\n\r\nWe can improve the error message.\r\n\r\nIt happens if you have an infinite loop or a require that always fails before you assign the immutable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886718249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258804144",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-1258804144",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 1258804144,
    "node_id": "IC_kwDOAm_5kc5LB9Ow",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T00:04:35Z",
    "updated_at": "2022-09-27T00:04:35Z",
    "author_association": "MEMBER",
    "body": "Is this a duplicate of #12864?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258804144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1259153746",
    "html_url": "https://github.com/ethereum/solidity/issues/11642#issuecomment-1259153746",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11642",
    "id": 1259153746,
    "node_id": "IC_kwDOAm_5kc5LDSlS",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T08:19:10Z",
    "updated_at": "2022-09-27T08:19:10Z",
    "author_association": "MEMBER",
    "body": "> Is this a duplicate of #12864?\n\nI don't think so. Here the problem is the Yul optimiser removing unconditional setimmutable because it is safe to but then erroring on immutable reaf because the said setimmutable was removed.\n\nThere the problem is conditional initialization of immutable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1259153746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
