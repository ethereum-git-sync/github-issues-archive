{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4648/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4648/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4648/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4648",
  "id": 346765855,
  "node_id": "MDU6SXNzdWUzNDY3NjU4NTU=",
  "number": 4648,
  "title": "SMT: display large values in a nicer format",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 916255102,
      "node_id": "MDU6TGFiZWw5MTYyNTUxMDI=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bounty%20worthy%20:moneybag:",
      "name": "bounty worthy :moneybag:",
      "color": "f9d0c4",
      "default": false,
      "description": ""
    },
    {
      "id": 1012614240,
      "node_id": "MDU6TGFiZWwxMDEyNjE0MjQw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/challenging%20difficulty",
      "name": "challenging difficulty",
      "color": "c300d8",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 76,
  "created_at": "2018-08-01T20:57:14Z",
  "updated_at": "2019-03-10T09:55:18Z",
  "closed_at": "2018-12-12T09:14:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\nnonlinear.sol:7:12: Warning: Overflow (resulting value larger than 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) happens here\r\n        uint c = a * b;\r\n                 ^---^\r\n  for:\r\n  a = 2\r\n  b = 0x8000000000000000000000000000000000000000000000000000000000000000\r\n  c = 0\r\n  value = 0x010000000000000000000000000000000000000000000000000000000000000000\r\n```\r\n\r\nI think the values should be displayed in a more friendly way. @ekpyron suggested that it should detect powers of 2 and powers of 2 minus one and display them accordingly.\r\n\r\nIt is hard to compare these numbers without sitting down to compare/calculate.",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4648/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4648/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409722658",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-409722658",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 409722658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcyMjY1OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T21:04:58Z",
    "updated_at": "2018-08-01T21:04:58Z",
    "author_association": "MEMBER",
    "body": "We could also consider counting the (pairs of) trailing zeros and replace them by ``* 2^x`` or by ``<< x`` if the count exceeds a given value, let's say ``8``. At least partly - maybe for each ``* 2^(2^n)``, which are the \"usual\" data type boundaries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409722658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410066996",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-410066996",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 410066996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA2Njk5Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T21:02:36Z",
    "updated_at": "2018-08-02T21:02:36Z",
    "author_association": "MEMBER",
    "body": "Please note that the utility function currently in use has to be split for use by the smt component for human-targeted output and the yul optimizer for yul output (which can only have simple hex or decimal numbers, but those should still be \"readable\").",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410066996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/424525233",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-424525233",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 424525233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDUyNTIzMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-25T22:38:43Z",
    "updated_at": "2018-09-25T22:38:43Z",
    "author_association": "MEMBER",
    "body": "My suggestion is that in `libdevcore/CommonData.h` `formatNumber` is extended to either have a flag or have another function (like `formatNumberReadable`) in which case it decomposes the number as suggested by @ekpyron.\r\n\r\nThis function is currently used by both the SMT checker and the Yul optimiser.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/424525233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425232572",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-425232572",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 425232572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIzMjU3Mg==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T20:31:58Z",
    "updated_at": "2018-09-27T20:31:58Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. **Open** 2. Started 3. Submitted 4. Done \n\n<hr>\n\n__This issue now has a funding of 425.0 DAI (425.0 USD @ $1.0/DAI)  attached to it__ as part of the Ethereum Foundation fund__.__\n\n * If you would like to work on this issue you can 'start work' [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/solidity/4648/1286).\n* Want to chip in? Add your own contribution [here](https://gitcoin.co/issue/ethereum/solidity/4648/1286).\n* Questions? Checkout <a href='https://gitcoin.co/help'>Gitcoin Help</a> or the <a href='https://gitcoin.co/slack'>Gitcoin Slack</a>\n* $22,696.04 more funded OSS Work available on the [Gitcoin Issue Explorer](https://gitcoin.co/explorer)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425232572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425289955",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-425289955",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 425289955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI4OTk1NQ==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T01:18:05Z",
    "updated_at": "2019-03-10T09:55:18Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. Open 2. Started 3. Submitted 4. **Done** \n\n<hr>\n\n__Work has been started__.\n\n\nThese users each claimed they can complete the work by 6 months, 3 weeks from now.\nPlease review their action plans below:\n\n\n**1) [irmacias](https://gitcoin.co/profile/irmacias) has applied to start work _(Funders only: [approve worker](https://gitcoin.co/issue/ethereum/solidity/4648/1286?mutate_worker_action=approve&worker=irmacias) | [reject worker](https://gitcoin.co/issue/ethereum/solidity/4648/1286?mutate_worker_action=reject&worker=irmacias))_.**\n\nI can follow the suggestions and implement the solution by converting from hex.\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/solidity/4648/1286).\n\n\n**2) [chriscates](https://gitcoin.co/profile/chriscates) has been approved to start work.**\n\nSubmitted a sample of how it should work.\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/solidity/4648/1286).\n\n\n**3) [kevinkelley](https://gitcoin.co/profile/kevinkelley) has been approved to start work.**\n\nI'd like to work on this.  \n\nI note that 'formatNumber' is called from 3 places: 1 in jul, 1 in codegen; and then in SMTChecker.  \n\nI'd probably go with changing the SMTChecker calls to 'formatNumberReadable'; then implement that as a new function, which which detects trailing zeroes (and trailing FF), and for those cases returns \"0xSomenumber * 2^X\" (or ... * 2^X - 1\".  ...Choice of whether to limit to multiple-succeeding-powers-of-two (2^8, 2^16, 2^32, ...)  is your call; I think that since this is for human comparison of big numbers, just limiting it to multiples of 8 might be  best (so that the exponent is a count of trailing zeroes in the hex representation).\n\nThis could be done for codegen too, as long as the emitted string is always a valid expression in yul or sol...\n\nLearn more [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/solidity/4648/1286).\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425289955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425694520",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-425694520",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 425694520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTY5NDUyMA==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T04:49:30Z",
    "updated_at": "2018-10-01T18:23:15Z",
    "author_association": "NONE",
    "body": "Here is my suggestion as an implementation.\r\n\r\n`formatNumber()`, now has an optional argument `bool readable`:\r\n```c++\r\ninline std::string formatNumber(bigint const& _value, bool readable = false)\r\n{\r\n\tif (_value < 0)\r\n\t\treturn \"-\" + formatNumber(-_value);\r\n\telse if (_value > 0x1000000 && readable == false)\r\n\t\treturn toHex(toCompactBigEndian(_value), 2, HexPrefix::Add);\r\n\telse if (_value > 0x100000 && readable == true)\r\n\t\treturn removeLeadingZeros(toHex(toCompactBigEndian(_value), 2, HexPrefix::Add));\r\n\telse\r\n\t\treturn _value.str();\r\n}\r\n//Also applies to the overloaded method for u256\r\n```\r\n\r\nWhen `readable = true` for `formatNumber()`, it then invokes the `removeLeadingZeros()` function:\r\n```c++\r\n// Convenience function for removing leading zeros for large hex numbers for readability\r\ninline std::string removeLeadingZeros(std::string hex)\r\n{\r\n\tfor (int i = hex.size(); i > 2; i--) \r\n\t{\r\n\t\tif (hex[i] != \"0\") \r\n\t\t{\r\n\t\t\treturn hex.substr(0, i) + \"  +  \" + std::to_string(hex.size() - i) + \" more zeroes\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn hex;\r\n}\r\n```\r\n\r\nIf you have any feedback. Let me know.\r\nIf not, I'll submit a pull request with a proper solution.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425694520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425744493",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-425744493",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 425744493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc0NDQ5Mw==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T19:19:57Z",
    "updated_at": "2018-09-30T19:19:57Z",
    "author_association": "NONE",
    "body": "Also, can the `CommonData.h` (and all other files) use `using namespace std`...\r\nThe `std::` prefix can be used if there are any conflicts in function declarations...\r\n\r\nSaves time in the future, and, looks cleaner, since obviously the standard library is frequently used.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425744493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425879304",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-425879304",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 425879304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTg3OTMwNA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-01T11:49:14Z",
    "updated_at": "2018-10-01T11:49:14Z",
    "author_association": "MEMBER",
    "body": "@ChrisCates I don't think that solution does it.\r\n\r\nI think we should rather go with @ekpyron 's suggestion (https://github.com/ethereum/solidity/issues/4648#issuecomment-409722658), also brought up by @KevinKelley (Solution 3 here: https://github.com/ethereum/solidity/issues/4648#issuecomment-425289955)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/425879304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426079700",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-426079700",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 426079700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA3OTcwMA==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-01T22:04:35Z",
    "updated_at": "2018-10-01T22:10:48Z",
    "author_association": "NONE",
    "body": "@leonardoalt, makes sense... Since, all I'm doing is just truncating trailing zeros.\r\n\r\nI've made some revisions that may be more preferable and work along the lines of what @ekpyron and Kevin proposed...\r\n\r\n\r\n```c++\r\nstd::string formatNumberReadable(std::string hex) \r\n{\r\n    for (int i = hex.size() - 1; i >= 2; i--) \r\n    {   \r\n        if (std::strncmp(&hex[i], \"0\", 1) > 0) {\r\n            if ((hex.size() - 1) % 2 != 0) i++;\r\n            int superscript = ((hex.size() - i) / 2) * 8;\r\n            return hex.substr(0, i + 1) + \" * 2^\" + std::to_string(superscript);\r\n        }\r\n    }\r\n\r\n    return hex;\r\n}\r\n```\r\n\r\nI've also written test cases...\r\nPlease verify that the following are correct...\r\n\r\n```c++\r\nformatNumberReadable(\"0x80000\"); // Results in 0x8 * 2^16\r\nformatNumberReadable(\"0x800000\"); // Results in 0x80 * 2^16\r\nformatNumberReadable(\"0x8000000\"); // Results in 0x8 * 2^24\r\nformatNumberReadable(\"0x80000000\"); // Results in 0x80 * 2^24\r\nformatNumberReadable(\"0x800000000\"); // Results in 0x8 * 2^32\r\n```\r\n\r\nPlease let me know if there are any issues with the solution I provided! 👍 \r\nIf not, I assume we need to be accountable for adding flags for the optional argument `bool readable` when piping it into the command line... As well as allowing compilers to properly parse results.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426079700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426119749",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-426119749",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 426119749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjExOTc0OQ==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T01:49:00Z",
    "updated_at": "2018-10-02T01:49:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ChrisCates ...another testcase for your code... that line `if ((hex.size() - 1) % 2) != 0) i++;` is suspect :)\r\n    BOOST_CHECK_EQUAL(formatNumberReadableChris(\"0x880000\"), \"0x88 * 2^16\");\r\n    // yields 0x880 * 2^16; should be 0x88 * 2^16\r\n\r\nI've got a prelim version working, slightly differently... I take a template parameter for the input value, accepting u256 or bigint; and I'm also handling the ...ffff cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426119749/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426124525",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-426124525",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 426124525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjEyNDUyNQ==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T02:18:56Z",
    "updated_at": "2018-10-02T03:21:31Z",
    "author_association": "NONE",
    "body": "Feel free to share a gist @KevinKelley!\r\n\r\nAlso thanks for catching that!\r\nI should have a reference counter for the number of zeros as opposed to checking the length of the string...\r\n\r\nSince I actually use an inverse for loop. I can't simply just use `int i`.\r\nAlso, thanks for mentioning 0xf.. cases... Something that should also be accounted for.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426124525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426471997",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-426471997",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 426471997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3MTk5Nw==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T00:14:13Z",
    "updated_at": "2018-10-03T00:14:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "My pleasure... [gist](https://gist.github.com/KevinKelley/337657d53c16a260cb9c2e11204d71f9)\r\n\r\n...another possibility: underscore separators, maybe every 4 bytes; or dotted excisions.  Usually when looking at these hashes it's enough to see the first 8, or first 4 and last 4, digits... \r\n\r\nI guess I want to know, do we know exactly what we want?  If so let's see some test cases and implement it; if not maybe let's experiment a little? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426471997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426491379",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-426491379",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 426491379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ5MTM3OQ==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T02:23:01Z",
    "updated_at": "2018-10-03T02:23:01Z",
    "author_association": "NONE",
    "body": "@KevinKelley, hmm, these edge cases you're mentioning are very important... Seems that I underestimated the scope of the issue.\r\n\r\nI'll look into providing some edits later.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/426491379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428016772",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-428016772",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 428016772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAxNjc3Mg==",
    "user": {
      "login": "vs77bb",
      "id": 23297747,
      "node_id": "MDQ6VXNlcjIzMjk3NzQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/23297747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vs77bb",
      "html_url": "https://github.com/vs77bb",
      "followers_url": "https://api.github.com/users/vs77bb/followers",
      "following_url": "https://api.github.com/users/vs77bb/following{/other_user}",
      "gists_url": "https://api.github.com/users/vs77bb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vs77bb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vs77bb/subscriptions",
      "organizations_url": "https://api.github.com/users/vs77bb/orgs",
      "repos_url": "https://api.github.com/users/vs77bb/repos",
      "events_url": "https://api.github.com/users/vs77bb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vs77bb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T00:03:57Z",
    "updated_at": "2018-10-09T00:03:57Z",
    "author_association": "NONE",
    "body": "@ChrisCates @KevinKelley I just approved you both to continue work on this bounty in a 'cooperative' fashion, as you've both already done regardless (love it!). Are either (or both) of you still interested in taking this forward? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428016772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428027052",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-428027052",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 428027052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAyNzA1Mg==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T01:12:35Z",
    "updated_at": "2018-10-09T01:12:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Excellent!  Yes, I'll be glad to keep on.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428027052/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428033963",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-428033963",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 428033963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAzMzk2Mw==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T01:56:54Z",
    "updated_at": "2018-10-09T01:58:41Z",
    "author_association": "NONE",
    "body": "@vs77bb, absolutely, I wasn't sure what was going on with this specifically, hence why I didn't continue, but, thank you for following up.\r\n\r\nLet's see if we can get a PR going this week.\r\n\r\nAlso this is a good time to discuss cases we need to account for, @KevinKelley, please let me know if I'm missing anything:\r\n\r\n- [ ] 0 and f hexadecimal cases covered (the most essential, any other cases I'm missing, please let me know!).\r\n\r\n- [ ] Compatibility with all Solidity Compilers which means properly parsing strings.\r\n\r\n- [ ] (To discuss) How does it display? Be able to see the first 4 or 8 digits?\r\n\r\n- [ ] (To discuss) Do we automatically flag `bool readable = true` if the output is intended for Command Line? Do we even need a flag if the output will be compatible with all compilers regardless, should this be the intended output for large hexadecimal values?\r\n\r\nI think members of the Solidity Repository should discuss (once we finalize the objectives) as there are some things we should think about when implementing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428033963/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428136563",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-428136563",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 428136563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODEzNjU2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T10:09:01Z",
    "updated_at": "2018-10-09T10:09:01Z",
    "author_association": "MEMBER",
    "body": "I think the function should be split into two: One that generates numbers that do not have to be super readable, but are proper yul literals (mostly the same as solidity literals). This is basically the current behaviour. The other one generates numbers that are readable by humans without any further requirements.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/428136563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429219966",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429219966",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429219966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTIxOTk2Ng==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-12T06:35:41Z",
    "updated_at": "2018-10-12T06:39:44Z",
    "author_association": "NONE",
    "body": "Hey there,\r\nI pushed up some stuff (for debugging purposes): https://github.com/ChrisCates/solidity/tree/chriscates/hexreadable\r\n\r\nI seem to running into problems with the `formatNumberReadable()` function.\r\n\r\nIt seems I get these errors:\r\n\r\n```c++\r\n/Users/cc/Projects/solidity/libdevcore/CommonData.h:143:29: error: no viable overloaded '>>='\r\n        for (T v = _val; v; ++i, v >>= 8)\r\n                                 ~ ^   ~\r\n/Users/cc/Projects/solidity/libdevcore/CommonData.h:212:16: note: in instantiation of function template specialization\r\n      'dev::toCompactBigEndian<boost::multiprecision::detail::expression<boost::multiprecision::detail::add_immediates,\r\n      boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0, 0, boost::multiprecision::signed_magnitude, boost::multiprecision::unchecked,\r\n      std::__1::allocator<unsigned long long> >, boost::multiprecision::et_on>, int, void, void> >' requested here\r\n                return toHex(toCompactBigEndian(v + 1), 2, HexPrefix::Add) + \" * 2^\" + std::to_string(i * 8) + \" - 1\";\r\n                             ^\r\n/Users/cc/Projects/solidity/libsolidity/formal/SMTChecker.cpp:682:13: note: in instantiation of function template specialization\r\n      'dev::formatNumberReadable<boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0, 0, boost::multiprecision::signed_magnitude,\r\n      boost::multiprecision::unchecked, std::__1::allocator<unsigned long long> >, boost::multiprecision::et_on> >' requested here\r\n                                value = formatNumberReadable(bigint(value));\r\n                                        ^\r\nIn file included from /Users/cc/Projects/solidity/libsolidity/formal/SMTChecker.cpp:18:\r\nIn file included from /Users/cc/Projects/solidity/libsolidity/formal/SMTChecker.h:22:\r\nIn file included from /Users/cc/Projects/solidity/libsolidity/formal/SSAVariable.h:20:\r\nIn file included from /Users/cc/Projects/solidity/libsolidity/formal/SymbolicVariable.h:22:\r\nIn file included from /Users/cc/Projects/solidity/libsolidity/ast/AST.h:35:\r\nIn file included from /Users/cc/Projects/solidity/libdevcore/FixedHash.h:26:\r\n/Users/cc/Projects/solidity/libdevcore/CommonData.h:105:43: error: no viable overloaded '>>='\r\n        for (auto i = o_out.size(); i != 0; _val >>= 8, i--)\r\n                                            ~~~~ ^   ~\r\n/Users/cc/Projects/solidity/libdevcore/CommonData.h:147:2: note: in instantiation of function template specialization\r\n      'dev::toBigEndian<boost::multiprecision::detail::expression<boost::multiprecision::detail::add_immediates,\r\n      boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0, 0, boost::multiprecision::signed_magnitude, boost::multiprecision::unchecked,\r\n      std::__1::allocator<unsigned long long> >, boost::multiprecision::et_on>, int, void, void>, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >' requested here\r\n        toBigEndian(_val, ret);\r\n        ^\r\n/Users/cc/Projects/solidity/libdevcore/CommonData.h:212:16: note: in instantiation of function template specialization\r\n      'dev::toCompactBigEndian<boost::multiprecision::detail::expression<boost::multiprecision::detail::add_immediates,\r\n      boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0, 0, boost::multiprecision::signed_magnitude, boost::multiprecision::unchecked,\r\n      std::__1::allocator<unsigned long long> >, boost::multiprecision::et_on>, int, void, void> >' requested here\r\n                return toHex(toCompactBigEndian(v + 1), 2, HexPrefix::Add) + \" * 2^\" + std::to_string(i * 8) + \" - 1\";\r\n                             ^\r\n/Users/cc/Projects/solidity/libsolidity/formal/SMTChecker.cpp:682:13: note: in instantiation of function template specialization\r\n      'dev::formatNumberReadable<boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0, 0, boost::multiprecision::signed_magnitude,\r\n      boost::multiprecision::unchecked, std::__1::allocator<unsigned long long> >, boost::multiprecision::et_on> >' requested here\r\n                                value = formatNumberReadable(bigint(value));\r\n```\r\n\r\nI've made some modifications to the algorithm to cast to `bigint` (just so that other numbers don't need to be verbosely casted to the specified the template type). @KevinKelley, I'll be working on this tomorrow... I believe I may not be invoking it correctly to the `SMTChecker` Object.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429219966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429222075",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429222075",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429222075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTIyMjA3NQ==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-12T06:46:00Z",
    "updated_at": "2018-10-12T06:46:00Z",
    "author_association": "NONE",
    "body": "Also, I think I may modify the bool readable to the number of trailing\nzeros you want in the readable format... Where zero specifies the normal\nformat.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429222075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429380012",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429380012",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429380012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTM4MDAxMg==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-12T16:15:49Z",
    "updated_at": "2018-10-12T16:15:49Z",
    "author_association": "NONE",
    "body": "@KevinKelley Hello from Gitcoin Core - are you still working on this issue? Please submit a WIP PR or comment back within the next 3 days or you will be removed from this ticket and it will be returned to an ‘Open’ status. Please let us know if you have questions!\n* [x] warning (3 days)\n* [ ] escalation to mods (6 days)\n\nFunders only: Snooze warnings for [1 day](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=1) | [3 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=3) | [5 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=5) | [10 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=10) | [100 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=100)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429380012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429554216",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429554216",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429554216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU1NDIxNg==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T16:15:31Z",
    "updated_at": "2018-10-13T16:15:31Z",
    "author_association": "NONE",
    "body": "@KevinKelley Hello from Gitcoin Core - are you still working on this issue? Please submit a WIP PR or comment back within the next 3 days or you will be removed from this ticket and it will be returned to an ‘Open’ status. Please let us know if you have questions!\n* [x] warning (3 days)\n* [ ] escalation to mods (6 days)\n\nFunders only: Snooze warnings for [1 day](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=1) | [3 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=3) | [5 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=5) | [10 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=10) | [100 days](https://gitcoin.co/issue/ethereum/solidity/4648/1286?snooze=100)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429554216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429589353",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429589353",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429589353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU4OTM1Mw==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T01:45:41Z",
    "updated_at": "2018-10-14T01:45:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "(PR here)[https://github.com/ethereum/solidity/pull/5214], not intended for use, just to show work\r\n\r\nI've added a little more to it; there are 4 features now.\r\n- ends-in-zeroes shows as `* 2^N`\r\n- ends-in-FFs shows as `* 2^N - 1`\r\n- non-special hashes get truncated for display to 8(?) characters\r\n- mixed-case Hex like `0xABCDabcd...`\r\n\r\nHaven't integrated yet; just added the formatNumberReadable and some tests to exercise it.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429589353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429620643",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429620643",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429620643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTYyMDY0Mw==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T12:01:13Z",
    "updated_at": "2018-10-14T12:01:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth Yes, I agree that current behavior for yul and sol literals needs to be kept; this \"human-readable\" push is just to make error messages and such, be easier to understand.  If we want to produce \"pretty\" code...I guess that would be another thing, but not likely useful I think?  I mean normally you don't generate literal signatures into contracts very often.  \r\n\r\nI'm thinking this \"readable\" issue we're working on here, needs to be kept to the human-viewed output, not the code-generators.  \r\n\r\nOf course... now I'm wondering about tooling that might want to parse errors... editors and IDEs that take error output and grep it.  Even so I think the readable version is best, in that case too...if the tooling is smart enough to pull error description out of the stdout dump, still it's going to be best if the message details are readable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429620643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429621071",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429621071",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429621071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTYyMTA3MQ==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T12:08:07Z",
    "updated_at": "2018-10-14T12:08:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ChrisCates ...guessing that you're past the template error you had, by now.  If not, I'd suggest refactoring to straight non-template function that takes bigint, make sure that works first...\r\n\r\nBack to your checklist, yeah, that's about right.  We can do the first couple cases easily, already working; and the third point about how many digits to display (and my suggestion of like 0xABCDabcd...) is still to be talked about.  Final point is making sure that this \"pretty\" stuff doesn't break the codegen ...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429621071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429685355",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429685355",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429685355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY4NTM1NQ==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T01:55:28Z",
    "updated_at": "2018-10-15T01:55:28Z",
    "author_association": "NONE",
    "body": "@KevinKelley, it was a very bizarre issue...\r\nAll I had to do to fix it was:\r\n\r\n```c++\r\nif (i > 2)\r\n\t{\r\n\t\tv++;\r\n\t\treturn toHex(toCompactBigEndian(v), 2, HexPrefix::Add) + \" * 2^\" + std::to_string(i * 8) + \" - 1\";\r\n\t}\r\n```\r\n\r\ninstead of:\r\n\r\n```c++\r\nif (i > 2)\r\n\t\treturn toHex(toCompactBigEndian(v + 1), 2, HexPrefix::Add) + \" * 2^\" + std::to_string(i * 8) + \" - 1\";\r\n```\r\n\r\nI'm not sure why this caused an error... I'm using Mac OS Mojave with the LTS of LLVM and Clang...\r\n\r\nAlso, it works fine with a template now.\r\nI'll look into getting everything integrated... As well as preparing some solidity smart contracts to validate the SMTChecker file.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429685355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429689143",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429689143",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429689143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY4OTE0Mw==",
    "user": {
      "login": "ChrisCates",
      "id": 1561091,
      "node_id": "MDQ6VXNlcjE1NjEwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1561091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisCates",
      "html_url": "https://github.com/ChrisCates",
      "followers_url": "https://api.github.com/users/ChrisCates/followers",
      "following_url": "https://api.github.com/users/ChrisCates/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisCates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisCates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisCates/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisCates/orgs",
      "repos_url": "https://api.github.com/users/ChrisCates/repos",
      "events_url": "https://api.github.com/users/ChrisCates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisCates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T02:23:28Z",
    "updated_at": "2018-10-15T02:25:21Z",
    "author_association": "NONE",
    "body": "@chriseth I've noticed that there are some places where truncation is used in a way other then that we specified:\r\n\r\n```solidity\r\ntest.sol:3:16: Error: Type int_const 5789...(69 digits omitted)...9968 is not implicitly convertible to expected type uint16.\r\n    uint16 a = 0x8000000000000000000000000000000000000000000000000000000000000000;\r\n               ^----------------------------------------------------------------^\r\ntest.sol:4:16: Error: Type int_const 5789...(69 digits omitted)...9968 is not implicitly convertible to expected type uint16.\r\n    uint16 b = 0x8000000000000000000000000000000000000000000000000000000000000000;\r\n               ^----------------------------------------------------------------^\r\n```\r\n\r\nDo you want the same implementation done for large numbers specified in the error message?\r\n```solidity\r\nType int_const 5789...(69 digits omitted)...9968\r\n```\r\n\r\nShould be:\r\n```solidity\r\nError: Type int_const 0x8 * (2 ^ N) is not implicitly convertible to expected type uint16.\r\n```\r\n\r\nOr even we can drop the hex prefix altogether for error messages for formality.\r\nIf not, I won't bother changing these messages.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429689143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429758762",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429758762",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429758762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc1ODc2Mg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T08:44:51Z",
    "updated_at": "2018-10-15T08:44:51Z",
    "author_association": "MEMBER",
    "body": "@KevinKelley You are right that this feature will be used only for humans, and not in code generation. I'm not sure though, about `non-special hashes get truncated for display to 8(?) characters`. These values are output by the SMTChecker when a counterexample is found for a failed assertion, so it still needs to be precise when telling the developer which exact values break the assertion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429758762/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429778968",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429778968",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429778968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc3ODk2OA==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T09:48:22Z",
    "updated_at": "2018-10-15T09:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leonardoalt   So... can we tell, when do we need the precise value, and when do we just need to know what it looks like?  Sounds like you're saying, sometimes the humans need to see all the bits; and that makes sense.  \r\n\r\nI'm wishing for a tool output page that has abbreviated values you can click on for full info when you need it...this is really a display issue, where you'd like to see the pretty version for quick understanding, but have available the details.  \r\n\r\nBut we're dealing with console output here, and I'm not sure quite how to make it great...  should there be an API access point with full info, separate from the console display?  Or that the console display is abbreviated from?\r\n\r\nAnother thing to consider... the 2^N (and 2^N-1)  truncation... it's cool, but how likely is that?  I mean I'm glad to write the code, but you guys know how often those will happen, outside of simple testing situations.  \r\n\r\nNicknames for signatures (the 0xabcd.(skipsome).dbca idea)?  I guess the sig is already a nickname, we're just talking about dropping some bits so it's easier to recognize...question is, when do you need to get back to the bits?\r\n\r\nI don't really know.  I'll take some time looking at what SMTSolver is doing, anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429778968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429791016",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429791016",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429791016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc5MTAxNg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T10:20:50Z",
    "updated_at": "2018-10-15T10:21:52Z",
    "author_association": "MEMBER",
    "body": "@KevinKelley I think the other features are great as they are, and `2^n` and `2^(n-1)` are very likely in our scenario.\r\nDevelopers will always need all the bits when a counterexample is found, but `H*2^n` and `H*2^(n-1)` are not abstractions or truncated values, they still contain all the bits, so also good.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429791016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429797949",
    "html_url": "https://github.com/ethereum/solidity/issues/4648#issuecomment-429797949",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4648",
    "id": 429797949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc5Nzk0OQ==",
    "user": {
      "login": "KevinKelley",
      "id": 179568,
      "node_id": "MDQ6VXNlcjE3OTU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinKelley",
      "html_url": "https://github.com/KevinKelley",
      "followers_url": "https://api.github.com/users/KevinKelley/followers",
      "following_url": "https://api.github.com/users/KevinKelley/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinKelley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinKelley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinKelley/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinKelley/orgs",
      "repos_url": "https://api.github.com/users/KevinKelley/repos",
      "events_url": "https://api.github.com/users/KevinKelley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinKelley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T10:38:22Z",
    "updated_at": "2018-10-15T10:38:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leonardoalt Okay, true, 2^N truncations are still perfectly accurate.  Question for others is, do we want a display mode that does truncate some bits, in the interest of being quickly recognizable?  \r\n\r\nI'm taking it from this, that we need to keep the two sides separated, if we do it at all... accurate vs. readable...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/429797949/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
