{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3454",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3454/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3454/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3454/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3454",
  "id": 293787283,
  "node_id": "MDU6SXNzdWUyOTM3ODcyODM=",
  "number": 3454,
  "title": "Allow private visibility for modifier keyword",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-02-02T06:33:48Z",
  "updated_at": "2019-12-02T11:46:37Z",
  "closed_at": "2019-12-02T11:46:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```solidity\r\npragma solidity ^0.4.19;\r\n\r\ncontract A {\r\n    modifier mod private {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract B is A {\r\n    function B() mod public {\r\n        \r\n    }\r\n}\r\n```\r\n\r\nIn this example, contract `A` uses a modifier `mod` for its own purposes (that you can't see here today).\r\n\r\nContract `A` would like to avoid exporting this modifier for inherited contracts. But unfortunately, `B`'s environment has become polluted by this unwanted side effect.\r\n\r\n---\r\n\r\n# Work plan\r\n\r\n- [ ] Allow `modifier` to have visibility specified as `internal` or `private`, other visibilities shall be an error\r\n- [ ] If not specified, the `modifier`'s visibility is implicitly `internal`\r\n- [ ] Update language grammar documentation\r\n- [ ] Handle visibility inheritance the way inheritance is supposed to be handled (see test cases), not the way Solidity currently handles visibility inheritance\r\n- [ ] Update `modifier` documentation\r\n\r\n\r\n# Test suite\r\n\r\n```solidity\r\npragma solidity ^0.4.19;\r\n\r\ncontract Test1 {\r\n    modifier mod private {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test2 {\r\n    modifier mod internal {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test3 {\r\n    modifier mod {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test4A {\r\n    modifier mod private {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Test4B is Test4A {\r\n    modifier mod private { // <--------- No error, this now has scope\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test5A {\r\n    modifier mod private {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Test5B is Test5A {\r\n    modifier mod internal { // <--------- No error, this now has scope\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test6A {\r\n    modifier mod internal {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Test6B is Test6A {\r\n    modifier mod private { // <--------- Error: this is more restrictive than base contract\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test7A {\r\n    modifier mod internal {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Test7B is Test7A {\r\n    modifier mod internal { // <--------- No error, this now has scope\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////////\r\n\r\ncontract Test8A {\r\n    modifier mod private {\r\n        require(false);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Test8B is Test8A {\r\n    function Test8B() mod public { // <-------- Error, modifier mod is not visible here\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3454/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3454/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362571066",
    "html_url": "https://github.com/ethereum/solidity/issues/3454#issuecomment-362571066",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3454",
    "id": 362571066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU3MTA2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T12:15:49Z",
    "updated_at": "2018-02-02T12:15:49Z",
    "author_association": "MEMBER",
    "body": "Can you explain \"Handle visibility inheritance the way inheritance is supposed to be handled (see test cases), not the way Solidity currently handles visibility inheritance\" in a bit more detail, please?\r\n\r\nThere is also the option to disallow overriding for modifiers in general, which would probably be a good idea. Currently, modifiers are virtual, but I'm not sure if people actually use that. If you really need that, you can always call a virtual function inside the modifier.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362571066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362612226",
    "html_url": "https://github.com/ethereum/solidity/issues/3454#issuecomment-362612226",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3454",
    "id": 362612226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjYxMjIyNg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T15:09:56Z",
    "updated_at": "2018-02-02T15:12:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding visibility inheritance -- currently you cannot override functions with a function of different visibility (can't find issue), but in the future Solidity will allow greater than / equal visibility in subclasses. \r\n\r\nThese test cases demonstrate the LATTER, which is inconsistent with how functions currently work, FORMER.\r\n\r\n---\r\n\r\nWoah, right now modifiers are dynamic dispatch? Wow, TIL B.x and B.y both return `false`.\r\n\r\n```solidity\r\npragma solidity ^0.4.19;\r\n\r\ncontract A {\r\n    modifier m {\r\n        require(true);\r\n        _;\r\n    }\r\n\r\n    function x() m pure external {\r\n    }\r\n}\r\n\r\ncontract B is A {\r\n    modifier m {\r\n        require(false);\r\n        _;\r\n    }\r\n    \r\n    function y() m pure external {\r\n    }\r\n}\r\n```\r\n\r\nOk, well if modifiers are virtual then I would expect this to work but it doesn't.\r\n\r\n```solidity\r\npragma solidity ^0.4.19;\r\n\r\ncontract A {\r\n    modifier m;\r\n}\r\n```\r\n\r\n---\r\n\r\nWow, TIL, private functions can also be overridden with virtual dispatch.\r\n\r\n---\r\n\r\nOk, well today I learned a lot more about how Solidity actually works. If you read the documentation before writing code you might think the language is messed up (read documentation on contract function inheritance versus the above). But if you just start writing code and seeing how it works then it makes sense how things work.\r\n\r\nIn that case, here is the way that interfaces can be fixed to be more Solidity-like as per the way that Solidity actually works:\r\n\r\n* Implicit `internal` visibility\r\n* Explicit `internal` or `private` visibility\r\n* Dynamic dispatch, just like functions, even for `private` modifiers\r\n* You can't override a modifier unless your override has the same visibility (change this later, as part of that other issue I can't find which addresses the same situation for functions)\r\n* Allow defining a modifier without implementation, then implement in the inherited contract",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362612226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/560362011",
    "html_url": "https://github.com/ethereum/solidity/issues/3454#issuecomment-560362011",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3454",
    "id": 560362011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM2MjAxMQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-02T11:46:37Z",
    "updated_at": "2019-12-02T11:46:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing. Do not have a concrete need. 0.6.0 has virtual and override.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/560362011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
