{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7591/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7591/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7591/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7591",
  "id": 515007412,
  "node_id": "MDU6SXNzdWU1MTUwMDc0MTI=",
  "number": 7591,
  "title": "Constants in Yul (and other Language Features)",
  "user": {
    "login": "SilentCaesar",
    "id": 54080803,
    "node_id": "MDQ6VXNlcjU0MDgwODAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/54080803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SilentCaesar",
    "html_url": "https://github.com/SilentCaesar",
    "followers_url": "https://api.github.com/users/SilentCaesar/followers",
    "following_url": "https://api.github.com/users/SilentCaesar/following{/other_user}",
    "gists_url": "https://api.github.com/users/SilentCaesar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SilentCaesar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SilentCaesar/subscriptions",
    "organizations_url": "https://api.github.com/users/SilentCaesar/orgs",
    "repos_url": "https://api.github.com/users/SilentCaesar/repos",
    "events_url": "https://api.github.com/users/SilentCaesar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SilentCaesar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-10-30T21:56:41Z",
  "updated_at": "2023-03-04T12:04:15Z",
  "closed_at": "2023-03-04T12:04:15Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nYul has become a central part of our optimistic rollups architecture. The ability for us to work directly in memory across runtime with macro like function has been a game changer with serious gas optimization benefits.\r\n\r\nWe formally request a Yul language feature: Constants.\r\n\r\nCurrently, Yul is simplistic allowing only `let` statements. We propose the addition of constants for use across Code blocks. We understand Solidity Constants have been introduced in Solidity Assembly. We simply ask this be extended into pure Yul compilation and not just Solidity.\r\n\r\nWe also propose some other interesting constant like language features, which may in the end be out of scope for the Yul project.\r\n\r\n## Motivation\r\n\r\n1) Not Available: There currently is no constants in Yul or anything akin to that (other than optimized let statements)\r\n2) Safety: It would allow for safer more structured code without bloating the stack as the compiler would simply fill the constants in during compilation.\r\n3) Language Design: Constants are an arguably essential language feature for any modern programming language. \r\n4) Readability: Currently Yul is not very readable. When working at a low-level with memory in particular, the last thing you want is to be plugging in raw numbers anywhere as it makes decreases code readability, it's hard enough already, why make it worse.\r\n\r\n## Specification Possibilities\r\n\r\nIn code-block option `const nick := 4`:\r\n\r\n```\r\nobject \"CodeBlockOption\" {\r\n  code {\r\n      const nick := 4\r\n      \r\n      log1(0, 0, nick)\r\n\r\n      // logs topic 4\r\n  }\r\n}\r\n```\r\n\r\nOut of code-block option `const \"nick\" hex\"4\"`:\r\n\r\n```\r\nobject \"OutOfCodeBlockOption\" {\r\n  code {\r\n      log1(0, 0, nick)\r\n\r\n      // logs topic 4\r\n  }\r\n  const \"nick\" hex\"4\"\r\n}\r\n```\r\n\r\nWe would also ask you consider that constants be contract wide in scope, and can be used across all code blocks. We understand this might break isolation or scope paradigms.\r\n\r\nOut of code-block global option `const* \"nick\" hex\"4\"`:\r\n\r\n```\r\nobject \"OutOfCodeBlockGlobalOption\" {\r\n  code {\r\n      log1(0, 0, nick)\r\n\r\n      // logs topic 4\r\n  }\r\n  object \"SecondObject\" {\r\n     code {\r\n        log1(0, 0, nick)\r\n\r\n      // logs topic 4\r\n     }\r\n  }\r\n  const* \"nick\" hex\"4\"\r\n}\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nThe proposed language change would not be backward compatible.\r\n\r\n## Additional Consideration `Enums`\r\n\r\nIn addition to this, Enums would also be a great help in Yul and we don't think it would add very much bulk at all. This may be stretching Yul's current paradigm of simplicity, but we are interested to get everyone's thoughts.\r\n\r\n```\r\nobject \"EnumOptions\" {\r\n  code {\r\n      enum Colors {\r\n           Red,\r\n           Blue,\r\n           Green\r\n      }\r\n      \r\n      log1(0, 0, Colors.Blue)\r\n\r\n      // logs topic 1\r\n  }\r\n}\r\n```\r\n\r\n## Additional Consideration `Virtual Memory Structs`\r\n\r\nThis is our least generalizable and most opinionated language feature we request. We understand this may not be useful for many, but we thought we would submit it for consideration regardless.\r\n\r\nOften times, many execution use-cases have 32 byte chunk structures. We propose a way for virtually manage these for better code readability.\r\n\r\nHere we specify a virtual memory structure which starts at memory position `0`. \r\n\r\n```\r\nstruct32 Colors 0 {\r\n      Red,\r\n      Blue,\r\n      Green\r\n}\r\n```\r\n\r\nHere `Red` would be compiled to `mload(0)`, `Blue` would be compiled to `mload(32)`, and `Green` would be compiled to `mload(64)`.\r\n\r\n```\r\nobject \"Struct32Option\" {\r\n  code {\r\n      mstore(0, 0xff0000)\r\n      mstore(32, 0x0033cc)\r\n      mstore(64, 0x003300)\r\n\r\n      struct32 Colors 0 {\r\n           Red,\r\n           Blue,\r\n           Green\r\n      }\r\n      \r\n      log1(0, 0, Colors.Blue)\r\n\r\n      // logs topic 0x0033cc\r\n  }\r\n}\r\n```\r\n\r\nA packed virtual struct could also be added and used as follows:\r\n\r\n```\r\nobject \"PackedStructOption\" {\r\n  code {\r\n      mstore(0, 0xff00000033cc003300)\r\n\r\n      struct Colors 20 { // starts at memory position 20\r\n           Red: 4, // 4 byte length specifier\r\n           Blue: 4,\r\n           Green: 4\r\n      }\r\n      \r\n      log1(0, 0, Colors.Blue)\r\n\r\n      // logs topic 0x0033cc\r\n  }\r\n}\r\n```\r\n\r\nHere `Colors.Blue` would simply compile to: `div(mload(24), exp(2, sub(256, mul(4, 8))))`\r\n\r\nThis language feature would greatly reduce code complexity and greatly enhance readability. We understand this is asking a lot from Yul, but we think for memory management these small additions could make an enormous difference.\r\n\r\n## Special Thanks\r\n\r\nThank you to the Solidity team for creating low-level Assembly and Yul, it really makes a massive difference in execution sensitive scaling.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7591/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7591/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548141055",
    "html_url": "https://github.com/ethereum/solidity/issues/7591#issuecomment-548141055",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
    "id": 548141055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODE0MTA1NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-30T22:34:04Z",
    "updated_at": "2019-10-30T22:34:04Z",
    "author_association": "MEMBER",
    "body": "Please see #5928 for a previous discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548141055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548294077",
    "html_url": "https://github.com/ethereum/solidity/issues/7591#issuecomment-548294077",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
    "id": 548294077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODI5NDA3Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-31T09:59:10Z",
    "updated_at": "2019-10-31T09:59:10Z",
    "author_association": "MEMBER",
    "body": "It's always a pleasure to meet power-users! Maybe it is best to have a call to discuss your needs and our abilities in more details. Can you either come to https://gitter.im/ethereum/solidity-dev or send me a mail at chris@ethereum.org? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548294077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548448493",
    "html_url": "https://github.com/ethereum/solidity/issues/7591#issuecomment-548448493",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
    "id": 548448493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQ0ODQ5Mw==",
    "user": {
      "login": "SilentCaesar",
      "id": 54080803,
      "node_id": "MDQ6VXNlcjU0MDgwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54080803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SilentCaesar",
      "html_url": "https://github.com/SilentCaesar",
      "followers_url": "https://api.github.com/users/SilentCaesar/followers",
      "following_url": "https://api.github.com/users/SilentCaesar/following{/other_user}",
      "gists_url": "https://api.github.com/users/SilentCaesar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SilentCaesar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SilentCaesar/subscriptions",
      "organizations_url": "https://api.github.com/users/SilentCaesar/orgs",
      "repos_url": "https://api.github.com/users/SilentCaesar/repos",
      "events_url": "https://api.github.com/users/SilentCaesar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SilentCaesar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-31T16:05:44Z",
    "updated_at": "2019-11-05T01:34:46Z",
    "author_association": "NONE",
    "body": "@axic the full word `constant` is fine, but I prefer `const` which is common among many languages.\r\n\r\n@chriseth I'll send you an email. Our current code will be re-factored and most likely sit around 3000 lines of Yul when it's finished. I'd be happy to go over our needs.\r\n\r\nI also have some thoughts around writing virtual memory structures to memory:\r\n\r\n```\r\nobject \"PackedStructOptionWithInstantiation\" {\r\n  code {\r\n      mstore(0, 0xff00000033cc003300)\r\n\r\n      struct Colors { // struct is now a virtual concept\r\n           Red: 3, // 3 byte length specifier (or defined as \"24\" for \"u24\")\r\n           Blue: 3,\r\n           Green: 3\r\n      }\r\n\r\n      log1(0, 0, Colors(20).Red) // would log topic 0xff0000\r\n      \r\n      Colors(60, { // 60 is now the write position\r\n           Red: 0xff0000, // must be 3 byte or u24 chunk\r\n           Blue: 0x0033cc,\r\n           Green: 0x003300\r\n      })\r\n\r\n      log1(0, 0, mload(60)) // would log topic 0xff00000033cc003300\r\n  }\r\n}\r\n```\r\n\r\nExample use case with an ecrecover scenario:\r\n\r\n```\r\nobject \"TightPackedECRecover\" {\r\n  code {\r\n      // memory at 0: 0x1c613fa3f3118416dafb350a41d8c41d5e295a1b26760d0724f11063096bab24c347f290802fc787ae065ce6f5dedcbdd15537d7b6c7f1ea8c4629214af502e760\r\n\r\n      struct Signature {\r\n           v: 1,\r\n           r: 32,\r\n           s: 32\r\n      }\r\n\r\n      // here we allow the struct to be passed into `ecrecover`\r\n      // the value actually getting pushed to stack is 0 (i.e. the structs starting memory position), \r\n      // when used in `ecrecover` however it reacts linguistically like a struct during compilation.\r\n      // We can place a maximum chunk size of 32 bytes per struct property, \r\n      // so that it plays nicely with other Yul language components like `mstore` for example.\r\n\r\n      function ecrecover(sig) -> address {\r\n         mstore(128, sig.v) // Yul picks up this is a virtual struct and allows you to access v, r, s here\r\n         mstore(160, sig.r) // Yul would resolve r to `mload(0 + 1)`\r\n         ....\r\n      }\r\n\r\n     // here Signature(0) simply resolves to 0 in the stack\r\n\r\n      log1(0, 0, ecrecover(Signature(0))  // would log topic address returned form ecrecover\r\n\r\n      // A nice side feature of this would also be accessing struct lengths like so\r\n\r\n     log1(0, 0, Signature.r) // would return 32\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/548448493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1443593491",
    "html_url": "https://github.com/ethereum/solidity/issues/7591#issuecomment-1443593491",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
    "id": 1443593491,
    "node_id": "IC_kwDOAm_5kc5WC30T",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-02-24T12:05:26Z",
    "updated_at": "2023-02-24T12:05:26Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1443593491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454717196",
    "html_url": "https://github.com/ethereum/solidity/issues/7591#issuecomment-1454717196",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7591",
    "id": 1454717196,
    "node_id": "IC_kwDOAm_5kc5WtTkM",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-04T12:04:13Z",
    "updated_at": "2023-03-04T12:04:13Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454717196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
