{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11132/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11132/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11132/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11132",
  "id": 836869985,
  "node_id": "MDU6SXNzdWU4MzY4Njk5ODU=",
  "number": 11132,
  "title": "solc mode that runs the Yul optimization checks, other expensive compiler checks",
  "user": {
    "login": "agroce",
    "id": 967816,
    "node_id": "MDQ6VXNlcjk2NzgxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/agroce",
    "html_url": "https://github.com/agroce",
    "followers_url": "https://api.github.com/users/agroce/followers",
    "following_url": "https://api.github.com/users/agroce/following{/other_user}",
    "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
    "organizations_url": "https://api.github.com/users/agroce/orgs",
    "repos_url": "https://api.github.com/users/agroce/repos",
    "events_url": "https://api.github.com/users/agroce/events{/privacy}",
    "received_events_url": "https://api.github.com/users/agroce/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 49,
  "created_at": "2021-03-20T17:36:36Z",
  "updated_at": "2023-12-28T15:30:01Z",
  "closed_at": "2023-03-26T12:04:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Proposal:\r\n\r\nContext: reading this -- https://blog.soliditylang.org/2021/02/10/an-introduction-to-soliditys-fuzz-testing-approach/\r\n\r\nFrom this and conversation with @bshastry I know there is a Yul optimization mode that, as I understand at, adds extra (possibly expensive?) checks to the validity of optimizations, used in the Yul protobuf fuzzing.  I believe this works for arbitrary Yul, so for anything that would hit the optimizer.  I've been thinking about how to improve fuzzing for compilers in general, and one approach would be to just add a --slow-but-checked mode where a compiler may even be too slow for production use most of the time, but runs as many additional sanity checks as anyone is willing to code up.  This article (https://cfallin.org/blog/2021/03/15/cranelift-isel-3/) that @rocallahan pointed me to got me thinking along these lines.  As Rob has pointed out, it might even be worth compiling Mars code/systems code/high value contracts using such a compiler mode, even if it was very slow, as a defense against wrong code.  In this case, it seems to me the check code exists and might not be too hard to integrate into the solc normal front end as an optional added check, maybe to be joined by others.\r\n\r\nThis is basically \"solfuzzer binary on steroids, in main binary\" I guess...",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11132/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11132/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803439188",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-803439188",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 803439188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQzOTE4OA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T18:23:46Z",
    "updated_at": "2021-03-20T18:23:46Z",
    "author_association": "MEMBER",
    "body": "Thank you for your proposal @agroce \n\nI suppose the proposal essentially entails providing a command line option to the fuzzers we currently run on oss fuzz.\n\nI'm not sure I understand the benefit. Is it meant to permit external testers to simply focus on input generation and feed such inputs to a mode such as `solc  --fuzz-yul-optimizer input.yul`?\n\nThere is already the possibility of building the fuzzers we already have and simply wiring it with one's own input generator. This does not depend on the proposed feature, yet permits testing by external people.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803439188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803441824",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-803441824",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 803441824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQ0MTgyNA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T18:38:31Z",
    "updated_at": "2021-03-20T18:38:31Z",
    "author_association": "NONE",
    "body": "For people fuzzing, that's right, it's a little more work and somebody (me when I get some spare time maybe) should make it a little easier to wire in arbitrary code etc., but for fuzzing teams it's not that big a deal.\r\n\r\nI think the real benefit here would be that you can compile real contracts in a mode where the compiler turns on every \"debugging/fuzzing\" check anyone's ever added to it, to minimize chance of wrong code.  Even serious contract developers are unlikely to figure out how to run the fuzzing tools on their Yul, etc.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803441824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803441900",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-803441900",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 803441900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQ0MTkwMA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T18:38:48Z",
    "updated_at": "2021-03-20T18:38:48Z",
    "author_association": "NONE",
    "body": "I don't know if this makes sense",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803441900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803447030",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-803447030",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 803447030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQ0NzAzMA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T19:06:21Z",
    "updated_at": "2021-03-20T19:06:21Z",
    "author_association": "NONE",
    "body": "(Well, it makes sense, I don't know if it's worth doing, or not)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803447030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803549475",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-803549475",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 803549475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzU0OTQ3NQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-21T10:23:02Z",
    "updated_at": "2021-03-21T10:23:02Z",
    "author_association": "MEMBER",
    "body": "> I think the real benefit here would be that you can compile real contracts in a mode where the compiler turns on every \"debugging/fuzzing\" check anyone's ever added to it, to minimize chance of wrong code.\n\nNot sure I follow. We are fuzzing the optimiser precisely to minimize chance of wrong code :-)\n\n> Even serious contract developers are unlikely to figure out how to run the fuzzing tools on their Yul, etc.\n\nShould they? Those bugs that are introduced by the compiler because the compiler errs in correctly translating high level smart contract logic into EVM byte code may be caught by unit tests written by smart contract developers. They know the program logic best and therefore are in the best position to write tests for them.\n\nOf course it is possible that a unit test does not uncover a compiler bug. But I don't yet understand how the proposed feature might find this class of bugs i.e., compiler bugs uncovered by unit testing.\n\nTo find compiler bugs that may be missed by unit tests, one needs to fuzz the optimiser which is precisely what we are doing :-)\n\nOf course one can insert additional sanity checks to catch code generation errors. There are things that we are currently working on e.g., using EVM execution tracing to more precisely compare unoptimized and optimised code. Contributions and PRs are always welcome :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803549475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/804452200",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-804452200",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 804452200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDQ1MjIwMA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T23:03:45Z",
    "updated_at": "2021-03-22T23:03:45Z",
    "author_association": "NONE",
    "body": "I think the probability of a wrong-code bug seriously impacting a serious contract is pretty low, but I think based on our experience with (even very good) unit tests vs. source-level bugs, relying on unit tests to catch anything subtle is... not a great idea (see http://www.ifca.ai/fc20/preproceedings/75.pdf section 4.3).  I may be misunderstanding.  My thought was that the Yul checks can detect some bugs in optimization for any Yul code, so there's a chance, albeit quite small, it would notice something going wrong with the optimization of code for an arbitrary contract?\r\n\r\nFuzzing the optimizer is great, but it might not run on that specific contract Yul, or something with that bug?  Maybe I'm missing something here?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/804452200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/804989653",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-804989653",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 804989653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDk4OTY1Mw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T15:18:14Z",
    "updated_at": "2021-03-23T15:18:14Z",
    "author_association": "MEMBER",
    "body": "> From this and conversation with @bshastry I know there is a Yul optimization mode that, as I understand at, adds extra (possibly expensive?) checks to the validity of optimizations, used in the Yul protobuf fuzzing. I believe this works for arbitrary Yul, so for anything that would hit the optimizer.\r\n\r\n@bshastry Where are these checks exactly? This is stuff that's not a part of the core compiler/optimizer and sits in fuzzer's code, right?\r\n\r\nI think we'd need to discuss what is actually being checked and how strongly it is tied to fuzzer's implementation details to decide whether it makes sense to include that in the compiler's code and expose that through the CLI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/804989653/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805046834",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805046834",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805046834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA0NjgzNA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T16:29:54Z",
    "updated_at": "2021-03-23T16:29:54Z",
    "author_association": "MEMBER",
    "body": "> @bshastry Where are these checks exactly? This is stuff that's not a part of the core compiler/optimizer and sits in fuzzer's code, right?\r\n\r\nRight. The checks are here, for example:\r\n\r\nhttps://github.com/ethereum/solidity/blob/8d00100c4e9d211830a5dbf6a1f964d98648480d/test/tools/ossfuzz/strictasm_diff_ossfuzz.cpp#L100-L101\r\n\r\nAt the very least, exposing this as a frontend command line option would mean adding the Yul interpreter as a dependency to `solc`. Currently, the Yul interpreter is a `tool` and I'm not sure if it is released as such.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805046834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805053192",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805053192",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805053192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA1MzE5Mg==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T16:38:39Z",
    "updated_at": "2021-03-23T16:38:39Z",
    "author_association": "MEMBER",
    "body": "I guess this particular check could be reproduced using `yulrun`? I.e. getting both optimized and unoptimized Yul output from `solc` and then comparing traces from `yulrun`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805053192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805054133",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805054133",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805054133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA1NDEzMw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T16:39:56Z",
    "updated_at": "2021-03-23T16:39:56Z",
    "author_association": "MEMBER",
    "body": "> I guess this particular check could be reproduced using `yulrun`? I.e. getting both optimized and unoptimized Yul output from `solc` and then comparing traces from `yulrun`?\r\n\r\nYes, `yulrun` would do.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805054133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805054757",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805054757",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805054757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA1NDc1Nw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T16:40:45Z",
    "updated_at": "2021-03-23T16:40:45Z",
    "author_association": "MEMBER",
    "body": "Are there any other checks?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805054757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805056786",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805056786",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805056786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA1Njc4Ng==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T16:43:36Z",
    "updated_at": "2021-03-23T16:43:36Z",
    "author_association": "MEMBER",
    "body": "> Are there any other checks?\r\n\r\nFor the Yul optimiser, no. The Keccak bug was found by comparing the \"trace\" produced by evmone but that fuzzer is not upstream yet. In any case, the core of the check is the same except the trace is obtained via a call to the EVMHostPrinter instead of the Yul interpreter\r\n\r\nSee https://github.com/ethereum/solidity/blob/8d00100c4e9d211830a5dbf6a1f964d98648480d/test/EVMHost.cpp#L778",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805056786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805074339",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805074339",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805074339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA3NDMzOQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:07:31Z",
    "updated_at": "2021-03-23T17:07:31Z",
    "author_association": "MEMBER",
    "body": "So maybe we could just expose the `EVMHostPrinter` via a dedicated executable, similar to `yulrun`?\r\n\r\n@agroce Would a shell script that runs all of these checks on a given Solidity file be enough? They depend on debug tools like evmone which I think do not provide much value to the average user not interested in testing the compiler. I think that a shell script that works when you have a local build of the compiler would be more lightweight and just as useful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805074339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805082257",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805082257",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805082257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA4MjI1Nw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:18:19Z",
    "updated_at": "2021-03-23T17:18:19Z",
    "author_association": "MEMBER",
    "body": "> So maybe we could just expose the `EVMHostPrinter` via a dedicated executable, similar to `yulrun`?\r\n\r\nSounds reasonable to me. Sounds like isoltest++ :-)\r\n\r\nNot sure how much effort this would entail since the whole testing framework we use is rather complex to package as a black-box fuzzing binary. I suppose the benefit is that smart contract developer checking optimiser correctness although I'm not too convinced about this. Perhaps the real audience for such a binary are security auditors.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805082257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805088848",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805088848",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805088848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTA4ODg0OA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:27:33Z",
    "updated_at": "2021-03-23T17:27:54Z",
    "author_association": "MEMBER",
    "body": "I was thinking of something very simple, not involving any fuzzing. Basically just a yes/no check for a single file (i.e. are the optimized and unoptimized `yulrun` traces identical?). It would be up to the caller to plug the check into his fuzzing setup and generate interesting input files.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805088848/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805104427",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805104427",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805104427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEwNDQyNw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:48:47Z",
    "updated_at": "2021-03-23T17:49:43Z",
    "author_association": "MEMBER",
    "body": "> Basically just a yes/no check for a single file\r\n\r\nLooked up old triage scripts and found something like this. Please don't ask me why :sweat_smile: \r\n\r\n```\r\ndiff $(solc --strict-assembly --optimize $INPUT_YUL 2>&1| awk '/object/,/^}$/' > topt; yulrun --input-file topt > topt.trace; echo \"topt.trace\") $(solc --strict-assembly $INPUT_YUL 2>&1 | awk '/object/,/^}$/' > t; yulrun --input-file t > t.trace; echo \"t.trace\")\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805104427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805107679",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805107679",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805107679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEwNzY3OQ==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:53:23Z",
    "updated_at": "2021-03-23T17:53:23Z",
    "author_association": "NONE",
    "body": "Aha.  I see, the checks depend on the standalone tool.  Yeah, rolling that into solc is sort of not fun.  For fuzzing purposes or for \"final sanity check on contracts\" it seems like this script based approach would work, and while not infinitely convenient, could certainly be made pretty trivial for those who want to do it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805107679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805108708",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805108708",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805108708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEwODcwOA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:54:55Z",
    "updated_at": "2021-03-23T17:54:55Z",
    "author_association": "NONE",
    "body": "> Perhaps the real audience for such a binary are security auditors.\r\n\r\nYes, I think at minimum security auditors would be happy to run it, though if it's made obvious a script will work for that.\r\n\r\nFor fuzzing,  a script is actually not quite so great because it'd need to be wrapped up in C/C++ for afl to be happy and instrument things properly, but that doesn't sound too awful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805108708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805109766",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805109766",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805109766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEwOTc2Ng==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:56:29Z",
    "updated_at": "2021-03-23T17:56:29Z",
    "author_association": "NONE",
    "body": "The other way to use in fuzzing is not to throw this in the inner fuzzing loop, but it looks like @bshastry has a diff that could just run through everything in an AFL corpus and check the corpus for sanity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805109766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805109917",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805109917",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805109917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEwOTkxNw==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:56:40Z",
    "updated_at": "2021-03-23T17:56:40Z",
    "author_association": "NONE",
    "body": "Indeed, I'm going to try that out right now :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805109917/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805110948",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805110948",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805110948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTExMDk0OA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T17:58:04Z",
    "updated_at": "2021-03-23T17:58:04Z",
    "author_association": "NONE",
    "body": "(I have a few thousand afl-generated Yul inputs, probably most of which don't compile, but I'm about to see)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805110948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805113161",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805113161",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805113161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTExMzE2MQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:01:07Z",
    "updated_at": "2021-03-23T18:01:07Z",
    "author_association": "MEMBER",
    "body": "> (I have a few thousand afl-generated Yul inputs, probably most of which don't compile, but I'm about to see)\r\n\r\nWould be curious to know roughly what percentage of afl-generated input is valid :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805113161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805116973",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805116973",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805116973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTExNjk3Mw==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:06:36Z",
    "updated_at": "2021-03-23T18:06:36Z",
    "author_association": "NONE",
    "body": "pure afl, probably almost none compile (haven't checked lately), but this variant, it's about 8% of the generated corpus.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805116973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805117474",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805117474",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805117474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTExNzQ3NA==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:07:24Z",
    "updated_at": "2021-03-23T18:07:24Z",
    "author_association": "NONE",
    "body": "(that number is for Yul, just generated as I'm hacking up a Python script to do that diffing with a little more informative output for me, no clue on Solidity without running some experiments)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805117474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805127145",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805127145",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805127145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEyNzE0NQ==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:21:39Z",
    "updated_at": "2021-03-23T18:21:39Z",
    "author_association": "NONE",
    "body": "hmmm\r\n\r\n```\r\nroot@f408e72f5e43:~/solidity/test# ../build/test/tools/yulrun --input-file t\r\nterminate called after throwing an instance of 'boost::wrapexcept<solidity::yul::YulAssertion>'\r\n  what():  Unknown builtin: linkersymbol\r\nAborted\r\nroot@f408e72f5e43:~/solidity/test# ../build/test/tools/yulrun --input-file topt\r\nTrace:\r\nMemory dump:\r\nStorage dump:\r\nroot@f408e72f5e43:~/solidity/test# cat foo.yul \r\n{\r\n    let addr := linkersymbol(\"ract/library.sol8L\")\r\n}\r\n// dialect: ====\r\n// evm\r\n// ----\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805127145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805127857",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805127857",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805127857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEyNzg1Nw==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:22:35Z",
    "updated_at": "2021-03-23T18:22:35Z",
    "author_association": "NONE",
    "body": "Non-optimized object crashes and the optimized does not, because:\r\n\r\n```\r\nroot@f408e72f5e43:~/solidity/test# cat topt\r\nobject \"object\" {\r\n    code { { } }\r\n}\r\n```\r\n\r\nbut\r\n\r\n```\r\nroot@f408e72f5e43:~/solidity/test# cat t\r\nobject \"object\" {\r\n    code {\r\n        let addr := linkersymbol(\"ract/library.sol8L\")\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805127857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805128612",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805128612",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805128612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEyODYxMg==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:23:32Z",
    "updated_at": "2021-03-23T18:23:32Z",
    "author_association": "NONE",
    "body": "So just running on the arbitrary generated Yul might not work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805128612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805132344",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805132344",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805132344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEzMjM0NA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:28:57Z",
    "updated_at": "2021-03-23T18:28:57Z",
    "author_association": "MEMBER",
    "body": "> Non-optimized object crashes and the optimized does not, because:\r\n> \r\n> ```\r\n> root@f408e72f5e43:~/solidity/test# cat topt\r\n> object \"object\" {\r\n>     code { { } }\r\n> }\r\n> ```\r\n> \r\n> but\r\n> \r\n> ```\r\n> root@f408e72f5e43:~/solidity/test# cat t\r\n> object \"object\" {\r\n>     code {\r\n>         let addr := linkersymbol(\"ract/library.sol8L\")\r\n>     }\r\n> }\r\n> ```\r\n\r\nWhat's happening here is that the built-in `linkersymbol` is not recognised by the yul interpreter but recognised by the Yul parser. The optimised version optimises out `addr` because it is unused.\r\n\r\nThe main question is if we should support `linkersymbol` as a valid built-in inside the Yul interpreter but that's a separate issue :-)\r\n\r\nBTW, the test case is probably from yul syntax test suite: https://github.com/ethereum/solidity/blob/develop/test/libyul/yulSyntaxTests/linkersymbol_evm.yul",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805132344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805132788",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805132788",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805132788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEzMjc4OA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:29:37Z",
    "updated_at": "2021-03-23T18:29:37Z",
    "author_association": "MEMBER",
    "body": "> pure afl, probably almost none compile (haven't checked lately), but this variant, it's about 8% of the generated corpus.\r\n\r\nInteresting. What is the \"variant\" here?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805132788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805133067",
    "html_url": "https://github.com/ethereum/solidity/issues/11132#issuecomment-805133067",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11132",
    "id": 805133067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTEzMzA2Nw==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T18:30:00Z",
    "updated_at": "2021-03-23T18:30:00Z",
    "author_association": "NONE",
    "body": "Right, I crawl for all the Yul in the test subtree to start AFL running.  The solution of the moment is to toss out anything where the foo.yul has 'linkersymbol' in it, for the moment.  Doing so, then running.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/805133067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
