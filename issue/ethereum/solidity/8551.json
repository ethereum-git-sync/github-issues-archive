{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8551/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8551/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8551/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8551",
  "id": 590310572,
  "node_id": "MDU6SXNzdWU1OTAzMTA1NzI=",
  "number": 8551,
  "title": "[Sol->Yul] Immutables",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-03-30T13:53:48Z",
  "updated_at": "2023-07-05T19:43:32Z",
  "closed_at": "2020-07-21T13:26:05Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Part of #3835 \r\n\r\nWe should also implement the code generation for immutables for Yul.\r\n\r\nFor this, we need new built-in functions in the dialect:\r\n - `setImmutable(\"name\", value)`\r\n - `loadImmutable(\"name\")`\r\n\r\nThis adds the complication that it is a builtin function that has a literal parameter but not all parameters are literals, so we need to modify the member \"literalAguments\" to specify the parameters that are required to be literals.\r\n\r\nIt should be possible to transfer the lvalue mechanism of the legacy codegen for immutables.\r\n\r\nFinally, `setImmutable` and `loadImmutable` need an implementation in the assembly:\r\n\r\nAbstractAssembly and all classes inheriting from it need two new functions to set and retrieve immutables. These are already implemented in the legacy Assembly (which is accessed via the EVMAssemblyAdapter).",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8551/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8551/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/607306530",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-607306530",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 607306530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzMwNjUzMA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-01T15:09:32Z",
    "updated_at": "2020-04-08T15:33:14Z",
    "author_association": "MEMBER",
    "body": "I am starting to work on this, for now only the literalArguments parts #8626",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/607306530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/607976633",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-607976633",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 607976633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk3NjYzMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T17:12:53Z",
    "updated_at": "2020-04-02T17:12:53Z",
    "author_association": "MEMBER",
    "body": "I'm working on the actual code generation, assuming the dialect has the needed support.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/607976633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609950438",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-609950438",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 609950438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTk1MDQzOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T18:05:28Z",
    "updated_at": "2020-04-06T18:05:28Z",
    "author_association": "MEMBER",
    "body": "Since we disabled external function pointers temporarily for the bugfix release in https://github.com/ethereum/solidity/pull/8586, we now need to decide how to deal with them. Two options:\r\n- Use two separate slots (so basically just revert https://github.com/ethereum/solidity/pull/8586) and think about how to deal with this in the debug output.\r\n- Pack them into one slot.\r\n\r\nIt may make sense to think ahead a bit and consider how dynamic arrays will work. Are they actually planned? Will they be one offset into the code only and the length will be stored at that offset followed by the data? Or will they have two \"slots\" - an offset and a length? How will they look in the debug output (we might need to split into pointer and content).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609950438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610257273",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-610257273",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 610257273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDI1NzI3Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T08:39:53Z",
    "updated_at": "2020-04-07T08:39:53Z",
    "author_association": "MEMBER",
    "body": "Dynamically-sized arrays have to use codecopy at least for the actual data. This invalidates the \"datasize\" builtin, but I think it is still fine, because we only use it on the construction data.\r\n\r\nCan you draft how it would look if we use the length literally and codecopy for the data and if we use codecopy for both?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610257273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611467199",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-611467199",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 611467199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTQ2NzE5OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T11:00:06Z",
    "updated_at": "2020-04-09T11:00:06Z",
    "author_association": "MEMBER",
    "body": "Ok, let's think about\r\n```\r\ncontract C {\r\n  uint[] immutable x;\r\n  constructor() public {\r\n     x = new uint256[](2); x[0] = 23; x[1] = 42;\r\n  }\r\n  function f() public returns (uint256[] memory) {\r\n    return x;\r\n  }\r\n}\r\n```\r\n\r\nDuring the constructor code, there will probably be one \"reserved\" memory slot for the array.\r\nStoring would just be ``setimmutable(\"x\", mpos)``.\r\nAfter the constructor body, I expect that we won't be able to copy the code to offset 0 anymore, but will have to copy to the free memory pointer instead.\r\n\r\n```\r\n  let codeStart := mload(<freeMem>)\r\n  let codeEnd := add(codeStart, <runtimeCodeSize>)\r\n  // copy runtime code to [codeStart, codeEnd)\r\n\r\n  // ... copy value type immutables from reserved memory to occurrences in code ...\r\n  // for x itself:\r\n  let x_src_mpos := mload(<reservedMemorySlotForX>)\r\n  let x_dst_pos := codeEnd\r\n  codeEnd := <copyArrayFunction>(codeEnd, x_mpos) // copy array x to codeEnd and return memory end\r\n  // copy x_dst_pos to occurrences in code\r\n```\r\n\r\nActually, instead of copying the array that part could be:\r\n```\r\ncodeEnd := <abiEncodingFunction>(codeEnd, x_mpos)\r\n```\r\n\r\nAccessing the immutable from runtime code:\r\n```\r\n  let result\r\n\r\n  let x_ptr := getimmutable(\"x\") // fetches the one-slot offset into code\r\n  let mpos := mload(<freeMem>)\r\n  result := mpos\r\n  codecopy(mpos, x_ptr, 32)\r\n  let x_len := mload(mpos)\r\n  let x_msize := mul(x_len, <memoryHeadSize>)\r\n  codecopy(mpos, add(x_ptr, 32), x_msize)\r\n  mpos := add(mpos, x_msize)\r\n  // iterate further for nested arrays... for those the length has to be in code only anyways...\r\n  mstore(<freeMem>, mpos)\r\n```\r\n\r\n\r\nActually, this could really be\r\n```\r\n  let result\r\n\r\n  let x_ptr := getimmutable(\"x\")\r\n  result := <abiDecodeFromĆodeFunction>(x_ptr, codesize())\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611467199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611470631",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-611470631",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 611470631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTQ3MDYzMQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T11:09:04Z",
    "updated_at": "2020-04-09T11:09:04Z",
    "author_association": "MEMBER",
    "body": "Not sure that comment above is too helpful, but in any case, there seems to be arguments for and agreement about packing external function pointers into one slot for immutables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611470631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611478180",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-611478180",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 611478180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTQ3ODE4MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T11:28:23Z",
    "updated_at": "2020-04-09T11:28:23Z",
    "author_association": "MEMBER",
    "body": "Maybe we should even have `code` references then like we use for `calldata`: If you use `immutableVar[2]` you don't need the full copy to memory.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611478180/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611485394",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-611485394",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 611485394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTQ4NTM5NA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T11:47:53Z",
    "updated_at": "2020-04-09T11:47:53Z",
    "author_association": "MEMBER",
    "body": "Haha, if we go down that road, one might argue that ``immutable`` really isn't a good name, but that we instead rather should have said that state variables can have two different data locations, namely ``storage`` and ``code`` :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611485394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661860165",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-661860165",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 661860165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTg2MDE2NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-21T13:26:05Z",
    "updated_at": "2020-07-21T13:26:05Z",
    "author_association": "MEMBER",
    "body": "I think this is fully implemented now. Please reopen if I'm mistaken.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661860165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912754043",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-912754043",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 912754043,
    "node_id": "IC_kwDOAm_5kc42Z4V7",
    "user": {
      "login": "wminshew",
      "id": 9845502,
      "node_id": "MDQ6VXNlcjk4NDU1MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9845502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wminshew",
      "html_url": "https://github.com/wminshew",
      "followers_url": "https://api.github.com/users/wminshew/followers",
      "following_url": "https://api.github.com/users/wminshew/following{/other_user}",
      "gists_url": "https://api.github.com/users/wminshew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wminshew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wminshew/subscriptions",
      "organizations_url": "https://api.github.com/users/wminshew/orgs",
      "repos_url": "https://api.github.com/users/wminshew/repos",
      "events_url": "https://api.github.com/users/wminshew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wminshew/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-03T19:12:59Z",
    "updated_at": "2021-09-03T19:12:59Z",
    "author_association": "NONE",
    "body": "> I think this is fully implemented now. Please reopen if I'm mistaken.\r\n\r\nhi -- saw there was some discussion in here around immutable dynamic arrays. Is there any plan to still include those (and perhaps mappings) in the future?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912754043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1411854587",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-1411854587",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 1411854587,
    "node_id": "IC_kwDOAm_5kc5UJzD7",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T10:49:26Z",
    "updated_at": "2023-02-01T10:49:26Z",
    "author_association": "NONE",
    "body": "Can we have it somehow available in Solidity Assembly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1411854587/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1622389015",
    "html_url": "https://github.com/ethereum/solidity/issues/8551#issuecomment-1622389015",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8551",
    "id": 1622389015,
    "node_id": "IC_kwDOAm_5kc5gs7EX",
    "user": {
      "login": "zerosnacks",
      "id": 95942363,
      "node_id": "U_kgDOBbf22w",
      "avatar_url": "https://avatars.githubusercontent.com/u/95942363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zerosnacks",
      "html_url": "https://github.com/zerosnacks",
      "followers_url": "https://api.github.com/users/zerosnacks/followers",
      "following_url": "https://api.github.com/users/zerosnacks/following{/other_user}",
      "gists_url": "https://api.github.com/users/zerosnacks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zerosnacks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zerosnacks/subscriptions",
      "organizations_url": "https://api.github.com/users/zerosnacks/orgs",
      "repos_url": "https://api.github.com/users/zerosnacks/repos",
      "events_url": "https://api.github.com/users/zerosnacks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zerosnacks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-05T19:43:32Z",
    "updated_at": "2023-07-05T19:43:32Z",
    "author_association": "NONE",
    "body": "> Can we have it somehow available in Solidity Assembly?\r\n\r\nSeconding this, would be great to have this available there",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1622389015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
