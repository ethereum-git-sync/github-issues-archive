{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3270/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3270/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3270/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3270",
  "id": 278629278,
  "node_id": "MDU6SXNzdWUyNzg2MjkyNzg=",
  "number": 3270,
  "title": "Use returndatacopy for cross-contract calls",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2017-12-01T23:42:50Z",
  "updated_at": "2018-03-22T09:40:32Z",
  "closed_at": "2018-03-21T17:12:42Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This will enable passing dynamic (`bytes`, `string`, variable length arrays, `struct`s, etc.) data between calls.\r\n\r\nFor passing `struct`s the new ABI encoder/decoder must be enabled - preferably by the time `returndatacopy` is enabled, the ABI rewrite will be mature enough to be on by default.\r\n\r\nA related issue is #434 which introduces a new low-level call method which returns the raw `bytes` using `returndatacopy`.\r\n\r\nThe main risk here is that it makes contracts incompatible with pre-Byzantium EVMs.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3270/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3270/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/348644957",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-348644957",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 348644957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY0NDk1Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T23:51:59Z",
    "updated_at": "2017-12-01T23:51:59Z",
    "author_association": "MEMBER",
    "body": "As a short term solution there could be annotation for functions to mark they are using the new ABI encoder. In that case the compiler could use `returndatacopy`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/348644957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/348658028",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-348658028",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 348658028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY1ODAyOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T01:44:06Z",
    "updated_at": "2017-12-02T01:44:06Z",
    "author_association": "MEMBER",
    "body": "Proposal in #1117 would allow these features to be turned on/off.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/348658028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366784840",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-366784840",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 366784840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc4NDg0MA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T19:33:04Z",
    "updated_at": "2018-02-19T19:33:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you please provide us more details here.\r\n\r\n* Is this issue \"accepted\"?\r\n* It is committed that a change will be made?\r\n* Is there a target version?\r\n\r\nI am working on ERC-721 (https://github.com/ethereum/EIPs/pull/841#issuecomment-366782128). Could you please take a quick look at `ERC721Enumerable`. Am I doing it right? Should we delay this standard to wait for this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366784840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814104",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-366814104",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 366814104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgxNDEwNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T22:08:25Z",
    "updated_at": "2018-02-19T22:08:25Z",
    "author_association": "MEMBER",
    "body": "We are currently working on this. The main problem is that the old ABI decoder does not perform bounds checking and thus it would be possible for a malicious called contract to return data that can interfere with existing data in memory (read-only).\r\n\r\nSince we are not yet 100% confident with the new ABI decoder (which does bounds checking), it might take a while until this is enabled by default.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814434",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-366814434",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 366814434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgxNDQzNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T22:10:22Z",
    "updated_at": "2018-02-19T22:10:22Z",
    "author_association": "MEMBER",
    "body": "Actually thinking about this a little more, the old ABI decoder does not support multi-dimensional arrays or structs anyway, so the bounds checking would be a lot simpler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814454",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-366814454",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 366814454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgxNDQ1NA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T22:10:29Z",
    "updated_at": "2018-02-19T22:10:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for clarifying.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/366814454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367194809",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-367194809",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 367194809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE5NDgwOQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T02:38:26Z",
    "updated_at": "2018-02-21T02:38:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding notes here for people designing interfaces (originally discussed in solidity-dev).\r\n\r\n# Test case\r\n\r\n```solidity\r\npragma solidity ^0.4.20;\r\n\r\ncontract Items {\r\n    uint256[] public oddNumbers;\r\n    \r\n    function Items() public {\r\n        oddNumbers.push(1);\r\n    }\r\n    \r\n    function extendSequence() external {\r\n        uint256 next = oddNumbers[oddNumbers.length-1] + 2;\r\n        require(next >= oddNumbers[oddNumbers.length-1]);\r\n        oddNumbers.push(next);\r\n    }\r\n    \r\n    function oddNumbersLength() external view returns (uint256) {\r\n        return oddNumbers.length;\r\n    }\r\n    \r\n    function oddNumbersAll() external view returns (uint256[]) {\r\n        return oddNumbers;\r\n    }\r\n}\r\n```\r\n\r\nThis exposes two interfaces for interrogating `oddNumbers`:\r\n\r\n# Piecemeal\r\n\r\n```solidity\r\nfunction oddNumbers(uint256 index) external view returns (uint256); // Implicitly defined;\r\nfunction oddNumbersLength() external view returns (uint256);\r\n```\r\n\r\n# All-at-once\r\n\r\n```solidity\r\nfunction oddNumbersAll() external view returns (uint256[]);\r\n```\r\n\r\n# Discussion\r\n\r\n The piecemeal approach is guaranteed to always work. But the all-at-once approach will fail for on-blockchain calls after the array reaches a certain length. This is because memory is copied, it is not `mmap`ed.\r\n\r\nIf we live in a world where we see:\r\n\r\n```solidity\r\nuint a;\r\nuint b;\r\nuint total = a + b;\r\nrequire(total > a);\r\n```\r\n\r\nthen I think it is important to make the above stipulation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367194809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375146148",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-375146148",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 375146148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTE0NjE0OA==",
    "user": {
      "login": "beether",
      "id": 28908611,
      "node_id": "MDQ6VXNlcjI4OTA4NjEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/28908611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beether",
      "html_url": "https://github.com/beether",
      "followers_url": "https://api.github.com/users/beether/followers",
      "following_url": "https://api.github.com/users/beether/following{/other_user}",
      "gists_url": "https://api.github.com/users/beether/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beether/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beether/subscriptions",
      "organizations_url": "https://api.github.com/users/beether/orgs",
      "repos_url": "https://api.github.com/users/beether/repos",
      "events_url": "https://api.github.com/users/beether/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beether/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T01:13:09Z",
    "updated_at": "2018-03-22T01:13:22Z",
    "author_association": "NONE",
    "body": "I was looking for this exact feature and found it implemented 8 hours ago.  Awesome work.  Looking forward to the nightly build!\r\n\r\n@fulldecent Spot on with the Piecemeal approach. Not exposing an indexed getter() could be a security risk.  Is it possible to have an compiler warning for views returning dynamic arrays-of-arrays that the response is not always guaranteed to work?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375146148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375180066",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-375180066",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 375180066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTE4MDA2Ng==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T04:58:07Z",
    "updated_at": "2018-03-22T04:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beether The compiler will not check for that because it is too difficult and requires conventions.\r\n\r\nA new new SALOAD instruction (storage load from arbitrary account) would solve this. Then you could do:\r\n\r\n```solidity\r\npragma solidity ^0.4.21;\r\n\r\ncontract Array {\r\n    uint[] public a;\r\n}\r\n\r\ncontract Inspector {\r\n    function getLength(Array _addr) external view returns (uint){\r\n        return _addr.a.length;\r\n    }\r\n\r\n    function getIndex(Array _addr, uint _index) external view returns (uint){\r\n        return _addr.a(_index);\r\n    }\r\n}\r\n```\r\n\r\nMy idea here does not have consensus. And it is a breaking change to a fundamental concept (the implicit functions) -- it would not be accepted.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375180066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375235409",
    "html_url": "https://github.com/ethereum/solidity/issues/3270#issuecomment-375235409",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3270",
    "id": 375235409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTIzNTQwOQ==",
    "user": {
      "login": "beether",
      "id": 28908611,
      "node_id": "MDQ6VXNlcjI4OTA4NjEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/28908611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beether",
      "html_url": "https://github.com/beether",
      "followers_url": "https://api.github.com/users/beether/followers",
      "following_url": "https://api.github.com/users/beether/following{/other_user}",
      "gists_url": "https://api.github.com/users/beether/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beether/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beether/subscriptions",
      "organizations_url": "https://api.github.com/users/beether/orgs",
      "repos_url": "https://api.github.com/users/beether/repos",
      "events_url": "https://api.github.com/users/beether/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beether/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T09:40:32Z",
    "updated_at": "2018-03-22T09:40:32Z",
    "author_association": "NONE",
    "body": "@fulldecent Couldn't the compiler warn anytime a view returns arrays-of-arrays? It's similar to an infinite gas warning.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/375235409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
