{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11051",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11051/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11051/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11051/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11051",
  "id": 822107904,
  "node_id": "MDU6SXNzdWU4MjIxMDc5MDQ=",
  "number": 11051,
  "title": "Disallow function signatures that have same name and same implicitly convertable arguments",
  "user": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-03-04T12:56:50Z",
  "updated_at": "2022-09-14T17:12:40Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Was bought up in solidity gitter\r\n\r\n```\r\nlibrary Lib {\r\n    function foo(bytes32) internal pure returns (bytes32) {}\r\n    function foo(bytes4) internal pure returns (bytes32) {}\r\n}\r\n```\r\n\r\nCompiles correctly,\r\n\r\nHowever\r\n\r\n```\r\nbytes4 b = 0x01020304;    \r\nLib.foo(b);\r\n```\r\n\r\nreturns\r\n\r\n```\r\nError: Member \"foo\" not unique after argument-dependent lookup in type(library Lib).\r\n  --> <stdin>:10:10:\r\n   |\r\n10 | \t\treturn Lib.foo(b);\r\n   | \t\t       ^^^^^^^\r\n\r\n````\r\n\r\nI think because `bytes4` can be implicitly converted to `bytes32` making the resolution not unique.\r\n\r\nOn the other hand, it's probably impossible to make an internal call to `function foo(bytes4)`. External calls have to be made by manually using `.call` and manual encoding.\r\n\r\n---\r\n\r\nI think we should have an error during `checkDuplicateFunctions` if two functions have the same name and their arguments can be implicitly converted to each other.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11051/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11051/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790598938",
    "html_url": "https://github.com/ethereum/solidity/issues/11051#issuecomment-790598938",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11051",
    "id": 790598938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDU5ODkzOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-04T12:58:00Z",
    "updated_at": "2021-03-04T12:58:00Z",
    "author_association": "MEMBER",
    "body": "Related to https://github.com/ethereum/solidity/issues/1256",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790598938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/800477175",
    "html_url": "https://github.com/ethereum/solidity/issues/11051#issuecomment-800477175",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11051",
    "id": 800477175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDQ3NzE3NQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T17:48:53Z",
    "updated_at": "2021-03-16T17:54:54Z",
    "author_association": "MEMBER",
    "body": "The issue https://github.com/ethereum/solidity/issues/1256 proposes that the conversion should be allowed.\r\n\r\nMy arguments for disallowing it would be:\r\n1. Calling such functions from the frontend becomes more complicated. For example, if there is `f(uint)` and `f(uint128)`, calling either of them from the front-end is not as straightforward as `contract.f(10)`. Even though frontends seem to have support for calling them [ether.js: overloaded functions](https://docs.ethers.io/v5/migration/web3/) and [web3.py: invoke ambigous functions](https://web3py.readthedocs.io/en/stable/contracts.html#invoke-ambiguous-contract-functions-example)\r\n2. Allowing it would mean adding more rules to reference resolution.\r\n\r\n\r\nOn the other hand, we have the following issues if this is disallowed:\r\n1. Unable to write interfaces to contracts that have already implemented this. Both existing solidity contracts, and contracts from other languages.\r\n2. Perhaps this would affect templated functions. Say for templated function `f<T>(T val)`, this might mean that `f<uint>` and `f<uint128>` cannot coexist.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/800477175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
