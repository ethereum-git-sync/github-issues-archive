{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4678/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4678/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4678/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4678",
  "id": 347527622,
  "node_id": "MDU6SXNzdWUzNDc1Mjc2MjI=",
  "number": 4678,
  "title": "Add option to output constructor bytecode by itself",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-08-03T20:32:34Z",
  "updated_at": "2022-08-17T13:48:54Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In order to allow for proxy-style contracts where the bytecode is not redeployed but instead ran via `delegatecall`, the constructor needs to be somehow extracted so that it can be stored on-chain in such a way that it can be invoked for every new instance. There is currently no easy way to extract this bytecode from the Solidity compiled contract because it uses `codecopy` (and `codesize`) to obtain its arguments, and additionally it returns all of the runtime code which would not be necessary in this scenario.\r\n\r\nThis issue is to discuss possible ways in which the compiler can help this use case.\r\n\r\nThere is already an option to output the runtime code by itself (`bin-runtime`), so I think it would make sense to add an option to output the constructor code by itself. I'm not sure where this code would take its arguments from, though. The most convenient thing for the use case described above would be to take them from calldata. It could also simply assume that they are in memory, and in order to use it you'd have to prepend argument-loading code, but I think that presents issues with the jumps in the bytecode being absolute.\r\n\r\nWhat do you think?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4678/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4678/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410702750",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-410702750",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 410702750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDcwMjc1MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T13:11:32Z",
    "updated_at": "2018-08-06T13:11:32Z",
    "author_association": "MEMBER",
    "body": "I don't think that messing around with binaries is such a good idea, especially because it forces us to think about many different ways to use the compiler output. Would it be an option for you to modify the source code by deleting everything that is not needed at construction time and then use a delegatecall proxy in the fallback function?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410702750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439397667",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-439397667",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 439397667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM5NzY2Nw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T13:47:28Z",
    "updated_at": "2018-11-16T13:47:28Z",
    "author_association": "MEMBER",
    "body": "Hi @frangio , any updates on this discussion?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/439397667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/440290298",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-440290298",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 440290298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI5MDI5OA==",
    "user": {
      "login": "ajsantander",
      "id": 550409,
      "node_id": "MDQ6VXNlcjU1MDQwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/550409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsantander",
      "html_url": "https://github.com/ajsantander",
      "followers_url": "https://api.github.com/users/ajsantander/followers",
      "following_url": "https://api.github.com/users/ajsantander/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsantander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsantander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsantander/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsantander/orgs",
      "repos_url": "https://api.github.com/users/ajsantander/repos",
      "events_url": "https://api.github.com/users/ajsantander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsantander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T14:23:09Z",
    "updated_at": "2018-11-20T14:23:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leonardoalt we are studying the situation and will get back to you soon. Thx for keeping this under your radar =)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/440290298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/440465803",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-440465803",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 440465803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQ2NTgwMw==",
    "user": {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T23:26:25Z",
    "updated_at": "2018-11-20T23:26:25Z",
    "author_association": "NONE",
    "body": "Hey folks! My apologies, I totally missed the original response by @chriseth. \r\n\r\n> Would it be an option for you to modify the source code by deleting everything that is not needed at construction time and then use a delegatecall proxy in the fallback function?\r\n\r\nModifying the source code is not straightforward, since we'd need a semantic analysis to know which functions are actually used by the constructor, in order to delete the others. Even if we manage to do it, we'd also need to strip the constructor code of the `return` statement that returns the runtime bytecode.\r\n\r\nI think that we need some way to tap into the ContractCompiler for the constructor function (as in https://github.com/ethereum/solidity/blob/develop/libsolidity/codegen/ContractCompiler.cpp#L215), and compile the function into a contract, instead of into a ctor. However, as you say, having a compiler option for that use case may be too specific, and would end up convoluting the compiler.\r\n\r\nWe'll go back to the drawing board and see if there is a better way to handle this. Do you think it would be reasonable/possible to expand solc-js to expose more internal features of the compiler, to accommodate for this kind of use cases?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/440465803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441718450",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-441718450",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 441718450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTcxODQ1MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T17:08:26Z",
    "updated_at": "2018-11-26T17:08:26Z",
    "author_association": "MEMBER",
    "body": "solc-js is meant to be just a tiny boilerplate over standard-json. We can extend standard-json, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441718450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/455641755",
    "html_url": "https://github.com/ethereum/solidity/issues/4678#issuecomment-455641755",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4678",
    "id": 455641755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY0MTc1NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T18:25:26Z",
    "updated_at": "2019-01-18T18:25:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "In https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1162, we've come accross the need to retrieve a contract's constructor bytecode from Solidity itself, as opposed to having it outputted by the compiler. https://github.com/ethereum/solidity/pull/5775 added the ability to get creation and runtime code, but the constructor by itself could be used to craft a call that initializes a new contract's storage and creates a proxy to a backing implementation contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/455641755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
