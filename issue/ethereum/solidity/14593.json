{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14593",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14593/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14593/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14593/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14593",
  "id": 1931638679,
  "node_id": "I_kwDOAm_5kc5zIneX",
  "number": 14593,
  "title": "[PowerPC] error: no match for call to '(const ranges::views::slice_fn)",
  "user": {
    "login": "barracuda156",
    "id": 92015510,
    "node_id": "U_kgDOBXwLlg",
    "avatar_url": "https://avatars.githubusercontent.com/u/92015510?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barracuda156",
    "html_url": "https://github.com/barracuda156",
    "followers_url": "https://api.github.com/users/barracuda156/followers",
    "following_url": "https://api.github.com/users/barracuda156/following{/other_user}",
    "gists_url": "https://api.github.com/users/barracuda156/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barracuda156/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barracuda156/subscriptions",
    "organizations_url": "https://api.github.com/users/barracuda156/orgs",
    "repos_url": "https://api.github.com/users/barracuda156/repos",
    "events_url": "https://api.github.com/users/barracuda156/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barracuda156/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-10-08T04:33:20Z",
  "updated_at": "2023-10-08T04:33:20Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "This is on a big-endian platform, with z3 disabled due to https://github.com/ethereum/solidity/issues/14592\r\n\r\n```\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp: In member function 'std::map<long unsigned int, solidity::evmasm::Inliner::InlinableBlock> solidity::evmasm::Inliner:determineInlinableBlocks(const solidity::evmasm::AssemblyItems&) const':\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:117:95: error: no match for call to '(const ranges::views::slice_fn) (long unsigned int, std::tuple_element<0, ranges::common_pair<unsigned int, const solidity::evmasm::AssemblyItem&> >::type)'\r\n  117 |                         ranges::span<AssemblyItem const> block = _items | ranges::views::slice(*lastTag + 1, index + 1);\r\n      |                                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:35:\r\n/opt/local/include/range/v3/view/slice.hpp:277:18: note: candidate: 'template<class Rng, bool CPP_true, typename std::enable_if<(viewable_range<T> && CPP_true), int>::type <anonymous>, typename std::enable_if<((forward_range<Rng> || (input_range<Rng> && sized_range<Rng>)) && CPP_true), int>::type <anonymous> > auto ranges::views::slice_base_fn::operator()(Rng&&, ranges::detail::from_end_of_t<Rng>, ranges::end_fn) const'\r\n  277 |             auto operator()(Rng && rng,\r\n      |                  ^~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:277:18: note:   template argument deduction/substitution failed:\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:117:95: note:   candidate expects 3 arguments, 2 provided\r\n  117 |                         ranges::span<AssemblyItem const> block = _items | ranges::views::slice(*lastTag + 1, index + 1);\r\n      |                                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:268:18: note: candidate: 'template<class Rng, bool CPP_true, typename std::enable_if<(viewable_range<T> && CPP_true), int>::type <anonymous>, typename std::enable_if<(input_range<Rng> && CPP_true), int>::type <anonymous> > auto ranges::views::slice_base_fn::operator()(Rng&&, ranges::range_difference_t<Rng>, ranges::end_fn) const'\r\n  268 |             auto operator()(Rng && rng, range_difference_t<Rng> from, end_fn) const\r\n      |                  ^~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:268:18: note:   template argument deduction/substitution failed:\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:117:95: note:   candidate expects 3 arguments, 2 provided\r\n  117 |                         ranges::span<AssemblyItem const> block = _items | ranges::views::slice(*lastTag + 1, index + 1);\r\n      |                                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:252:18: note: candidate: 'template<class Rng, bool CPP_true, typename std::enable_if<(viewable_range<T> && CPP_true), int>::type <anonymous>, typename std::enable_if<((forward_range<Rng> || (input_range<Rng> && sized_range<Rng>)) && CPP_true), int>::type <anonymous> > auto ranges::views::slice_base_fn::operator()(Rng&&, ranges::detail::from_end_of_t<Rng>, ranges::detail::from_end_of_t<Rng>) const'\r\n  252 |             auto operator()(Rng && rng,\r\n      |                  ^~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:252:18: note:   template argument deduction/substitution failed:\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:117:95: note:   candidate expects 3 arguments, 2 provided\r\n  117 |                         ranges::span<AssemblyItem const> block = _items | ranges::views::slice(*lastTag + 1, index + 1);\r\n      |                                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:235:18: note: candidate: 'template<class Rng, bool CPP_true, typename std::enable_if<(viewable_range<T> && CPP_true), int>::type <anonymous>, typename std::enable_if<(input_range<Rng> && CPP_true), int>::type <anonymous>, typename std::enable_if<(sized_range<Rng> && CPP_true), int>::type <anonymous> > auto ranges::views::slice_base_fn::operator()(Rng&&, ranges::range_difference_t<Rng>, ranges::detail::from_end_of_t<Rng>) const'\r\n  235 |             auto operator()(Rng && rng,\r\n      |                  ^~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:235:18: note:   template argument deduction/substitution failed:\r\n/opt/local/var/macports/build/_opt_PPCSnowLeopardPorts_lang_solidity/solidity/work/solidity_0.8.21/libevmasm/Inliner.cpp:117:95: note:   candidate expects 3 arguments, 2 provided\r\n  117 |                         ranges::span<AssemblyItem const> block = _items | ranges::views::slice(*lastTag + 1, index + 1);\r\n      |                                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/opt/local/include/range/v3/view/slice.hpp:222:28: note: candidate: 'template<class Rng, bool CPP_true, typename std::enable_if<(viewable_range<T> && CPP_true), int>::type <anonymous>, typename std::enable_if<(input_range<Rng> && CPP_true), int>::type <anonymous> > constexpr auto ranges::views::slice_base_fn::operator()(Rng&&, ranges::range_difference_t<Rng>, ranges::range_difference_t<Rng>) cons'\r\n  222 |             constexpr auto operator()(Rng && rng,\r\n      |                            ^~~~~~~~                                                                       ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14593/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14593/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
