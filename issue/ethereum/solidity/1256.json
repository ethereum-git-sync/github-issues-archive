{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1256/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1256/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1256/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1256",
  "id": 184222538,
  "node_id": "MDU6SXNzdWUxODQyMjI1Mzg=",
  "number": 1256,
  "title": "Ranked overload resolution",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438481746,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3bUg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have%20eventually",
      "name": "must have eventually",
      "color": "ffb04d",
      "default": false,
      "description": "Something we consider essential but not enough to prevent us from releasing Solidity 1.0 without it."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-10-20T12:58:29Z",
  "updated_at": "2022-11-05T09:56:15Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently, functions are selected as overload candidates if all arguments can be implicitly converted to the expected types. If there is not exactly one candidate, resolution fails.\nThis makes it impossible to call different functions depending on whether one argument is a storage or a memory array, because storage arrays can be implicitly converted to both storage and memory arrays.\nWe should add a ranking of candidates depending on which conversions have to take place.\nFor this, a conversion from e.g. storage to memory should be \"worse\" than a widening of an integer type which in turn is worse than no conversion at all.\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1256/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1256/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/255989935",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-255989935",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 255989935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk4OTkzNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T09:51:54Z",
    "updated_at": "2016-10-25T09:53:51Z",
    "author_association": "MEMBER",
    "body": "This is needed so much!\n\nThe case when there's an exact match with other convertible types should be fixed very soon. I've this problem `uint`s:\n\n```\ncontract A {\n  function a(uint32 x) {}\n  function a(uint x) {}\n  function b() {\n    uint32 c = 1;\n    a(c);\n  }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/255989935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/295984143",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-295984143",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 295984143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTk4NDE0Mw==",
    "user": {
      "login": "apmilen",
      "id": 2745728,
      "node_id": "MDQ6VXNlcjI3NDU3Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2745728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apmilen",
      "html_url": "https://github.com/apmilen",
      "followers_url": "https://api.github.com/users/apmilen/followers",
      "following_url": "https://api.github.com/users/apmilen/following{/other_user}",
      "gists_url": "https://api.github.com/users/apmilen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apmilen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apmilen/subscriptions",
      "organizations_url": "https://api.github.com/users/apmilen/orgs",
      "repos_url": "https://api.github.com/users/apmilen/repos",
      "events_url": "https://api.github.com/users/apmilen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apmilen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-21T00:24:38Z",
    "updated_at": "2017-04-21T00:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, I just encountered this issue and was wondering what the plan is for incorporating a fix?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/295984143/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/296150323",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-296150323",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 296150323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjE1MDMyMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-21T10:03:41Z",
    "updated_at": "2017-04-21T10:03:41Z",
    "author_association": "MEMBER",
    "body": "We have to define the order of resolution for every possible conversion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/296150323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396055028",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-396055028",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 396055028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA1NTAyOA==",
    "user": {
      "login": "dmihal",
      "id": 1661138,
      "node_id": "MDQ6VXNlcjE2NjExMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1661138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmihal",
      "html_url": "https://github.com/dmihal",
      "followers_url": "https://api.github.com/users/dmihal/followers",
      "following_url": "https://api.github.com/users/dmihal/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmihal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmihal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmihal/subscriptions",
      "organizations_url": "https://api.github.com/users/dmihal/orgs",
      "repos_url": "https://api.github.com/users/dmihal/repos",
      "events_url": "https://api.github.com/users/dmihal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmihal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T14:51:00Z",
    "updated_at": "2018-06-10T14:51:00Z",
    "author_association": "NONE",
    "body": "Just bumped into this issue, with `function foo(uint152 x)` and `function foo(address x)`.\r\n\r\nIs this issue still unresolved?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396055028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/400406109",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-400406109",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 400406109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQwNjEwOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T17:53:54Z",
    "updated_at": "2018-06-26T17:53:54Z",
    "author_association": "MEMBER",
    "body": "I'll add it to 0.6.0.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/400406109/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/728267032",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-728267032",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 728267032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODI2NzAzMg==",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-16T19:13:02Z",
    "updated_at": "2020-11-16T19:13:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the current thinking around this issue ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/728267032/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/891683371",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-891683371",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 891683371,
    "node_id": "IC_kwDOAm_5kc41JgIr",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T09:19:50Z",
    "updated_at": "2021-08-03T09:20:49Z",
    "author_association": "MEMBER",
    "body": "I think this could be done in a non-breaking way (because after this change, I think more code compiles than before) - can someone please check?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/891683371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/891714883",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-891714883",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 891714883,
    "node_id": "IC_kwDOAm_5kc41Jn1D",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T10:05:47Z",
    "updated_at": "2021-08-03T10:05:47Z",
    "author_association": "MEMBER",
    "body": "My proposal for a simple implementation is: If there is a unique function where the argument types are equal (including storage location), use this one. Otherwise do overload resolution as we currently do it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/891714883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031601549",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-1031601549",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 1031601549,
    "node_id": "IC_kwDOAm_5kc49fP2N",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T15:35:01Z",
    "updated_at": "2022-02-07T15:55:56Z",
    "author_association": "MEMBER",
    "body": "I have an idea. What if, instead of adding implicit rules on overload resolution we added a way to clarify the type of an argument?\r\n\r\nMy proposal would be to introduce a special conversion operator, let's call it `exact()`, that would make its argument not implicitly convertible to anything. Example:\r\n\r\n```solidity\r\nfunction foo(uint256 x) {}\r\nfunction foo(uint32 x) {}\r\nfunction foo(address x) {}\r\nfunction foo(string memory x) {}\r\nfunction foo(string storage x) {}\r\n\r\nfunction test() {\r\n    uint32 x;\r\n    foo(exact(x));          // calls foo(uint32)\r\n    foo(exact(uint(x)));    // calls foo(uint256)\r\n    foo(x);                 // ERROR: ambiguous\r\n\r\n    address a;\r\n    foo(a);                 // calls foo(address) directly\r\n    foo(payable(a));        // calls foo(address) through implicit conversion\r\n    foo(exact(payable(a))); // ERROR: foo(payable) does not exist; implicit conversion to address not allowed\r\n\r\n    string storage s;\r\n    foo(s);                 // ERROR: ambiguous\r\n    foo(exact(s));          // calls foo(string storage)\r\n\r\n    // If we introduce the copyof operator:\r\n    foo(copyof s);          // ERROR: ambiguous\r\n    foo(exact(copyof s));   // calls foo(string memory)\r\n    foo(exact(memory(s));   // calls foo(string memory) - possible alternative if we don't\r\n}\r\n```\r\n\r\nThe operator would affect the expression rather than \"stick\" to the value. When you copy/assign a value, it does not preserve the \"exactness\". I.e. after `uint32 y = exact(uint32(x))`, `y` is again implicitly convertible to `uint`.\r\n\r\nSome alternative syntax ideas:\r\n```solidity\r\nfoo(x, exact payable(a), y);\r\nfoo(x, exact<payable>(a), y);\r\nfoo(x, exact|payable(a)|, y);\r\nfoo(x, |payable(a)|, y);\r\n\r\nfoo(x, only(payable(a)), y);\r\nfoo(x, explicit(payable(a)), y);\r\nfoo(x, noconv(payable(a)), y);\r\nfoo(x, asIs(payable(a)), y);\r\n\r\n// We could also allow making variables permanently exact:\r\naddress payable exact constant b;\r\nfoo(x, b, y);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031601549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031646731",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-1031646731",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 1031646731,
    "node_id": "IC_kwDOAm_5kc49fa4L",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T16:13:38Z",
    "updated_at": "2022-02-07T16:15:30Z",
    "author_association": "MEMBER",
    "body": "I would actually say we can relax this even more radically.\r\nImplicit conversions induce an ordering of types, e.g. ``uint8 < uint16 < uint64 < uint256``.\r\nWe can actually use this order for this.\r\nSo in\r\n```\r\nfunction f(uint64) {}\r\nfunction f(uint256) {}\r\nf(uint8(0));\r\n```\r\nwe can just disregard ``f(uint256)``, since ``uint64`` is implicitly convertible to ``uint256`` and thereby ``uint64`` is strictly more specialized than ``uint256``.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031646731/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031652465",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-1031652465",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 1031652465,
    "node_id": "IC_kwDOAm_5kc49fcRx",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T16:18:34Z",
    "updated_at": "2022-02-07T16:19:36Z",
    "author_association": "MEMBER",
    "body": "So in general, if I have two overload choices ``f(A)`` and ``f(B)``, I can disregard ``f(B)`` exactly if ``A`` is implicitly convertible to ``B``, but ``B`` is not implicitly convertible to ``A``. That works even if the argument type that triggered the overload resolution is merely implicitly convertible to ``A``, but not identical to ``A``.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031652465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1304465649",
    "html_url": "https://github.com/ethereum/solidity/issues/1256#issuecomment-1304465649",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1256",
    "id": 1304465649,
    "node_id": "IC_kwDOAm_5kc5NwJDx",
    "user": {
      "login": "paulrberg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulrberg",
      "html_url": "https://github.com/paulrberg",
      "followers_url": "https://api.github.com/users/paulrberg/followers",
      "following_url": "https://api.github.com/users/paulrberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulrberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulrberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulrberg/subscriptions",
      "organizations_url": "https://api.github.com/users/paulrberg/orgs",
      "repos_url": "https://api.github.com/users/paulrberg/repos",
      "events_url": "https://api.github.com/users/paulrberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulrberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-05T09:56:15Z",
    "updated_at": "2022-11-05T09:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Chiming in to cast my support for this.\r\n\r\nAs I explained [here](https://forum.soliditylang.org/t/no-unique-declaration-found-when-overloading-functions-with-integers-of-different-sizes/1308), I find it a bit confusing that the compiler cannot disambiguate between two functions `f(uint64)` and `f(uint256)`.\r\n\r\nOverloading functions with different integer width is super common when writing tests with Foundry.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1304465649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
