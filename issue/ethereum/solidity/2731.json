{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/2731/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/2731/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/2731/events",
  "html_url": "https://github.com/ethereum/solidity/issues/2731",
  "id": 249632979,
  "node_id": "MDU6SXNzdWUyNDk2MzI5Nzk=",
  "number": 2731,
  "title": "Sort order of methods in generated JSON ABI",
  "user": {
    "login": "MidnightLightning",
    "id": 250250,
    "node_id": "MDQ6VXNlcjI1MDI1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MidnightLightning",
    "html_url": "https://github.com/MidnightLightning",
    "followers_url": "https://api.github.com/users/MidnightLightning/followers",
    "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
    "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
    "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
    "repos_url": "https://api.github.com/users/MidnightLightning/repos",
    "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 24,
  "created_at": "2017-08-11T13:17:48Z",
  "updated_at": "2019-09-06T11:56:29Z",
  "closed_at": "2019-09-04T15:18:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I first noticed this issue on various sites like Etherscan and Remix, which use the Solidity compiler, and have been pointed here as the source of the issue.\r\n\r\nWhen the JSON ABI is generated, the order of the methods/events in the JSON object seems to be arbitrary. It's not alphabetical, and it's not in the same order as the methods are presented in the contract. For a contract with many functions, that makes it a royal pain to try and find the one you care about. And for sites that just take the ABI and show the methods in order (like the Etherscan website takes the ABI and any of the `constant` ones it shows in ABI-order on the \"Read Contract\" tab ([example](https://etherscan.io/address/0x78faea8994efe7fc448e743b7b342e1a96ba3807#readContract)). Scanning through that list for the one method you care about is rather tedious.\r\n\r\nI'd suggest ordering the items in the generated JSON ABI blob in the same order they are in the contract's source code. The compiler has all the information it needs to figure out that order, and if a particular website/DApp wants to have it in alphabetical order, they can sort on their own. If it was the other way around, websites using the JSON ABI blob wouldn't be able to sort by the contract source code ordering without parsing the source code itself (which it may or may not have access to).",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/2731/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/2731/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/321839854",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-321839854",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 321839854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTgzOTg1NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T15:10:42Z",
    "updated_at": "2017-08-11T15:10:42Z",
    "author_association": "MEMBER",
    "body": "Can you please explain what would be the benefit sorting it in a certain way? Even if that certain way does not suit everyone and thus they will sort it again?\r\n\r\nNote, it is sorted by Remix in a certain way already.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/321839854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/321852562",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-321852562",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 321852562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTg1MjU2Mg==",
    "user": {
      "login": "MidnightLightning",
      "id": 250250,
      "node_id": "MDQ6VXNlcjI1MDI1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MidnightLightning",
      "html_url": "https://github.com/MidnightLightning",
      "followers_url": "https://api.github.com/users/MidnightLightning/followers",
      "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
      "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
      "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
      "repos_url": "https://api.github.com/users/MidnightLightning/repos",
      "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T16:02:17Z",
    "updated_at": "2017-08-11T16:05:45Z",
    "author_association": "NONE",
    "body": "The current ordering appears to be random and not based on the source code nor alphabetical. What is the \"certain way\" that Remix already uses? \r\n\r\nTaking for example, my contract at `0x78FAEA8994EfE7FC448E743B7b342e1A96Ba3807` which I [linked to originally](https://etherscan.io/address/0x78faea8994efe7fc448e743b7b342e1a96ba3807#readContract): In the source of that contract, I laid out the methods in an order that makes sense for the contract itself:\r\n\r\n```\r\n...\r\ngetBookingCount(address _who) constant returns (uint count)\r\ngetBooking(address _who, uint _index) constant returns (uint _unicornCount, VisitType _type, uint _startBlock, uint _expiresBlock, VisitState _state, uint _completedBlock, uint _completedCount)\r\nbookSpaVisit(uint _unicornCount) payable\r\nbookAfternoonVisit(uint _unicornCount) payable\r\nbookDayVisit(uint _unicornCount) payabl\r\nbookOvernightVisit(uint _unicornCount) payable\r\nbookWeekVisit(uint _unicornCount) payable\r\nbookExtendedVisit(uint _unicornCount) payable\r\n...\r\n```\r\n\r\nIn this chunk of methods, those `bookFooVisit` functions are increasing length-of-stay order (an \"Overnight\" visit is longer than a \"Day\" visit, which is longer than an \"Afternoon\" visit), which makes sense for this particular contract's usage. The owner-only methods are way at the bottom to keep them out of the way, and the generic/constant methods are further up.\r\n\r\nBut currently, the generated ABI for this contract has the methods in a different order:\r\n```\r\n...\r\nbookAfternoonVisit\r\naddBooking\r\nvisitLength\r\nbirthBlockThreshold\r\nowner\r\nbookDayVisit\r\nbookOvernightVisit\r\n...\r\n```\r\nIn this chunk of the ABI ordering, the \"Afternoon\", \"Day\", and \"Overnight\" methods do happen to be in the right order, but there's other methods between them. And the \"Spa\" method is way after this chunk, and the \"Extended\" one is way before it. This is the ordering in the JSON in the generated ABI in Remix, and in Etherscan. In Remix, when the compiled contract is deployed, the form for working with the contract is in a different order:\r\n\r\n```\r\n...\r\nbookDayVisit\r\nwithdrawForeignTokens\r\nbookAfternoonVisit\r\nchangeRepoSettings\r\ncompleteBooking\r\nchangeGroveAddress\r\n...\r\n```\r\n\"Day\" is now before \"Afternoon\", as well as other changes. Remix's interaction form puts all the `constant` functions first, but other than that I can't figure out the ordering logic of the rest of the form.\r\n\r\nMy point is, any contract-interacting client can alphabetically sort these methods given a list of them. However, only the contract parsing/compiling script has access to the author's original ordering, and I believe that should be maintained both for consistency across contract-interacting clients (if they do no re-sorting, they're at least the same as everyone else) and preserving the original author's intent. The current sort ordering out of the Solidity compiler appears to have no ordering and has no benefit at all in finding the method you're interested in. So, sorting it some way would at least help the people who want it that way without any other work, would provide a sensible default, and wouldn't hamper those who still want to re-sort it another way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/321852562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/322917373",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-322917373",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 322917373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkxNzM3Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T22:29:24Z",
    "updated_at": "2017-08-16T22:29:24Z",
    "author_association": "MEMBER",
    "body": "As seen here (https://github.com/ethereum/browser-solidity/blob/master/src/app/execution/txHelper.js#L30), Remix sorts it by name and puts the `constant` functions first.\r\n\r\nI think a better solutions is to add Natspec annotations to the source code and let those tools (e.g. etherscan) display that.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/322917373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/322962976",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-322962976",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 322962976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjk2Mjk3Ng==",
    "user": {
      "login": "MidnightLightning",
      "id": 250250,
      "node_id": "MDQ6VXNlcjI1MDI1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MidnightLightning",
      "html_url": "https://github.com/MidnightLightning",
      "followers_url": "https://api.github.com/users/MidnightLightning/followers",
      "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
      "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
      "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
      "repos_url": "https://api.github.com/users/MidnightLightning/repos",
      "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T04:01:15Z",
    "updated_at": "2017-08-17T04:06:42Z",
    "author_association": "NONE",
    "body": "Aha, thanks for pointing that out! That code in Remix doesn't actually do what its intended to do. Having two separate `sort` calls means that the second sort is clobbering the first one. You end up with methods that definitely have `constant` functions first, but within the \"constant\" and \"non-constant\" groups, they're no longer in alphabetical order. For example, here's a screenshot of that contract I was using as an example in Remix:\r\n\r\n![Remix](https://user-images.githubusercontent.com/250250/29395374-f7658c3e-82d5-11e7-8ec6-dce1537795da.PNG)\r\n\r\nBut thanks for finding that code section; I [submitted a patch](https://github.com/ethereum/browser-solidity/pull/696) to fix that to actually be what's intended there for the Remix app.\r\n\r\nBut for the actual solidity compiler, possibly adding Natspec (or other style) annotations could be a robust solution down the road, but for what's available right now, with what all authors have to develop (the order of the methods in the source code), preserving that in the compiler output I think would be a decent starting point.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/322962976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325503828",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325503828",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325503828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTUwMzgyOA==",
    "user": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T22:42:59Z",
    "updated_at": "2017-08-28T22:42:59Z",
    "author_association": "NONE",
    "body": "See https://reproducible-builds.org for why a fixed order should be implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325503828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325505244",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325505244",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325505244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTUwNTI0NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T22:50:59Z",
    "updated_at": "2017-08-28T22:51:23Z",
    "author_association": "MEMBER",
    "body": "@casey thanks, this is an important topic for Solidity! The order is deterministic in every version of Solidity. It may not be the same across Solidity versions, but a contract can only be verified by the same compiler anyway.\r\n\r\nPlease see the documentation about \"reproducible builds: http://solidity.readthedocs.io/en/develop/miscellaneous.html#contract-metadata",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325505244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325505895",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325505895",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325505895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTUwNTg5NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T22:54:58Z",
    "updated_at": "2017-08-28T22:56:17Z",
    "author_association": "MEMBER",
    "body": "Also to clarify: the order in the resulting ABI JSON is determined by the order of elements in the AST.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325505895/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325848886",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325848886",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325848886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg0ODg4Ng==",
    "user": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T01:13:02Z",
    "updated_at": "2017-08-30T01:13:02Z",
    "author_association": "NONE",
    "body": "@axic Ah, sorry, I misunderstood the issue and thought that it might be different from run to run.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325848886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325857421",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325857421",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325857421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg1NzQyMQ==",
    "user": {
      "login": "MidnightLightning",
      "id": 250250,
      "node_id": "MDQ6VXNlcjI1MDI1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MidnightLightning",
      "html_url": "https://github.com/MidnightLightning",
      "followers_url": "https://api.github.com/users/MidnightLightning/followers",
      "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
      "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
      "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
      "repos_url": "https://api.github.com/users/MidnightLightning/repos",
      "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T02:10:00Z",
    "updated_at": "2017-08-30T02:10:00Z",
    "author_association": "NONE",
    "body": "@axic \r\n>  the order in the resulting ABI JSON is determined by the order of elements in the AST.\r\n\r\nI don't think that's true; that's the whole issue I'm trying to make. In my example it clearly is _not_ sorted by the order of the elements in the contract source code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325857421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325860368",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-325860368",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 325860368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg2MDM2OA==",
    "user": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T02:28:51Z",
    "updated_at": "2017-08-30T02:28:51Z",
    "author_association": "NONE",
    "body": "Actually, wanted to add an additional reason that you might want to have a defined sorting order (for example, alphabetically) that doesn't change between versions.\r\n\r\nIf a developer is working on a smart contract and wants to verify that the ABI doesn't change unexpectedly, they might commit the ABI to revision control, so that on changes they see differences in git diffs. If the order of elements in the ABI changes when they upgrade solc, this would make that more difficult.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/325860368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/326009645",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-326009645",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 326009645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjAwOTY0NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T14:33:19Z",
    "updated_at": "2017-08-30T14:33:19Z",
    "author_association": "MEMBER",
    "body": "@MidnightLightning to clarify most of them are *sorted* by a C++ `map`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/326009645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/326013053",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-326013053",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 326013053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjAxMzA1Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T14:43:55Z",
    "updated_at": "2017-08-30T14:43:55Z",
    "author_association": "MEMBER",
    "body": "There are two options: a) sort by AST order or b) sort lexicographically. Only b) properly satisifes @casey's scenario.\r\n\r\nThough not fully convinced the ABI should be checked by diff and not using an actual comparison tool (i.e. annotations in the ABI may change with versions without actually affecting the ABI), but I admit git doesn't make it easy.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/326013053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/411187367",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-411187367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 411187367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE4NzM2Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T20:15:37Z",
    "updated_at": "2018-08-07T20:16:19Z",
    "author_association": "MEMBER",
    "body": "I suggest that we sort it deterministically as follows: lexicographic sorting by the values of the following keys:\r\n- type\r\n- name\r\n- inputs\r\n- outputs\r\n\r\nThat means the usual order will be something like:\r\n- constructor\r\n- event(address, address)\r\n- event(uint, address)\r\n- fallback\r\n- function(address, address)\r\n- function(uint, address)\r\n\r\nThe sorting should be added in the `ABI::generate` method [here](https://github.com/ethereum/solidity/blob/develop/libsolidity/interface/ABI.cpp#L28)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/411187367/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/526799404",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-526799404",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 526799404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjc5OTQwNA==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T04:47:22Z",
    "updated_at": "2019-08-31T05:13:47Z",
    "author_association": "NONE",
    "body": "I have been working on creating a deterministic ABI hash in canonical form. I posted on [ethresearch](https://ethresear.ch/t/deterministic-abis/6064) and then later found your above suggestion. \r\n\r\nBefore seeing this I had started both a [Python](https://github.com/second-state/smart-contract-search-engine/blob/2bdc1924a69592216ae3f055383c3bdd4f2cb205/python/harvest.py#L292) and [Javascript](https://github.com/second-state/es-ss.js/blob/99853ff11b39fd45aab94e605476c0dd58a01e1e/research_and_development/js/shaAnAbi.js#L25) implementation of something similar.\r\n\r\nI also go inside the values of keys like `inputs` and `outputs` and then sort by the values of the keys in each of their internal items.\r\n\r\nEventually I want to get a reliable unique hash per ABI. It is interesting how Python's `json.dumps()` and Javascript's `JSON.stringify()` even produce different output formats. They don't make it easy for us do they? :)\r\n\r\nPerhaps the output ABI (for hashing) should just be sanitized to have no tabs, spaces, newlines whatsoever. This would be more reliable than hacking around with the nuances of each language's JSON serialization libraries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/526799404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527019304",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527019304",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527019304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzAxOTMwNA==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T06:28:56Z",
    "updated_at": "2019-09-02T07:09:30Z",
    "author_association": "NONE",
    "body": "Hi @axic and @jacqueswww,\r\nI have written this in Python for now (today).\r\n\r\n# Example ERC20 input - unsorted\r\n```\r\n[{\"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{\"name\": \"\", \"type\": \"string\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_spender\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"approve\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_from\", \"type\": \"address\"}, {\"name\": \"_to\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"transferFrom\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{\"name\": \"\", \"type\": \"uint8\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}], \"name\": \"balanceOf\", \"outputs\": [{\"name\": \"balance\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"name\": \"\", \"type\": \"string\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_to\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"transfer\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}, {\"name\": \"_spender\", \"type\": \"address\"}], \"name\": \"allowance\", \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"name\": \"owner\", \"type\": \"address\"}, {\"indexed\": true, \"name\": \"spender\", \"type\": \"address\"}, {\"indexed\": false, \"name\": \"value\", \"type\": \"uint256\"}], \"name\": \"Approval\", \"type\": \"event\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"name\": \"from\", \"type\": \"address\"}, {\"indexed\": true, \"name\": \"to\", \"type\": \"address\"}, {\"indexed\": false, \"name\": \"value\", \"type\": \"uint256\"}], \"name\": \"Transfer\", \"type\": \"event\"}]\r\n```\r\n# Example ERC20 output - sorted\r\n```\r\n[{\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"name\": \"owner\", \"type\": \"address\"}, {\"indexed\": true, \"name\": \"spender\", \"type\": \"address\"}, {\"indexed\": false, \"name\": \"value\", \"type\": \"uint256\"}], \"name\": \"Approval\", \"type\": \"event\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"name\": \"from\", \"type\": \"address\"}, {\"indexed\": true, \"name\": \"to\", \"type\": \"address\"}, {\"indexed\": false, \"name\": \"value\", \"type\": \"uint256\"}], \"name\": \"Transfer\", \"type\": \"event\"}, {\"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\"}, {\"constant\": true, \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}, {\"name\": \"_spender\", \"type\": \"address\"}], \"name\": \"allowance\", \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_spender\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"approve\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}], \"name\": \"balanceOf\", \"outputs\": [{\"name\": \"balance\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{\"name\": \"\", \"type\": \"uint8\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{\"name\": \"\", \"type\": \"string\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"name\": \"\", \"type\": \"string\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_to\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"transfer\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"constant\": false, \"inputs\": [{\"name\": \"_from\", \"type\": \"address\"}, {\"name\": \"_to\", \"type\": \"address\"}, {\"name\": \"_value\", \"type\": \"uint256\"}], \"name\": \"transferFrom\", \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\r\n```\r\n\r\nHere is [a link to the code](https://github.com/second-state/smart-contract-search-engine/blob/master/python/utilities_and_tests/abi_research.py).\r\n\r\nI ended up writing this without help from Libraries. Partly because we can now transpose the logic of my code to C++ and partly because (as it turns out) Python's `lambda` and Python's `itemgetter` do not entertain the fact that the fallback item in the ABI has no `name` .",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527019304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527023373",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527023373",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527023373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzAyMzM3Mw==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T06:45:36Z",
    "updated_at": "2019-09-06T11:56:29Z",
    "author_association": "NONE",
    "body": "The overall logic is as follows\r\n- sort inner lists i.e. internally sort `inputs` and `outputs` first (using multilevel sort by `type` then `name`)\r\n- sort ABI (also a multilevel sort by `type` then `name`)\r\n\r\nThe inner workings are as follows\r\n## Multilevel comparison\r\n```python\r\n    # Compare two items and return a bool\r\n    def compareItems(self, a, b):\r\n        try:\r\n            #print(\"Comparing \" + str(a['type']) + \" and \" + str(b['type']))\r\n            if str(a['type']) > str(b['type']) or str(a['type']) == str(b['type']) and str(a['name']) > str(b['name']) :\r\n                #print(\"Returning True\")\r\n                return True\r\n            else:\r\n                #print(\"Returning False\")\r\n                return False\r\n        except:\r\n            # Caters for cases where the name is not present i.e. a fallback function\r\n            #print(\"Comparing \" + str(a['type']) + \" and \" + str(b['type']))\r\n            if str(a['type']) > str(b['type']):\r\n                #print(\"Returning True\")\r\n                return True\r\n            else:\r\n                #print(\"Returning False\")\r\n                return False\r\n```\r\n## Core sort logic\r\n```\r\ndef sort(_json):\r\n    for passnum in range(len(_json)-1,0,-1):\r\n        for item in range(len(_json) - 1):\r\n            if compareItems(_json[item], _json[item+1]) == True:\r\n                temp = _json[item]\r\n                _json[item] = _json[item+1]\r\n                _json[item+1] = temp\r\n    return _json\r\n```\r\n## Driver to sort the inner inputs and outputs\r\n```\r\ndef sortInternalListsInJsonObject(_json):\r\n    for listItem in _json:\r\n        for k, v in listItem.items():\r\n            print(\"Processing \" + str(v))\r\n            # Qualify the value as a list of JSON objects\r\n            if type(v) not in (str, bool, int):\r\n                # Qualify list as needing sorting (contains more than one item)\r\n                if len(v) > 1:\r\n                    # Qualify the sortable data is JSON\r\n                    if type(v[0]) is dict:\r\n                        print(\"Processing \" + str(v))\r\n                        sort(v)\r\n                    else:\r\n                        print(\"Won't be able to parse this data, it is not JSON\")\r\n                else:\r\n                    print(\"Not enough items in the list to sort, moving on\")\r\n            else:\r\n                print(str(v) + \" is not a list, moving on ...\")\r\n    return _json\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527023373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527057862",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527057862",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527057862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzA1Nzg2Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T08:38:38Z",
    "updated_at": "2019-09-02T08:38:38Z",
    "author_association": "MEMBER",
    "body": "The current order is by function selector, by the way. I would propose to first sort by kind as suggested by @axic, then by name and then by function selector - it is quite hard to determine a sorting order of the input and output types.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527057862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527505866",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527505866",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527505866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzUwNTg2Ng==",
    "user": {
      "login": "MidnightLightning",
      "id": 250250,
      "node_id": "MDQ6VXNlcjI1MDI1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MidnightLightning",
      "html_url": "https://github.com/MidnightLightning",
      "followers_url": "https://api.github.com/users/MidnightLightning/followers",
      "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
      "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
      "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
      "repos_url": "https://api.github.com/users/MidnightLightning/repos",
      "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-03T15:18:04Z",
    "updated_at": "2019-09-03T15:18:04Z",
    "author_association": "NONE",
    "body": "Glad to see this is getting some attention! Given the difficulties of determining a \"best\" sorting order based on attributes of the function/signature, might I propose my original suggestion again: have the \"canonical\" sort be by the order the developer put the methods in the Solidity source code. That order is only known by the compiler (which is what we're talking about here); any other implementations that use the ABI down the road can determine their own alphabetical/function-type/etc.-based sort ordering if they so desire (none of those sort types require additional metadata about the original Solidity source to rearrange into that order). Doing it this way, the compiler would be acting in a more \"unbiased\" method in my opinion, and letting downstream apps add different logic to it if they so chose?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527505866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527509926",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527509926",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527509926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzUwOTkyNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-03T15:27:16Z",
    "updated_at": "2019-09-03T15:27:16Z",
    "author_association": "MEMBER",
    "body": "@MidnightLightning note that this is also not really well-defined because the functions can come from different source units. We could sort by AST id, but in that case, I would actually prefer to sort by name first.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527509926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527679821",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527679821",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527679821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzY3OTgyMQ==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-03T23:34:25Z",
    "updated_at": "2019-09-03T23:45:09Z",
    "author_association": "NONE",
    "body": "I completely understand the raw/native source code ordering approach that @MidnightLightning is proposing. However, there are a few things to consider. Please see below.\r\n\r\n**Solidity**\r\nSolidity supports multiple inheritance as well as polymorphism, and as such, specific functions can be found in multiple places and in multiple files. Would you agree that once a significant amount of inheritance and polymorphism is implemented, the smart contract kind of looses that linear source code layout anyway.\r\n\r\nSolidity has hoisting; this allows functions to be written in any order whatsoever. If source code ordering was implemented, a contract could have several different valid ABIs (depending on how the smart contract developer chose to assemble the smart contract functions and/or assemble external/inherited contracts). I guess some could see this as a feature and other could see this as a concern, if considering [reproducible builds](https://reproducible-builds.org).\r\n\r\nLet's look at this from another angle.\r\n\r\n**Vyper**\r\n\r\nA Vyper contract is saved in a single file, only. The Vyper compiler does not support inheritance or polymorphism. Vyper does not have hoisting; a function definition must appear in the source code before it can be called. This deliberate design organically creates quite an ordered sequence. At present the Vyper compiler does not perform any ordering of the ABI. The layout of the ABI appears in the same order as the layout of the source code. From this perspective, source code ordering makes a lot of sense. However I can confirm that there is still potential to re-order function positions in a contract's Vyper source code (without requiring hoisting) which will create a different ABI. \r\n\r\nSo at the end of the day, as with Solidity, there can definitely still be many different (valid) ABIs for the exact same smart contract.\r\n\r\n**Ordering**\r\nAt present, multilevel ordering (primarily) by `type`, then (secondary) by `name` does make sense. This can also be said for the internal list of `inputs` and `outputs` given that a specific individual function will never have two inputs (or outputs) with exactly the same `type` and `name`.\r\n\r\n**Hashing**\r\nGive that human readability of the ABI is desirable. Lexicographic sorting (of human readable words) can be employed throughout the entire sorting process. Whilst hashing essentially provides a unique content addressable key, sorting by hashes of already deterministic text detracts from the human readability.\r\n\r\nHowever, from a reproducible builds perspective, once the overall ABI is completely sorted (and sanitized i.e. `sub(r\"[\\n\\t\\s]*\", \"\", sortedAbi`), the end result (the high level ABI) will produce the desired key which could play a part in assisting with source code authenticity work. \r\n\r\nIn addition to this, a hash of the end result can be used in unit testing. For example, the hash can be used in Python, Rust, Javascript, C++ etc. to confirm the correct behavior of each of the different compiler's ABI sorting implementation. With eWASM around the corner it would be brilliant if the community could come up with an ordering design for keeps.\r\n\r\nHope this helps.\r\nBrilliant chatting to you all.\r\nKind regards\r\nTim\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527679821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527734400",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527734400",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527734400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzczNDQwMA==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T04:27:49Z",
    "updated_at": "2019-09-04T04:56:31Z",
    "author_association": "NONE",
    "body": "I wrote [a sorting and hashing API which you can try out here](https://etc.search.secondstate.io/shaAnAbi.html).\r\n\r\nYou can paste [the raw text of any of these unsorted mixed up ERC20 ABIs](https://github.com/tpmccallum/mixed_ordered_erc20_abis_for_testing), or [the official ERC20 ABI from the Ethereum Wiki](https://github.com/ethereum/wiki/wiki/Contract-ERC20-ABI), and the resulting hash (for the official ERC20 ABI) will always be `0xfa9452aa0b9ba0bf6eb59facc534adeb90d977746f96b1c4ab2db01722a2adcb`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527734400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527741979",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527741979",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527741979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzc0MTk3OQ==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T05:08:26Z",
    "updated_at": "2019-09-04T05:08:26Z",
    "author_association": "NONE",
    "body": "Each individual input takes a position in the individual ABI item depending on 1) its `type` and 2) its `name`. For example addresses come before uint256 \r\nEach individual output takes a position in the individual ABI item depending on 1) its `type` and 2) its `name`. For example addresses come before uint256 \r\nEach of the individual ABI items (including the `inputs` and `outputs`) are sorted by their keys i.e. `inputs` come before `outputs` and `stateMutability` comes after those.\r\nEach individual ABI item (which consists of everything we have talked about above) takes a position in the overall single ABI file depending on 1) its `type` and 2) its `name`. For example all events come before functions and out of those an event called `alpha` would come before an event called `bravo`.\r\nHere is an example of the sorted ERC20 ABI.\r\n```\r\n[{\r\n\t\"anonymous\": false,\r\n\t\"inputs\": [{\r\n\t\t\"indexed\": true,\r\n\t\t\"name\": \"owner\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"indexed\": true,\r\n\t\t\"name\": \"spender\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"indexed\": false,\r\n\t\t\"name\": \"value\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"name\": \"Approval\",\r\n\t\"type\": \"event\"\r\n}, {\r\n\t\"anonymous\": false,\r\n\t\"inputs\": [{\r\n\t\t\"indexed\": true,\r\n\t\t\"name\": \"from\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"indexed\": true,\r\n\t\t\"name\": \"to\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"indexed\": false,\r\n\t\t\"name\": \"value\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"name\": \"Transfer\",\r\n\t\"type\": \"event\"\r\n}, {\r\n\t\"payable\": true,\r\n\t\"stateMutability\": \"payable\",\r\n\t\"type\": \"fallback\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [{\r\n\t\t\"name\": \"_owner\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"name\": \"_spender\",\r\n\t\t\"type\": \"address\"\r\n\t}],\r\n\t\"name\": \"allowance\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": false,\r\n\t\"inputs\": [{\r\n\t\t\"name\": \"_spender\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"name\": \"_value\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"name\": \"approve\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"bool\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"nonpayable\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [{\r\n\t\t\"name\": \"_owner\",\r\n\t\t\"type\": \"address\"\r\n\t}],\r\n\t\"name\": \"balanceOf\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"balance\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [],\r\n\t\"name\": \"decimals\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"uint8\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [],\r\n\t\"name\": \"name\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"string\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [],\r\n\t\"name\": \"symbol\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"string\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": true,\r\n\t\"inputs\": [],\r\n\t\"name\": \"totalSupply\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"view\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": false,\r\n\t\"inputs\": [{\r\n\t\t\"name\": \"_to\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"name\": \"_value\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"name\": \"transfer\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"bool\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"nonpayable\",\r\n\t\"type\": \"function\"\r\n}, {\r\n\t\"constant\": false,\r\n\t\"inputs\": [{\r\n\t\t\"name\": \"_from\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"name\": \"_to\",\r\n\t\t\"type\": \"address\"\r\n\t}, {\r\n\t\t\"name\": \"_value\",\r\n\t\t\"type\": \"uint256\"\r\n\t}],\r\n\t\"name\": \"transferFrom\",\r\n\t\"outputs\": [{\r\n\t\t\"name\": \"\",\r\n\t\t\"type\": \"bool\"\r\n\t}],\r\n\t\"payable\": false,\r\n\t\"stateMutability\": \"nonpayable\",\r\n\t\"type\": \"function\"\r\n}]\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527741979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527742201",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527742201",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527742201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzc0MjIwMQ==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T05:09:28Z",
    "updated_at": "2019-09-04T05:09:28Z",
    "author_association": "NONE",
    "body": "At the very end of the above process. We remove all tabs, spaces, new lines etc. We then Sha3 and get `0xfa9452aa0b9ba0bf6eb59facc534adeb90d977746f96b1c4ab2db01722a2adcb`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527742201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527742254",
    "html_url": "https://github.com/ethereum/solidity/issues/2731#issuecomment-527742254",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2731",
    "id": 527742254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzc0MjI1NA==",
    "user": {
      "login": "tpmccallum",
      "id": 9831342,
      "node_id": "MDQ6VXNlcjk4MzEzNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9831342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpmccallum",
      "html_url": "https://github.com/tpmccallum",
      "followers_url": "https://api.github.com/users/tpmccallum/followers",
      "following_url": "https://api.github.com/users/tpmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/tpmccallum/orgs",
      "repos_url": "https://api.github.com/users/tpmccallum/repos",
      "events_url": "https://api.github.com/users/tpmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T05:09:47Z",
    "updated_at": "2019-09-04T05:09:47Z",
    "author_association": "NONE",
    "body": "Please try it out\r\nhttps://etc.search.secondstate.io/shaAnAbi.html\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527742254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
