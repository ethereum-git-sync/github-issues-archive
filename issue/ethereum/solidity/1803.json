{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1803/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1803/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1803/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1803",
  "id": 215098269,
  "node_id": "MDU6SXNzdWUyMTUwOTgyNjk=",
  "number": 1803,
  "title": "Stack items differ for calldata parameters",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 275027668,
      "node_id": "MDU6TGFiZWwyNzUwMjc2Njg=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/documentation%20:book:",
      "name": "documentation :book:",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2017-03-17T19:18:27Z",
  "updated_at": "2020-05-11T08:59:27Z",
  "closed_at": "2020-05-11T08:59:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\ncontract C {\r\n  function f(bytes calldata) external {\r\n    assembly {\r\n        let x := add(calldata, 32)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis fails with:\r\n```\r\nUntitled:4:22: Error: Expected instruction(s) to deposit 1 item(s) to the stack, but did deposit 2 item(s).\r\n        let x := add(calldata, 32)\r\n                     ^------^\r\nUntitled:4:18: Error: Expected instruction(s) to deposit 1 item(s) to the stack, but did deposit 2 item(s).\r\n        let x := add(calldata, 32)\r\n                 ^---------------^\r\n```\r\n\r\nMaking the function non-external fixes it. I guess in external it defaults to calldata. What are the stack items in that case?\r\n\r\nWe should document it in the *Assembly* section.",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1803/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1803/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/287449316",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-287449316",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 287449316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQ0OTMxNg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T19:26:33Z",
    "updated_at": "2017-03-17T19:29:33Z",
    "author_association": "MEMBER",
    "body": "It seems the top item is the len in the calldata, and the next item is the offset:\r\n\r\n```\r\ncontract C {\r\n  function f(bytes calldata) external returns (string ret) {\r\n      uint offset;\r\n      uint len;\r\n      assembly {\r\n          calldata\r\n          =: len\r\n          =: offset\r\n      }\r\n      ret = new string(len);\r\n      assembly {\r\n          calldatacopy(add(ret, 32), offset, len)\r\n      }\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/287449316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/287731630",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-287731630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 287731630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzczMTYzMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T11:14:34Z",
    "updated_at": "2017-03-20T11:14:34Z",
    "author_association": "MEMBER",
    "body": "Yes, this should be documented in the inline assembly section.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/287731630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/314177319",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-314177319",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 314177319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDE3NzMxOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T17:30:12Z",
    "updated_at": "2017-07-10T17:30:27Z",
    "author_association": "MEMBER",
    "body": "Since recent changes, the above code cannot be compiled.\r\n\r\nCannot reference directly:\r\n```\r\n1803.sol:4:22: Error: Only types that use one stack slot are supported.\r\n        let x := add(calldata, 32)\r\n                     ^------^\r\n```\r\n\r\nCannot reference using `_offset`:\r\n```\r\n1803.sol:4:22: Error: The suffixes _offset and _slot can only be used on storage variables.\r\n        let x := add(calldata_offset, 32)\r\n                     ^-------------^\r\n```\r\n\r\n@chriseth what is the new proposed way to access that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/314177319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/314195672",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-314195672",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 314195672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDE5NTY3Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T18:34:59Z",
    "updated_at": "2017-07-10T18:34:59Z",
    "author_association": "MEMBER",
    "body": "I guess we have to go a similar route as we went with storage variables, but perhaps we should reconsider if calldata variables actually make sense, they have again a different encoding than memory variables and I'm not sure we can support that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/314195672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/506828523",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-506828523",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 506828523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjgyODUyMw==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-28T18:10:05Z",
    "updated_at": "2019-06-28T18:10:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was going to open an issue suggesting you do something similar as with storage variables, but then I found this issue, so I'll just comment here.  I have two additional comments regarding this:\r\n\r\n1. In addition to doing this with calldata variables that take up two stack slots, you could also do this with variables of `function external`, too.  Currently you can't use those in assembly either.\r\n\r\n2. I'd like to make a comment here about the error messages; I think the current error messages regarding this are confusing/inconsistent:\r\n\r\nA. If you attempt to use a `function external` variable, you just get a generic error message regarding variables that take up two stack slots being disallowed in assembly.\r\n\r\nB. ...but if you use a calldata variable that takes up two stack slots, you get a specific error message saying you can't use calldata variables in assembly...\r\n\r\nC. ...except this error message actually isn't correct, because if you use a calldata variable that only takes up a single stack slot, it works perfectly fine.\r\n\r\nMy suggestion:\r\n\r\n1. Add ways to use two-stack-slot variables in assembly, similar to how storage variables are treated.  For external functions, you can have `f_address` and `f_selector` (although maybe it should have a different name to warn people that these selectors are left-padded, instead of right-padded like usual?).  For calldata variables, you can have `x_start` and `x_length`.  Or maybe the names would be different, these are just suggestions.\r\n\r\n2. Add specific error messages warning people to use these, like you have for storage variables.  Like, if you attempt to use an external function variable `f` directly, it should tell you to use `f_address` and `f_selector` instead, and if you attempt to use a two-slot calldata variable `x` directly, it should tell you to use `x_start` and `x_length` instead.\r\n\r\nBtw, this is getting a bit tangential, but has there been any thought given to changing the `_slot` and `_offset` syntax in 0.6.0?  It bothers me that (while unlikely) this could notionally overlap with the name of a local variable.  (If I try out this situation -- having both a state variable named `x` and a local variable named `x_offset` -- then when I attempt to use `x_offset` in assembly, the compiler complains that it can't find that identifier.)  Perhaps it could be `x.offset` instead?  That could still collide with the name of an *assembly* local variable, but that's OK, because the compiler could just recognize that, hey, the name `x.offset` is already in use and not let you declare such an assembly-local variable.  As long as it could no longer collide with an external local variable I think it's fine.  Similarly with these other suggestions I'm making, obviously.\r\n\r\nYou could even perhaps add specific error messages for if someone attempts to use one of these inappropriately.  Like if someone attempts to use `x_start` or `x_length` for a single-slot calldata variable, you could have an error message saying, hey, this one's just one slot, just use `x` instead.  Maybe that's just unnecessary though; presumably if someone is doing assembly with calldata variables, they already know how they work, and the generic error message will suffice to make them realize, oh, duh, I should just use `x` instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/506828523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623979425",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-623979425",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 623979425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzk3OTQyNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T10:37:45Z",
    "updated_at": "2020-05-05T10:37:45Z",
    "author_association": "MEMBER",
    "body": "Is this still an open issue? cc @chriseth @ekpyron ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623979425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623981274",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-623981274",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 623981274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzk4MTI3NA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T10:42:32Z",
    "updated_at": "2020-05-05T10:42:46Z",
    "author_association": "MEMBER",
    "body": "Well, it's at least better errors now... do we have another issue for accessing external function types and dynamic calldata types from inline assembly? That part is still unsolved, so we can re-purpose this issue for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623981274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623983254",
    "html_url": "https://github.com/ethereum/solidity/issues/1803#issuecomment-623983254",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1803",
    "id": 623983254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzk4MzI1NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T10:47:12Z",
    "updated_at": "2020-05-05T10:47:12Z",
    "author_association": "MEMBER",
    "body": "Yep, the message is nicer:\r\n```\r\nError: Call data elements cannot be accessed directly. Copy to a local variable first or use \"calldataload\" or \"calldatacopy\" with manually determined offsets and sizes.\r\n --> 1803.sol:4:22:\r\n  |\r\n4 |         let x := add(calldata1, 32)\r\n  |                      ^^^^^^^^^\r\n```\r\n\r\nI would suggest to close this and create a new issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/623983254/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
