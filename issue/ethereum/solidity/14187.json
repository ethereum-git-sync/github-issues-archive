{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14187",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14187/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14187/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14187/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14187",
  "id": 1697286381,
  "node_id": "I_kwDOAm_5kc5lKojt",
  "number": 14187,
  "title": "[EVM backend] Stack too deep in optimized via yul compilation mode",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-05-05T09:19:53Z",
  "updated_at": "2023-06-26T12:20:16Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\npragma solidity >= 0.0.0;\r\ncontract C {\r\n  function f0(uint88 i0,address[][][9][10][][2] memory i1) public    returns(int32 o0)\r\n  {\r\n    address payable l0 = payable(address(0x0000000000000000000000000000000000000004));\r\n    {\r\n      bool l1 = false;\r\n    }\r\n    require(true);\r\n  }\r\n}\r\n```\r\n\r\nthrows\r\n\r\nhttps://github.com/ethereum/solidity/blob/0f40bcc06d353e1d4078c8762a5c1f3a5a98c2ff/libyul/backends/evm/EVMObjectCompiler.cpp#L107\r\n\r\nRepro\r\n\r\n```\r\nsolc test.sol --via-ir --optimize --bin\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14187/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14187/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547998779",
    "html_url": "https://github.com/ethereum/solidity/issues/14187#issuecomment-1547998779",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14187",
    "id": 1547998779,
    "node_id": "IC_kwDOAm_5kc5cRJY7",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T14:39:10Z",
    "updated_at": "2023-05-15T14:39:10Z",
    "author_association": "MEMBER",
    "body": "```\r\n{\r\n{\r\nfunction foo_s_0(x_1) -> x_2\r\n{\r\nx_2 := call(call(0xffffffffffffffffffffffff, 0xfffffffffffffffffffffffff, 0xffffffffffffffffffffffffff, mod(call(x_1, x_1, 0xfffffffffffffffffffffffffff, mod(0xffffffffffffffffffffffffffff, 4294901759), mod(sload(0xfffffffffffffffffffffffffffff), 65536), mod(0xffffffffffffffffffffffffffffff, 4294901759), mod(0xfffffffffffffffffffffffffffffff, 65536)), 4294901759), mod(0xffffffffffffffffffffffffffffffff, 65536), mod(0xfffffffffffffffffffffffffffffffff, 4294901759), mod(0xffffffffffffffffffffffffffffffffff, 65536)), sload(0xfffffffffffffffffffffffffffffffffff), mload(mod(0xffffffffffffffffffffffffffffffffffff, 4294967295)), mod(0xfffffffffffffffffffffffffffffffffffff, 4294901759), mod(sload(0xffffffffffffffffffffffffffffffffffffff), 65536), mod(0xfffffffffffffffffffffffffffffffffffffff, 4294901759), mod(0xffffffffffffffffffffffffffffffffffffffff, 65536))\r\n}\r\nlet x_21 := foo_s_0(0xfffffffffffffffffffffffffffffffffffffffffffff)\r\nsstore(224, x_21)\r\nfor { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {\r\nlet x_29 := foo_s_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffff)\r\nlet x_33 := foo_s_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffff)\r\ncontinue\r\n}\r\npop(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\r\nfor { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {\r\nlet x_38 := foo_s_0(\"z\")\r\nlet x_41 := foo_s_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\r\nlet x_44, x_45\r\nmstore8(mod(0x1, 4294967295), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\r\n}\r\n}\r\n}\r\n```\r\n\r\nthrows stack too deep via IR + optimize\r\n\r\n```\r\n$ solc --strict-assembly --optimize test.yul\r\nlibyul/backends/evm/EVMObjectCompiler.cpp(107): Throw in function voi\r\nd solidity::yul::EVMObjectCompiler::run(solidity::yul::Object &, bool)     \r\nDynamic exception type: boost::wrapexcept<solidity::yul::StackTooDeepError>    std::exception::what: Variable _14 is 1 too deep in the stack [ _10 _1 _1 _2 _1\r\n4 _5 _7 _12 _3 _9 _11 _6 _8 _1 _2 _4 _5 _10 _1 _11 _13 ]                       No memoryguard was present. Consider using memory-safe assembly only and annota\r\nting it via 'assembly (\"memory-safe\") { ... }'.\r\n...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547998779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1549341817",
    "html_url": "https://github.com/ethereum/solidity/issues/14187#issuecomment-1549341817",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14187",
    "id": 1549341817,
    "node_id": "IC_kwDOAm_5kc5cWRR5",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-16T09:45:21Z",
    "updated_at": "2023-05-16T09:45:21Z",
    "author_association": "MEMBER",
    "body": "```\r\n{    \r\n    mstore(memoryguard(0x10000), 1)\r\n    sstore(mload(calldataload(0)), 1)\r\n    {\r\n        function foo_s_0() -> x_1\r\n        {\r\n            x_1 := call(0x4000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000001, mod(0x4000000000000000000000000000000000000000000001, 32768), mod(0x400000000000000000000000000000000000000000001, 32768), mod(0x40000000000000000000000000000000000000000001, 32768), mod(call(0x4000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000001, mod(0x4000000000000000000000000000000000000001, 32768), mod(x_1, 32768), mod(x_1, 32768), mod(call(0x400000000000000000000000000000000000001, 0x40000000000000000000000000000000000001, 0x4000000000000000000000000000000000001, mod(x_1, 32768), mod(0x400000000000000000000000000000000001, 32768), mod(\"\", 32768), mod(0x40000000000000000000000000000000001, 32768)), 32768)), 32768))\r\n        }\r\n        let x_18 := foo_s_0()\r\n        sstore(32, x_18)\r\n        for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) }\r\n        {\r\n            for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) }\r\n            {\r\n                sstore(0x400000000000000000000000000001, foo_s_0())\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nthrows with memoryguard present.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1549341817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
