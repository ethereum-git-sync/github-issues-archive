{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13086/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13086/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13086/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13086",
  "id": 1256105972,
  "node_id": "I_kwDOAm_5kc5K3qf0",
  "number": 13086,
  "title": "Include all emitted events in the contract ABI and userdoc in a non-breaking way by ignoring conflicting Natspec",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    },
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-06-01T14:10:13Z",
  "updated_at": "2023-04-12T15:52:35Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Abstract\r\nCurrently the contract ABI lists only events defined in the contract and inherited from other contracts. It does not list events defined in libraries that the contract emits and (after #12921) also events defined in other contracts.\r\n\r\nJust like we do with errors, the ABI should list both defined and emitted events.\r\n\r\n## Motivation\r\nA contract can emit events defined in a variety of places:\r\n\r\n```solidity\r\nlibrary   L { /** A library event */             event EL(uint8); }\r\ninterface I { /** An interface event */          event EI(uint16); }\r\ncontract  C { /** A foreign contract event */    event EC(uint24); }\r\ncontract  D { /** An inherited contract event */ event ED(uint32); }\r\n\r\ncontract E is D {\r\n    /// Own event\r\n    event EE(uint40);\r\n\r\n    function foo() public {\r\n        emit L.EL(1);\r\n        emit I.EI(2);\r\n        emit C.EC(3);\r\n        emit ED(4);\r\n        emit EE(5);\r\n    }\r\n}\r\n```\r\nNot all of them get listed in the ABI:\r\n```json\r\n[\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\":\r\n        [{\"indexed\": false, \"internalType\": \"uint32\", \"name\": \"\", \"type\": \"uint32\"}],\r\n        \"name\": \"ED\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\":\r\n        [{\"indexed\": false, \"internalType\": \"uint40\", \"name\": \"\", \"type\": \"uint40\"}],\r\n        \"name\": \"EE\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"foo\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n```\r\n\r\nThis poses a problem for tools like Truffle, which use the ABI to determine which events the contract might emit.\r\n\r\nThe `solc --userdoc` output compiled from the Natspec docstrings also only lists this subset of events:\r\n```json\r\n{\r\n    \"events\":\r\n    {\r\n        \"ED(uint32)\": {\"notice\": \"An inherited contract event \"},\r\n        \"EE(uint40)\": {\"notice\": \"Own event\"}\r\n    },\r\n    \"kind\": \"user\",\r\n    \"methods\": {},\r\n    \"version\": 1\r\n}\r\n```\r\n\r\n## Specification\r\nThe only real problem here is the userdoc. The current structure only allows one set of docs for each signature. We are planning to change the structure in Natspec v2 (#11114) but this will be a breaking change.\r\n\r\nSince not including these events in the ABI is so problematic for tools, we have decided to simply ignore the Natspec problem - for now in case of conflicting signatures we'll include the Natspec docstring only if there is one in the current contract (defined directly in it or inherited). Otherwise we'll ignore the docstring. This is not the correct way to handle this but we expect the impact of this problem to be very low and the problem will disappear once we release Natspec v2 anyway.\r\n\r\n## Backwards Compatibility\r\nUnlike #11114, this is fully backwards compatible in terms of ABI and userdoc structure. It does change the meaning of event list included there but not in a way that should pose problems to tools.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13086/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13086/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143749058",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1143749058",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1143749058,
    "node_id": "IC_kwDOAm_5kc5ELDnC",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T15:21:31Z",
    "updated_at": "2022-06-01T15:21:31Z",
    "author_association": "MEMBER",
    "body": "One more thing that we discussed on the call today is that this conflict that results in one of the events being ignored should trigger a warning. This was with the assumption that the conflict happens both for ABI and for Natspec. Given that the ABI is fine after all, I think the warning is not necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143749058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143763947",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1143763947",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1143763947,
    "node_id": "IC_kwDOAm_5kc5ELHPr",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T15:33:56Z",
    "updated_at": "2022-06-01T15:33:56Z",
    "author_association": "MEMBER",
    "body": "Also, a note to anyone who will be implementing this: we already have a PR for this (#10996) and it's mostly done. It will just need to be split into the part that can go into `develop` without compatibility issues and one that must go to `breaking`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143763947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1155003334",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1155003334",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1155003334,
    "node_id": "IC_kwDOAm_5kc5E1_PG",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-14T10:27:37Z",
    "updated_at": "2022-06-14T10:27:37Z",
    "author_association": "MEMBER",
    "body": "We decided to postpone the change I mentioned above until 0.8.16. For 0.8.15 we'll instead revert the problematic part of #12921. Here's my PR that does this: #13135.\r\n\r\nFor 0.8.16 we should revert the first commit from that PR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1155003334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1364584235",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1364584235",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1364584235,
    "node_id": "IC_kwDOAm_5kc5RVecr",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-24T21:11:37Z",
    "updated_at": "2023-01-12T13:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry to chase, but I'm wondering if there is an ETA for when this issue will be fixed?\r\n\r\nOur current set-up looks like this:\r\n\r\n```tree\r\n├── libraries\r\n│  ├── Errors.sol\r\n│  └── Events.ol\r\n├── Contract1.sol\r\n└── Contract2.sol\r\n```\r\n\r\nEven if the contract reverts with the errors and emit the events defined in the libraries, the contract ABIs don't contain any errors and/ or events, so our front-end engineers have to manually copy-and-paste the error and the events ABIs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1364584235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1371391100",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1371391100",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1371391100,
    "node_id": "IC_kwDOAm_5kc5RvcR8",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T20:34:24Z",
    "updated_at": "2023-01-04T20:34:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into this as well.\r\n\r\n> in case of conflicting signatures we'll include the Natspec docstring only if there is one in the current contract\r\n\r\nThis sounds good to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1371391100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1387257613",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1387257613",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1387257613,
    "node_id": "IC_kwDOAm_5kc5Sr98N",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-18T15:29:58Z",
    "updated_at": "2023-01-18T15:29:58Z",
    "author_association": "MEMBER",
    "body": "> Sorry to chase, but I'm wondering if there is an ETA for when this issue will be fixed?\r\n\r\nWe have a PR in review currently and I think we managed to whittle our PR backlog down enough to get back to it soon. Won't make it into the very next release because that's too soon but 0.8.19 is likely.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1387257613/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1387272596",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1387272596",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1387272596,
    "node_id": "IC_kwDOAm_5kc5SsBmU",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-18T15:40:25Z",
    "updated_at": "2023-01-18T15:40:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome, thanks a lot, @cameel!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1387272596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1414148152",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1414148152",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1414148152,
    "node_id": "IC_kwDOAm_5kc5USjA4",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T18:00:21Z",
    "updated_at": "2023-02-02T18:02:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does anyone know if this issue has any implications for source code verification on Etherscan? I worry that there might be a mismatch between the actual ABI and the one reported by Etherscan.\r\n\r\nPresumably, Etherscan would use the solc compiler output as is, and not polyfill the missing events and errors on behalf of the users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1414148152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1414201441",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1414201441",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1414201441,
    "node_id": "IC_kwDOAm_5kc5USwBh",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T18:45:14Z",
    "updated_at": "2023-02-02T18:45:14Z",
    "author_association": "MEMBER",
    "body": "No idea. Are they known to actually add stuff to the ABI they publish on their site?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1414201441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1417596367",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1417596367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1417596367,
    "node_id": "IC_kwDOAm_5kc5Ufs3P",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-05T11:51:50Z",
    "updated_at": "2023-02-05T11:51:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "[It](url) looks like this is a major issue with Etherscan. I just deployed this contract to Goerli (using Forge):\r\n\r\n```solidity\r\npragma solidity >=0.8.18;\r\n\r\nlibrary Events {\r\n    event LogAddress(address addr);\r\n}\r\n\r\ncontract Foo {\r\n    function logAddress(address addr) external {\r\n        emit Events.LogAddress(addr);\r\n    }\r\n}\r\n```\r\n\r\nI then proceeded to manually verify it via the Etherscan UI, where I got this error (I made sure that I have the same compiler settings):\r\n\r\n> Error! Unable to generate Contract ByteCode and ABI\r\n\r\nYou can see the full error [here](https://imgur.com/a/iPKQgWS).\r\n\r\nVerifying via Forge worked:\r\n\r\n> forge verify-contract --chain 5 --optimizer-runs 10000 0x4719e95a2fAc85Cddd7cf2Bc2De4D229E1Ec044F src/Foo.sol:Foo\r\n\r\nNow, here's the issue. The ABI on the [Etherscan contract page](https://goerli.etherscan.io/address/0x4719e95a2fac85cddd7cf2bc2de4d229e1ec044f#code) does NOT include the `LogAddress` event. It only lists out the `logAddress` function:\r\n\r\n```json\r\n[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"logAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n```\r\n\r\nTherefore, until this bug is fixed in the compiler itself, all Solidity contracts verified on Etherscan will lack the events that the said contract emits, which will cause coordinations issues between contract developers and third-party integrators. It is unlikely that Etherscan would be interested in building an ad-hoc solution for adding all the missing events in the ABI - building such a solution would take time, and it would be hard to account for all possible edge cases.\r\n\r\nI think that the priority for this issue should be set to high - it would be great to have it fixed in in v0.8.19.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1417596367/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1441528177",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1441528177",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1441528177,
    "node_id": "IC_kwDOAm_5kc5V6_lx",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T10:34:35Z",
    "updated_at": "2023-02-23T10:37:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like Solidity v0.8.19 dropped yesterday but did not include a fix for this bug. I can understand the rationale, though - you wanted to get the user-defined operators out there, and fix the more serious dead code bug.\r\n\r\nWill a fix for this bug be included in Solidity v0.8.20?\r\n\r\nI'm sorry for being a broken record in this GitHub issue. It's just that this bug prevents us from going to mainnet. We won't be able to deploy until this is fixed because we don't want our verified contracts to lack the events defined in our libraries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1441528177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1444589491",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1444589491",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1444589491,
    "node_id": "IC_kwDOAm_5kc5WGq-z",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T22:14:56Z",
    "updated_at": "2023-02-24T22:14:56Z",
    "author_association": "MEMBER",
    "body": "> Will a fix for this bug be included in Solidity v0.8.20?\r\n\r\nI can't promise anything, but it's very possible that we'll be done with this before the next release. It's just that we're still not fully done with UDVTs - we still need to implement literal suffixes and we can't afford to have it slip beyond Q1. If we're squeezed for time, unfortunately this issue might end up taking the hit again.\r\n\r\nNow, if it really is the cause of verification problems we should definitely bump the priority here. It's just that it has been working like this for ages so it's a bit weird that a problem like this would suddenly come up now. This is why it's been considered just medium impact for now - quite important but not the end of the world if it has to be delayed.\r\n\r\nI don't really understand the reason behind the Etherscan failure though. How does not including an event in the ABI cause the verification to fail? If both the tool and Etherscan are using the same version of the compiler and the same sources, both should be getting the same bytecode and ABI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1444589491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445177272",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1445177272",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1445177272,
    "node_id": "IC_kwDOAm_5kc5WI6e4",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-25T18:33:36Z",
    "updated_at": "2023-02-25T18:33:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but it's very possible that we'll be done with this before the next release\r\n\r\nThis would be amazing 🙏\r\n\r\n> How does not including an event in the ABI cause the verification to fail?\r\n\r\nSorry for not being clear enough before.\r\n\r\nThe issue is not that the verification fails, but that verification passes in a _misleading_ way. That is, the official ABIs that would appear on our Etherscan contract profiles (and any other blockchain explorers, for that matter) would NOT contain any events, because we source all of our events from a shared library called `Events.sol`.\r\n\r\n> both should be getting the same bytecode and ABI.\r\n\r\nYep, this is what happens. But both would see an ABI that is missing events.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445177272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445318418",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1445318418",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1445318418,
    "node_id": "IC_kwDOAm_5kc5WJc8S",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-26T10:18:01Z",
    "updated_at": "2023-02-26T10:18:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to include @Amxx in this discussion, since he might be able to shed more light on the importance of fixing this bug.\r\n\r\nMy understanding is that because of this bug, they (OpenZeppelin) [have resorted to using abstract contracts instead of libraries](https://twitter.com/Amxx/status/1622206396778283008) in their V5 library (which is still being worked on at the moment).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445318418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445324173",
    "html_url": "https://github.com/ethereum/solidity/issues/13086#issuecomment-1445324173",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13086",
    "id": 1445324173,
    "node_id": "IC_kwDOAm_5kc5WJeWN",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-26T10:39:26Z",
    "updated_at": "2023-02-26T10:40:39Z",
    "author_association": "NONE",
    "body": "> I want to include @Amxx in this discussion, since he might be able to shed more light on the importance of fixing this bug.\n> \n> My understanding is that because of this bug, they (OpenZeppelin) [have resorted to using abstract contracts instead of libraries](https://twitter.com/Amxx/status/1622206396778283008) in their V5 library (which is still being worked on at the moment).\n\nThat is already the case in our 4.x contracts!\n\nThis should be a library https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1445324173/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
