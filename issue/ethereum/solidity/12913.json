{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12913",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12913/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12913/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12913/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12913",
  "id": 1197280644,
  "node_id": "I_kwDOAm_5kc5HXQ2E",
  "number": 12913,
  "title": "The optimizer may completely remove all ``memoryguard``s preventing stack-to-memory.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-04-08T12:51:47Z",
  "updated_at": "2022-04-28T18:34:38Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Came up in https://github.com/ethereum/solidity/pull/12762.\r\n\r\nWe made ``memoryguard`` movable and removable to allow it to be CSE'd on the one hand and not to clutter the yul code with ``pop(memoryguard(...))`` on the other hand (also movable implies removable at the moment, so movable, but not *re*movable doesn't work).\r\n\r\nPreviously, the ``memoryguard``s would still never be removed entirely, since we'd always have a ``mstore(0x40, memoryguard(...))``, which depends on the actual value and could not be resolved.\r\nEver since the unused store eliminator, this ``mstore`` may be eliminated, though, which can result in the ``memoryguard`` to vanish, even though such code is succinctly memory-safe (these are cases that don't use any dynamic memory at all after optimization!).\r\n\r\nWith https://github.com/ethereum/solidity/pull/12762 such situations would become even more likely.\r\n\r\nSo we need a workaround for this. I have several options in mind, but none of them are overly nice. We can try to prevent the optimizer from removing the last ``memoryguard`` (hacky)... we could check for the memoryguard at the beginning of running the optimizer and then check again, if it has vanished and add it back as plain ``pop(memoryguard(...))`` (may be fine, but also a bit weird and kind of against the idea of ``memoryguard``s)... we could say that a vanishing ``memoryguard`` means no dynamic memory use and have the ``StackToMemoryMover`` still run and *introduce* a new ``memoryguard`` in these cases... not sure which is the least hacky option...",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12913/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12913/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
