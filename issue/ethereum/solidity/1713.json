{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1713/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1713/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1713/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1713",
  "id": 209108524,
  "node_id": "MDU6SXNzdWUyMDkxMDg1MjQ=",
  "number": 1713,
  "title": "Tracing of a contract using srcmap gives mappings with type \"i\" but without following opcodes from any function",
  "user": {
    "login": "asinyagin",
    "id": 700837,
    "node_id": "MDQ6VXNlcjcwMDgzNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/700837?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/asinyagin",
    "html_url": "https://github.com/asinyagin",
    "followers_url": "https://api.github.com/users/asinyagin/followers",
    "following_url": "https://api.github.com/users/asinyagin/following{/other_user}",
    "gists_url": "https://api.github.com/users/asinyagin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/asinyagin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/asinyagin/subscriptions",
    "organizations_url": "https://api.github.com/users/asinyagin/orgs",
    "repos_url": "https://api.github.com/users/asinyagin/repos",
    "events_url": "https://api.github.com/users/asinyagin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/asinyagin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-02-21T10:54:16Z",
  "updated_at": "2017-03-01T13:01:01Z",
  "closed_at": "2017-03-01T13:01:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi,\r\n\r\nWhen I call `createTierBaseFor()` from the following contract:\r\n```\r\npragma solidity ^0.4.0;\r\n\r\ncontract Contract1 {\r\n  struct tierEntry {\r\n    string description; // \"standard rates\"\r\n  }\r\n\r\n  function createTierBaseFor(string currency, address banker) {\r\n    setTierPercentages(0,currency,1,2,3,4,5,\"base rates\");\r\n  }\r\n\r\n  function setTierPercentages(uint16 tier, string currency, uint256 buy,\r\n                              uint256  sell,uint256  weBuy,uint256  weSell,\r\n                              uint256 storeFee,string rateName) \r\n  {\r\n    tierEntry memory te;\r\n    log0(\"asdf\");\r\n  }\r\n}\r\n```\r\nI'm getting this trace: https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd\r\n\r\nOn line [126](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L126) I get a jump to `setTierPercentages`\r\n```\r\npc: 481,\topcode: JUMP,\taddress: 0x17956ba5f4291844bc25aedb27e69bc11b5bda39,\tmapping: {\"source\":0,\"line\":8,\"column\":4,\"type\":\"i\"}, \tfunc: Contract1.createTierBaseFor(string memory,address)\r\n```\r\nThe [next](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L127) opcode is in `setTierPercentages`:\r\n```\r\npc: 487,\topcode: JUMPDEST,\taddress: 0x17956ba5f4291844bc25aedb27e69bc11b5bda39,\tmapping: {\"source\":0,\"line\":11,\"column\":2,\"type\":\"-\"}, \tfunc: Contract1.setTierPercentages(uint16,string memory,uint256,uint256,uint256,uint256,uint256,string memory)\r\n```\r\n\r\nBut after it I get mappings with type `i` without entering to any function at lines [130](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L130), [143](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L143). And two `o`'s at lines [159](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L159), [165](https://gist.github.com/asinyagin/7be3252a95ae29daa51924a04a961acd#file-gistfile1-txt-L165).\r\n\r\nThese seem to be wrong mappings. I think there should be following mappings to some function or no mappings with type `i`.\r\n\r\n```\r\nroot@4a541893579d:~/ethereum-sandbox# solc --version\r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.4.9+commit.364da425.Linux.g++\r\n```",
  "closed_by": {
    "login": "asinyagin",
    "id": 700837,
    "node_id": "MDQ6VXNlcjcwMDgzNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/700837?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/asinyagin",
    "html_url": "https://github.com/asinyagin",
    "followers_url": "https://api.github.com/users/asinyagin/followers",
    "following_url": "https://api.github.com/users/asinyagin/following{/other_user}",
    "gists_url": "https://api.github.com/users/asinyagin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/asinyagin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/asinyagin/subscriptions",
    "organizations_url": "https://api.github.com/users/asinyagin/orgs",
    "repos_url": "https://api.github.com/users/asinyagin/repos",
    "events_url": "https://api.github.com/users/asinyagin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/asinyagin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1713/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1713/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281317051",
    "html_url": "https://github.com/ethereum/solidity/issues/1713#issuecomment-281317051",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
    "id": 281317051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTMxNzA1MQ==",
    "user": {
      "login": "asinyagin",
      "id": 700837,
      "node_id": "MDQ6VXNlcjcwMDgzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/700837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asinyagin",
      "html_url": "https://github.com/asinyagin",
      "followers_url": "https://api.github.com/users/asinyagin/followers",
      "following_url": "https://api.github.com/users/asinyagin/following{/other_user}",
      "gists_url": "https://api.github.com/users/asinyagin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asinyagin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asinyagin/subscriptions",
      "organizations_url": "https://api.github.com/users/asinyagin/orgs",
      "repos_url": "https://api.github.com/users/asinyagin/repos",
      "events_url": "https://api.github.com/users/asinyagin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asinyagin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T11:28:22Z",
    "updated_at": "2017-02-21T11:28:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the trace gist.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281317051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281685299",
    "html_url": "https://github.com/ethereum/solidity/issues/1713#issuecomment-281685299",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
    "id": 281685299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTY4NTI5OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T14:32:50Z",
    "updated_at": "2017-02-22T14:33:11Z",
    "author_association": "MEMBER",
    "body": "I'm not sure, but \"jump in\" does not necessarily mean that it jumps into a solidity-level function, it just means that it will be followed by a respective \"jump out\" later and the return address is on the stack. I believe that these jumps are generated by the initialization routines for the memory struct which were moved to an assembly-level function recently.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281685299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281694737",
    "html_url": "https://github.com/ethereum/solidity/issues/1713#issuecomment-281694737",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
    "id": 281694737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTY5NDczNw==",
    "user": {
      "login": "asinyagin",
      "id": 700837,
      "node_id": "MDQ6VXNlcjcwMDgzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/700837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asinyagin",
      "html_url": "https://github.com/asinyagin",
      "followers_url": "https://api.github.com/users/asinyagin/followers",
      "following_url": "https://api.github.com/users/asinyagin/following{/other_user}",
      "gists_url": "https://api.github.com/users/asinyagin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asinyagin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asinyagin/subscriptions",
      "organizations_url": "https://api.github.com/users/asinyagin/orgs",
      "repos_url": "https://api.github.com/users/asinyagin/repos",
      "events_url": "https://api.github.com/users/asinyagin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asinyagin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T15:04:45Z",
    "updated_at": "2017-02-22T15:04:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth got it. So that's a correct behavior, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281694737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281694860",
    "html_url": "https://github.com/ethereum/solidity/issues/1713#issuecomment-281694860",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
    "id": 281694860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTY5NDg2MA==",
    "user": {
      "login": "romanman",
      "id": 5822633,
      "node_id": "MDQ6VXNlcjU4MjI2MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5822633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanman",
      "html_url": "https://github.com/romanman",
      "followers_url": "https://api.github.com/users/romanman/followers",
      "following_url": "https://api.github.com/users/romanman/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanman/subscriptions",
      "organizations_url": "https://api.github.com/users/romanman/orgs",
      "repos_url": "https://api.github.com/users/romanman/repos",
      "events_url": "https://api.github.com/users/romanman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T15:05:13Z",
    "updated_at": "2017-02-22T15:09:41Z",
    "author_association": "NONE",
    "body": "@chriseth \r\n\r\n1. Do we have deterministic way to 100% be sure that we are entering\r\n the function? The thing is that our debugger should rely on something.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281694860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281696456",
    "html_url": "https://github.com/ethereum/solidity/issues/1713#issuecomment-281696456",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1713",
    "id": 281696456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTY5NjQ1Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T15:10:38Z",
    "updated_at": "2017-02-22T15:10:38Z",
    "author_association": "MEMBER",
    "body": "Yes, it's correct behaviour. I don't think there is a 100% correct way to distinguish a recursive call from a library call, although I am pretty sure that if you reach a jumpdest whose source location is the whole function (i.e. this is the function entry point) and then you have another \"jump in\" without the source location changing, it cannot be a recursive call, but will be a call to an assembly function instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/281696456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
