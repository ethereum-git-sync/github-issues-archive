{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12527",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12527/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12527/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12527/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12527",
  "id": 1102072682,
  "node_id": "I_kwDOAm_5kc5BsEtq",
  "number": 12527,
  "title": "Refine enforce gas cost min value threshold behaviour in ``isoltest``",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438481746,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3bUg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have%20eventually",
      "name": "must have eventually",
      "color": "ffb04d",
      "default": false,
      "description": "Something we consider essential but not enough to prevent us from releasing Solidity 1.0 without it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-01-13T17:28:04Z",
  "updated_at": "2022-09-27T00:23:05Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently ``isoltest`` just ignores any existing test expectations, if the actually consumed gas amount is below the ``--enforce-gas-cost-min-value`` value.\r\nFor example ``test/libsolidity/semanticTests/externalContracts/snark.sol`` at the time of writing says ``// gas irOptimized: 95261`` for ``verifyTx()``. The actual value currently is ``95259``, but the test passes.\r\nThe test also passes if I change the expectation to any arbitrary value (both below or above the \"enforce-gas-cost-min-value\" threshold).\r\n\r\nThis behaviour is not particularly nice - it will lead to ghost-test-expectations whenever a case falls below the gas threshold.\r\n\r\nThe only thing determined by ``--enforce-gas-cost-min-value`` should be to determine at which threshold ``isoltest`` should start to actively *add* gas expectations. Existing expectations should always be checked and kept up to date. [alternative: actively *remove* expectations below the threshold; I prefer always checking, though]\r\n\r\nIIRC this was always the intended meaning of the option, but as @cameel pointed out, it's name is not particularly well chosen, so in the process it might make sense to rename it.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12527/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12527/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013525169",
    "html_url": "https://github.com/ethereum/solidity/issues/12527#issuecomment-1013525169",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12527",
    "id": 1013525169,
    "node_id": "IC_kwDOAm_5kc48aSqx",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T22:48:37Z",
    "updated_at": "2022-01-14T22:48:37Z",
    "author_association": "MEMBER",
    "body": "> [alternative: actively remove expectations below the threshold; I prefer always checking, though]\r\n\r\nI'd say that we should remove it at least in the situation where it changes from a value above the threshold to one below. This will happen often with automatically added values that are originally just above the threshold. If they were automatically added then I think they should be automatically removed as well. Only values that were clearly added manually should stay.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013525169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
