{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10930/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10930/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10930/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10930",
  "id": 804852309,
  "node_id": "MDU6SXNzdWU4MDQ4NTIzMDk=",
  "number": 10930,
  "title": "ABIEncoderV2 runs into stack too deep",
  "user": {
    "login": "mudgen",
    "id": 49092,
    "node_id": "MDQ6VXNlcjQ5MDky",
    "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mudgen",
    "html_url": "https://github.com/mudgen",
    "followers_url": "https://api.github.com/users/mudgen/followers",
    "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
    "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
    "organizations_url": "https://api.github.com/users/mudgen/orgs",
    "repos_url": "https://api.github.com/users/mudgen/repos",
    "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mudgen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 838064207,
      "node_id": "MDU6TGFiZWw4MzgwNjQyMDc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/annoys%20users%20:cry:",
      "name": "annoys users :cry:",
      "color": "ea2cab",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 24,
  "created_at": "2021-02-09T19:26:46Z",
  "updated_at": "2022-06-02T08:45:20Z",
  "closed_at": "2022-06-01T13:22:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "This code will not compile using Solidity 0.8.1 and with compiler optimizations on:\r\n```Solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.1;\r\n\r\n/******************************************************************************\\\r\n* Author: Nick Mudge\r\n*\r\n* Implementation of an example of a diamond.\r\n/******************************************************************************/\r\n\r\nenum FacetCutAction {Add, Replace, Remove}\r\n\r\nstruct FacetCut {\r\n    address facetAddress;\r\n    FacetCutAction action;\r\n    bytes4[] functionSelectors;\r\n}\r\n\r\ncontract GHSTDiamond {\r\n    struct ConstructorArgs {\r\n        address owner;\r\n    }\r\n\r\n    constructor(FacetCut[] memory _diamondCut, ConstructorArgs memory _args) {}\r\n}\r\n```\r\nBut this same code does compile with no problem if compiler optimization is turned off or if it is compiled using Solidity 0.7.6 with `pragma abicoder v2;` and with compiler optimization turned on.\r\n\r\nThis is the error I get:\r\n```Solidity\r\nCompilerError: Stack too deep when compiling inline assembly: Variable dataEnd is 1 slot(s) too deep inside the stack.\r\nError HH600: Compilation failed\r\n```\r\n",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10930/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10930/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776321410",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-776321410",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 776321410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjMyMTQxMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T23:44:06Z",
    "updated_at": "2021-02-09T23:44:06Z",
    "author_association": "MEMBER",
    "body": "Simplified to\r\n```\r\nstruct FacetCut {\r\n    bytes4[] functionSelectors;\r\n}\r\n\r\nstruct ConstructorArgs {\r\n    address owner;\r\n}\r\n\r\ncontract GHSTDiamond {\r\n    constructor(FacetCut[] memory _diamondCut, ConstructorArgs memory _args) {}\r\n}\r\n```\r\nThe issue is not the compiler version but ABI coder v2 - it also fails in 0.7.x with abi v2 activated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776321410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776323095",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-776323095",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 776323095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjMyMzA5NQ==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T23:47:42Z",
    "updated_at": "2021-08-20T14:01:56Z",
    "author_association": "NONE",
    "body": "@chriseth Is `pragma experimental ABIEncoderV2;`   different than ABI coder v2?\r\n\r\nBecause it works with 0.7.* and `pragma experimental ABIEncoderV2;`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776323095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776565157",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-776565157",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 776565157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjU2NTE1Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T09:20:57Z",
    "updated_at": "2021-02-10T09:20:57Z",
    "author_association": "MEMBER",
    "body": "For me it fails starting from 0.7.2, regardless of the pragma.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776565157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776573322",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-776573322",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 776573322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjU3MzMyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T09:32:15Z",
    "updated_at": "2021-02-10T09:32:15Z",
    "author_association": "MEMBER",
    "body": "It is really weird why this optimizes so badly. What is the case is that the two return variables are only assigned at the very end, so this might work again when we change the stack allocation as we planned @ekpyron ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776573322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776619040",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-776619040",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 776619040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjYxOTA0MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T10:44:45Z",
    "updated_at": "2021-02-10T10:44:45Z",
    "author_association": "MEMBER",
    "body": "I think this is a case where a function that is only used once is forcibly inlined even though the function it is inlined into is already quite large. So this could work again if the code is larger.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776619040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/780662402",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-780662402",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 780662402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDY2MjQwMg==",
    "user": {
      "login": "Ungolim",
      "id": 45174270,
      "node_id": "MDQ6VXNlcjQ1MTc0Mjcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45174270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ungolim",
      "html_url": "https://github.com/Ungolim",
      "followers_url": "https://api.github.com/users/Ungolim/followers",
      "following_url": "https://api.github.com/users/Ungolim/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ungolim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ungolim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ungolim/subscriptions",
      "organizations_url": "https://api.github.com/users/Ungolim/orgs",
      "repos_url": "https://api.github.com/users/Ungolim/repos",
      "events_url": "https://api.github.com/users/Ungolim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ungolim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T16:04:52Z",
    "updated_at": "2021-02-17T16:04:52Z",
    "author_association": "NONE",
    "body": "> I think this is a case where a function that is only used once is forcibly inlined even though the function it is inlined into is already quite large. So this could work again if the code is larger.\r\n\r\nSo we should just turn off the optimizer for now?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/780662402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/780671750",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-780671750",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 780671750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDY3MTc1MA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T16:17:58Z",
    "updated_at": "2021-02-17T16:17:58Z",
    "author_association": "MEMBER",
    "body": "@lepidotteri Do you get the same issue for the full contract? If yes, you could try turning off just the yul optimizer with `--no-yul-optimize`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/780671750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/781584145",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-781584145",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 781584145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTU4NDE0NQ==",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T19:32:26Z",
    "updated_at": "2021-07-20T20:40:40Z",
    "author_association": "NONE",
    "body": "how about adding \"`@inline`\" and \"`@noinline`\" optimizer hints and avoid (or limit) heuristics in those cases.\r\nC/C++ compilers had it for a long time - sometimes the developer knows better than the compiler the better approach.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/781584145/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782002781",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-782002781",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 782002781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjAwMjc4MQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T11:01:21Z",
    "updated_at": "2021-07-20T20:40:52Z",
    "author_association": "MEMBER",
    "body": "@drortirosh Doesn't C++ compilers mostly ignore the `inline` hints? Anyway, this was bought up before, and we generally wanted the optimizer to be independent of user inputs like these; however we do allow users to specify an optimization sequence using `--yul-optimizations=\"...\"`.\r\n\r\nEven if `inline` hints are implemented, it would just be extremely tricky for users to reason what should and should not be inlined.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782002781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782048422",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-782048422",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 782048422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA0ODQyMg==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T12:36:11Z",
    "updated_at": "2021-02-19T15:09:09Z",
    "author_association": "MEMBER",
    "body": "[Here](https://gist.github.com/hrkrshnn/b999b8d53ddf179167cdd6928e467068) is a diff between the ir generated between 0.8.0 and 0.8.1. The main difference is the function\r\n\r\n```\r\n        function round_up_to_mul_of_32(value) -> result {\r\n            result := and(add(value, 31), not(31))\r\n        }\r\n```\r\n\r\nInstead of allocating `size`, we allocate `round_up_to_mul(size)`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782048422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782077402",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-782077402",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 782077402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA3NzQwMg==",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T13:32:22Z",
    "updated_at": "2021-07-20T20:41:04Z",
    "author_association": "NONE",
    "body": "> Anyway, this was bought up before, and we generally wanted the optimizer to be independent of user inputs like these; however we do allow users to specify an optimization sequence using `--yul-optimizations=\"...\"`.\r\n\r\nCommand line options are an all-or-nothing solution. They don't allow a developer to specify a place where optimization is required.\r\nE.g there is no way to trade runtime vs construction-time cost",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782077402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782114672",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-782114672",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 782114672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjExNDY3Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T14:37:32Z",
    "updated_at": "2021-07-20T20:41:10Z",
    "author_association": "MEMBER",
    "body": "Please don't pollute this issue. `@inline` or `@noinline` will not solve this because the inlined function is a low-level function that has no counterpart in the Solidity source.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/782114672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/792374961",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-792374961",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 792374961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjM3NDk2MQ==",
    "user": {
      "login": "mallapurbharat",
      "id": 10878214,
      "node_id": "MDQ6VXNlcjEwODc4MjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10878214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mallapurbharat",
      "html_url": "https://github.com/mallapurbharat",
      "followers_url": "https://api.github.com/users/mallapurbharat/followers",
      "following_url": "https://api.github.com/users/mallapurbharat/following{/other_user}",
      "gists_url": "https://api.github.com/users/mallapurbharat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mallapurbharat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mallapurbharat/subscriptions",
      "organizations_url": "https://api.github.com/users/mallapurbharat/orgs",
      "repos_url": "https://api.github.com/users/mallapurbharat/repos",
      "events_url": "https://api.github.com/users/mallapurbharat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mallapurbharat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-07T23:32:40Z",
    "updated_at": "2021-03-07T23:49:46Z",
    "author_association": "NONE",
    "body": "I found this bug while searching for the \"slot too deep inside the stack\" error.\r\n\r\nI am facing the same issue when trying to use Truffle compile the below source. I was trying to see how many value type arguments can be passed to a function. The solidity documentation seems to suggest that 16 arguments should be accessible. However, I found that only 11 seem to be accepted in 0.8.1 whereas 0.7.6 allows up to 16 arguments as expected!\r\n\r\n**When Compiled with 0.8.1 of solc I get : \r\n_Error: CompileError: CompilerError: Stack too deep when compiling inline assembly: Variable headStart is 1 slot(s) too deep inside the stack._**\r\n\r\n**If I switch to 0.7.6 of solc, I get \"Compiled successfully using: solc: 0.7.6+commit.7338295f.Emscripten.clang\"**\r\n\r\nAlso, it **compiles successfully in 0.7.6 without the \"pragma experimental ABIEncoderV2;\" as well**!\r\n\r\n```\r\n//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\ncontract DoesNotCompile {    \r\n    uint u;\r\n    function fStackLimit(uint u1, uint u2, uint u3, uint u4, uint u5, uint u6, uint u7, uint u8, uint u9, uint u10, uint u11, uint u12) public {        \r\n    }\r\n}\r\n```\r\n\r\n**NOTE: However, as expected, removing the uint u12 parameter from the function call seems to fix this error in 0.8.1**",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/792374961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793867917",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-793867917",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 793867917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mzg2NzkxNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T13:01:16Z",
    "updated_at": "2021-03-09T13:01:16Z",
    "author_association": "MEMBER",
    "body": "@mallapurbharat stack access is more complicated and depending on the context, the limit is hit earlier sometimes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793867917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/874821003",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-874821003",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 874821003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgyMTAwMw==",
    "user": {
      "login": "rriescog",
      "id": 29550529,
      "node_id": "MDQ6VXNlcjI5NTUwNTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29550529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rriescog",
      "html_url": "https://github.com/rriescog",
      "followers_url": "https://api.github.com/users/rriescog/followers",
      "following_url": "https://api.github.com/users/rriescog/following{/other_user}",
      "gists_url": "https://api.github.com/users/rriescog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rriescog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rriescog/subscriptions",
      "organizations_url": "https://api.github.com/users/rriescog/orgs",
      "repos_url": "https://api.github.com/users/rriescog/repos",
      "events_url": "https://api.github.com/users/rriescog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rriescog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T14:41:01Z",
    "updated_at": "2021-07-06T14:42:17Z",
    "author_association": "NONE",
    "body": "Any news of the resolution of this issue? @cameel ? @chriseth ? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/874821003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883644133",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-883644133",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 883644133,
    "node_id": "IC_kwDOAm_5kc40q1bl",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T19:36:32Z",
    "updated_at": "2021-07-20T19:36:32Z",
    "author_association": "NONE",
    "body": "Are there plans to resolve this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883644133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883713920",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-883713920",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 883713920,
    "node_id": "IC_kwDOAm_5kc40rGeA",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T21:16:08Z",
    "updated_at": "2021-07-20T21:16:08Z",
    "author_association": "MEMBER",
    "body": "There are. Solving stack issues in general is one of the priority tasks right now. The work on the new codegen is ongoing in #11080 (issue) and #11493, #11525, #11615 (PRs). Also #10015, which will land in the next release, might help here.\r\n\r\nIf this particular piece of code compiled on 0.7.6 it's a regression but it's most likely a consequence of other changes that were done in the codegen in the meantime to help with stack problems. Trying to target this specific regression is pointless since it will just make the problems return in other situations and might not even be possible without just reverting these changes which we will not do.\r\n\r\nThe stack issues are an inherent limitation of the EVM (only 16 stack slots are reachable at any given moment) and all we can do is add features that work around that limitation. #10015 is a mechanism for moving variables from stack to memory. @ekpyron is also currently working on a better Yul->EVM code generator. Both of these are for the new Yul-based pipeline so they won't solve the general \"stack too deep\" issue in the old codegen but ABI Encoder v2 works by generating Yul code so I think they will at least help with the issue you're seeing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/883713920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886773157",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-886773157",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 886773157,
    "node_id": "IC_kwDOAm_5kc402xWl",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T14:53:35Z",
    "updated_at": "2021-07-26T14:53:35Z",
    "author_association": "NONE",
    "body": "@cameel This is great. Thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886773157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055663155",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1055663155",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1055663155,
    "node_id": "IC_kwDOAm_5kc4-7CQz",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T17:08:24Z",
    "updated_at": "2022-03-01T17:08:24Z",
    "author_association": "NONE",
    "body": "Hello, are there any updates in progress concerning this?   I ran into a problem recently where it would be really useful if this issue was fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055663155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055695133",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1055695133",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1055695133,
    "node_id": "IC_kwDOAm_5kc4-7KEd",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T17:44:44Z",
    "updated_at": "2022-03-01T17:44:44Z",
    "author_association": "MEMBER",
    "body": "The examples in this issue seem to compile with both ``solc --optimize --bin`` as well as ``solc --optimize --experimental-via-ir --bin`` both with 0.8.12 and current ``develop``.\r\n\r\nSo we do make continuous progress on this, but there will still be cases in which such errors are unavoidable (ultimately the reason for these errors is the fact that the EVM only provides limited stack access, so all we can do is try to work around this where possible).\r\nIn the near future we expect that ``solc --optimize --experimental-via-ir --bin`` (which will also hopefully be marked non-experimental in the near future) when using only memory-safe inline assembly (https://github.com/ethereum/solidity/pull/12620, resp. https://github.com/ethereum/solidity/pull/12663) will only very rarely exhibit stack errors (the only remaining cases should be in stack-heavy recursive functions).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055695133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055697150",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1055697150",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1055697150,
    "node_id": "IC_kwDOAm_5kc4-7Kj-",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T17:47:11Z",
    "updated_at": "2022-03-01T17:47:11Z",
    "author_association": "NONE",
    "body": "@ekpyron cool, thanks for that update and info. Much appreciated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1055697150/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143606882",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1143606882",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1143606882,
    "node_id": "IC_kwDOAm_5kc5EKg5i",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T13:22:37Z",
    "updated_at": "2022-06-01T13:22:37Z",
    "author_association": "MEMBER",
    "body": "This should be solved now. Starting with 0.8.13 the IR-based code generator is no longer an experimental feature. If anyone is still getting \"Stack too deep\" errors when using `--via-ir --optimize`, please report it as a separate issue and we'll investigate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143606882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1144551094",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1144551094",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1144551094,
    "node_id": "IC_kwDOAm_5kc5EOHa2",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-02T07:42:38Z",
    "updated_at": "2022-06-02T07:42:38Z",
    "author_association": "NONE",
    "body": "How do you use this --via-ir with etherscan verification ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1144551094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1144609115",
    "html_url": "https://github.com/ethereum/solidity/issues/10930#issuecomment-1144609115",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10930",
    "id": 1144609115,
    "node_id": "IC_kwDOAm_5kc5EOVlb",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-02T08:45:20Z",
    "updated_at": "2022-06-02T08:45:20Z",
    "author_association": "MEMBER",
    "body": "@drortirosh The argument can go into the standard json setting in your framework and then use etherscan verification. As an example, see: https://etherscan.io/address/0x00000000006cee72100d161c57ada5bb2be1ca79#code",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1144609115/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
