{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9685/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9685/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9685/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9685",
  "id": 686596362,
  "node_id": "MDU6SXNzdWU2ODY1OTYzNjI=",
  "number": 9685,
  "title": "Compiler crash: Variable headStart is 2 slot(s) too deep inside the stack",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-08-26T20:29:13Z",
  "updated_at": "2020-09-01T15:27:20Z",
  "closed_at": "2020-08-31T15:38:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCompiler crash when optimizations enabled, disabling optimization fixes the issue.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.6.12 + optimizations enabled\r\n- Framework/IDE (e.g. Truffle or Remix): Truffle + Remix\r\n- Operating system: MacOS 10.15.6\r\n\r\n## Steps to Reproduce\r\n\r\nTry to compile this file:\r\n[OneRouterView.full.sol.zip](https://github.com/ethereum/solidity/files/5132642/OneRouterView.full.sol.zip)\r\n\r\nOutput:\r\n```\r\nCompilerError: Stack too deep when compiling inline assembly: Variable headStart is 2 slot(s) too deep inside the stack.\r\n\r\n/Users/k06a/Projects/1split/node_modules/solc/solcjs:154\r\n      writeFile(contractFileName + '.bin', output.contracts[fileName][contractName].evm.bytecode.object);\r\n                                                                                        ^\r\n\r\nTypeError: Cannot read property 'bytecode' of undefined\r\n    at Object.<anonymous> (/Users/k06a/Projects/1split/node_modules/solc/solcjs:154:89)\r\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\r\n    at Module.load (internal/modules/cjs/loader.js:653:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\r\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\r\n    at startup (internal/bootstrap/node.js:283:19)\r\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\r\n```\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9685/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9685/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/682486497",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-682486497",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 682486497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjQ4NjQ5Nw==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T12:00:22Z",
    "updated_at": "2020-08-28T12:01:04Z",
    "author_association": "MEMBER",
    "body": "This seems like a regular stack too deep error, but for the IR. Perhaps you can try compiling with yul-optimizations disabled? For references, see https://github.com/ethereum/solidity/issues/9280 and https://github.com/ethereum/solidity/issues/8959",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/682486497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684850669",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684850669",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684850669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDg1MDY2OQ==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T13:24:32Z",
    "updated_at": "2020-09-01T13:24:32Z",
    "author_association": "NONE",
    "body": "Aren't you gonna fix it? At least point place in the code where the problem is.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684850669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684886595",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684886595",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684886595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDg4NjU5NQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T14:14:58Z",
    "updated_at": "2020-09-01T14:14:58Z",
    "author_association": "MEMBER",
    "body": "> Aren't you gonna fix it? At least point place in the code where the problem is.\r\n\r\n@k06a In that case you could also try making it easier for us to check the code instead of just pasting a zip file.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684886595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684914761",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684914761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684914761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDkxNDc2MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T14:54:53Z",
    "updated_at": "2020-09-01T14:54:53Z",
    "author_association": "MEMBER",
    "body": "The underlying problem is the fact that the EVM only provides access to the top-most 16 stack slots, which we cannot fix, but only work around. Working around it is quite non-trivial - the first step for that is in progress in https://github.com/ethereum/solidity/pull/9162, but that alone won't be enough (there are several further steps planned on top of that), so it will take a while until we have a general solution for this issue, and it is unclear whether it will happen before we switch to the new Yul IR codegen entirely.\r\n\r\nThat being said, it usually helps to reduce the number of local variables inside functions or (as probably in your case, since it seems to be an ABIEncoderV2 function argument in your case) reduce the number of arguments to functions to reduce the overall stack strain. Or you can try tweaking the ``--yul-optimizations`` sequence, it may be possible to tweak it for your particular case - but as @leonardoalt says it's quite hard to tell you more than that from the huge code snippet rather than from a minimized example containing the code part in there triggering this (which is most probably only one or two functions).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684914761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684919015",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684919015",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684919015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDkxOTAxNQ==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T15:00:37Z",
    "updated_at": "2020-09-01T15:00:37Z",
    "author_association": "NONE",
    "body": "The problem is that this is compiler failure. Wish to see properly handled error of Solidity code. It is pretty huge to determine the exact place of failure. It is not an issue for me, I wish to help you to fix this compiler failure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684919015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684932397",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684932397",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684932397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDkzMjM5Nw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T15:18:50Z",
    "updated_at": "2020-09-01T15:18:50Z",
    "author_association": "MEMBER",
    "body": "It's a known compiler failure that cannot be detected before code generation, so it's also non-trivial to provide a better error message (the issue is occurring in compiler-generated code that depends on the types you use *somewhere* in Solidity - and then only after the optimizer has then rewritten this compiler-generated code). But you're actually right, it would be nice to retain the original source location in the solidity source through this process and make it part of the error message - I'll check if we have an issue for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684932397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684936216",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684936216",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684936216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDkzNjIxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T15:24:31Z",
    "updated_at": "2020-09-01T15:24:31Z",
    "author_association": "MEMBER",
    "body": "@ekpyron we had an issue for that but it might be closed because we actually implemented that for most of the \"stack too deep\" errors. The problem with this instance of the error is that it happens in the utility code and it is not clear which line of the source was responsible for the failing line in the utility code to be generated - there might even be multiple or none at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684936216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684938125",
    "html_url": "https://github.com/ethereum/solidity/issues/9685#issuecomment-684938125",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9685",
    "id": 684938125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDkzODEyNQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T15:27:20Z",
    "updated_at": "2020-09-01T15:27:20Z",
    "author_association": "MEMBER",
    "body": "Yeah, it's somewhat related to https://github.com/ethereum/solidity/issues/8807 then... we could track which solidity source locations trigger the generation of utility code - I think that might be generally helpful for https://github.com/ethereum/solidity/issues/8807...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/684938125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
