{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14588/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14588/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14588/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14588",
  "id": 1927948879,
  "node_id": "I_kwDOAm_5kc5y6ipP",
  "number": 14588,
  "title": "[StackLimitEvader] Successive runs throws because of invalid yul code",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 455256446,
      "node_id": "MDU6TGFiZWw0NTUyNTY0NDY=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/waiting%20for%20more%20input",
      "name": "waiting for more input",
      "color": "fef2c0",
      "default": false,
      "description": "Issues waiting for more input by the reporter"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-10-05T10:27:21Z",
  "updated_at": "2023-12-13T11:25:18Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\n{\r\n    {\r\n        mstore(memoryguard(0x010000), 1)\r\n        sstore(mload(calldataload(0)), 1)\r\n        let x, x_1, x_2, x_3 := foo_m(calldataload(224), sload(288), calldataload(32), sload(96))\r\n        sstore(160, x)\r\n        sstore(224, x_1)\r\n        sstore(288, x_2)\r\n        sstore(32, x_3)\r\n        let x_4 := foo_s(calldataload(288), sload(32), calldataload(96))\r\n        sstore(160, x_4)\r\n    }\r\n    function foo_m(x, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7\r\n    { }\r\n    function foo_s(x, x_1, x_2) -> x_3\r\n    {\r\n        x_1 := callcode(call(0x400, 0x4000, 0x40000, mod(call(x_3, x_1, 0x400000, mod(0x4000000, 32768), mod(0x40000000, 32768), mod(0x400000000, 32768), mod(0x4000000000, 32768)), 32768), mod(0x40000000000, 32768), mod(0x400000000000, 32768), mod(0x4000000000000, 32768)), 0x40000000000000, 0x400000000000000, mod(0x4000000000000000, 32768), mod(0x40000000000000000, 32768), mod(0x400000000000000000, 32768), mod(selfbalance(), 32768))\r\n    }\r\n}\r\n```\r\n\r\nWhen the code above is optimized successively using `StackLimitEvader` (i.e., applied twice), the compiler throws.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14588/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14588/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1751172473",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1751172473",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1751172473,
    "node_id": "IC_kwDOAm_5kc5oYMV5",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-06T17:38:16Z",
    "updated_at": "2023-10-06T17:40:04Z",
    "author_association": "MEMBER",
    "body": "Can this be reproduced by invoking the compiler or only by directly running that part of the optimizer twice? What is the exact error?\r\n\r\nI tried this, but it compiles the code just fine for me on 0.8.21:\r\n\r\n```bash\r\nsolc test.yul --strict-assembly --optimize --ir-optimized |\r\n    grep --invert-match \"=======\" |\r\n    grep --invert-match \"Pretty printed source:\" |\r\n    solc - --strict-assembly --optimize\r\n```\r\n\r\nSame when I use a build from the current `develop` (b54e7207739e48c5a7712a4683a9591a6c64b7cd).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1751172473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752702965",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1752702965",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1752702965,
    "node_id": "IC_kwDOAm_5kc5oeB_1",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T09:56:52Z",
    "updated_at": "2023-10-09T09:56:52Z",
    "author_association": "MEMBER",
    "body": "> Can this be reproduced by invoking the compiler or only by directly running that part of the optimizer twice? What is the exact error?\r\n\r\nI can only reproduce it by directly running the stack limit evader twice (minus the second disambiguation i.e., disambiguate and then run stack limit evader twice). See for reference:\r\n\r\nhttps://github.com/ethereum/solidity/blob/b54e7207739e48c5a7712a4683a9591a6c64b7cd/test/libyul/YulOptimizerTestCommon.cpp#L335-L342\r\n\r\nThe error is that invalid Yul is produced. Throws from here\r\n\r\nhttps://github.com/ethereum/solidity/blob/b54e7207739e48c5a7712a4683a9591a6c64b7cd/libyul/AsmAnalysis.cpp#L97",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752702965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752790642",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1752790642",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1752790642,
    "node_id": "IC_kwDOAm_5kc5oeXZy",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T10:59:25Z",
    "updated_at": "2023-10-09T10:59:25Z",
    "author_association": "MEMBER",
    "body": "Hmm... I wonder if the evader even guarantees not to break the properties it requires. If running `g` or `hgfo` steps in between the two evader runs helps then it probably doesn't.\r\n\r\nIn any case, I don't think this is something a user can do (not even via a custom sequence). What kind of scenario are you fuzzing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752790642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752942712",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1752942712",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1752942712,
    "node_id": "IC_kwDOAm_5kc5oe8h4",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T12:44:11Z",
    "updated_at": "2023-10-09T12:44:11Z",
    "author_association": "MEMBER",
    "body": "I guess the idea is to fuzz individual optimizer steps to make sure custom optimizer sequences are fine - and the stack limit evader just also made it into the mix as regular step, even though it can never be manually run.\r\n\r\nI wonder why this would throw, though - is the ``CompilabilityChecker`` run separately for both invocations? If not, that'd be sufficient cause for a crash - otherwise, I'd actually expect it to be stable on reinvocation (even though it's not crucial).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1752942712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1753056044",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1753056044",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1753056044,
    "node_id": "IC_kwDOAm_5kc5ofYMs",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T13:51:11Z",
    "updated_at": "2023-10-09T13:51:11Z",
    "author_association": "MEMBER",
    "body": "> and the stack limit evader just also made it into the mix as regular step\r\n\r\n[But it's not a step - it's still hard-coded](https://github.com/ethereum/solidity/blob/develop/libyul/optimiser/Suite.cpp#L195-L212). We even did the whole cleanup sequence thing to avoid it being a step.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1753056044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1753281377",
    "html_url": "https://github.com/ethereum/solidity/issues/14588#issuecomment-1753281377",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14588",
    "id": 1753281377,
    "node_id": "IC_kwDOAm_5kc5ogPNh",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T16:02:21Z",
    "updated_at": "2023-10-09T16:02:21Z",
    "author_association": "MEMBER",
    "body": "> > and the stack limit evader just also made it into the mix as regular step\r\n> \r\n> [But it's not a step - it's still hard-coded](https://github.com/ethereum/solidity/blob/develop/libyul/optimiser/Suite.cpp#L195-L212). We even did the whole cleanup sequence thing to avoid it being a step.\r\n\r\nThat was my point with the \"even though\" :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1753281377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
