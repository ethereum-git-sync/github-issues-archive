{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8499",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8499/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8499/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8499/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8499",
  "id": 582856377,
  "node_id": "MDU6SXNzdWU1ODI4NTYzNzc=",
  "number": 8499,
  "title": "Better syntax for declaring nested mappings.",
  "user": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 455256446,
      "node_id": "MDU6TGFiZWw0NTUyNTY0NDY=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/waiting%20for%20more%20input",
      "name": "waiting for more input",
      "color": "fef2c0",
      "default": false,
      "description": "Issues waiting for more input by the reporter"
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-03-17T08:57:26Z",
  "updated_at": "2022-09-26T19:40:28Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "At some point today I found myself declaring the following mapping:\r\n\r\n```mapping(bytes32 => mapping(bytes32 => mapping(bytes32 => mapping(uint256 => MyEntry)))) internal m_lookuptable;```\r\n\r\nI get this is a bit of an extreme case, but I might not be the only one nesting mappings. So I wondered, why not replace it with:\r\n\r\n```mapping(bytes32 => bytes32 => bytes32 => uint256 => MyEntry) internal m_lookuptable;```\r\n\r\nIt should be pretty easy for the parser to adapt to this syntax, no backend modification should be necessary, and the result would be much more readable.\r\nAlso, it doesn't break anything, so backward compatibility would be unaffected.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8499/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8499/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/616459514",
    "html_url": "https://github.com/ethereum/solidity/issues/8499#issuecomment-616459514",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8499",
    "id": 616459514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjQ1OTUxNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-20T10:30:36Z",
    "updated_at": "2020-04-20T10:30:36Z",
    "author_association": "MEMBER",
    "body": "Thanks for your suggestion, @Amaxx! I'm wondering whether you really need a data structure that support \"partial evaluation\" or if what you really need is tuples as keys for mappings.\r\n\r\nSo it would rather be\r\n```\r\nmapping(bytes32, bytes32, bytes32, uint256 => MyEntry) internal m_lookuptable;\r\n```\r\n\r\nand you would use `m_lookuptable[\"1\", \"2\", \"3\", 1]` instead of  `m_lookuptable[\"1\"][\"2\"][\"3\"][1]`\r\n\r\nIt would also have the benefit that you only need to compute one hash instead of 4.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/616459514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/616470860",
    "html_url": "https://github.com/ethereum/solidity/issues/8499#issuecomment-616470860",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8499",
    "id": 616470860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjQ3MDg2MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-20T10:51:53Z",
    "updated_at": "2020-04-20T10:51:53Z",
    "author_association": "MEMBER",
    "body": "Perhaps using the tuple syntax we have is more clear:\r\n```\r\nmapping((bytes32, bytes32, bytes32, uint256) => MyEntry) internal m_lookuptable;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/616470860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/806669276",
    "html_url": "https://github.com/ethereum/solidity/issues/8499#issuecomment-806669276",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8499",
    "id": 806669276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjY2OTI3Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-25T12:41:53Z",
    "updated_at": "2021-03-25T12:41:53Z",
    "author_association": "MEMBER",
    "body": "Btw @Amxx, it occurred to me that you can (almost) already do this albeit at a memory cost: can use a single `bytes32` key and hash your keys (`keccak256(abi.encode(a, b, c,...))`). With `bytes.concat` (#10903) this should be clarified to `keccak256(bytes.concat(a, b, c, ...)`.\r\n\r\nSo basically the tuple syntax is a memory-efficient and more easy to ready alternative to the above.\r\n\r\nWe should keep in mind that potentially the codegen should be able to avoid the memory overhead, if it is clever enough.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/806669276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
