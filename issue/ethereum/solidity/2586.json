{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/2586/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/2586/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/2586/events",
  "html_url": "https://github.com/ethereum/solidity/issues/2586",
  "id": 243756460,
  "node_id": "MDU6SXNzdWUyNDM3NTY0NjA=",
  "number": 2586,
  "title": "Option to specify opcode for require/assert exceptions",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2017-07-18T15:27:07Z",
  "updated_at": "2017-07-28T15:35:14Z",
  "closed_at": "2017-07-27T13:17:14Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "It appears to me that further separation of concerns between `require()` and `assert()` would be helpful. From the documentation:\r\n\r\n> Note that assert-style exceptions consume all gas available to the call, while require-style exceptions will not consume any gas starting from the Metropolis release.\r\n\r\nThis is of course a reference to https://github.com/ethereum/eips/issues/140, and the new `REVERT` opcode. In this case the choice between the two is at a lower level than the source code. \r\n\r\n> The difference between the two is that assert should only be used for internal errors and require should be used to check external conditions (invalid inputs or errors in external components). \r\n\r\nThis is a completely distinct use case, which I believe is a static analysis concern), above the source code level. \r\n\r\nI'm not sure what if anything the advantages of an `invalid opcode` exception would be, but I think it would be helpful to be able to throw an internal error AND have the benefits of `REVERT` (gas refunds + pass a return value). \r\n\r\nIt's possible the issue title is overly prescriptive, there might be a better way to resolve this. ",
  "closed_by": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/2586/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/2586/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316103722",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-316103722",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 316103722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEwMzcyMg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T15:36:28Z",
    "updated_at": "2017-07-18T15:54:41Z",
    "author_association": "MEMBER",
    "body": "The documentation may need some rewording/refactoring (that particular block is quite chunky), but the idea is the following:\r\n\r\nInsert hard assertions into the code before critical parts (such as overflows, transfers, etc.). Additionally, guard the code with `require` for input parameters and return values of critical calls. If everything is catered for with `require`, the assertions should never be hit.\r\n\r\nThis can be easily detected via outside testing tools (i.e. truffle/dapple/etc.). Once https://github.com/ethereum/interfaces/issues/1 or https://github.com/ethereum/interfaces/issues/8 is implemented, the execution result (success, failure or revert) should be easily distinguishible.\r\n\r\nFurthermore, analyzers should be able to point to unchecked conditions and perhaps in the future assertions could be optimised out for conditions already covered by `require`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316103722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316107766",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-316107766",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 316107766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEwNzc2Ng==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T15:48:55Z",
    "updated_at": "2017-07-18T15:55:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Big üëç for this.\r\n\r\nPersonally, I understand and value how this is supposed to ease the development of formal verification tools for Solidity code but it appears to me it would make more sense to use the `0xfd` opcode in all the exceptions by default.\r\n\r\nMaybe there is some obvious reason I'm missing as to why this is engineered this way?\r\n\r\nEDIT: Just missed the answer above while typing.\r\n\r\n@axic is it possible that this is going to promote some waste of gas? I get where you're coming from but this is a huge trade-off. Maybe this should be done at the protocol level? Something like making `REVERT` taking a byte param to distinguish between different cases?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316107766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316142595",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-316142595",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 316142595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjE0MjU5NQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T17:48:26Z",
    "updated_at": "2017-07-18T17:48:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Insert hard assertions into the code before critical parts (such as overflows, transfers, etc.). Additionally, guard the code with require for input parameters and return values of critical calls. If everything is catered for with require, the assertions should never be hit.\r\n\r\nThis is quite helpful, thank you. Would it be accurate to say then that if tests are causing `assert(false)` and thus an invalid opcode error, then you're doing something wrong?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/316142595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317755283",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-317755283",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 317755283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzc1NTI4Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T14:28:04Z",
    "updated_at": "2017-07-25T14:28:16Z",
    "author_association": "MEMBER",
    "body": "Yes, if anything can cause `assert(false)`, your contract has a bug. This is actually what it says in the [documentation](https://solidity.readthedocs.io/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions) - but perhaps it is not clear enough?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317755283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317841126",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-317841126",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 317841126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzg0MTEyNg==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T19:09:42Z",
    "updated_at": "2017-07-25T19:09:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking again, this is clear \"If this is possible, this means there is a bug in your contract you should fix.\", though not as emphatic as I think it should be for such an important distinction.\r\n\r\nGenerally, from the perspective contract designer, it feels difficult to differentiate between the exact instances when one should be:\r\n\r\n1. \"checking for internal errors\" (assert)\r\n2. \"checking external conditions (invalid inputs or errors in external components)\" (require)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317841126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317906818",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-317906818",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 317906818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzkwNjgxOA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T23:57:41Z",
    "updated_at": "2017-07-25T23:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rather than just go back and forth, how does this look? The main change is expanding on the cases which should use `revert` and `assert`, and IMO more precise language.\r\n\r\nhttps://github.com/ethereum/solidity/pull/2631\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/317906818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318322869",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318322869",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318322869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODMyMjg2OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T10:24:05Z",
    "updated_at": "2017-07-27T10:24:05Z",
    "author_association": "MEMBER",
    "body": "Can this be closed now?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318322869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318358876",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318358876",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318358876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODM1ODg3Ng==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T13:17:14Z",
    "updated_at": "2017-07-27T13:17:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, there is still a lot of confusion in the field about `require` vs. `assert`, but I think this is enough for now. \r\n\r\nMaybe you could tweet one of your solidity tips. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318358876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318362220",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318362220",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318362220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODM2MjIyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T13:29:58Z",
    "updated_at": "2017-07-27T13:29:58Z",
    "author_association": "MEMBER",
    "body": "Not sure if the tweet will help, but tried it anyway :-)\r\nWe should add some example use-cases to the documentation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318362220/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318362539",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318362539",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318362539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODM2MjUzOQ==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T13:31:05Z",
    "updated_at": "2017-07-27T13:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think that would be **really** valuable!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318362539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318486097",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318486097",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318486097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODQ4NjA5Nw==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T21:04:28Z",
    "updated_at": "2017-07-27T21:04:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth \r\n> We should add some example use-cases to the documentation.\r\n\r\nWhat about guarding against overflow/underflow as in this case?\r\n\r\nhttps://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol#L11\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318486097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318653206",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318653206",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318653206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODY1MzIwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T13:34:27Z",
    "updated_at": "2017-07-28T13:34:36Z",
    "author_association": "MEMBER",
    "body": "@maurelian we are currently working on a static analyzer for that: https://github.com/ethereum/solidity/pull/2538",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318653206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318661901",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318661901",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318661901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODY2MTkwMQ==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T14:09:52Z",
    "updated_at": "2017-07-28T14:09:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you just clarify that, for current popular use of `safeMath` which is to be first line of defense against overflows, the correct construct to use would be `require` since this condition MAY be false given some input?\r\n\r\n(Sorry for being a pin in the ass, just trying to get this really right üòÑ)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318661901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318686293",
    "html_url": "https://github.com/ethereum/solidity/issues/2586#issuecomment-318686293",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/2586",
    "id": 318686293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODY4NjI5Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T15:35:14Z",
    "updated_at": "2017-07-28T15:35:14Z",
    "author_association": "MEMBER",
    "body": "@GNSPS my opinion is that you should not just throw an exception on overflow, because the fact that at overflow was possible usually means that you did not think of some of the edge cases, and furthermore, throwing an exception might forever stall some process. For example, take the following code (from ENS) - perhaps not the best example:\r\n\r\n```\r\n    function setBalance(uint newValue, bool throwOnFailure) onlyRegistrar onlyActive {\r\n        // Check if it has enough balance to set the value\r\n        if (value < newValue) throw;\r\n        value = newValue;\r\n        // Send the difference to the owner\r\n        if (!owner.send(this.balance - newValue) && throwOnFailure) throw;\r\n}\r\n```\r\nIf you just checked for underflow in `this.balance - newValue` and throw on failure, it might be that you never get your money back. It is much better to use formal methods to prove that underflow can never happen in this code path. Indeed, `this.balance` should always be equal to `value` and thus `newValue` will be at most `this.balance` because of the check in the first line of the function. If you forget to put this check, the \"safeMath\" method will lock up your money (at least in this function), while the assertion checking method will notify you about your error at compile-time.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/318686293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
