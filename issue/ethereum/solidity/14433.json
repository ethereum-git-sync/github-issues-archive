{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14433",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14433/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14433/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14433/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14433",
  "id": 1813655186,
  "node_id": "I_kwDOAm_5kc5sGi6S",
  "number": 14433,
  "title": "Testing Natspec JSON via isoltest",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438488423,
      "node_id": "LA_kwDOAm_5kc8AAAABCI31Zw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have",
      "name": "must have",
      "color": "ffa12a",
      "default": false,
      "description": "Something we consider an essential part of Solidity 1.0."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/57",
    "html_url": "https://github.com/ethereum/solidity/milestone/57",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/57/labels",
    "id": 9494042,
    "node_id": "MI_kwDOAm_5kc4AkN4a",
    "number": 57,
    "title": "0.8.22",
    "description": null,
    "creator": {
      "login": "NunoFilipeSantos",
      "id": 2582498,
      "node_id": "MDQ6VXNlcjI1ODI0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NunoFilipeSantos",
      "html_url": "https://github.com/NunoFilipeSantos",
      "followers_url": "https://api.github.com/users/NunoFilipeSantos/followers",
      "following_url": "https://api.github.com/users/NunoFilipeSantos/following{/other_user}",
      "gists_url": "https://api.github.com/users/NunoFilipeSantos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NunoFilipeSantos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NunoFilipeSantos/subscriptions",
      "organizations_url": "https://api.github.com/users/NunoFilipeSantos/orgs",
      "repos_url": "https://api.github.com/users/NunoFilipeSantos/repos",
      "events_url": "https://api.github.com/users/NunoFilipeSantos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NunoFilipeSantos/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 15,
    "state": "open",
    "created_at": "2023-06-05T13:39:54Z",
    "updated_at": "2023-10-27T10:54:19Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-07-20T10:24:11Z",
  "updated_at": "2023-09-11T17:28:34Z",
  "closed_at": "2023-09-11T17:28:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently Natspec is tested by [`SolidityNatspecJSON.cpp`](https://github.com/ethereum/solidity/blob/develop/test/libsolidity/SolidityNatspecJSON.cpp), which contains Boost tests. Such tests are harder to maintain than our isoltest test cases. This [makes us reluctant to add more of them](https://github.com/ethereum/solidity/pull/10996#discussion_r1183772767) and leads to insufficient coverage and bugs like #14430.\r\n\r\nThe task here is to create a new isoltest test case for Natspec and covert existing test cases to it.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14433/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14433/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645551392",
    "html_url": "https://github.com/ethereum/solidity/issues/14433#issuecomment-1645551392",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14433",
    "id": 1645551392,
    "node_id": "IC_kwDOAm_5kc5iFR8g",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-21T13:01:32Z",
    "updated_at": "2023-08-09T17:47:46Z",
    "author_association": "MEMBER",
    "body": "As a first step, we need to extract source code and expectations from `SolidityNatspecJSON.cpp`. That's almost 100 cases and doing that by hand would be very tedious. Instead I wrote a one-off parser using Python's [pyparsing](https://pyparsing-docs.readthedocs.io) library to deal with the problem.\r\n\r\nThe script itself will not be useful after we run it once so I will not be submitting it as a part of my upcoming PR. It might be still serve as a template for writing similar one-off parsers though so I'm posting it here for future reference.\r\n\r\n### Parser script\r\nScript expects the content of `SolidityNatspecJSON.cpp` on standard input. The file needs to be prepared for parsing by:\r\n- Removing everything before the first `BOOST_AUTO_TEST_CASE`\r\n- Removing everything after the final `}` of the last `BOOST_AUTO_TEST_CASE`\r\n- Removing the comment before `emit_event_from_foreign_contract_no_inheritance`.\r\n- Removing some test cases - these have to be coverted manually:\r\n    - `dev_explicit_inehrit_complex` case - too complex for the script\r\n    - `dev_multiple_params_mixed_whitespace`  - non-standard whitespace would be mangled by the script\r\n\r\nThe script will create an input `.sol` file for every test case and put devdoc and userdoc expectations in expectation comments.\r\n\r\nError expectations are ignored - the current tests do not specify error messages and I will make `isoltest` just generate them instead.\r\n\r\nJSON files are passed through Python's JSON parser to convert them to a uniform style. For Solidity files indentation is converted to our usual style.\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport json\r\nimport re\r\nfrom textwrap import dedent\r\nfrom textwrap import indent\r\nimport sys\r\n\r\nimport pyparsing as pp\r\n\r\npp.ParserElement.inlineLiteralsUsing(pp.Suppress)\r\n\r\nCPP_STRING = (\r\n    pp.QuotedString(quote_char='\"', esc_char='\\\\', multiline=True)\r\n    | pp.QuotedString(quote_char='R\"(', end_quote_char=')\"', multiline=True)\r\n    | pp.QuotedString(quote_char='R\"X(', end_quote_char=')X\"', multiline=True)\r\n    | pp.QuotedString(quote_char='R\"R(', end_quote_char=')R\"', multiline=True)\r\n    | pp.QuotedString(quote_char='R\"ABCDEF(', end_quote_char=')ABCDEF\"', multiline=True)\r\n);\r\nIDENTIFIER = pp.Word(pp.identchars + pp.nums)\r\nBOOL_LITERAL = pp.Literal('true') | pp.Literal('false')\r\n\r\nSTRING_VARIABLE = pp.Group(\r\n    pp.Suppress('char') - 'const' - '*'\r\n    - IDENTIFIER('variable_name') - '='\r\n    - pp.Group(CPP_STRING[...])('content') - ';'\r\n)\r\nCHECK_NATSPEC_CALL = pp.Group(\r\n    pp.Suppress('checkNatspec') - '('\r\n    - IDENTIFIER('source_variable_name') - ','\r\n    - CPP_STRING('contract_name') - ','\r\n    - IDENTIFIER('natspec_variable_name') - ','\r\n    - BOOL_LITERAL('userdoc_flag')\r\n    - ')' - ';'\r\n)\r\nEXPECT_NATSPEC_ERROR_CALL = pp.Group(\r\n    pp.Suppress('expectNatspecError') - '('\r\n    - IDENTIFIER('source_variable_name')\r\n    - ')' - ';'\r\n)\r\n\r\nTEST_STEP = (\r\n    STRING_VARIABLE('string_variable')\r\n    | CHECK_NATSPEC_CALL('positive_expectation')\r\n    | EXPECT_NATSPEC_ERROR_CALL('negative_expectation')\r\n)\r\nTEST_BODY = '{' - TEST_STEP[...]('steps') + '}'\r\nTEST_HEADER = pp.Suppress('BOOST_AUTO_TEST_CASE') - '(' - IDENTIFIER('name') - ')'\r\nNATSPEC_TEST = pp.Group(TEST_HEADER - TEST_BODY)\r\nTEST_FILE = NATSPEC_TEST[...]\r\n\r\ndef format_error(exception):\r\n    line_number_prefix = f\"{exception.lineno} | \"\r\n    return dedent(f\"\"\"\\\r\n        {exception}\r\n        {line_number_prefix}{exception.line}\r\n        {' ':{len(line_number_prefix) + exception.col - 1}}^\r\n    \"\"\")\r\n\r\ntry:\r\n    ast = TEST_FILE.parse_string(sys.stdin.read(), parse_all=True)\r\nexcept pp.ParseException as exception:\r\n    sys.exit(format_error(exception))\r\nexcept pp.ParseSyntaxException as exception:\r\n    sys.exit(format_error(exception))\r\n\r\nfor test_case in ast:\r\n    variables = {\r\n        step.variable_name: dedent(''.join(step.content))\r\n        for step in test_case.steps\r\n        if step.get_name() == 'string_variable'\r\n    }\r\n\r\n    expectations = {'userdoc': {}, 'devdoc': {}}\r\n    for step in test_case.steps:\r\n        if step.get_name() == 'positive_expectation':\r\n            assert step.source_variable_name == 'sourceCode'\r\n            expectations[step.contract_name] = expectations.get(step.contract_name, {})\r\n\r\n            expectation_kind = 'userdoc' if step.userdoc_flag == 'true' else 'devdoc'\r\n            assert expectation_kind not in expectations[step.contract_name]\r\n            expectations[step.contract_name][expectation_kind] = json.loads(variables[step.natspec_variable_name])\r\n\r\n    input_file_name = test_case.name + '.sol'\r\n    print(f'{input_file_name}')\r\n    with open(input_file_name, 'w') as input_file:\r\n        input_file.write(\r\n            variables['sourceCode']\r\n            .strip()\r\n            .replace('\\t', '    ')\r\n            .replace('        ', '    ')\r\n            + '\\n\\n'\r\n        )\r\n        input_file.write('// ----\\n')\r\n\r\n        first = True\r\n        for contract, expectation_kinds in expectations.items():\r\n            for expectation_kind, expectation_json in sorted(expectation_kinds.items()):\r\n                if not first:\r\n                    input_file.write(f\"//\\n\")\r\n                first = False\r\n\r\n                formatted_json = re.sub(\r\n                    r'^((\\s*)\".*?\":)\\s*([\\[{])($|[^\\]}])', r'\\1\\n\\2\\3\\4',\r\n                    json.dumps(expectation_json, indent=4, sort_keys=True),\r\n                    flags=re.MULTILINE\r\n                )\r\n\r\n                input_file.write(f\"// :{contract} {expectation_kind}\\n\")\r\n                input_file.write(indent(formatted_json + '\\n', prefix='// '))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645551392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
