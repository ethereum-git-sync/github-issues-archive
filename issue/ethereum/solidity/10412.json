{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10412",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10412/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10412/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10412/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10412",
  "id": 751643696,
  "node_id": "MDU6SXNzdWU3NTE2NDM2OTY=",
  "number": 10412,
  "title": "Array clearing failure during copying in the IR",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mijovic",
    "id": 23421619,
    "node_id": "MDQ6VXNlcjIzNDIxNjE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/23421619?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mijovic",
    "html_url": "https://github.com/mijovic",
    "followers_url": "https://api.github.com/users/mijovic/followers",
    "following_url": "https://api.github.com/users/mijovic/following{/other_user}",
    "gists_url": "https://api.github.com/users/mijovic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mijovic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mijovic/subscriptions",
    "organizations_url": "https://api.github.com/users/mijovic/orgs",
    "repos_url": "https://api.github.com/users/mijovic/repos",
    "events_url": "https://api.github.com/users/mijovic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mijovic/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mijovic",
      "id": 23421619,
      "node_id": "MDQ6VXNlcjIzNDIxNjE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23421619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mijovic",
      "html_url": "https://github.com/mijovic",
      "followers_url": "https://api.github.com/users/mijovic/followers",
      "following_url": "https://api.github.com/users/mijovic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mijovic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mijovic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mijovic/subscriptions",
      "organizations_url": "https://api.github.com/users/mijovic/orgs",
      "repos_url": "https://api.github.com/users/mijovic/repos",
      "events_url": "https://api.github.com/users/mijovic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mijovic/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-11-26T14:42:12Z",
  "updated_at": "2020-12-22T14:15:04Z",
  "closed_at": "2020-12-22T14:15:04Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\nsemanticTests/array/copying/array_copy_storage_storage_static_static.sol: FAIL\r\n  Contract:\r\n    contract c {\r\n        uint256[40] data1;\r\n        uint256[20] data2;\r\n    \r\n        function test() public returns (uint256 x, uint256 y) {\r\n            data1[30] = 4;\r\n            data1[2] = 7;\r\n            data1[3] = 9;\r\n            data2[3] = 8;\r\n            data1 = data2;\r\n            x = data1[3];\r\n            y = data1[30]; // should be cleared\r\n        }\r\n    }\r\n    \r\n\r\n  Running via Yul:\r\n  Expected result:\r\n  // test() -> 8, 0\r\n\r\n  Obtained result:\r\n  // test() -> 8, 4\r\n```\r\n\r\n```\r\nsemanticTests/array/copying/array_copy_target_leftover.sol: FAIL\r\n  Contract:\r\n    contract c {\r\n        byte[10] data1;\r\n        bytes2[32] data2;\r\n        function test() public returns (uint check, uint res1, uint res2) {\r\n            uint i;\r\n            for (i = 0; i < data2.length; ++i)\r\n                data2[i] = 0xffff;\r\n            check = uint(uint16(data2[31])) * 0x10000 | uint(uint16(data2[14]));\r\n            for (i = 0; i < data1.length; ++i)\r\n                data1[i] = byte(uint8(1 + i));\r\n            data2 = data1;\r\n            for (i = 0; i < 16; ++i)\r\n                res1 |= uint(uint16(data2[i])) * 0x10000**i;\r\n            for (i = 0; i < 16; ++i)\r\n                res2 |= uint(uint16(data2[16 + i])) * 0x10000**i;\r\n        }\r\n    }\r\n\r\n  Running via Yul:\r\n  Expected result:\r\n  // test() -> 0xffffffff, 0x0000000000000000000000000a00090008000700060005000400030002000100, 0x0000000000000000000000000000000000000000000000000000000000000000\r\n\r\n  Obtained result:\r\n  // test() -> 0xffffffff, 0x0a090807060504030201, -1\r\n  Warning: Type or size of parameter(s) does not match.\r\n  Warning: Type or size of parameter(s) does not match.\r\n  Warning: Type or size of parameter(s) does not match.\r\n  Warning: The call to \"test()\" returned \r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,ff,ff,ff,ff]\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,9,8,7,6,5,4,3,2,1]\r\n  [ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff]\r\n```\r\n\r\n```\r\nsemanticTests/array/copying/array_copy_different_packing.sol: FAIL\r\n  Contract:\r\n    contract c {\r\n        bytes8[] data1; // 4 per slot\r\n        bytes10[] data2; // 3 per slot\r\n    \r\n        function test()\r\n            public\r\n            returns (bytes10 a, bytes10 b, bytes10 c, bytes10 d, bytes10 e)\r\n        {\r\n            data1 = new bytes8[](9);\r\n            for (uint256 i = 0; i < data1.length; ++i) data1[i] = bytes8(uint64(i));\r\n            data2 = data1;\r\n            a = data2[1];\r\n            b = data2[2];\r\n            c = data2[3];\r\n            d = data2[4];\r\n            e = data2[5];\r\n        }\r\n    }\r\n    \r\n\r\n  Running via Yul:\r\n  Expected result:\r\n  // test() -> 0x01000000000000000000000000000000000000000000000000, 0x02000000000000000000000000000000000000000000000000, 0x03000000000000000000000000000000000000000000000000, 0x04000000000000000000000000000000000000000000000000, 0x05000000000000000000000000000000000000000000000000\r\n\r\n  Obtained result:\r\n  // test() -> 0x0200000000000000000000000000000000000000000000000000000000, 0x030000000000000000000000000000000000000000000000000000, 0x05000000000000000400000000000000000000000000000000000000000000, 0x0600000000000000000000000000000000000000000000000000000000, 0x070000000000000000000000000000000000000000000000000000\r\n  Warning: The call to \"test()\" returned \r\n```\r\n\r\n```\r\nsemanticTests/array/copying/array_copy_target_simple.sol: FAIL\r\n  Contract:\r\n    contract c {\r\n        bytes8[9] data1; // 4 per slot\r\n        bytes17[10] data2; // 1 per slot, no offset counter\r\n    \r\n        function test()\r\n            public\r\n            returns (bytes17 a, bytes17 b, bytes17 c, bytes17 d, bytes17 e)\r\n        {\r\n            for (uint256 i = 0; i < data1.length; ++i) data1[i] = bytes8(uint64(i));\r\n            data2[8] = data2[9] = bytes8(uint64(2));\r\n            data2 = data1;\r\n            a = data2[1];\r\n            b = data2[2];\r\n            c = data2[3];\r\n            d = data2[4];\r\n            e = data2[9];\r\n        }\r\n    }\r\n    \r\n\r\n  Running via Yul:\r\n  Expected result:\r\n  // test() -> 0x01000000000000000000000000000000000000000000000000, 0x02000000000000000000000000000000000000000000000000, 0x03000000000000000000000000000000000000000000000000, 0x04000000000000000000000000000000000000000000000000, 0x0\r\n\r\n  Obtained result:\r\n  // test() -> 0x0600000000000000050000000000000004000000000000000000000000000000, 0x08000000000000000000000000000000, 0x0200000000000000010000000000000000000000000000000000000000000000, 0x0600000000000000050000000000000004000000000000000000000000000000, 0x02000000000000000000000000000000000000000000000000\r\n  Warning: The call to \"test()\" returned \r\n```\r\n\r\n```\r\nsemanticTests/array/copying/array_copy_target_leftover2.sol: FAIL\r\n  Contract:\r\n    // since the copy always copies whole slots, we have to make sure that the source size maxes\r\n    // out a whole slot and at the same time there are still elements left in the target at that point\r\n    contract c {\r\n        bytes8[4] data1; // fits into one slot\r\n        bytes10[6] data2; // 4 elements need two slots\r\n    \r\n        function test() public returns (bytes10 r1, bytes10 r2, bytes10 r3) {\r\n            data1[0] = bytes8(uint64(1));\r\n            data1[1] = bytes8(uint64(2));\r\n            data1[2] = bytes8(uint64(3));\r\n            data1[3] = bytes8(uint64(4));\r\n            for (uint256 i = 0; i < data2.length; ++i)\r\n                data2[i] = bytes10(uint80(0xffff00 | (1 + i)));\r\n            data2 = data1;\r\n            r1 = data2[3];\r\n            r2 = data2[4];\r\n            r3 = data2[5];\r\n        }\r\n    }\r\n    \r\n\r\n  Running via Yul:\r\n  Expected result:\r\n  // test() -> 0x04000000000000000000000000000000000000000000000000, 0x0, 0x0\r\n\r\n  Obtained result:\r\n  // test() -> 0x02000000000000000100000000000000000000000000000000000000000000, 0x0, 0x0\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10412/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10412/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/737155676",
    "html_url": "https://github.com/ethereum/solidity/issues/10412#issuecomment-737155676",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10412",
    "id": 737155676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzE1NTY3Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-02T10:57:51Z",
    "updated_at": "2020-12-02T10:57:51Z",
    "author_association": "MEMBER",
    "body": "@mijovic was this fixed or only partially fixed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/737155676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/737157656",
    "html_url": "https://github.com/ethereum/solidity/issues/10412#issuecomment-737157656",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10412",
    "id": 737157656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzE1NzY1Ng==",
    "user": {
      "login": "mijovic",
      "id": 23421619,
      "node_id": "MDQ6VXNlcjIzNDIxNjE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23421619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mijovic",
      "html_url": "https://github.com/mijovic",
      "followers_url": "https://api.github.com/users/mijovic/followers",
      "following_url": "https://api.github.com/users/mijovic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mijovic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mijovic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mijovic/subscriptions",
      "organizations_url": "https://api.github.com/users/mijovic/orgs",
      "repos_url": "https://api.github.com/users/mijovic/repos",
      "events_url": "https://api.github.com/users/mijovic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mijovic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-02T11:01:30Z",
    "updated_at": "2020-12-02T11:01:30Z",
    "author_association": "MEMBER",
    "body": "Only first case is fixed. Other cases throw unimplemented feature instead of wrong output.\r\nI am currently trying to finish my fix for other cases",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/737157656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
