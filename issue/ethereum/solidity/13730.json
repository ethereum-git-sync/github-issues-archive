{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13730",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13730/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13730/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13730/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13730",
  "id": 1457856019,
  "node_id": "I_kwDOAm_5kc5W5R4T",
  "number": 13730,
  "title": "Solidity could allow storage references in memory structures",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-21T12:23:18Z",
  "updated_at": "2022-11-21T12:23:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nSolidity could allow to have `storage` references in `memory` structures or even `memory` arrays.\r\n\r\n## Motivation\r\n\r\nSometimes it is handy to have memory structure with some storage refs. Now we can use this trick, uncomfortable but works:\r\n```solidity\r\ntype DataPtr is uint256;\r\n\r\nfunction get(DataPtr ptr) internal pure returns(Data storage data) {\r\n    assembly {\r\n        data.slot := ptr\r\n    }\r\n}\r\n```\r\n\r\n## Specification\r\n\r\nIt would be convenient to have `storage` refs in `memory` struct by allowing following syntax:\r\n\r\n```solidity\r\nstruct Data {\r\n    // ...\r\n}\r\n\r\nstruct Object {\r\n    Data storage data; // <- allow storage keyword here\r\n    bytes32 context;\r\n}\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13730/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13730/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
