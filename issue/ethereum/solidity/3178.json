{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3178/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3178/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3178/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3178",
  "id": 271872601,
  "node_id": "MDU6SXNzdWUyNzE4NzI2MDE=",
  "number": 3178,
  "title": "How can we mitigate the issues that can be caused by selfdestruct",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 33,
  "created_at": "2017-11-07T15:28:50Z",
  "updated_at": "2018-10-01T11:42:06Z",
  "closed_at": "2018-10-01T11:42:06Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We should discuss how Solidity could have prevented the [newer Parity multisig fiasco](https://paritytech.io/blog/security-alert.html).\r\n\r\nIt has been on my mind for a while that contracts meant to receive payments should never be selfdestructed. Actually the whole selfdestruct feature is semantically odd and a big security hole. It means \"from now on all transactions sent to this smart contract will pass through without actually being processed by the smart contract\". \r\n\r\nOptions to consider:\r\n1) Emit a warning when selfdestruct is used in a contract which has payable functions.\r\n2) Emit a warning when selfdestruct is used in a library.\r\n3) Emit a warning whenever selfdestruct is used.\r\n4) Remove selfdestruct except from inline assembly.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3178/reactions",
    "total_count": 9,
    "+1": 9,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3178/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342537582",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342537582",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342537582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjUzNzU4Mg==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T16:24:30Z",
    "updated_at": "2017-11-07T16:24:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for taking the time to think about this @frangio, because it's important. I have a slightly different take and would love to discuss it with everyone.\r\n\r\nWhile the ability of the library to selfdestruct itself was the direct cause of the Parity bug, I think the mistaken assumption here was that nobody would call the library as a contract. It breaks our assumption of libraries as meant only to be used within a delegatecall. One solution for this would be to add a check that address != caller at the top of each library bytecode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342537582/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342541018",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342541018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342541018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU0MTAxOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T16:34:24Z",
    "updated_at": "2017-11-07T16:43:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "100% agree with adding that check, and with the observation of the mistaken assumption that caused the bug.\r\n\r\nIn the particular case of the Parity bug it would not have helped, though. The \"library\" was actually [a Solidity `contract`](https://github.com/paritytech/js-shared/blob/0ce48cca1960b7ef1f6526dbef817a251ea40890/src/contracts/snippets/enhanced-wallet.sol#L64), and the main contract was [manually using `delegatecall`](https://github.com/paritytech/js-shared/blob/0ce48cca1960b7ef1f6526dbef817a251ea40890/src/contracts/snippets/enhanced-wallet.sol#L432).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342541018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342603312",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342603312",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342603312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjYwMzMxMg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T19:58:10Z",
    "updated_at": "2017-11-07T19:58:10Z",
    "author_association": "MEMBER",
    "body": "simple solution imo is to disallow selfdestruct in all libraries. It kind of defeats the purpose of libraries imo if they are destructible as they are meant to be permanent figures that are reusable. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342603312/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342642399",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342642399",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342642399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY0MjM5OQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T22:19:20Z",
    "updated_at": "2017-11-07T22:19:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "But having the library selfdestruct the contract that delegatecalls it is perfectly valid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342642399/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342643175",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342643175",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342643175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY0MzE3NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T22:21:53Z",
    "updated_at": "2017-11-07T22:24:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, @federicobond's suggestion to require that the function isn't called in the library's context would remove the problem of selfdestructing the library itself.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342643175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342645621",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342645621",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342645621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY0NTYyMQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T22:31:00Z",
    "updated_at": "2017-11-07T22:31:00Z",
    "author_association": "MEMBER",
    "body": "@federicobond true. But could a contract derive whether or not it's a delegatecall or a regular call? I think it could (and if not there should be an EIP specifying some kind of safety mechanism here) but I'm not sure. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342645621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342652495",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342652495",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342652495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY1MjQ5NQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T22:59:34Z",
    "updated_at": "2017-11-07T22:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, after doing some research it looks like it is not possible to get the address of the contract that is currently executing when inside a delegatecall. Can anyone confirm?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342652495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342653768",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342653768",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342653768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY1Mzc2OA==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T23:04:52Z",
    "updated_at": "2017-11-07T23:04:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Parity used a contract instead of a library because there is no way to declare non-constant fields inside libraries. While their solution makes sense for economic and storage efficiency reasons, it remains overly clever given our current understanding of EVM semantics.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342653768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342699247",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342699247",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342699247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY5OTI0Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T03:24:38Z",
    "updated_at": "2017-11-08T03:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@federicobond I was able to get the contract address of the execution context via the `this` variable in a library function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342699247/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342935879",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342935879",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342935879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjkzNTg3OQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T19:42:15Z",
    "updated_at": "2017-11-08T19:42:15Z",
    "author_association": "MEMBER",
    "body": "it makes sense from that standpoint but at the same time it's just better to pay the cost and be secure than trying to get clever...evidently. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342935879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342957295",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342957295",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342957295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjk1NzI5NQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T20:58:17Z",
    "updated_at": "2017-11-08T20:58:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just don't want to overfit the solution to this particular problem. It's clear that many people find proxies and delegatecall very useful and it's a pattern that will remain very popular. How can we work at the language level to ensure they are done in the safest way possible?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342957295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342958515",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-342958515",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 342958515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjk1ODUxNQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T21:03:03Z",
    "updated_at": "2017-11-08T21:03:03Z",
    "author_association": "MEMBER",
    "body": "I still say that unless the code is being injected into the contract, that libraries should forbid selfdestructs within them. It wouldn't have prevented the Parity problem, but it is something that should be paid attention to nonetheless imo. \r\n\r\nAnother option would be to ban the use of selfdestruct throughout the compiler unless you drop into assembly mode. This seems to be a fairly popular opinion in the wake of this because immutability. Personally not a fan of this approach but I can see why its taken to people.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/342958515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343633561",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343633561",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343633561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzMzU2MQ==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:23:05Z",
    "updated_at": "2017-11-11T02:23:05Z",
    "author_association": "NONE",
    "body": "The core issue was multisig, which gave ownership to anyone who asked it. To prevent same fiasco a third time, ownership of public functions should be explicit in the compiler step. (Parity lost a lot of money a few months back, same line of code in their contract, same bug.) If you want to get even more explicit about permissions, the ownership of functions (public and private) should belong to groups, and a function can only call sub functions with the same degree of ownership. We *could* support this in EVM, but supporting it in the contract compilation would halt compilation without blocking anything. The actual compiler step could merge public and private functions that are identical, costing no extra gas despite extra words. \r\n\r\nI am personally undecided about suicide in general, because Ethereum can't support current rate of growth for 3 years with or without suicide. Meanwhile a lot of money is lost.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343633561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634440",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343634440",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343634440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNDQ0MA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:39:06Z",
    "updated_at": "2017-11-11T02:39:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "First of all, the killed contract was not a true library, instead a regular contract. This problem would affect contracts that are true libraries (the ones used in \"using\" keyword\")?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634673",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343634673",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343634673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNDY3Mw==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:43:54Z",
    "updated_at": "2017-11-11T02:43:54Z",
    "author_association": "NONE",
    "body": "I don't see many ways of limiting programmer error. https://github.com/paritytech/parity/pull/6103/files",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634764",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343634764",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343634764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNDc2NA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:45:40Z",
    "updated_at": "2017-11-11T02:45:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the solution is awarness and warnings when using selfdestruct. \r\n\r\nIt's simple to fix the \"library\" contract to become safe from the first call, in Parity case you just would need to add this constructor to WalletLibrary:\r\n```\r\nfunction WalletLibrary() {\r\n initMultiowned([0x1deadbeef, 0x2deadbeef], 2);\r\n}\r\n```\r\nor something like this, but calling the initMultiowned at library constructor.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634879",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343634879",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343634879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNDg3OQ==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:47:57Z",
    "updated_at": "2017-11-11T02:47:57Z",
    "author_association": "NONE",
    "body": "The attack was 2 issued commands: initMultiowned and kill. These were the only two messages sent to the contract by the attacker. He became owner, and then suicide the contract. If we come up with some method to prevent suicide, we limit the owner takeovers to theft only instead. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343634879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343635382",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343635382",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343635382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNTM4Mg==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T02:57:35Z",
    "updated_at": "2017-11-11T02:57:35Z",
    "author_association": "NONE",
    "body": "I'll put this another way. After a well known exploit was devised against Gav's very commonly copied and pasted multisig contract, Parity decides to use the same code. They paste insecure code into a contract controlling over $100 million and get exploited. They fix the exploit. Someone else pastes the original insecure code into a shared smart contract library and labels it a UI change. Whoever did the code review didn't look to see \"oh hey, this updates contracts!\" and labeled the UI change approved. (I'm not sure I believe Parity's story in this aspect - I think they decided 5000 lines of code was too much to review and just published to manipulate prices. That may make them guilty of more crimes than criminal negligence.) Then a few months go by, someone notices the master Parity github  has the insecure code again and takes action. Rather than steal like the first hacker, he decides to self destruct the entire company and their partners with an ownership takeover and a suicide.\r\n\r\nThe way to prevent this is not be incompetent. Failing that, the compiler could require the programmer to be more explicit about function ownership.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343635382/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636150",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343636150",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343636150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjE1MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:12:36Z",
    "updated_at": "2017-11-11T03:12:36Z",
    "author_association": "MEMBER",
    "body": "> Options to consider:\r\n> 1. Emit a warning when selfdestruct is used in a contract which has payable functions.\r\n> 2. Emit a warning when selfdestruct is used in a library.\r\n> 3. Emit a warning whenever selfdestruct is used.\r\n\r\nAll these are good candidates for the Javascript static analyzer (currently part of Remix, but planned to be made into an independent library) cc @soad003.\r\n\r\nI do think selfdestruct is a legitimate feature (as long as it is part of EVM). The main issue at hand is still using `delegatecall` without validating a contract against all its implications.\r\n\r\nThe real solution I think is to create a proper framework for factory contracts with shared code, this is being discussed in #2296 and #3185.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636426",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343636426",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343636426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjQyNg==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:15:11Z",
    "updated_at": "2017-11-11T03:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RorschachRev here is not the place for bashing, but pointing out solutions, most of your \"technical' analysis is not helpful and I assume everyone here knows the obvious, please stop spamming. \r\n\r\nBy the way, what happened in this contract is what we call \"unknown unknowns\", they audited but didn't noticed this detail, and now someone spot it everyone thinks that \"is obviously ridiculous\" \"how noone seen that\", \"where are the specialists?\", this is why this was an unknown unknown, which now is known we are discussing how to prevent this type of human error how to never happen again.\r\nBlockchain technology is new for most of developers, and the techinique explored by Parity is roughly new, just like everything in Ethereum, and just now in Byzantium it can be done correctly (before that we could not return dynamic data, this would affect the hability to return delegated web3 calls that are dynamic sized. \r\nI myself was not aware of this bug in particular, and would have done in future some error like this, but I've always took care to calling the initialize function of my \"library\" contracts, just in case of unknown unknowns (regarding something unknown) see: https://etherscan.io/address/0xc0FFeEE61948d8993864a73a099c0E38D887d3F4 \r\nBut anyway this contract don't have a selfdestruct (btw its not called suicide in solidity), I did as I told, just because \"why leave it open to other init?\"\r\n\r\nI agree with @axic but also we should rise an warning for every use of selfdestruct, specially if contract does not have a constructor. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636774",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343636774",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343636774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjc3NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:22:44Z",
    "updated_at": "2017-11-11T03:22:44Z",
    "author_association": "MEMBER",
    "body": "The problem with raising warnings in the compiler is that they cannot be switched off. We only raise warnings for things which are deprecated and can be silenced by using the recommended way of the given feature.\r\n\r\nFor others which are meant to be silenceable, there is the static analyzer code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636774/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636872",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343636872",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343636872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjg3Mg==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:24:41Z",
    "updated_at": "2017-11-11T03:24:41Z",
    "author_association": "NONE",
    "body": "Sorry I wasn't trying to spam. Can we add vulnerability checks (done by some tools) into the static analyzer?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343636872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343934221",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-343934221",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 343934221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkzNDIyMQ==",
    "user": {
      "login": "soad003",
      "id": 6850271,
      "node_id": "MDQ6VXNlcjY4NTAyNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6850271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soad003",
      "html_url": "https://github.com/soad003",
      "followers_url": "https://api.github.com/users/soad003/followers",
      "following_url": "https://api.github.com/users/soad003/following{/other_user}",
      "gists_url": "https://api.github.com/users/soad003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soad003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soad003/subscriptions",
      "organizations_url": "https://api.github.com/users/soad003/orgs",
      "repos_url": "https://api.github.com/users/soad003/repos",
      "events_url": "https://api.github.com/users/soad003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soad003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:26:03Z",
    "updated_at": "2017-11-13T14:26:03Z",
    "author_association": "NONE",
    "body": "@axic i have some train time on Wednesday. I can try to build a warning into remix whenever selfdestruct is used, referring to this incident. \r\n\r\nImo it would be useful to provide the devs with a better overview about which functions a contract exports and under what conditions (preconditions) those functions can run (to make it easier to spot mistakes). Unfortunately, the definition of preconditions of functions is not done consistently in Solidity (require, modifiers, if statements with throw) which makes the automatic extraction (as well as reading contracts) a bit complicated (what about ada stlye pre and post conditions in solidity?). We could add the artificial not selfdestruct precondition to every function as soon as a selfdestruct call is found in the contract.\r\n\r\nRemix:\r\nColor(green: internal, red: public) coding of function names could help to set function visibility properly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/343934221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344289547",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-344289547",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 344289547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4OTU0Nw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T15:13:12Z",
    "updated_at": "2017-11-14T15:13:12Z",
    "author_association": "MEMBER",
    "body": "@soad003 Seems slightly off topic but I think that the coloring of function names is an excellent idea. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344289547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344592846",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-344592846",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 344592846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU5Mjg0Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T13:31:51Z",
    "updated_at": "2017-11-15T13:31:51Z",
    "author_association": "MEMBER",
    "body": "@axic I'm not really sure whether selfdestruct is such a valid feature. I remember having warned about it already at devcon1: https://chriseth.github.io/notes/talks/safe_solidity/#/4\r\n\r\nThe problem is that selfdestruct combined with a contract that can receive ether always has a race condition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344592846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344729771",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-344729771",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 344729771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDcyOTc3MQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T21:12:33Z",
    "updated_at": "2017-11-15T21:12:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth actually selfdestruct can be useful for Library Contracts. \r\n\r\nI'm exploring a concept of crafting library contracts contract that are intentionally owned and destructable by a watchdog contract, and the stub contract would check if the system contract contains code, if not it would delegate to recover address.\r\n\r\nI know there is ways of placing the emergency stop in a logic in contract itself, however using the kill of contracts that are automatically replaced by a safe recover contract seems to be a nice idea. \r\n\r\nPlease, don't get away with selfdestruct like you did with volatile constants https://github.com/ethereum/solidity/issues/976 ! :laughing:  Let's us explore it (not only for errors), although I'm fine with removing the keyword from solidity and having it only in assembly :wink: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344729771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344789349",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-344789349",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 344789349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc4OTM0OQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T01:49:14Z",
    "updated_at": "2017-11-16T01:49:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've posted a raw (untested) prototype I'm working https://github.com/3esmit/Hive-Democracy/commit/2d5641be6b53159124710cf372fe873f841f0799  using selfdestruct in a contract meant to be a Library Contract.\r\n\r\nThe advantage of this method is that once the emergencyStop is run, it's impossible to do anything else in the contract, unless the Recoverer contract conditions are met (a call from consensusContract()) setting a new system :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/344789349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346161721",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-346161721",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 346161721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjE2MTcyMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-21T21:09:23Z",
    "updated_at": "2017-11-21T21:09:23Z",
    "author_association": "MEMBER",
    "body": "Added a new related proposal to #3221.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346161721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371290815",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-371290815",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 371290815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI5MDgxNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T21:27:31Z",
    "updated_at": "2018-03-07T21:27:31Z",
    "author_association": "MEMBER",
    "body": "Is there still something we can do or can this be closed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371290815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371335481",
    "html_url": "https://github.com/ethereum/solidity/issues/3178#issuecomment-371335481",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3178",
    "id": 371335481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMzNTQ4MQ==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T00:32:31Z",
    "updated_at": "2018-03-08T00:32:31Z",
    "author_association": "NONE",
    "body": "Self destruct is the idea of making the blockchain have owner operated\ngarbage collection. I'd rather solve scalability and remove self destruct.\n\nOn Wed, Mar 7, 2018 at 2:27 PM, chriseth <notifications@github.com> wrote:\n\n> Is there still something we can do or can this be closed?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/solidity/issues/3178#issuecomment-371290815>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA0ZHd3p792avXiY0zxN4HD9Os3xzEYiks5tcFDMgaJpZM4QU939>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371335481/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
