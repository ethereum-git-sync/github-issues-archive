{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12738/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12738/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12738/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12738",
  "id": 1158956628,
  "node_id": "I_kwDOAm_5kc5FFEZU",
  "number": 12738,
  "title": "`creationCode` via IR does not match the compiler's `--bin` output when the contract has a constructor with `bytes` arguments",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376132438,
      "node_id": "MDU6TGFiZWwyMzc2MTMyNDM4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/codegen%20error",
      "name": "codegen error",
      "color": "000000",
      "default": false,
      "description": "Compiler generates invalid code. Critical."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-03-03T22:14:16Z",
  "updated_at": "2022-03-09T17:30:32Z",
  "closed_at": "2022-03-09T17:30:32Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\nIn contracts compiled with the `--experimental-via-ir` option, the bytecode returned from `type(C).creationCode` does not match the one the compiler returns from `--bin` when there's a constructor accepting a `bytes` argument.\r\n\r\n```solidity\r\ncontract C {\r\n    constructor(bytes memory x) {}\r\n}\r\n```\r\nIt does not happen if the constructor has a `unit` parameter or no parameters at all.\r\n\r\nI discovered this when I re-enabled tests in the `ir-optimize-evm+yul` preset of ElementFi external test (#12736). Note that in that PR I had to disable some tests due to known issues with Hardhat's heuristics not working with the new codegen. The remaning tests pass with the legacy codegen but 15 of them fail via IR. The bug is the cause of some of these failures.\r\n\r\nIt's the easiest to reproduce with a framework like Hardhat because this way it's possible to compare compiler output directly. We'll need #11424 to be able to compare the bytecode in isoltest (and #12737 could also be an issue).\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.12 and `develop`\r\n- Framework/IDE: Hardhat 2.9.0\r\n- Operating system: Arch Linux\r\n\r\nThe issue is reproducible as far back as 0.8.2. On 0.8.1 Hardhat crashes. On 0.8.0, 0.7.6 and 0.7.5 the compiler crashes. On 0.7.4 and earlier `viaIR` option was not available.\r\n\r\n## Steps to Reproduce\r\n\r\nRun this in the shell:\r\n```bash\r\nmkdir test/ contracts/\r\n\r\ncat <<EOF > hardhat.config.js\r\nrequire(\"@nomiclabs/hardhat-waffle\");\r\n\r\nmodule.exports = {\r\n    solidity: {\r\n        compilers: [{\r\n            version: \"0.8.12\",\r\n            settings: {\r\n                viaIR: true,\r\n                optimizer: { enabled: true },\r\n                metadata: { \"bytecodeHash\": \"none\" },\r\n            },\r\n        }]\r\n    }\r\n};\r\nEOF\r\n\r\ncat <<EOF > test/CreationCodeTest.js\r\nconst { expect } = require(\"chai\");\r\nconst { ethers } = require(\"hardhat\");\r\n\r\nconst targetJSON = require(\"../artifacts/contracts/CreationCodeTest.sol/Target.json\");\r\n\r\nit(\"Bytecode creationCode should match the bytecode in the artifact\", async () => {\r\n    const Factory = await ethers.getContractFactory(\"Factory\");\r\n    const factory = await Factory.deploy();\r\n\r\n    expect(await factory.targetCreationCode()).to.equal(targetJSON.bytecode);\r\n});\r\nEOF\r\n\r\ncat <<EOF > contracts/CreationCodeTest.sol\r\ncontract Target {\r\n    constructor(bytes memory x) {}\r\n}\r\n\r\ncontract Factory {\r\n    bytes public targetCreationCode = type(Target).creationCode;\r\n}\r\nEOF\r\n\r\nnpm install hardhat @nomiclabs/hardhat-waffle chai\r\nnpx hardhat test\r\n```\r\n\r\n```\r\nCompiled 1 Solidity file successfully\r\n\r\n\r\n  1) Bytecode creationCode should match the bytecode in the artifact\r\n\r\n  0 passing (635ms)\r\n  1 failing\r\n\r\n  1) Bytecode creationCode should match the bytecode in the artifact:\r\n\r\n      AssertionError: expected '0x6080604052346100e95761015d803803806…' to equal '0x6080604052346100e85761015b803803806…'\r\n      + expected - actual\r\n\r\n      -0x6080604052346100e95761015d8038038061001981610105565b92833981019060209081818403126100e157805167ffffffffffffffff918282116100d7570183601f820112156100c15780519182116100ca575b610066601f8301601f19168401610105565b938285528383830101116100c15781906000905b848383106100a95750501161009b575b505050604051602490816101398239f35b60009201015238808061008a565b8193508281939201015182828801015201829161007a565b50505050600080fd5b6100d26100ee565b610054565b5050505050600080fd5b505050600080fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761012b57604052565b6101336100ee565b60405256fe6080604052600080fdfea26c6578706572696d656e74616cf564736f6c634300080c0018\r\n      +0x6080604052346100e85761015b8038038061001981610104565b92833981019060209081818403126100e05780516001600160401b03918282116100d6570183601f820112156100c05780519182116100c9575b610065601f8301601f19168401610104565b938285528383830101116100c05781906000905b848383106100a85750501161009a575b505050604051602490816101378239f35b600092010152388080610089565b81935082819392010151828288010152018291610079565b50505050600080fd5b6100d16100ed565b610053565b5050505050600080fd5b505050600080fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b0381118382101761012957604052565b6101316100ed565b60405256fe6080604052600080fdfea26c6578706572696d656e74616cf564736f6c634300080c0018\r\n\r\n      at Context.<anonymous> (test/CreationCodeTest.js:10:51)\r\n```\r\n\r\nThe expected value above comes from the `bytecode` field of an artifact produced by Hardhat. This value comes directly from compiler's Standard JSON output, which can be verified by compiling the contract without Hardhat:\r\n```\r\nsolc contracts/CreationCodeTest.sol --experimental-via-ir --optimize --metadata-hash none --bin\r\n```\r\n```\r\n======= contracts/CreationCodeTest.sol:Target =======\r\nBinary:\r\n6080604052346100e85761015b8038038061001981610104565b92833981019060209081818403126100e05780516001600160401b03918282116100d6570183601f820112156100c05780519182116100c9575b610065601f8301601f19168401610104565b938285528383830101116100c05781906000905b848383106100a85750501161009a575b505050604051602490816101378239f35b600092010152388080610089565b81935082819392010151828288010152018291610079565b50505050600080fd5b6100d16100ed565b610053565b5050505050600080fd5b505050600080fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b0381118382101761012957604052565b6101316100ed565b60405256fe6080604052600080fdfea26c6578706572696d656e74616cf564736f6c634300080c0018\r\n```",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12738/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12738/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059073865",
    "html_url": "https://github.com/ethereum/solidity/issues/12738#issuecomment-1059073865",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
    "id": 1059073865,
    "node_id": "IC_kwDOAm_5kc4_IC9J",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-04T11:19:27Z",
    "updated_at": "2022-03-04T11:19:27Z",
    "author_association": "MEMBER",
    "body": "This is the opcode diff: https://gist.github.com/ekpyron/93f942e3dbeaee9259d8ee045876f99f",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059073865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059075045",
    "html_url": "https://github.com/ethereum/solidity/issues/12738#issuecomment-1059075045",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
    "id": 1059075045,
    "node_id": "IC_kwDOAm_5kc4_IDPl",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-04T11:21:11Z",
    "updated_at": "2022-03-04T11:36:07Z",
    "author_association": "MEMBER",
    "body": "So it looks like it's the constant optimizer. (And due to the constant optimizer replacing the push, the tag offsets into the bytecode shift slightly)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059075045/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059099900",
    "html_url": "https://github.com/ethereum/solidity/issues/12738#issuecomment-1059099900",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
    "id": 1059099900,
    "node_id": "IC_kwDOAm_5kc4_IJT8",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-04T11:58:23Z",
    "updated_at": "2022-03-04T12:00:51Z",
    "author_association": "MEMBER",
    "body": "I think the issue is in ``Assembly::optimiseInternal`` in ``libevmasm/Assembly.cpp.``.. it runs on subassemblies with ``settings.isCreation = false``.\r\nSo if you use ``type(C).creationCode``, the creation code of C is a subassembly and will be optimized as if it was runtime code.\r\nWhile directly running the compiler will run it with ``settings.isCreation = true;``.\r\n\r\nNot entirely sure, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059099900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059158952",
    "html_url": "https://github.com/ethereum/solidity/issues/12738#issuecomment-1059158952",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
    "id": 1059158952,
    "node_id": "IC_kwDOAm_5kc4_IXuo",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-04T13:23:43Z",
    "updated_at": "2022-03-04T13:23:43Z",
    "author_association": "MEMBER",
    "body": "```\r\n$ cat test.sol\r\ncontract C {\r\n        constructor(uint x) {\r\n         if (x == 0xFFFFFFFFFFFFFFFF42)\r\n                revert();\r\n        }\r\n}\r\ncontract D {\r\n  function f() public returns (bytes memory) {\r\n        return type(C).creationCode;\r\n  }\r\n}\r\n$ build/solc/solc test.sol --bin --optimize --experimental-via-ir\r\n======= test.sol:C =======\r\nBinary:\r\n60808060405234605357601f60cf38819003918201601f19168301916001600160401b03831184841017605957808492602094604052833981010312605357604690516073565b604051604d908160828239f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fd5b60be600160481b031460535756fe6080604052600080fdfea3646970667358221220c34b00a9edb636f4adb549f145702a1fd0e37b9874de6d0d28691c80baa0ce486c6578706572696d656e74616cf564736f6c634300080c0041\r\n\r\n======= test.sol:D =======\r\nBinary:\r\n6080806040523461001657610206908161001d8239f35b50600080fdfe6080806040526004361015610015575b50600080fd5b600090813560e01c6326121ff01461002d575061000f565b3461009657816003193601126100965760d1603f8101601f1916820167ffffffffffffffff81118382101761007f5761007b93506040528082526100f260208301396040519182918261009a565b0390f35b5050634e487b7160e01b8252506041600452602490fd5b5080fd5b919091602080825283519081818401526000945b8286106100db5750508060409394116100ce575b601f01601f1916010190565b60008382840101526100c2565b85810182015184870160400152948101946100ae56fe6080806040523460535760d180380390601f19601f83011683019183831067ffffffffffffffff841117605957808492602094604052833981010312605357604690516073565b604051604d908160848239f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fd5b68ffffffffffffffff421460535756fe6080604052600080fdfea3646970667358221220c34b00a9edb636f4adb549f145702a1fd0e37b9874de6d0d28691c80baa0ce486c6578706572696d656e74616cf564736f6c634300080c0041a364697066735822122030337086ffc914f31923263a61e33bc53e886fbb77c9612472f5b08725893c8d6c6578706572696d656e74616cf564736f6c634300080c0041\r\n```\r\n\r\nNote that ``ffffffffffffffff42`` occurs in the creation code of ``D``, but not in the creation code of ``C``.\r\nI think that's the same issue, so this may be an easier repro.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059158952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059159159",
    "html_url": "https://github.com/ethereum/solidity/issues/12738#issuecomment-1059159159",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12738",
    "id": 1059159159,
    "node_id": "IC_kwDOAm_5kc4_IXx3",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-04T13:23:58Z",
    "updated_at": "2022-03-04T13:23:58Z",
    "author_association": "MEMBER",
    "body": "Related issue: https://github.com/ethereum/solidity/issues/11118",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1059159159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
