{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12886",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12886/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12886/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12886/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12886",
  "id": 1189531559,
  "node_id": "I_kwDOAm_5kc5G5s-n",
  "number": 12886,
  "title": "Enum max values can't be used to dimension an array",
  "user": {
    "login": "gpersoon",
    "id": 5469459,
    "node_id": "MDQ6VXNlcjU0Njk0NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5469459?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gpersoon",
    "html_url": "https://github.com/gpersoon",
    "followers_url": "https://api.github.com/users/gpersoon/followers",
    "following_url": "https://api.github.com/users/gpersoon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gpersoon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gpersoon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gpersoon/subscriptions",
    "organizations_url": "https://api.github.com/users/gpersoon/orgs",
    "repos_url": "https://api.github.com/users/gpersoon/repos",
    "events_url": "https://api.github.com/users/gpersoon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gpersoon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-04-01T09:43:11Z",
  "updated_at": "2022-08-17T13:48:55Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nEnum max values can't be used to dimension an array.\r\nAn enum max value can be assigned to a constant. But that constant can't be used as an array size.\r\n'Normal' constants can be used to dimension an array.\r\nSee example below.\r\n\r\n## Environment\r\n- Compiler version: 0.8.13\r\n- Target EVM version (as per compiler settings): default\r\n- Framework/IDE (e.g. Truffle or Remix): Remix \r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system: Windows\r\n\r\n## Steps to Reproduce\r\n\r\n```solidity\r\n//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\ncontract test {\r\n    enum ParameterIndexes { P1,P2 }\r\n    uint constant x1 = uint(type(ParameterIndexes).max);\r\n    uint256[x1] params1; // Doesn't compile: Error expected integer literal or constant expression\r\n\r\n    uint256[uint(type(ParameterIndexes).max)] params2; // Doesn't compile: Error expected integer literal or constant expression\r\n\r\n    uint constant x2 = 7;\r\n    uint256[x2] params3; // Does compile\r\n}\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12886/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12886/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086192208",
    "html_url": "https://github.com/ethereum/solidity/issues/12886#issuecomment-1086192208",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12886",
    "id": 1086192208,
    "node_id": "IC_kwDOAm_5kc5AvfpQ",
    "user": {
      "login": "StrongerXi",
      "id": 26714592,
      "node_id": "MDQ6VXNlcjI2NzE0NTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26714592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StrongerXi",
      "html_url": "https://github.com/StrongerXi",
      "followers_url": "https://api.github.com/users/StrongerXi/followers",
      "following_url": "https://api.github.com/users/StrongerXi/following{/other_user}",
      "gists_url": "https://api.github.com/users/StrongerXi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StrongerXi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StrongerXi/subscriptions",
      "organizations_url": "https://api.github.com/users/StrongerXi/orgs",
      "repos_url": "https://api.github.com/users/StrongerXi/repos",
      "events_url": "https://api.github.com/users/StrongerXi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StrongerXi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T18:06:22Z",
    "updated_at": "2022-04-01T18:06:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please see #12832",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086192208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086196953",
    "html_url": "https://github.com/ethereum/solidity/issues/12886#issuecomment-1086196953",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12886",
    "id": 1086196953,
    "node_id": "IC_kwDOAm_5kc5AvgzZ",
    "user": {
      "login": "StrongerXi",
      "id": 26714592,
      "node_id": "MDQ6VXNlcjI2NzE0NTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26714592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StrongerXi",
      "html_url": "https://github.com/StrongerXi",
      "followers_url": "https://api.github.com/users/StrongerXi/followers",
      "following_url": "https://api.github.com/users/StrongerXi/following{/other_user}",
      "gists_url": "https://api.github.com/users/StrongerXi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StrongerXi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StrongerXi/subscriptions",
      "organizations_url": "https://api.github.com/users/StrongerXi/orgs",
      "repos_url": "https://api.github.com/users/StrongerXi/repos",
      "events_url": "https://api.github.com/users/StrongerXi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StrongerXi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T18:12:38Z",
    "updated_at": "2022-04-01T18:12:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "If there is a strong use case for this, maybe we should consider making `ConstantEvaluator` more aggressive to handle these cases? i.e., elementary type casting on constant expression, and expression like `type(...).max`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086196953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086922539",
    "html_url": "https://github.com/ethereum/solidity/issues/12886#issuecomment-1086922539",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12886",
    "id": 1086922539,
    "node_id": "IC_kwDOAm_5kc5AyR8r",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-03T18:23:46Z",
    "updated_at": "2022-04-03T18:23:46Z",
    "author_association": "MEMBER",
    "body": "To explain what's going on here, array length should be known during the beginning of the analysis time. However, the expressions `type(Enum).max` and `uint(type(Enum).max)` are currently only known towards the end of the code generation. To do this properly, we need better support for compile time constant evaluation. See https://github.com/ethereum/solidity/issues/3157. However, maybe it is possible to create special cases for `uint(...)` and `type(Enum).max` to deal with this easily. Similar examples are `type(uint8).max`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086922539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1096587344",
    "html_url": "https://github.com/ethereum/solidity/issues/12886#issuecomment-1096587344",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12886",
    "id": 1096587344,
    "node_id": "IC_kwDOAm_5kc5BXJhQ",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-12T11:13:03Z",
    "updated_at": "2022-04-12T11:13:03Z",
    "author_association": "MEMBER",
    "body": "I don't think this really needs #3157 to be done properly. It's related but the problem seems to be not in evaluating it (you can already assign `type(...).max` to a constant and it gets evaluated at compile time) but in the analysis being aware that it's a constant at the point where it's used to size an array.\r\n\r\nI think it could be solved in a way similar to #12928, i.e. by just marking the expression as pure. May also need moving the evaluation of `type(...).max` earlier in the analysis but this seems like something that we should be able to evaluate as soon as we have the enum definition parsed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1096587344/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
