{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7111/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7111/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7111/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7111",
  "id": 468604999,
  "node_id": "MDU6SXNzdWU0Njg2MDQ5OTk=",
  "number": 7111,
  "title": "Solidity compiler output does not say what contracts a contract can create ",
  "user": {
    "login": "seanyoung",
    "id": 816900,
    "node_id": "MDQ6VXNlcjgxNjkwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/seanyoung",
    "html_url": "https://github.com/seanyoung",
    "followers_url": "https://api.github.com/users/seanyoung/followers",
    "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
    "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
    "organizations_url": "https://api.github.com/users/seanyoung/orgs",
    "repos_url": "https://api.github.com/users/seanyoung/repos",
    "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
    "received_events_url": "https://api.github.com/users/seanyoung/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-07-16T11:39:45Z",
  "updated_at": "2022-08-17T13:48:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm trying to create a mapping from contract to metadata (via codehash but metadata hash is also possible). It would be useful to know what contracts a contract can create; simply a list of names should suffice.\r\n\r\n`contracts[\"sourceFile.sol\"][\"MyContract\"][\"creates\"] = [ \"foo\", \"bar\" ]`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7111/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7111/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511802181",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-511802181",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 511802181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTgwMjE4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T12:51:05Z",
    "updated_at": "2019-07-16T12:51:05Z",
    "author_association": "MEMBER",
    "body": "What is the exact use-case, and how is \"a contract creates another contract\" defined?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511802181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511809100",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-511809100",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 511809100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTgwOTEwMA==",
    "user": {
      "login": "seanyoung",
      "id": 816900,
      "node_id": "MDQ6VXNlcjgxNjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanyoung",
      "html_url": "https://github.com/seanyoung",
      "followers_url": "https://api.github.com/users/seanyoung/followers",
      "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/seanyoung/orgs",
      "repos_url": "https://api.github.com/users/seanyoung/repos",
      "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T13:11:06Z",
    "updated_at": "2019-07-16T13:11:06Z",
    "author_association": "NONE",
    "body": "@chriseth yes, you are right -- this needs further explaining.\r\n\r\nConsider this solidity source file:\r\n```\r\ncontract A {\r\n\tfunction createB() public returns (B) {\r\n\t\treturn new B();\r\n\t}\r\n\r\n\tfunction createC() public returns (C) {\r\n\t\treturn new C();\r\n\t}\r\n}\r\n\r\ncontract B {\r\n\tuint public n;\r\n}\r\n\r\ncontract C {\r\n\tuint public k;\r\n}\r\n\r\ncontract D {\r\n        uint public d;\r\n}\r\n```\r\nNow when I compile this I would like to know that contract A can create B and C (not D), and that B, C, D do not create any contracts.\r\n\r\nThe reason I would like this so that I can track metadata for contracts. When contract A executes a CREATE/CREATE2 opcode, I can match the bytecode against the Evm.DeployedBytecode.Object from contract B or C, and figure out which contract it has created. In this way burrow can know which contract the created contract is (B or C), and we can serve metadata like ABI for the contract.\r\n\r\nAt the moment we're collecting all the DeployedBytecode for all the contracts in the output of the solidity  compiler. This is fragile in several ways; for example in the above case we do not know that D can never be created.\r\n\r\nHope that helps please let me know if I should elaborate further. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511809100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511814880",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-511814880",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 511814880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTgxNDg4MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T13:26:20Z",
    "updated_at": "2019-07-16T13:26:20Z",
    "author_association": "MEMBER",
    "body": "At the time of creation, you can take a look at the metadata (\"compilationTarget\") and it will tell you which contract is just being created. Would that help?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511814880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511819233",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-511819233",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 511819233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTgxOTIzMw==",
    "user": {
      "login": "seanyoung",
      "id": 816900,
      "node_id": "MDQ6VXNlcjgxNjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanyoung",
      "html_url": "https://github.com/seanyoung",
      "followers_url": "https://api.github.com/users/seanyoung/followers",
      "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/seanyoung/orgs",
      "repos_url": "https://api.github.com/users/seanyoung/repos",
      "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T13:37:28Z",
    "updated_at": "2019-07-16T13:37:28Z",
    "author_association": "NONE",
    "body": "I would like to know ahead-of-time (compile-time) what contracts could possibly be created. Then I can register the metadata for those contracts before the time of creation, so that the metadata is ready and available for them when the create happens.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511819233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511839196",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-511839196",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 511839196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTgzOTE5Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T14:25:16Z",
    "updated_at": "2019-07-16T14:25:16Z",
    "author_association": "MEMBER",
    "body": "If you do that off-chain anyway, why not just register everything that gets compiled?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/511839196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512549326",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-512549326",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 512549326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjU0OTMyNg==",
    "user": {
      "login": "seanyoung",
      "id": 816900,
      "node_id": "MDQ6VXNlcjgxNjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanyoung",
      "html_url": "https://github.com/seanyoung",
      "followers_url": "https://api.github.com/users/seanyoung/followers",
      "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/seanyoung/orgs",
      "repos_url": "https://api.github.com/users/seanyoung/repos",
      "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T20:09:26Z",
    "updated_at": "2019-07-17T20:09:26Z",
    "author_association": "NONE",
    "body": "First of all,  it would be great to able to restrict contract creation to exactly the set that contract can create, and nothing more. In burrow we CREATE and CREATE2 can fail now if the bytecode does not match: see https://github.com/hyperledger/burrow/blob/3287fd37cc6c77a41a294a365320ffe8857576ea/execution/evm/state.go#L240\r\n\r\nSecondly, please bare with me while I go through the issue we are having. Take this soliidity source:\r\n\r\n```\r\nlibrary LIB {\r\n\tfunction ans() public returns (uint) {\r\n\t\treturn 42;\r\n\t}\r\n}\r\n\r\ncontract C {\r\n\tfunction getAnswer() public returns (uint) {\r\n\t\treturn LIB.ans();\r\n\t}\r\n}\r\n```\r\nSay we want deploy LIB. When we compile this, we get two entires Evm.DeployedBytecode. We don't know if LIB creates C or not; however C has unresolved symbols. So off-chain when we deploy LIB, we try to resolve the symbols in all the deployedbytecode entries, and fail. So, we can guess that LIB probably does not create C, but it would be nice to that for sure rather than take an educated guess.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/512549326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/916957390",
    "html_url": "https://github.com/ethereum/solidity/issues/7111#issuecomment-916957390",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7111",
    "id": 916957390,
    "node_id": "IC_kwDOAm_5kc42p6jO",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-10T14:41:49Z",
    "updated_at": "2021-09-10T14:41:49Z",
    "author_association": "MEMBER",
    "body": "Does the `contractDependencies` annotation in the AST solve this problem? After  #9565/#10228 it includes all contracts that might be created (though it might also include other contracts whose bytecode had to be embedded in the main contract for other reasons).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/916957390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
