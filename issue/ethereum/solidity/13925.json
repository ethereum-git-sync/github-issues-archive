{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13925",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13925/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13925/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13925/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13925",
  "id": 1570129266,
  "node_id": "I_kwDOAm_5kc5dlkVy",
  "number": 13925,
  "title": "CLI and Standard JSON do not generate the same outputs in case of errors at code generation stage",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438490842,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3-2g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20have",
      "name": "should have",
      "color": "ffbe6c",
      "default": false,
      "description": "We like the idea but itâ€™s not important enough to be a part of the roadmap."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-03T16:46:10Z",
  "updated_at": "2023-06-28T15:44:41Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\nWhen compilation fails due to an ICE or error at the code generation stage or later, Standard JSON still gives user some outputs, e.g. metadata, while the CLI does not. For consistency both should provide the same outputs.\r\n\r\nOne consequence of this inconsistent behavior is that ICEs [have to be ignored by `prepare_report.py`](https://github.com/ethereum/solidity/blob/v0.8.18/scripts/bytecodecompare/prepare_report.py#L134-L140) and [by `prepare_report.js`](https://github.com/ethereum/solidity/blob/v0.8.18/scripts/bytecodecompare/prepare_report.js#L75-L82) in our bytecode comparison. This potentially hides some ICEs that may happen only in the emscripten binary (e.g. #13924) - we won't detect such inconsistent ICEs otherwise because we don't run full test suite against the emscripten binary. We'll be able to remove this workaround when the problem is fixed.\r\n\r\nEnsuring that all those inputs are getting printed correctly on the CLI is going to take some effort so my suggestion would be to fix it by just hiding all the outputs in case of an ICE or other such errors. They're unlikely to be of much use in that case anyway.\r\n\r\n### How to reproduce\r\nThis applies at least to `UnimplementedFeatureError` (ICE), `CompilerError` (ICE), `CodeGenerationError` (error) but may also affect other types that just don't happen in any of our test cases currently.\r\n\r\n#### Input\r\n`test.sol`\r\n```solidity\r\npragma solidity *;\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\ncontract C {\r\n    uint immutable x;\r\n    constructor() {\r\n        x = 0;\r\n        revert(\"\");\r\n    }\r\n    function f() external view returns(uint) {\r\n        return x;\r\n    }\r\n}\r\n```\r\n`test.json`\r\n```json\r\n{\r\n    \"language\": \"Solidity\",\r\n    \"sources\": {\r\n        \"test.sol\": {\"urls\": [\"test.sol\"]}\r\n    },\r\n    \"settings\": {\r\n        \"outputSelection\": {\"*\": { \"*\": [\"metadata\", \"evm.bytecode\"]}}\r\n    }\r\n}\r\n```\r\n#### CLI\r\n```bash\r\nsolc test.sol --optimize --metadata --bin\r\n```\r\n```\r\nError: Some immutables were read from but never assigned, possibly because of optimization.\r\n```\r\n\r\n#### Standard JSON\r\n```bash\r\nsolc --standard-json test.json --json-indent 4 --allow-paths .\r\n```\r\n```json\r\n{\r\n    \"contracts\":\r\n    {\r\n        \"test.sol\":\r\n        {\r\n            \"C\":\r\n            {\r\n                \"metadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.17+commit.8df45f5f\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"f\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{},\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"test.sol\\\":\\\"C\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":false,\\\"runs\\\":200},\\\"remappings\\\":[]},\\\"sources\\\":{\\\"test.sol\\\":{\\\"keccak256\\\":\\\"0x082c821cef2fd83774f15988052d30d20b86dcf465cdf8675717e7fd43685128\\\",\\\"license\\\":\\\"GPL-3.0\\\",\\\"urls\\\":[\\\"bzz-raw://a7ddee9e3fe3639b7e8d0133e3b29806926877831790345aeff11f308e2cd345\\\",\\\"dweb:/ipfs/QmPKyguCF7nwnDD9ahfiRJRVx5H9aNJ5ajCehwUm52Nkzd\\\"]}},\\\"version\\\":1}\"\r\n            }\r\n        }\r\n    },\r\n    \"errors\":\r\n    [\r\n        {\r\n            \"component\": \"general\",\r\n            \"errorCode\": \"1284\",\r\n            \"formattedMessage\": \"CodeGenerationError: Some immutables were read from but never assigned, possibly because of optimization.\\n\\n\",\r\n            \"message\": \"Some immutables were read from but never assigned, possibly because of optimization.\",\r\n            \"severity\": \"error\",\r\n            \"type\": \"CodeGenerationError\"\r\n        }\r\n    ],\r\n    \"sources\":\r\n    {\r\n        \"test.sol\":\r\n        {\r\n            \"id\": 0\r\n        }\r\n    }\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13925/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13925/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1416175471",
    "html_url": "https://github.com/ethereum/solidity/issues/13925#issuecomment-1416175471",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13925",
    "id": 1416175471,
    "node_id": "IC_kwDOAm_5kc5UaR9v",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-03T17:24:25Z",
    "updated_at": "2023-02-03T17:24:25Z",
    "author_association": "MEMBER",
    "body": "Is the example you provided above (CLI vs JSON) the expected outcome, or the current outcome? If it's the current outcome, then the error message is present in both cases and could technically be compared, or does CLI need to be enriched with more data for this to be possible? Also, perhaps these kinds of comparisons should be part of a different pipeline, since in case of ICE, no bytecode will be generated, and thus there is nothing to be compared, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1416175471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1416187957",
    "html_url": "https://github.com/ethereum/solidity/issues/13925#issuecomment-1416187957",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13925",
    "id": 1416187957,
    "node_id": "IC_kwDOAm_5kc5UaVA1",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-03T17:35:29Z",
    "updated_at": "2023-06-28T15:44:41Z",
    "author_association": "MEMBER",
    "body": "It's the current output.\r\n\r\nIt's not about the error message (which is indeed present in both cases). It's that Standard JSON provides other outputs when the message is there while CLI does not. In particular the metadata, which we include in the bytecode report. So if there's an error we still have something to compare.\r\n\r\nI mean, we could make the report script omit that info, but the root cause is really the inconsistent output. I'd rather fix that.\r\n\r\n> Also, perhaps these kinds of comparisons should be part of a different pipeline\r\n\r\nWe could have a separate job that compiles all the bytecode snippets with emscripten binary and makes sure none of them fails. We already have that as a part of the bytecode check though so that's redundant and extra work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1416187957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420905475",
    "html_url": "https://github.com/ethereum/solidity/issues/13925#issuecomment-1420905475",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13925",
    "id": 1420905475,
    "node_id": "IC_kwDOAm_5kc5UsUwD",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-07T14:53:03Z",
    "updated_at": "2023-02-07T14:53:03Z",
    "author_association": "MEMBER",
    "body": "I actually don't think we should fix this the way you suggest, especially separately from the CLI rewrite. I also don't see how this relates to https://github.com/ethereum/solidity/issues/13924 - we don't need equalized outputs to check ICEs against ICEs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420905475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424693873",
    "html_url": "https://github.com/ethereum/solidity/issues/13925#issuecomment-1424693873",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13925",
    "id": 1424693873,
    "node_id": "IC_kwDOAm_5kc5U6xpx",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T19:18:47Z",
    "updated_at": "2023-02-09T19:18:47Z",
    "author_association": "MEMBER",
    "body": "It's related in the sense that the bytecode compare job should be able to detect such an ICE and flag that problem earlier but it did not due this issue. We did not have to skip ICEs if the output was consistent.\r\n\r\nAnd it can be fixed completely independently of the rewrite. Putting everything off until the rewrite just makes it grow in scope and moves it further away. I think that problems that can be fixed independently, should be.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1424693873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
