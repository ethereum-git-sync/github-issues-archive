{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13799",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13799/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13799/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13799/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13799",
  "id": 1492695902,
  "node_id": "I_kwDOAm_5kc5Y-Lte",
  "number": 13799,
  "title": "Unchecked expressions",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-12T20:27:10Z",
  "updated_at": "2022-12-12T21:31:19Z",
  "closed_at": "2022-12-12T21:31:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "https://github.com/ethereum/solidity/issues/10698 proposed \"unchecked blocks as expressions\" and even more generally \"blocks as expressions\". In the same issue, unchecked operators were discussed (with a few syntax proposals like `+u` or `+!`).\r\n\r\nThese may be interesting proposals but have perhaps unnecessarily turned a simpler problem into a much larger and more difficult one.\r\n\r\n## Abstract\r\n\r\nThere are at least two concrete patterns using unchecked which are currently not well served by the language:\r\n\r\n1) Use of unchecked in loop expression\r\n\r\n```solidity\r\nfor (uint i; i < x; ) {\r\n    ...;\r\n    unchecked { i++; }\r\n}\r\n```\r\n\r\n2) Use of unchecked in variable initialization\r\n\r\n```solidity\r\nuint256 apple;\r\nunchecked { apple = banana + cherry; }\r\n```\r\n\r\nBoth of these could be improved through the introduction of unchecked expressions.\r\n\r\n\r\n## Specification\r\n\r\nIntroduce a new unary operator `unchecked` such that the value of `unchecked E` is the value of expression `E` as if it was evaluated in an `unchecked` block.\r\n\r\nWith this operator we would be able to implement the previous patterns more neatly:\r\n\r\n```solidity\r\nfor (uint i; i < x; unchecked i++) {\r\n    ...;\r\n}\r\nuint256 apple = unchecked banana + cherry;\r\n```\r\n\r\nMy initial thoughts are that the precedence of this operator should be lower than arithmetic operators and higher than bitwise operators, so as to enable writing `unchecked a + b`.\r\n\r\nIt is worth considering that the [Solidity precedence table](https://docs.soliditylang.org/en/latest/cheatsheet.html#order-of-precedence-of-operators) lists \"unary operators (`delete`)\" with higher precedence than arithmetic operators, and based on this documentation there may be third-party parsers that parse all unary keyword operators with this precedence (unsure of this). For comparison, [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence) does have unary keyword operators with different precedences (e.g. `delete` vs `yield`).\r\n\r\nNote that if \"blocks as expressions\" are ever introduced into the language, the syntax `unchecked { ... }` becomes ambiguous but the semantics would be exactly the same, so it should not present a problem.",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13799/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13799/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1347361061",
    "html_url": "https://github.com/ethereum/solidity/issues/13799#issuecomment-1347361061",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13799",
    "id": 1347361061,
    "node_id": "IC_kwDOAm_5kc5QTxkl",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T21:31:19Z",
    "updated_at": "2022-12-12T21:31:19Z",
    "author_association": "MEMBER",
    "body": "I'm closing this for the analog reasons as given in https://github.com/ethereum/solidity/issues/10698#issuecomment-1347357509, since while this is a valid proposal, we're working towards different solutions solving the underlying issues, i.e. on solving this on the type-level instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1347361061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
