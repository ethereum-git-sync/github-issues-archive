{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/909",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/909/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/909/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/909/events",
  "html_url": "https://github.com/ethereum/solidity/issues/909",
  "id": 171424903,
  "node_id": "MDU6SXNzdWUxNzE0MjQ5MDM=",
  "number": 909,
  "title": "Enums with data / sum datatype / algebraic datatypes",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4437999539,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZ_sw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20effort",
      "name": "high effort",
      "color": "ff54f4",
      "default": false,
      "description": "A lot to implement but still doable by a single person. The task is large or difficult."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2016-08-16T14:21:04Z",
  "updated_at": "2022-09-14T18:04:44Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a story that already exists is pivotal tracker.\n\nSolidity should support sum datatype similar to how they are supported by rust.\n\n```\n// Enum holding additional data (marked union / sum datatype)\nenum Commitment {\n    Hidden(bytes32 hash),\n    Revealed(uint value)\n}\n\nfunction reveal(Commitment storage self, uint _value, uint _nonce) {\n    if (self == Commitment.Hidden && self.Hidden.hash == sha3(_value, _nonce))\n        self = Commitment.Revealed(_value);\n}\n```\n\nComparison between enum types and enum field names (like `Commitment.Hidden`) is done based on the enum value only (data is ignored) but comparisons between enum variables is a deep comparison.\n\nBecause of the fact that references to the storage location of `self.Hidden.hash` can be kept, while `self` is switched to `Revealed`, the storage and memory locations of `Commitment.Hidden.hash` and `Commitment.Revealed.value` cannot overlap.\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/909/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/909/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307440850",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-307440850",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 307440850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ0MDg1MA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T16:48:03Z",
    "updated_at": "2017-06-09T16:48:03Z",
    "author_association": "MEMBER",
    "body": "* I'm inclined for this kind of syntax:\r\n```\r\nfunction reveal(Commitment storage self, uint _value, uint _nonce) {\r\n    case (self) {\r\n        Commitment.Hidden(byte32 h) {\r\n            if (h == sha3(_value, _nonce)) {\r\n            }\r\n        }\r\n        Commitment.Revealed(uint _) {\r\n            throw;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n* I am kind of against the \"ignoring the data\" behavior of  `==` operator.  We lose a nice property\r\n`if (x == y) { x = y; }` is always a no-op (except for gas).\r\n\r\n* Further, I would introduce a `case`-expression like\r\n```\r\nhash content =\r\n    case (self) {\r\n        Commitment.Hidden(byte32 h) {\r\n           h\r\n        }\r\n        Commitment.Revealed(uint _) {\r\n            throw;\r\n        }\r\n    };\r\n```\r\n\r\n\r\n* This has a nice algebraic property:\r\n\r\n```\r\ncase(Commitment.Hidden(0xaabbcc)) {\r\n   Commitment.Hidden(byte32 h) {\r\n      h\r\n   }\r\n}\r\n```\r\ncan be rewritten into just `h`.  The constructor of the algebraic datatype cancels with the destructor.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307440850/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307744961",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-307744961",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 307744961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzc0NDk2MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T09:59:54Z",
    "updated_at": "2017-06-12T09:59:54Z",
    "author_association": "MEMBER",
    "body": "I agree that we need some kind of match expressions. Concerning `if (x == y) {x = y;}`: It is only a no-op if the common type of `x` and `y` is that of `x`, but yes, the comparison proposed in the description might be too misleading. If we can get same same functionality using match expressions with not too much more code, I'm fine with dropping it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307744961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307795799",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-307795799",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 307795799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzc5NTc5OQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T13:52:14Z",
    "updated_at": "2017-06-12T13:52:14Z",
    "author_association": "MEMBER",
    "body": "@chriseth what about this instead of the not so equal equality?\r\n\r\n```\r\nfunction reveal(Commitment storage self, uint _value, uint _nonce) {\r\n    if (self.Hidden && self.Hidden.hash == sha3(_value, _nonce))\r\n        self = Commitment.Revealed(_value);\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307795799/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307807677",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-307807677",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 307807677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzgwNzY3Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T14:33:34Z",
    "updated_at": "2017-06-12T14:33:34Z",
    "author_association": "MEMBER",
    "body": "Hm, that looks like a good solution!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/307807677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334735819",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-334735819",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 334735819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDczNTgxOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T12:03:37Z",
    "updated_at": "2020-08-12T13:58:37Z",
    "author_association": "MEMBER",
    "body": "Original one in Pivotaltracker: https://www.pivotaltracker.com/story/show/94901930\r\n\r\n> Implement enums similar to how they are used in Rust:\r\n> \r\n> ```\r\n> enum Node { Inner(uint left, uint right), Leaf(bytes32 label) }\r\n> mapping(uint => Node) nodes;\r\n> function walk(uint nodeId) {\r\n>   // Comparison to bare enum is done only on the enum value itself and not the data\r\n>   if (nodes[nodeId] == Node.Inner) {\r\n>     // \"Inner\" is needed to disambiguate\r\n>     walk(nodes[nodeId].Inner.left);\r\n>     // Accessing \".Inner\" for a non-inner node results in an exception\r\n>     walk(nodes[nodeId].Inner.right);\r\n>   } else {\r\n>     report(nodes[nodeId].Leaf.label);\r\n>   }\r\n> }\r\n> function append(uint nodeId, bytes32 label) {\r\n>   nodes[nodeId] = Node.Leaf(label);\r\n> }\r\n> ```\r\n> \r\n> This saves storage space as the data for the different variants is stored at shared places (i.e. it is a type-safe union). If only 31 bytes are used for all variants, this still fits into a single storage slot together with the enum value.\r\n> If reference types are used as data, they cannot be stored in-place, because someone could store a reference and change the (enum-)value of the variable, which would result in a type error. Instead, the reference type has to be stored at e.g. `sha3(enum_value, position)`.\r\n> \r\n> Destructuring assignment and match expressions are not part of this story.\r\n> \r\n> Problems to overcome: Right-hand-side context in an assignment is not different from context in an equality comparison, but maybe we can work around this using binaryOperatorResult to force conversion to non-reference and stripped-down value before comparison.\r\n>  Note that delete on a data-enum has to either check the variant or erase all possible values which might include variably-sized arrays. The same has to be done when an enum is overwritten.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334735819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527883245",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-527883245",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 527883245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzg4MzI0NQ==",
    "user": {
      "login": "loredanacirstea",
      "id": 4785356,
      "node_id": "MDQ6VXNlcjQ3ODUzNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4785356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loredanacirstea",
      "html_url": "https://github.com/loredanacirstea",
      "followers_url": "https://api.github.com/users/loredanacirstea/followers",
      "following_url": "https://api.github.com/users/loredanacirstea/following{/other_user}",
      "gists_url": "https://api.github.com/users/loredanacirstea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loredanacirstea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loredanacirstea/subscriptions",
      "organizations_url": "https://api.github.com/users/loredanacirstea/orgs",
      "repos_url": "https://api.github.com/users/loredanacirstea/repos",
      "events_url": "https://api.github.com/users/loredanacirstea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loredanacirstea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T12:42:29Z",
    "updated_at": "2019-09-04T12:42:29Z",
    "author_association": "NONE",
    "body": "This would be needed for a decentralized typing system like [dType](https://github.com/pipeos-one/dType). If dType were to support the choice operator itself, it would have significant overhead (storage, complexity..).\r\n\r\nBut other projects might also benefit. A usecase example would be:\r\n```\r\nPostalAddress:: StreetAddress * UnitAddress * PostalCode * City * Country\r\nGeoLocation:: Latitude * Longitude\r\nLocation:: PostalAddress + GeoLocation\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527883245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530714464",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-530714464",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 530714464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDcxNDQ2NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T08:05:07Z",
    "updated_at": "2019-09-12T08:05:07Z",
    "author_association": "MEMBER",
    "body": "Putting this in 0.7.0 so we can talk about it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530714464/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574698458",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-574698458",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 574698458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDY5ODQ1OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T15:00:58Z",
    "updated_at": "2020-01-15T15:00:58Z",
    "author_association": "MEMBER",
    "body": "Question: should only value-types be supported or all types, including reference types, so arrays and structs? For the latter we have the problem of \"dangling references\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574698458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574707937",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-574707937",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 574707937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDcwNzkzNw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T15:20:24Z",
    "updated_at": "2020-01-15T15:20:24Z",
    "author_association": "MEMBER",
    "body": "[assigning myself for creating a more detailed proposal]",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574707937/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/672870612",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-672870612",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 672870612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjg3MDYxMg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-12T13:28:31Z",
    "updated_at": "2020-08-12T13:28:31Z",
    "author_association": "MEMBER",
    "body": "Here we are missing a lot information:\r\n- Use cases / requirements\r\n- Syntax for declaration\r\n- Syntax for usage (switch statement proposed above, match statement from Rust, etc.)\r\n- Encoding\r\n\r\nIt would be possible to consider this with different levels of complexity:\r\na) Single value, value types only\r\nb) Single value, complex types only\r\nc) Multiple values, value types only\r\nd) Multiple values, complex types only\r\n\r\nWhile a) is the simplest, it may not be good enough for most use cases, and likely b) is a \"poor man's version\" of c) or d).\r\n\r\nAnother important aspect to note is that would we start with a) and then implement b), there is a risk that the encoding would change in a backwards incompatible way, or it would produce awkward rules to keep backwards compatibility. Because of this @ekpyron's suggestion is to first consider the least restrictive option and think how that would be encoded in memory/storage, and perhaps restrict the implementation once we are clear how to encode it.\r\n\r\nWe should also collect more feedback on use cases, before settling on any of these.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/672870612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/709586816",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-709586816",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 709586816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTU4NjgxNg==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-15T20:59:10Z",
    "updated_at": "2020-10-28T16:54:37Z",
    "author_association": "MEMBER",
    "body": "Here's my proposal for how this would work. I'm still working on the encoding part so here's the part regarding syntax and semantics so that I can get some feedback.\r\n\r\nEDIT: This ended up being pretty long so I moved my proposal to a gist: [Enums with data in Solidity](https://gist.github.com/cameel/4d739dc452645539c431ace0d326f146)\r\n\r\nHere's [the specific revision of the gist that was originally in this comment](https://gist.github.com/cameel/4d739dc452645539c431ace0d326f146/1915cfbbd5a46b570c10792f524f00740baa71aa).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/709586816/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/710621582",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-710621582",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 710621582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDYyMTU4Mg==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-16T20:57:23Z",
    "updated_at": "2020-10-26T13:53:46Z",
    "author_association": "MEMBER",
    "body": "EDIT: This comment originally had the encoding description. Now it's in the same gist as syntax and semantics. The original text is in [this specific revision](https://gist.github.com/cameel/4d739dc452645539c431ace0d326f146/1915cfbbd5a46b570c10792f524f00740baa71aa).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/710621582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1185600400",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-1185600400",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 1185600400,
    "node_id": "IC_kwDOAm_5kc5GqtOQ",
    "user": {
      "login": "Pzixel",
      "id": 11201122,
      "node_id": "MDQ6VXNlcjExMjAxMTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11201122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pzixel",
      "html_url": "https://github.com/Pzixel",
      "followers_url": "https://api.github.com/users/Pzixel/followers",
      "following_url": "https://api.github.com/users/Pzixel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pzixel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pzixel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pzixel/subscriptions",
      "organizations_url": "https://api.github.com/users/Pzixel/orgs",
      "repos_url": "https://api.github.com/users/Pzixel/repos",
      "events_url": "https://api.github.com/users/Pzixel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pzixel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-15T14:26:58Z",
    "updated_at": "2022-07-15T14:26:58Z",
    "author_association": "NONE",
    "body": "This issue looks quite stalled. Is there any change of this being implemented? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1185600400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1185659862",
    "html_url": "https://github.com/ethereum/solidity/issues/909#issuecomment-1185659862",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/909",
    "id": 1185659862,
    "node_id": "IC_kwDOAm_5kc5Gq7vW",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-15T15:34:02Z",
    "updated_at": "2022-07-15T15:34:02Z",
    "author_association": "MEMBER",
    "body": "We're not actively working on it at the moment but it's one of the features we consider important and it's on our roadmap so we're going to revisit it sooner or later.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1185659862/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
