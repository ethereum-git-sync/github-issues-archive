{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11540/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11540/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11540/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11540",
  "id": 921784684,
  "node_id": "MDU6SXNzdWU5MjE3ODQ2ODQ=",
  "number": 11540,
  "title": "Do not warn about `this` used in constructor if not used to call a function",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 838064207,
      "node_id": "MDU6TGFiZWw4MzgwNjQyMDc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/annoys%20users%20:cry:",
      "name": "annoys users :cry:",
      "color": "ea2cab",
      "default": false,
      "description": ""
    },
    {
      "id": 4437999539,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZ_sw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20effort",
      "name": "high effort",
      "color": "ff54f4",
      "default": false,
      "description": "A lot to implement but still doable by a single person. The task is large or difficult."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438490842,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3-2g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20have",
      "name": "should have",
      "color": "ffbe6c",
      "default": false,
      "description": "We like the idea but itâ€™s not important enough to be a part of the roadmap."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-06-15T20:44:34Z",
  "updated_at": "2022-09-14T15:57:15Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "`this` is sometimes necessary to clarify that a function of the current contract is being accessed as an external one. The compiler currently warns about every use of it in a constructor, which drives users away from using it in even innocuous constructs like simply getting a function selector:\r\n\r\n```solidity\r\ncontract C {\r\n    function ext() external {}\r\n    function pub() public {}\r\n\r\n    constructor() {\r\n        this.ext.selector;\r\n        this.pub.selector;\r\n    }\r\n}\r\n```\r\n```\r\nWarning: \"this\" used in constructor. Note that external functions of a contract cannot be called while it is being constructed.\r\n --> test.sol:6:9:\r\n  |\r\n6 |         this.ext.selector;\r\n  |         ^^^^\r\n\r\nWarning: \"this\" used in constructor. Note that external functions of a contract cannot be called while it is being constructed.\r\n --> test.sol:7:9:\r\n  |\r\n7 |         this.pub.selector;\r\n  |\r\n```\r\n\r\nThis is actually the \"correct\" way to get the selector (#10905). Sometimes it's also possible to get the selector via unqualified access or via contract name but it does not work in all situations. I think that the compiler should not warn when it's just the selector that's being accessed. \r\n\r\nI think that it might be better to also omit the warning in any case where the function is not being directly called. For example when it's only assigned to a pointer. There are valid situations where such a pointer is only called at runtime so the warning is a bit overzealous:\r\n\r\n```solidity\r\ncontract C {\r\n    function () external handler;\r\n\r\n    constructor(bool useA) {\r\n        if (useA)\r\n            handler = this.a;\r\n        else\r\n            handler = this.b;\r\n    }\r\n\r\n    function a() external {}\r\n    function b() external {}\r\n\r\n    function test() public {\r\n        handler();\r\n    }\r\n}\r\n```\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.5",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11540/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11540/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/863090329",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-863090329",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 863090329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzA5MDMyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T09:37:10Z",
    "updated_at": "2021-06-17T09:37:10Z",
    "author_association": "MEMBER",
    "body": "Can't we just add `selector` to `C.pub`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/863090329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/863426845",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-863426845",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 863426845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQyNjg0NQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T17:28:49Z",
    "updated_at": "2021-06-17T17:28:49Z",
    "author_association": "MEMBER",
    "body": "We could. @nventuro would probably appreciate that.\r\n\r\nBut even if we do this, isn't the warning about `this` in `this.C.pub` undesirable?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/863426845/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/865299360",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-865299360",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 865299360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTI5OTM2MA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-21T19:48:59Z",
    "updated_at": "2021-06-21T19:48:59Z",
    "author_association": "MEMBER",
    "body": "We talked about this on today's call.\r\n- We're going to suppress the warning when `this` is used to access the selector.\r\n- We should make selector available on public methods even when not accessed through `this`.\r\n- We'll leave the general case of function pointers as is (i.e. with a warning).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/865299360/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1173630789",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-1173630789",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 1173630789,
    "node_id": "IC_kwDOAm_5kc5F9C9F",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-04T10:13:22Z",
    "updated_at": "2022-07-04T10:13:22Z",
    "author_association": "NONE",
    "body": "Found a way to avoid this issue by using `C(address(0)).ext.selector`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1173630789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1173972206",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-1173972206",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 1173972206,
    "node_id": "IC_kwDOAm_5kc5F-WTu",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-04T16:08:27Z",
    "updated_at": "2022-07-04T16:08:38Z",
    "author_association": "NONE",
    "body": "I am also not allowed to touch internal function pointer in constructor, which uses `immutable` inside itself. Even if I am not calling this internal function pointer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1173972206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246918583",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-1246918583",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 1246918583,
    "node_id": "IC_kwDOAm_5kc5KUne3",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T15:12:59Z",
    "updated_at": "2022-09-14T15:12:59Z",
    "author_association": "MEMBER",
    "body": "Marking this as \"high effort\" and \"needs design\", since doing this *properly* is hard. E.g. as an extension of the second case in the issue description consider:\r\n```\r\ninterface I { function f() external; }\r\n\r\ncontract C is I {\r\n        function () external handlerA;\r\n        function () external handlerB;\r\n        constructor(I x, bool flag) {\r\n                if (flag) {\r\n                        handlerA = this.f;\r\n                        handlerB = x.f;\r\n                } else {\r\n                        handlerA = x.f;  \r\n                        handlerB = this.f;\r\n                }\r\n\r\n                if (flag) {\r\n                        handlerB();\r\n                } else {\r\n                        handlerA();\r\n                }\r\n        }\r\n        function f() external override {}\r\n}\r\n```\r\n\r\nThis is technically a fine use of ``this``, but we most definitely don't want to go out of our way to determine that.\r\n\r\nSo defining the precise subset of cases that are fine to accept is the tricky part here.\r\n\r\nWe could restrict to *only* ``this.f.selector``, but that's also weird special-casing without also accepting ``(this).f.selector``... and then it continues to the question of ``(f ? this : this).f.selector``...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246918583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246978122",
    "html_url": "https://github.com/ethereum/solidity/issues/11540#issuecomment-1246978122",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11540",
    "id": 1246978122,
    "node_id": "IC_kwDOAm_5kc5KU2BK",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T15:57:15Z",
    "updated_at": "2022-09-14T15:57:15Z",
    "author_association": "MEMBER",
    "body": "I think we should just do the selector case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246978122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
