{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9046",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9046/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9046/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9046/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9046",
  "id": 625996547,
  "node_id": "MDU6SXNzdWU2MjU5OTY1NDc=",
  "number": 9046,
  "title": "Optimization possibility of memory usage for loops",
  "user": {
    "login": "daejunpark",
    "id": 5491770,
    "node_id": "MDQ6VXNlcjU0OTE3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/daejunpark",
    "html_url": "https://github.com/daejunpark",
    "followers_url": "https://api.github.com/users/daejunpark/followers",
    "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
    "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
    "organizations_url": "https://api.github.com/users/daejunpark/orgs",
    "repos_url": "https://api.github.com/users/daejunpark/repos",
    "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/daejunpark/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/roadmap",
      "name": "roadmap",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term roadmap"
    },
    {
      "id": 4437989273,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZXmQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/epic",
      "name": "epic",
      "color": "ff00ef",
      "default": false,
      "description": "Multi-stage task that may require coordination between team members across multiple PRs."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-05-27T20:09:21Z",
  "updated_at": "2022-09-26T21:16:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "_[This issue has been discussed with @axic, and reported here to be tracked and further discussed.]_\r\n\r\n## Description\r\n\r\nIn the current code generation (even with the optimization enabled with the flags `--optimize --optimize-runs 5000000`), there is still room for improvement of the memory usage for loops.\r\n\r\nSpecifically, if we have `sha256(abi.encodePacked(arg1, arg2))` in a loop, every iteration consumes new memory entries to store the arguments `arg1` and `arg2`, even if the same memory entries can be reused over the whole iterations.\r\n\r\nFor example, for [this loop](https://github.com/axic/eth2-deposit-contract/blob/r1/deposit_contract.sol#L78-L84), the first iteration consumes the following entries to store the arguments:\r\n```\r\nmemory[128:159] := 64 // the size of arguments\r\nmemory[160:191] := <the-first-argument>\r\nmemory[192:223] := <the-second-argument>\r\n```\r\nand then the second iteration consumes the following:\r\n```\r\nmemory[224:255] := 64 // the size of arguments\r\nmemory[256:287] := <the-first-argument>\r\nmemory[288:319] := <the-second-argument>\r\n```\r\nand so on.\r\n\r\nIn the end, the total 3072 (= 32 iterations * 96 bytes per iteration) bytes of memory are consumed to compute the `sha256` function, while the optimized behavior would consume only the 96 bytes for the whole iterations. This ended up wasting ~300 gas unit.\r\n\r\n## Environment\r\n\r\n- Compiler version: `0.6.8+commit.0bbfe453.Linux.g++`\r\n- Command line flags: `--optimize --optimize-runs 5000000`\r\n\r\n## Steps to Reproduce\r\n\r\nCompile `https://github.com/axic/eth2-deposit-contract/blob/r1/deposit_contract.sol` with the following command line flags:\r\n```\r\n$ solc deposit_contract.sol --asm --optimize --optimize-runs 5000000\r\n```\r\nThen see the generated assembly code for the aforementioned loop (i.e., code blocks between `tag_123` and `tag_124`).\r\n\r\n(I'll provide a minimal example later.)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9046/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9046/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/634953249",
    "html_url": "https://github.com/ethereum/solidity/issues/9046#issuecomment-634953249",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9046",
    "id": 634953249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDk1MzI0OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-27T21:32:30Z",
    "updated_at": "2020-05-27T21:32:30Z",
    "author_association": "MEMBER",
    "body": "Note that neither the copmpiler nor optimizer does any lifetime tracking of memory objects. `abi.encodePacked` returns a memory object and thus could be used further down the road, so lifetime tracking is required here if we do not just want to optimize for a special case. There are proposals to do lifetime tracking in the yul optimizer, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/634953249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/638075258",
    "html_url": "https://github.com/ethereum/solidity/issues/9046#issuecomment-638075258",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9046",
    "id": 638075258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODA3NTI1OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-03T09:21:30Z",
    "updated_at": "2020-06-03T09:21:30Z",
    "author_association": "MEMBER",
    "body": "Relates to https://github.com/ethereum/solidity/issues/5107",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/638075258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776888518",
    "html_url": "https://github.com/ethereum/solidity/issues/9046#issuecomment-776888518",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9046",
    "id": 776888518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Njg4ODUxOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T17:40:28Z",
    "updated_at": "2021-02-10T17:40:28Z",
    "author_association": "MEMBER",
    "body": "Just like we have a codegen shortcut for assigning hashes to constants (#4024) and `address.code.length` (#10778), we could have a similar shortcut for the `keccak256(abi.encode*..)` and `keccak256(bytes.concat..)` (see #10903) cases.\r\n\r\nWe may want to be a bit reserved though, as this will incentivise this pattern, and I think we should add this shortcut if we believe in the long term we can have this done efficiently even without the shortcut.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/776888518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
