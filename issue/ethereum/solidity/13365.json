{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13365",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13365/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13365/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13365/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13365",
  "id": 1332989530,
  "node_id": "I_kwDOAm_5kc5Pc85a",
  "number": 13365,
  "title": "Refactored Type Checking and Analysis Annotations",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4437989273,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZXmQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/epic%20effort",
      "name": "epic effort",
      "color": "ff00ef",
      "default": false,
      "description": "Multi-stage task that may require coordination between team members across multiple PRs."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4438780109,
      "node_id": "LA_kwDOAm_5kc8AAAABCJJozQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/refactor",
      "name": "refactor",
      "color": "fcff07",
      "default": false,
      "description": ""
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [
    {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-08-09T09:40:21Z",
  "updated_at": "2023-06-07T08:23:13Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What\n\nMake type checking robust against several invocations (creation mode; runtime mode), as well as out-of-order execution, even in the presence of cycles.\n\n### Why\n\nTo enable compile-time constant expression evaluation and the code data location, as well as making support of generics easier in the future.\n\n### What\n\nCurrently, the Solidity AST is ``const`` after parsing and then ``annotation()``-annotated by the analysis steps in ``CompilerStack::analyze``.\n\nHowever, some AST nodes and some Types have interfaces that implicitly depend on annotations. (e.g. for types: ``ContractType::stateVariables``, ``StructType::nativeMembers``; e.g. for AST nodes: ``StructDefinition::type``, ``VariableDeclaration::hasReferenceOrMappingType``, etc.).\n\nIn the past we regularly had ICEs due to such implicit dependencies. That has gotten better recently, but it's still an easy source of error.\n\nThis issue is going to get worse, once we want to move to compile-time constant expression evaluation since this will probably entail switching multiple analysis steps to simultaneous cycle-resistant lazy-evaluation.\n\nFurthermore we need to evaluate additional requirements looking ahead to type checking in the presence of future generics.\n\nSo we need to come up with a nicer way to:\n- Make all implicit dependencies of AST node and Type interfaces explicit. If possible, even syntactically prohibit errors (as in \"too early use\").\n- Make the relevant parts of type checking and analysis procedure robust against out-of-order lazy evaluation.\n  - Since array lengths should be allowed to be calculated using compile-time constant expressions, this at least entails ``DeclarationTypeChecker`` and ``TypeChecker``, with implicit interactions with ``ContractLevelChecker``.\n\n\n### Notes\n- Direct prerequisite of #13318 and https://github.com/ethereum/solidity/issues/13723\n- Prerequesite for generics\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13365/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13365/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1248037782",
    "html_url": "https://github.com/ethereum/solidity/issues/13365#issuecomment-1248037782",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13365",
    "id": 1248037782,
    "node_id": "IC_kwDOAm_5kc5KY4uW",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-15T12:31:12Z",
    "updated_at": "2022-09-15T12:31:12Z",
    "author_association": "MEMBER",
    "body": "Given https://github.com/ethereum/solidity/issues/12932 there may be cause to do something similar even as early as the ``NameAndTypeResolver`` - this does not necessarily have to be done in one go, but it's something to keep in mind here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1248037782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1579150804",
    "html_url": "https://github.com/ethereum/solidity/issues/13365#issuecomment-1579150804",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13365",
    "id": 1579150804,
    "node_id": "IC_kwDOAm_5kc5eH-3U",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-06T17:09:02Z",
    "updated_at": "2023-06-06T17:09:02Z",
    "author_association": "MEMBER",
    "body": "This is actually superseded by https://github.com/ethereum/solidity/issues/14284 now, so we won't try to fix this in current analysis, but rather keep this in mind as an issue to consider when writing experimental analysis.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1579150804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1580184092",
    "html_url": "https://github.com/ethereum/solidity/issues/13365#issuecomment-1580184092",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13365",
    "id": 1580184092,
    "node_id": "IC_kwDOAm_5kc5eL7Ic",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-07T08:23:02Z",
    "updated_at": "2023-06-07T08:23:13Z",
    "author_association": "MEMBER",
    "body": "This reminds me that I recently found something that seems to solve both tracking of dependencies and out of order evaluation: [Attribute grammars](https://en.wikipedia.org/wiki/Attribute_grammar). The nice thing about it is that it's not inventing anything new - seems to be a well known and researched subject.\r\n\r\nBasically it's a formalization of the simple concept where AST nodes have attributes and these attributes are calculated based on rules. Rules can depend on nodes above (producing *inherited attributes*) or below (producing *synthesized attributes*). Instead of walking the AST and setting attributes ad-hoc like we do, you have an evaluator that determines the order and executes the rules. In our case the rules could be just functions that take already computed attributes or other AST nodes (or maybe just whole nodes) as input.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1580184092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
