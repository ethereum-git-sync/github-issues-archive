{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12111/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12111/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12111/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12111",
  "id": 1021061218,
  "node_id": "I_kwDOAm_5kc483Chi",
  "number": 12111,
  "title": "[Legacy vs IR] Bitwise not of smaller width uint results in value that is uint256 in legacy vs smaller width uint in IR",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-10-08T12:48:26Z",
  "updated_at": "2021-10-28T09:39:59Z",
  "closed_at": "2021-10-11T09:35:14Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The following test passes via legacy but fails via IR. The `address` public state variable is of the same value (`~1` truncated to 160 bits or 20 bytes) via legacy and IR. However, the `uint` public state variable value differs. The latter is truncated to 184 bits via IR but not via legacy (untruncated).\r\n\r\n```\r\ncontract C {\r\n  address public s1;\r\n  uint public s2;\r\n  modifier m(uint184 i0) {\r\n    assembly {\r\n      let al0 := i0\r\n      sstore(s1.slot, al0)\r\n      sstore(s2.slot, al0)\r\n    }\r\n    _;\r\n  }\r\n  function f() external m ((~(uint184(1)))) {}\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() ->\r\n// s1() -> 0xfffffffffffffffffffffffffffffffffffffffe\r\n// s2() -> -2\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12111/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12111/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/938629611",
    "html_url": "https://github.com/ethereum/solidity/issues/12111#issuecomment-938629611",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
    "id": 938629611,
    "node_id": "IC_kwDOAm_5kc438lnr",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T13:08:33Z",
    "updated_at": "2021-10-08T13:08:33Z",
    "author_association": "MEMBER",
    "body": "Some evidence that dirty bits are only accessible via inline assembly (`s3()` returns the same value via legacy and IR). It is a bit weird that dirty bits are cleaned up for assignment to address type even inside inline assembly but the same does not happen for higher width uint.\r\n\r\n```\r\ncontract C {\r\n  address public s1;\r\n  uint public s2;\r\n  uint public s3;\r\n  modifier m(uint184 i0) {\r\n    s3 = i0;\r\n    assembly {\r\n      sstore(s1.slot, i0)\r\n      sstore(s2.slot, i0)\r\n    }\r\n    _;\r\n  }\r\n  function f() external m ((~(uint184(1)))) {}\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() ->\r\n// s1() -> 0xfffffffffffffffffffffffffffffffffffffffe\r\n// s2() -> -2\r\n// s3() -> 0xfffffffffffffffffffffffffffffffffffffffffffffe\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/938629611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939858761",
    "html_url": "https://github.com/ethereum/solidity/issues/12111#issuecomment-939858761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
    "id": 939858761,
    "node_id": "IC_kwDOAm_5kc44BRtJ",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-11T09:35:14Z",
    "updated_at": "2021-10-11T09:35:14Z",
    "author_association": "MEMBER",
    "body": "I would say this is fine: The `uint184` value is cleaned after the `~` via IR, but it is not cleaned in the legacy codegen. Going through storage is not required for this to trigger.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939858761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939903974",
    "html_url": "https://github.com/ethereum/solidity/issues/12111#issuecomment-939903974",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
    "id": 939903974,
    "node_id": "IC_kwDOAm_5kc44Bcvm",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-11T10:35:52Z",
    "updated_at": "2021-10-11T10:35:52Z",
    "author_association": "MEMBER",
    "body": "The difference to the signed immutables bug (https://github.com/ethereum/solidity/pull/12050/files) is that there a Solidity assignment statement does not already clean up (signextend properly) until the value is read in a non-inline-assembly operation.\r\n\r\nHere, the truncation happens if the function argument is assigned to an intermediate Solidity variable that is then read via inline assembly i.e., \r\n\r\n```\r\ncontract C {\r\n  function g(uint184 _i0) public returns (uint r)\r\n  {\r\n    uint r1 = _i0;\r\n    assembly {\r\n      r := r1\r\n    }\r\n  }\r\n  function f() external returns (uint) {\r\n    return g(~uint184(1));\r\n  }\r\n}\r\n// ====\r\n// compileViaYul: false\r\n// ----\r\n// f() -> 0xfffffffffffffffffffffffffffffffffffffffffffffe\r\n```\r\n\r\nEven if this is not considered a bug, I would document this behavior somewhere (or add a test case) before closing the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939903974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939934957",
    "html_url": "https://github.com/ethereum/solidity/issues/12111#issuecomment-939934957",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
    "id": 939934957,
    "node_id": "IC_kwDOAm_5kc44BkTt",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-11T11:18:37Z",
    "updated_at": "2021-10-11T11:18:37Z",
    "author_association": "MEMBER",
    "body": "It is documented: https://docs.soliditylang.org/en/v0.8.9/assembly.html#conventions-in-solidity",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/939934957/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953682022",
    "html_url": "https://github.com/ethereum/solidity/issues/12111#issuecomment-953682022",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12111",
    "id": 953682022,
    "node_id": "IC_kwDOAm_5kc442Ahm",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T09:39:59Z",
    "updated_at": "2021-10-28T09:39:59Z",
    "author_association": "MEMBER",
    "body": "Another example that came up during fuzzing\r\n\r\n```\r\ncontract C0 {\r\n  function revertZeroToNBytes(uint8 _n) internal\r\n  {\r\n    assembly\r\n    {\r\n      revert(0, _n)\r\n    }\r\n  }\r\n  function f() external\r\n  {\r\n    revertZeroToNBytes(uint8(type(uint16).max));\r\n  }\r\n}\r\n```\r\n\r\nLegacy returns 65535 bytes, IR returns 255 bytes. The difference is because IR cleans up the function argument before the call is made but legacy does not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/953682022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
