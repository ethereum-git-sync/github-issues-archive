{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13981",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13981/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13981/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13981/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13981",
  "id": 1589538372,
  "node_id": "I_kwDOAm_5kc5evm5E",
  "number": 13981,
  "title": "Can't use function overloading in libraries",
  "user": {
    "login": "Sabnock01",
    "id": 24715302,
    "node_id": "MDQ6VXNlcjI0NzE1MzAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/24715302?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Sabnock01",
    "html_url": "https://github.com/Sabnock01",
    "followers_url": "https://api.github.com/users/Sabnock01/followers",
    "following_url": "https://api.github.com/users/Sabnock01/following{/other_user}",
    "gists_url": "https://api.github.com/users/Sabnock01/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Sabnock01/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Sabnock01/subscriptions",
    "organizations_url": "https://api.github.com/users/Sabnock01/orgs",
    "repos_url": "https://api.github.com/users/Sabnock01/repos",
    "events_url": "https://api.github.com/users/Sabnock01/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Sabnock01/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-17T15:30:07Z",
  "updated_at": "2023-02-17T17:20:37Z",
  "closed_at": "2023-02-17T17:02:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI have a library with overloaded functions which builds without error, but when I go to use it in another file, the contract using the library only seems to recognize the first function declared. I have provided the following example to reproduce: \r\n\r\n```\r\nlibrary Cast {\r\n    function i128(uint256 x) internal {...}\r\n\r\n    function i128(uint128 x) internal {...}\r\n}\r\n\r\ncontract Caster {\r\n    using Cast for uint256;\r\n    using Cast for uint128;\r\n\r\n    function castNums(uint256 a, uint128 b) public {\r\n        int128 newA = a.i128();\r\n        int128 newB = b.i128();\r\n    }\r\n}\r\n```\r\n\r\nIn this example, only the first `i128` may be used in the below contract. Use of the second one will give the following compiler error: \r\n\r\n```\r\nCompiler run failed\r\nerror[6675]: TypeError: Member \"i128\" not unique after argument-dependent lookup in type(library Cast).\r\n  --> src/Counter.sol:24:23:\r\n   |\r\n24 |         int128 newB = Cast.i128(b);\r\n   |                       ^^^^^^^^^\r\n```\r\n\r\nThis is still the case if the `using ... for ...` syntax is removed and / or if the `Cast.i128(...)` syntax is used. \r\nIt is also true if the function visibility is changed from `internal` to `external`.\r\n\r\nIs this desired behavior? It seems to me this should be doable since the function signatures are the same. \r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.18\r\n- Target EVM version (as per compiler settings):\r\n- Framework/IDE (e.g. Truffle or Remix): Foundry\r\n- EVM execution environment / backend / blockchain client: Infura\r\n- Operating system: Ubuntu 20.04\r\n\r\n## Steps to Reproduce\r\n\r\nSimply running `forge build` on the snippet above should be enough. Moreover I even get a syntax error in VS Code on the same line. \r\n",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13981/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13981/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1434929056",
    "html_url": "https://github.com/ethereum/solidity/issues/13981#issuecomment-1434929056",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13981",
    "id": 1434929056,
    "node_id": "IC_kwDOAm_5kc5Vh0eg",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T17:02:12Z",
    "updated_at": "2023-02-17T17:04:08Z",
    "author_association": "MEMBER",
    "body": "This is not limited to libraries. All functions in Solidity work this way. The first call works because there's only one overload that can take `uint256`. The second one is ambiguous because `uint128` is also implicitly convertible to `uint256` so both candidates are viable. We already have an issue about the compiler failing to explain that clearly: #9607.\r\n\r\nThe compiler could resolve the ambiguity by choosing the more fitting overload, it just does not do that yet. That's covered by #1256.\r\n\r\nYou should also be able to work around it by attaching only a specific overload for your type with the `using {L.f} for T` syntax but infortunately this is not yet implemented either: #3556.\r\n\r\nOverall, this is a valid report and the behavior should be changed, but we already have issues covering all these problems so I'm closing this one as a duplicate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1434929056/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1434968309",
    "html_url": "https://github.com/ethereum/solidity/issues/13981#issuecomment-1434968309",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13981",
    "id": 1434968309,
    "node_id": "IC_kwDOAm_5kc5Vh-D1",
    "user": {
      "login": "Sabnock01",
      "id": 24715302,
      "node_id": "MDQ6VXNlcjI0NzE1MzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24715302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sabnock01",
      "html_url": "https://github.com/Sabnock01",
      "followers_url": "https://api.github.com/users/Sabnock01/followers",
      "following_url": "https://api.github.com/users/Sabnock01/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sabnock01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sabnock01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sabnock01/subscriptions",
      "organizations_url": "https://api.github.com/users/Sabnock01/orgs",
      "repos_url": "https://api.github.com/users/Sabnock01/repos",
      "events_url": "https://api.github.com/users/Sabnock01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sabnock01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T17:20:36Z",
    "updated_at": "2023-02-17T17:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1434968309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
