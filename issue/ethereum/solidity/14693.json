{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14693",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14693/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14693/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14693/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14693",
  "id": 2005637851,
  "node_id": "I_kwDOAm_5kc53i5rb",
  "number": 14693,
  "title": "[Yul optimizer] ICE because invalid code is produced during optimization using custom optimization steps",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-11-22T06:06:26Z",
  "updated_at": "2023-12-12T13:15:20Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\n{\r\n    let a\r\n    for { } lt(a, 4) { a := add(a, 2) }\r\n    {\r\n        mstore(0, a)\r\n        a := add(a, 1)\r\n    }\r\n}\r\n```\r\n\r\nthrows\r\n\r\nhttps://github.com/ethereum/solidity/blob/58811f134ac369b20c2ec1120907321edf08fff1/libyul/AsmAnalysis.cpp#L97\r\n\r\nRepro\r\n\r\n```\r\nsolc --strict-assembly --optimize --yul-optimizations 'ams' test.yul\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14693/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14693/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1824067615",
    "html_url": "https://github.com/ethereum/solidity/issues/14693#issuecomment-1824067615",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14693",
    "id": 1824067615,
    "node_id": "IC_kwDOAm_5kc5suRAf",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-23T09:34:23Z",
    "updated_at": "2023-11-23T09:34:23Z",
    "author_association": "MEMBER",
    "body": "You may be onto something here; none of the steps you're using have hard prerequisites (although omitting a hard prerequisite should yield a different ICE). Now, the interesting thing is that using the `Rematerializer` step (`m`) has no effect on the produced Yul code after the `SSATransform` (`a`), so using the `am` sequence is equivalent to just using `a` by itself. Also, running it with `as` works just fine as well, so my assumption is that running the `Rematerializer` step in this case messes up the tracking in `DataFlowAnalyzer`, which is also a dependency for the `ExpressionSimplifier`. I'd say it's worth investigating, but a confirmation from @ekpyron or @chriseth would be nice.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1824067615/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1851976712",
    "html_url": "https://github.com/ethereum/solidity/issues/14693#issuecomment-1851976712",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14693",
    "id": 1851976712,
    "node_id": "IC_kwDOAm_5kc5uYuwI",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T12:51:14Z",
    "updated_at": "2023-12-12T12:51:14Z",
    "author_association": "MEMBER",
    "body": "Let me actually bump this to medium impact... there is something off with for-loop scoping here. The culprit here is the expression simplifier. If you just run it alone on the following:\r\n\r\n```\r\n{\r\n    {\r\n        let a := 0\r\n        for { } true { a := add(a, 2) }\r\n        {\r\n            if iszero(lt(a, 4)) { break }\r\n            let a_4 := a\r\n            mstore(0, a_4)\r\n            a := add(a_4, 1)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nit'll generate\r\n\r\n```\r\n{\r\n    {\r\n        let a := 0\r\n        for { } true { a := add(a_4, 3) }\r\n        {\r\n            if iszero(lt(a, 4)) { break }\r\n            let a_4 := a\r\n            mstore(0, a_4)\r\n            a := add(a_4, 1)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nignoring that ``a_4`` isn't in scope in the for-loop post.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1851976712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1852001976",
    "html_url": "https://github.com/ethereum/solidity/issues/14693#issuecomment-1852001976",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14693",
    "id": 1852001976,
    "node_id": "IC_kwDOAm_5kc5uY064",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T13:07:11Z",
    "updated_at": "2023-12-12T13:15:20Z",
    "author_association": "MEMBER",
    "body": "Actually, surprising that this doesn't occur more often in practice - not sure what prevents it from happening in the default sequence. But it's, in any case, comparably harmless: the underlying issue is that the data flow analyzer only clears knowledge about *assigned* variables in the for-loop body, but probably should also do so for *declared* ones in the case of for-loops (which are handled specially due to their weird scoping, but currently don't seem to account for this case)... but from what I can tell this can only ever result in malformed Yul code, never in semantically invalid code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1852001976/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
