{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14040",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14040/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14040/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14040/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14040",
  "id": 1619158817,
  "node_id": "I_kwDOAm_5kc5ggmch",
  "number": 14040,
  "title": "[SMTChecker] Different behaviors depending on variable names",
  "user": {
    "login": "fsainas",
    "id": 58312089,
    "node_id": "MDQ6VXNlcjU4MzEyMDg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58312089?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fsainas",
    "html_url": "https://github.com/fsainas",
    "followers_url": "https://api.github.com/users/fsainas/followers",
    "following_url": "https://api.github.com/users/fsainas/following{/other_user}",
    "gists_url": "https://api.github.com/users/fsainas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fsainas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fsainas/subscriptions",
    "organizations_url": "https://api.github.com/users/fsainas/orgs",
    "repos_url": "https://api.github.com/users/fsainas/repos",
    "events_url": "https://api.github.com/users/fsainas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fsainas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-03-10T15:25:07Z",
  "updated_at": "2023-03-15T13:44:51Z",
  "closed_at": "2023-03-15T13:44:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nIt seems that SMTChecker behaves differently for some combinations of variable names.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.20-develop.2023.2.27+commit.98340776.mod.Linux.g++\r\n- Operating system: Fedora Linux 37\r\n\r\n## Steps to Reproduce\r\nSMTChecker can prove all the assertions of the following contract by running:\r\n```\r\nsolc for_ok.sol --model-checker-engine chc --model-checker-show-unproved\r\n``` \r\n```solidity\r\n// Ok\r\npragma solidity >=0.8.0;\r\n\r\ncontract C {\r\n    uint256 public n;\r\n    address[] public arr;\r\n\r\n    function f(address _adr) public {\r\n       \r\n        bool b = false;\r\n        for(uint256 r; r < n; r++){\r\n            require(r < arr.length);\r\n            require(r < n);\r\n            assert(n == arr.length);        // Proved\r\n            if(arr[r] == _adr){\r\n                b = true;\r\n            }\r\n        }\r\n\r\n        require(!b);\r\n\r\n        arr.push(_adr);\r\n        n = arr.length;\r\n\r\n        assert(n == arr.length);            // Proved\r\n    }\r\n}\r\n```\r\nBy changing the name of `arr` and `b` and running `solc` with the same flags it gives us a new warning.\r\n```solidity\r\n// Unproven\r\npragma solidity >=0.8.0;\r\n\r\ncontract C {\r\n    uint256 public n;\r\n    address[] public res_arr;   // arr -> res_arr\r\n\r\n    function f(address _adr) public {\r\n       \r\n        bool d = false;         // b -> d\r\n        for(uint256 r; r < n; r++) {\r\n            require(r < res_arr.length);\r\n            require(r < n);\r\n            assert(n == res_arr.length);    // CHC: Assertion violation might happen here\r\n            if(res_arr[r] == _adr) {\r\n                d = true;\r\n            }\r\n        }\r\n\r\n        require(!d);\r\n\r\n        res_arr.push(_adr);\r\n        n = res_arr.length;\r\n\r\n        assert(n == res_arr.length);        // Proved\r\n    }\r\n}\r\n```\r\nWarning:\r\n```\r\nWarning: CHC: Assertion violation might happen here.\r\n  --> for_unproven.sol:13:13:\r\n   |\r\n13 |             assert(n == res_arr.length);    // CHC: Assertion violation might happen here\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\nBy changing `b -> reserveAlreadyExists`, `arr -> res_arr` and adding an error message to the last `require` it also gives us an error.\r\n```solidity\r\n// Error\r\npragma solidity >=0.8.0;\r\n\r\ncontract C {\r\n    uint256 public n;\r\n    address[] public res_arr;         // arr -> res_arr\r\n\r\n    function f(address _adr) public {\r\n       \r\n        bool reserveAlreadyExists = false;      // b -> reserveAlreadyExists\r\n        for(uint256 r; r < n; r++) {\r\n            require(r < res_arr.length);\r\n            require(r < n);\r\n            assert(n == res_arr.length);          // CHC: Error trying to invoke SMT solver, CHC: Assert violation might happen here\r\n            if(res_arr[r] == _adr) {\r\n                reserveAlreadyExists = true;\r\n            }\r\n        }\r\n\r\n        require(!reserveAlreadyExists, \"Reserve already exists!\");\r\n\r\n        res_arr.push(_adr);\r\n        n = res_arr.length;\r\n\r\n        assert(n == res_arr.length);              // Proved\r\n    }\r\n}\r\n```\r\nWarnings:\r\n```\r\nWarning: CHC: Error trying to invoke SMT solver.\r\n  --> for_err.sol:13:13:\r\n   |\r\n13 |             assert(n == res_arr.length);          // CHC: Error trying to invoke SMT solver, CHC: Assert violation might happen here\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nWarning: CHC: Assertion violation might happen here.\r\n  --> for_err.sol:13:13:\r\n   |\r\n13 |             assert(n == res_arr.length);          // CHC: Error trying to invoke SMT solver, CHC: Assert violation might happen here\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n<!--\r\nPlease provide a *minimal* source code example to trigger the bug you have found.\r\nPlease also mention any command line flags that are necessary for triggering the bug.\r\nProvide as much information as necessary to reproduce the bug.\r\n\r\n```solidity\r\n// Some *minimal* Solidity source code to reproduce the bug.\r\n// ...\r\n```\r\n-->\r\n",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14040/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14040/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1464008918",
    "html_url": "https://github.com/ethereum/solidity/issues/14040#issuecomment-1464008918",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14040",
    "id": 1464008918,
    "node_id": "IC_kwDOAm_5kc5XQwDW",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T15:53:00Z",
    "updated_at": "2023-03-10T15:53:00Z",
    "author_association": "MEMBER",
    "body": "This is unfortunately expected for cases that are close to the edge of what the underlying solver can prove or not given a specific timeout. Can you give increasing timeout values in `--model-checker-timeout` to see if you can match the behaviors regardless of the variable names?\r\n\r\nThe reason why that happens is that variable names are also used to make unique SMT variable names when creating the SMT theorems. This effectively changes the theorem itself, and since the solvers do use some ordering which affect the search, different names may affect solving itself. Ideally a high enough solver timeout makes the results converge.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1464008918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1464876588",
    "html_url": "https://github.com/ethereum/solidity/issues/14040#issuecomment-1464876588",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14040",
    "id": 1464876588,
    "node_id": "IC_kwDOAm_5kc5XUD4s",
    "user": {
      "login": "fsainas",
      "id": 58312089,
      "node_id": "MDQ6VXNlcjU4MzEyMDg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58312089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fsainas",
      "html_url": "https://github.com/fsainas",
      "followers_url": "https://api.github.com/users/fsainas/followers",
      "following_url": "https://api.github.com/users/fsainas/following{/other_user}",
      "gists_url": "https://api.github.com/users/fsainas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fsainas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fsainas/subscriptions",
      "organizations_url": "https://api.github.com/users/fsainas/orgs",
      "repos_url": "https://api.github.com/users/fsainas/repos",
      "events_url": "https://api.github.com/users/fsainas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fsainas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-11T10:04:55Z",
    "updated_at": "2023-03-11T10:04:55Z",
    "author_association": "NONE",
    "body": "Thank you for your explanation. Indeed, by giving it unlimited time for each query with `--model-checker-timeout 0` the results converge. It's good to know that variable names can affect the SMT theorems and the search ordering used by the solvers. I appreciate your quick response and helpful insight.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1464876588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1470037418",
    "html_url": "https://github.com/ethereum/solidity/issues/14040#issuecomment-1470037418",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14040",
    "id": 1470037418,
    "node_id": "IC_kwDOAm_5kc5Xnv2q",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T13:44:51Z",
    "updated_at": "2023-03-15T13:44:51Z",
    "author_association": "MEMBER",
    "body": "Great to hear! Closing the issue then, feel free to reopen if needed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1470037418/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
