{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12496",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12496/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12496/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12496/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12496",
  "id": 1094871010,
  "node_id": "I_kwDOAm_5kc5BQmfi",
  "number": 12496,
  "title": "Optimization for when entire contract has no code",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-01-06T01:04:42Z",
  "updated_at": "2022-01-07T04:05:10Z",
  "closed_at": "2022-01-06T09:40:47Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nA few, specific contracts can include a specific optimization.\r\n\r\nThis helps a class of people that want to use Yul.\r\n\r\n## Motivation\r\n\r\nTo make Yul easy to deploy.\r\n\r\n## Test case\r\n\r\nThis contract:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\ncontract ERC20 {\r\n    fallback () external payable {\r\n    }\r\n}\r\n```\r\n\r\nShould deploy with just the hash at the end. But instead it deploy with all this boilerplate:\r\n\r\n```\r\n        0000    60  PUSH1 0x80\r\n\t0002    60  PUSH1 0x40\r\n\t0004    52  MSTORE\r\n\t0005    00  *STOP\r\n\r\n\t0006    FE    *ASSERT\r\n\t0007    A2    LOG2\r\n\t0008    64    PUSH5 0x6970667358\r\n\t000E    22    22\r\n\t000F    12    SLT\r\n\t0010    20    SHA3\r\n\t0011    8B    DUP12\r\n\t0012    00    *STOP\r\n\t0013    C3    C3\r\n\t0014    09    MULMOD\r\n\t0015    32    ORIGIN\r\n\t0016    9C    SWAP13\r\n\t0017    D3    D3\r\n\t0018    92    SWAP3\r\n\t0019    76    PUSH23 0x14e702eaae5d8fc4c88db71c4fa005baea66b0c202acb1\r\n\t0031    64    PUSH5 0x736f6c6343\r\n\t0037    00    *STOP\r\n\t0038    08    ADDMOD\r\n\t0039    0B    SIGNEXTEND\r\n\t003A    00    *STOP\r\n\t003B    33    CALLER\r\n```\r\n\r\n## More motivation\r\n\r\nWhy would anybody want to deploy that exact contract? And do you really care about removing the three extraneous instructions at top?\r\n\r\nYes.\r\n\r\nHere's why.\r\n\r\nThis is actually the best (only) for most people to deploy a Yul contract. For example, deploying [the Solidity documentation's ERC-20 contract with Yul](https://docs.soliditylang.org/en/v0.8.11/yul.html?highlight=yul#complete-erc20-example) can be done with:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\ncontract ERC20 {\r\n    fallback () external payable {\r\n        assembly {\r\n           ... paste the ERC-20 Yul code here...\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe kind of people that would deploy Yul are the kind of people that care about these three extra instructions.\r\n\r\nMaking the proposed change above would allow everybody that has access to a Solidity toolchain to deploy Yul code with zero overhead. For example, Hardhat, Truffle, and basically everything else does not (built in) support Yul. But with this adapter it does.\r\n\r\n## Specification\r\n\r\nWhen Solidity is compiling a contract with no usage of memory, do not synthesize the memory size storage location.\r\n\r\nI.e., don't include this:\r\n\r\n```\r\n        0000    60  PUSH1 0x80\r\n\t0002    60  PUSH1 0x40\r\n\t0004    52  MSTORE\r\n```\r\n\r\nSeparately, in the documentation for Yul, include the above code as the recommended and fully efficient way to deploy Yul code.\r\n\r\n## Backwards Compatibility\r\n\r\nNo considerations",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12496/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12496/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1006354240",
    "html_url": "https://github.com/ethereum/solidity/issues/12496#issuecomment-1006354240",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12496",
    "id": 1006354240,
    "node_id": "IC_kwDOAm_5kc47-79A",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T07:54:42Z",
    "updated_at": "2022-01-06T07:54:42Z",
    "author_association": "MEMBER",
    "body": "We are working on an optimization step that would remove unnecessary `mstores`: https://github.com/ethereum/solidity/pull/11352  that should fix the issue, for the (currently experimental) Yul based compilation pipeline.\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1006354240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1006417073",
    "html_url": "https://github.com/ethereum/solidity/issues/12496#issuecomment-1006417073",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12496",
    "id": 1006417073,
    "node_id": "IC_kwDOAm_5kc47_LSx",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T09:40:47Z",
    "updated_at": "2022-01-06T09:40:47Z",
    "author_association": "MEMBER",
    "body": "I agree, this will be solved by #11352 and I don't see a big benefit in implementing this in the opcode-based optimizer, since the cited PR for the yul optimizer can do so much more than just this special case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1006417073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1007123904",
    "html_url": "https://github.com/ethereum/solidity/issues/12496#issuecomment-1007123904",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12496",
    "id": 1007123904,
    "node_id": "IC_kwDOAm_5kc48B33A",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T04:05:10Z",
    "updated_at": "2022-01-07T04:05:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For example, Hardhat, Truffle, and basically everything else does not (built in) support Yul.\r\n\r\nFWIW, Truffle employee popping in here to point out that Truffle does now have rudimentary Yul support. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1007123904/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
