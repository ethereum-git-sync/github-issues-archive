{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3985",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3985/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3985/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3985/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3985",
  "id": 317077498,
  "node_id": "MDU6SXNzdWUzMTcwNzc0OTg=",
  "number": 3985,
  "title": "Should we clarify when library code is linked vs embedded?",
  "user": {
    "login": "swaldman",
    "id": 1733981,
    "node_id": "MDQ6VXNlcjE3MzM5ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/swaldman",
    "html_url": "https://github.com/swaldman",
    "followers_url": "https://api.github.com/users/swaldman/followers",
    "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
    "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
    "organizations_url": "https://api.github.com/users/swaldman/orgs",
    "repos_url": "https://api.github.com/users/swaldman/repos",
    "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/swaldman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-04-24T05:42:58Z",
  "updated_at": "2018-04-24T08:30:54Z",
  "closed_at": "2018-04-24T08:30:54Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "To my surprise, I get nice, fully-linked, deployable code if I compile this.\r\n\r\n```\r\npragma solidity ^0.4.22;\r\n\r\nimport \"https://github.com/OpenZeppelin/zeppelin-solidity/blob/c5d66183abcb63a90a2528b8333b2b17067629fc/contracts/token/ERC20/StandardToken.sol\";\r\n\r\n// modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/examples/SimpleToken.sol\r\ncontract SimpleToken is StandardToken {\r\n  string public constant name = \"SimpleToken\"; \r\n  string public constant symbol = \"SIMPLETOKEN\"; \r\n  uint8 public constant decimals = 18; \r\n\r\n  uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(decimals));\r\n\r\n  constructor public {\r\n    totalSupply_ = INITIAL_SUPPLY;\r\n    balances[msg.sender] = INITIAL_SUPPLY;\r\n    Transfer(0x0, msg.sender, INITIAL_SUPPLY);\r\n  }\r\n}\r\n```\r\n\r\nThat surprised me (pleasantly), because the imported parent contract (indirectly) depends on Zeppelin's SafeMath library. I expected the code to include `__SafeMath__..._ ` placeholders that would have to be linked.\r\n\r\nI'm happy, it works, yay! But in the documentation, I can't find an explanation of when the compiler would expect to link to a library, and when it would just embed library functionality into the generated code. Pretty much all of the discussion of libraries presumes they would be separately deployed and linked.\r\n\r\nI'd be glad to try to update the docs, if I understood the rules for when library functionality is inlined-vs-linked myself. But I don't. Can anyone help?\r\n\r\n---\r\np.s. I am using my own tooling, rather than `solc` to resolve imports (maybe that's why this works? because `solc` sees everything in a single compilation unit?) I've placed the fully resolved generated solidity [here](https://gist.github.com/swaldman/8bed17592a75f1ee9e0cd28caacfbfc1), fwiw. ",
  "closed_by": {
    "login": "swaldman",
    "id": 1733981,
    "node_id": "MDQ6VXNlcjE3MzM5ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/swaldman",
    "html_url": "https://github.com/swaldman",
    "followers_url": "https://api.github.com/users/swaldman/followers",
    "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
    "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
    "organizations_url": "https://api.github.com/users/swaldman/orgs",
    "repos_url": "https://api.github.com/users/swaldman/repos",
    "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/swaldman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3985/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3985/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383841926",
    "html_url": "https://github.com/ethereum/solidity/issues/3985#issuecomment-383841926",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3985",
    "id": 383841926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzg0MTkyNg==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T08:06:57Z",
    "updated_at": "2018-04-24T08:06:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "When utilizing `internal` functions from libraries these are inlined (since it would really just be a waste of gas to not do so in most cases).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383841926/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383848718",
    "html_url": "https://github.com/ethereum/solidity/issues/3985#issuecomment-383848718",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3985",
    "id": 383848718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzg0ODcxOA==",
    "user": {
      "login": "swaldman",
      "id": 1733981,
      "node_id": "MDQ6VXNlcjE3MzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swaldman",
      "html_url": "https://github.com/swaldman",
      "followers_url": "https://api.github.com/users/swaldman/followers",
      "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
      "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
      "organizations_url": "https://api.github.com/users/swaldman/orgs",
      "repos_url": "https://api.github.com/users/swaldman/repos",
      "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swaldman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T08:29:36Z",
    "updated_at": "2018-04-24T08:29:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@GNSPS Thanks!\r\n\r\nThat seems like a good thing to document very clearly. (It seems like a very useful trick, to get the code reuse without the complexity of an extra module and a linkage and post-hack nervousness over the security of `DELEGATECALL`-based constructs.)\r\n\r\nI see in the docs an [example](http://solidity.readthedocs.io/en/v0.4.23/types.html?highlight=internal) of a library built with `internal` functions, and an explanation that libraries are in the \"context\" of the using contract, and so can access them. From that, along with the explanation that `internal` functions are implemented as jumps within the code, a smarter reader than me might have been able to deduce that they would be inlined, but this seems like a feature that could be highlighted a bit more.\r\n\r\nNow that I know what I am looking for, I see that this behavior is more explicitly documented [here](http://solidity.readthedocs.io/en/v0.4.23/contracts.html)\r\n\r\n> Furthermore, internal functions of libraries are visible in all contracts, just as if the library were a base contract. Of course, calls to internal functions use the internal calling convention, which means that all internal types can be passed and memory types will be passed by reference and not copied. To realize this in the EVM, code of internal library functions and all functions called from therein will at compile time be pulled into the calling contract, and a regular JUMP call will be used instead of a DELEGATECALL.\r\n\r\nStill, having read that page before and not understood the implication (that no separate library would need to be deployed if only `internal` functions are used), it might be worth highlighting a bit. I'll try to give that a shot.\r\n\r\nAnyway, thank you again for resolving the mystery.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383848718/reactions",
      "total_count": 8,
      "+1": 7,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
