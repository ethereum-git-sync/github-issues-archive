{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13149",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13149/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13149/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13149/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13149",
  "id": 1271970382,
  "node_id": "I_kwDOAm_5kc5L0LpO",
  "number": 13149,
  "title": "Missing custom errors from library assembly in smart contract ABI",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-06-15T09:49:12Z",
  "updated_at": "2022-08-17T13:48:47Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nSometimes custom errors are not included in the smart contract ABI based on their direct usage in Solidity code.\r\n\r\nThis case works fine:\r\n```solidity\r\ncontract A {\r\n    error Foo();\r\n\r\n    function f() external {\r\n        revert Foo();\r\n    }\r\n}\r\n```\r\n\r\nThis case works fine too:\r\n```solidity\r\ncontract A {\r\n    error Foo();\r\n\r\n    function f() external {\r\n        bytes4 exception = Foo.selector;\r\n        assembly {\r\n            mstore(0, exception)\r\n            revert(0, 4)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut using the same approach in the library does not work properly:\r\n```solidity\r\nlibrary L {\r\n    error Foo();\r\n\r\n    function g() internal {\r\n        bytes4 exception = Foo.selector;\r\n        assembly {\r\n            mstore(0, exception)\r\n            revert(0, 4)\r\n        }\r\n    }\r\n}\r\n\r\ncontract A {\r\n    function f() external {\r\n        L.g();\r\n    }\r\n}\r\n```\r\n\r\n`Foo` error is not included in the smart contract ABI, which I believe is a mistake. What about unconditionally including all libraries' custom errors in ABI?\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.14\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13149/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13149/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1156254185",
    "html_url": "https://github.com/ethereum/solidity/issues/13149#issuecomment-1156254185",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13149",
    "id": 1156254185,
    "node_id": "IC_kwDOAm_5kc5E6wnp",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-15T09:51:27Z",
    "updated_at": "2022-06-15T09:51:27Z",
    "author_association": "MEMBER",
    "body": "Related to https://github.com/ethereum/solidity/pull/10996 and its linked issues.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1156254185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1156935953",
    "html_url": "https://github.com/ethereum/solidity/issues/13149#issuecomment-1156935953",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13149",
    "id": 1156935953,
    "node_id": "IC_kwDOAm_5kc5E9XER",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-15T21:04:49Z",
    "updated_at": "2022-06-15T21:04:49Z",
    "author_association": "MEMBER",
    "body": "This is actually by design - which does not mean we can't change it - but the idea was that the ABI should contain only the events that are actually emitted and errors that are actually used - in addition to all events and errors defined within the contract. For example if you just do `L.Foo;`, i.e. refer to an error (or an event) without actually doing a revert, it won't appear in the ABI either.\r\n\r\nSo I guess we could treat it as a feature request. I can see how it can be useful in your example but it could also be misleading. E.g. you could refer to the selector but use a completely different value in the revert.\r\n\r\n@chriseth Do you think this would be a good change?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1156935953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
