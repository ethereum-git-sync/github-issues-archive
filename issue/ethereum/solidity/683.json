{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/683",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/683/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/683/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/683/events",
  "html_url": "https://github.com/ethereum/solidity/issues/683",
  "id": 162203204,
  "node_id": "MDU6SXNzdWUxNjIyMDMyMDQ=",
  "number": 683,
  "title": "Remove tx.origin",
  "user": {
    "login": "PeterBorah",
    "id": 2374327,
    "node_id": "MDQ6VXNlcjIzNzQzMjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PeterBorah",
    "html_url": "https://github.com/PeterBorah",
    "followers_url": "https://api.github.com/users/PeterBorah/followers",
    "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
    "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
    "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
    "repos_url": "https://api.github.com/users/PeterBorah/repos",
    "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 43,
  "created_at": "2016-06-24T18:23:44Z",
  "updated_at": "2022-12-22T22:15:58Z",
  "closed_at": "2016-08-11T11:28:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Summary\n\n`tx.origin` is a security vulnerability, breaks compatibility with other contracts including security contracts, and is almost never useful. Removing it would make Solidity more user-friendly. If there are exceptional cases where access to the transaction origin is needed, a library using in-line assembly can provide it.\n## The Problems\n\n1) `tx.origin` is a security vulnerability. As we [recently saw with the Mist wallet](https://blog.ethereum.org/2016/06/24/security-alert-smart-contract-wallets-created-in-frontier-are-vulnerable-to-phishing-attacks/), using `tx.origin` makes you vulnerable to attacks comparable to phishing or cross-site scripting. Once a user has interacted with a malicious contract, that contract can then impersonate the user to any contract relying on `tx.origin`.\n\n2) `tx.origin` breaks compatibility. Using `tx.origin` means that your contract cannot be used by another contract, because a contract can never be the `tx.origin`. This breaks the general composability of Ethereum contracts, and makes them less useful. In addition, this is another security vulnerability, because it makes security-based contracts like multisig wallets incompatible with your contract.\n\n3) `tx.origin` is almost never useful. This is the most subjective point, but I have yet to come across a use of `tx.origin` that seemed legitimate to me. I welcome counter-examples, but I've written dozens or hundreds of smart contracts without needing it, and I have never heard of anyone else needing it either.\n## Rationale for Removal\n\nSolidity's design philosophy is to prioritize security and reliability over expressiveness. In other cases where behavior is unreliable, Solidity does not expose it. (For instance, there is no way to call an external contract and retrieve the return value if the signature is not known ahead of time.)\n\nThe \"escape clause\" is in-line assembly, which allows the creation of libraries to do anything expressible as EVM assembly. Behavior that is unsafe and unreliable is best kept in libraries, rather than given to all users as part of the core language.\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/683/reactions",
    "total_count": 27,
    "+1": 19,
    "-1": 8,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/683/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228449229",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228449229",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228449229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ0OTIyOQ==",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "node_id": "MDQ6VXNlcjE1NzczNTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1577353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "html_url": "https://github.com/aakilfernandes",
      "followers_url": "https://api.github.com/users/aakilfernandes/followers",
      "following_url": "https://api.github.com/users/aakilfernandes/following{/other_user}",
      "gists_url": "https://api.github.com/users/aakilfernandes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aakilfernandes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizations_url": "https://api.github.com/users/aakilfernandes/orgs",
      "repos_url": "https://api.github.com/users/aakilfernandes/repos",
      "events_url": "https://api.github.com/users/aakilfernandes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:06:02Z",
    "updated_at": "2016-06-24T20:06:02Z",
    "author_association": "NONE",
    "body": "SafeMarket currently has a vulnerability due to use of tx.origin. Thankfully, Peter explained this bug to me otherwise I would have fallen into the trap.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228449229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228451136",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228451136",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228451136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1MTEzNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:15:20Z",
    "updated_at": "2016-06-24T20:15:20Z",
    "author_association": "MEMBER",
    "body": "I'm not sure removing is a good idea, but we can add a warning.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228451136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228452347",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228452347",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228452347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1MjM0Nw==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:21:01Z",
    "updated_at": "2016-06-24T20:21:01Z",
    "author_association": "NONE",
    "body": "Why not?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228452347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228452851",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228452851",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228452851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1Mjg1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:23:19Z",
    "updated_at": "2016-06-24T20:23:48Z",
    "author_association": "MEMBER",
    "body": "Because it will break backwards-compatibility. If you are saying that a warning is not enough and will not be noticed, we should revisit how people compile their contracts.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228452851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228453231",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228453231",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228453231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1MzIzMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:24:49Z",
    "updated_at": "2016-06-24T20:24:49Z",
    "author_association": "MEMBER",
    "body": "If someone wants to implement that, please take a look at https://github.com/ethereum/solidity/pull/677 which is very similar. This one has to go into `visit(MemberAccess ...)`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228453231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228453296",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228453296",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228453296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1MzI5Ng==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:25:12Z",
    "updated_at": "2016-06-24T20:25:12Z",
    "author_association": "NONE",
    "body": "Fair enough. Is Solidity committed to backwards-compatibility in general?\n\nI would recommend at least adding it to the list of things to change when you do the next breaking change. Any code that would be broken by this needs to be broken, because it is almost certainly insecure in some way.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228453296/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228459800",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228459800",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228459800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ1OTgwMA==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T20:56:05Z",
    "updated_at": "2016-06-24T20:56:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Any code that would be broken by this needs to be broken, because it is almost certainly insecure in some way.\n\nGood point here 👆 \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228459800/reactions",
      "total_count": 6,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228464061",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228464061",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228464061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ2NDA2MQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T21:16:22Z",
    "updated_at": "2016-06-24T21:16:22Z",
    "author_association": "MEMBER",
    "body": "I think @PeterBorah makes a good point here. I think backwards compatibility for this security flaw might be worth breaking just this time. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228464061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228502205",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228502205",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228502205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUwMjIwNQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T02:22:03Z",
    "updated_at": "2016-06-25T02:22:03Z",
    "author_association": "MEMBER",
    "body": "So far the only times I've used tx.origin are:\n1. Bypassing stack depth checking\n2. Source of entropy.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228502205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228504721",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228504721",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228504721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUwNDcyMQ==",
    "user": {
      "login": "slothbag",
      "id": 811824,
      "node_id": "MDQ6VXNlcjgxMTgyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/811824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slothbag",
      "html_url": "https://github.com/slothbag",
      "followers_url": "https://api.github.com/users/slothbag/followers",
      "following_url": "https://api.github.com/users/slothbag/following{/other_user}",
      "gists_url": "https://api.github.com/users/slothbag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slothbag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slothbag/subscriptions",
      "organizations_url": "https://api.github.com/users/slothbag/orgs",
      "repos_url": "https://api.github.com/users/slothbag/repos",
      "events_url": "https://api.github.com/users/slothbag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slothbag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T02:57:29Z",
    "updated_at": "2016-06-25T02:57:29Z",
    "author_association": "NONE",
    "body": "I have contracts that ripple calls up a chain of contracts.. and I need to know which account was the originator.  I use tx.origin for that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228504721/reactions",
      "total_count": 12,
      "+1": 12,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228505969",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228505969",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228505969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUwNTk2OQ==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T03:16:35Z",
    "updated_at": "2016-06-25T03:17:43Z",
    "author_association": "NONE",
    "body": "@slothbag Regardless of the outcome of this pull request, double and triple check that you're actually secure there. Chances are, there are ways for malicious contracts to do unexpected things by impersonating your users or your contracts. Is it ok if an attacker is able to call any of your functions at any time, with any arguments, while appearing to be a legitimate user? If not, `tx.origin` isn't safe.\n\nAlso consider whether it's ok that your users can't use multisig wallets, and can't be DAOs or anything like that.\n\nIf you're interested, I'd be happy to take a look at your contracts and offer advice for structuring your contracts so you don't need `tx.origin`. I am on a quest to eliminate it from existence!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228505969/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228508062",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-228508062",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 228508062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUwODA2Mg==",
    "user": {
      "login": "slothbag",
      "id": 811824,
      "node_id": "MDQ6VXNlcjgxMTgyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/811824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slothbag",
      "html_url": "https://github.com/slothbag",
      "followers_url": "https://api.github.com/users/slothbag/followers",
      "following_url": "https://api.github.com/users/slothbag/following{/other_user}",
      "gists_url": "https://api.github.com/users/slothbag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slothbag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slothbag/subscriptions",
      "organizations_url": "https://api.github.com/users/slothbag/orgs",
      "repos_url": "https://api.github.com/users/slothbag/repos",
      "events_url": "https://api.github.com/users/slothbag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slothbag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T03:46:59Z",
    "updated_at": "2016-06-25T03:46:59Z",
    "author_association": "NONE",
    "body": "Thanks @PeterBorah I will definitely revisit my usage of it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/228508062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234079050",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234079050",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234079050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDA3OTA1MA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T20:52:34Z",
    "updated_at": "2016-07-20T20:52:34Z",
    "author_association": "MEMBER",
    "body": "One of our contracts allows registering only non-contract address. We are checking this with `msg.sender == tx.origin`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234079050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234099863",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234099863",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234099863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDA5OTg2Mw==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T22:12:15Z",
    "updated_at": "2016-07-20T22:12:15Z",
    "author_association": "NONE",
    "body": "@Nashatyrev: Why do you want to do this? It vastly reduces your user's security options, because they can't use multisig, key revocation, or other contract-based security systems. As a user, I would not appreciate being forced to use a dangerous method (a bare private/public keypair) for interacting with a contract.\n\nAdditionally, this won't work the way you expect it to after [EIP 101](https://github.com/ethereum/EIPs/issues/28).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234099863/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234107909",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234107909",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234107909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEwNzkwOQ==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T22:49:08Z",
    "updated_at": "2016-07-20T22:57:05Z",
    "author_association": "MEMBER",
    "body": "E.g. you have a Token contract (address -> balance), and you want to get fees from transferring tokens between owners. If you allow a contract to own a token account then those token can be locked and transferred between owners without any fees (i.e. kind of derivative token contract). Non-contract only accounts prevent this. As a user you may grant any contract with access to your account (which still prevents token locking) for the benefits you've mentioned. \n\nNot sure why EIP 101 should break this? The transaction will still have a signer and the contract invocation will still have a caller. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234107909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234134786",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234134786",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234134786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEzNDc4Ng==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T01:47:15Z",
    "updated_at": "2016-07-21T01:48:21Z",
    "author_association": "NONE",
    "body": "> As a user you may grant any contract with access to your account (which still prevents token locking) for the benefits you've mentioned.\n\nThis isn't true. There will still be a private key somewhere with access to the tokens, which means there's no way to use any other form of security exclusively. If someone gets access to the private key, it's game over. \n\n(It's also just annoying that I have to generate a private key just for your one dapp, rather than using the security system I use for literally everything else.)\n\n> Not sure why EIP 101 should break this? The transaction will still have a signer and the contract invocation will still have a caller.\n\nI don't know exactly what the semantics will be, but either `tx.origin` will be the origin address, in which case it is useless for telling who sent it, or it will be the address of the contract that pays the gas, in which case it could easily be the sort of contract you're hoping to prevent.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234134786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234388505",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234388505",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234388505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM4ODUwNQ==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T21:23:49Z",
    "updated_at": "2016-07-21T21:23:49Z",
    "author_association": "MEMBER",
    "body": "You may generate a key, create an account, grant account access to any contract you like and immediately destroy the key. \nThe trick is you can't prove others you have destroyed the key and thus the tokens can't be assumed locked. So any token transfer should be still performed via the Token contract and transfer fees get paid. \nCan you please tell what security system are you referring? \n\nEIP 101: Do you mean this change is going to be VM backward incompatible? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234388505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234390501",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-234390501",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 234390501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM5MDUwMQ==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T21:31:41Z",
    "updated_at": "2016-07-21T21:31:41Z",
    "author_association": "NONE",
    "body": "> You may generate a key, create an account, grant account access to any contract you like and immediately destroy the key. \n\nYeah, that works I guess, though you have to hope that you didn't leak the key during the creation and signing phase. Not as secure as I'd like, but not terrible.\n\n> Can you please tell what security system are you referring?\n\nI don't have one set up yet, so I was referring to the hypothetical future. But any security system based on smart contracts, which will be pretty much any of them. For instance, anything with a multisig component, or anything where you can change keys or where you have \"emergency override\" keys. We're building this sort of system at Ownage for our users, and there will be lots more coming out in the near-to-medium-term future. The Mist multisig wallets are a simple example of this pattern.\n\n> EIP 101: Do you mean this change is going to be VM backward incompatible?\n\nWell, it's definitely backwards incompatible (until now all transactions had to be signed in a specific format, after EIP 101 any transaction is potentially valid regardless of signature). But in this specific case, it's not the backwards incompatibility that's the problem, but the general functionality implied by the EIP. Since you can have your \"account\" work based on any code you write, the \"account\" can become the sort of derivative you don't want.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/234390501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235045149",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-235045149",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 235045149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTA0NTE0OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T18:41:42Z",
    "updated_at": "2016-07-25T18:41:42Z",
    "author_association": "MEMBER",
    "body": "@PeterBorah:\n\n> I would recommend at least adding it to the list of things to change when you do the next breaking change.\n\nIt would definitely make sense starting a list of possible breaking changes and have them in the next version. Since we're following semver, 0.4.x could have breaking changes.\n\nI would include not only security related changes, but remove any possible dead weight which could be a burden in the future evolution of the language.\n\n@chriseth would it make sense having a separate issue opened for it or a git issue tag is sufficient? Judging by a quick browse there are plenty of proposed breaking changes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235045149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235546966",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-235546966",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 235546966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU0Njk2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T10:23:43Z",
    "updated_at": "2016-07-27T10:23:43Z",
    "author_association": "MEMBER",
    "body": "Yes, such a list makes sense. I actually prefix all PRs that introduce breaking change with `BREAKING`.\n\nAs far as tx.origin is concerned, I am still not convinced that banning it to inline assembly is a good thing. If you do access control, then every single example uses `msg.sender` and not `tx.origin`. We also don't forbid users to do access control using passwords in contracts, but we tell users in the documentation not to do it.\n\nI'm fine with adding a static analysis check in browser-solidity to search for `tx.origin`, but I would not want to remove it from the language.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235546966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235628373",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-235628373",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 235628373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTYyODM3Mw==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T15:46:32Z",
    "updated_at": "2016-07-27T15:46:32Z",
    "author_association": "NONE",
    "body": "> We also don't forbid users to do access control using passwords in contracts, but we tell users in the documentation not to do it.\n\nThere are lots of things that Solidity doesn't allow you to do. It's a statically typed language! This is the same sort of thing: `tx.origin` is a bug that is can be detected at compile time. \n\nI'm sympathetic to the argument that power is more important than safety, but that doesn't seem to be Solidity's philosophy in any other situation.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235628373/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239135491",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-239135491",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 239135491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzNTQ5MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T11:28:10Z",
    "updated_at": "2016-08-11T11:28:10Z",
    "author_association": "MEMBER",
    "body": "Replaced by https://github.com/ethereum/browser-solidity/issues/173\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239135491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/302892935",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-302892935",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 302892935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg5MjkzNQ==",
    "user": {
      "login": "akrolak",
      "id": 25868641,
      "node_id": "MDQ6VXNlcjI1ODY4NjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25868641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akrolak",
      "html_url": "https://github.com/akrolak",
      "followers_url": "https://api.github.com/users/akrolak/followers",
      "following_url": "https://api.github.com/users/akrolak/following{/other_user}",
      "gists_url": "https://api.github.com/users/akrolak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akrolak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akrolak/subscriptions",
      "organizations_url": "https://api.github.com/users/akrolak/orgs",
      "repos_url": "https://api.github.com/users/akrolak/repos",
      "events_url": "https://api.github.com/users/akrolak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akrolak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T19:15:06Z",
    "updated_at": "2017-05-20T19:15:06Z",
    "author_association": "NONE",
    "body": "Actually I have opposite problem, I want to use tx.origin for personal account but it returns contract address in spoke and hub model :(",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/302892935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349945689",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349945689",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349945689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk0NTY4OQ==",
    "user": {
      "login": "oojr",
      "id": 1275902,
      "node_id": "MDQ6VXNlcjEyNzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1275902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oojr",
      "html_url": "https://github.com/oojr",
      "followers_url": "https://api.github.com/users/oojr/followers",
      "following_url": "https://api.github.com/users/oojr/following{/other_user}",
      "gists_url": "https://api.github.com/users/oojr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oojr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oojr/subscriptions",
      "organizations_url": "https://api.github.com/users/oojr/orgs",
      "repos_url": "https://api.github.com/users/oojr/repos",
      "events_url": "https://api.github.com/users/oojr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oojr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T11:52:36Z",
    "updated_at": "2017-12-07T11:52:36Z",
    "author_association": "NONE",
    "body": "@PeterBorah simple use case for `tx.origin` I want a contract to approve and transferFrom tokens on my behalf, is calling two different contracts more user friendly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349945689/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349946602",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349946602",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349946602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk0NjYwMg==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T11:56:48Z",
    "updated_at": "2017-12-07T11:56:48Z",
    "author_association": "NONE",
    "body": "I don't know if it's more user-friendly, but it's definitely more secure. If your token contract checks `tx.origin` instead of `msg.sender`, then any contract you ever call can steal your tokens, even if you thought you were just breeding some digital cats.\r\n\r\nUser friendliness is easy to handle in the interface. No reason to compromise security to do it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349946602/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349965969",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349965969",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349965969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk2NTk2OQ==",
    "user": {
      "login": "oojr",
      "id": 1275902,
      "node_id": "MDQ6VXNlcjEyNzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1275902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oojr",
      "html_url": "https://github.com/oojr",
      "followers_url": "https://api.github.com/users/oojr/followers",
      "following_url": "https://api.github.com/users/oojr/following{/other_user}",
      "gists_url": "https://api.github.com/users/oojr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oojr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oojr/subscriptions",
      "organizations_url": "https://api.github.com/users/oojr/orgs",
      "repos_url": "https://api.github.com/users/oojr/repos",
      "events_url": "https://api.github.com/users/oojr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oojr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T13:25:26Z",
    "updated_at": "2017-12-07T13:25:26Z",
    "author_association": "NONE",
    "body": "any contract can change ownership and self destruct if modifiers are not in place, how will someone steal my tokens if I am checking if `msg.sender` is an approved contract? \r\n```\r\nremoteApprove(_spender){\r\n  require(approvedReceiver(msg.sender));\r\n  allowance[tx.origin][_spender] = _value;\r\n}\r\n```\r\n@PeterBorah I agree though security shouldn't be comprimised, and it could probably be easier done in the interface, its better to keep the Solidity attack vectors small\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349965969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349966934",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349966934",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349966934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk2NjkzNA==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T13:29:09Z",
    "updated_at": "2017-12-07T13:29:49Z",
    "author_association": "NONE",
    "body": "That definitely helps, but then the attack flow is:\r\n\r\nYou -> `EvilCryptoKitties` -> `ApprovedReceiverContract` -> `Token`\r\n\r\nYou're the `tx.origin`, so `EvilCryptoKitties` can act on your behalf and send your tokens to themselves.\r\n\r\nThis doesn't work if `ApprovedReceiverContract` checks `msg.sender`, but at that point you're just trusting all of the security to `ApprovedReceiverContract`, so why not just remove the false security provided by `tx.origin` like this:\r\n\r\n```\r\nremoteApprove(_spender, _owner){\r\n  require(approvedReceiver(msg.sender));\r\n  allowance[_owner][_spender] = _value;\r\n}",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349966934/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349980259",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349980259",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349980259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk4MDI1OQ==",
    "user": {
      "login": "oojr",
      "id": 1275902,
      "node_id": "MDQ6VXNlcjEyNzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1275902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oojr",
      "html_url": "https://github.com/oojr",
      "followers_url": "https://api.github.com/users/oojr/followers",
      "following_url": "https://api.github.com/users/oojr/following{/other_user}",
      "gists_url": "https://api.github.com/users/oojr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oojr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oojr/subscriptions",
      "organizations_url": "https://api.github.com/users/oojr/orgs",
      "repos_url": "https://api.github.com/users/oojr/repos",
      "events_url": "https://api.github.com/users/oojr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oojr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T14:20:12Z",
    "updated_at": "2017-12-07T14:21:06Z",
    "author_association": "NONE",
    "body": "why would I send a transaction to `EvilCryptoKitties` in that contract pretend they have\r\n\r\n```\r\nfunction payable(){\r\n  owner.transfer(msg.value * 100)\r\n}\r\n```\r\n\r\nIn this scenario `tx.origin` is not the problem but interacting with the bad contract is \r\n\r\nthe flow is `Me` -> `ApprovedReceiveContract` -> `Token`\r\n\r\nit is still two transactions either way, so its better to have the safer msg.sender",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349980259/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349982238",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349982238",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349982238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk4MjIzOA==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T14:26:50Z",
    "updated_at": "2017-12-07T14:27:05Z",
    "author_association": "NONE",
    "body": "You would call `EvilCryptoKitties` because you want to breed lovely digital kitties, of course.\r\n\r\nThey can't do your `owner.transfer(msg.value * 100)` in any other case because the contract doesn't have the right to transfer on behalf of your account. The only way they get that ability is if you use the insecure `tx.origin`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349982238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349988282",
    "html_url": "https://github.com/ethereum/solidity/issues/683#issuecomment-349988282",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/683",
    "id": 349988282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk4ODI4Mg==",
    "user": {
      "login": "oojr",
      "id": 1275902,
      "node_id": "MDQ6VXNlcjEyNzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1275902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oojr",
      "html_url": "https://github.com/oojr",
      "followers_url": "https://api.github.com/users/oojr/followers",
      "following_url": "https://api.github.com/users/oojr/following{/other_user}",
      "gists_url": "https://api.github.com/users/oojr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oojr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oojr/subscriptions",
      "organizations_url": "https://api.github.com/users/oojr/orgs",
      "repos_url": "https://api.github.com/users/oojr/repos",
      "events_url": "https://api.github.com/users/oojr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oojr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T14:47:27Z",
    "updated_at": "2017-12-07T14:47:27Z",
    "author_association": "NONE",
    "body": "Yes my example actually wouldnt work without EvilCrpytoKitties is a bad contract regardless any behavior is malicious I dont think tx.origin will protect that but can prevent middleman contract attacks in an automated flow",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/349988282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
