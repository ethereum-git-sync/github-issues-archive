{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12570/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12570/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12570/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12570",
  "id": 1110246962,
  "node_id": "I_kwDOAm_5kc5CLQYy",
  "number": 12570,
  "title": "[OptimizedEVMCodeTransform] ICE due to \"Could not create stack layout after 1000 iterations\"",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4438488423,
      "node_id": "LA_kwDOAm_5kc8AAAABCI31Zw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have",
      "name": "must have",
      "color": "ffa12a",
      "default": false,
      "description": "Something we consider an essential part of Solidity 1.0."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-01-21T09:30:02Z",
  "updated_at": "2023-12-07T13:50:04Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\n{\r\n  function f() -> o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11, o12, o13, o14, o15, o16, o17, o18\r\n  {\r\n    for {} o13 { o18 := add(o1,0) } {\r\n      if eq(o4, 0) {\r\n        o7 := 0\r\n        {\r\n          for {o1 := 2} o13 {} { {leave} }\r\n        }\r\n      }\r\n      o9 := o6\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nthrows\r\n\r\nhttps://github.com/ethereum/solidity/blob/55467c1ccaffd5fcf6ea988d5e091d468a08f533/libyul/backends/evm/StackHelpers.h#L121\r\n\r\nThe fuzzer upstream reported this bug (see https://github.com/ethereum/solidity/blob/55467c1ccaffd5fcf6ea988d5e091d468a08f533/test/tools/ossfuzz/strictasm_assembly_ossfuzz.cpp#L49)\r\n\r\nI could not reproduce via solc CLI.\r\n\r\n",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12570/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12570/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018370024",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018370024",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018370024,
    "node_id": "IC_kwDOAm_5kc48sxfo",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T10:17:40Z",
    "updated_at": "2022-01-21T11:06:20Z",
    "author_association": "MEMBER",
    "body": "Oh, \"nice\"! That's likely a real proper bug in the stack shuffling then :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018370024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018372809",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018372809",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018372809,
    "node_id": "IC_kwDOAm_5kc48syLJ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T10:21:09Z",
    "updated_at": "2022-01-21T10:21:09Z",
    "author_association": "MEMBER",
    "body": "Can be reproduced by the following as ``test/libyul/evmCodeTransform/`` test:\r\n```\r\n\r\n  function f() -> o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11, o12, o13, o14, o15, o16, o17, o18\r\n  {\r\n    for {} o13 { o18 := add(o1,0) } {\r\n      if eq(o4, 0) {\r\n        o7 := 0\r\n        {\r\n          for {o1 := 2} o13 {} { {leave} }\r\n        }\r\n      }\r\n      o9 := o6\r\n    }\r\n  }\r\n}\r\n// ====\r\n// stackOptimization: true\r\n// ----\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018372809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018409426",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018409426",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018409426,
    "node_id": "IC_kwDOAm_5kc48s7HS",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T11:09:30Z",
    "updated_at": "2022-01-21T11:09:30Z",
    "author_association": "MEMBER",
    "body": "Out of curiosity: did you change the fuzzing in some way or is it pure coincidence that this only comes up now? The stack shuffling hasn't changed for quite a while... May very well be that it only occurs in *very* specific cases and that's why it took a long time, but not sure...\r\n\r\nAnyways, I actually find it reassuring that the fuzzer is able to come up with this - when we started fuzzing this, I was actually surprised that this error never came up, but this report now seems to indicate that fuzzing works :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018409426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018512694",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018512694",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018512694,
    "node_id": "IC_kwDOAm_5kc48tUU2",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T13:38:07Z",
    "updated_at": "2022-01-21T13:38:07Z",
    "author_association": "MEMBER",
    "body": "Ah, ok, interesting...\r\nThis is also a \"StackTooDeep\" case...\r\nThe stack shuffling algorithms *wants* to do a too-deep-swap, but tries to avoid it, since it's too-deep - and then hits a swapping cycle because of that...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018512694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018513592",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018513592",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018513592,
    "node_id": "IC_kwDOAm_5kc48tUi4",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T13:39:21Z",
    "updated_at": "2022-01-21T13:39:21Z",
    "author_association": "MEMBER",
    "body": "Actually not sure if I should try to fix this in the shuffling algorithm or instead just have shuffling abort early on stack issues (either way this will ultimately report a stack too deep error, it's currently just disguised)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018513592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018577593",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1018577593",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1018577593,
    "node_id": "IC_kwDOAm_5kc48tkK5",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T14:50:04Z",
    "updated_at": "2022-01-21T15:10:03Z",
    "author_association": "MEMBER",
    "body": "Might actually be nice to keep this open despite https://github.com/ethereum/solidity/pull/12572...\r\nWhile https://github.com/ethereum/solidity/pull/12572 \"fixes\" this to a regular stack-too-deep error, theoretically, it would be possible to generate code for this without a stack-too-deep, it'd just require some trickery that's beyond the current setup...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1018577593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1019870028",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1019870028",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1019870028,
    "node_id": "IC_kwDOAm_5kc48yftM",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T09:06:44Z",
    "updated_at": "2022-01-24T09:06:44Z",
    "author_association": "MEMBER",
    "body": "> Out of curiosity: did you change the fuzzing in some way or is it pure coincidence that this only comes up now?\r\n\r\nI would tend to think it is co-incidence but will take a closer look.\r\n\r\n> Anyways, I actually find it reassuring that the fuzzer is able to come up with this - when we started fuzzing this, I was actually surprised that this error never came up, but this report now seems to indicate that fuzzing works :-).\r\n\r\nIt is possible that the fuzzer that actually detected this issue took a long time because it is not semantics-aware (simply mutates raw bytes treating yul input as a binary stream). On the other hand, the semantics-aware fuzzer does not probe the new code transform if old code gen contains a stack too deep error. We are doing this so we can compare blockchain state (which requires a baseline i.e., old codegen).\r\n\r\nhttps://github.com/ethereum/solidity/blob/3f401ebd42acae24c9bd6d800fa7f7dd3433b9f2/test/tools/ossfuzz/StackReuseCodegenFuzzer.cpp#L91\r\n\r\nAnother possibility is that this was undetected because the semantics-aware fuzzer only tests Yul optimizer + New code transform but the non semantics-aware fuzzer that found this issue only tested the new code transform i.e., assembling without optimization.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1019870028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1039011325",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1039011325",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1039011325,
    "node_id": "IC_kwDOAm_5kc497g39",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-14T12:09:27Z",
    "updated_at": "2022-02-14T12:09:27Z",
    "author_association": "MEMBER",
    "body": "Closing this, since the concrete issue should have been fixed by https://github.com/ethereum/solidity/pull/12572",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1039011325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1253478487",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1253478487",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1253478487,
    "node_id": "IC_kwDOAm_5kc5KtpBX",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-21T09:59:00Z",
    "updated_at": "2022-09-21T09:59:00Z",
    "author_association": "MEMBER",
    "body": "This is a big test that triggers the underlying ICE. Sorry for the bad formatting, if there is a tool I could use to auto-format yul files, I would do it.\r\n\r\nhttps://gist.github.com/bshastry/a796b1c6f824b386750a9911160ab2e1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1253478487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1253590424",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1253590424",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1253590424,
    "node_id": "IC_kwDOAm_5kc5KuEWY",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-21T11:45:41Z",
    "updated_at": "2022-09-21T11:46:01Z",
    "author_association": "MEMBER",
    "body": "> if there is a tool I could use to auto-format yul files, I would do it.\r\n\r\nThe compiler can do it. I wonder if it would be a good idea to expose it somehow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1253590424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1254772938",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1254772938",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1254772938,
    "node_id": "IC_kwDOAm_5kc5KylDK",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-22T09:34:23Z",
    "updated_at": "2022-09-22T09:34:23Z",
    "author_association": "MEMBER",
    "body": "> > if there is a tool I could use to auto-format yul files, I would do it.\r\n> \r\n> The compiler can do it. I wonder if it would be a good idea to expose it somehow.\r\n\r\nThanks for the hint! Here's a much better formatted program albeit heavily indented and less readable due to it\r\n\r\n```\r\n{\r\n        let x\r\n        for { } calldataload(0) { }\r\n        {\r\n            {\r\n                {\r\n                    {\r\n                        {\r\n                            {\r\n                                for { } calldataload(0) { }\r\n                                {\r\n                                    if callvalue() { break }\r\n                                    mstore(x, 0x42)\r\n                                    for { } calldataload(0) { }\r\n                                    {\r\n                                        {\r\n                                            x := 1\r\n                                            for { } calldataload(0) { }\r\n                                            {\r\n                                                {\r\n                                                    {\r\n                                                        if callvalue()\r\n                                                        {\r\n                                                            {\r\n                                                                {\r\n                                                                    {\r\n                                                                        x := 2\r\n                                                                        for { } calldataload(0) { }\r\n                                                                        {\r\n                                                                            if callvalue()\r\n                                                                            {\r\n                                                                                {\r\n                                                                                    {\r\n                                                                                        {\r\n                                                                                            {\r\n                                                                                                {\r\n                                                                                                    if callvalue()\r\n                                                                                                    {\r\n                                                                                                        x := 2\r\n                                                                                                        {\r\n                                                                                                            {\r\n                                                                                                                sstore(4, exp(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 1))\r\n                                                                                                                sstore(6, exp(not(0), 1))\r\n                                                                                                                sstore(7, exp(0xffffafffffffffffffffffffffffffff, 2))\r\n                                                                                                                sstore(8, exp(0xffffffffffffffff, 2))\r\n                                                                                                                sstore(9, exp(0xf, 3))\r\n                                                                                                                sstore(13, exp(0xffffffffffffffff0000000000000000, 3))\r\n                                                                                                                sstore(14, exp(2, 6))\r\n                                                                                                                sstore(15, exp(2, 255))\r\n                                                                                                                {\r\n                                                                                                                    {\r\n                                                                                                                        if callvalue()\r\n                                                                                                                        {\r\n                                                                                                                            {\r\n                                                                                                                                {\r\n                                                                                                                                    {\r\n                                                                                                                                        for { } calldataload(0) { }\r\n                                                                                                                                        {\r\n                                                                                                                                            if callvalue()\r\n                                                                                                                                            {\r\n                                                                                                                                                {\r\n                                                                                                                                                    {\r\n                                                                                                                                                        {\r\n                                                                                                                                                            {\r\n                                                                                                                                                                {\r\n                                                                                                                                                                    {\r\n                                                                                                                                                                        for { } calldataload(0) { }\r\n                                                                                                                                                                        {\r\n                                                                                                                                                                            if callvalue() { x := 2 }\r\n                                                                                                                                                                            mstore(x, 0x42)\r\n                                                                                                                                                                        }\r\n                                                                                                                                                                        if callvalue()\r\n                                                                                                                                                                        {\r\n                                                                                                                                                                            {\r\n                                                                                                                                                                                if callvalue()\r\n                                                                                                                                                                                {\r\n                                                                                                                                                                                    x := 2\r\n                                                                                                                                                                                    mstore(x, 0x42)\r\n                                                                                                                                                                                }\r\n                                                                                                                                                                                sstore(4, exp(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 1))\r\n                                                                                                                                                                                sstore(6, exp(not(0), 1))\r\n                                                                                                                                                                                sstore(7, exp(0xffffafffffffffffffffffffffffffff, 2))\r\n                                                                                                                                                                                sstore(8, exp(0xffffffffffffffff, 2))\r\n                                                                                                                                                                                sstore(9, exp(0xff, 3))\r\n                                                                                                                                                                                sstore(13, exp(0xffffffffffffffff0000000000000000, 3))\r\n                                                                                                                                                                                sstore(14, exp(2, 256))\r\n                                                                                                                                                                                sstore(15, exp(2, 255))\r\n                                                                                                                                                                            }\r\n                                                                                                                                                                            sstore(2, 3)\r\n                                                                                                                                                                        }\r\n                                                                                                                                                                    }\r\n                                                                                                                                                                    if callvalue() { x := 3 }\r\n                                                                                                                                                                }\r\n                                                                                                                                                            }\r\n                                                                                                                                                        }\r\n                                                                                                                                                        mstore(x, 0x42)\r\n                                                                                                                                                    }\r\n                                                                                                                                                    break\r\n                                                                                                                                                }\r\n                                                                                                                                            }\r\n                                                                                                                                            mstore(x, 0x42)\r\n                                                                                                                                        }\r\n                                                                                                                                        x := 3\r\n                                                                                                                                    }\r\n                                                                                                                                }\r\n                                                                                                                            }\r\n                                                                                                                        }\r\n                                                                                                                    }\r\n                                                                                                                }\r\n                                                                                                            }\r\n                                                                                                        }\r\n                                                                                                    }\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        }\r\n                                                                                    }\r\n                                                                                    break\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }\r\n                                                                    mstore(x, 0x42)\r\n                                                                }\r\n                                                            }\r\n                                                            break\r\n                                                        }\r\n                                                    }\r\n                                                    if callvalue() { break }\r\n                                                }\r\n                                                mstore(x, 4)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    mstore(x, 0)\r\n                                }\r\n                            }\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1254772938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1254868407",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1254868407",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1254868407,
    "node_id": "IC_kwDOAm_5kc5Ky8W3",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-22T11:03:56Z",
    "updated_at": "2022-09-22T11:04:09Z",
    "author_association": "MEMBER",
    "body": "I wouldn't say it's less readable. It's still hard to read of course but I think the unindented version was much worse because you could not see the structure at all.\r\n\r\nI created #13550 for the formatter. Should be trivial to implement, but it's a very tangential thing so I think we should discuss on the call whether we want to add things like this to the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1254868407/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332142005",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1332142005",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1332142005,
    "node_id": "IC_kwDOAm_5kc5PZt-1",
    "user": {
      "login": "NunoFilipeSantos",
      "id": 2582498,
      "node_id": "MDQ6VXNlcjI1ODI0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NunoFilipeSantos",
      "html_url": "https://github.com/NunoFilipeSantos",
      "followers_url": "https://api.github.com/users/NunoFilipeSantos/followers",
      "following_url": "https://api.github.com/users/NunoFilipeSantos/following{/other_user}",
      "gists_url": "https://api.github.com/users/NunoFilipeSantos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NunoFilipeSantos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NunoFilipeSantos/subscriptions",
      "organizations_url": "https://api.github.com/users/NunoFilipeSantos/orgs",
      "repos_url": "https://api.github.com/users/NunoFilipeSantos/repos",
      "events_url": "https://api.github.com/users/NunoFilipeSantos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NunoFilipeSantos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T13:17:31Z",
    "updated_at": "2022-11-30T13:17:31Z",
    "author_association": "MEMBER",
    "body": "Hey! 👋 What is the impact of this bug? (High, Medium, Low)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332142005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332162305",
    "html_url": "https://github.com/ethereum/solidity/issues/12570#issuecomment-1332162305",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12570",
    "id": 1332162305,
    "node_id": "IC_kwDOAm_5kc5PZy8B",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T13:35:52Z",
    "updated_at": "2022-11-30T13:36:49Z",
    "author_association": "MEMBER",
    "body": "Same as https://github.com/ethereum/solidity/issues/13224 - it's just a different example case. (But we already established that they don't have exactly the same cause, just the same effect, so it's a separate issue.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332162305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
