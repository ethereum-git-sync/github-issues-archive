{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14250/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14250/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14250/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14250",
  "id": 1717369288,
  "node_id": "I_kwDOAm_5kc5mXPnI",
  "number": 14250,
  "title": "Contract bytecode changes vastly when independent contracts added to the compiler ",
  "user": {
    "login": "kuzdogan",
    "id": 13069972,
    "node_id": "MDQ6VXNlcjEzMDY5OTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kuzdogan",
    "html_url": "https://github.com/kuzdogan",
    "followers_url": "https://api.github.com/users/kuzdogan/followers",
    "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
    "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
    "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
    "repos_url": "https://api.github.com/users/kuzdogan/repos",
    "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/56",
    "html_url": "https://github.com/ethereum/solidity/milestone/56",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/56/labels",
    "id": 9152710,
    "node_id": "MI_kwDOAm_5kc4Ai6jG",
    "number": 56,
    "title": "0.8.21",
    "description": "",
    "creator": {
      "login": "NunoFilipeSantos",
      "id": 2582498,
      "node_id": "MDQ6VXNlcjI1ODI0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NunoFilipeSantos",
      "html_url": "https://github.com/NunoFilipeSantos",
      "followers_url": "https://api.github.com/users/NunoFilipeSantos/followers",
      "following_url": "https://api.github.com/users/NunoFilipeSantos/following{/other_user}",
      "gists_url": "https://api.github.com/users/NunoFilipeSantos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NunoFilipeSantos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NunoFilipeSantos/subscriptions",
      "organizations_url": "https://api.github.com/users/NunoFilipeSantos/orgs",
      "repos_url": "https://api.github.com/users/NunoFilipeSantos/repos",
      "events_url": "https://api.github.com/users/NunoFilipeSantos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NunoFilipeSantos/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 14,
    "state": "closed",
    "created_at": "2023-03-13T14:22:54Z",
    "updated_at": "2023-07-20T10:56:12Z",
    "due_on": null,
    "closed_at": "2023-07-20T10:56:12Z"
  },
  "comments": 6,
  "created_at": "2023-05-19T14:42:11Z",
  "updated_at": "2023-12-23T14:07:02Z",
  "closed_at": "2023-07-11T10:49:41Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Summary\r\n\r\nI came across a contract that could not be verified on Sourcify because the Sourcify's compilation output bytecode is different than the author's (Hardhat). Diving deeper I've found out the difference comes to the surface when some other contracts that are unrelated to the compilation target are added to compilation.\r\n\r\nSpecifically these two standard JSON inputs yield different bytecode for the same contract `CompoundLens.sol`:\r\n[CompoundLens-solc-input-Sourcify-bytecode.json.txt](https://github.com/ethereum/solidity/files/11517691/CompoundLens-solc-input-Sourcify-bytecode.json.txt)\r\n[CompoundLens-solc-input-Hardhat-bytecode.json.txt](https://github.com/ethereum/solidity/files/11517692/CompoundLens-solc-input-Hardhat-bytecode.json.txt)\r\n\r\nThe only input sources differences are the following which are unrelated to `CompoundLens`:\r\n```js\r\n[\r\n  '@openzeppelin/contracts/interfaces/draft-IERC1822.sol',\r\n  '@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol',\r\n  '@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol',\r\n  '@openzeppelin/contracts/proxy/Proxy.sol',\r\n  '@openzeppelin/contracts/proxy/beacon/IBeacon.sol',\r\n  '@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol',\r\n  '@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol',\r\n  '@openzeppelin/contracts/utils/StorageSlot.sol'\r\n]\r\n```\r\n\r\nYou'll notice the bytecodes differ even when the metadata hashes are the same. This is unexpected as the different sources listed above are not related to `CompoundLens`. `CompoundLens` already compiles without those contracts are input in `CompoundLens-solc-input-Sourcify-bytecode.json` but when added in `CompoundLens-solc-input-Hardhat-bytecode.json` the contract's bytecode changes.\r\n\r\n### To reproduce \r\nUsing Solidity version `v0.8.19`\r\n\r\nOutput the bytecodes\r\n\r\n1. Sourcify\r\n```\r\ncat CompoundLens-solc-input-Sourcify-bytecode.json.txt | solc --standard-json | jq '.contracts.\"contracts/Comptroller/CompoundLens.sol\".CompoundLens.evm.bytecode.object' > CompoundLens-Sourcify-creation-bytecode.txt\r\n```\r\n\r\n2. Hardhat\r\n```\r\ncat CompoundLens-solc-input-Hardhat-bytecode.json.txt | solc --standard-json | jq '.contracts.\"contracts/Comptroller/CompoundLens.sol\".CompoundLens.evm.bytecode.object' > CompoundLens-Hardhat-creation-bytecode.txt\r\n```\r\n\r\nCompare the bytecodes:\r\n```\r\ngit diff --word-diff --word-diff-regex=. CompoundLens-Sourcify-creation-bytecode.txt CompoundLens-Hardhat-creation-bytecode.txt\r\n```\r\n\r\n## Background\r\n\r\nThe contracts are on this Github repo (`verify` branch): https://github.com/meterio/sumer-project/tree/verify \r\n\r\nTo compile (and deploy) the original sources: \r\n```\r\ngit clone https://github.com/meterio/sumer-project/\r\ncd sumer-project\r\nrm -rf dist\r\nyarn\r\nyarn compile\r\nnpx hardhat dcl --rpc http://rpctest.meter.io/ --pk $PRIV_KEY\r\n```\r\n\r\nThe contract is also deployed at: https://goerli.etherscan.io/address/0x46df081108b2e2FDf1bF1E84Eeb2D7ec3AdA0061\r\n\r\nThe bytecode diff between the Sourcify output and Hardhat output was not in the metadata hash or in a certain recognizable pattern for me: \r\n<img width=\"1510\" alt=\"image\" src=\"https://github.com/ethereum/solidity/assets/13069972/fb4b457e-bb08-4409-a6c3-8f92e847bfab\">\r\n\r\n[CompoundLens-hardhat-recompiled-creation.txt](https://github.com/ethereum/solidity/files/11517589/CompoundLens-hardhat-recompiled-creation.txt)\r\n[CompoundLens-recompiled-creation.txt](https://github.com/ethereum/solidity/files/11517591/CompoundLens-recompiled-creation.txt)\r\n\r\nTo generate the diff: `git diff --word-diff --word-diff-regex=. CompoundLens-hardhat-recompiled-creation.txt CompoundLens-recompiled-creation.txt`\r\n\r\nWhat I tried to do was to start from the standard JSON input of Sourcify and try to reach the Hardhat output bytecode in iterations:\r\ninitial Sourcify JSON input: [CompoundLens-solc-input.json.txt](https://github.com/ethereum/solidity/files/11517638/CompoundLens-solc-input.json.txt)\r\nHardhat JSON input: [CompoundLens-hardhat-solc-input.json.txt](https://github.com/ethereum/solidity/files/11517640/CompoundLens-hardhat-solc-input.json.txt)\r\n\r\n1. Tried using the full compilation settings from Hardhat. \r\nUsing the same settings in Hardhat in the initial Sourcify input didn't change the bytecode.\r\n2. Tried using the whole `sources` from the Harhat input in the initial Sourcify input\r\n\r\n**Yes** by using all of the sources from Hardhat, one generates the Hardhat's bytecode output.\r\n\r\nNext, I iteratively copied sources from the Hardhat input to the Sourcify input **to see adding which sources cause the change in the bytecode**.\r\n\r\nSourcify's initial standard JSON input: \r\n<img width=\"555\" alt=\"image\" src=\"https://github.com/ethereum/solidity/assets/13069972/f991f703-5734-430d-b756-fe2e21e458f4\">\r\n\r\nHardhat's standard JSON input (clipped):\r\n<img width=\"511\" alt=\"image\" src=\"https://github.com/ethereum/solidity/assets/13069972/9dfa48c7-82a3-4f1d-a12b-95310e59f9fa\">\r\n\r\nOn each step I copied a contract that might be a potential cause of change, resolved the dependencies by also adding them, compiled the new iterated JSON input and compared the bytecodes.\r\n\r\nFinally, I found a minimal standard JSON diff, that adding the specific sources would change the bytecode output. These are laid out in the above Summary section.\r\n\r\n\r\n\r\n## Environment\r\n\r\n- Compiler version: `v0.8.19`\r\n- Target EVM version (as per compiler settings): paris\r\n- Framework/IDE (e.g. Truffle or Remix): Hardhat and solc CLI\r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system: MacOS\r\n",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14250/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14250/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1581090080",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1581090080",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1581090080,
    "node_id": "IC_kwDOAm_5kc5ePYUg",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-07T15:43:12Z",
    "updated_at": "2023-06-07T15:43:30Z",
    "author_association": "MEMBER",
    "body": "For the record: we did found the cause and we'll fix this with the next release, but I'm not sure what to do for helping with verifying already deployed cases of this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1581090080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1581219425",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1581219425",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1581219425,
    "node_id": "IC_kwDOAm_5kc5eP35h",
    "user": {
      "login": "kuzdogan",
      "id": 13069972,
      "node_id": "MDQ6VXNlcjEzMDY5OTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuzdogan",
      "html_url": "https://github.com/kuzdogan",
      "followers_url": "https://api.github.com/users/kuzdogan/followers",
      "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
      "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
      "repos_url": "https://api.github.com/users/kuzdogan/repos",
      "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-07T17:09:44Z",
    "updated_at": "2023-06-07T17:09:44Z",
    "author_association": "MEMBER",
    "body": "If there is a way to recognize this, we can try to compile with everything provided (instead of just the sources in metadata) through the tooling, or warn the user about the issue on the UI. In fact this is what we do for https://github.com/ethereum/sourcify/issues/618 and makes me realize this really is a similar case (and the Solidity bug https://github.com/ethereum/solidity/issues/12281). I should've mentioned that but it didn't cross my mind 🤦\r\n\r\nIn that case, however, it is not possible to get a \"perfect match\" including the metadata, because the metadata will be changed.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1581219425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1587257073",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1587257073",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1587257073,
    "node_id": "IC_kwDOAm_5kc5em57x",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-12T12:35:37Z",
    "updated_at": "2023-06-12T12:36:45Z",
    "author_association": "MEMBER",
    "body": "I'm not sure there's a really easy way to recognize this. It's very similar to the older issues we had where additional source files affected compilation results, but a different place in the compiler that we missed back then.\r\n\r\nThe main cause of the difference is that the compiler chooses a different permutation of memory offsets for moving variables from stack to memory depending on some internal IDs that can change if you add more source files...\r\n\r\nThe problem, however, is, that the smallest offset we usually use for these variables is ``0x80``, for which a ``PUSH1`` suffices, but we can easily end up with offsets that require two bytes, which results in a ``PUSH2``, which will shift all offsets of all jumps...\r\n\r\nSo overall you will see constant pushes before jumps (i.e. offsets into bytecode) to change slightly - and you'll see constant offsets preceding memory loads and stores to change slightly.\r\n\r\nSo the pattern should be ``PUSH1/2 <someConstant> JUMP/JUMPI``, ``PUSH1/2 <someConstant> MSTORE`` , ``PUSH1/2 <someConstant> MLOAD``, in which you may get different constant values, while flipping between a ``PUSH1`` and a ``PUSH2`` can happen, which shifts all bytecode offsets around a bit (causing the first pattern involving jumps)... not sure if it's feasible to detect this easily...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1587257073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1630601096",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1630601096",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1630601096,
    "node_id": "IC_kwDOAm_5kc5hMP-I",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-11T10:49:40Z",
    "updated_at": "2023-07-11T10:49:40Z",
    "author_association": "MEMBER",
    "body": "So we can consider this *fixed* in newer compiler versions by https://github.com/ethereum/solidity/pull/14311, right? Based on that I'm closing the issue, but feel free to reopen.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1630601096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1631097653",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1631097653",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1631097653,
    "node_id": "IC_kwDOAm_5kc5hOJM1",
    "user": {
      "login": "kuzdogan",
      "id": 13069972,
      "node_id": "MDQ6VXNlcjEzMDY5OTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuzdogan",
      "html_url": "https://github.com/kuzdogan",
      "followers_url": "https://api.github.com/users/kuzdogan/followers",
      "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
      "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
      "repos_url": "https://api.github.com/users/kuzdogan/repos",
      "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-11T16:04:56Z",
    "updated_at": "2023-07-11T16:04:56Z",
    "author_association": "MEMBER",
    "body": "Yep, we'll handle this ourselves. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1631097653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1867692397",
    "html_url": "https://github.com/ethereum/solidity/issues/14250#issuecomment-1867692397",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14250",
    "id": 1867692397,
    "node_id": "IC_kwDOAm_5kc5vUrlt",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-22T13:31:12Z",
    "updated_at": "2023-12-23T14:07:02Z",
    "author_association": "MEMBER",
    "body": "@marcocastignoli\r\n> does the additional files content matter in the generated bytecode or it's just the presence of the files in the compilation? (so actually the additional files can also be empty but with the same identifier)\r\n\r\nWhen a file is parsed, every AST node in it gets an ID. IDs are generated sequentially across all the input files as the compiler goes through them. As long as the files are processed in the same order and have the same content, you get the same IDs. So yeah, in case of bugs like this, where the compiler fails to make code generation completely independent of those IDs, changing the content in files unrelated to a contract may result in different bytecode for that contract.\r\n\r\nTo be more specific, here's what must be avoided if you want to get identical bytecode in presence of such bugs:\r\n- Adding or removing files:\r\n    - Directly, in the initial input (i.e. the names you give explicitly on the CLI or in `sources` in Standard JSON).\r\n    - Indirectly, via imports (i.e. files that are not in initial input, but imported by other files).\r\n- Reordering files:\r\n    - By renaming them (affects sorting order).\r\n    - By changing their paths (affects sorting order).\r\n    - By changing remappings, resulting in the compiler seeing different names and/or paths.\r\n    - By changing whether they are included or not included in the initial input (because imported files are processed as soon as they're discovered).\r\n    - By reordering imports inside a file or between files.\r\n- Adding or removing AST nodes:\r\n    - By changing file content, which may result in a different number of AST nodes being generated.\r\n\r\nNote that:\r\n- Changing the order of files **only** in the initial input **does not** affect IDs. The compiler iterates over those files in alphabetical order.\r\n- Symlinks should not affect the order either. The compiler only takes into account the path and name of the symlink itself, as if it was the target file, ignoring the path of what it points to.\r\n- Even when a file is empty, at least one ID is dispensed - for the node that represents the root of its tree (i.e. `SourceUnit`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1867692397/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
