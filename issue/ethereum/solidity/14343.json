{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14343",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14343/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14343/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14343/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14343",
  "id": 1767685390,
  "node_id": "I_kwDOAm_5kc5pXL0O",
  "number": 14343,
  "title": "Further improve stack shuffling performance.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-06-21T14:06:10Z",
  "updated_at": "2023-06-21T14:10:00Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://github.com/ethereum/solidity/compare/develop...stackShufflingPerformance has some preliminary work towards replacing the \"muiltiplicity maps\" during stack shuffling by simple vector lookups by assigning continuous indices to the stack slots before executing the tight stack shuffling loop in https://github.com/ethereum/solidity/blob/dc7cda18f03e0734270ab89a6a4cd1cfd4493a85/libyul/backends/evm/StackHelpers.h#L113\r\n\r\nThe stack shuffling is invoked in two places, one of them an adding additional ``PreviousSlot`` construction for symbolic stack shuffling on top of the regular stack slots (with uncommon comparison behaviour). That latter use is by far not as performance critical as the use in ``createStackLayout``, but it needs to keep working nonetheless.\r\n\r\nTasks:\r\n- reevaluate the via-IR-compilation performance gain of https://github.com/ethereum/solidity/compare/develop...stackShufflingPerformance (e.g. at the ``chains.sol`` benchmark)\r\n- if the improvement is confirmed as significant, build a less-aggressively-templated index-based implementation of https://github.com/ethereum/solidity/blob/dc7cda18f03e0734270ab89a6a4cd1cfd4493a85/libyul/backends/evm/StackHelpers.h#L105, in which the required operations on stack slots are defined in terms of indexed stack slots, while the caller will still provide the concrete implementations of the ``ShuffleOperations`` (since they differ in both places of use).\r\n\r\nI have an additional improvement on top of the branch here https://gist.github.com/ekpyron/743c93f92bdaa9b61ff6019e72eab03e that improves the performance of assigning indices to stack slots - but it relies on ``boost::unordered_flat_map`` and we can't easily bump the boost version one that is recent enough to support that, but it'd also be interesting to at least locally evaluate the additional performance increase we can get from that to see if it's worthwhile to purse that further.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14343/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14343/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1600910018",
    "html_url": "https://github.com/ethereum/solidity/issues/14343#issuecomment-1600910018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14343",
    "id": 1600910018,
    "node_id": "IC_kwDOAm_5kc5fa_LC",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-21T14:10:00Z",
    "updated_at": "2023-06-21T14:10:00Z",
    "author_association": "MEMBER",
    "body": "Note: there is no need to unit-test stack shuffling extensively.\r\nWe maintain a representation of the stack while shuffling, we need to make sure that we perform all operations on that properly. But based on that we validate that we in fact achieve the desired stack when performing the shuffling operations, which provides sufficient safety guarantees.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1600910018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
