{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11952",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11952/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11952/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11952/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11952",
  "id": 995821587,
  "node_id": "I_kwDOAm_5kc47WwgT",
  "number": 11952,
  "title": "(Disallow?) `using for` to bind internal functions to interfaces",
  "user": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-09-14T09:53:31Z",
  "updated_at": "2022-11-25T12:45:44Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Interfaces only allow defining external functions. This means that if `I` is an interface, one can expect `I(addr).functionCall()` to correspond to an external function call. However, `using for` breaks this by allowing one to bind an internal function to interfaces. One typical example is the following:\r\n\r\n```solidity\r\n/// From OZ\r\nlibrary SafeERC20 {\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n}\r\n\r\nusing SafeERC20 for IERC20;\r\n\r\nIERC20(_token).safeTransferFrom(...);\r\n```\r\n\r\nThis pattern decreases readability of contracts (because it's obvious that `safeTransferFrom` is not in the ERC20 standard and this makes it look like an incorrect interface implementation) and unfortunately is very prevalant: [list of etherscan verified contracts with with this behaviour](https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/tintinweb/smart-contract-sanctuary+lang:Solidity+content:%22I*%5C%5C%28*%5C%5C%29%5C%5C.safeTransferFrom%22++&patternType=regexp&case=yes). \r\n\r\nYou can make this even worse by defining an external library function and making `I(addr).functionCall()` to be a `delegatecall` instead of `call`.\r\n\r\nA controversial suggestion to fix this is to disallow `using for` for interfaces. However, I think this might be impractical citing the widespread usage.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11952/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11952/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919032547",
    "html_url": "https://github.com/ethereum/solidity/issues/11952#issuecomment-919032547",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11952",
    "id": 919032547,
    "node_id": "IC_kwDOAm_5kc42x1Lj",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-14T10:42:08Z",
    "updated_at": "2021-09-14T10:42:08Z",
    "author_association": "MEMBER",
    "body": "If it made its way into OpenZeppelin then it might be a bit too late for disallowing this. `SafeERC20` seems to have been introduced in 2017 (https://github.com/OpenZeppelin/openzeppelin-contracts/pull/413, around the time of Solidity 0.4.11). The fact that it's still there and even has a comment suggesting `using SafeERC20 for IERC20` indicates that at least OZ team embraces it as a pattern as worth supporting. We should at least discuss this with them. Maybe opening a topic on the OZ forum to gather some feedback would be a good idea?\r\n\r\nI think that one reason for this pattern is convenience - repeating the library name makes the statement longer - so maybe replacing it with a free function would be a viable alternative.\r\n\r\nAnother might be that users are often familiar with other interfaces that do have `safeTransferFrom()` and using this method on also on `IERC20` may seem natural to them. This one might be a harder sell as a free function. On the other hand I'm not sure if this similarity is actually a good thing. After all `SafeERC20.safeTransferFrom()` makes the call is \"safe\" in a different sense than e.g. `IERC721.safeTransferFrom()` does. So this pattern probably steers less experienced users towards these alternative functions but on the other hand might muddle things up for more experienced users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919032547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919059342",
    "html_url": "https://github.com/ethereum/solidity/issues/11952#issuecomment-919059342",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11952",
    "id": 919059342,
    "node_id": "IC_kwDOAm_5kc42x7uO",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-14T11:23:43Z",
    "updated_at": "2021-09-14T11:23:43Z",
    "author_association": "MEMBER",
    "body": "I don't see this as a problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919059342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919078316",
    "html_url": "https://github.com/ethereum/solidity/issues/11952#issuecomment-919078316",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11952",
    "id": 919078316,
    "node_id": "IC_kwDOAm_5kc42yAWs",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-14T11:53:43Z",
    "updated_at": "2021-09-14T11:54:07Z",
    "author_association": "MEMBER",
    "body": "To put this in more context, one of them is an external call to a contract, the other one is an internal function call:\r\n\r\n```solidity\r\n    function _withdrawToken(address _token, uint _amount, bool _IsSafeTransfer) internal returns (bool) {\r\n        require(_amount > 0);\r\n        require (tokenUserAmountOf[_token][msg.sender] >= _amount);\r\n\r\n        tokenUserAmountOf[_token][msg.sender] = tokenUserAmountOf[_token][msg.sender].sub(_amount);\r\n        if (_IsSafeTransfer) {  \r\n            IERC20(_token).safeTransfer(msg.sender, _amount);       \r\n        }\r\n        else {\r\n            IERC20(_token).transfer(msg.sender, _amount);           \r\n        }\r\n\r\n        emit OnWithdraw(_token, msg.sender, _amount, tokenUserAmountOf[_token][msg.sender]);\r\n        return true;\r\n    } \r\n```\r\n\r\n[source](https://github.com/tintinweb/smart-contract-sanctuary/blob/master/contracts_tronscan/mainnet/TU/TUKDvWbgE86LDBL4EmGzx3EQ4RnkycWyAB_KiaToken.sol#L390)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919078316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919822279",
    "html_url": "https://github.com/ethereum/solidity/issues/11952#issuecomment-919822279",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11952",
    "id": 919822279,
    "node_id": "IC_kwDOAm_5kc4201_H",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T08:44:30Z",
    "updated_at": "2021-09-15T08:48:45Z",
    "author_association": "MEMBER",
    "body": "I wonder how much overlap this pattern has with\r\n```\r\nabstract contract SafeERC20 is IERC20\r\n{\r\n    function safeTransferFrom(...) internal { ... }\r\n}\r\n```\r\n(can't be used on plain contracts implementing IERC20 only, but if you cast from ``address`` anyways, you might as well cast to this one) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/919822279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
