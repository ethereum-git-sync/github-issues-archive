{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/5688",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/5688/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/5688/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/5688/events",
  "html_url": "https://github.com/ethereum/solidity/issues/5688",
  "id": 392485361,
  "node_id": "MDU6SXNzdWUzOTI0ODUzNjE=",
  "number": 5688,
  "title": "one question about send ether to a address of contract to invoke fallback() function",
  "user": {
    "login": "zxhubo",
    "id": 22925751,
    "node_id": "MDQ6VXNlcjIyOTI1NzUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/22925751?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zxhubo",
    "html_url": "https://github.com/zxhubo",
    "followers_url": "https://api.github.com/users/zxhubo/followers",
    "following_url": "https://api.github.com/users/zxhubo/following{/other_user}",
    "gists_url": "https://api.github.com/users/zxhubo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zxhubo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zxhubo/subscriptions",
    "organizations_url": "https://api.github.com/users/zxhubo/orgs",
    "repos_url": "https://api.github.com/users/zxhubo/repos",
    "events_url": "https://api.github.com/users/zxhubo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zxhubo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-12-19T08:14:37Z",
  "updated_at": "2018-12-20T09:28:36Z",
  "closed_at": "2018-12-19T17:11:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "this code is:\r\n```\r\npragma solidity ^0.4.24;\r\n\r\ncontract lib{\r\n      event EventLib(address);\r\n    function test()returns(uint256){\r\n        emit EventLib(msg.sender);\r\n        return 1;\r\n    } \r\n}\r\ncontract Test{   \r\n    event EventTest(address);\r\n    event EventTest1(bool);\r\n    event EventLib(address);\r\n    lib l;\r\n    constructor(address _addr){\r\n        l = lib(_addr);\r\n    }\r\n    function test(){\r\n        emit EventTest(msg.sender);\r\n    }\r\n    function getBalance() returns(uint256){\r\n        return this.balance;\r\n    }\r\n    function ()payable{\r\n        emit EventTest(msg.sender);\r\n        bool b=l.callcode(bytes4(keccak256(\"test()\")));\r\n        EventTest1(b);\r\n    }\r\n}\r\ncontract Caller\r\n{\r\n    constructor()payable{}\r\n    function getBalance() returns(uint256){\r\n        return this.balance;\r\n    }\r\n    function invoke(address _addr){\r\n        _addr.call(bytes4(keccak256(\"test111()\")));\r\n    }\r\n    function trans(address _addr){\r\n        _addr.call.value(10)();\r\n    }\r\n}\r\n```\r\nthe first,I deploy contract Lib,the second I deploy contract Test,and at last I deploy contract Caller. the if I sending ether to contract Test by invoke trans function of contract Caller,because the address is a contract address,it will invoke the fallback() function with payable. Then the fallback() function will invoke test() function of contract Lib by this code `bool b=l.callcode(bytes4(keccak256(\"test()\")));`,but I found if use 'call' and 'callcode' to invoke test(),the result b is true,but use 'delegatecall' to invoke test(),the result b is false,why? could you help me, tell me the answer .\r\n\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/5688/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/5688/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448672652",
    "html_url": "https://github.com/ethereum/solidity/issues/5688#issuecomment-448672652",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5688",
    "id": 448672652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODY3MjY1Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T17:11:31Z",
    "updated_at": "2018-12-19T17:11:31Z",
    "author_association": "MEMBER",
    "body": "The reason is that `delegatecall` makes the transferred amount visible to the callee (and also available). So the `test()` function fails because it is not payable. Libraries were made to deal with the peculiarities of delegatecall, so you should not use delegatecall with regular contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448672652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448830090",
    "html_url": "https://github.com/ethereum/solidity/issues/5688#issuecomment-448830090",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5688",
    "id": 448830090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODgzMDA5MA==",
    "user": {
      "login": "zxhubo",
      "id": 22925751,
      "node_id": "MDQ6VXNlcjIyOTI1NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22925751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zxhubo",
      "html_url": "https://github.com/zxhubo",
      "followers_url": "https://api.github.com/users/zxhubo/followers",
      "following_url": "https://api.github.com/users/zxhubo/following{/other_user}",
      "gists_url": "https://api.github.com/users/zxhubo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zxhubo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zxhubo/subscriptions",
      "organizations_url": "https://api.github.com/users/zxhubo/orgs",
      "repos_url": "https://api.github.com/users/zxhubo/repos",
      "events_url": "https://api.github.com/users/zxhubo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zxhubo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T01:56:09Z",
    "updated_at": "2018-12-20T01:56:09Z",
    "author_association": "NONE",
    "body": "@chriseth \r\nOk , you mean if I want to use delegatecall in fallback() function with payable, the test() function must with payable? But, i find it still return false 。\r\nI know the vulnerability of the first attack of parity wallet is that the fallback() function with payable can use delegatcall,the code is \r\n```\r\n  // gets called when no other function matches\r\n  function() payable {\r\n    // just being sent some cash?\r\n    if (msg.value > 0)\r\n      Deposit(msg.sender, msg.value);\r\n    else if (msg.data.length > 0)\r\n      _walletLibrary.delegatecall(msg.data);\r\n  }\r\n```\r\nThe hacker trans ether to the conctract and with msg.data,the _`walletLibrary.delegatecall(msg.data);`will be executed. so is solidity for resolve the vulnerability，forbid delegatecall be executed in the fallback() function with payable ？\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448830090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448931451",
    "html_url": "https://github.com/ethereum/solidity/issues/5688#issuecomment-448931451",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5688",
    "id": 448931451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODkzMTQ1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T09:28:35Z",
    "updated_at": "2018-12-20T09:28:35Z",
    "author_association": "MEMBER",
    "body": "If you change `contract lib` to `library lib`, it should work, because the payable check will no longer be there. Note that this voids your (nonexistent) warranty ;)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/448931451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
