{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6234",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6234/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6234/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6234/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6234",
  "id": 419113742,
  "node_id": "MDU6SXNzdWU0MTkxMTM3NDI=",
  "number": 6234,
  "title": "2-layer Dispatch Table",
  "user": {
    "login": "tjade273",
    "id": 3936648,
    "node_id": "MDQ6VXNlcjM5MzY2NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tjade273",
    "html_url": "https://github.com/tjade273",
    "followers_url": "https://api.github.com/users/tjade273/followers",
    "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
    "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
    "organizations_url": "https://api.github.com/users/tjade273/orgs",
    "repos_url": "https://api.github.com/users/tjade273/repos",
    "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tjade273/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-03-09T20:45:43Z",
  "updated_at": "2023-02-01T12:05:34Z",
  "closed_at": "2023-02-01T12:05:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nFunction dispatch should prioritize non-pure functions due to higher on-chain usage. \r\n\r\n<!--\r\nPlease describe by example what problem you see in the current Solidity language\r\nand reason about it.\r\n-->\r\n\r\n## Motivation\r\n\r\nPrompted by this [stackexchange question](https://ethereum.stackexchange.com/questions/68098/why-does-adding-a-view-function-make-write-functions-cost-more-gas/68148#68148)\r\n\r\nMost contracts in practice have a high ratio of view/pure to non-pure functions. It is generally seen as \"free\" to add, e.g. a getter for a public variable (deployment cost aside). \r\n\r\nThis has the unfortunate side effect of increasing dispatch costs for non-pure functions that are more gas  sensitive. One solution is to add explicit dispatch priority syntax or optimizer flags ala #4858\r\n\r\nAnother reasonable solution is to have a 2-stage dispatch routine, where all state-modifying functions are dispatched before read-only methods. \r\n\r\n<!--\r\nIn this section you describe how you propose to address the problem you described earlier,\r\nincluding by giving one or more exemplary source code snippets for demonstration.\r\n-->\r\n\r\n## Specification\r\n\r\nIn order to maintain compatibility with binary-search dispatch, each binary search `JUMPDEST` is prefixed by a jump to the secondary dispatch table. Lookups that fail (reach the end of their block binary-search block) will then try again in the secondary table.\r\n\r\n## Backwards Compatibility\r\n\r\n<!--\r\nAll language changes that introduce backwards incompatibilities must include a section describing\r\nthese incompatibilities and their severity.\r\n\r\nPlease describe how you propose to deal with these incompatibilities.\r\n-->\r\n\r\nThis should not cause any backwards incompatibility, but will increase the size of generated bytecode  by at least 1 OPCODE per binary search branch.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6234/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6234/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471511905",
    "html_url": "https://github.com/ethereum/solidity/issues/6234#issuecomment-471511905",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6234",
    "id": 471511905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTUxMTkwNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T12:02:33Z",
    "updated_at": "2019-03-11T12:02:33Z",
    "author_association": "MEMBER",
    "body": "One could argue exactly the opposite: view/pure functions are not only called from outside, they may also be called from other contracts. Especially if view/pure functions are part of the deployed bytecode, one could expect that they are only called on-chain - why would they be part of the bytecode otherwise? In that case, such cheap functions should stay cheap. On the other hand, if a function is expensive already, you do not save much by improving the dispatch routine for those functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471511905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471512424",
    "html_url": "https://github.com/ethereum/solidity/issues/6234#issuecomment-471512424",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6234",
    "id": 471512424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTUxMjQyNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T12:04:15Z",
    "updated_at": "2019-03-11T12:04:15Z",
    "author_association": "MEMBER",
    "body": "Continuing on that argument \"if code is only called off-chain, it should not be on-chain\" - I think clients should provide a way to call (not transact) contracts in a delegatecall-way, where you specify a different bytecode to be executed instead of the one that is on-chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471512424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471546699",
    "html_url": "https://github.com/ethereum/solidity/issues/6234#issuecomment-471546699",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6234",
    "id": 471546699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTU0NjY5OQ==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T13:52:29Z",
    "updated_at": "2019-03-11T13:52:29Z",
    "author_association": "NONE",
    "body": "I agree in principle that only code designed to be used on-chain should be used on-chain, but that doesn't seem to happen in practice. It would be interesting to see some sort of separate off-chain code; you could do this by having a function that `delegatecall`s to any address provided by the `0x0` address (which can only be the sender in a simulated call). \r\n\r\nNow that you mention it, in general this 2-level idea could be terrible for e.g. balance getters. There does seem to be demand lately for more flexible dispatch, but OTOH dispatch is a minor cost overall, so optimization is not going to pay off much.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471546699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1411949806",
    "html_url": "https://github.com/ethereum/solidity/issues/6234#issuecomment-1411949806",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6234",
    "id": 1411949806,
    "node_id": "IC_kwDOAm_5kc5UKKTu",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-02-01T12:05:32Z",
    "updated_at": "2023-02-01T12:05:32Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1411949806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
