{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4990",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4990/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4990/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4990/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4990",
  "id": 360784286,
  "node_id": "MDU6SXNzdWUzNjA3ODQyODY=",
  "number": 4990,
  "title": "Feature to apply modifier to all functions",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-09-17T09:21:59Z",
  "updated_at": "2023-01-07T12:14:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Certain use-cases require a check to be applied to all or at least many functions. Most notably, this includes a general smart contract deactivation function (as replacement for dangerous selfdestruct), a \"pausable\" pattern and so on.\r\n\r\nModifiers already provide basic support, but it is too easy to forget a modifier to be mentioned with a single function, also it requires quite some typing and can get cluttered fast.\r\n\r\nModifier areas ( #623 ) are a similar solution, but they do not work with inheritance.\r\n\r\nThis proposal tries to start a discussion about how modifier areas could work better with inheritance. The drawback of this proposal is that it provides less choice about which functions to apply.\r\n\r\nSyntax proposal:\r\n```\r\nusing modifier <modifier> for *;\r\n```\r\n\r\nThis applies the given modifier to all functions in this contract, including inherited functions and all functions in potential derived contracts.\r\n\r\nIt might make sense to restrict this to functions that are non-view functions.\r\n\r\nPotential syntax: `using modifier <modifier> for payable, non-payable;`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4990/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4990/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/696987833",
    "html_url": "https://github.com/ethereum/solidity/issues/4990#issuecomment-696987833",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4990",
    "id": 696987833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Njk4NzgzMw==",
    "user": {
      "login": "0xAnonymous",
      "id": 69111184,
      "node_id": "MDQ6VXNlcjY5MTExMTg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69111184?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xAnonymous",
      "html_url": "https://github.com/0xAnonymous",
      "followers_url": "https://api.github.com/users/0xAnonymous/followers",
      "following_url": "https://api.github.com/users/0xAnonymous/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xAnonymous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xAnonymous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xAnonymous/subscriptions",
      "organizations_url": "https://api.github.com/users/0xAnonymous/orgs",
      "repos_url": "https://api.github.com/users/0xAnonymous/repos",
      "events_url": "https://api.github.com/users/0xAnonymous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xAnonymous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-22T21:18:51Z",
    "updated_at": "2020-09-22T21:18:51Z",
    "author_association": "NONE",
    "body": "I'm writing a contract that could benefit from this. I was calling the idea \"default modifier\" before I found this thread via your thread on modifier areas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/696987833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703207890",
    "html_url": "https://github.com/ethereum/solidity/issues/4990#issuecomment-703207890",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4990",
    "id": 703207890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzIwNzg5MA==",
    "user": {
      "login": "0xAnonymous",
      "id": 69111184,
      "node_id": "MDQ6VXNlcjY5MTExMTg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69111184?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xAnonymous",
      "html_url": "https://github.com/0xAnonymous",
      "followers_url": "https://api.github.com/users/0xAnonymous/followers",
      "following_url": "https://api.github.com/users/0xAnonymous/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xAnonymous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xAnonymous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xAnonymous/subscriptions",
      "organizations_url": "https://api.github.com/users/0xAnonymous/orgs",
      "repos_url": "https://api.github.com/users/0xAnonymous/repos",
      "events_url": "https://api.github.com/users/0xAnonymous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xAnonymous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-04T06:02:05Z",
    "updated_at": "2020-10-04T06:02:05Z",
    "author_association": "NONE",
    "body": "I no longer need \"default modifier\" because changed approach. So will likely not have meaningful input to this issue, since not in self-interest for dApp I work on.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/703207890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1374140161",
    "html_url": "https://github.com/ethereum/solidity/issues/4990#issuecomment-1374140161",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4990",
    "id": 1374140161,
    "node_id": "IC_kwDOAm_5kc5R57cB",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-06T21:15:06Z",
    "updated_at": "2023-01-06T21:15:06Z",
    "author_association": "MEMBER",
    "body": "I'm removing the `stale` tag because I think we should really come back to this topic when we have more time. Another important use case for this would be applying a reentrancy guard to all functions in a contract (as mentioned in #13845).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1374140161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1374461283",
    "html_url": "https://github.com/ethereum/solidity/issues/4990#issuecomment-1374461283",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4990",
    "id": 1374461283,
    "node_id": "IC_kwDOAm_5kc5R7J1j",
    "user": {
      "login": "alex-ppg",
      "id": 31933616,
      "node_id": "MDQ6VXNlcjMxOTMzNjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/31933616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-ppg",
      "html_url": "https://github.com/alex-ppg",
      "followers_url": "https://api.github.com/users/alex-ppg/followers",
      "following_url": "https://api.github.com/users/alex-ppg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-ppg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-ppg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-ppg/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-ppg/orgs",
      "repos_url": "https://api.github.com/users/alex-ppg/repos",
      "events_url": "https://api.github.com/users/alex-ppg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-ppg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-07T12:14:49Z",
    "updated_at": "2023-01-07T12:14:49Z",
    "author_association": "NONE",
    "body": "I have added some additional background on #13845 as to why this change would not satisfy a blanket reentrancy guard properly, however, if the modifiers can be applied with a proper distinction between mutable and non-mutable functions then this would be a good way to start.\r\n\r\nA core problem I see with this syntax is its compatibility with inheritance. Libraries (such as OpenZeppelin) will be hesitant to apply a global re-entrancy protection across all their functions, meaning that users would have to specify the `using modifier <modifier> for *` syntax **as well as override each and every function of the dependency they wish to apply the modifier for**.\r\n\r\nOn the other hand, due to dependency conflicts certain functions would need to be overridden without any functional changes (i.e. using `super`) but the `using modifier <modifier> for *` syntax would affect them inadvertently, a side-effect most developers will not expect.\r\n\r\nFor the re-entrancy use case in particular I believe this feature would be improperly used and cause more harm than good (i.e. applying `using modifier nonReentrant for *` and assuming that all functions are non-reentrant when they are not). \r\n\r\nAdditionally, the feature as it is would cause nuisances when it comes to inheritance as any overridden function would apply the blanket `modifier` even when that may not be the intention (i.e. the developer is forced to `override` due to an interface & implementation conflict). \r\n\r\nAny solution to the inheritance problem would significantly increase the complexity of how the `using modifier <modifier> for *` is applied and would lead to the syntax becoming difficult to grasp and seldom used as developers would be unsure as to how it behaves. \r\n\r\nAs a final note, the issue also suffers from how `modifier` conflicts are resolved when it comes to the visibility of functions. Traditional modifiers can be applied to both non-external and external functions, however, this syntax assumes that they are only applied to `external` functions.\r\n\r\nIf we extend the syntax to also accept explicit visibilities, it would significantly complicate how it is used (i.e. `using modifier nonReentrant for mutable,external,public;` and `using modifier nonReentrantView for nonmutable,external,public;`) as well as cause conflicts when an `external` function invokes a `public` function and so on. \r\n\r\nTo conclude, we can alleviate all concerns above by specifying thorough documentation as to how the syntax behaves (i.e. visibility needs to be explicit, both `external` and `public` will apply the `modifier` if invoked in a single context, etc.), however, it would be significantly complex to use correctly leading to more developer pitfalls being introduced to the language rather than covering them up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1374461283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
