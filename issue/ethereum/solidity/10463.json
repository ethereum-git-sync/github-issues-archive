{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10463/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10463/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10463/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10463",
  "id": 754657989,
  "node_id": "MDU6SXNzdWU3NTQ2NTc5ODk=",
  "number": 10463,
  "title": "Allow reading immutable variables during construction",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2020-12-01T19:21:33Z",
  "updated_at": "2021-08-19T12:39:04Z",
  "closed_at": "2021-08-19T12:39:04Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Is there a fundamental reason why immutable variables can't be read during construction?\r\n\r\nI would've liked to make some of the existing state variables in OpenZeppelin Contracts immutable, since they're only used in that way, but it will have to wait until our next major release (likely to happen after Solidity 0.8) because it would be a breaking change. (I would prefer if this was not a breaking change at all.) People could be reading them indirectly through internal or public functions during construction, and those function calls would become an error.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10463/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10463/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739433464",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-739433464",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 739433464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQzMzQ2NA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T00:04:06Z",
    "updated_at": "2020-12-06T00:11:41Z",
    "author_association": "MEMBER",
    "body": "I think that allowing reads during construction is technically possible, but it comes with some gotchas and added complexity. AFAIK we simply didn't think that dealing with these issues was worth the hassle:\r\n1. Immutables can be initialized at any point in the constructor. If you call a function before the immutable is initialized it will see a different value than if you called it after the initialization. I think this might easily catch people off guard. The immutables should be immutable after all. We could of course detect reads before initialization but that requires doing extra analysis that's simply not needed if you assume they're never read during construction.\r\n2. You'd have to generate different construction and runtime code for these functions. A read in the runtime code is dead simple - you just read the value embedded at a predefined location in the bytecode. That's not possible in construction code because it has to compute the value first and it cannot modify itself to insert that value. Note that the value does not have to be a compile-time constant - it can depend on things like balance or results of external calls so the compiler cannot pre-compute it and insert it into the construction code. You need an actual variable to hold it and alternative code to access it.\r\n\r\nBeing able to reuse existing functions during construction does sound to me like a good reason for having that feature so maybe this should be reconsidered.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739433464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739448018",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-739448018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 739448018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ0ODAxOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T03:10:57Z",
    "updated_at": "2020-12-06T03:10:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for explaining!\r\n\r\nGenerating different code makes a lot of sense, though it would be at odds with #10396.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739448018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739453264",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-739453264",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 739453264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ1MzI2NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T04:31:48Z",
    "updated_at": "2020-12-06T04:32:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I came up with the following scheme which I think solves point 2 above in a simple way. Let me know if I'm mistaken! :smile: \r\n\r\nImmutable variables should be statically assigned a position in memory for the duration of the constructor. Instead of emitting an empty placeholder where the immutable variable is loaded onto the stack, Solidity should emit the few instructions necessary to load the value from its assigned memory position. These instructions are then overwritten with the direct load to the stack.\r\n\r\nIt would still be necessary to disallow reading from them before they are initialized.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739453264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/741782630",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-741782630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 741782630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTc4MjYzMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-09T13:49:15Z",
    "updated_at": "2020-12-09T13:49:15Z",
    "author_association": "MEMBER",
    "body": "I think generating different code is not such a big deal, but I think we should enforce that immutables are not read from before they are initialized. This could be a bit difficult when they are read in other functions, but it is not impossible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/741782630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770283909",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-770283909",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 770283909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDI4MzkwOQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-30T21:31:46Z",
    "updated_at": "2021-01-30T21:35:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "`immutable` is a fantastic feature, in my opinion the best one developed in recent time by far. The number of design patterns it enables with minimal gas cost is surprisingly high.\r\n\r\n...but not being able to read an `immutable` variable during construction is a huge limitation. This might not be obvious at a first glance, since you could always store whatever is assigned to `immutable` locally, and use that instead:\r\n\r\n```solidity\r\ncontract Foo {\r\n    uint256 immutable bar;\r\n\r\n    constructor(uint256 baz) {\r\n        uint256 qux = foo(baz);\r\n        bar = qux;\r\n\r\n        useBar(qux); // can't pass bar, pass qux instead\r\n    }\r\n}\r\n```\r\n\r\nThe issue arises when using inheritance: if the immutable variable is held by a base contract, it will not be accessible to its children during construction.\r\n\r\n```solidity\r\ncontract Foo {\r\n    uint256 immutable bar;\r\n\r\n    constructor(uint256 baz) {\r\n        bar = foo(baz);\r\n    }\r\n}\r\n\r\ncontract Bar is Foo {\r\n    constructor(uint256 baz) Foo(baz) {\r\n        useBar(bar); // forbidden\r\n    }\r\n}\r\n```\r\n\r\nIf gas is not an issue, it could be argued that `foo` could also be called in `Bar`'s constructor in this example. But if this operation has side-effects (e.g. if it is the reuslt of an external call, such as registering with some other contract and getting an ID back), it is not possible to have this code duplicated in both parent and child.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770283909/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770783430",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-770783430",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 770783430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDc4MzQzMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T11:22:07Z",
    "updated_at": "2021-02-01T11:22:07Z",
    "author_association": "MEMBER",
    "body": "Since the order of construction is a bit difficult, this can lead to problems especially with multiple inheritance. We could try to do some static analysis coupled with runtime errors, but it's a bit tricky to get this working in all cases, I think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770783430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770865322",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-770865322",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 770865322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDg2NTMyMg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T13:41:57Z",
    "updated_at": "2021-02-01T13:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth What problems would it cause exactly? Reading an immutable variable that hasn't been assigned yet should return its default zero value, like storage variables do.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770865322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770867008",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-770867008",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 770867008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDg2NzAwOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T13:44:23Z",
    "updated_at": "2021-02-01T13:44:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should note, we're extremely interested in this feature for OpenZeppelin Contracts. We want to be able to use immutable variables to improve gas efficiency but we don't want to impose strange usage limitations on the internal functions that happen to read those immutable variables. We might be okay with releasing an initial version with this limitation if you plan to remove the limitation relatively soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770867008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770903444",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-770903444",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 770903444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDkwMzQ0NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T14:37:10Z",
    "updated_at": "2021-02-01T14:37:10Z",
    "author_association": "MEMBER",
    "body": "I actually don't think we should allow the default value to be read - this contradicts the `immutable` property. Read before write should be detected at compile-time as much as possible and at runtime through a Panic if it is too complicated to detect.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/770903444/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/795455729",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-795455729",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 795455729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTQ1NTcyOQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T14:04:13Z",
    "updated_at": "2021-03-10T14:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are there plans to implement this soon? We're using immutable variables now and are hoping to be able to remove limitations for calling internal functions that access these immutable variables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/795455729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/867894990",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-867894990",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 867894990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Nzg5NDk5MA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-24T19:25:25Z",
    "updated_at": "2021-06-24T19:25:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry to insist. This keeps showing up as a problem for our users in the places where we've decided to use immutable variables to improve gas efficiency.\r\n\r\nI would love to do anything possible to help move this forward.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/867894990/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/872280433",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-872280433",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 872280433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjI4MDQzMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T14:10:08Z",
    "updated_at": "2021-07-01T14:10:08Z",
    "author_association": "MEMBER",
    "body": "This might not be too difficult anymore when we combine the immutable validator with the extended call graph generator we recently implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/872280433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/872283555",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-872283555",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 872283555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjI4MzU1NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T14:13:44Z",
    "updated_at": "2021-07-01T14:13:44Z",
    "author_association": "MEMBER",
    "body": "@GNSPS do you have an opinion on\r\n - a) allowing immutables to be read during construction time and\r\n - b) allowing them to be read before they are assigned (resulting in the default / zero value)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/872283555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/887450938",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-887450938",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 887450938,
    "node_id": "IC_kwDOAm_5kc405W06",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-27T11:57:56Z",
    "updated_at": "2021-07-27T11:57:56Z",
    "author_association": "MEMBER",
    "body": "Since the assignment has to happen at the top level inside the constructor, I think it is not too difficult to do a reachability analysis for all code that is called in the constructor until the assignment of the immutable (do not forget the right-hand-side of that assignment itself). Any read access to the immutable inside there is an error. We also have to check state variable initialization and base constructors (also check the different orders of initialization in \"via IR\" and \"legacy\", at best it should work for both).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/887450938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/887464905",
    "html_url": "https://github.com/ethereum/solidity/issues/10463#issuecomment-887464905",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10463",
    "id": 887464905,
    "node_id": "IC_kwDOAm_5kc405aPJ",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-27T12:19:52Z",
    "updated_at": "2021-07-27T12:19:52Z",
    "author_association": "MEMBER",
    "body": "I think this would be a useful feature.  Currently many projects need to create local variables even if it is reused within the constructor (not talking about helper functions).  Solving it for helper functions would be an additional improvement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/887464905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
