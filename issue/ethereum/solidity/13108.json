{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13108",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13108/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13108/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13108/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13108",
  "id": 1264684784,
  "node_id": "I_kwDOAm_5kc5LYY7w",
  "number": 13108,
  "title": "Optimizer should be able to efficiently use the `byte(i, v)` opcode",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-06-08T12:42:39Z",
  "updated_at": "2023-03-30T12:05:28Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This function should only return true when `v == 27 || v == 28`:\r\n```solidity\r\ncontract C {\r\n  function f(uint256 v) pure external returns (bool) {\r\n      return bytes32(uint256(0x0101000000))[v] != 0;\r\n  }\r\n}\r\n```\r\n\r\nThis is the pure Solidity version of the assembly in https://github.com/ProjectOpenSea/seaport/pull/406:\r\n```solidity\r\nvIsValid := byte(v, 0x0101000000)\r\n```\r\n\r\nThe ideal bytecode is the above. The bytecode we generate (with the optimizer on) is the following:\r\n```\r\n    tag_7:\r\n        /* \"byte.sol\":55:59  bool */\r\n      0x00\r\n        /* \"byte.sol\":92:104  0x0101000000 */\r\n      0x0101000000\r\n        /* \"byte.sol\":107:108  v */\r\n      dup3\r\n        /* \"byte.sol\":76:109  bytes32(uint256(0x0101000000))[v] */\r\n      0x20\r\n      dup2\r\n      lt\r\n      tag_12\r\n      jumpi\r\n      tag_12\r\n      tag_13\r\n      jump\t// in\r\n    tag_12:\r\n      byte\r\n      0xf8\r\n      shl\r\n      not(sub(shl(0xf8, 0x01), 0x01))\r\n        /* \"byte.sol\":76:114  bytes32(uint256(0x0101000000))[v] != 0 */\r\n      and\r\n      iszero\r\n      iszero\r\n      swap3\r\n      swap2\r\n      pop\r\n      pop\r\n        /* \"byte.sol\":15:119  function f(uint256 v) external returns (bool) {... */\r\n      jump\t// out\r\n```\r\n\r\nIt has unnecessary cleanup.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13108/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13108/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1149975347",
    "html_url": "https://github.com/ethereum/solidity/issues/13108#issuecomment-1149975347",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13108",
    "id": 1149975347,
    "node_id": "IC_kwDOAm_5kc5Eizsz",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-08T14:13:36Z",
    "updated_at": "2022-06-08T14:13:36Z",
    "author_association": "MEMBER",
    "body": "Hm... this is a bit tricky actually... in the optimized Yul code I'm seeing:\r\n```\r\n\tand(\r\n\t\tshl(248, byte(value, 0x0101000000)),\r\n\t\tshl(248, 255)\r\n\t)\r\n```\r\nIn this case it would be good to move the ``and`` into the shifts to get\r\n```\r\n\t\tshl(248, and(byte(value, 0x0101000000), 255))\r\n```\r\nAfter which we have another rule that would eliminate the ``and``, yielding just ``shl(248, byte(value, 0x0101000000))``.\r\n\r\nThat's not all we can do, but it'd be progress - but unfortunately, we also have the opposite rule that transforms:\r\n```\r\nshl(B, and(X, A)) -> and(shl(B, X), A << B)\r\n```\r\nI guess the idea for that rule is to be able to combine more easily with other ``and``s...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1149975347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1310973870",
    "html_url": "https://github.com/ethereum/solidity/issues/13108#issuecomment-1310973870",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13108",
    "id": 1310973870,
    "node_id": "IC_kwDOAm_5kc5OI9-u",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-10T22:16:44Z",
    "updated_at": "2022-11-10T22:16:44Z",
    "author_association": "MEMBER",
    "body": "After #13529 this still looks the same:\r\n```\r\n    tag_7:\r\n        /* \"13018.sol\":60:64  bool */\r\n      0x00\r\n        /* \"13018.sol\":97:109  0x0101000000 */\r\n      0x0101000000\r\n        /* \"13018.sol\":112:113  v */\r\n      dup3\r\n        /* \"13018.sol\":81:114  bytes32(uint256(0x0101000000))[v] */\r\n      0x20\r\n      dup2\r\n      lt\r\n      tag_12\r\n      jumpi\r\n      tag_12\r\n      tag_13\r\n      jump\t// in\r\n    tag_12:\r\n      byte\r\n      0xf8\r\n      shl\r\n      not(sub(shl(0xf8, 0x01), 0x01))\r\n        /* \"13018.sol\":81:119  bytes32(uint256(0x0101000000))[v] != 0 */\r\n      and\r\n      iszero\r\n      iszero\r\n      swap3\r\n      swap2\r\n      pop\r\n      pop\r\n        /* \"13018.sol\":15:124  function f(uint256 v) pure external returns (bool) {... */\r\n      jump\t// out\r\n```\r\n\r\nSo I guess the rule is not picked up.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1310973870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1490187901",
    "html_url": "https://github.com/ethereum/solidity/issues/13108#issuecomment-1490187901",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13108",
    "id": 1490187901,
    "node_id": "IC_kwDOAm_5kc5Y0nZ9",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-30T12:05:26Z",
    "updated_at": "2023-03-30T12:05:26Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1490187901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
