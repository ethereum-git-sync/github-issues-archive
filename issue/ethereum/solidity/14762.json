{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14762",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14762/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14762/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14762/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14762",
  "id": 2060144171,
  "node_id": "I_kwDOAm_5kc56y04r",
  "number": 14762,
  "title": " Incorrect reading of enum variable when sharing storage slot",
  "user": {
    "login": "nuliknol",
    "id": 1125368,
    "node_id": "MDQ6VXNlcjExMjUzNjg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1125368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nuliknol",
    "html_url": "https://github.com/nuliknol",
    "followers_url": "https://api.github.com/users/nuliknol/followers",
    "following_url": "https://api.github.com/users/nuliknol/following{/other_user}",
    "gists_url": "https://api.github.com/users/nuliknol/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nuliknol/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nuliknol/subscriptions",
    "organizations_url": "https://api.github.com/users/nuliknol/orgs",
    "repos_url": "https://api.github.com/users/nuliknol/repos",
    "events_url": "https://api.github.com/users/nuliknol/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nuliknol/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-29T14:47:46Z",
  "updated_at": "2023-12-30T01:07:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Short description:**\r\nWhen packed with another state variable in the same slot an enum-type variable reads 0 despite having different value.\r\n\r\n**Solidity version:** 0.8.23\r\n\r\n**How to reproduce:**\r\n\r\n1. Create empty hardhat project\r\n2. Put attached solidity files\r\n3. Run the script 'scripts/deploybug.js'\r\n4. Observe how the value of the variable is equal to 0 , this is incorrect, the value returned should be 2\r\n5. Uncomment line 8 in ContractA.sol, comment line 7 in ContractA.sol , comment the constructor (lines 13,14,15) (i.e. remove the constrtuctor with Ownable super call), compile and run\r\n6. Observe how the value of the variable is equal to 2 (the correct behavior, no bugs)\r\n\r\n**Long description:**\r\nBecause when using `Ownable` in ContractA, the variable of the owner address is inherited from the parent contract.  At the same time we have the first variable (curType) and the owner address both packed into slot0 of the storage. The EVM stores and reads the data correctly, it is at Solidity side where the problem occurs, it fails to extract the value from the slot (i.e unpack the variable of enum type).\r\n\r\n**Notes:** \r\n1. I don't know if this bug is DELEGATECALL-specific, I just had this setup in my project, so I reproduced the same use case with minimal code (maybe this bug will be present without DELEGATECALL , a test is needed )\r\n2. I added return at the end of `doSomething()` so you can easily verify the bug for presence with `debug.traceTransaction()`\r\n\r\nHere is the trace call with `hardhat-tracer` where you can observe that `doSomething()` returns 0  (first line) while the last SLOAD actually returns 02 (the rightmost byte at last line):\r\n\r\n\r\n```\r\n[CALL] ContractA(0x5fbdb2315678afecb367f032d93f642f64180aa3).doSomething() → (0)\r\n   [SLOAD]  0x0000000000000000000000000000000000000000000000000000000000000001 → 0x000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512\r\n   [DELEGATECALL] ContractB(0xe7f1725e7734ce288f8367e1bb143e90bb3f0512).executeSomething()\r\n      [SLOAD]  0x0000000000000000000000000000000000000000000000000000000000000000 → 0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266\r\n      [SSTORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ← 0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92202\r\n   [SLOAD]  0x0000000000000000000000000000000000000000000000000000000000000000 → 0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92202\r\n```\r\n   \r\n   For easier reproduction I have hardhat project already prepared at this repository, just download and run:\r\n[ https://github.com/nuliknol/SolBug/tree/main]( https://github.com/nuliknol/SolBug/tree/main )\r\n\r\nFiles: \r\n\r\n**1. ContractA.sol**\r\n```\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity 0.8.23;\r\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport { ContractConstants } from \"./ContractConstants.sol\";\r\nimport { ContractB } from \"./ContractB.sol\";\r\n\r\ncontract ContractA is Ownable {\r\n//contract ContractA  {\r\n\r\n    ContractConstants.MyType public curType;\r\n\tContractB public executor;\r\n\t\r\n\tconstructor() Ownable(msg.sender) {\r\n\t\t\r\n\t}\r\n   \r\n    function doSomething() public payable returns (ContractConstants.MyType) {\r\n\r\n        (bool success,)=address(executor).delegatecall(abi.encodeWithSelector(ContractB.executeSomething.selector));\r\n        require(success, \"Call to ContractB failed.\");\r\n\t\treturn curType;\r\n\t}\r\n    function setContractB(address addr) external{\r\n        executor = ContractB(addr);\r\n    }\r\n}\r\n\r\n```\r\n2. **ContractB.sol**\r\n```\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity 0.8.23;\r\nimport { ContractConstants } from \"./ContractConstants.sol\";\r\nimport { ContractA } from \"./ContractA.sol\";\r\n\r\ncontract ContractB {\r\n\r\n    ContractConstants.MyType public curType;\r\n\tContractB public executor;\r\n\r\n    function executeSomething() public payable {\r\n\t\tcurType = ContractConstants.MyType.Two;\r\n\t}\r\n}\r\n```\r\n\r\n3. **contracts/ContractConstants.sol**\r\n```\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity 0.8.23;\r\n\r\nlibrary ContractConstants {\r\n\r\n    enum MyType {\r\n        Zero,\r\n        One,\r\n        Two\r\n    }\r\n}\r\n```\r\n\r\n4 **scripts/deploybug.js**\r\n```\r\nconst hre = require(\"hardhat\");\r\n\r\nasync function main() {\r\n    const ContractA = await hre.ethers.getContractFactory(\"ContractA\");\r\n    let cA = await ContractA.deploy();\r\n\r\n    const ContractB = await hre.ethers.getContractFactory(\"ContractB\");\r\n    let cB = await ContractB.deploy();\r\n\r\n\tawait cA.setContractB(cB.target);\r\n\r\n\tlet tx = await cA.doSomething();\r\n\tlet r = await tx.wait();\r\n \r\n\tlet curType = await cA.curType();\r\n\tconsole.log(\"A address: \"+cA.target);\r\n\tconsole.log(\"B address: \"+cB.target);\r\n\tconsole.log(\"At the end , curType = \"+curType);\r\n}\r\nmain()\r\n\t.then(() => process.exit(0))\r\n\t.catch((error) => {\r\n\t\tconsole.error(error);\r\n\t\tprocess.exit(1);\r\n\t});\r\n```\r\n\r\n5 **hardhat.config.js**\r\n```\r\n/** @type import('hardhat/config').HardhatUserConfig */\r\nrequire('@openzeppelin/hardhat-upgrades');\r\nrequire(\"hardhat-tracer\");\r\nmodule.exports = {\r\n  solidity: \"0.8.23\",\r\n  networks: {\r\n\tlocalhost: {\r\n\t\turl : `http://localhost:8545/`,\r\n\t\tgasMultiplier: 4,\r\n\t}\r\n  }\r\n\r\n};\r\n```\r\n\r\n6. **package.json**\r\n```\r\n{\r\n  \"name\": \"hardhat-project\",\r\n  \"devDependencies\": {\r\n    \"@nomicfoundation/hardhat-ethers\": \"^3.0.5\",\r\n    \"@openzeppelin/contracts\": \"^5.0.1\",\r\n    \"@openzeppelin/hardhat-upgrades\": \"^3.0.1\",\r\n    \"ethers\": \"^6.9.1\"\r\n  },\r\n  \"dependencies\": {\r\n    \"hardhat-tracer\": \"^2.7.0\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14762/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14762/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
