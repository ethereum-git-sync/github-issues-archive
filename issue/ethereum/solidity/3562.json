{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3562",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3562/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3562/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3562/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3562",
  "id": 298830478,
  "node_id": "MDU6SXNzdWUyOTg4MzA0Nzg=",
  "number": 3562,
  "title": "Instructions for building with Z3",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-02-21T03:31:27Z",
  "updated_at": "2018-02-21T14:56:38Z",
  "closed_at": "2018-02-21T14:56:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I'm trying to build Solidity with Z3. But it's failing.\r\n\r\n## Steps:\r\n\r\n1. I [clone, build and install z3](https://github.com/Z3Prover/z3#building-z3-using-make-and-gccclang). I now have: \r\n\r\n```\r\n$ which z3\r\n /usr/local/bin/z3\r\n```\r\n\r\n\r\n2. Clone this repo, checkout `tags/v0.4.18`\r\n3. run `make`\r\n\r\n```\r\n[ 61%] Linking CXX executable solc\r\nUndefined symbols for architecture x86_64:\r\n  \"_Z3_ast_to_string\", referenced from:\r\n      z3::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, z3::ast const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_ast_vector_dec_ref\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::~ast_vector_tpl() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_ast_vector_get\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::operator[](int) const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_ast_vector_inc_ref\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::init(_Z3_ast_vector*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_ast_vector_push\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::push_back(z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_ast_vector_size\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::size() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_dec_ref\", referenced from:\r\n      z3::ast::~ast() in libsolidity.a(SMTChecker.cpp.o)\r\n      z3::ast::~ast() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_del_config\", referenced from:\r\n      z3::config::~config() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_del_context\", referenced from:\r\n      z3::context::~context() in libsolidity.a(SMTChecker.cpp.o)\r\n      z3::context::~context() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_get_ast_kind\", referenced from:\r\n      z3::cast_ast<z3::expr>::operator()(z3::context&, _Z3_ast*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_get_error_code\", referenced from:\r\n      z3::context::check_error() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_get_error_msg\", referenced from:\r\n      z3::context::check_error() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_get_sort\", referenced from:\r\n      z3::expr::get_sort() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_get_sort_kind\", referenced from:\r\n      z3::sort::sort_kind() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_inc_ref\", referenced from:\r\n      z3::ast::ast(z3::context&, _Z3_ast*) in libsolidity.a(Z3Interface.cpp.o)\r\n      z3::ast::ast(z3::ast const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_is_re_sort\", referenced from:\r\n      z3::concat(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_is_seq_sort\", referenced from:\r\n      z3::concat(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_add\", referenced from:\r\n      z3::operator+(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_and\", referenced from:\r\n      z3::operator&&(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_app\", referenced from:\r\n      z3::func_decl::operator()(z3::ast_vector_tpl<z3::expr> const&) const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_ast_vector\", referenced from:\r\n      z3::ast_vector_tpl<z3::expr>::ast_vector_tpl(z3::context&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bool_sort\", referenced from:\r\n      z3::context::bool_sort() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvadd\", referenced from:\r\n      z3::operator+(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvmul\", referenced from:\r\n      z3::operator*(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvsge\", referenced from:\r\n      z3::operator>=(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvsgt\", referenced from:\r\n      z3::operator>(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvsle\", referenced from:\r\n      z3::operator<=(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvslt\", referenced from:\r\n      z3::operator<(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_bvsub\", referenced from:\r\n      z3::operator-(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_concat\", referenced from:\r\n      z3::concat(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_config\", referenced from:\r\n      z3::config::config() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_const\", referenced from:\r\n      z3::context::constant(z3::symbol const&, z3::sort const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_context_rc\", referenced from:\r\n      z3::context::init(z3::config&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_eq\", referenced from:\r\n      z3::operator==(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_func_decl\", referenced from:\r\n      z3::context::function(char const*, z3::sort const&, z3::sort const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_ge\", referenced from:\r\n      z3::operator>=(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_gt\", referenced from:\r\n      z3::operator>(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_int_sort\", referenced from:\r\n      z3::context::int_sort() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_ite\", referenced from:\r\n      z3::ite(z3::expr const&, z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_le\", referenced from:\r\n      z3::operator<=(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_lt\", referenced from:\r\n      z3::operator<(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_mul\", referenced from:\r\n      z3::operator*(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_not\", referenced from:\r\n      z3::operator!(z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_numeral\", referenced from:\r\n      z3::context::int_val(char const*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_or\", referenced from:\r\n      z3::operator||(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_re_concat\", referenced from:\r\n      z3::concat(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_re_union\", referenced from:\r\n      z3::operator+(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_seq_concat\", referenced from:\r\n      z3::concat(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_solver\", referenced from:\r\n      z3::solver::solver(z3::context&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_string_symbol\", referenced from:\r\n      z3::context::str_symbol(char const*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_mk_sub\", referenced from:\r\n      z3::operator-(z3::expr const&, z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_model_dec_ref\", referenced from:\r\n      z3::model::~model() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_model_eval\", referenced from:\r\n      z3::model::eval(z3::expr const&, bool) const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_model_inc_ref\", referenced from:\r\n      z3::model::init(_Z3_model*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_set_ast_print_mode\", referenced from:\r\n      z3::context::init(z3::config&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_set_error_handler\", referenced from:\r\n      z3::context::init(z3::config&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_assert\", referenced from:\r\n      z3::solver::add(z3::expr const&) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_check\", referenced from:\r\n      z3::solver::check() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_dec_ref\", referenced from:\r\n      z3::solver::~solver() in libsolidity.a(SMTChecker.cpp.o)\r\n  \"_Z3_solver_get_model\", referenced from:\r\n      z3::solver::get_model() const in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_inc_ref\", referenced from:\r\n      z3::solver::init(_Z3_solver*) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_pop\", referenced from:\r\n      z3::solver::pop(unsigned int) in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_push\", referenced from:\r\n      z3::solver::push() in libsolidity.a(Z3Interface.cpp.o)\r\n  \"_Z3_solver_reset\", referenced from:\r\n      z3::solver::reset() in libsolidity.a(Z3Interface.cpp.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [solc/solc] Error 1\r\nmake[1]: *** [solc/CMakeFiles/solc.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nBased on the error... I now have a hunch that I've built z3 wrong for my system, but some guidance for the right way to configure z3, and build solidity with it would be nice. :)",
  "closed_by": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3562/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3562/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367256350",
    "html_url": "https://github.com/ethereum/solidity/issues/3562#issuecomment-367256350",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3562",
    "id": 367256350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzI1NjM1MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T08:58:54Z",
    "updated_at": "2018-02-21T08:58:54Z",
    "author_association": "MEMBER",
    "body": "What version of z3 are you using?\r\n\r\nAny particular reason you are using Solidity 0.4.18 and not 0.4.20?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367256350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367294455",
    "html_url": "https://github.com/ethereum/solidity/issues/3562#issuecomment-367294455",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3562",
    "id": 367294455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzI5NDQ1NQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T11:16:18Z",
    "updated_at": "2018-02-21T11:16:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "`Z3 version 4.6.1 - 64 bit`\r\n\r\n> Any particular reason you are using Solidity 0.4.18 and not 0.4.20?\r\n\r\nOnly that 0.4.18 was the current version when I first tried this, and it took me a while to return to it. \r\n\r\nIt's working in v0.4.20!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367294455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367316156",
    "html_url": "https://github.com/ethereum/solidity/issues/3562#issuecomment-367316156",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3562",
    "id": 367316156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzMxNjE1Ng==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T12:52:14Z",
    "updated_at": "2018-02-21T12:52:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, another question, how would I specify the location that the `solc` executable is built to?\r\n\r\nie. when I install solc normally using homebrew, it's place in /usr/local/Cellar/solidity/0.4.20/bin/solc\r\n\r\nI'd like to be able to build locally to /usr/local/Cellar/solidity/0.4.20-z3/bin/solc, so that I can use brew to link it into my path.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367316156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367352454",
    "html_url": "https://github.com/ethereum/solidity/issues/3562#issuecomment-367352454",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3562",
    "id": 367352454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM1MjQ1NA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T14:56:38Z",
    "updated_at": "2018-02-21T14:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just used a manual symbolic link. \r\n\r\n`ln -s /Users/primary/Projects/solidity/build/solc/solc /usr/local/bin/solc`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367352454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
