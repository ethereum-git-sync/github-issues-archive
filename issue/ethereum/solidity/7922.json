{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7922/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7922/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7922/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7922",
  "id": 534704439,
  "node_id": "MDU6SXNzdWU1MzQ3MDQ0Mzk=",
  "number": 7922,
  "title": "Allow selectors to be used in constants assignment and support overloading",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-12-09T05:43:12Z",
  "updated_at": "2022-09-26T19:35:17Z",
  "closed_at": "2022-09-26T19:35:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract \r\n\r\nFor example [ERC721 contains](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.4.0/contracts/token/ERC721/ERC721.sol#L36-L50):\r\n```Solidity\r\n/*\r\n *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\r\n *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\r\n *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\r\n *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\r\n *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\r\n *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\r\n *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\r\n *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\r\n *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\r\n *\r\n *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\r\n *        0xa22cb465 ^ 0xe985e9c ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\r\n */\r\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\r\n```\r\nBut could contain:\r\n```Solidity\r\nbytes4 private constant _INTERFACE_ID_ERC721 = 0\r\n    ^ balanceOf(address).selector\r\n    ^ ownerOf(uint256).selector\r\n    ^ approve(address,uint256).selector\r\n    ^ getApproved(uint256).selector\r\n    ^ setApprovalForAll(address,bool).selector\r\n    ^ isApprovedForAll(address,address).selector\r\n    ^ transferFrom(address,address,uint256).selector\r\n    ^ safeTransferFrom(address,address,uint256).selector\r\n    ^ safeTransferFrom(address,address,uint256,bytes).selector;\r\n```\r\n\r\n## Motivation\r\n\r\nAvoiding off-code computations.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7922/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7922/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563242956",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-563242956",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 563242956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzI0Mjk1Ng==",
    "user": {
      "login": "erak",
      "id": 20012009,
      "node_id": "MDQ6VXNlcjIwMDEyMDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20012009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erak",
      "html_url": "https://github.com/erak",
      "followers_url": "https://api.github.com/users/erak/followers",
      "following_url": "https://api.github.com/users/erak/following{/other_user}",
      "gists_url": "https://api.github.com/users/erak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erak/subscriptions",
      "organizations_url": "https://api.github.com/users/erak/orgs",
      "repos_url": "https://api.github.com/users/erak/repos",
      "events_url": "https://api.github.com/users/erak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T13:40:35Z",
    "updated_at": "2019-12-09T13:48:17Z",
    "author_association": "COLLABORATOR",
    "body": "@k06a Thanks for bringing this up. In general, I think that this would be a good reason to re-think member lookup for functions and research if a new syntax, that includes types to be used during overload resolution, can be introduced. You can almost express it in a non-constant way:\r\n```\r\ncontract ERC721 {\r\n    bytes4 private _INTERFACE_ID_ERC721 = runtimeId();\r\n    \r\n    function balanceOf(address) public { }\r\n    function ownerOf(uint256) public { }\r\n    function approve(address,uint256) public { }\r\n    function getApproved(uint256) public { }\r\n    function setApprovalForAll(address,bool) public { }\r\n    function isApprovedForAll(address,address) public { }\r\n    function transferFrom(address,address,uint256) public { }\r\n    function safeTransferFrom(address,address,uint256) external { }\r\n    function safeTransferFromWithData(address,address,uint256,bytes memory) public { }\r\n    \r\n    function runtimeId() public pure returns (bytes4) {\r\n        return this.balanceOf.selector\r\n            ^ this.ownerOf.selector\r\n            ^ this.approve.selector\r\n            ^ this.getApproved.selector\r\n            ^ this.setApprovalForAll.selector\r\n            ^ this.isApprovedForAll.selector\r\n            ^ this.transferFrom.selector\r\n            ^ this.safeTransferFrom.selector\r\n            ^ this.safeTransferFromWithData.selector;\r\n    }\r\n}\r\n```\r\nbut as you might see, the second overloaded version of `safeTransferFrom` has to be renamed to `safeTransferFromWithData`, because overload resolution does not take the additional parameter into account.\r\n\r\nThe syntax you've proposed is already used for an actual function call, so it has to be different. Also the aspect that the ID should be compile-time constant needs to be taken into account.\r\n\r\nOf course, you could also calculate them on-chain, which would in turn increase gas costs:\r\n```\r\nfunction runtimeIdHashed() public pure returns (bytes4) {\r\n    return bytes4(keccak256(\"balanceOf(address)\"))\r\n        ^ bytes4(keccak256(\"ownerOf(uint256)\"))\r\n        ^ ...;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563242956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563244063",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-563244063",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 563244063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzI0NDA2Mw==",
    "user": {
      "login": "erak",
      "id": 20012009,
      "node_id": "MDQ6VXNlcjIwMDEyMDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20012009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erak",
      "html_url": "https://github.com/erak",
      "followers_url": "https://api.github.com/users/erak/followers",
      "following_url": "https://api.github.com/users/erak/following{/other_user}",
      "gists_url": "https://api.github.com/users/erak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erak/subscriptions",
      "organizations_url": "https://api.github.com/users/erak/orgs",
      "repos_url": "https://api.github.com/users/erak/repos",
      "events_url": "https://api.github.com/users/erak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T13:43:15Z",
    "updated_at": "2019-12-09T13:43:15Z",
    "author_association": "COLLABORATOR",
    "body": "@k06a So bottom line is: I think we'd need a different proposal for the syntax :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563244063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563244983",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-563244983",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 563244983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzI0NDk4Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T13:45:18Z",
    "updated_at": "2019-12-09T13:45:18Z",
    "author_association": "MEMBER",
    "body": "We might also consider native support for interface identifiers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563244983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563245277",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-563245277",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 563245277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzI0NTI3Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T13:46:05Z",
    "updated_at": "2019-12-09T13:46:05Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/solidity/issues/7856",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563245277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563253694",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-563253694",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 563253694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzI1MzY5NA==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T14:06:59Z",
    "updated_at": "2019-12-09T14:06:59Z",
    "author_association": "NONE",
    "body": "@erak what about this syntax?\r\n\r\n```Solidity\r\nthis.selectors.f()\r\nthis.selectors.f(uint256)\r\n```\r\n\r\nOr use mandatory `void` for functions without arguments:\r\n\r\n```Solidity\r\nthis.f(void).selector\r\nthis.f(uint256).selector\r\n```\r\n\r\nSo you will be able to distinct calls from selectors by arguments: types or expressions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/563253694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573621363",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-573621363",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 573621363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzYyMTM2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-13T11:34:08Z",
    "updated_at": "2020-01-13T11:34:08Z",
    "author_association": "MEMBER",
    "body": "Maybe we could use `this.f{}` and `this.f{uint256}` as we also use `{` and `}` for #2136 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573621363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573661266",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-573661266",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 573661266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzY2MTI2Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-13T13:23:54Z",
    "updated_at": "2020-01-13T13:23:54Z",
    "author_association": "MEMBER",
    "body": "``function(uint256)external(this.f)``... like casting to the required function type as in C++ - but in solidity it's indeed extremely horrible...\r\n``this.f[\"(uint256)\"]`` or maybe better ``this.f[(uint256)]``, i.e. ``this.f`` could be a compile-time-only mapping from TypeType to FunctionType... that'd make sense, but it doesn't look nice either...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573661266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258523841",
    "html_url": "https://github.com/ethereum/solidity/issues/7922#issuecomment-1258523841",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7922",
    "id": 1258523841,
    "node_id": "IC_kwDOAm_5kc5LA4zB",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T19:35:02Z",
    "updated_at": "2022-09-26T19:35:17Z",
    "author_association": "MEMBER",
    "body": "Closing this since selectors are usable in constant assignments since 0.6.3 and we already have an issue covering selectors of overloaded functions: #3556.\r\n\r\nAlso, I think that the introduction of `interfaceId` in #7856 fulfilled the original motivation behind this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258523841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
