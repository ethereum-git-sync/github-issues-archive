{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12153/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12153/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12153/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12153",
  "id": 1027690050,
  "node_id": "I_kwDOAm_5kc49QU5C",
  "number": 12153,
  "title": "Output selection is not validated in Standard JSON",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 3104779662,
      "node_id": "MDU6TGFiZWwzMTA0Nzc5NjYy",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20report%20error",
      "name": "should report error",
      "color": "666666",
      "default": false,
      "description": "Compiles without errors but should not."
    },
    {
      "id": 3515010024,
      "node_id": "LA_kwDOAm_5kc7Rgsvo",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/good%20first%20issue%20candidate",
      "name": "good first issue candidate",
      "color": "91B44D",
      "default": false,
      "description": "Could be a \"good first issue\" but something is blocking it or it has open questions."
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "001dff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2021-10-15T18:22:38Z",
  "updated_at": "2022-11-09T21:23:08Z",
  "closed_at": "2022-11-09T21:23:08Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\nThe compiler does not validate the values specified in the output type array inside `settings.outputSelection` in Standard JSON. It does not report an error if you specify an output that does not exist. This makes it harder to notice a problem if you misspell it or e.g. use something like `evm.metadata` instead of `metadata`.\r\n\r\n## Steps to Reproduce\r\n```json\r\n{\r\n    \"language\": \"Solidity\",\r\n    \"sources\": {\"contract.sol\": {\"content\": \"contract C {}\"}},\r\n    \"settings\": {\r\n        \"outputSelection\": {\"*\": { \"*\": [\"xyz\", \"evm.metadata\", \"ZZZZZZZZZZZZZZZZZZZZZZZZZZ\", \"\"]}}\r\n    }\r\n}\r\n```\r\nThis compiles without errors even though none of the specified inputs exists.\r\n\r\nNOTE: This is about validating the array (i.e. the `[\"xyz\", \"evm.metadata\", \"ZZZZZZZZZZZZZZZZZZZZZZZZZZ\", \"\"]` part in the above), not file or contract names.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12153/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12153/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/945023093",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-945023093",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 945023093,
    "node_id": "IC_kwDOAm_5kc44U-h1",
    "user": {
      "login": "akali",
      "id": 4820369,
      "node_id": "MDQ6VXNlcjQ4MjAzNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4820369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akali",
      "html_url": "https://github.com/akali",
      "followers_url": "https://api.github.com/users/akali/followers",
      "following_url": "https://api.github.com/users/akali/following{/other_user}",
      "gists_url": "https://api.github.com/users/akali/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akali/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akali/subscriptions",
      "organizations_url": "https://api.github.com/users/akali/orgs",
      "repos_url": "https://api.github.com/users/akali/repos",
      "events_url": "https://api.github.com/users/akali/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akali/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-16T23:56:12Z",
    "updated_at": "2021-10-16T23:56:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi! I would like to take this issue",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/945023093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/946168134",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-946168134",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 946168134,
    "node_id": "IC_kwDOAm_5kc44ZWFG",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-18T21:09:36Z",
    "updated_at": "2021-10-18T21:27:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to actually suggest *not* doing this.  Or at least, adding a way to turn off such a thing.  (This is obviously based on my point of view of working at Truffle and having worked on the code that interfaces with the compiler.)\r\n\r\nThe fact that the Solidity compiler *doesn't* validate `outputSelection` makes it really easy to write code that works with multiple versions at once.  You know the particular output you want, you ask for it, and if you don't get it due to an old version, well, you don't get it due to an old version.\r\n\r\nLet's suppose instead that asking for an unknown form of output caused an error -- the Vyper compiler does this, and, well, it's a pain!  It means, when compiling Vyper, we have to check the compiler version, look up what particular forms of output that version supports, and make sure to only ask for those particular things.\r\n\r\nEvery single form of output that Solidity adds after this change is made would have to be accompanied by an appropriate version check.  Right now, our code for interfacing with the Solidity compiler actually doesn't know about the version, anywhere!  So if 0.8.10 adds output selection validation, and later 0.9.0 adds a new form of output that we want to get, well... it's going to make a mess.\r\n\r\nNow the advantages of making this change are obvious; most people really *don't* want silent failure on bad `outputSelection`, we're probably a little unusual in actually wanting that.  But, well, that is something we rely on, so I have to point out that this change does have substantial disadvantages as well.  Maybe as a compromise there could be some sort of option one could pass somewhere to indicate, hey, don't validate the output selection, or something...?  (Note that the option would have to be passed somewhere such that older versions would ignore it, rather than erroring due to an unexpected option.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/946168134/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/947795671",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-947795671",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 947795671,
    "node_id": "IC_kwDOAm_5kc44fjbX",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T15:43:03Z",
    "updated_at": "2021-10-20T15:43:03Z",
    "author_association": "MEMBER",
    "body": "Honestly I'm a bit surprised that other options in Standard JSON do not already cause this problem but maybe that's because a lot of them are dictionaries and there stray keys might not be always rejected?\r\n\r\nAnyway, this is not a high priority change, just something that has bitten me when I was testing stuff and seemed pretty straightforward to fix. I thought adding these validations would be a clear improvement. If that would be a problem for you though, then we need to consider it more carefully. I'll add it to the design backlog so that we can discuss it in the team.\r\n\r\nA solution with a flag that disables stricter validation behavior on demand sounds fine to me. If such a flag must be backwards-compatible then maybe we could repurpose `--ignore-missing` for this. Currently it makes the compiler not complain about missing input files and skip them instead, which is logically close to what this new flag would do, just with JSON arrays. The name is even generic enough not to be confusing. The only problem is that it would only work on the CLI and we would need something else for solc-js - perhaps a new parameter to `compile()` and I'm not sure if that would be backwards-compatible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/947795671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948090813",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-948090813",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 948090813,
    "node_id": "IC_kwDOAm_5kc44gre9",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T22:42:18Z",
    "updated_at": "2021-10-20T22:42:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Honestly I'm a bit surprised that other options in Standard JSON do not already cause this problem but maybe that's because a lot of them are dictionaries and there stray keys might not be always rejected?\r\n\r\nGood question. :)  The actual answer is there output selection is the only setting that we routinely set ourselves!  The other settings are left to the user, so, if they put in settings that the particular version they're using doesn't recognize... well, that's not our fault. :)\r\n\r\n(In `truffle test`, we *do* in certain conditions set `settings.debug.revertStrings`, and we *do* have to put a version check around that, which is annoying.  (And we might want to look on turning on further debug settings once 0.8.10 comes out, which would entail a further version check...)  But that's a separate area of the code, not part of the code that interfaces directly with the compiler, so it can do those version checks; it's actually putting the setting into a Truffle config rather than directly into the standard JSON. :P )\r\n\r\n> A solution with a flag that disables stricter validation behavior on demand sounds fine to me. If such a flag must be backwards-compatible then maybe we could repurpose --ignore-missing for this. Currently it makes the compiler not complain about missing input files and skip them instead, which is logically close to what this new flag would do, just with JSON arrays. The name is even generic enough not to be confusing. The only problem is that it would only work on the CLI and we would need something else for solc-js - perhaps a new parameter to compile() and I'm not sure if that would be backwards-compatible.\r\n\r\nSo, this suggestion may be on the hacky side, but if you could smuggle the extra setting into `outputSelection` itself, then it would surely be backward compatible. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948090813/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948475231",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-948475231",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 948475231,
    "node_id": "IC_kwDOAm_5kc44iJVf",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-21T10:30:19Z",
    "updated_at": "2021-10-21T10:30:19Z",
    "author_association": "MEMBER",
    "body": "> So, this suggestion may be on the hacky side, but if you could smuggle the extra setting into outputSelection itself, then it would surely be backward compatible. :)\r\n\r\nThat's an interesting idea. It is a bit hacky but not overly so. We already support some special values like `*`. So e.g. we could make the compiler disable validation if you include `?` as one of the items. Or maybe something like `_ignore-invalid-values` if we want it to be more self-explanatory.\r\n\r\nAnother idea would be to allow appending/prepending `?` to values to make the compiler skip them if they are invalid. Unfortunately this would not work with older compilers (they would ignore them when invalid but you would not get the output if they're valid) so yours sounds more viable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/948475231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949031953",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-949031953",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 949031953,
    "node_id": "IC_kwDOAm_5kc44kRQR",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-21T21:55:06Z",
    "updated_at": "2021-10-21T21:55:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want to avoid too much awkward naming and special-casing, it could perhaps be a fake form of output, rather than a fake source or contract?  And then it would presumably be specific to the specific area where it's used, but, I don't think that's a big problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949031953/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949909719",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-949909719",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 949909719,
    "node_id": "IC_kwDOAm_5kc44nnjX",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T19:32:55Z",
    "updated_at": "2021-10-22T19:32:55Z",
    "author_association": "MEMBER",
    "body": "Yeah, that was exactly what I had in mind. Adding it at a source/contract level would be problematic because source unit names have literally zero restrictions. Contact names have more but putting it as one of the outputs seems safer to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949909719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949919248",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-949919248",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 949919248,
    "node_id": "IC_kwDOAm_5kc44np4Q",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T19:50:48Z",
    "updated_at": "2021-10-22T19:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh OK, cool!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/949919248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951813900",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951813900",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951813900,
    "node_id": "IC_kwDOAm_5kc44u4cM",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T10:48:59Z",
    "updated_at": "2021-10-26T10:48:59Z",
    "author_association": "MEMBER",
    "body": "> and if you don't get it due to an old version, well, you don't get it due to an old version.\r\n\r\nCouldn't you keep that approach and just ignore/accept/display the error? You'd have the same behavior? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951813900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951857788",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951857788",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951857788,
    "node_id": "IC_kwDOAm_5kc44vDJ8",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T11:52:49Z",
    "updated_at": "2021-10-26T11:52:49Z",
    "author_association": "MEMBER",
    "body": "I skipped all the comments above, but I think we should only validate keys that are actual static keys and not things that are contract or file names. If you request something that does not exist then it will not end up in the output and you will notice it anyway....",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951857788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951876935",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951876935",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951876935,
    "node_id": "IC_kwDOAm_5kc44vH1H",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T12:12:53Z",
    "updated_at": "2021-10-26T12:12:53Z",
    "author_association": "MEMBER",
    "body": "@chriseth\r\n> but I think we should only validate keys that are actual static keys and not things that are contract or file names.\r\n\r\nRight, this issue is only about validating the array of output types, i.e. the part that contains values like `evm.bytecode` or `metadata`. These are completely static for a given compiler. They can change between versions though.\r\n\r\nTo summarize my discussion with @haltman-at above:\r\n- Using `[\"xyz\", \"evm.metadata\", \"ZZZZZZZZZZZZZZZZZZZZZZZZZZ\", \"\"]` would be a validation error.\r\n- There would be a special value you could insert into the array to make the compiler not validate it. For example `?` so that `[\"?\", \"xyz\", \"evm.metadata\", \"ZZZZZZZZZZZZZZZZZZZZZZZZZZ\", \"\"]` would not be a validation error.\r\n\r\n@Marenz \r\n> Couldn't you keep that approach and just ignore/accept/display the error? You'd have the same behavior?\r\n\r\nNot sure what you mean. If the compiler reports an error the compilation stops and ignoring it leaves Truffle without a compiled contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951876935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951933054",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951933054",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951933054,
    "node_id": "IC_kwDOAm_5kc44vVh-",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T13:21:15Z",
    "updated_at": "2021-10-26T13:21:15Z",
    "author_association": "MEMBER",
    "body": "> it leaves Truffle without a compiled contract.\r\n\r\nah, you still get a contract when the output is ignored?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951933054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951944645",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951944645",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951944645,
    "node_id": "IC_kwDOAm_5kc44vYXF",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T13:33:36Z",
    "updated_at": "2021-10-26T13:33:36Z",
    "author_association": "MEMBER",
    "body": "A middle way could be to have a warning?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951944645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951976229",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951976229",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951976229,
    "node_id": "IC_kwDOAm_5kc44vgEl",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T14:06:21Z",
    "updated_at": "2021-10-26T14:06:21Z",
    "author_association": "MEMBER",
    "body": "This kind of sounds like it would create more trouble than it would solve problems...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951976229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951979529",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-951979529",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 951979529,
    "node_id": "IC_kwDOAm_5kc44vg4J",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T14:09:33Z",
    "updated_at": "2021-10-26T14:10:50Z",
    "author_association": "MEMBER",
    "body": "> ah, you still get a contract when the output is ignored?\r\n\r\nYeah, what you are ignoring is just a part of the output, which possibly is just not supported by your version of the compiler. E.g. you want `generatedSources` but your compiler is too old.\r\n\r\nI think a warning for this would be annoying and user could not do anything about it.\r\n\r\n> This kind of sounds like it would create more trouble than it would solve problems...\r\n\r\nThe validation or the warning?\r\n\r\nWhen working with Standard JSON I had several situations where I thought I was just not getting any output but in fact I was just using the wrong name. Not validating stuff might be useful for tools if they request it but I think that by default validations should be there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/951979529/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952272632",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-952272632",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 952272632,
    "node_id": "IC_kwDOAm_5kc44wob4",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T19:58:36Z",
    "updated_at": "2021-10-26T19:58:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > it leaves Truffle without a compiled contract.\r\n> \r\n> ah, you still get a contract when the output is ignored?\r\n\r\nRight, exactly -- if solc errors, we get nothing; if it silently ignores nonexistent output selection, then we can still get bytecode, ABI, source maps, etc, just maybe we don't get generated sources or immutable references or such.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952272632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952901157",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-952901157",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 952901157,
    "node_id": "IC_kwDOAm_5kc44zB4l",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T12:58:59Z",
    "updated_at": "2021-10-27T12:58:59Z",
    "author_association": "MEMBER",
    "body": "We discussed this today and opinions were split. Not everyone agrees that validating this is a good thing and also this is a very low priority thing so I'm moving this to the Icebox. It probably won't be implemented unless we get some actual demand for these validations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/952901157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1309390680",
    "html_url": "https://github.com/ethereum/solidity/issues/12153#issuecomment-1309390680",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12153",
    "id": 1309390680,
    "node_id": "IC_kwDOAm_5kc5OC7dY",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-09T21:23:08Z",
    "updated_at": "2022-11-09T21:23:08Z",
    "author_association": "MEMBER",
    "body": "Since there's no consensus about implementing it, it does not even qualify as `nice to have` so I guess I'm going to close it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1309390680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
