{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/5462",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/5462/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/5462/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/5462/events",
  "html_url": "https://github.com/ethereum/solidity/issues/5462",
  "id": 382799245,
  "node_id": "MDU6SXNzdWUzODI3OTkyNDU=",
  "number": 5462,
  "title": "Address payable to address conversion fails for memory arrays.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438490842,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3-2g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20have",
      "name": "should have",
      "color": "ffbe6c",
      "default": false,
      "description": "We like the idea but itâ€™s not important enough to be a part of the roadmap."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-11-20T18:43:49Z",
  "updated_at": "2022-09-26T20:39:56Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "``address [1] memory accounts = [ address(0) ];`` should work, but fails to compile. (Thanks for reporting @yann300).\r\n\r\n```\r\ncontract C {\r\n  function f() {\r\n    address [1] memory accounts = [ address(0) ];\r\n  }\r\n}\r\n```\r\n\r\n````\r\nError: Type address payable[1] memory is not implicitly convertible to expected type address[1] memory.\r\n --> 5462.sol:3:5:\r\n  |\r\n3 |     address [1] memory accounts = [ address(0) ];\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n````",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/5462/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/5462/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441113228",
    "html_url": "https://github.com/ethereum/solidity/issues/5462#issuecomment-441113228",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5462",
    "id": 441113228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTExMzIyOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T20:07:40Z",
    "updated_at": "2018-11-22T20:07:40Z",
    "author_association": "MEMBER",
    "body": "I think that in general, array types of elementary types that are convertible are not convertible. The reason behind is that the conversion, even if possible, might require actual code for the conversion or different storage layout. For example, even though `unit8` is convertible to `uint16`, a storage array of `uint8[]` is not convertible to `uint16[]`. So if we want to allow the example in the issue, we have to make a more detailed distinction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441113228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441113365",
    "html_url": "https://github.com/ethereum/solidity/issues/5462#issuecomment-441113365",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5462",
    "id": 441113365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTExMzM2NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T20:08:46Z",
    "updated_at": "2018-11-22T20:08:46Z",
    "author_association": "MEMBER",
    "body": "Note that `address(0)` is an `address payable`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441113365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441122106",
    "html_url": "https://github.com/ethereum/solidity/issues/5462#issuecomment-441122106",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5462",
    "id": 441122106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTEyMjEwNg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T21:25:04Z",
    "updated_at": "2018-11-22T21:25:04Z",
    "author_association": "MEMBER",
    "body": "Yes, but in the case of ``address`` and ``address payable`` there won't be any need for a conversion, so we could allow this. In contrast to other base types there is no way to explicitly convert ``address(0)`` to ``address`` (the non-payable kind), so there is no way to initialize a non-payable address array with a constant address - that's an unnecessary limitation that we could fix by making an exception for ``address payable``-arrays and allowing (implicit) conversions to ``address``-arrays.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/441122106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
