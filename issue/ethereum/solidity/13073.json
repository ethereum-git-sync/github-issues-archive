{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13073/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13073/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13073/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13073",
  "id": 1250629239,
  "node_id": "I_kwDOAm_5kc5KixZ3",
  "number": 13073,
  "title": "Cannot replicate SMTChecker example output",
  "user": {
    "login": "engn33r",
    "id": 6261182,
    "node_id": "MDQ6VXNlcjYyNjExODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/engn33r",
    "html_url": "https://github.com/engn33r",
    "followers_url": "https://api.github.com/users/engn33r/followers",
    "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
    "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
    "organizations_url": "https://api.github.com/users/engn33r/orgs",
    "repos_url": "https://api.github.com/users/engn33r/repos",
    "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
    "received_events_url": "https://api.github.com/users/engn33r/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4858664852,
      "node_id": "LA_kwDOAm_5kc8AAAABIZlXlA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20investigation",
      "name": "needs investigation",
      "color": "9F804C",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2022-05-27T10:54:31Z",
  "updated_at": "2023-02-24T22:26:59Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Page\r\n\r\nhttps://docs.soliditylang.org/en/v0.8.14/smtchecker.html#assert\r\n\r\n## Abstract\r\n\r\nI cannot replicate the SMTChecker assertion violation output in this example. I can replicate the SMTChecker output in all other examples so I know SMTChecker is working.\r\n\r\nContract code\r\n```\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.8.0;\r\n\r\ncontract Max {\r\n    function max(uint[] memory a) public pure returns (uint) {\r\n        require(a.length >= 5);\r\n        uint m = 0;\r\n        for (uint i = 0; i < a.length; ++i)\r\n            if (a[i] > m)\r\n                m = a[i];\r\n\r\n        for (uint i = 0; i < a.length; ++i)\r\n            assert(m > a[i]);\r\n\r\n        return m;\r\n    }\r\n}\r\n```\r\n\r\nCommand I am using to run SMTChecker: `solc Max.sol --model-checker-engine chc --model-checker-show-unproved --model-checker-timeout 0 --model-checker-targets \"assert\"`\r\n\r\nsolc Version: 0.8.14+commit.80d49f37.Linux.g++ (with z3 dynamic library)\r\n\r\nMy output:\r\n```\r\nWarning: CHC: Error trying to invoke SMT solver.\r\n  --> Max.sol:13:13:\r\n   |\r\n13 |             assert(m > a[i]);\r\n   |             ^^^^^^^^^^^^^^^^\r\n\r\nWarning: CHC: Assertion violation might happen here.\r\n  --> Max.sol:13:13:\r\n   |\r\n13 |             assert(m > a[i]);\r\n   |             ^^^^^^^^^^^^^^^^\r\n```\r\n\r\nOutput shown in documentation:\r\n```\r\nWarning: CHC: Assertion violation happens here.\r\nCounterexample:\r\n\r\na = [0, 0, 0, 0, 0]\r\n = 0\r\n\r\nTransaction trace:\r\nTest.constructor()\r\nTest.max([0, 0, 0, 0, 0])\r\n  --> max.sol:14:4:\r\n   |\r\n14 |            assert(m > a[i]);\r\n```\r\n\r\n## Pull request\r\n\r\nI have not identified the exact issue yet. If I change the `--model-checker-engine` argument to `all`, the BMC checker properly identifies the assertion violation with a counterexample, but the documentation shows the CHC checker should identify the assertion violation. If I change the assert comparison to less than or equals (`assert(m >= a[i]);` instead of `assert(m > a[i]);`), the contract compiles without issue and there are no warnings from SMTChecker.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13073/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13073/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139531917",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139531917",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139531917,
    "node_id": "IC_kwDOAm_5kc5D6-CN",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T11:29:00Z",
    "updated_at": "2022-05-27T11:29:00Z",
    "author_association": "MEMBER",
    "body": "Hi @engn33r , thanks for the report!\r\nWhat's your z3 version?\r\nCan you try with a high timeout like 60000 (60s)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139531917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139568682",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139568682",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139568682,
    "node_id": "IC_kwDOAm_5kc5D7HAq",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T12:23:17Z",
    "updated_at": "2022-05-27T12:23:17Z",
    "author_association": "NONE",
    "body": "Thanks for the quick reply! I am using z3 version 4.8.12-1 on an Ubuntu-based system. I tried setting a higher timeout but the error message appears instantly with a zero or much higher timeout. I have seen SMTChecker take much longer when the timeout condition was involved.\r\n\r\nI assume you're getting the expected output with the CHC checker? I find it odd that only the BMC checker identifies the assertion violation on my system.\r\n\r\nSeparate topic, but do you know if the solidity docker image has z3 to allow for SMTChecker to run from the image? If so, I can test this as an alternative.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139568682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139573843",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139573843",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139573843,
    "node_id": "IC_kwDOAm_5kc5D7IRT",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T12:30:19Z",
    "updated_at": "2022-05-27T12:30:19Z",
    "author_association": "MEMBER",
    "body": "Yea the output is from CHC. BMC runs much faster but gives a lot of false positives.\r\n\r\nThe results can be quite sensitive to the z3 versions, a lot changes in between them. So I think if you use a newer z3 (4.8.14 for example) it should work.\r\nFor instance, `soljson.js` that Remix uses has an embedded z3. If I run your example with `pragma experimental SMTChecker;` on Remix it actually gives the counterexample too.\r\n\r\nI know Ubuntu ships z3 4.8.12, which is quite unfortunate since the latest is already 4.8.17. If you want a newer z3, Solidity also maintains a z3 package that has the lib and the binary. Just use the PPA https://launchpad.net/~ethereum/+archive/ubuntu/cpp-build-deps and install `z3-static`.\r\n\r\nI'm not sure about the docker version having z3, but I suspect it doesn't.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139573843/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139594861",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139594861",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139594861,
    "node_id": "IC_kwDOAm_5kc5D7NZt",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T12:58:14Z",
    "updated_at": "2022-05-27T12:58:14Z",
    "author_association": "NONE",
    "body": "I tried uninstalling all other z3 packages/files and then installed `z3-static` from the ethereum ppa you linked to. I'm now getting a warning of `Warning: z3 was selected as a Horn solver for CHC analysis but libz3.so.4.8 was not found.` and can't get results for the other example files I've tested against. Did I go overboard in removing z3 files like libz3.so.4.8, or does solc have to be compiled from scratch when using a static z3 library which is my understanding from [the docs](https://docs.soliditylang.org/en/v0.8.14/smtchecker.html#smt-and-horn-solvers)? So far I've been using the solc-static-linux 0.8.14 binary from [the releases page](https://github.com/ethereum/solidity/releases) rather than compiling it.\r\n\r\nI've tested remix with success, but a local setup would be nice to have.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139594861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139596370",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139596370",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139596370,
    "node_id": "IC_kwDOAm_5kc5D7NxS",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T13:00:15Z",
    "updated_at": "2022-05-27T13:00:15Z",
    "author_association": "MEMBER",
    "body": "It doesn't have to be compiled, runtime libs should be enough. Can you check that you have `libz3.so` in some system default lib dir?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139596370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139645235",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139645235",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139645235,
    "node_id": "IC_kwDOAm_5kc5D7Zsz",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T13:57:33Z",
    "updated_at": "2022-05-27T13:57:33Z",
    "author_association": "NONE",
    "body": "As far as I can tell, solc is looking specifically for a file named `libz3.so.4.8`. I only had files named `libz3.so` and `libz3.so.4` in default lib dirs, but manually copying the `libz3.so.4` file to `libz3.so.4.8` got SMTChecker working again. Based on some installs/reinstalls of individual z3 packages, the `libz3-4` ubuntu package added libz3.so.4 while `libz3-dev` added libz3.so and libz3.so.4. I didn't see any dynamic z3 library added by installing `z3-static` from the ppa. I tried installing `libz3-static-dev` from the ppa instead `z3-static`, but I got the same error where solc warns `libz3.so.4.8 was not found.` and did not see any new libz3.so file added with either ppa package.\r\n\r\nAt this point, I'm aware that I can get the proper SMTChecker result for the original example I mentioned with remix. We can close the issue since that is resolved. But if you're willing to continue exploring the proper install process to get a local setup working, even offline (twitter link is in my profile), I would find it helpful. I haven't found clear instructions online for installing a newer z3 dynamic lib and have seen at least one case where solc was compiled from source with static linking to z3 to get SMTChecker working.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139645235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139696219",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1139696219",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1139696219,
    "node_id": "IC_kwDOAm_5kc5D7mJb",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T14:55:10Z",
    "updated_at": "2022-05-27T14:55:10Z",
    "author_association": "MEMBER",
    "body": "We shouldn't rely on Remix here because it doesn't let you change the model checker parameters plus pragma smtchecker will be deprecated in solc 0.9.0. Let's try to get it fixed properly.\r\n\r\nI've seen weird lib things happen before on Ubuntu, where the person had 4.8.12 installed and then had problems when installing the one from our PPA. A sane installation should end up with a `libz3.so.4.8` in your system, because that's the ABI version.\r\n@Marenz you had problems with this recently, was it similar?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1139696219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140254531",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1140254531",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1140254531,
    "node_id": "IC_kwDOAm_5kc5D9udD",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-28T12:46:44Z",
    "updated_at": "2022-05-28T12:46:44Z",
    "author_association": "NONE",
    "body": "Sounds good, I'd like to aim for outlining the installation steps for getting SMTChecker working on a *nix system. I'll stick to ubuntu for now but can test other distros once we have one set of setup instructions. I'll try using the ethereum z3 ppa on a fresh ubuntu docker image and/or ubuntu VM in case the other system I am using has some non-default configs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140254531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140327248",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1140327248",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1140327248,
    "node_id": "IC_kwDOAm_5kc5D-ANQ",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-28T20:45:06Z",
    "updated_at": "2022-05-28T20:45:06Z",
    "author_association": "NONE",
    "body": "I tried installing the different packages on a clean ubuntu system. Here are the files/libraries that each package adds to the system.\r\n\r\n*Default ubuntu packages*\r\n- `libz3-dev` adds: `libz3.so` and `libz3.so.4` (additional source: https://ubuntu.pkgs.org/22.04/ubuntu-universe-amd64/libz3-dev_4.8.12-1_amd64.deb.html#howto)\r\n- `libz3-4` adds: `libz3.so.4` (additional source: https://ubuntu.pkgs.org/22.04/ubuntu-universe-amd64/libz3-4_4.8.12-1_amd64.deb.html#howto)\r\n\r\n*From ppa:ethereum/cpp-build-deps*\r\n- `z3-static` adds: /usr/bin/z3 \r\n- `libz3-static-dev` adds: .cmake and .h files to /usr/lib\r\n\r\nBecause I lack knowledge about z3, my questions are:\r\n1. What package (on any *nix distro) installs a `libz3.so.4.8` file to the system? I can look at the \"preferred\" package that provides this file to see if I can learn why ubuntu is different.\r\n2. Since I copied the `libz3.so.4` file to `libz3.so.4.8` and got SMTChecker working on all but one of the examples I tested against (and I don't know if the error is due to the older z3 version 4.8.12 or a difference between `libz3.so.4` and `libz3.so.4.8`), is there a major difference between those two files? If SMTChecker is hardcoded to require `libz3.so.4.8`, could SMTChecker add `libz3.so.4` to the list of z3 libraries it can use?\r\n3. Is there CI or other testing to confirm the ethereum ppa z3 packages provide a z3 dynamic library? Alternatively, I can look at the ppa z3 build script if it's public.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140327248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140982920",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1140982920",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1140982920,
    "node_id": "IC_kwDOAm_5kc5EAgSI",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-30T10:26:29Z",
    "updated_at": "2022-05-30T10:26:29Z",
    "author_association": "MEMBER",
    "body": "1. [Arch Linux](https://archlinux.org/packages/community/x86_64/z3/) for example installs\r\n```\r\nusr/lib/libz3.so\r\nusr/lib/libz3.so.4.8\r\nusr/lib/libz3.so.4.8.17.0\r\n```\r\nNow I'm not sure if the dynamic loading ever worked for us on Ubuntu... Trying to summon @ekpyron who may have an answer\r\n\r\n2. The lib files with/without versions should be the same. In fact, usually they're just symbolic links to the full version one. On my system:\r\n```\r\n$ ls -l libz3.so*\r\nlrwxrwxrwx 1 root root       12 May 12 23:08 libz3.so -> libz3.so.4.8\r\nlrwxrwxrwx 1 root root       17 May 12 23:08 libz3.so.4.8 -> libz3.so.4.8.17.0\r\n-rwxr-xr-x 1 root root 16090048 May 12 23:08 libz3.so.4.8.17.0\r\n```\r\n\r\n> If SMTChecker is hardcoded to require libz3.so.4.8, could SMTChecker add libz3.so.4 to the list of z3 libraries it can use?\r\n\r\nNot in a safe way. The minor (second) number of a version is the ABI series. This means that while SMTChecker supports the z3 4.8.* interfaces, it cannot safely assume that it supports the z3 4.9.* interfaces (which would be allowed for libz3.so.4) without any changes. In fact rather the opposite, if that number changes we probably need to adjust the API support.\r\n\r\n3. Actually, it was probably my mistake, sorry about that. Our PPA provides a static z3 which is used by our CI to build a static solc + z3. By now I'm guessing the easiest way to have a newer z3 on Ubuntu is by building it yourself...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1140982920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143604474",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1143604474",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1143604474,
    "node_id": "IC_kwDOAm_5kc5EKgT6",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T13:20:35Z",
    "updated_at": "2022-06-01T13:43:42Z",
    "author_association": "NONE",
    "body": "1. I built z3 from source on ubuntu, but after running `sudo make install`, I got only one .so file added to the system, libz3.so, so it was effectively the same result as installing the ubuntu packages except for the version number. For one more data point, I installed [z3-libs](https://fedora.pkgs.org/36/fedora-updates-x86_64/z3-libs-4.8.17-1.fc36.x86_64.rpm.html) in a fedora container and I got the same result that you do for Arch, with libz3.so.4.8.17.0 and libz3.so.4.8 files added to the system. At this point I would suggest a note be added in the solidity docs stating that ubuntu is not supported for SMTChecker z3 dynamic library loading with a note that states the need for the libz3.so.4.8 library when using the dynamic z3 library option. I can make a PR in a few days unless you'd like to handle this.\r\n2. Ok, this makes sense. Given I did get some results by copying the `libz3.so.4` to `libz3.so.4.8`, I guess it may sometimes work but it is definitely not how things should work.\r\n3. Understood, I'll decide whether it will be easier to use docker or a VM with another distro rather than building from source on ubuntu.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1143604474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1149675618",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1149675618",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1149675618,
    "node_id": "IC_kwDOAm_5kc5Ehqhi",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-08T09:22:39Z",
    "updated_at": "2022-06-08T09:22:39Z",
    "author_association": "MEMBER",
    "body": "Interestingly, debian (and thereby ubuntu, since ubuntu uses debian packages) actually patches Z3 sources to adjust its SOVERSION: https://sources.debian.org/patches/z3/4.8.12-1/01-soname.patch/\r\nThat patch results in only ``libz3.so.4`` being part of the debian/ubuntu z3 packages, while a regular install from z3 sources will install as ``libz3.so.4.8``.\r\n\r\nI'm not quite sure how you built z3 from source on ubuntu and only got ``libz3.so`` - I just tried in an ubuntu docker image and built and installed z3 as ``mkdir build && cmake .. && make && make install`` and got ``/usr/local/lib/libz3.so.4.8`` as expected...\r\n\r\nIn any case, this indeed means that dynamic loading of Z3 will fail with the regular debian/ubuntu packages. I'm not quite sure why the debian package maintainers decided to apply this patch - but my guess would be that it is due to Z3 in the past not being particularly concerned with their so versions actually properly indicating binary compatibility (see https://github.com/Z3Prover/z3/issues/6030).\r\n\r\nThis is a bit unfortunate, though, since this means that we cannot rely on the z3 libraries getting uniform so versions across distributions - I'm not quite sure how best to deal with this...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1149675618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1214220480",
    "html_url": "https://github.com/ethereum/solidity/issues/13073#issuecomment-1214220480",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13073",
    "id": 1214220480,
    "node_id": "IC_kwDOAm_5kc5IX4jA",
    "user": {
      "login": "engn33r",
      "id": 6261182,
      "node_id": "MDQ6VXNlcjYyNjExODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6261182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engn33r",
      "html_url": "https://github.com/engn33r",
      "followers_url": "https://api.github.com/users/engn33r/followers",
      "following_url": "https://api.github.com/users/engn33r/following{/other_user}",
      "gists_url": "https://api.github.com/users/engn33r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engn33r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engn33r/subscriptions",
      "organizations_url": "https://api.github.com/users/engn33r/orgs",
      "repos_url": "https://api.github.com/users/engn33r/repos",
      "events_url": "https://api.github.com/users/engn33r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engn33r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-13T20:47:40Z",
    "updated_at": "2022-08-13T20:47:40Z",
    "author_association": "NONE",
    "body": "I see the Z3 issue linked above has been closed but I have not examined or tested the change myself. Could that resolve the issue on debian/ubuntu?\r\n\r\nAnother idea that avoids the dynamic z3 library loading is to publish a table that matches the solc release version with the corresponding z3 library version that the solc binary is compiled with. That way debian users can download a solc release version and then download a matching static z3 binary with the correct version. Even if this information about which solc version matches which z3 version is already available somewhere, it might be helpful to make it more easily accessible in the docs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1214220480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
