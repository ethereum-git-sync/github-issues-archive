{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10020/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10020/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10020/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10020",
  "id": 720216712,
  "node_id": "MDU6SXNzdWU3MjAyMTY3MTI=",
  "number": 10020,
  "title": "Constant evaluation computes array length in arbitrary precision",
  "user": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 2376132438,
      "node_id": "MDU6TGFiZWwyMzc2MTMyNDM4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/codegen%20error",
      "name": "codegen error",
      "color": "000000",
      "default": false,
      "description": "Compiler generates invalid code. Critical."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2020-10-13T12:57:01Z",
  "updated_at": "2020-12-07T11:02:27Z",
  "closed_at": "2020-12-07T11:02:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\ncontract C {\r\n  uint constant a = 12;\r\n  uint constant b = 10;\r\n  function f() public pure returns (uint) {\r\n    uint[(a/b)*b] memory x;\r\n    return x.length;\r\n  }\r\n}\r\n```\r\nThis should return 10, returns 12.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10020/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10020/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711744738",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-711744738",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 711744738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTc0NDczOA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T07:23:52Z",
    "updated_at": "2020-10-19T07:23:52Z",
    "author_association": "MEMBER",
    "body": "Shouldn't this be a breaking change?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711744738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711786797",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-711786797",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 711786797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTc4Njc5Nw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T07:51:25Z",
    "updated_at": "2020-10-19T07:51:25Z",
    "author_association": "MEMBER",
    "body": "Well, it's already there, and it's buggy.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711786797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711800984",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-711800984",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 711800984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTgwMDk4NA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T08:06:08Z",
    "updated_at": "2020-10-19T08:06:08Z",
    "author_association": "MEMBER",
    "body": "@hrkrshnn I mean that using constants to declare a static array instead of using a literal is already there. However, it uses the `ConstantEvaluator` to compute the length, and that's done in reals. Since `a` and `b` have types, it should be done on those types, and use integer division instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711800984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711855369",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-711855369",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 711855369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTg1NTM2OQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T08:38:34Z",
    "updated_at": "2020-10-19T08:38:34Z",
    "author_association": "MEMBER",
    "body": "I guess that people who used this feature would  assume that this was the right behavior. So breaking would be more appropriate in this case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711855369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711864513",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-711864513",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 711864513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTg2NDUxMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T08:45:50Z",
    "updated_at": "2020-10-19T08:45:50Z",
    "author_association": "MEMBER",
    "body": "We can do it in breaking, just to be sure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/711864513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717425487",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-717425487",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 717425487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQyNTQ4Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T18:06:28Z",
    "updated_at": "2020-10-27T18:06:28Z",
    "author_association": "MEMBER",
    "body": "I'd argue this is a bug, but since we're close to breaking there's no issue not doing it there. If there is a case where it could end up with a shorter array length than expected, then fixing it in 0.7.x would make sense -- do we have such a potential case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717425487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717426202",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-717426202",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 717426202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQyNjIwMg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T18:07:42Z",
    "updated_at": "2020-10-27T18:07:42Z",
    "author_association": "MEMBER",
    "body": "Does anyone think this should be correct behavior?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717426202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717428343",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-717428343",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 717428343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQyODM0Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T18:11:31Z",
    "updated_at": "2020-10-27T18:12:32Z",
    "author_association": "MEMBER",
    "body": "In the documentation we state that only literals are evaluated at arbitrary precision. We don't mention constants there.\r\n\r\nFrom https://solidity.readthedocs.io/en/v0.7.4/types.html?highlight=precision#rational-and-integer-literals:\r\n> Number literal expressions retain arbitrary precision until they are converted to a non-literal type (i.e. by using them together with a non-literal expression or by explicit conversion). This means that computations do not overflow and divisions do not truncate in number literal expressions.\r\n\r\nBut this second paragraph could be made a bit more clearer:\r\n> For example, (2**800 + 1) - 2**800 results in the constant 1 (of type uint8) although intermediate results would not even fit the machine word size. Furthermore, .5 * 8 results in the integer 4 (although non-integers were used in between).\r\n\r\nIn what case does it end up as `uint8`? :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717428343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717430178",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-717430178",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 717430178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQzMDE3OA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T18:14:57Z",
    "updated_at": "2020-10-27T18:14:57Z",
    "author_association": "MEMBER",
    "body": "Operations on constants only behave like that inside the length of a static array declaration",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717430178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717431969",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-717431969",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 717431969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQzMTk2OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T18:18:09Z",
    "updated_at": "2020-10-27T18:18:09Z",
    "author_association": "MEMBER",
    "body": "Btw what do we do now in other places where one term is typed and there are one or more untyped terms (literals). What type do we deduce? The type of the typed term?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/717431969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719474770",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719474770",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719474770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ3NDc3MA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T10:33:12Z",
    "updated_at": "2020-10-30T10:49:47Z",
    "author_association": "MEMBER",
    "body": "> Btw what do we do now in other places where one term is typed and there are one or more untyped terms (literals). What type do we deduce? The type of the typed term?\r\n\r\nI think the latter i.e., type of typed term.\r\n\r\nI also noticed that the following test throws an error although `z` is actually a constant that should evaluate to `20` or `0x14`. If the array allocation is commented out, the expected value (`0x14`) is returned.\r\n\r\n```\r\ncontract C {\r\n        uint constant x = 2;\r\n        uint constant z = uint(x)*10;\r\n        uint[z] a;\r\n\r\n        function f() public pure returns (uint) {\r\n                return z;\r\n        }\r\n}\r\n// ----\r\n// TypeError 5462: (72-73): Invalid array length, expected integer literal or constant expression.\r\n```\r\n\r\nEdit: This is happening presumably because of the same underlying issue. Users of constant evaluator (in this case https://github.com/ethereum/solidity/blob/be02db4950d0d609b2fc57cf1aeb08e983c4185a/libsolidity/analysis/DeclarationTypeChecker.cpp#L253) assuming evaluated constant is a rational number.\r\n\r\nEdit 2:\r\n\r\nThe following test passes\r\n\r\n```\r\ncontract C {\r\n        uint constant x = 2;\r\n        uint constant z = x*10;\r\n        uint[z] a;\r\n\r\n        function f() public pure returns (uint) {\r\n                return z;\r\n        }\r\n}\r\n```\r\n\r\nbecause constant evaluator maintains the type of `z` to be a rational number type.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719474770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719478193",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719478193",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719478193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ3ODE5Mw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T10:40:54Z",
    "updated_at": "2020-10-30T10:40:54Z",
    "author_association": "MEMBER",
    "body": "Oh, shouldn't it error on the declaration of `z` though? It uses a typed expression, whereas afaik constants can be assigned only from literals or expressions on literals?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719478193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719479254",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719479254",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719479254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ3OTI1NA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T10:43:27Z",
    "updated_at": "2020-10-30T10:43:27Z",
    "author_association": "MEMBER",
    "body": "> Oh, shouldn't it error on the declaration of `z` though? It uses a typed expression, whereas afaik constants can be assigned only from literals or expressions on literals?\r\n\r\nTyped expressions may be used to assign to constants apparently. The following test passes\r\n\r\n```\r\ncontract C {\r\n        uint constant x = 2;\r\n        uint constant z = uint(x)*10;\r\n\r\n        function f() public pure returns (uint) {\r\n                return z;\r\n        }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() -> 0x14\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719479254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719480816",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719480816",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719480816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ4MDgxNg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T10:47:07Z",
    "updated_at": "2020-10-30T10:47:07Z",
    "author_association": "MEMBER",
    "body": "Right, it only needs to be inferable in compile-time.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719480816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719485810",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719485810",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719485810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ4NTgxMA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T10:58:33Z",
    "updated_at": "2020-10-30T11:01:39Z",
    "author_association": "MEMBER",
    "body": "Okay, this is weird. The following test passes i.e., constant expressions inside statically sized array brackets `[expr]` evaluate differently when compared to expression statements.\r\n\r\n```\r\ncontract C {\r\n\tuint constant x = 2;\r\n\tuint constant y = 4;\r\n\tuint[x/y*10] a;\r\n\r\n\tfunction f() public view returns (uint, uint) {\r\n\t\treturn (x/y*10, a.length);\r\n\t}\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() -> 0, 5\r\n```\r\n\r\nI would have expected the expression `x/y*10` inside the function to be evaluated the same way as the same expression inside array declaration.\r\n\r\nEdit: Reading this thread more closely, I think this is what @leonardoalt was referring to\r\n\r\n>Operations on constants only behave like that inside the length of a static array declaration\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719485810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719490373",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719490373",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719490373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ5MDM3Mw==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:08:44Z",
    "updated_at": "2020-10-30T11:08:44Z",
    "author_association": "MEMBER",
    "body": "@bshastry Yes, in `DeclarationTypeChecker::endVisit(ArrayTypeName const& _typeName)` it uses `ConstantEvaluator(m_errorReporter).evaluate(*length);` to compute the length when constant expressions are used inside the `[]`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719490373/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719492255",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719492255",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719492255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ5MjI1NQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:13:03Z",
    "updated_at": "2020-10-30T11:15:47Z",
    "author_association": "MEMBER",
    "body": "The following is clearly a bug. The constant `z` evaluates differently depending on where it is used i.e., array length vs vanilla evaluation.\r\n\r\n```\r\ncontract C {\r\n        uint constant x = 2;\r\n        uint constant z = x/4*10;\r\n        uint[z] b;\r\n\r\n        function f() public view returns (uint, uint) {\r\n                return (b.length, z);\r\n        }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() -> 5, 0\r\n```\r\n\r\nEdit: However, if the constant involves literals only, the evaluation seems consistent\r\n\r\n```\r\ncontract C {\r\n        uint constant z = 2/4*10;\r\n        uint[z] b;\r\n\r\n        function f() public view returns (uint, uint) {\r\n                return (b.length, z);\r\n        }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// ----\r\n// f() -> 5, 5\r\n```\r\n\r\nSo I suppose the pre-requisites for the bug are\r\n  - constant is assigned from an expression containing another constant\r\n  - assignment contains intermediate fractional type\r\n  - constant is used in static array",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719492255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719495480",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719495480",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719495480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ5NTQ4MA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:20:22Z",
    "updated_at": "2020-10-30T11:20:48Z",
    "author_association": "MEMBER",
    "body": "> The following is clearly a bug. The constant z evaluates differently depending on where it is used i.e., array length vs vanilla evaluation.\r\n\r\nYes, that's what I meant when I opened the bug haha\r\nBut your test shows it a lot better",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719495480/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719495575",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719495575",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719495575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ5NTU3NQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:20:34Z",
    "updated_at": "2020-10-30T11:20:34Z",
    "author_association": "MEMBER",
    "body": "TBH I'm a bit concerned if there are contracts that use `z` and `b.length` interchangeably \r\n\r\n```\r\ncontract C {\r\n        uint constant x = 2;\r\n        uint constant z = x/4*10;\r\n        uint[z] b;\r\n\r\n        function f() public view returns (uint, uint) {\r\n                return (b.length, z);\r\n        }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719495575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719496451",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-719496451",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 719496451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ5NjQ1MQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:22:19Z",
    "updated_at": "2020-10-30T11:22:19Z",
    "author_association": "MEMBER",
    "body": "> TBH I'm a bit concerned if there are contracts that use z and b.length interchangeably\r\n\r\nThere might be, but in that case I would expect the expression to not have division (which is what breaks the equivalence)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/719496451/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721730635",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-721730635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 721730635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTczMDYzNQ==",
    "user": {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T13:26:45Z",
    "updated_at": "2020-11-04T13:41:11Z",
    "author_association": "MEMBER",
    "body": "The documentation states:\r\n\r\n- \"For a constant variable, the expression assigned to it is copied to all the places where it is accessed and also re-evaluated each time.\" (https://solidity.readthedocs.io/en/v0.7.4/contracts.html#constant-and-immutable-state-variables)\r\n\r\nThis seems not entirely true (I think), as operators are evaluated in via `ConstantEvaluator` through (e.g.) `RationalNumberType::binaryOperatorResult(...)` and only the evaluated result as rational number is stored with the resulting type.\r\n\r\nSo for me it reads like:\r\n```solidity\r\nuint constant a = 12; // internally stored as rational (12 / 1)\r\nuint constant b = 10; // internally stored as rational (10 / 1)\r\nuint constant c = a / b; // internally stored as rational (12 / 10), evaluated in `RationalNumberType::binaryOperatorResult(...)` for `Token::Div`\r\nuint constant d = c * b; // internally stored as rational (12 / 1), evaluated in `RationalNumberType::binaryOperatorResult(...)` for `Token::Mul`\r\n\r\nuint C = a / b; // is  value 1 (due to integer division truncation)\r\nuint D = (a / b) * b; // is value 10\r\n```\r\n\r\nIf I understand you correctly, @leonardoalt , it is expected to respect the type of `a` and `b` (both `uint`) when doing the division `a / b` in the array declaration subscript.\r\n\r\nIntuitively I'd expect the same, but what it seems to violate against is that the documentation states \"For a constant variable, the expression assigned to it is copied to all the places where it is accessed and also re-evaluated each time\". So the current behavior (as per documentation) seems correct to me (correct me if I'm wrong).\r\n\r\n@bshady has nice examples where constant expression evaluation differs from runtime expression evaluation. The problem I'm having now what behavior exactly do we want to have?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721730635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721859044",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-721859044",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 721859044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg1OTA0NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T17:09:57Z",
    "updated_at": "2020-11-04T17:09:57Z",
    "author_association": "MEMBER",
    "body": "@christianparpart The code snippet you gave does not use the constant evaluator. My impression is also that the behaviour you describe is the correct behaviour. The constant evaluator is used for computing lengths in array types:\r\n`uint[d]` is currently the same as `uint[12]` , but it should be `uint[10]`, the same as `uint[D]`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721859044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739845243",
    "html_url": "https://github.com/ethereum/solidity/issues/10020#issuecomment-739845243",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10020",
    "id": 739845243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTg0NTI0Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T11:02:27Z",
    "updated_at": "2020-12-07T11:02:27Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/ethereum/solidity/pull/10321",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/739845243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
