{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8072",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8072/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8072/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8072/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8072",
  "id": 541749726,
  "node_id": "MDU6SXNzdWU1NDE3NDk3MjY=",
  "number": 8072,
  "title": "[yul] optimizer's redundant assignment eliminator incorrectly removes non-redundant assignments in for loops containing a break/continue statement inside a nested branch statement",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-12-23T13:14:45Z",
  "updated_at": "2020-01-02T17:46:27Z",
  "closed_at": "2020-01-02T17:46:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nFound by LPM + libFuzzer + custom yul mutator (see #7947 )\r\n\r\n```\r\n{\r\n        for {let i:= 0} lt(i,2) {i := add(i,1)}\r\n        {\r\n                // x is declared and implicitly\r\n                // initialized to zero.\r\n                let x\r\n                // This assignment is not redundant\r\n                // since it is used by mstore statement\r\n                // that follows the if statement\r\n                x := 1337\r\n                if lt(i,1) {\r\n                        // This assignment is redundant\r\n                        x := 42\r\n                        continue\r\n                }\r\n                mstore(0, x)\r\n        }\r\n}\r\n```\r\n\r\nis incorrectly optimized to\r\n\r\n```\r\n        {\r\n            let i := 0\r\n            for { } lt(i, 2) { i := add(i, 1) }\r\n            {\r\n                if lt(i, 1) { continue }\r\n                mstore(0, 0)\r\n            }\r\n        }\r\n```\r\n\r\n`mstore(0, 0)` should be `mstore(0, 1337)` instead.\r\n\r\nIn the example above, the `if` statement could be replaced by another branching statement e.g., `switch` statement with the same result.\r\n\r\nIn general, this problem manifests while the redundant assignment eliminator is visiting a continue statement inside a branch inside a for loop: Assignments to a variable in the path leading to the branching statement are also removed apart from the correct redundant assignment within the branching statement.\r\n\r\nFor example, the yul optimizer also incorrectly marks (and subsequently removes) the assignment statement directly in the for loop below leading to `mstore(0, 1337)` although the correct optimization should be `mstore(0, 31337)`\r\n\r\n```\r\n{\r\n        for {let i:= 0} lt(i,2) {i := add(i,1)}\r\n        {\r\n                let x := 1337\r\n                // This assignment is incorrectly removed\r\n                x := 31337\r\n                if lt(i,1) {\r\n                        // Redundant assignment eliminator removes all\r\n                        // assignments to `x` in this path (including `x := 31337`)\r\n                        // when it should be removing only `x := 42`\r\n                        x := 42\r\n                        continue\r\n                }\r\n                mstore(0, x)\r\n        }\r\n}\r\n```\r\n\r\nUnfortunately, this affects `v0.6.0` and may warrant a bug list entry. I'm trying to understand why this was not found earlier. My intuition is that the custom mutator had a role to play by increasing the likelihood (during fuzzing) of insertion of `continue` statement inside for loops (which I undertook only recently).\r\n\r\n## Environment\r\n\r\n- Compiler version: latest develop\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\n$ solc --strict-assembly --optimize <test.yul>\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8072/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8072/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568475963",
    "html_url": "https://github.com/ethereum/solidity/issues/8072#issuecomment-568475963",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8072",
    "id": 568475963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODQ3NTk2Mw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-23T13:30:10Z",
    "updated_at": "2019-12-23T13:30:10Z",
    "author_association": "MEMBER",
    "body": "I'm wondering if the fix entails making `m_assignments` a vector of `TrackedAssignments` into which we push back assignments in a given scope. Subsequently, we `finalize` assignments only in the last scope.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568475963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569431984",
    "html_url": "https://github.com/ethereum/solidity/issues/8072#issuecomment-569431984",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8072",
    "id": 569431984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQzMTk4NA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-28T16:48:40Z",
    "updated_at": "2019-12-28T16:50:29Z",
    "author_association": "MEMBER",
    "body": "Notes: Issue is reproducible via `break` statement as well. Example:\r\n\r\n```\r\n{\r\n        for {let i:= 0} lt(i,2) {i := add(i,1)}\r\n        {\r\n                let x\r\n                // x is used by mstore post if statement\r\n                x := 1337\r\n                if gt(i, 0) { x := 42 break }\r\n                mstore(0, x)\r\n        }\r\n}\r\n```\r\n\r\nshould store `1337` in memory location `0` but it is optimized to\r\n\r\n```\r\n        {                   \r\n            let i := 0        \r\n            for { } lt(i, 2) { i := add(i, 1) }\r\n            {                 \r\n                if iszero(iszero(i)) { break }\r\n                mstore(0, 0)\r\n            }                                     \r\n        }\r\n```\r\n\r\nwhich stores `0` in memory location `0`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569431984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569497193",
    "html_url": "https://github.com/ethereum/solidity/issues/8072#issuecomment-569497193",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8072",
    "id": 569497193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQ5NzE5Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-29T11:36:12Z",
    "updated_at": "2019-12-29T11:36:12Z",
    "author_association": "MEMBER",
    "body": "It is essential, that the variable `x` is declared inside the for loop, so this seems to be related with, as you say, finalizing a variable when exiting from the block while it is still \"to be processed\" by the continue statement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569497193/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
