{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6438/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6438/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6438/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6438",
  "id": 428106000,
  "node_id": "MDU6SXNzdWU0MjgxMDYwMDA=",
  "number": 6438,
  "title": "Fuzz ABIencoderv2",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2019-04-02T09:04:06Z",
  "updated_at": "2020-12-01T10:10:10Z",
  "closed_at": "2020-11-30T09:46:40Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Depends on\r\n  - #6743 \r\n\r\nCC @axic @chriseth @cdetrio @holiman @ekpyron ",
  "closed_by": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6438/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6438/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/478982927",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-478982927",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 478982927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODk4MjkyNw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T12:57:03Z",
    "updated_at": "2019-04-02T12:57:59Z",
    "author_association": "MEMBER",
    "body": "@cdetrio I don't have access to the `go-vm-fuzzing` git repo that the ABIencoderv2 fuzzer that you shared depends on (log below)\r\n\r\n```\r\n$ cd abiencoderv2-fuzzer\r\n$ make\r\ngo build -buildmode=c-archive github.com/ethereum/go-ethereum/go-vm-fuzzing\r\ncan't load package: package github.com/ethereum/go-ethereum/go-vm-fuzzing: cannot find package \"github.com/ethereum/go-ethereum/go-vm-fuzzing\" in any of:\r\n        /snap/go/3417/src/github.com/ethereum/go-ethereum/go-vm-fuzzing (from $GOROOT)\r\n        /home/bhargava/go/src/github.com/ethereum/go-ethereum/go-vm-fuzzing (from $GOPATH)\r\nMakefile:6: recipe for target 'go-vm-fuzzing.a' failed\r\nmake: *** [go-vm-fuzzing.a] Error 1\r\n\r\n\r\n\r\n$ git clone https://github.com/ethereum/go-ethereum/go-vm-fuzzing.git\r\nCloning into 'go-vm-fuzzing'...\r\nremote: Not Found\r\nfatal: repository 'https://github.com/ethereum/go-ethereum/go-vm-fuzzing.git/' not found\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/478982927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480178575",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480178575",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480178575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE3ODU3NQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T07:37:43Z",
    "updated_at": "2019-04-05T07:37:43Z",
    "author_association": "MEMBER",
    "body": "Might be this one: https://github.com/guidovranken/go-ethereum/tree/go-vm-fuzzing \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480178575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480178982",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480178982",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480178982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE3ODk4Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T07:39:17Z",
    "updated_at": "2019-04-05T07:39:17Z",
    "author_association": "MEMBER",
    "body": "This is the most recent version of the vm-fuzzer: https://github.com/ethereum/ethereum-vm-fuzzer . It is continually updated to the most recent versions\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480178982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480179202",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480179202",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480179202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE3OTIwMg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T07:40:13Z",
    "updated_at": "2019-04-05T07:40:13Z",
    "author_association": "MEMBER",
    "body": "Looping in @cryptomental  here too",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480179202/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480180897",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480180897",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480180897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE4MDg5Nw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T07:46:45Z",
    "updated_at": "2019-04-05T08:10:57Z",
    "author_association": "MEMBER",
    "body": "Hi @cryptomental \r\n\r\nAt a high level, my understanding is that you are doing multi-client differential fuzzing. So I imagine your test harness looks something like\r\n\r\n```\r\n#include <geth headers>\r\n#include <parity headers>\r\n...\r\n\r\nint LLVMFuzzerTestOneInput(uint8_t *data, size_t size) {\r\n  std::string program(data);\r\n  assert(Geth::execute(program) == Parity::execute(program)\r\n  return 0;\r\n}\r\n```\r\n\r\nOur use-case is slightly different. Assuming my code snippet somehow correctly captures your use-case, let me present what we would like to do\r\n\r\n```\r\n#include <some solidity headers>\r\n#include <some libfuzzer headers>\r\n#include <some geth headers>\r\n...\r\n\r\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\r\n{\r\n   std::string program(data);\r\n   EVMBytecode = solidity::compile(program);\r\n   // All programs must return true\r\n   assert(Geth::execute(EVMBytecode)==1);\r\n   return 0;\r\n}\r\n```\r\n\r\nDo you think something like this is feasible? In the end, we'd have one big fuzzing binary blob that generates random input, tests the harness above, and reports failures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480180897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480182511",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480182511",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480182511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE4MjUxMQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T07:52:44Z",
    "updated_at": "2019-04-05T07:52:44Z",
    "author_association": "MEMBER",
    "body": "> This is the most recent version of the vm-fuzzer: https://github.com/ethereum/ethereum-vm-fuzzer . It is continually updated to the most recent versions\r\n\r\nThank you @holiman . IIRC, we should be writing a client for the latest and greatest ethereum-vm-fuzzer that is linked above.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480182511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480188228",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480188228",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480188228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDE4ODIyOA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T08:13:37Z",
    "updated_at": "2019-04-05T08:16:17Z",
    "author_association": "MEMBER",
    "body": "@chriseth @ekpyron and I discussed to some extent what an initial test stub could look like for the ABIencoderv2. The main conclusion from our discussion is that we should first figure out what the testing environment is going to look like before we get back to actually writing the ABIencoderv2 test harness.\r\n\r\nThinking of it, such a test environment for ABIencoderv2 may also help us fuzz Solidity end-to-end (parsing, optimization, code generation and execution). We could, for example, assert equality of unoptimized and optimized Geth traces for random (but parseable) Solidity code.\r\n\r\n@holiman was kind enough to loop in @cryptomental from the security testing team who may be able to help us better understand the test environment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480188228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480706686",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480706686",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480706686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDcwNjY4Ng==",
    "user": {
      "login": "cryptomental",
      "id": 20819151,
      "node_id": "MDQ6VXNlcjIwODE5MTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20819151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptomental",
      "html_url": "https://github.com/cryptomental",
      "followers_url": "https://api.github.com/users/cryptomental/followers",
      "following_url": "https://api.github.com/users/cryptomental/following{/other_user}",
      "gists_url": "https://api.github.com/users/cryptomental/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cryptomental/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cryptomental/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptomental/orgs",
      "repos_url": "https://api.github.com/users/cryptomental/repos",
      "events_url": "https://api.github.com/users/cryptomental/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cryptomental/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T06:52:59Z",
    "updated_at": "2019-04-08T06:52:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @bshastry  @chriseth @ekpyron  @holiman . I'd be happy to help you set this up after we agree on the test harness . @bshastry  Geth vs Parity differential fuzzing is a bit more complex than your high level code but you almost got it right. We also extract prestate from the input and fill the EVM with accounts and balances before the code is run, you may have a look at GethVMRunner::Run() in vmrunner.cpp for the details. We compare if state / stack and errors of both EVM implementations match.\r\n\r\nIf I understand correctly your use case, the goal would be to generate bytecode from a fuzzed source code using a Solidity compiler without and with optimization and feed this random bytecode into the EVM using a fuzzer. Then this indeed could be a perfect use case to see if Geth execution traces are the same for the optimized and unoptimized Solidity output.\r\n\r\nThe second use case would be to fuzz-test the ABIencoderv2 itself, without differential fuzzing. Then the fuzzer would feed the random input into the ABIencoderv2 engine until it can find the best possible encoder code coverage and see if the encoder can always give an output or an error without a crash.\r\n\r\nPlease let me know if I got it right. \r\n\r\nP.S. If anyone is interested, https://github.com/Dor1s/libfuzzer-workshop/tree/master/lessons is a great workshop on the libfuzzer that helps to understand the main idea behind libfuzzer and the test harness. I am not sure about ABIencoderv2 internals, but we could think of structure aware fuzzing if needed https://github.com/google/fuzzer-test-suite/blob/master/tutorial/structure-aware-fuzzing.md\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480706686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480713446",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-480713446",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 480713446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDcxMzQ0Ng==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T07:18:24Z",
    "updated_at": "2019-04-08T07:18:24Z",
    "author_association": "MEMBER",
    "body": "@cryptomental You are right. I tend to think Geth execution trace is optional for the ABIencoderv2 use case because we are planning to construct the fuzzed program in such a way that we already know the expectation. So we assume that asserting program output is sufficient for now e.g., we always expect the program to return true.\r\n\r\nHaving said that, we are still very early in this project so it might not hurt to have access to traces if need be/for debugging etc.\r\n\r\nThe first priority at the moment is ABIencoderv2 fuzzing, I thought of the differential use-case since it seems to be a straightforward extension to the ABI fuzzing use case. IIUC, both use cases share common test infrastructure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/480713446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/481249996",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-481249996",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 481249996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTI0OTk5Ng==",
    "user": {
      "login": "cryptomental",
      "id": 20819151,
      "node_id": "MDQ6VXNlcjIwODE5MTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20819151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptomental",
      "html_url": "https://github.com/cryptomental",
      "followers_url": "https://api.github.com/users/cryptomental/followers",
      "following_url": "https://api.github.com/users/cryptomental/following{/other_user}",
      "gists_url": "https://api.github.com/users/cryptomental/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cryptomental/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cryptomental/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptomental/orgs",
      "repos_url": "https://api.github.com/users/cryptomental/repos",
      "events_url": "https://api.github.com/users/cryptomental/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cryptomental/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-09T13:24:45Z",
    "updated_at": "2019-04-09T13:25:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @bshastry that makes sense. I would like to experiment a bit on this. Would it be possible for you to provide a simple example of a Solidity program (ABIencoder input) and the resulting EVM bytecode that you would like to fuzz with an example EVM configuration? Perhaps initially we could use solc and Geth's EVM runner to validate the EVM bytecode. My idea was to install `sudo snap install solc --edge` and then `solc --bin program.sol` and `solc --optimize --bin program.sol` and then run `go/src/github.com/ethereum/go-ethereum/cmd/evm/evm --code program.bin` with additional EVM parameters (see https://github.com/ethereum/go-ethereum/blob/master/cmd/evm/runner.go#L43) , but I am not sure if this is the way to go.\r\n\r\nAfter you send an example use case with instructions I could try to hook it up in the way you described at https://github.com/ethereum/solidity/issues/6438#issuecomment-480180897 into the ethereum-vm-fuzzer.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/481249996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/482037639",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-482037639",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 482037639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjAzNzYzOQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T09:20:27Z",
    "updated_at": "2019-04-11T09:20:27Z",
    "author_association": "MEMBER",
    "body": "Thank you @cryptomental \r\n\r\nUpdate: I'm working on a minimal PoC harness that accepts solidity input, compiles it to EVM byte code, runs it on geth, and asserts on false return code or other program errors (e.g., revert).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/482037639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734514768",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-734514768",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 734514768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDUxNDc2OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-27T00:21:44Z",
    "updated_at": "2020-11-27T00:21:44Z",
    "author_association": "MEMBER",
    "body": "@bshastry can this be closed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734514768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/735675918",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-735675918",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 735675918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTY3NTkxOA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-30T09:46:40Z",
    "updated_at": "2020-11-30T09:46:40Z",
    "author_association": "MEMBER",
    "body": "Ah yes. Sorry for the considerable delay.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/735675918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736361249",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-736361249",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 736361249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjM2MTI0OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T09:47:56Z",
    "updated_at": "2020-12-01T09:47:56Z",
    "author_association": "MEMBER",
    "body": "Do we fuzz against the Isabelle implementation of the encoding by now, though? I'd still say that'd be a major improvement on top of the initial ABIv2 fuzzing we had and we should really do it...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736361249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736372784",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-736372784",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 736372784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjM3Mjc4NA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T10:07:00Z",
    "updated_at": "2020-12-01T10:07:00Z",
    "author_association": "MEMBER",
    "body": "@ekpyron That is still in progress and unrelated to this issue which was originally created for the initial fuzzing setup for abiv2 coding that we now use.\r\n\r\nMay be I should create a separate issue to track the isabelle fuzzing...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736372784/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736374675",
    "html_url": "https://github.com/ethereum/solidity/issues/6438#issuecomment-736374675",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6438",
    "id": 736374675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjM3NDY3NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T10:10:10Z",
    "updated_at": "2020-12-01T10:10:10Z",
    "author_association": "MEMBER",
    "body": "Alright, sounds good! Let me know if we should talk about the isabelle fuzzing once more. There was some progress in the Isabelle implementation, so the newest version now also works nicely for unreasonably-huge array length, so with that we should be able to fuzz random mutations of valid encodings (e.g. flipping random bits in them), which would be nice...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736374675/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
