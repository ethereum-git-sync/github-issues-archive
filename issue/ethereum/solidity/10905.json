{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10905/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10905/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10905/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10905",
  "id": 802797217,
  "node_id": "MDU6SXNzdWU4MDI3OTcyMTc=",
  "number": 10905,
  "title": "Inconsistent rules for .address and .selector",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2021-02-06T21:38:30Z",
  "updated_at": "2022-09-14T17:48:38Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\nRules for deciding whether the code using `.address` or `.selector` on public functions is valid or not seem pretty random. It sometimes works without `this` and sometimes doesn't. Behavior is different between for `.selector` and for `.address`. It also changes depending on whether the value is actually used or not.\r\n\r\n## Example\r\n```solidity\r\ncontract B {\r\n    function g() public {}\r\n}\r\n\r\ncontract C is B {\r\n    function h() public  {\r\n        address a1 = g.address;     // Error: Member \"address\" not found or not visible after argument-dependent lookup in function ().\r\n        address a2 = this.g.address;\r\n        address a3 = h.address;     // Error: Member \"address\" not found or not visible after argument-dependent lookup in function ().\r\n        address a4 = this.h.address;\r\n\r\n        g.address;                  // Error: Expected identifier but got 'address'\r\n        this.g.address;             // Error: Expected identifier but got 'address'\r\n        h.address;                  // Error: Expected identifier but got 'address'\r\n        this.h.address;             // Error: Expected identifier but got 'address'\r\n\r\n        bytes4 s1 = g.selector;\r\n        bytes4 s2 = this.g.selector;\r\n        bytes4 s3 = h.selector;     // Error: Member \"selector\" not found or not visible after argument-dependent lookup in function ().\r\n        bytes4 s4 = this.h.selector;\r\n\r\n        g.selector;\r\n        this.g.selector;\r\n        h.selector;                 // Error: Member \"selector\" not found or not visible after argument-dependent lookup in function ().\r\n        this.h.selector;\r\n    }\r\n}\r\n```\r\n\r\n## Environment\r\n- Compiler version: 0.8.1\r\n- Operating system: Arch Linux",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10905/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10905/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775038219",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775038219",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775038219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTAzODIxOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T10:22:27Z",
    "updated_at": "2021-02-08T10:22:27Z",
    "author_association": "MEMBER",
    "body": "The `Expected identifier` errors are from the parser - I guess it has a missing \"use keyword for identifier\" workaround, which maybe is also just fine.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775038219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775043469",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775043469",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775043469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTA0MzQ2OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T10:31:06Z",
    "updated_at": "2021-02-08T10:31:06Z",
    "author_association": "MEMBER",
    "body": "It's not exactly random - ``address`` and ``selector`` are allowed, whenever the function is referred to as external function, i.e. using ``this.``. The expression-statement version of those could arguably be changed, but then again those don't have an effect anyways, so maybe it's fine, yeah.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775043469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775045313",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775045313",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775045313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTA0NTMxMw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T10:34:14Z",
    "updated_at": "2021-02-08T10:34:14Z",
    "author_association": "MEMBER",
    "body": "Ah, no, now I see what you mean... yeah maybe we should disallow ``selector`` on functions used in internal context...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775045313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775046366",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775046366",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775046366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTA0NjM2Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T10:36:06Z",
    "updated_at": "2021-02-08T10:36:06Z",
    "author_association": "MEMBER",
    "body": "However, ``selector`` just depends on the arguments and can be used without there actually being an actual external function pointer, so we can fetch a selector as long as it's a function that *might* be used externally. On the other hand we only have an address, if we actually have it. So also the difference between the two does make sense...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775046366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775063004",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775063004",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775063004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTA2MzAwNA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T11:04:20Z",
    "updated_at": "2021-02-08T11:04:20Z",
    "author_association": "MEMBER",
    "body": "Well, I know that it's not really random but there are at least 2 or 3 things (either bugs or design decisions) that make the rules complex so it may just as well be random from user's perspective :)\r\n\r\nAt least the usage with `this` is consistently allowed if we ignore the `Expected identifier` case.\r\n\r\n> The `Expected identifier` errors are from the parser - I guess it has a missing \"use keyword for identifier\" workaround, which maybe is also just fine.\r\n\r\nUnless it happens in other expressions where it would not be a no-op. The fact that `this.g.address;` on its own is illegal was certainly baffling when I ran into it while trying things out.\r\n\r\n> However, selector just depends on the arguments and can be used without there actually being an actual external function pointer, so we can fetch a selector as long as it's a function that might be used externally.\r\n\r\nI think it's fine to be able to use it on internal stuff that can be called externally but it's inconsistent that it works for `g` and not for `h` while both `this.g` and `this.h` work. Also, the error message does not explain why `selector` is missing which adds to the confusion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775063004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775104995",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775104995",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775104995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTEwNDk5NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T12:17:27Z",
    "updated_at": "2021-02-08T12:17:53Z",
    "author_association": "MEMBER",
    "body": "A bit weird to now double-discuss this with https://github.com/ethereum/solidity/issues/10891 :-). Short version of what I said there: the fact that ``g.selector`` is valid is a side-effect of ``B.g.selector`` being valid and us assigning both of them the same type internally. The latter works and should work (that was an explicit feature request), even if used from a contract that does not inherit from ``B``. So yeah, it might be nice to disallow ``g.selector`` there, but it'll probably involve some tinkering, since there are cases that currently have the same types that should be allowed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775104995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775111721",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775111721",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775111721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTExMTcyMQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T12:27:34Z",
    "updated_at": "2021-02-08T12:27:34Z",
    "author_association": "MEMBER",
    "body": "Any why not just allow `h.selector` instead? As a bonus, it would not even be a breaking change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775111721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775113251",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775113251",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775113251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTExMzI1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T12:30:09Z",
    "updated_at": "2021-02-08T12:30:09Z",
    "author_association": "MEMBER",
    "body": "If we allow `h.selector`, we have to check whether the function's parameters are valid outside of the contract which turns this into an even more complicated rule.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775113251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775113523",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775113523",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775113523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTExMzUyMw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T12:30:32Z",
    "updated_at": "2021-02-08T12:30:32Z",
    "author_association": "MEMBER",
    "body": "Hm, maybe :-). My guess without looking into it would be that internally the compiler treats ``h`` just as having ``FunctionType::Kind::Internal``, i.e. you no longer know from its type alone that it's actually ``public``... and we can't just allow it for all internal functions, since they may use internal types, s.t. there is no selector... but yeah - both disallowing ``g.selector`` and allowing ``h.selector`` sounds good to me, but both may require some reworking of the internals...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775113523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775116945",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-775116945",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 775116945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTExNjk0NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T12:35:32Z",
    "updated_at": "2021-02-08T12:35:32Z",
    "author_association": "MEMBER",
    "body": "> If we allow `h.selector`, we have to check whether the function's parameters are valid outside of the contract which turns this into an even more complicated rule.\r\n\r\nAs long as ``h`` is public, it should be fine, shouldn't it? That would be a consistent rule - as long as we refer to a public function, we can fetch a selector... but still probably messy internally, since ``h`` gets an internal function type kind... so the general problem is that we collapse too many function types in the AST/compiler type system - maybe we should have spent more time on that in https://github.com/ethereum/solidity/pull/8137, but we settled for a \"close enough\" back then...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775116945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785142901",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-785142901",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 785142901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTE0MjkwMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T15:10:06Z",
    "updated_at": "2021-02-24T15:10:06Z",
    "author_association": "MEMBER",
    "body": "I think these are two unrelated issues:\r\n - `this.g.address;` should parse. In general, `.address` should be valid everywhere in the parser.\r\n -  `g.selector;` should not work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785142901/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785144943",
    "html_url": "https://github.com/ethereum/solidity/issues/10905#issuecomment-785144943",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10905",
    "id": 785144943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTE0NDk0Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T15:13:11Z",
    "updated_at": "2021-02-24T15:13:11Z",
    "author_association": "MEMBER",
    "body": "Acutally there are quite complicated rules about `.selector` and maybe it's best to just leave them as they are...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/785144943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
