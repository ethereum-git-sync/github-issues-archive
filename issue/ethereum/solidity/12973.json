{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12973",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12973/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12973/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12973/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12973",
  "id": 1221177514,
  "node_id": "I_kwDOAm_5kc5IybCq",
  "number": 12973,
  "title": "[SMTChecker] ICE in `SMTEncoder::indexOrMemberAssignment()` with public state variable with invalid double initialization",
  "user": {
    "login": "pietroborrello",
    "id": 18199462,
    "node_id": "MDQ6VXNlcjE4MTk5NDYy",
    "avatar_url": "https://avatars.githubusercontent.com/u/18199462?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pietroborrello",
    "html_url": "https://github.com/pietroborrello",
    "followers_url": "https://api.github.com/users/pietroborrello/followers",
    "following_url": "https://api.github.com/users/pietroborrello/following{/other_user}",
    "gists_url": "https://api.github.com/users/pietroborrello/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pietroborrello/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pietroborrello/subscriptions",
    "organizations_url": "https://api.github.com/users/pietroborrello/orgs",
    "repos_url": "https://api.github.com/users/pietroborrello/repos",
    "events_url": "https://api.github.com/users/pietroborrello/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pietroborrello/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-29T16:12:49Z",
  "updated_at": "2022-05-02T09:21:02Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "##### **Describe the bug**\r\nThe attached testcase crashes the solidity compiler solc with an InternalCompilerError: Solidity assertion failed in in solidity::frontend::SMTEncoder::indexOrMemberAssignment\r\n\r\nhttps://github.com/ethereum/solidity/blob/b35cda5998ac7bc28a58f23480f2f82a440d6fa2/libsolidity/formal/SMTEncoder.cpp#L1596\r\n\r\n##### **To Reproduce**\r\nBuilt solc_ossfuzz using clang-10 according to [the oss-fuzz script](https://github.com/google/oss-fuzz/blob/master/projects/solidity/build.sh) with `CXXFLAGS='-O1 -fsanitize=address -fsanitize=array-bounds,bool,builtin,enum,float-divide-by-zero,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr'`\r\n\r\ncommit: b35cda5998ac7bc28a58f23480f2f82a440d6fa2\r\n\r\n##### **Crash Output**\r\n\r\n```\r\n$ ./solc_ossfuzz id:000000,sig:06,src:012925,time:33170510,op:havoc,rep:2,trial:3\r\nINFO: Seed: 2663119797\r\nINFO: Loaded 1 modules   (537599 inline 8-bit counters): 537599 [0x53258a0, 0x53a8c9f), \r\nINFO: Loaded 1 PC tables (537599 PCs): 537599 [0x53a8ca0,0x5bdcc90), \r\nsolc_ossfuzz: Running 1 inputs 1 time(s) each.\r\nRunning: id:000000,sig:06,src:012925,time:33170510,op:havoc,rep:2,trial:3\r\nterminate called after throwing an instance of 'boost::wrapexcept<solidity::langutil::InternalCompilerError>'\r\n  what():  Solidity assertion failed\r\n==2678862== ERROR: libFuzzer: deadly signal\r\n    #0 0x505691 in __sanitizer_print_stack_trace (solc_ossfuzz+0x505691)\r\n    #1 0x55da28 in fuzzer::PrintStackTrace() (solc_ossfuzz+0x55da28)\r\n    #2 0x542819 in fuzzer::Fuzzer::CrashCallback() (solc_ossfuzz+0x542819)\r\n    #3 0x7ffff7c713bf  (/lib/x86_64-linux-gnu/libpthread.so.0+0x143bf)\r\n    #4 0x7ffff7a8103a in __libc_signal_restore_set /build/glibc-sMfBJT/glibc-2.31/signal/../sysdeps/unix/sysv/linux/internal-signals.h:86:3\r\n    #5 0x7ffff7a8103a in raise /build/glibc-sMfBJT/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:48:3\r\n    #6 0x7ffff7a60858 in abort /build/glibc-sMfBJT/glibc-2.31/stdlib/abort.c:79:7\r\n    #7 0x7ffff7e6d910  (/lib/x86_64-linux-gnu/libstdc++.so.6+0x9e910)\r\n    #8 0x7ffff7e7938b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa38b)\r\n    #9 0x7ffff7e793f6 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa3f6)\r\n    #10 0x7ffff7e796a8 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa6a8)\r\n    #11 0x6407ae in void boost::throw_exception<solidity::langutil::InternalCompilerError>(solidity::langutil::InternalCompilerError const&) (solc_ossfuzz+0x6407ae)\r\n    #12 0x181c97c in solidity::frontend::SMTEncoder::indexOrMemberAssignment(solidity::frontend::Expression const&, solidity::smtutil::Expression const&) (solc_ossfuzz+0x181c97c)\r\n    #13 0x1809c94 in solidity::frontend::SMTEncoder::assignment(solidity::frontend::Expression const&, solidity::smtutil::Expression const&, solidity::frontend::Type const*) (solc_ossfuzz+0x1809c94)\r\n    #14 0x17ffc41 in solidity::frontend::SMTEncoder::endVisit(solidity::frontend::Assignment const&) (solc_ossfuzz+0x17ffc41)\r\n    #15 0x169761d in solidity::frontend::CHC::defineContractInitializer(solidity::frontend::ContractDefinition const&, solidity::frontend::ContractDefinition const&) (solc_ossfuzz+0x169761d)\r\n    #16 0x168eca6 in solidity::frontend::CHC::endVisit(solidity::frontend::ContractDefinition const&) (solc_ossfuzz+0x168eca6)\r\n    #17 0xe66f1a in void solidity::frontend::ASTNode::listAccept<std::shared_ptr<solidity::frontend::ASTNode> >(std::vector<std::shared_ptr<solidity::frontend::ASTNode>, std::allocator<std::shared_ptr<solidity::frontend::ASTNode> > > const&, solidity::frontend::ASTConstVisitor&) (solc_ossfuzz+0xe66f1a)\r\n    #18 0xe66985 in solidity::frontend::SourceUnit::accept(solidity::frontend::ASTConstVisitor&) const (solc_ossfuzz+0xe66985)\r\n    #19 0x167c1d9 in solidity::frontend::CHC::analyze(solidity::frontend::SourceUnit const&) (solc_ossfuzz+0x167c1d9)\r\n    #20 0x178e5f3 in solidity::frontend::ModelChecker::analyze(solidity::frontend::SourceUnit const&) (solc_ossfuzz+0x178e5f3)\r\n    #21 0x88c1f2 in solidity::frontend::CompilerStack::analyze() (solc_ossfuzz+0x88c1f2)\r\n    #22 0x892357 in solidity::frontend::CompilerStack::compile(solidity::frontend::CompilerStack::State) (solc_ossfuzz+0x892357)\r\n    #23 0x56b6d5 in FuzzerUtil::testCompiler(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, bool, unsigned int, bool, bool) (solc_ossfuzz+0x56b6d5)\r\n    #24 0x562ddf in LLVMFuzzerTestOneInput (solc_ossfuzz+0x562ddf)\r\n    #25 0x543f49 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (solc_ossfuzz+0x543f49)\r\n    #26 0x52ee49 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (solc_ossfuzz+0x52ee49)\r\n    #27 0x533d52 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (solc_ossfuzz+0x533d52)\r\n    #28 0x52ebd2 in main (solc_ossfuzz+0x52ebd2)\r\n    #29 0x7ffff7a620b2 in __libc_start_main /build/glibc-sMfBJT/glibc-2.31/csu/../csu/libc-start.c:308:16\r\n    #30 0x48440d in _start (solc_ossfuzz+0x48440d)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\n```\r\n\r\nzipped testcase to reproduce:\r\n[id:000000,sig:06,src:012925,time:33170510,op:havoc,rep:2,trial:3.zip](https://github.com/ethereum/solidity/files/8592187/id.000000.sig.06.src.012925.time.33170510.op.havoc.rep.2.trial.3.zip)\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12973/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12973/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1113959466",
    "html_url": "https://github.com/ethereum/solidity/issues/12973#issuecomment-1113959466",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12973",
    "id": 1113959466,
    "node_id": "IC_kwDOAm_5kc5CZawq",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-30T09:48:21Z",
    "updated_at": "2022-04-30T09:48:21Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report! I can confirm that this is reproducible on 0.8.13. Here's a slightly cleaned up repro:\r\n```solidity\r\ncontract C {\r\n    string public name = (C).name = type(C).name;\r\n}\r\n```\r\n```bash\r\nsolc test.sol --model-checker-engine all\r\n```\r\n```\r\nInternal compiler error:\r\n/solidity/libsolidity/formal/SMTEncoder.cpp(1596): Throw in function void solidity::frontend::SMTEncoder::indexOrMemberAssignment(const solidity::frontend::Expression&, const solidity::smtutil::Expression&)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Solidity assertion failed\r\n[solidity::util::tag_comment*] = Solidity assertion failed\r\n```\r\n\r\nBy the way, @pietroborrello if the Solidity sample is not huge, its best to just include it directly in the bug report. Also, if you run the sample though solc and that triggers an Internal Compiler Error (like I did above) that's a much simpler starting point and enough for us to investigate, no need to post the whole fuzzer output in that case. In any case thanks again for taking your time to report this!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1113959466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1114656630",
    "html_url": "https://github.com/ethereum/solidity/issues/12973#issuecomment-1114656630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12973",
    "id": 1114656630,
    "node_id": "IC_kwDOAm_5kc5CcE92",
    "user": {
      "login": "pietroborrello",
      "id": 18199462,
      "node_id": "MDQ6VXNlcjE4MTk5NDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/18199462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pietroborrello",
      "html_url": "https://github.com/pietroborrello",
      "followers_url": "https://api.github.com/users/pietroborrello/followers",
      "following_url": "https://api.github.com/users/pietroborrello/following{/other_user}",
      "gists_url": "https://api.github.com/users/pietroborrello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pietroborrello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pietroborrello/subscriptions",
      "organizations_url": "https://api.github.com/users/pietroborrello/orgs",
      "repos_url": "https://api.github.com/users/pietroborrello/repos",
      "events_url": "https://api.github.com/users/pietroborrello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pietroborrello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T09:21:02Z",
    "updated_at": "2022-05-02T09:21:02Z",
    "author_association": "NONE",
    "body": "Thank you for looking into this and for your kind reply. Next time I will follow your guidelines to ease your work :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1114656630/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
