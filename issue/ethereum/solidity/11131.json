{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11131",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11131/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11131/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11131/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11131",
  "id": 836774471,
  "node_id": "MDU6SXNzdWU4MzY3NzQ0NzE=",
  "number": 11131,
  "title": "[Optimizer] Legacy optimizer precomputes successive keccak256 from the same location but different size incorrectly",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376132438,
      "node_id": "MDU6TGFiZWwyMzc2MTMyNDM4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/codegen%20error",
      "name": "codegen error",
      "color": "000000",
      "default": false,
      "description": "Compiler generates invalid code. Critical."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-03-20T10:26:47Z",
  "updated_at": "2021-03-23T11:15:31Z",
  "closed_at": "2021-03-23T11:15:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n-->\r\n\r\n## Description\r\n\r\nThe following test does not revert when run on an EVM client after it has been optimised by the legacy optimiser (i.e., `solc --optimize test.sol`).\r\n\r\n```\r\ncontract C {\r\n  uint[] data;\r\n\r\n  function val() public {\r\n    assembly {\r\n        sstore(0, 2)\r\n        mstore(0, 0)\r\n        sstore(keccak256(0, 32), 234)\r\n        sstore(add(keccak256(0, 23), 1), 123)\r\n    }\r\n    assert(data[1] == 123);\r\n  }\r\n}\r\n```\r\n\r\nThe following assembly code is produced (only relevant snippet has been pasted)\r\n\r\n```\r\n...\r\n      0x02\r\n        /* \"test/libsolidity/semanticTests/test.sol\":85:86  0 */\r\n      0x00\r\n        /* \"test/libsolidity/semanticTests/test.sol\":78:90  sstore(0, 2) */\r\n      swap1\r\n      dup2\r\n      sstore\r\n        /* \"test/libsolidity/semanticTests/test.sol\":99:111  mstore(0, 0) */\r\n      dup1\r\n      mstore\r\n        /* \"test/libsolidity/semanticTests/test.sol\":145:148  234 */\r\n      0xea\r\n        /* \"test/libsolidity/semanticTests/test.sol\":127:143  keccak256(0, 32) */\r\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\r\n        /* \"test/libsolidity/semanticTests/test.sol\":120:149  sstore(keccak256(0, 32), 234) */\r\n      sstore\r\n        /* \"test/libsolidity/semanticTests/test.sol\":189:192  123 */\r\n      0x7b\r\n        /* \"test/libsolidity/semanticTests/test.sol\":165:187  add(keccak256(0,23),1) */\r\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\r\n        /* \"test/libsolidity/semanticTests/test.sol\":158:193  sstore(add(keccak256(0,23),1), 123) */\r\n      sstore\r\n```\r\n\r\nThe values of interest are `0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563` (`keccak256(0, 32)`) and `0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564` (`add(keccak256(0, 23), 1)`).\r\n\r\nThe bug is that the legacy optimiser \"pre-computes\" `keccak256(0, 23)` to be somehow equal to `keccak256(0, 32)` which is incorrect. Although the value at memory location is zero, `keccak256(0, 32) = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563` but `keccak256(0, 23) = 0xe2b9f9f9430b05bfa9a3abd3bac9a181434d23a707ef1cde8bd25d30203538d8`.\r\n\r\nBecause of the incorrect code, it turns out that `data[1] == 123` although the assembly operation `sstore(add(keccak256(0, 23), 1), 123)` is actually storing the value `123` to some unrelated storage slot.\r\n\r\nPlease note that the old code generator *without* optimisation enabled produces correct result (failing assertion because both the keccaks are not precomputed). The same holds true for new code gen with or without optimisation enabled.\r\n\r\n## Environment\r\n\r\n- Compiler version: 6e1d61a23\r\n- Target EVM version (as per compiler settings): NA\r\n\r\n## Steps to Reproduce\r\n\r\n- Copy paste test into Remix, compile with optimisation enabled (defaulting to 200 runs)\r\n- Deploy and run `val()`\r\n- Expected result: Run should fail\r\n- Actual result: Run succeeds",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11131/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11131/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803293670",
    "html_url": "https://github.com/ethereum/solidity/issues/11131#issuecomment-803293670",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11131",
    "id": 803293670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzI5MzY3MA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T11:22:44Z",
    "updated_at": "2021-03-20T11:22:44Z",
    "author_association": "MEMBER",
    "body": "At first glance, it looks like this may be the root cause (HT @hrkrshnn )\n https://github.com/ethereum/solidity/blob/6e1d61a232369e18b5d502f60ebd84ff83973237/libevmasm/KnownState.cpp#L381-L390\n\nIt looks like loadFromMemory always works at 32-byte granularity, so the fact that we are actually doing a sub-32-byte-word keccak is not taken into consideration. Anyway, good to get a quick ack, thanks once again for the pointer hrkrshnn\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/803293670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
