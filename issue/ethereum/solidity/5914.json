{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/5914/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/5914/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/5914/events",
  "html_url": "https://github.com/ethereum/solidity/issues/5914",
  "id": 405389176,
  "node_id": "MDU6SXNzdWU0MDUzODkxNzY=",
  "number": 5914,
  "title": "Optimizer does not properly re-use stack slots",
  "user": {
    "login": "aleph-v",
    "id": 20227705,
    "node_id": "MDQ6VXNlcjIwMjI3NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aleph-v",
    "html_url": "https://github.com/aleph-v",
    "followers_url": "https://api.github.com/users/aleph-v/followers",
    "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
    "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
    "organizations_url": "https://api.github.com/users/aleph-v/orgs",
    "repos_url": "https://api.github.com/users/aleph-v/repos",
    "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aleph-v/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2019-01-31T18:55:21Z",
  "updated_at": "2019-03-14T14:58:48Z",
  "closed_at": "2019-03-14T14:58:48Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The following should compile with enabled optimizer:\r\n```\r\npragma solidity ^0.5.3;\r\n\r\ncontract fib{\r\n    function calcluation() external returns(uint ret){\r\n        assembly{\r\n            let one := 1 \r\n            let two := 1 \r\n            let three := add(one, two)\r\n            let four := add(three, two)\r\n            let five := add(four, three)\r\n            let six := add(five, four)\r\n            let seven := add(six, five)\r\n            let eight := add(seven, six)\r\n            let nine := add(eight, seven)\r\n            let ten := add(nine, eight)\r\n            let eleven := add(ten, nine)\r\n            let twelve := add(eleven, ten)\r\n            let thirteen := add(twelve, eleven)\r\n            let fourteen := add(thirteen, twelve)\r\n            let fifteen := add(fourteen, thirteen)\r\n            let sixteen := add(fifteen, fourteen) //This line gives us 17 stack varibles so a complilation error\r\n            ret := sixteen\r\n        }\r\n    }\r\n}\r\n```\r\nOriginal report:\r\n\r\n--------\r\n\r\n<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of data requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported (check `feature` and `language design` labels).\r\n\r\n*Delete the above section and the instructions in the sections below before submitting*\r\n\r\n-->\r\n\r\n## Abstract\r\nAssembly pops should remove variables from the set of local variables since they free up space on the stack and allow the compiler to know which stack variables are unnecessary. This would allow 'pop' to remove stack depth compiler errors and developers more precisely control the stack.\r\n\r\n<!--\r\nPlease describe by example what problem you see in the current Solidity language\r\nand reason about it.\r\n-->\r\n\r\n## Motivation\r\nI have been building a cryptographic library to optimize elliptic curve verification for non solidity curves using solidity assembly. I have been hitting many \"Stack depth too deep try removing local variables\" and have had to turn to {} followed by blocks of if statements which wouldn't be needed inside of the {}. I know exactly which variables are unnecessary so I would like to be able to make solidity remove them from the local scope. Here's how awkward the code to remove stack depth errors looks in practice https://github.com/pvienhage/ghost-wallet/blob/master/contracts/p256.sol#L156  [not to mention that this extra jumpi is going to add close to 5K gas to my code because it has to be called up to 512 times]     \r\n<!--\r\nIn this section you describe how you propose to address the problem you described earlier,\r\nincluding by giving one or more exemplary source code snippets for demonstration.\r\n-->\r\n\r\n## Specification\r\nThe natural candidate for a keyword which delists a local variable is pop since it should be removing it from the stack anyway. After the implementation of this feature pop wouldn't just remove the variable from the stack but also clear it from the local variable context and thus allow access of a local variable which is in the 17th stack position [or addition of a new local variable]. \r\n\r\nPlease note that I don't have any experience with compilers so cannot provide a more detailed technical specification of how this would work with the internals of the compiler, sorry.\r\n<!--\r\nThe technical specification should describe the syntax and semantics of any new feature. The\r\nspecification should be detailed enough to allow any developer to implement the functionality.\r\n-->\r\n\r\n## Backwards Compatibility\r\nThis should cause little to no issues with backwards compatibility because (1) if variables are getting popped you can't use them again anyway (2) this is a pure assembly feature and very few programs hit the stack depth error in assembly.\r\n<!--\r\nAll language changes that introduce backwards incompatibilities must include a section describing\r\nthese incompatibilities and their severity.\r\n\r\nPlease describe how you propose to deal with these incompatibilities.\r\n-->",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/5914/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/5914/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460269616",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460269616",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460269616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDI2OTYxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T14:31:30Z",
    "updated_at": "2019-02-04T14:31:30Z",
    "author_association": "MEMBER",
    "body": "Can you provide specific small examples please? We recently improved the stack allocation logic, so what you are proposing might already be implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460269616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460327377",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460327377",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460327377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMyNzM3Nw==",
    "user": {
      "login": "aleph-v",
      "id": 20227705,
      "node_id": "MDQ6VXNlcjIwMjI3NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-v",
      "html_url": "https://github.com/aleph-v",
      "followers_url": "https://api.github.com/users/aleph-v/followers",
      "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-v/orgs",
      "repos_url": "https://api.github.com/users/aleph-v/repos",
      "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:03:06Z",
    "updated_at": "2019-02-04T17:08:55Z",
    "author_association": "NONE",
    "body": "```\r\npragma solidity ^0.5.3;\r\n\r\ncontract fib{\r\n    function calcluation() external returns(uint ret){\r\n        assembly{\r\n            let one := 1 \r\n            let two := 1 \r\n            let three := add(one, two)\r\n            let four := add(three, two)\r\n            let five := add(four, three)\r\n            let six := add(five, four)\r\n            let seven := add(six, five)\r\n            let eight := add(seven, six)\r\n            let nine := add(eight, seven)\r\n            let ten := add(nine, eight)\r\n            let eleven := add(ten, nine)\r\n            let twelve := add(eleven, ten)\r\n            let thirteen := add(twelve, eleven)\r\n            let fourteen := add(thirteen, twelve)\r\n            let fifteen := add(fourteen, thirteen)\r\n            pop(one) //We are removing local varibles, but no matter how many we remove we still get stack depth errors\r\n            pop(two)\r\n            pop(three)\r\n            pop(four)\r\n            pop(five)\r\n            pop(six)\r\n            let sixteen := add(fifteen, fourteen) //This line gives us 17 stack varibles so a complilation error\r\n            ret := sixteen\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn this case no matter how many local variables we remove we still get stack depth errors.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460327377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460330713",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460330713",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460330713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMzMDcxMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:11:47Z",
    "updated_at": "2019-02-04T17:11:47Z",
    "author_association": "MEMBER",
    "body": "Hm, this is weird - when you enable the optimizer, the code generator should actually re-use existing stack slots - you do not (and actually should not) use explicit pops.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460330713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460331895",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460331895",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460331895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMzMTg5NQ==",
    "user": {
      "login": "aleph-v",
      "id": 20227705,
      "node_id": "MDQ6VXNlcjIwMjI3NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-v",
      "html_url": "https://github.com/aleph-v",
      "followers_url": "https://api.github.com/users/aleph-v/followers",
      "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-v/orgs",
      "repos_url": "https://api.github.com/users/aleph-v/repos",
      "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:15:08Z",
    "updated_at": "2019-02-04T17:15:08Z",
    "author_association": "NONE",
    "body": "I'm not actually using the optimizer, since I've tried it on some of the assembly code I had written and it actually almost doubled the gas usage [which is because it is edge case code]. But I also just tried the code with the optimizer enabled and it still produced a stack depth error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460331895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460341241",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460341241",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460341241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0MTI0MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:41:03Z",
    "updated_at": "2019-02-04T17:41:03Z",
    "author_association": "MEMBER",
    "body": "Sorry for hijacking your feature proposal. We are thinking about explicit scopes for variables, which could be what you want, but I don't think `pop(a)` would be a nice syntax for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460341241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460341451",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460341451",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460341451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0MTQ1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:41:41Z",
    "updated_at": "2019-02-04T17:41:41Z",
    "author_association": "MEMBER",
    "body": "About the gas usage: Can you share some details? Did you try fiddling with the `--runs` parameter to adjust the tradeoff?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460341451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460345341",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460345341",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460345341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0NTM0MQ==",
    "user": {
      "login": "aleph-v",
      "id": 20227705,
      "node_id": "MDQ6VXNlcjIwMjI3NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-v",
      "html_url": "https://github.com/aleph-v",
      "followers_url": "https://api.github.com/users/aleph-v/followers",
      "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-v/orgs",
      "repos_url": "https://api.github.com/users/aleph-v/repos",
      "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T17:52:26Z",
    "updated_at": "2019-02-04T17:52:26Z",
    "author_association": "NONE",
    "body": "I was using the {} when I ran into this issue, but having a block based scoping system makes it had to implement some of the behavior I would want because then you can't end the scope inside of an if loop for example so I had to implement pairs of if loops inside and outside of scope. It may not be pop that makes it work but I still want more ability to manage scope.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460345341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460349697",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460349697",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460349697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0OTY5Nw==",
    "user": {
      "login": "aleph-v",
      "id": 20227705,
      "node_id": "MDQ6VXNlcjIwMjI3NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-v",
      "html_url": "https://github.com/aleph-v",
      "followers_url": "https://api.github.com/users/aleph-v/followers",
      "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-v/orgs",
      "repos_url": "https://api.github.com/users/aleph-v/repos",
      "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T18:04:35Z",
    "updated_at": "2019-02-04T18:04:35Z",
    "author_association": "NONE",
    "body": "Here's how my code reacts to the optimizer:\r\nNo optimizer: 324121 gas\r\n50 runs: 595414 \r\n100 runs: 587608\r\n200 runs: 584176\r\n500 runs: 584086\r\n2000 runs: 583309\r\n20000 runs: 317362\r\n200000 runs: 317362\r\nWhich means that the optimizer actually only ends up working better for more than 20 thousand runs",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460349697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460349859",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460349859",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460349859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0OTg1OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T18:04:57Z",
    "updated_at": "2019-02-04T18:04:57Z",
    "author_association": "MEMBER",
    "body": "Currently, enabling the optimizer should free the stack slot used by a variable as long as it is not used anymore (but it does not). We do not yet provide fine-grained control over the optimizer, so it is just an on/off-switch, but that should soon change. Then, you should be able to only activate storage slot allocation and none of the other optimizations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460349859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460350063",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460350063",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460350063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM1MDA2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T18:05:32Z",
    "updated_at": "2019-02-04T18:05:32Z",
    "author_association": "MEMBER",
    "body": "Which gas are you measuring? Deploy gas or runtime gas? Can you share the output assembly for the different settings?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460350063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460351217",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460351217",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460351217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM1MTIxNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T18:08:37Z",
    "updated_at": "2019-02-04T18:08:37Z",
    "author_association": "MEMBER",
    "body": "Ah I see, you have many big constants. If stored literally, big constants are extremely expensive at deploy time, but cheap at runtime. The `--runs` parameter will instruct the optimizer to select one among 3 or 4 ways to store them, each way has different trade-offs between deploy and runtime costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460351217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460355830",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460355830",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460355830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM1NTgzMA==",
    "user": {
      "login": "aleph-v",
      "id": 20227705,
      "node_id": "MDQ6VXNlcjIwMjI3NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20227705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-v",
      "html_url": "https://github.com/aleph-v",
      "followers_url": "https://api.github.com/users/aleph-v/followers",
      "following_url": "https://api.github.com/users/aleph-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-v/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-v/orgs",
      "repos_url": "https://api.github.com/users/aleph-v/repos",
      "events_url": "https://api.github.com/users/aleph-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T18:21:35Z",
    "updated_at": "2019-02-04T18:21:35Z",
    "author_association": "NONE",
    "body": "Ahhh yeah I figured it would be something like that where the cost was coming from somewhere else. I'm going to be using the big constants because I'd like to make the calls cheap for users, but it makes sense why the optimizer would weight for only this deployment. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460355830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460623404",
    "html_url": "https://github.com/ethereum/solidity/issues/5914#issuecomment-460623404",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5914",
    "id": 460623404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDYyMzQwNA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T12:39:42Z",
    "updated_at": "2019-02-05T12:39:42Z",
    "author_association": "MEMBER",
    "body": "I was thinking about this on the weekend and another useful feature we could introduce is constants, to aid the optimiser (`constant x = 0x1234` or `const x = 0x1234`). In the above example that could already save two stack slots.\r\n\r\n> We are thinking about explicit scopes for variables, which could be what you want, but I don't think `pop(a)` would be a nice syntax for that.\r\n\r\nInstead of `pop` we had `drop` in the Yul design, I think that is more suitable. Though I'm not sure I'd make it an expression (function) or a special statement: `drop x`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/460623404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
