{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1650/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1650/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1650/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1650",
  "id": 205452019,
  "node_id": "MDU6SXNzdWUyMDU0NTIwMTk=",
  "number": 1650,
  "title": "Support outside configuration values during compilation time",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-02-05T20:34:02Z",
  "updated_at": "2022-09-14T16:33:04Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "With the upcoming JSON compiler interface it would be easy to supply a list of values with types, e.g. this would be a new section in the JSON input:\r\n```\r\nglobals: {\r\n  \"name\": {\r\n    type: \"string\",\r\n    value: \"testToken\"\r\n  },\r\n  \"version\": {\r\n    type: \"uint256\",\r\n    value: 42\r\n  },\r\n  \"registryAddress\": {\r\n    type: \"address\",\r\n    value: 0x42...\r\n  }\r\n}\r\n```\r\n\r\nThese values could be either defined as contract level variables or more preferably a special method could be used to retrieve them:\r\n```\r\ncontract A {\r\n  function tokenName() returns (string) {\r\n     return globals(\"name\");\r\n  }\r\n}\r\n```\r\n\r\nFixes #242.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1650/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1650/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279407543",
    "html_url": "https://github.com/ethereum/solidity/issues/1650#issuecomment-279407543",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
    "id": 279407543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTQwNzU0Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T14:30:42Z",
    "updated_at": "2017-02-13T14:31:10Z",
    "author_association": "MEMBER",
    "body": "I would prefer this to be more explicit and part of the language at the same time. It could work as follows:\r\n\r\nWhen compiling, you supply one file literally:\r\n```\r\n\"globals\": 'string constant testToken = \"abc\"; uint constant version = 42; address constant registryAddress = 0x42;'\r\n```\r\n\r\nAnd when you want to refer to them in Solidity code, you use:\r\n\r\n```\r\nimport {testToken} from \"globals\";\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279407543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279705182",
    "html_url": "https://github.com/ethereum/solidity/issues/1650#issuecomment-279705182",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
    "id": 279705182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTcwNTE4Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T13:21:08Z",
    "updated_at": "2017-02-14T13:21:08Z",
    "author_association": "MEMBER",
    "body": "> import {testToken} from \"globals\";\r\n\r\nI like using imports for that. How about making this:\r\n```\r\nimport {testToken};\r\nimport {testToken as globalTokenName};\r\n```\r\n\r\nBecause I still do like defining them as a non-snippet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/279705182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/320953878",
    "html_url": "https://github.com/ethereum/solidity/issues/1650#issuecomment-320953878",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
    "id": 320953878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk1Mzg3OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T13:21:03Z",
    "updated_at": "2017-08-08T13:21:03Z",
    "author_association": "MEMBER",
    "body": "My current proposal is:\r\n\r\nJSON I/O\r\n```\r\nglobals: {\r\n  \"name\": {\r\n    type: \"string\",\r\n    value: \"testToken\"\r\n  },\r\n  \"version\": {\r\n    type: \"uint256\",\r\n    value: 42\r\n  },\r\n  \"registryAddress\": {\r\n    type: \"address\",\r\n    value: 0x42...\r\n  }\r\n}\r\n```\r\n\r\nContract:\r\n```\r\nimport {name as thisTokenName};\r\nimport {registryAddress};\r\n\r\ncontract A {\r\n  function tokenName() returns (string) {\r\n    return thisTokenName;\r\n  }\r\n  function registry() returns (address) {\r\n    return registryAddress;\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/320953878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942412565",
    "html_url": "https://github.com/ethereum/solidity/issues/1650#issuecomment-942412565",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
    "id": 942412565,
    "node_id": "IC_kwDOAm_5kc44LBMV",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T15:19:43Z",
    "updated_at": "2021-10-13T15:19:43Z",
    "author_association": "MEMBER",
    "body": "We discussed this on the call today:\r\n- We'd prefer not to introduce any new syntax for this at the language level.\r\n- Hardhat apparently already has a preprocessor plugin: [hardhat-preprocessor](https://hardhat.org/plugins/hardhat-preprocessor.html) so it does not need this feature.\r\n- We already have support for file-level constants, which get you pretty close to this. You then only have to have a system for providing values for these constants rather than a full-blown preprocessor.\r\n    - Conditions using such constants can be evaluated at compilation time, which means that if you use them in an `if`, the unused branch will be removed from your bytecode by the optimizer.\r\n    - Even manually changing values of these constants is not that much more tedious than supplying parameters to the compiler. The real problem is the use case where values come from tool's own configuration and that will require specific support in every tool no matter whether compiler accepts the values as parameters or rendered into the source code.\r\n- Overall this is something that would be better off done at the tool level because the amount of real work to do by the compiler here is very small and probably not worth complicating the interface. And it's actually redundant - instead of adding extra parameters to Standard JSON input, a framework can just do simple search and replace on sources included in it.\r\n    - The problem here is that if every tool introduces its own syntax for it, switching between tools becomes harder. For example using a framework and vscode-solidity would be hard.\r\n    - @axic proposed that we might be better off standardizing common templating syntax for these substitutions and letting each tool do the actual substitution on its own.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942412565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942420580",
    "html_url": "https://github.com/ethereum/solidity/issues/1650#issuecomment-942420580",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1650",
    "id": 942420580,
    "node_id": "IC_kwDOAm_5kc44LDJk",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T15:28:10Z",
    "updated_at": "2021-10-13T15:28:33Z",
    "author_association": "MEMBER",
    "body": "As for specific syntax proposal, we could standardize some kind of substitution marker. The `{{ x }}` from Jinja comes to mind, though double braces are a valid syntax so it should rather be something that would not clash. Maybe something like this:\r\n```solidity\r\nenum BuildType {\r\n    Release,\r\n    Debug\r\n}\r\n\r\nuint constant MAX_SIZE = #{{ globals.max_size }};\r\nstring constant network = \"#{{ globals.network }}\";\r\nBuildType constant buildType = BuildType.#{{ globals.build_type }};\r\n```\r\nLooking at the grammar, it seems that we're not using `#` for anything.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942420580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
