{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11469/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11469/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11469/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11469",
  "id": 908238491,
  "node_id": "MDU6SXNzdWU5MDgyMzg0OTE=",
  "number": 11469,
  "title": "Add type().length for enums",
  "user": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2021-06-01T12:25:59Z",
  "updated_at": "2021-09-01T13:43:06Z",
  "closed_at": "2021-09-01T13:43:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nAdd a mechanism to get the number of entries in an Enum using the enum's name\r\n\r\n```\r\ncontract Test {\r\n    enum MyEnum { A, B, C, D }\r\n    \r\n    function length() external view returns (uint8) {\r\n        return type(MyEnum).length; // Should return 4\r\n    } \r\n```\r\n\r\n## Motivation\r\n\r\nThere is already a mechanism to get `type().min` and `type().max` for integers types. In some cases it might be necessary to check if a `uint` does match an enum without reverting (casting will revert of not within limits)\r\n\r\n## Specification\r\n\r\n`type(MyEnum).length` should returns a `uin8`\r\n\r\n## Alternative\r\n\r\nAn alternative would be to have `type(MyEnum).min` and `type(MyEnum).max` supported.\r\n- `.min` would always return 0\r\n- `.max` would return the length\r\n\r\n## Backwards Compatibility\r\nN/A",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11469/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11469/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852102866",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-852102866",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 852102866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjEwMjg2Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-01T12:57:47Z",
    "updated_at": "2021-06-01T12:57:47Z",
    "author_association": "MEMBER",
    "body": "Why `.length` and not `.min`/`.max` (even if min currently is a constant 0)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852102866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852131870",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-852131870",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 852131870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjEzMTg3MA==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-01T13:38:12Z",
    "updated_at": "2021-06-01T13:38:12Z",
    "author_association": "NONE",
    "body": "Min / Max would work just fine I guess.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852131870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852991610",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-852991610",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 852991610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mjk5MTYxMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-02T12:38:10Z",
    "updated_at": "2021-06-02T12:38:10Z",
    "author_association": "MEMBER",
    "body": "@Amxx could you please explain a bit more how you would use this feature and why the current set of features is not sufficient?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/852991610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853679362",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-853679362",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 853679362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzY3OTM2Mg==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T08:15:53Z",
    "updated_at": "2021-06-03T08:15:53Z",
    "author_association": "MEMBER",
    "body": "If it's `min` and `max`, I think it should be returning a value in the Enum instead of `uint8`. In the example above, it would be `MyEnum.A` and `MyEnum.D` respectively.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853679362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853713751",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-853713751",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 853713751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzcxMzc1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T09:06:15Z",
    "updated_at": "2021-06-03T09:06:15Z",
    "author_association": "MEMBER",
    "body": "Actually I just checked and the enum values are indeed `<`-comparable, so `min` / `max` would make sense, and I agree with @hrkrshnn that the values should be of the enum type.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853713751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853742744",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-853742744",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 853742744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mzc0Mjc0NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T09:51:31Z",
    "updated_at": "2021-06-03T09:51:31Z",
    "author_association": "MEMBER",
    "body": "We did discuss during the meeting, that potentially a more generic solution following #11284 is to have something akin to Rust's \"try_convert\". That would return a boolean in case of failure, unlike the compiler generated error we have on out-of-bounds int to enum casting today.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853742744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853746865",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-853746865",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 853746865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mzc0Njg2NQ==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T09:58:26Z",
    "updated_at": "2021-06-03T10:00:06Z",
    "author_association": "NONE",
    "body": "> @Amxx could you please explain a bit more how you would use this feature and why the current set of features is not sufficient?\r\n\r\nI don't like justifying with my particular usecase, because I always have the feeling the my usecase is just one of many cases, and not necessarily the best one. Also, this doesn't allow to do anything that was impossible before. It just helps (just like `type(uint256).max` doesn't really provide that was not possible to express before).\r\n\r\nThat being said, here is an idea of a library. It defines a structure that is holding arbitrary values, but has a few \"reserved values\" at the beginning of the rang. In my case the arbitrary values are timestamp, so no realistic risk of clash\r\n\r\n```\r\nlibrary MyLib {\r\n    enum ReservedValues {\r\n        Unset,    // 0\r\n        Finished, // 1\r\n        Canceled, // 2\r\n        length\r\n    }\r\n\r\n    struct MyStruct {\r\n        uint256 _value;\r\n    }\r\n\r\n    function getValue(MyStruct memory s) internal pure returns (uint256) {\r\n        return s._value;\r\n    }\r\n\r\n    // ... lot of stuff ...\r\n\r\n    function isUnset(MyStruct memory s) internal pure returns (bool) {\r\n        return getValue(s) == uint256(ReservedTimestamps.Unset);\r\n    }\r\n\r\n    function isFinished(MyStruct memory s) internal pure returns (bool) {\r\n        return getValue(s) == uint256(ReservedTimestamps.Finished);\r\n    }\r\n    \r\n    function isCanceled(MyStruct memory s) internal pure returns (bool) {\r\n        return getValue(s) == uint256(ReservedTimestamps.Canceled);\r\n    }\r\n\r\n    function isOther(MyStruct memory s) internal pure returns (bool) {\r\n        return getValue(s) >= uint256(ReservedTimestamps.length);\r\n    }\r\n\r\n    // ... lot of stuff ...\r\n}\r\n```\r\n\r\n\r\nAs you can see, I have a mechanism to check if the value is reserved or not, by comparing it to the length. To get the length, my trick is to add a `length` element a the end of the enum. This works great but I'm worried that someone might fork it, add elements AFTER the length entry in the enum, and break everything. This is why I imagined that a `length` / `max` / `last` mechanism would be safer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/853746865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857588266",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-857588266",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 857588266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzU4ODI2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-09T10:41:58Z",
    "updated_at": "2021-06-09T10:41:58Z",
    "author_association": "MEMBER",
    "body": "@axic any results on finding a more generic solution? We could just add `.min` / `.max` for now, too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857588266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857656797",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-857656797",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 857656797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzY1Njc5Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-09T12:35:39Z",
    "updated_at": "2021-06-09T12:35:39Z",
    "author_association": "MEMBER",
    "body": "We decided in the call that we will implement this a min/max.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857656797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857657455",
    "html_url": "https://github.com/ethereum/solidity/issues/11469#issuecomment-857657455",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11469",
    "id": 857657455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzY1NzQ1NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-09T12:36:39Z",
    "updated_at": "2021-06-09T12:36:39Z",
    "author_association": "MEMBER",
    "body": "Apart from https://github.com/ethereum/solidity/issues/11469#issuecomment-853742744, no. At the time we handle conversion changes, that will be a larger breaking release, and it would be possible to drop `.min`/`.max` if it does not seem appropriate anymore. Even if it is not dropped, the conversions may be a better way to handle this in user code, but users are free to choose.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/857657455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
