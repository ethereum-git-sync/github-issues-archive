{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11035/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11035/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11035/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11035",
  "id": 820932594,
  "node_id": "MDU6SXNzdWU4MjA5MzI1OTQ=",
  "number": 11035,
  "title": "[yul] datasize use can be problematic if compiler generated code uses it in a stateful way",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-03-03T09:39:30Z",
  "updated_at": "2021-03-04T19:41:28Z",
  "closed_at": "2021-03-04T19:41:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n-->\r\n\r\n## Description\r\n\r\n```\r\nobject \"object0\" {\r\n  code {\r\n    {\r\n      mstore(0, 0)\r\n      sstore(add(datasize(\"object0\"),0), 0x80000000000000000000000000000000000000)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nwill lead to different storage pre/post optimisation. This is expected because the `mstore(0,0)` is going to be optimised out by the optimiser (haven't verified this but I'm pretty sure it will be), shrinking the object such that `datasize` for the optimised case is going to be off by a byte or so (and hence execute the store at a different slot).\r\n\r\nRelated to #7411",
  "closed_by": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11035/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11035/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789630468",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-789630468",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 789630468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTYzMDQ2OA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T11:02:52Z",
    "updated_at": "2021-03-03T11:02:52Z",
    "author_association": "MEMBER",
    "body": "I don't think `mstore(0, 0)` will be optimized out. Currently we never remove unused writes to memory.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789630468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789635234",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-789635234",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 789635234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTYzNTIzNA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T11:10:38Z",
    "updated_at": "2021-03-03T11:10:38Z",
    "author_association": "MEMBER",
    "body": "Although, you could probably replace `mstore` with something else that would be removed, right? Currently, we don't seem to consider the side effect of `datasize` anywhere. Not sure if we should.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789635234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789704012",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-789704012",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 789704012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTcwNDAxMg==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T13:11:33Z",
    "updated_at": "2021-03-03T13:11:33Z",
    "author_association": "MEMBER",
    "body": "> I don't think `mstore(0, 0)` will be optimized out. Currently we never remove unused writes to memory.\r\n\r\nAh sorry, I somehow thought we did. I think what's happening is that the `add(datasize(..), 0` is optimized to just `datasize(..)` in that case leading to a couple of fewer bytes (not sure exactly but I guess 1 additional byte for add, and 2 bytes for PUSH0 and 0x0)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789704012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789721688",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-789721688",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 789721688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTcyMTY4OA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T13:41:33Z",
    "updated_at": "2021-03-03T13:41:33Z",
    "author_association": "MEMBER",
    "body": "> Currently, we don't seem to consider the side effect of `datasize` anywhere. Not sure if we should.\r\n\r\nMe too. I'm trying to think one can make a different argument than what we did for `msize` (see #7411). It may be unlikely that the compiler generated code would contain `datasize` in the way that would lead to a side-effect in which case the only circumstance in which this would be problematic is user-written code but with the latter I doubt if there is a real use-case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789721688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789884995",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-789884995",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 789884995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTg4NDk5NQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T17:03:08Z",
    "updated_at": "2021-03-03T17:03:08Z",
    "author_association": "MEMBER",
    "body": "About `msize`: I would say it's an exception since a user can always use it in inline assembly. I don't think `solc` generates `msize` otherwise. Currently, many steps are disabled if the AST has `msize`.\r\n\r\nThe situation here is akin to the following: `extcodesize(<address>)` would have different value depending on whether the contract to be deployed at `<address>` is optimized or not. \r\n\r\nI think we can ignore this problem. Would this lead to a lot of false positives?\r\n\r\n----\r\nAlso, the self-referential `datasize` doesn't look right. Let me see if that is well-defined.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/789884995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790059065",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-790059065",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 790059065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDA1OTA2NQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T21:13:53Z",
    "updated_at": "2021-03-03T21:13:53Z",
    "author_association": "MEMBER",
    "body": "> I think we can ignore this problem. Would this lead to a lot of false positives?\r\n\r\nI agree. Since this issue only occurs when driving evmone and not the yul interpreter (datasize in yul interpreter returns a constant), this is somewhat particular to https://github.com/ethereum/solidity/pull/11028 that is in draft mode.\r\n\r\nI think we can work around by simply not generating \"problematic\" uninteresting opcodes from a bug-finding point of view like address(), gas(), datasize() etc.\r\n\r\nMay be implemented using a flag (meant to be used when targeting evm client).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790059065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790767641",
    "html_url": "https://github.com/ethereum/solidity/issues/11035#issuecomment-790767641",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11035",
    "id": 790767641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDc2NzY0MQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-04T16:58:58Z",
    "updated_at": "2021-03-04T16:59:23Z",
    "author_association": "MEMBER",
    "body": "This may be closed once #11028 is merged because this ~~bug~~ issue only appears while fuzzing on evmone.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/790767641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
