{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/339",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/339/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/339/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/339/events",
  "html_url": "https://github.com/ethereum/solidity/issues/339",
  "id": 125021288,
  "node_id": "MDU6SXNzdWUxMjUwMjEyODg=",
  "number": 339,
  "title": "formal: Syntax error on empty state.",
  "user": {
    "login": "androlo",
    "id": 2809499,
    "node_id": "MDQ6VXNlcjI4MDk0OTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/androlo",
    "html_url": "https://github.com/androlo",
    "followers_url": "https://api.github.com/users/androlo/followers",
    "following_url": "https://api.github.com/users/androlo/following{/other_user}",
    "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
    "organizations_url": "https://api.github.com/users/androlo/orgs",
    "repos_url": "https://api.github.com/users/androlo/repos",
    "events_url": "https://api.github.com/users/androlo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/androlo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2016-01-05T18:13:49Z",
  "updated_at": "2016-07-27T10:16:52Z",
  "closed_at": "2016-07-27T10:16:48Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Two issues with solc --formal.\n\n1 - Wrong output filename.\n\n`solc --formal -o . TheFile.sol` outputs `solidity.mlw` instead of file name.\n\n2 - Error when running the binary search solidity source file.\n\n```\nandreas@AndreasLT:~/WebstormProjects/StoryBlocks/contracts/etc$ why3 ide solidity.mlwError while reading file '../solidity.mlw':\nFile \"solidity/../solidity.mlw\", line 22, characters 1-2:\nsyntax error\n```\n\nLine(s) in question.\n\n```\ntype state = {\n}\n```\n\nSwitching to `type state = StateUnused` will make it run and all goals proved (both by Alt-Ergo and Z3).\n\n**Spec**\n\nOS: Ubuntu 14.04, 64 bit\n\nSolidity: `Version: 0.2.0-02e4aa94/.-Linux/g++/int linked to libethereum-1.1.0-34716679/.-Linux/g++/int`\n\nWhy3 platform: `version 0.86.2`\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/339/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/339/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/169087064",
    "html_url": "https://github.com/ethereum/solidity/issues/339#issuecomment-169087064",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/339",
    "id": 169087064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTA4NzA2NA==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T18:18:09Z",
    "updated_at": "2016-01-05T18:18:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "With binary search i of course mean this:\n\n```\ncontract BinarySearch {\n  ///@why3\n  /// requires { arg_data.length < UInt256.max_uint256 }\n  /// requires { 0 <= to_int arg_begin <= to_int arg_end <= arg_data.length }\n  /// requires { forall i j: int. 0 <= i <= j < arg_data.length -> to_int arg_data[i] <= to_int arg_data[j] }\n  /// variant { to_int arg_end - to_int arg_begin }\n  /// ensures {\n  ///   to_int result < UInt256.max_uint256 -> (to_int arg_begin <= to_int result < to_int arg_end && to_int arg_data[to_int result] = to_int arg_value)\n  /// }\n  /// ensures {\n  ///   to_int result = UInt256.max_uint256 -> (forall i: int. to_int arg_begin <= i < to_int arg_end -> to_int arg_data[i] <> to_int arg_value)\n  /// }\n  function find_internal(uint[] data, uint begin, uint end, uint value) internal returns (uint ret) {\n    uint len = end - begin;\n    if (len == 0 || (len == 1 && data[begin] != value)) {\n      return 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n    }\n    uint mid = begin + len / 2;\n    uint v = data[mid];\n    if (value < v)\n      return find_internal(data, begin, mid, value);\n    else if (value > v)\n      return find_internal(data, mid + 1, end, value);\n    else\n      return mid;\n  }\n\n  ///@why3\n  /// requires { arg_data.length < UInt256.max_uint256 }\n  /// requires { forall i j: int. 0 <= i <= j < arg_data.length -> to_int arg_data[i] <= to_int arg_data[j] }\n  /// ensures {\n  ///   to_int result < UInt256.max_uint256 -> to_int arg_data[to_int result] = to_int arg_value\n  /// }\n  /// ensures {\n  ///   to_int result = UInt256.max_uint256 -> forall i: int. 0 <= i < arg_data.length -> to_int arg_data[i] <> to_int arg_value\n  /// }\n  function find(uint[] data, uint value) returns (uint ret) {\n    return find_internal(data, 0, data.length, value);\n  }\n}\n```\n\nOutput:\n\n```\n\n\nmodule UInt256\n    use import mach.int.Unsigned\n    type uint256\n    constant max_uint256: int = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    clone export mach.int.Unsigned with\n        type t = uint256,\n        constant max = max_uint256\nend\n\nmodule Contract_BinarySearch\n    use import int.Int\n    use import ref.Ref\n    use import map.Map\n    use import array.Array\n    use import int.ComputerDivision\n    use import mach.int.Unsigned\n    use import UInt256\n    exception Ret\n    type state = {\n    }\n    let rec _find_internal (state: state) (arg_data: array uint256) (arg_begin: uint256) (arg_end: uint256) (arg_value: uint256):\n            (uint256)\n         requires { arg_data.length < UInt256.max_uint256 } requires { 0 <= to_int arg_begin <= to_int arg_end <= arg_data.length } requires { forall i j: int. 0 <= i <= j < arg_data.length -> to_int arg_data[i] <= to_int arg_data[j] } variant { to_int arg_end - to_int arg_begin } ensures {   to_int result < UInt256.max_uint256 -> (to_int arg_begin <= to_int result < to_int arg_end && to_int arg_data[to_int result] = to_int arg_value) } ensures {   to_int result = UInt256.max_uint256 -> (forall i: int. to_int arg_begin <= i < to_int arg_end -> to_int arg_data[i] <> to_int arg_value) }\n        =\n        let _data = ref arg_data in\n        let _begin = ref arg_begin in\n        let _end = ref arg_end in\n        let _value = ref arg_value in\n        let _ret: ref uint256 = ref (of_int 0) in\n        let _len: ref uint256 = ref (of_int 0) in\n        let _mid: ref uint256 = ref (of_int 0) in\n        let _v: ref uint256 = ref (of_int 0) in\n        try\n        begin\n            _len := (!(_end) - !(_begin));\n            if ((!(_len) = (of_int 0)) || (((!(_len) = (of_int 1)) && ((!(_data)[to_int !(_begin)]) <> !(_value))))) then\n            begin\n                begin _ret := (of_int 115792089237316195423570985008687907853269984665640564039457584007913129639935); raise Ret end\n            end;\n            _mid := (!(_begin) + (!(_len) / (of_int 2)));\n            _v := (!(_data)[to_int !(_mid)]);\n            if (!(_value) < !(_v)) then\n                begin _ret := (_find_internal state !(_data) !(_begin) !(_mid) !(_value)); raise Ret end\n            else\n                if (!(_value) > !(_v)) then\n                    begin _ret := (_find_internal state !(_data) (!(_mid) + (of_int 1)) !(_end) !(_value)); raise Ret end\n                else\n                    begin _ret := !(_mid); raise Ret end\n        end;\n        raise Ret\n        with Ret -> (!_ret)\n    end\n    let rec _find (state: state) (arg_data: array uint256) (arg_value: uint256):\n            (uint256)\n         requires { arg_data.length < UInt256.max_uint256 } requires { forall i j: int. 0 <= i <= j < arg_data.length -> to_int arg_data[i] <= to_int arg_data[j] } ensures {   to_int result < UInt256.max_uint256 -> to_int arg_data[to_int result] = to_int arg_value } ensures {   to_int result = UInt256.max_uint256 -> forall i: int. 0 <= i < arg_data.length -> to_int arg_data[i] <> to_int arg_value }\n        =\n        let _data = ref arg_data in\n        let _value = ref arg_value in\n        let _ret: ref uint256 = ref (of_int 0) in\n        try\n        begin\n            begin _ret := (_find_internal state !(_data) (of_int 0) (of_int !(_data).length) !(_value)); raise Ret end\n        end;\n        raise Ret\n        with Ret -> (!_ret)\n    end\nend\n\n\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/169087064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/169963435",
    "html_url": "https://github.com/ethereum/solidity/issues/339#issuecomment-169963435",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/339",
    "id": 169963435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTk2MzQzNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T10:56:46Z",
    "updated_at": "2016-01-08T10:56:46Z",
    "author_association": "MEMBER",
    "body": "The fact that the file is named `solidity.mlw` is intentional because you can supply multiple input files and will only get one output file. The problem with empty state actually is a bug, though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/169963435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/170019707",
    "html_url": "https://github.com/ethereum/solidity/issues/339#issuecomment-170019707",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/339",
    "id": 170019707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDAxOTcwNw==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T14:38:23Z",
    "updated_at": "2016-01-08T14:38:23Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/170019707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235545516",
    "html_url": "https://github.com/ethereum/solidity/issues/339#issuecomment-235545516",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/339",
    "id": 235545516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU0NTUxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T10:16:48Z",
    "updated_at": "2016-07-27T10:16:48Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/ethereum/solidity/pull/720\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235545516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
