{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7659",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7659/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7659/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7659/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7659",
  "id": 519379190,
  "node_id": "MDU6SXNzdWU1MTkzNzkxOTA=",
  "number": 7659,
  "title": "[yul] optimizer: Redundant check in expression simplifier?",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-11-07T16:35:17Z",
  "updated_at": "2019-11-11T11:33:00Z",
  "closed_at": "2019-11-11T10:57:08Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI was curious why https://github.com/ethereum/solidity/blob/ed7be7b9c76c71ea1915a8f70eb42b337dc15c15/libyul/optimiser/ExpressionSimplifier.cpp#L51-L52 was never satisfied (i.e., Expression simplifier never returns early)\r\n\r\nSo, I spent some time understanding why, with the theory that perhaps some limitation of the test generator was leading to the constraint always being false.\r\n\r\nThe constraint is the following\r\n```\r\n  if (match->removesNonConstants && !SideEffectsCollector(m_dialect, _expression).movable())\r\n```\r\n\r\nwhich iirc means\r\n  - the expression being visited by the expression simplifier matches a simplification rule that removes non constants (set A)\r\n  - Side effects collector reports the same expression to be not movable (set B)\r\n\r\nAfter spending some time reading optimizer code, I came to the conclusion that the intersection of sets A and B is essentially null and that is the reason for the check never being satisfied by any test generated by the fuzzer.\r\n\r\nThe way I reasoned about this is by first looking at all instructions that have a \"not movable\" side-effect. Most of this is documented here:\r\nhttps://github.com/ethereum/solidity/blob/develop/libevmasm/Instruction.cpp#L179\r\n\r\nIf a \"not movable\" instruction contains a simplification rule pattern, we have a non-null intersection of sets A and B. In reality, there is no such instruction that is \"not movable\" for which we presently have a simplification rule pattern.\r\n\r\nDid I get this right? Unless we expect to, one day, have a simplification rule for an unmovable instruction, we can do away with that if statement in the expression simplifier, since it is redundant. What do you think?",
  "closed_by": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7659/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7659/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/551209907",
    "html_url": "https://github.com/ethereum/solidity/issues/7659#issuecomment-551209907",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7659",
    "id": 551209907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIwOTkwNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T18:42:12Z",
    "updated_at": "2019-11-07T18:42:12Z",
    "author_association": "MEMBER",
    "body": "Note that the side effects collector is run on the full expression, so what we actually want to determine is if some arguments to the instructions are non-movable. Since the expression simplifier is usually run after the expression splitter, the arguments tend to be variables which are always movable. There is one exception to this: Conditions in for loops cannot be split and thus could have non-movable arguments, but nowadays, we also have the \"for loop condition into body\" step, which could also prevent this line from being hit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/551209907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/552395139",
    "html_url": "https://github.com/ethereum/solidity/issues/7659#issuecomment-552395139",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7659",
    "id": 552395139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjM5NTEzOQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T10:57:08Z",
    "updated_at": "2019-11-11T10:57:08Z",
    "author_association": "MEMBER",
    "body": "Ah I see. I can reproduce the branch in question getting covered when ExpressionSimplifier step is run by itself. I can also reproduce the branch not getting covered when expression splitter is run before simplifier; also the case when the expression happens to be a for-loop condition and loop-condition-into-body followed by expression splitter making the branch false in expression simplifier.\r\n\r\nWill mark this specific case as impossible to reach as the optimizer suite stands.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/552395139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
