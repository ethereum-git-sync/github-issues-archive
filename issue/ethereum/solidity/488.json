{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/488",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/488/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/488/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/488/events",
  "html_url": "https://github.com/ethereum/solidity/issues/488",
  "id": 146742015,
  "node_id": "MDU6SXNzdWUxNDY3NDIwMTU=",
  "number": 488,
  "title": "Error message: Assembly can't access storage variables by name",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2016-04-07T21:06:30Z",
  "updated_at": "2016-08-05T15:29:41Z",
  "closed_at": "2016-08-05T15:29:41Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This fails:\n\n```\n    uint b;\n    function a() {\n        assembly {\n            b := 1\n        }\n    }\n```\n\nwith `Error: Identifier \"b\" not found, not unique or not lvalue.`\n\nThis works:\n\n```\n    uint b;\n    function a() {\n        uint _b;\n        assembly {\n            _b := 1\n        }\n        b = _b;\n    }\n```\n\nWell basically there's no way to access storage variables by name?\n\nAlso separately, using `sstore` returns an error message which could be improved:\n\n```\n    bytes b;\n    function a() {\n        assembly {\n            sstore(b, 1)\n        }\n    }\n```\n\nIt says: `Error: Expected instruction(s) to deposit 1 item(s) to the stack, but did deposit 2 item(s).`\n\n(`sstore` expects a storage location)\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/488/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/488/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207358769",
    "html_url": "https://github.com/ethereum/solidity/issues/488#issuecomment-207358769",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/488",
    "id": 207358769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzM1ODc2OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T10:07:56Z",
    "updated_at": "2016-04-08T10:09:03Z",
    "author_association": "MEMBER",
    "body": "It is actually all in the documentation: https://solidity.readthedocs.org/en/latest/control-structures.html#assignments\nYou cannot assign to storage variables, you have to use `sstore`, this is due to the low-level nature of inline assembly, `:=` _always_ translates into a swap/pop combination.\n\nThe docs also say that if you access state variables in an rvalue context, the will occupy two slots on the stack: https://solidity.readthedocs.org/en/latest/control-structures.html#access-to-external-variables\n\nI don't see a way how to improve the error message and still retain the flexibility of the inline assembly system itself. If you want, you can add that to the FAQ, though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207358769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207848017",
    "html_url": "https://github.com/ethereum/solidity/issues/488#issuecomment-207848017",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/488",
    "id": 207848017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzg0ODAxNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-09T20:17:34Z",
    "updated_at": "2016-04-09T20:40:16Z",
    "author_association": "MEMBER",
    "body": "In case 1) the error (if possible) should say something along the lines of `Indentifier \"b\" is a storage location. It cannot be used directly in inline assembly.`\n\nIn the case of `sstore(b, 1)` and `sload(b)` I think using `b` should refer to the storage location. Similarly how memory locations are handled in inline assembly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/207848017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/217810860",
    "html_url": "https://github.com/ethereum/solidity/issues/488#issuecomment-217810860",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/488",
    "id": 217810860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzgxMDg2MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T08:55:43Z",
    "updated_at": "2016-05-09T08:55:43Z",
    "author_association": "MEMBER",
    "body": "I agree that the error message could be improved, but there are actually a number of other identifiers that are not available like this in inline assembly. I'll think about it.\n\nFor the second part of your comment above: The problem is that `b` takes 33 bytes (32 bytes for the storage location plus one byte for the offset inside the storage slot). It could be an option to remove the intra-slot offset if it is zero, but that will complicate the rules, I would say.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/217810860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/220374659",
    "html_url": "https://github.com/ethereum/solidity/issues/488#issuecomment-220374659",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/488",
    "id": 220374659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM3NDY1OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T16:13:34Z",
    "updated_at": "2016-05-19T16:13:34Z",
    "author_association": "MEMBER",
    "body": "To clarify:\n- any storage variable which has an offset (i.e. is smaller than 256 bits) will have both the storage location + offset on the stack\n- any variable which is at least 256 bits wide will have its location on the stack - therefore case 3 above could/should work\n\nHaving a proper error message printed in case 1 would be useful, but perhaps it requires too many changes regarding processing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/220374659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
