{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9752",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9752/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9752/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9752/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9752",
  "id": 695029291,
  "node_id": "MDU6SXNzdWU2OTUwMjkyOTE=",
  "number": 9752,
  "title": "Unclear / incorrect overload resolution when using named arguments",
  "user": {
    "login": "magus237",
    "id": 5021776,
    "node_id": "MDQ6VXNlcjUwMjE3NzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5021776?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/magus237",
    "html_url": "https://github.com/magus237",
    "followers_url": "https://api.github.com/users/magus237/followers",
    "following_url": "https://api.github.com/users/magus237/following{/other_user}",
    "gists_url": "https://api.github.com/users/magus237/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/magus237/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/magus237/subscriptions",
    "organizations_url": "https://api.github.com/users/magus237/orgs",
    "repos_url": "https://api.github.com/users/magus237/repos",
    "events_url": "https://api.github.com/users/magus237/events{/privacy}",
    "received_events_url": "https://api.github.com/users/magus237/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-09-07T12:00:06Z",
  "updated_at": "2020-09-09T14:55:27Z",
  "closed_at": "2020-09-09T14:55:27Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Reporting this after discussing with @chriseth .\r\n\r\nWhen using named arguments, it looks as if overload resolution was performed using the types of the named arguments _in the order they are provided_, instead of trying to _reorder them as in the function header.\r\n\r\nThe following code illustrates the problem (functions g2* and g3*):\r\n```\r\ncontract C  {\r\n  int x;\r\n  string y;\r\n\r\n  function f1 (string memory y_, int x_) public { x = x_ + 1; y = y_; }\r\n  function f1 (int x_, string memory y_) public { x = x_; y = y_; }\r\n  function g11 () public { f1({y_:\"foo\", x_:42}); } // calls first f1\r\n  function g12 () public { f1({x_:42, y_:\"foo\"}); } // calls second f1\r\n\r\n  function f2 (int z_, string memory y_, int x_) public { x = x_ + 1; y = y_; }\r\n  function f2 (int z_, int x_, string memory y_) public { x = x_; y = y_; }\r\n  function g21 () public { f2({y_:\"foo\", x_:42, z_:0}); } // typecheck error : function not found\r\n  function g22 () public { f2({x_:42, y_:\"foo\", z_:0}); } // calls first f2\r\n\r\n  function f3 (string memory y_, int z_, int x_) public { x = x_ + 1; y = y_; }\r\n  function f3 (int x_, int z_, string memory y_) public { x = x_; y = y_; }\r\n  function g31 () public { f3({y_:\"foo\", x_:42, z_:0}); } // calls first f3\r\n  function g32 () public { f3({x_:42, y_:\"foo\", z_:0}); } // typecheck error : function not found\r\n\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9752/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9752/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688327327",
    "html_url": "https://github.com/ethereum/solidity/issues/9752#issuecomment-688327327",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9752",
    "id": 688327327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODMyNzMyNw==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T13:30:01Z",
    "updated_at": "2020-09-07T13:30:01Z",
    "author_association": "MEMBER",
    "body": "I'm going to try fixing it but before I dig into the code, I tested it a bit with various examples to see if it's really just the order that affects it.\r\n\r\nIn the example below, commenting out any overload of `f` indeed results in a `TypeError` for the calls that have arguments in the same order. And the storage values after running it are: `overload1 = 3`, `overload2 = 12`, `overload3 = 48` which shows that every combination results in a call to the overload with the same argument order:\r\n\r\n```solidity\r\ncontract C  {\r\n    int overload1 = 0;\r\n    int overload2 = 0;\r\n    int overload3 = 0;\r\n\r\n    function f(string memory y, int           z, int           x) public { overload1 += x; }\r\n    function f(int           z, string memory y, int           x) public { overload2 += x; }\r\n    function f(int           z, int           x, string memory y) public { overload3 += x; }\r\n\r\n    function g() public {\r\n        f({y: \"foo\", x: 1,     z: 1});      // calls f(string memory, int, int)\r\n        f({y: \"foo\", z: 2,     x: 2});      // calls f(string memory, int, int)\r\n    \r\n        f({z: 4,     y: \"foo\", x: 4});      // calls f(int, string memory, int)\r\n        f({x: 8,     y: \"foo\", z: 8});      // calls f(int, string memory, int)\r\n\r\n        f({z: 16,    x: 16,    y: \"foo\"});  // calls f(int, int, string memory)\r\n        f({x: 32,    z: 32,    y: \"foo\"});  // calls f(int, int, string memory)\r\n    }\r\n}\r\n```\r\n\r\nAnd the example below compiles only if we comment out the string overload - otherwise there's a `TypeError`. So it looks like in non-overloaded functions the order or named parameters does not matter and the bug kicks in only during overload resolution:\r\n``` solidity\r\ncontract C  {\r\n    function f(string   memory y, uint x) public {}\r\n    function f(uint8[2] memory y, uint x) public {}\r\n\r\n    function g() public {\r\n        f({x: 1, y: [1, 2]});\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688327327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689478490",
    "html_url": "https://github.com/ethereum/solidity/issues/9752#issuecomment-689478490",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9752",
    "id": 689478490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTQ3ODQ5MA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-09T10:39:30Z",
    "updated_at": "2020-09-09T10:39:30Z",
    "author_association": "MEMBER",
    "body": "Fixed in #9766.\r\n\r\nThe bug was that when comparing the parameters and the function signature, we were looking at the type of the wrong parameter (the one at the same position as the function argument rather the one with the same name). As a result some calls with named parameters in an order different from the declaration were being rejected. But the opposite was also true - some calls with the right order but wrong types were being accepted as matching the wrong overload. Fortunately they still failed later in `TypeChecker` due to type mismatch. Here's an example of such a case:\r\n\r\n```solidity\r\ncontract C {\r\n    function f(uint x, string memory y, bool z) internal {}\r\n    function f(uint x, uint y, uint z) internal {}\r\n\r\n    function call() internal {\r\n        f({y: 1, x: \"abc\", z: true});\r\n    }\r\n}\r\n```\r\n\r\nAnother thing is that not only function overloads were broken. This affected events too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689478490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
