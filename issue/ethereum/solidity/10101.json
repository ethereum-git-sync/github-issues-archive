{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10101",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10101/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10101/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10101/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10101",
  "id": 728243379,
  "node_id": "MDU6SXNzdWU3MjgyNDMzNzk=",
  "number": 10101,
  "title": "Add support for create with bytecode",
  "user": {
    "login": "3esmit",
    "id": 224810,
    "node_id": "MDQ6VXNlcjIyNDgxMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3esmit",
    "html_url": "https://github.com/3esmit",
    "followers_url": "https://api.github.com/users/3esmit/followers",
    "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
    "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
    "organizations_url": "https://api.github.com/users/3esmit/orgs",
    "repos_url": "https://api.github.com/users/3esmit/repos",
    "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3esmit/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-10-23T13:59:24Z",
  "updated_at": "2022-08-17T13:49:54Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nAllow a contract to create a new one based on bytecode passed as arguments. \r\n\r\n## Motivation\r\n\r\nCurrently is only possible to create a contract if the contract is specified in solidity code. However, there are some use cases, like factory contracts, which use bytecode coming from function calldata.\r\nCurrently we need to use assembly to achieve this:\r\n```solidity\r\nassembly {\r\n    createdContract := create2(0, add(_initCode, 0x20), mload(_initCode), _salt)\r\n} \r\n```\r\n\r\n## Specification\r\n```solidity\r\n    function deploy(bytes memory _initCode, bytes32 _salt)\r\n        public\r\n        returns (address payable createdContract)\r\n    {\r\n        createdContract = new type.Contract{salt: _salt}(_initCode)\r\n    }\r\n```\r\n## Backwards Compatibility\r\n\r\nNo issues",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10101/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10101/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/715419245",
    "html_url": "https://github.com/ethereum/solidity/issues/10101#issuecomment-715419245",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10101",
    "id": 715419245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTQxOTI0NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-23T15:39:51Z",
    "updated_at": "2020-10-23T15:39:51Z",
    "author_association": "MEMBER",
    "body": "Since such a feature breaks of out the type system, I would prefer to leave this accessible via inline assembly only. What is the problem with using inline assembly for that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/715419245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/715502635",
    "html_url": "https://github.com/ethereum/solidity/issues/10101#issuecomment-715502635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10101",
    "id": 715502635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTUwMjYzNQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-23T18:23:51Z",
    "updated_at": "2020-10-23T18:23:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically there is no problem, however the tools keep warning about using inline assembly. \r\nIf solidity implements this feature, it can also incorporate some checks like revert if create2 address returned zero. \r\n\r\nMy suggestion about \"type.Contract(bytecode)\" might not be the best way, maybe you could add some better design to it for implementing it on Solidity. \r\n\r\nPersonally I am OK using assembly, but I think would be nice to have this feature. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/715502635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/716636258",
    "html_url": "https://github.com/ethereum/solidity/issues/10101#issuecomment-716636258",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10101",
    "id": 716636258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjYzNjI1OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-26T15:46:24Z",
    "updated_at": "2020-10-26T15:46:24Z",
    "author_association": "MEMBER",
    "body": "Inline assembly is totally fine and safe if used properly. Tools should warn if inline assembly is used in user-written code but not when used in vetted and audited helper code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/716636258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/718916093",
    "html_url": "https://github.com/ethereum/solidity/issues/10101#issuecomment-718916093",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10101",
    "id": 718916093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODkxNjA5Mw==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T17:45:40Z",
    "updated_at": "2020-10-29T18:01:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I failed using inline assembly for this use-case.\r\nMy code is\r\n```\r\n    function deploy(bytes memory _initCode, bytes32 _salt)\r\n        public\r\n        returns (address payable createdContract)\r\n    {\r\n        assembly {\r\n            createdContract := create2(0, add(_initCode, 0x20), mload(_initCode), _salt)\r\n        }\r\n    }\r\n```\r\nWhat is wrong with it?\r\nActually nothing, it works just fine - as programmed, except that `eth_estimateGas` always returns too low gas for executing create2 because it can't know that create2 failed!\r\nSo it is missing a check `require(createdContract != address(0), \"Create2 failed\")` so the outer transaction also fails when create2 is failing.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/718916093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
