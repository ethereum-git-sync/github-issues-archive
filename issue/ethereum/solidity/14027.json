{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14027/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14027/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14027/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14027",
  "id": 1611476620,
  "node_id": "I_kwDOAm_5kc5gDS6M",
  "number": 14027,
  "title": "\"Stack too deep\" on literal constant \"0\" access",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2023-03-06T13:52:35Z",
  "updated_at": "2023-03-27T15:10:14Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The use-case I am showing is really hard to believe and reproduce, we discovered it during debugging and trying to disable `stackAllocation` option under `viaIR` mode.\r\n\r\n## Description\r\n\r\nUsing \"0\" (zero) literal constant unexpectedly produces \"Stack too deep\"\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.19\r\n\r\n## Steps to Reproduce\r\n\r\nUsing 0 literal constant produces compilation error:\r\n\r\n<img width=\"1196\" alt=\"image\" src=\"https://user-images.githubusercontent.com/702124/223128508-bb641776-dc96-4132-a3fd-8cc47cf4d064.png\">\r\n\r\nWhile using `calldata()` in non-payable method:\r\n\r\n<img width=\"1185\" alt=\"image\" src=\"https://user-images.githubusercontent.com/702124/223128363-41f45d6b-2c2f-47ae-99f3-4efdd62b9912.png\">\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14027/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14027/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456269403",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1456269403",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1456269403,
    "node_id": "IC_kwDOAm_5kc5WzOhb",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T14:44:10Z",
    "updated_at": "2023-03-06T14:44:10Z",
    "author_association": "NONE",
    "body": "I suspect that compiler is trying to reuse constants on the stack, I believe it should push new constant on stack in case of inability to access some constant due “Stack too deep”.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456269403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456274922",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1456274922",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1456274922,
    "node_id": "IC_kwDOAm_5kc5WzP3q",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T14:47:32Z",
    "updated_at": "2023-03-06T14:47:52Z",
    "author_association": "MEMBER",
    "body": "Well, dealing with such constants is the job of the stack compressor, could be something that can be improved or could be just a very complex situation where moving one thing pulls a whole sequence of other things and there's basically no freedom or movement.\r\n\r\nBut in any case, with via IR and optimizer this shouldn't cause \"Stack too deep\" anyway thanks to the memory mover. Do you have a link to the code that causes it? We do have known issues like #13906 and this could very well be the same thing, but would not hurt to have another repro.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456274922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456412531",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1456412531",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1456412531,
    "node_id": "IC_kwDOAm_5kc5Wzxdz",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T16:03:53Z",
    "updated_at": "2023-03-06T16:03:53Z",
    "author_association": "NONE",
    "body": "> Do you have a link to the code that causes it?\r\n\r\n@cameel sure, check out this PR https://github.com/1inch/limit-order-protocol/pull/221 (see commit [Fix \"Stack too deep\" on 0 constant literal](https://github.com/1inch/limit-order-protocol/pull/221/commits/3246e378f59a10c4f12eddf79a71d728419905e3))",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456412531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1473828410",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1473828410",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1473828410,
    "node_id": "IC_kwDOAm_5kc5X2NY6",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-17T13:15:26Z",
    "updated_at": "2023-03-17T13:15:26Z",
    "author_association": "NONE",
    "body": "BTW, don't you consider this issue as critical?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1473828410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1482061096",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1482061096",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1482061096,
    "node_id": "IC_kwDOAm_5kc5YVnUo",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-23T23:55:09Z",
    "updated_at": "2023-03-23T23:55:44Z",
    "author_association": "MEMBER",
    "body": "We do, but it's not something that can be just patched quickly. The whole mechanism needs design changes. Reports of cases that break are very helpful, but they won't be addressed one by one. It will all be fixed by the rewrite that's a part of #13721, which is a current roadmap task.\r\n\r\n> @cameel sure, check out this PR\r\n\r\nI need to get back to this at some point. Actually, I talked about the repros with @ekpyron earlier and he says that all he needs is really just something that can be passed directly to the compiler without all the layers in between (i.e. the framework, config, etc.). So basically the Standard JSON input. Does not even need to be a minimal example. If you have that at hand and could attach it here, it would save us the hassle of having to extract it...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1482061096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1482391005",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1482391005",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1482391005,
    "node_id": "IC_kwDOAm_5kc5YW33d",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-24T07:52:53Z",
    "updated_at": "2023-03-24T07:52:53Z",
    "author_association": "NONE",
    "body": "> We do, but it's not something that can be just patched quickly. The whole mechanism needs design changes. Reports of cases that break are very helpful, but they won't be addressed one by one. It will all be fixed by the rewrite that's a part of #13721, which is a current roadmap task.\r\n> \r\n> > @cameel sure, check out this PR\r\n> \r\n> I need to get back to this at some point. Actually, I talked about the repros with @ekpyron earlier and he says that all he needs is really just something that can be passed directly to the compiler without all the layers in between (i.e. the framework, config, etc.). So basically the Standard JSON input. Does not even need to be a minimal example. If you have that at hand and could attach it here, it would save us the hassle of having to extract it...\r\n\r\n```json\r\n{\r\n  \"version\": \"0.8.18\",\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"viaIR\": true,\r\n      \"optimizer\": {\r\n        \"enabled\": true,\r\n        \"runs\": 100,\r\n        \"details\": {\r\n          \"yul\": true,\r\n          \"yulDetails\": {\r\n            \"stackAllocation\": false,\r\n            \"optimizerSteps\": \"\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf you use the `viaIR` option, its recommended you set the [optimization step sequence](https://docs.soliditylang.org/en/v0.8.17/yul.html#optimization-step-sequence) to `\"u\"`, to make Hardhat work as well as possible:\r\n[` optimizerSteps: \"u\", `](https://github.com/NomicFoundation/hardhat/pull/3415/files#diff-1fe5ed9021fd6c44faa887df40a9ada86f43fcdd1eb22476ad7958742834daafR32-R51)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1482391005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485067746",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485067746",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485067746,
    "node_id": "IC_kwDOAm_5kc5YhFXi",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T12:59:33Z",
    "updated_at": "2023-03-27T12:59:33Z",
    "author_association": "MEMBER",
    "body": "Judging from the screenshots you're posting, the compilation failure is actually due to *not* compiling via-IR, while the issue description indicates that you *are* compiling via-IR? I've seen cases in which hardhat had implicit compilation passes e.g. for code coverage, without IR, even if via-IR is generally enabled (not sure about it the circumstances, though), maybe that's what's happening?\r\n\r\nWhether this issue occurs with via-IR enabled or disabled makes a huge difference in the severity of the problem. Non-trivial inline assembly in legacy codegen is known to be subject to issues like this rather easily and we'll not allocate resources to fixing it, but will try to transition towards via-IR codegen this year instead.\r\n\r\nFor via-IR codegen, cases similar to the described one may still occur and fall under https://github.com/ethereum/solidity/issues/14067 and https://github.com/ethereum/solidity/issues/13721, which we assigned high priority in the short term.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485067746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485078333",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485078333",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485078333,
    "node_id": "IC_kwDOAm_5kc5YhH89",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T13:17:49Z",
    "updated_at": "2023-03-27T13:17:49Z",
    "author_association": "NONE",
    "body": "We used the following settings:\r\n```\r\nsolidity: {\r\n    version: '0.8.18',\r\n    settings: {\r\n         optimizer: {\r\n             enabled: true,\r\n             runs: 100,\r\n             details: {\r\n                 yulDetails: {\r\n                     stackAllocation: false,\r\n                 },\r\n             },\r\n         },\r\n         viaIR: true,\r\n     },\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485078333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485109047",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485109047",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485109047,
    "node_id": "IC_kwDOAm_5kc5YhPc3",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T13:37:41Z",
    "updated_at": "2023-03-27T13:38:45Z",
    "author_association": "MEMBER",
    "body": "Ah, yeah, the assertion (i.e. the stack-too-deep error message) should probably distinguish between legacy codegen and via-IR codegen with disabled stack optimization. Is it surprising, though, that if you tell the compiler to use naive stack usage (that's basically what the setting does), that that'll result in stack-too-deep errors? The compiler does some optimization and behaves - to a certain degree - clever in these cases, but that's exactly the part that you're disabling explicitly, so I'm not entirely sure what you're expecting here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485109047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485237939",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485237939",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485237939,
    "node_id": "IC_kwDOAm_5kc5Yhu6z",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T14:40:08Z",
    "updated_at": "2023-03-27T14:40:08Z",
    "author_association": "NONE",
    "body": "@ekpyron I didn’t expected compiler to reuse constants in stack, especially when they are too deep. Solution is simple: just push these constants every time they needed, do not keep them in stack.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485237939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485245717",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485245717",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485245717,
    "node_id": "IC_kwDOAm_5kc5Yhw0V",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T14:42:42Z",
    "updated_at": "2023-03-27T14:44:51Z",
    "author_association": "NONE",
    "body": "We tried to measure gas overhead for this “stack allocation” feature trying to resolve stack-too-deeps on our own and compare gas usage.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485245717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485281138",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485281138",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485281138,
    "node_id": "IC_kwDOAm_5kc5Yh5dy",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T15:01:38Z",
    "updated_at": "2023-03-27T15:01:38Z",
    "author_association": "MEMBER",
    "body": "The fact that it reuses the constant is probably an effect of the regular optimizer, not of the stack allocation. One of the upcoming hardforks may give us ``PUSH0``, in which case we can generally avoid doing this in case of zeroes - but in general reusing a constant has the same cost of 3 gas as pushing it again, but costs at least one additional byte of code size, so generally, ignoring the effect on stack depth, it's always beneficial.\r\n\r\nThere are mechanisms in place to \"rematerialize\" variables with constant value in case you otherwise get a stack-too-deep error, though - I'm not entirely sure why they don't kick in here, they should. If you give me a simple direct compiler invocation that reproduces the case, I can have a quick look at that.\r\n\r\nHowever, I think there's also a misunderstanding about the \"stack allocation\" setting here, maybe this should be documented more clearly - disabling the stack allocation setting is basically deprecated - the compiler will fall back on a naive way of allocating stack slots and will simultaneously try to reduce stack pressure by applying some optimization steps to reduce \"stack pressure\", which can potentially do more harm than good (and which may be the reason for the issue here).\r\n\r\nThe \"stack allocation feature\" does not have gas overhead itself, it should *always* produce more optimal code than the legacy path. What may result in overhead is if the more clever stack allocation is still not enough and it *additionally* needs to move variables to memory. We should probably add a setting to disable that selectively as well - but in your particular case that should be rather easy to do indirectly - if you just *not* mark the assembly block as \"memory-safe\", that should disable moving variables to memory and have no other effect.\r\n\r\nBut yeah, the only reason the stack allocation setting is still there is for debugging, since the naive stack allocation is easier to reproduce and anticipate by debuggers, but even that will soon be deprecated once we have better tooling support that relies on debugging data instead (which is currently being worked on).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485281138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485292640",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485292640",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485292640,
    "node_id": "IC_kwDOAm_5kc5Yh8Rg",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T15:08:28Z",
    "updated_at": "2023-03-27T15:08:28Z",
    "author_association": "MEMBER",
    "body": "> One of the upcoming hardforks may give us `PUSH0`\r\n\r\nSo in about ~2 weeks. [`PUSH0` is in Shanghai](https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485292640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485297720",
    "html_url": "https://github.com/ethereum/solidity/issues/14027#issuecomment-1485297720",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14027",
    "id": 1485297720,
    "node_id": "IC_kwDOAm_5kc5Yh9g4",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T15:10:13Z",
    "updated_at": "2023-03-27T15:10:13Z",
    "author_association": "MEMBER",
    "body": "Also, we probably should add some of that info about the stack allocation to the docs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485297720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
