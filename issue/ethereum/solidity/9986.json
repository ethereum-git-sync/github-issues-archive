{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9986/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9986/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9986/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9986",
  "id": 716885461,
  "node_id": "MDU6SXNzdWU3MTY4ODU0NjE=",
  "number": 9986,
  "title": "Enable Enums to be Extended in Upgradeable Contracts",
  "user": {
    "login": "mudgen",
    "id": 49092,
    "node_id": "MDQ6VXNlcjQ5MDky",
    "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mudgen",
    "html_url": "https://github.com/mudgen",
    "followers_url": "https://api.github.com/users/mudgen/followers",
    "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
    "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
    "organizations_url": "https://api.github.com/users/mudgen/orgs",
    "repos_url": "https://api.github.com/users/mudgen/repos",
    "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mudgen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-10-07T22:12:39Z",
  "updated_at": "2022-08-10T18:16:10Z",
  "closed_at": "2020-10-14T20:05:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Currently an upgradable proxy contract or diamond can't extend an enum.\r\n\r\nPlease see this article for details: https://hackernoon.com/beware-the-solidity-enums-9v1qa31b2?source=rss\r\n\r\nIt would be great if enums could be extended to include additional values in upgradeable contracts.\r\n\r\nI understand that if more than 256 values are used by an enum then it uses 16 bits instead of 8 bits.   This poses a danger for upgradable contracts that extend an enum to include more values. To solve this problem can the Solidity compiler enforce that an enum uses no more than 256 items?   Has anyone ever used an enum with more than 256 possible values?  It seems to me that 256 values is enough.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9986/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9986/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/705542306",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-705542306",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 705542306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTU0MjMwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T12:43:42Z",
    "updated_at": "2020-10-08T12:43:42Z",
    "author_association": "MEMBER",
    "body": "Are these two different issues? I can totally see the benefit in restricting enums to 256 values.\r\n\r\nAbout the upgradability - do you have any suggestions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/705542306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/705581994",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-705581994",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 705581994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTU4MTk5NA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T13:50:03Z",
    "updated_at": "2020-10-08T13:50:35Z",
    "author_association": "NONE",
    "body": "Thanks for looking at this @chriseth!\r\n\r\nYes there are two issues here:\r\n1. Limit enums to 256 possible values so the contract storage size is fixed at 8 bits. \r\n2. Allow enums to be extended by contract upgrades.\r\n\r\nAccording to the article I linked to there is a runtime check that prevents using an enum outside its defined set of values.  Remove this check so that enums can be extended in contract upgrades.   I think this check should be a compile time check. \r\n\r\nI am not familiar with the implementation of Solidity so please consider and/or investigate any issues or problems that my suggestion might cause. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/705581994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708479414",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708479414",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708479414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ3OTQxNA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T15:28:29Z",
    "updated_at": "2020-10-14T15:28:29Z",
    "author_association": "MEMBER",
    "body": "This was discussed on the meeting today - mostly regarding limiting the number of possible values. @chriseth suspects that enums occupying more than one byte might be so rare in practice that some tools might not even support them properly. An assumption that enum is always equivalent with `uint8` might be common.\r\n\r\nThe decision was to gather some feedback first and see if anyone is using enums with more than 256 values in practice.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708479414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708488782",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708488782",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708488782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ4ODc4Mg==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T15:43:29Z",
    "updated_at": "2020-10-14T15:43:29Z",
    "author_association": "MEMBER",
    "body": "I created a separate issue for adding the limit because we might want it even if in the end we decide not to implement extensible enums: #10035.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708488782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708521338",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708521338",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708521338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODUyMTMzOA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T16:38:18Z",
    "updated_at": "2020-10-14T16:38:18Z",
    "author_association": "MEMBER",
    "body": "@mudgen As for the extensible enums, I think there are serious problems with enabling something like that.\r\n\r\nConsider this example:\r\n```solidity\r\nenum Operation {Add, Delete}\r\n\r\ncontract C {\r\n    function executeOperation(Operation _operation) public {\r\n        if (_operation == Operation.Add) {\r\n            // Add stuff\r\n        }\r\n        else {\r\n            // Delete stuff\r\n        }\r\n    }\r\n}\r\n```\r\nNow what happens if you extend the `enum` to `enum Operation {Add, Delete, Modify}`? `Modify` will delete stuff.\r\n\r\nThis is not a style I recommend (I wouldn't write it myself without adding `assert(_operation == Operation.Delete)` in the `else` branch) but I strongly suspect that this is what people often do. I've seen this pattern used a lot in other languages I worked in, even with types that do not have built-in checks like enums. In Solidity it's a bigger problem because the compiler currently guarantees the `assert` so people might feel justified in not adding it themselves and they would be completely right.\r\n\r\nI think that removing the runtime enum check now has potential to break too many contracts. Code that was completely safe until now would suddenly become buggy. The worst thing is that there wouldn't be any warning about it so I think people in many cases wouldn't spot it until long after a new version of their contract, compiled using new Solidity version, had been deployed.\r\n\r\nFor the use case from the article I think that `uint8` with a set of pre-defined constants for values would be more appropriate than an enumeration anyway. Using an enum is misleading because it suggests that only values specified in the definition are allowed while really you want the contract to allow all of them. Some just have not been defined yet.\r\n\r\nThe only downside to using constants I can see is that you lose type safety. But this would not be a problem if we had user-defined type aliases so maybe we should work on that instead? We do have a feature request for it (#1100) and this would be another use case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708521338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708611318",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708611318",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708611318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYxMTMxOA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T19:24:31Z",
    "updated_at": "2020-10-14T19:49:47Z",
    "author_association": "NONE",
    "body": "@cameel Thanks for looking into this.  I see what you mean. Good points!  Good idea to use constants.\r\n\r\nI think you are right. Best not to change how enums work concerning this, but provide another way.\r\n\r\nHow might it work and look if a user-defined type alias was used instead of an enum so it could be extended by upgrades?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708611318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708625385",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708625385",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708625385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYyNTM4NQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T19:53:45Z",
    "updated_at": "2020-10-14T19:55:47Z",
    "author_association": "MEMBER",
    "body": "With the syntax proposed in #1100 it could look like this:\r\n\r\n```solidity\r\ninterface IStorage {    \r\n    typedef uint8 RecordState;\r\n    RecordState constant StateA = 0;\r\n    RecordState constant StateB = 1;\r\n\r\n    function setState(address user, RecordState newState) public;\r\n}\r\n```\r\n\r\nThen extending it would not be a problem because defining constants does not limit `RecordState` in any way.\r\n\r\nOn a side note, when #2918 gets implemented you'd also be able to use an arbitrary range to have more control over how exensible the set of values should be. E.g. `typedef number{-1000, 1000} RecordState`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708625385/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708627235",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708627235",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708627235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYyNzIzNQ==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T19:57:30Z",
    "updated_at": "2020-10-14T19:57:30Z",
    "author_association": "NONE",
    "body": "I see, cool! I like it.  Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708627235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708630955",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708630955",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708630955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYzMDk1NQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T20:05:16Z",
    "updated_at": "2020-10-14T20:05:16Z",
    "author_association": "MEMBER",
    "body": "Great :) In that case I'm going to close this one. I put the issue with user-defined type aliases at the top of design backlog to get some discussion about it. We have a long backlog of feature requests so not sure when exactly we'll get to this one (we actually discussed that today; we really need to focus more on the Sol->Yul codegen) but having a good use case and clear spec should help move it forward.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708630955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708631950",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-708631950",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 708631950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYzMTk1MA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T20:07:30Z",
    "updated_at": "2020-10-14T20:07:30Z",
    "author_association": "NONE",
    "body": "Sounds good, thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/708631950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/753652228",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-753652228",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 753652228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY1MjIyOA==",
    "user": {
      "login": "jalextowle",
      "id": 34827329,
      "node_id": "MDQ6VXNlcjM0ODI3MzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/34827329?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jalextowle",
      "html_url": "https://github.com/jalextowle",
      "followers_url": "https://api.github.com/users/jalextowle/followers",
      "following_url": "https://api.github.com/users/jalextowle/following{/other_user}",
      "gists_url": "https://api.github.com/users/jalextowle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jalextowle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jalextowle/subscriptions",
      "organizations_url": "https://api.github.com/users/jalextowle/orgs",
      "repos_url": "https://api.github.com/users/jalextowle/repos",
      "events_url": "https://api.github.com/users/jalextowle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jalextowle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-03T17:46:54Z",
    "updated_at": "2021-01-03T17:54:32Z",
    "author_association": "NONE",
    "body": "@cameel I found your conversation with @mudgen on this topic to be interesting. I'd like to offer a slightly different perspective that I acquired this week while writing a new set of contracts. I may be missing something that makes my proposal undesirable, and this feature may be too niche to warrant support. If that is the case, I'd appreciate a comment explaining what the problem in this solution is, but I'll support your decision.\r\n\r\n# Problem\r\n\r\nI'm currently working with a set of contracts that need to return instead of reverting so that a nonce can be updated in either case. I've started to use a pattern where I define a set of exit codes as an enum so that I can still provide relatively rich error messages without incurring a large cost. Some of the logic was generic enough to be abstracted into a library, but these library functions also needed to adopt the exit code convention instead of reverting. \r\n\r\nThis brings us to the point where extensible enums would be nice. The main contract uses a superset of the exit codes used in the library contract since I want to faithfully return the exit codes resulting from the library calls (for the purposes of this system, each library call is only made once in context, so this is really all you need to see where execution failed).  What I can do for now is copy an enum defined within the library into the main contract so that the lower values are the same. This would allow me to cast the enum like this:\r\n\r\n```\r\nLib.ExitCode libExitCode = Lib.bar();\r\nExitCode exitCode = ExitCode(uint8(libExitCode));\r\nif (exitCode != ExitCode.Success) {\r\n    return exitCode;\r\n}\r\n```\r\n\r\nso that I don't need to use a set of if-statements to correctly decode the exit code and encode it to the correct analogue for the main contract. This scares me since any change to the enums in one file could change the semantics of this call, so I'll probably stick with the set of if-statements.\r\n\r\n# Proposal\r\n\r\nIt would be nice if the Solidity compiler could provide good enough type-checking to protect me from the maintenance headache described above. I think something like the following would be great: \r\n\r\n```\r\nlibrary Lib {\r\n    enum ExitCode {\r\n        Success,\r\n        SomeLibError\r\n    }\r\n    \r\n    function foo() internal pure returns (ExitCode) {\r\n        // Do some stuff and potentially return ExitCode.Success or ExitCode.SomeLibError\r\n    }\r\n}\r\n```\r\n\r\nand then extend this in the main contract:\r\n\r\n```\r\nimport { Lib } from \"./Lib.sol\";\r\n\r\ncontract Main {\r\n    enum ExitCode extends Lib.ExitCode {\r\n        SomeMainError\r\n    }\r\n\r\n    function foo() external returns (ExitCode) {\r\n        // This is a safe cast since ExitCode extends Lib.ExitCode\r\n        ExitCode exitCode = Lib.bar();\r\n\r\n        if (exitCode != ExitCode.Success) {\r\n            return exitCode;\r\n        }\r\n\r\n        // Do some more stuff\r\n        \r\n        return exitCode.Success;\r\n    }\r\n}\r\n```\r\n\r\nThis basically just shows `Main.ExitCode` extending `Lib.ExitCode`. What I would want is for `Main.ExitCode` to be equivalent to:\r\n\r\n```\r\nenum ExitCode {\r\n    Success,\r\n    SomeLibError,\r\n    SomeMainError\r\n}\r\n```\r\n\r\nTo fix the issue that you pointed out to @mudgen, you could represent `Lib.ExitCode` and `Main.ExitCode` as distinct types within the compiler so that `Lib.ExitCode` only contains `Success` and `SomeLibError` (I don't really know the correct way to phrase this within the context of `solc`, but hopefully you get the gist of this idea). This would prevent someone from passing in an enum (like `SomeMainError`) that would break the semantics of the else. \r\n\r\nNote: It would only make sense to allow an enum to extend one other enums, since multiple extensions wouldn't play nicely with each other.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/753652228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1211083888",
    "html_url": "https://github.com/ethereum/solidity/issues/9986#issuecomment-1211083888",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9986",
    "id": 1211083888,
    "node_id": "IC_kwDOAm_5kc5IL6xw",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T18:16:10Z",
    "updated_at": "2022-08-10T18:16:10Z",
    "author_association": "NONE",
    "body": "@chriseth Any plans to make extensible enums?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1211083888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
