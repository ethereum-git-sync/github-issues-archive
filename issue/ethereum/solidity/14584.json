{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14584",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14584/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14584/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14584/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14584",
  "id": 1924553001,
  "node_id": "I_kwDOAm_5kc5ytlkp",
  "number": 14584,
  "title": "Solidity 0.8.21, Type string and bytes32 issues when overloading.",
  "user": {
    "login": "DevUreak",
    "id": 18746468,
    "node_id": "MDQ6VXNlcjE4NzQ2NDY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18746468?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DevUreak",
    "html_url": "https://github.com/DevUreak",
    "followers_url": "https://api.github.com/users/DevUreak/followers",
    "following_url": "https://api.github.com/users/DevUreak/following{/other_user}",
    "gists_url": "https://api.github.com/users/DevUreak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DevUreak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DevUreak/subscriptions",
    "organizations_url": "https://api.github.com/users/DevUreak/orgs",
    "repos_url": "https://api.github.com/users/DevUreak/repos",
    "events_url": "https://api.github.com/users/DevUreak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DevUreak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-10-03T16:52:57Z",
  "updated_at": "2023-10-05T16:51:33Z",
  "closed_at": "2023-10-04T14:40:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen overloading, string and bytes32 types cannot be distinguished\r\n\r\nTypeError: No unique declaration found after argument-dependent lookup.\r\n\r\nIf it is an overloading function that we are familiar with, and shouldn't it work according to Solidity syntax?\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.21 \r\n- Target EVM version (as per compiler settings): shanghai\r\n- Framework/IDE (e.g. Truffle or Remix): Remix\r\n- EVM execution environment / backend / blockchain client: \r\n- Operating system: \r\n\r\n## Steps to Reproduce\r\n\r\n```solidity\r\n\r\nfunction same (bytes32 value) public pure {\r\n    \r\n}\r\n\r\nfunction same (string memory value) public pure {\r\n    \r\n}\r\nsame(\"hello\");\r\n\r\n```\r\n-->\r\n\r\n    \r\n",
  "closed_by": {
    "login": "r0qs",
    "id": 457348,
    "node_id": "MDQ6VXNlcjQ1NzM0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/r0qs",
    "html_url": "https://github.com/r0qs",
    "followers_url": "https://api.github.com/users/r0qs/followers",
    "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
    "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
    "organizations_url": "https://api.github.com/users/r0qs/orgs",
    "repos_url": "https://api.github.com/users/r0qs/repos",
    "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/r0qs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14584/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14584/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1747017050",
    "html_url": "https://github.com/ethereum/solidity/issues/14584#issuecomment-1747017050",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14584",
    "id": 1747017050,
    "node_id": "IC_kwDOAm_5kc5oIV1a",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-04T14:40:30Z",
    "updated_at": "2023-10-04T14:41:00Z",
    "author_association": "MEMBER",
    "body": "Hi @DevUreak, currently string literals are not really of the type `string` nor `bytes32` but are implicitly convertible to both types. For a literal, without an explicit conversion, the compiler cannot determine which function should be called.\r\n\r\nIn yours particular case, you could use a [hexadecimal string literal](https://docs.soliditylang.org/en/latest/types.html#hexadecimal-literals) as a workaround, since it is only convertible to bytes and not to string. Or use a variable instead of string literal. Please see the example below:\r\n\r\n```solidity\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\ncontract C {\r\n    function same (bytes32 value) public pure {}\r\n    function same (string memory value) public pure {}\r\n   \r\n    function f() external pure {\r\n        same(hex\"001122FF\");\r\n        // or\r\n        //string memory s = \"lala\";\r\n        //same(s);\r\n    }\r\n}\r\n```\r\n\r\nSadly, there's no good solutions for the current syntax without changing the language significantly, which is something we won't do now. However,  we are currently working in a rewrite of the type system and issues like this one will probably be fixed in the future, but there is no time line for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1747017050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1748128092",
    "html_url": "https://github.com/ethereum/solidity/issues/14584#issuecomment-1748128092",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14584",
    "id": 1748128092,
    "node_id": "IC_kwDOAm_5kc5oMlFc",
    "user": {
      "login": "DevUreak",
      "id": 18746468,
      "node_id": "MDQ6VXNlcjE4NzQ2NDY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18746468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DevUreak",
      "html_url": "https://github.com/DevUreak",
      "followers_url": "https://api.github.com/users/DevUreak/followers",
      "following_url": "https://api.github.com/users/DevUreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/DevUreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DevUreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DevUreak/subscriptions",
      "organizations_url": "https://api.github.com/users/DevUreak/orgs",
      "repos_url": "https://api.github.com/users/DevUreak/repos",
      "events_url": "https://api.github.com/users/DevUreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DevUreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-05T06:01:09Z",
    "updated_at": "2023-10-05T06:01:09Z",
    "author_association": "NONE",
    "body": "Thank you for answer. I said that overloading functions that cannot actually be called should be handled as exceptions at the compilation stage. thank you",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1748128092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1748703607",
    "html_url": "https://github.com/ethereum/solidity/issues/14584#issuecomment-1748703607",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14584",
    "id": 1748703607,
    "node_id": "IC_kwDOAm_5kc5oOxl3",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-05T11:32:10Z",
    "updated_at": "2023-10-05T16:51:33Z",
    "author_association": "MEMBER",
    "body": "> Thank you for answer. I said that overloading functions that cannot actually be called should be handled as exceptions at the compilation stage. thank you\r\n\r\nHi @DevUreak, but they are, no? Your code does not compile for the reasons I explained above and the compiler will throw the error you mentioned during compilation. I.e.:\r\n\r\n* This will not compile:\r\n```solidity\r\ncontract C {\r\n    function same (bytes32 value) public pure {}\r\n    function same (string memory value) public pure {}\r\n\r\n    function f() external pure {\r\n        same(\"hello\"); // This does not compile because the compiler cannot determine which function to use when passing a string literal.\r\n                       // TypeError: No unique declaration found after argument-dependent lookup.\r\n    }\r\n}\r\n```\r\n\r\n* This will compile:\r\n```solidity\r\n\r\ncontract C {\r\n    function same (bytes32 value) public pure {}\r\n    function same (string memory value) public pure {}\r\n   \r\n    function f() external pure {\r\n        same(hex\"001122FF\"); // This will resolve to `same(bytes32 value)`\r\n\r\n        string memory s = \"hello\";\r\n        same(s); // This will resolve to `same(string memory value)`\r\n    }\r\n}\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1748703607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
