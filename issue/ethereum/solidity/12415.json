{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12415",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12415/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12415/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12415/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12415",
  "id": 1081605901,
  "node_id": "I_kwDOAm_5kc5Ad_8N",
  "number": 12415,
  "title": "Different bytecode with same metadata for `CRPFactory` from `configurable-rights-pool` on 0.6.12",
  "user": {
    "login": "NanezX",
    "id": 81595884,
    "node_id": "MDQ6VXNlcjgxNTk1ODg0",
    "avatar_url": "https://avatars.githubusercontent.com/u/81595884?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NanezX",
    "html_url": "https://github.com/NanezX",
    "followers_url": "https://api.github.com/users/NanezX/followers",
    "following_url": "https://api.github.com/users/NanezX/following{/other_user}",
    "gists_url": "https://api.github.com/users/NanezX/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NanezX/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NanezX/subscriptions",
    "organizations_url": "https://api.github.com/users/NanezX/orgs",
    "repos_url": "https://api.github.com/users/NanezX/repos",
    "events_url": "https://api.github.com/users/NanezX/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NanezX/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-12-15T23:22:40Z",
  "updated_at": "2021-12-16T21:06:27Z",
  "closed_at": "2021-12-16T20:30:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nHello everyone, a few days i asked on the git but now im posting here. I am in a project that use the contracts made by balancer-labs, specificaly the [balancer-core](https://github.com/balancer-labs/balancer-core) and [configurable-rights-pool](https://github.com/balancer-labs/configurable-rights-pool). The project made a fork from those repos, compile (this fork use Truffle as you see) and made a npm package (because we want to deploy to different chains). We use the artifacts (abi and bytecode) from the package to deploy with Hardhat. This is fine, all the contracts work perfectly.\r\n\r\nThe problem is that i want to verify those contracts using Input  JSON Description to make make easier the process (and as we are deploying with artifact, i cannot use Hardhat plugins to verify). So, i get the Input JSON Description from the metadata inside the artifacts in the package. Later, i remove all the quotes and stuff to convert it to an Input JSON Description. In total are 5 contracts, and i already can verify 4 of them (so 4/5). \r\n\r\nThe last one is the [CRPFactory](https://github.com/balancer-labs/configurable-rights-pool/blob/master/contracts/CRPFactory.sol), but i cannot replicate this bytecode and doesnt work to verify. This contract need to link the libraries so could be the reason, but even compiling from the Input JSON without libraries addresses i cannot get the same bytecode that the artifact. I compiled with Hardhat and i get different bytecode. I made a fork from the repo too and compile to see if i get the same bytecode that from package, so i check the settings inside the Input JSON and hardhat, but i have the same settings and some of them are by default (like i bytecodeHash or useLiteralContent) but i wrote them to double check. Also i double check the sources path but i got the same result.\r\n\r\nThe werid thing is that the metadata generated by the Input JSON and the metada inside the artifact from the package are the same. Event the metadata hash in the bytecode is the same. So, could be a bug like #12281 as cameel told me before but im not sure about this :).\r\n\r\nI really like verify all the contracts that the projects manage. I already handle the verification of thecontracts that we made thanks a cameel, and about this contracts just need the last one :) Hope is enough info/context. Thanks for any help and solution :)\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.6.12+commit.27d51765.Linux.g++\r\n- Target EVM version (as per compiler settings): istanbul\r\n- Framework/IDE (e.g. Truffle or Remix): Truffle and Hardhat\r\n- EVM execution environment / backend / blockchain client: EVM execution environment\r\n- Operating system: Ubuntu 20.04LTS\r\n- Node version: v14.17.4\r\n\r\n## Steps to Reproduce\r\nI'll provide all the files that i think could be necessaries.\r\n- **CRPFactory.json:** It's the artifact from the package. Ofc it's already compiled and contain all the info (bytecode, abi, metadata, etc).\r\n- **solc-input-crpfactory:** It's the Input JSON Description that i made from the metadata of the *CRPFactory.json*.\r\n- **metadata.json:** It's the metadata convert to a pretty JSON\r\n- **metadata-as-string.json:** It's the metadata copy directly from the artifact\r\n\r\nJust run the *solc-input-crpfactory* with solc 0.6.12: `solc --standard-json solc-input-crpfactory` and you can check the different bytecode but the same metadata hash.\r\n[CRPFactory.zip](https://github.com/ethereum/solidity/files/7723374/CRPFactory.zip)\r\n\r\n**NOTE:** If you want to check and compile the contracts by your hand, you can make the fork from [configurable-rights-pool](https://github.com/balancer-labs/configurable-rights-pool) and check the CRPFactory contract build after compile them.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12415/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12415/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996172155",
    "html_url": "https://github.com/ethereum/solidity/issues/12415#issuecomment-996172155",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12415",
    "id": 996172155,
    "node_id": "IC_kwDOAm_5kc47YGF7",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-16T20:30:21Z",
    "updated_at": "2021-12-16T20:30:21Z",
    "author_association": "MEMBER",
    "body": "This unfortunately does seem to be the same issue as #12281. Extra files included in compilation can affect bytecode on 0.6.12 and Truffle includes all files from the project. You'll be able to reproduce bytecode exactly only if you include the same files in your JSON input.\r\n\r\nTruffle includes all of these in the input:\r\n- `project:/contracts/CRPFactory.sol`\r\n- `project:/contracts/ConfigurableRightsPool.sol`\r\n- `project:/contracts/IBFactory.sol`\r\n- `project:/contracts/Migrations.sol`\r\n- `project:/contracts/PCToken.sol`\r\n- `project:/contracts/mocks/BalancerSafeMathMock.sol`\r\n- `project:/contracts/templates/ESPFactory.sol`\r\n- `project:/contracts/templates/ElasticSupplyPool.sol`\r\n- `project:/contracts/test/BColor.sol`\r\n- `project:/contracts/test/BConst.sol`\r\n- `project:/contracts/test/BFactory.sol`\r\n- `project:/contracts/test/BMath.sol`\r\n- `project:/contracts/test/BNum.sol`\r\n- `project:/contracts/test/BPool.sol`\r\n- `project:/contracts/test/BToken.sol`\r\n- `project:/contracts/test/BadToken.sol`\r\n- `project:/contracts/test/TToken.sol`\r\n- `project:/contracts/utils/BalancerOwnable.sol`\r\n- `project:/contracts/utils/BalancerReentrancyGuard.sol`\r\n- `project:/libraries/RightsManager.sol`\r\n- `project:/libraries/SmartPoolManager.sol`\r\n- `project:/libraries/SafeApprove.sol`\r\n- `project:/libraries/BalancerSafeMath.sol`\r\n- `project:/interfaces/IERC20.sol`\r\n- `project:/interfaces/IConfigurableRightsPool.sol`\r\n- `project:/libraries/BalancerConstants.sol`\r\n\r\nI managed to reproduce `CRPFactory`'s bytecode with solc by including the same files.\r\n\r\nIn that case I'm going to close this since it's a known issue in 0.6.12 and 0.7.0 and is fixed in the latest version of the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996172155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996178686",
    "html_url": "https://github.com/ethereum/solidity/issues/12415#issuecomment-996178686",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12415",
    "id": 996178686,
    "node_id": "IC_kwDOAm_5kc47YHr-",
    "user": {
      "login": "NanezX",
      "id": 81595884,
      "node_id": "MDQ6VXNlcjgxNTk1ODg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/81595884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NanezX",
      "html_url": "https://github.com/NanezX",
      "followers_url": "https://api.github.com/users/NanezX/followers",
      "following_url": "https://api.github.com/users/NanezX/following{/other_user}",
      "gists_url": "https://api.github.com/users/NanezX/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NanezX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NanezX/subscriptions",
      "organizations_url": "https://api.github.com/users/NanezX/orgs",
      "repos_url": "https://api.github.com/users/NanezX/repos",
      "events_url": "https://api.github.com/users/NanezX/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NanezX/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-16T20:41:19Z",
    "updated_at": "2021-12-16T20:41:19Z",
    "author_association": "NONE",
    "body": "Great, i'll reproduce the bytecode now. Thanks so much again cameel :) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996178686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996193317",
    "html_url": "https://github.com/ethereum/solidity/issues/12415#issuecomment-996193317",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12415",
    "id": 996193317,
    "node_id": "IC_kwDOAm_5kc47YLQl",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-16T21:05:37Z",
    "updated_at": "2021-12-16T21:06:27Z",
    "author_association": "MEMBER",
    "body": "@chriseth While debugging this I noticed one weird thing - Truffle is still producing the old-style linker references on 0.6.12. (e.g. `__SmartPoolManager______________________`). This does not happen when I compile via `solc` and from the changelog I see that while we still support reading them, the support for producing them was dropped long before that version - in 0.5.0. In the diff for 26c693aa920ec1ea41ef7994a3dc8bb45b78f866 I don't see any code left that could be producing those old references. Any idea why this is happening? Was there still some way to request them from `soljson.js` or is Truffle somehow detecting and overwriting them in the output?\r\n\r\nThat's not the first time I see this. Saw it also in https://github.com/nomiclabs/hardhat/issues/1147 (0.6.12 as well).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/996193317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
