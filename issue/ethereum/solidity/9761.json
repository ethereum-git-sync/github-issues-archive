{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9761",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9761/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9761/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9761/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9761",
  "id": 695883117,
  "node_id": "MDU6SXNzdWU2OTU4ODMxMTc=",
  "number": 9761,
  "title": "Multiple inheritance with base classes having same function name and arguments causes an error",
  "user": {
    "login": "gitpushOmnik",
    "id": 69253915,
    "node_id": "MDQ6VXNlcjY5MjUzOTE1",
    "avatar_url": "https://avatars.githubusercontent.com/u/69253915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gitpushOmnik",
    "html_url": "https://github.com/gitpushOmnik",
    "followers_url": "https://api.github.com/users/gitpushOmnik/followers",
    "following_url": "https://api.github.com/users/gitpushOmnik/following{/other_user}",
    "gists_url": "https://api.github.com/users/gitpushOmnik/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gitpushOmnik/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gitpushOmnik/subscriptions",
    "organizations_url": "https://api.github.com/users/gitpushOmnik/orgs",
    "repos_url": "https://api.github.com/users/gitpushOmnik/repos",
    "events_url": "https://api.github.com/users/gitpushOmnik/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gitpushOmnik/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-09-08T13:42:37Z",
  "updated_at": "2020-09-08T18:09:27Z",
  "closed_at": "2020-09-08T14:08:15Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "- It seems that Solidity doesn't accept multiple inheritance with base class functions having the same name and same function arguments regardless of whether they're private or public. In support to #9610 \r\n\r\n- Suppose i want to apply multiple inheritance using 2 base classes, with both containing a function with the same name and arguments we get a type-error. \r\n\r\n- Now the problem doesn't only rely if both the base classes are present in the same .sol file. A bigger problem is when both base classes are in different .sol files and we try to import both files in the contract containing derived class. It causes ambiguity\r\n\r\n-I'm providing an example wherein the base classes are in different files.\r\n\r\nFile1 : contract1.sol\r\n\r\n    pragma solidity >=0.5.0 <0.7.0;\r\n    contract Base1 {\r\n        uint a=4;\r\n        uint b=6;\r\n        function pu() public view returns(uint){\r\n            return a+b;\r\n        }\r\n    }\r\n\r\n\r\nFile2: contract2.sol\r\n\r\n    pragma solidity >=0.5.0 <0.7.0;\r\n    contract Base2  {\r\n        uint c=7;\r\n        uint d=8;\r\n        function pu() public view returns(uint){\r\n           return c+d;\r\n        }\r\n    }\r\n\r\nMain.sol\r\n\r\n    pragma solidity >=0.5.0 <0.7.0;\r\n    import \"contract1.sol\";\r\n    import \"contract2.sol\";\r\n    contract derived is Base1,Base2 {\r\n        function ca() public view returns(uint){return Base1.pu();}\r\n    }\r\n\r\n    browser/main.sol:6:5: TypeError: Derived contract must override function \"pu\". Two or more base classes define function \r\n    with same name and parameter types. contract derived is Base1,Base2 { ^ (Relevant source part starts here and spans \r\n    across multiple lines). contract1.sol:5:9: Definition in \"Base1\": function pu() public view returns(uint){ ^ (Relevant source \r\n    part starts here and spans across multiple lines). contract2.sol:5:9: Definition in \"Base2\": function pu() public view \r\n    returns(uint){ ^ (Relevant source part starts here and spans across multiple lines).\r\n\r\nI think, above description pretty much explains it.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9761/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9761/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688900863",
    "html_url": "https://github.com/ethereum/solidity/issues/9761#issuecomment-688900863",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9761",
    "id": 688900863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODkwMDg2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T14:08:15Z",
    "updated_at": "2020-09-08T14:08:15Z",
    "author_association": "MEMBER",
    "body": "This is a safety feature introduced with Solidity 0.6. The compiler asks you to tell it that you are aware of the fact that Base2 also defines a function named `pu` and that you want to ignore it. You have to add `override(Base1, Base2)` to the function header. Documentation: https://solidity.readthedocs.io/en/v0.7.1/contracts.html#function-overriding\r\n\r\nPlease feel free to reopen the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688900863/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688940861",
    "html_url": "https://github.com/ethereum/solidity/issues/9761#issuecomment-688940861",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9761",
    "id": 688940861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk0MDg2MQ==",
    "user": {
      "login": "gitpushOmnik",
      "id": 69253915,
      "node_id": "MDQ6VXNlcjY5MjUzOTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/69253915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitpushOmnik",
      "html_url": "https://github.com/gitpushOmnik",
      "followers_url": "https://api.github.com/users/gitpushOmnik/followers",
      "following_url": "https://api.github.com/users/gitpushOmnik/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitpushOmnik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitpushOmnik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitpushOmnik/subscriptions",
      "organizations_url": "https://api.github.com/users/gitpushOmnik/orgs",
      "repos_url": "https://api.github.com/users/gitpushOmnik/repos",
      "events_url": "https://api.github.com/users/gitpushOmnik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitpushOmnik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T15:06:33Z",
    "updated_at": "2020-09-08T15:06:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you @chriseth for clearing things up. I just had one more query. What if the functions that we are overriding are of private visibility. There is no virtual keyword for private functions, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/688940861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689021838",
    "html_url": "https://github.com/ethereum/solidity/issues/9761#issuecomment-689021838",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9761",
    "id": 689021838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTAyMTgzOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T17:19:12Z",
    "updated_at": "2020-09-08T17:19:12Z",
    "author_association": "MEMBER",
    "body": "Yes, this unfortunately does not work, and I think it would also be confusing. Can you work with functions at file-level instead of private functions inside contracts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689021838/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689047732",
    "html_url": "https://github.com/ethereum/solidity/issues/9761#issuecomment-689047732",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9761",
    "id": 689047732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTA0NzczMg==",
    "user": {
      "login": "gitpushOmnik",
      "id": 69253915,
      "node_id": "MDQ6VXNlcjY5MjUzOTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/69253915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitpushOmnik",
      "html_url": "https://github.com/gitpushOmnik",
      "followers_url": "https://api.github.com/users/gitpushOmnik/followers",
      "following_url": "https://api.github.com/users/gitpushOmnik/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitpushOmnik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitpushOmnik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitpushOmnik/subscriptions",
      "organizations_url": "https://api.github.com/users/gitpushOmnik/orgs",
      "repos_url": "https://api.github.com/users/gitpushOmnik/repos",
      "events_url": "https://api.github.com/users/gitpushOmnik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitpushOmnik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T18:09:27Z",
    "updated_at": "2020-09-08T18:09:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes sure I can. Thanks @chriseth . Also, do you think we could add a specific error statement regarding the prohibition of virtual keyword with private functions. Because if we don't write virtual for public functions, it gives the same error as that for ambiguity with private functions with same name and args. So i suggest we write an error specifically targeted for overriding of private functions(i.e cannot use virtual keyword with private function). It'll be less confusing. Thanks :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/689047732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
