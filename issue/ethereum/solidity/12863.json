{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12863/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12863/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12863/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12863",
  "id": 1182632634,
  "node_id": "I_kwDOAm_5kc5GfYq6",
  "number": 12863,
  "title": "An array or mapping being omitted from a struct returned by a getter should generate a hint/warning/error",
  "user": {
    "login": "0xmichalis",
    "id": 3900799,
    "node_id": "MDQ6VXNlcjM5MDA3OTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3900799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xmichalis",
    "html_url": "https://github.com/0xmichalis",
    "followers_url": "https://api.github.com/users/0xmichalis/followers",
    "following_url": "https://api.github.com/users/0xmichalis/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xmichalis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xmichalis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xmichalis/subscriptions",
    "organizations_url": "https://api.github.com/users/0xmichalis/orgs",
    "repos_url": "https://api.github.com/users/0xmichalis/repos",
    "events_url": "https://api.github.com/users/0xmichalis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xmichalis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-03-27T19:11:42Z",
  "updated_at": "2023-01-29T23:48:17Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nNested arrays inside structs are not included in the generated ABI. Original issue reported in the Hardhat repo at https://github.com/NomicFoundation/hardhat/issues/2433\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.0\r\n- Framework/IDE: Hardhat 2.8.4\r\n\r\n## Steps to Reproduce\r\n\r\nAfter compiling the following contract, I don't see the integer array `ids` as part of the generated ABI in `artifacts/contracts/Example.sol/Example.json`, neither as part of the mapping `mappedData` nor in the top-level struct field `data`.\r\n```solidity\r\n//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ncontract Example {\r\n    struct Data {\r\n        uint256[] ids;\r\n        uint256 createdAt;\r\n        address user;\r\n    }\r\n    mapping (uint256 => Data) public mappedData;\r\n    Data public data;\r\n}\r\n```\r\nFWIW I have also tried with a different type of nested array ( `address[]`) and it also has the same issue so it doesn't look type-specific.\r\n\r\ncc @alcuadrado",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12863/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12863/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1080033344",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1080033344",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1080033344,
    "node_id": "IC_kwDOAm_5kc5AYABA",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-27T22:34:17Z",
    "updated_at": "2022-03-27T22:34:17Z",
    "author_association": "MEMBER",
    "body": "The reason I think this is worth opening an issue is that it can be confusing for users. Maybe a warning can be printed when a struct element isn't included in the abi.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1080033344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1082902115",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1082902115",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1082902115,
    "node_id": "IC_kwDOAm_5kc5Ai8Zj",
    "user": {
      "login": "0xmichalis",
      "id": 3900799,
      "node_id": "MDQ6VXNlcjM5MDA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3900799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xmichalis",
      "html_url": "https://github.com/0xmichalis",
      "followers_url": "https://api.github.com/users/0xmichalis/followers",
      "following_url": "https://api.github.com/users/0xmichalis/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xmichalis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xmichalis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xmichalis/subscriptions",
      "organizations_url": "https://api.github.com/users/0xmichalis/orgs",
      "repos_url": "https://api.github.com/users/0xmichalis/repos",
      "events_url": "https://api.github.com/users/0xmichalis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xmichalis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-30T10:20:21Z",
    "updated_at": "2022-03-30T10:20:21Z",
    "author_association": "NONE",
    "body": "@alcuadrado why wouldn't this get fixed at its source in the first place though? The generated ABI should include all public storage fields.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1082902115/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086662017",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1086662017",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1086662017,
    "node_id": "IC_kwDOAm_5kc5AxSWB",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-02T15:27:17Z",
    "updated_at": "2022-04-02T15:27:17Z",
    "author_association": "MEMBER",
    "body": "Hey @kargakis,\r\n\r\nYou are confusing what an ABI is. It's just a description of the binary encoding of inputs and outputs and other things that a smart contract understands/generate. Adding fields to the ABI will not make the contract start returning them, but it will make things worse instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1086662017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246969912",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1246969912",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1246969912,
    "node_id": "IC_kwDOAm_5kc5KU0A4",
    "user": {
      "login": "bfondevila",
      "id": 33991614,
      "node_id": "MDQ6VXNlcjMzOTkxNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33991614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfondevila",
      "html_url": "https://github.com/bfondevila",
      "followers_url": "https://api.github.com/users/bfondevila/followers",
      "following_url": "https://api.github.com/users/bfondevila/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfondevila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfondevila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfondevila/subscriptions",
      "organizations_url": "https://api.github.com/users/bfondevila/orgs",
      "repos_url": "https://api.github.com/users/bfondevila/repos",
      "events_url": "https://api.github.com/users/bfondevila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfondevila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T15:50:45Z",
    "updated_at": "2022-09-14T20:04:53Z",
    "author_association": "NONE",
    "body": "@alcuadrado I see an inconsistent behaviour with return types on functions vs mappings, though.\r\n\r\nThat solidity code above generates the following ABI for the mappedData property, where the field \"ids\" is not considered a part of the output:\r\n\r\n   ```json\r\n {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"mappedData\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"createdAt\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"user\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n}\r\n```\r\n\r\nI would expect to also be present the ABI definition this field:\r\n\r\n```json\r\n{\r\n   \"internalType\": \"uint256[]\",\r\n   \"name\": \"ids\",\r\n   \"type\": \"uint256[]\"\r\n},\r\n```\r\n\r\nBasically, I would expect these two lines of code to produce a very similar ABI:\r\n\r\n```solidity\r\nmapping(uint256 => Data) public mappedData;\r\n```\r\n\r\n```solidity\r\nfunction getData(uint256 index) external view returns (Data memory) {\r\n    return mappedData[index];\r\n}\r\n```\r\n\r\nYet the first form does not include the field with an array type \"ids\" in the ABI, where the second does.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1246969912/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1247244242",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1247244242",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1247244242,
    "node_id": "IC_kwDOAm_5kc5KV2_S",
    "user": {
      "login": "bfondevila",
      "id": 33991614,
      "node_id": "MDQ6VXNlcjMzOTkxNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33991614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfondevila",
      "html_url": "https://github.com/bfondevila",
      "followers_url": "https://api.github.com/users/bfondevila/followers",
      "following_url": "https://api.github.com/users/bfondevila/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfondevila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfondevila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfondevila/subscriptions",
      "organizations_url": "https://api.github.com/users/bfondevila/orgs",
      "repos_url": "https://api.github.com/users/bfondevila/repos",
      "events_url": "https://api.github.com/users/bfondevila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfondevila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T20:03:33Z",
    "updated_at": "2022-09-15T05:24:17Z",
    "author_association": "NONE",
    "body": "That being said, I just read the documentation stating that this is intentionally excluded:\r\n\r\nhttps://docs.soliditylang.org/en/v0.8.17/contracts.html#getter-functions\r\n\r\n> The mapping and arrays (with the exception of byte arrays) in the struct are omitted because there is no good way to select individual struct members or provide a key for the mapping\r\n\r\nIf we care so much about having the arrays in structs on the ABI, we need to create a specific function in the contract to retrieve the struct like I mentioned before; I use hardhat and typechain and this way I can see that the EVM returns all the data in the array as expected:\r\n\r\n```solidity\r\nfunction getData(uint256 index) external view returns (Data memory) {\r\n    return mappedData[index];\r\n}\r\n```\r\n\r\nEdit: I see that this is explicitly excluded [in this piece of code in Types.cpp](https://github.com/ethereum/solidity/blob/6b991624572bda03525023cf9186085fcc0f7d4c/libsolidity/ast/Types.cpp#L2812); I understand it is returned by the EVM but ignored by solidity, and explains why it is returned correctly in the struct return type in a function call but not as a mapping member type?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1247244242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1247767804",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1247767804",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1247767804,
    "node_id": "IC_kwDOAm_5kc5KX2z8",
    "user": {
      "login": "bfondevila",
      "id": 33991614,
      "node_id": "MDQ6VXNlcjMzOTkxNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33991614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfondevila",
      "html_url": "https://github.com/bfondevila",
      "followers_url": "https://api.github.com/users/bfondevila/followers",
      "following_url": "https://api.github.com/users/bfondevila/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfondevila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfondevila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfondevila/subscriptions",
      "organizations_url": "https://api.github.com/users/bfondevila/orgs",
      "repos_url": "https://api.github.com/users/bfondevila/repos",
      "events_url": "https://api.github.com/users/bfondevila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfondevila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-15T08:32:43Z",
    "updated_at": "2022-09-15T08:32:43Z",
    "author_association": "NONE",
    "body": "I wrote a small app using hardhat & typechain to show that the EVM does return the array inside the struct.\r\nWith a few modifications in the solidity compiler, I was able to compile this sample contract, produce the expected ABI, and confirm the value is returned correctly in this example:\r\n\r\nhttps://github.com/bfondevila/solidity-fix-12863-test\r\n\r\nI'd submit a merge request for the changes required in solidity, but I broke a few existing tests (and I'm sure functionality) with my changes; @alcuadrado if I can get confirmation that this issue is indeed within solidity, I'm happy to work on a more appropriate fix for this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1247767804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1248713120",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1248713120",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1248713120,
    "node_id": "IC_kwDOAm_5kc5Kbdmg",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-15T22:39:06Z",
    "updated_at": "2022-09-15T22:39:06Z",
    "author_association": "MEMBER",
    "body": "@bfondevila, yes, this is a solidity/evm thing, and has little to do with Hardhat. We just save the abi as created by `solc`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1248713120/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258426111",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1258426111",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1258426111,
    "node_id": "IC_kwDOAm_5kc5LAg7_",
    "user": {
      "login": "pedrommaiaa",
      "id": 100535780,
      "node_id": "U_kgDOBf4N5A",
      "avatar_url": "https://avatars.githubusercontent.com/u/100535780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedrommaiaa",
      "html_url": "https://github.com/pedrommaiaa",
      "followers_url": "https://api.github.com/users/pedrommaiaa/followers",
      "following_url": "https://api.github.com/users/pedrommaiaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedrommaiaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedrommaiaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedrommaiaa/subscriptions",
      "organizations_url": "https://api.github.com/users/pedrommaiaa/orgs",
      "repos_url": "https://api.github.com/users/pedrommaiaa/repos",
      "events_url": "https://api.github.com/users/pedrommaiaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedrommaiaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T18:13:51Z",
    "updated_at": "2022-09-26T18:13:51Z",
    "author_association": "NONE",
    "body": "As mentioned above, the compiler will omit the array:\r\n\r\n<img width=\"824\" alt=\"Screen Shot 2022-09-26 at 2 07 54 PM\" src=\"https://user-images.githubusercontent.com/100535780/192349963-fc9a86f6-239c-40dc-ace5-55dc58f0a0b7.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1258426111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1344865822",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1344865822",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1344865822,
    "node_id": "IC_kwDOAm_5kc5QKQYe",
    "user": {
      "login": "bfondevila",
      "id": 33991614,
      "node_id": "MDQ6VXNlcjMzOTkxNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33991614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfondevila",
      "html_url": "https://github.com/bfondevila",
      "followers_url": "https://api.github.com/users/bfondevila/followers",
      "following_url": "https://api.github.com/users/bfondevila/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfondevila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfondevila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfondevila/subscriptions",
      "organizations_url": "https://api.github.com/users/bfondevila/orgs",
      "repos_url": "https://api.github.com/users/bfondevila/repos",
      "events_url": "https://api.github.com/users/bfondevila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfondevila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T22:58:47Z",
    "updated_at": "2022-12-09T22:58:47Z",
    "author_association": "NONE",
    "body": "I'll share here a commit with some of the areas that I identified as needing changes, but I am concerned about the implications it may have on performance, and not understanding the reason why they were initially left behind in the first place.\r\n\r\nSeeing this code is many years old makes me think it just wasn't possible to implement back in the day, but the natural evolution of the compiler makes it possible now.\r\n\r\nhttps://github.com/bfondevila/solidity/pull/1/files",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1344865822/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407103266",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1407103266",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1407103266,
    "node_id": "IC_kwDOAm_5kc5T3rEi",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T21:42:24Z",
    "updated_at": "2023-01-27T21:46:13Z",
    "author_association": "MEMBER",
    "body": "Related issues: #12792, #11067.\r\n\r\nThis is not a bug, just an unfortunate \"feature\". It was motivated by the fact that returning a whole array is usually not what you want and may unintentionally lead to DoS. A getter would work at first but as your contract gathers more data and the array grows, it would at some point start running out of gas. In many cases you'll want to instead provide a function to access items at a specific index instead and this is what the compiler does when you declare a getter for an array. When the array is nested in a struct though, that's not as straightforward so the compiler omits it. And for mappings it's not even possible to return the whole mapping.\r\n\r\nNote that it's like this just for getters, and those are just syntactic sugar over a state variable with an accessor function. If you have a better idea of how it should work in your contract, you define the function yourself and make it work however you want. There the compiler does not prevent you from returning the whole array if that's really what you want.\r\n\r\nHaving said that, I'm not a fan of this happening implicitly without any kind of warning or hint from the compiler. I think it's very confusing and unexpected. I think we should at the minimum issue an INFO message saying what is happening. Even better a warning. I'd even go as far as to make it an error, though that would be a breaking change. That would be in line with the general direction to remove such implicit behavior, similar to how we for example disallowed deleting structs with mappings (#8535), where originally the compiler would just silently ignore them.\r\n\r\nSo any opinions on making this a hint/warning/error?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407103266/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407787879",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1407787879",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1407787879,
    "node_id": "IC_kwDOAm_5kc5T6SNn",
    "user": {
      "login": "murderteeth",
      "id": 89237203,
      "node_id": "MDQ6VXNlcjg5MjM3MjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/89237203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murderteeth",
      "html_url": "https://github.com/murderteeth",
      "followers_url": "https://api.github.com/users/murderteeth/followers",
      "following_url": "https://api.github.com/users/murderteeth/following{/other_user}",
      "gists_url": "https://api.github.com/users/murderteeth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murderteeth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murderteeth/subscriptions",
      "organizations_url": "https://api.github.com/users/murderteeth/orgs",
      "repos_url": "https://api.github.com/users/murderteeth/repos",
      "events_url": "https://api.github.com/users/murderteeth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murderteeth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-29T22:31:26Z",
    "updated_at": "2023-01-29T22:31:26Z",
    "author_association": "NONE",
    "body": "> Related issues: #12792, #11067.\r\n> \r\n> This is not a bug, just an unfortunate \"feature\". It was motivated by the fact that returning a whole array is usually not what you want and may unintentionally lead to DoS. A getter would work at first but as your contract gathers more data and the array grows, it would at some point start running out of gas. In many cases you'll want to instead provide a function to access items at a specific index instead and this is what the compiler does when you declare a getter for an array. When the array is nested in a struct though, that's not as straightforward so the compiler omits it. And for mappings it's not even possible to return the whole mapping.\r\n> \r\n> Note that it's like this just for getters, and those are just syntactic sugar over a state variable with an accessor function. If you have a better idea of how it should work in your contract, you define the function yourself and make it work however you want. There the compiler does not prevent you from returning the whole array if that's really what you want.\r\n> \r\n> Having said that, I'm not a fan of this happening implicitly without any kind of warning or hint from the compiler. I think it's very confusing and unexpected. I think we should at the minimum issue an INFO message saying what is happening. Even better a warning. I'd even go as far as to make it an error, though that would be a breaking change. That would be in line with the general direction to remove such implicit behavior, similar to how we for example disallowed deleting structs with mappings (#8535), where originally the compiler would just silently ignore them.\r\n> \r\n> So any opinions on making this a hint/warning/error?\r\n\r\nThanks for explaining! A warning makes sense to me here\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407787879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407793710",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1407793710",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1407793710,
    "node_id": "IC_kwDOAm_5kc5T6Tou",
    "user": {
      "login": "bfondevila",
      "id": 33991614,
      "node_id": "MDQ6VXNlcjMzOTkxNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33991614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfondevila",
      "html_url": "https://github.com/bfondevila",
      "followers_url": "https://api.github.com/users/bfondevila/followers",
      "following_url": "https://api.github.com/users/bfondevila/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfondevila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfondevila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfondevila/subscriptions",
      "organizations_url": "https://api.github.com/users/bfondevila/orgs",
      "repos_url": "https://api.github.com/users/bfondevila/repos",
      "events_url": "https://api.github.com/users/bfondevila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfondevila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-29T22:56:47Z",
    "updated_at": "2023-01-29T22:59:33Z",
    "author_association": "NONE",
    "body": "Beautiful explanation, thanks! Perfectly understand the technical reasons behind the decision.\r\n\r\nI am however against the idea of making this a warning or an error. Errors and warnings are prompts for me to go and fix my code, and this is not the solution here. Based on the explanation, this is unlikely to change in the future, so it would become a semi permanent warning that everyone will see.\r\n\r\nAgreed that a hint at least is necessary to highlight the implicit behaviour - probably even linking to a more detailed explanation of why.\r\n\r\nThis is a good solution for now, and I'd love to even discuss the possibility of adding a descriptor of \"ignored fields\" in the ABI, to make it even more explicit and allow tools like hardhat to use that information to provide another touch point to see that behaviour. What do you think @alcuadrado ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407793710/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407798168",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1407798168",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1407798168,
    "node_id": "IC_kwDOAm_5kc5T6UuY",
    "user": {
      "login": "murderteeth",
      "id": 89237203,
      "node_id": "MDQ6VXNlcjg5MjM3MjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/89237203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murderteeth",
      "html_url": "https://github.com/murderteeth",
      "followers_url": "https://api.github.com/users/murderteeth/followers",
      "following_url": "https://api.github.com/users/murderteeth/following{/other_user}",
      "gists_url": "https://api.github.com/users/murderteeth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murderteeth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murderteeth/subscriptions",
      "organizations_url": "https://api.github.com/users/murderteeth/orgs",
      "repos_url": "https://api.github.com/users/murderteeth/repos",
      "events_url": "https://api.github.com/users/murderteeth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murderteeth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-29T23:14:02Z",
    "updated_at": "2023-01-29T23:14:02Z",
    "author_association": "NONE",
    "body": "good point, `...so it would become a semi permanent warning that everyone will see`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407798168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407806616",
    "html_url": "https://github.com/ethereum/solidity/issues/12863#issuecomment-1407806616",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12863",
    "id": 1407806616,
    "node_id": "IC_kwDOAm_5kc5T6WyY",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-29T23:47:33Z",
    "updated_at": "2023-01-29T23:48:17Z",
    "author_association": "MEMBER",
    "body": "With the warning/error the idea is that such getters are inherently misleading and you should not have them. I.e. when you get the warning, you're better off switching from a getter to a function that either ignores the warning and returns the nested data as is (if you think it's safe in your case) or explicitly filters it out. This way the reader can see that there's more going on. The downside is of course that you'd probably need to define a separate type for the filtered version of the struct instead of the compiler doing that for you under the hood.\r\n\r\nIf you think that the current implicit behavior has its uses, then yeah, a hint is the most we can do. Personally, I think we would be better off with a warning or error, but curious to hear if there are people who do like this mechanism.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1407806616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
