{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11062/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11062/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11062/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11062",
  "id": 823349800,
  "node_id": "MDU6SXNzdWU4MjMzNDk4MDA=",
  "number": 11062,
  "title": "[Yul] Optimised code containing for loop(s) consumes more gas than unoptimised code",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-03-05T19:19:22Z",
  "updated_at": "2021-03-09T15:07:16Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n```\r\n{\r\n\tfor { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {\r\n\t\tfor { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {\r\n\t\t\tmstore8(\"\", 0x8000000000000000000000)\r\n\t\t\tmstore8(\"\", 0x80000000000000000000000)\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nis optimised to\r\n\r\n```\r\n{\r\n     let i := 0\r\n     let i_1 := i\r\n     for { } true { i_1 := add(i_1, 0x20) }\r\n     {\r\n         let _1 := 0x60\r\n         if iszero(lt(i_1, _1)) { break }\r\n         let i_2 := i\r\n         for { } lt(i_2, _1) { i_2 := add(i_2, 0x20) }\r\n         {\r\n             let _2 := \"\"\r\n             mstore8(_2, 0x8000000000000000000000)\r\n             mstore8(_2, 0x80000000000000000000000)\r\n         }\r\n     }\r\n}\r\n```\r\n\r\nOn evmone gas consumption difference between optimised and unoptimised code is +172 gas i.e., optimised code consumes more gas.\r\n\r\n## Environment\r\n\r\n- Compiler version: 093ea4612\r\n- Target EVM version (as per compiler settings): NA\r\n- EVM execution environment / backend / blockchain client: evmone v0.4.0\r\n\r\n## Steps to Reproduce\r\n\r\nTBD.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11062/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11062/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/791653039",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-791653039",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 791653039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTY1MzAzOQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-05T20:07:58Z",
    "updated_at": "2021-03-05T20:08:56Z",
    "author_association": "MEMBER",
    "body": "I think one of the things that is sub optimal is that literal constants get \"optimised\" to variable references that resolve to a literal expression.\r\n\r\n```\r\nlet _2 := \"\"\r\nmstore8(_2, 0x8000000000000000000000)\r\nmstore8(_2, 0x80000000000000000000000)\r\n```\r\n\r\nleads to byte code like so\r\n\r\n```\r\nPUSH1 0x0\r\nPUSH11 0x8000000000000000000000\r\nDUP2\r\nMSTORE8\r\n```\r\n\r\nas against the unoptimised sequence such as\r\n\r\n```\r\nPUSH1 0x0\r\nPUSH11 0x8000000000000000000000\r\nMSTORE8\r\n```\r\n\r\nThis leads to two additional `DUP2` per iteration in the innermost loop. Something similar happens with the following optimised snippet\r\n\r\n```\r\nlet _1 := 0x60\r\n...\r\nlet i_2 := i\r\nfor { } lt(i_2, _1) { i_2 := add(i_2, 0x20) }\r\n```\r\n\r\n\r\nHere, there are two variable references `_1` (that would otherwise assemble to `PUSH1 0x60`) assembling to `PUSH1 0x60` and `DUPX` and the `let i_2 := i` assembling to a combination of `PUSH` and `DUP` instead of `PUSH` alone.\r\n\r\n\r\nThe other issue seems to stem from loop condition of the outermost loop entering its body (see #7424 and #7409).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/791653039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/791766965",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-791766965",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 791766965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTc2Njk2NQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-05T22:42:14Z",
    "updated_at": "2021-03-05T22:44:40Z",
    "author_association": "MEMBER",
    "body": "This test (from `../test/libyul/yulInterpreterTests/recursive_function_for_loop.yul`) consumes 84 additional gas when optimised.\r\n\r\n```\r\n{\r\n        {\r\n            let a := foo_0(calldataload(0))\r\n            sstore(0, a)\r\n        }\r\n        function foo_0(x) -> y\r\n        {\r\n            y := 1\r\n            mstore8(1, 1)\r\n            for { } slt(1, keccak256(1, msize())) { let x_1 := foo_0(x) }\r\n            {\r\n                y := add(y, 1)\r\n                continue\r\n            }\r\n        }\r\n}\r\n// ----\r\n// Trace:\r\n// Memory dump:\r\n//      0: 0001000000000000000000000000000000000000000000000000000000000000\r\n// Storage dump:\r\n//   0000000000000000000000000000000000000000000000000000000000000000: 0000000000000000000000000000000000000000000000000000000000000002\r\n```\r\n\r\noptimised to\r\n\r\n```\r\n{\r\n   sstore(0, foo(calldataload(0)))\r\n   function foo(x) -> y {\r\n    y := 1\r\n    mstore8(y, y)\r\n    for { } true { pop(foo(x)) }\r\n    {\r\n        if iszero(slt(1, keccak256(1, msize()))) { break }\r\n        y := add(y, 1)\r\n        continue\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/791766965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/792972772",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-792972772",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 792972772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mjk3Mjc3Mg==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-08T18:26:28Z",
    "updated_at": "2021-03-08T18:30:41Z",
    "author_association": "MEMBER",
    "body": "Excess gas consumption = Excess gas consumption per code unit * frequency of code unit\r\n\r\nExample\r\n\r\n```\r\n/// Gas cost increase by delta\r\nfunction f() {\r\n   for { let i := 0 } lt(i, 3) { i := add(i, 1) }\r\n   {\r\n      continue\r\n   }\r\n}\r\n\r\n/// Total gas increase = delta x 3\r\nfor { let i := 0 } lt(i, 3) { i := add(i, 1) }\r\n{\r\n   f()\r\n}\r\n```\r\n\r\nThis is probably obvious, just wanted to document that it is not necessary that gas cost increase only be due to nested for loops. A frequently called function (that contains a loop) may increase gas cost of optimised code substantially.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/792972772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793852655",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-793852655",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 793852655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mzg1MjY1NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T12:54:21Z",
    "updated_at": "2021-03-09T12:54:21Z",
    "author_association": "MEMBER",
    "body": "This is a known issue and I would think that we should focus on optimizing existing code first and only then look at generated examples. Is this part of you general fuzzing efforts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793852655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793870115",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-793870115",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 793870115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mzg3MDExNQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T13:03:01Z",
    "updated_at": "2021-03-09T13:03:01Z",
    "author_association": "MEMBER",
    "body": "> This is a known issue and I would think that we should focus on optimizing existing code first and only then look at generated examples.\r\n\r\nNot sure I follow. Does existing code mean unit tests we currently have?\r\n\r\n> Is this part of you general fuzzing efforts?\r\n\r\nYes. If it is of interest, I could create a PR for specifically targeting gas usage.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/793870115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/794020056",
    "html_url": "https://github.com/ethereum/solidity/issues/11062#issuecomment-794020056",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11062",
    "id": 794020056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDAyMDA1Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T15:07:16Z",
    "updated_at": "2021-03-09T15:07:16Z",
    "author_association": "MEMBER",
    "body": "Sorry, I meant \"real world code\" instead of \"existing code\". The optimizer has several steps that result in worse code, which are performed in the hope that other steps can make better use of the code. At some point we might fuzz this, but I think we are not at that stage yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/794020056/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
