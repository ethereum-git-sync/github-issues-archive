{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14684",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14684/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14684/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14684/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14684",
  "id": 1995100664,
  "node_id": "I_kwDOAm_5kc526tH4",
  "number": 14684,
  "title": "Inheritance Linearization and Storage Layout",
  "user": {
    "login": "ArielTM",
    "id": 20728006,
    "node_id": "MDQ6VXNlcjIwNzI4MDA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/20728006?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ArielTM",
    "html_url": "https://github.com/ArielTM",
    "followers_url": "https://api.github.com/users/ArielTM/followers",
    "following_url": "https://api.github.com/users/ArielTM/following{/other_user}",
    "gists_url": "https://api.github.com/users/ArielTM/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ArielTM/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ArielTM/subscriptions",
    "organizations_url": "https://api.github.com/users/ArielTM/orgs",
    "repos_url": "https://api.github.com/users/ArielTM/repos",
    "events_url": "https://api.github.com/users/ArielTM/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ArielTM/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-15T16:15:59Z",
  "updated_at": "2023-11-15T16:15:59Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nInheritance Linearization affects the storage layout. An upgrade that seemingly shouldn't affect the layout might result in storage variables shifting places.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.21\r\n- Target EVM version (as per compiler settings): default\r\n- Framework/IDE (e.g. Truffle or Remix): Foundry\r\n- EVM execution environment / backend / blockchain client: none\r\n- Operating system: mac\r\n\r\n## Steps to Reproduce\r\n\r\nThe following simple code:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.12;\r\n\r\ncontract A {\r\n    uint256 public param_a;\r\n}\r\n\r\ncontract B is A {\r\n    uint256 public param_b;\r\n}\r\n\r\ncontract C {\r\n    uint256 public param_c;\r\n}\r\n\r\ncontract Test is C, B {\r\n    uint256 public number;\r\n}\r\n```\r\n\r\nWill produce the following storage layout:\r\n\r\n```json\r\n{\r\n  \"storage\": [\r\n    {\r\n      \"astId\": 12,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_c\",\r\n      \"offset\": 0,\r\n      \"slot\": \"0\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 4,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_a\",\r\n      \"offset\": 0,\r\n      \"slot\": \"1\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 9,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_b\",\r\n      \"offset\": 0,\r\n      \"slot\": \"2\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 19,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"number\",\r\n      \"offset\": 0,\r\n      \"slot\": \"3\",\r\n      \"type\": \"t_uint256\"\r\n    }\r\n  ],\r\n  \"types\": {\r\n    \"t_uint256\": {\r\n      \"encoding\": \"inplace\",\r\n      \"label\": \"uint256\",\r\n      \"numberOfBytes\": \"32\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhile inroducing a simple upgrade to the contract, that shouldn't affect the storage:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.12;\r\n\r\ncontract Upgrade {\r\n\r\n}\r\n\r\ncontract A {\r\n    uint256 public param_a;\r\n}\r\n\r\ncontract B is A, Upgrade {\r\n    uint256 public param_b;\r\n}\r\n\r\ncontract C is Upgrade {\r\n    uint256 public param_c;\r\n}\r\n\r\n\r\ncontract Test is C, B {\r\n    uint256 public number;\r\n}\r\n```\r\n\r\nThe storage changes:\r\n\r\n```json\r\n{\r\n  \"storage\": [\r\n    {\r\n      \"astId\": 4,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_a\",\r\n      \"offset\": 0,\r\n      \"slot\": \"0\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 16,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_c\",\r\n      \"offset\": 0,\r\n      \"slot\": \"1\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 11,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"param_b\",\r\n      \"offset\": 0,\r\n      \"slot\": \"2\",\r\n      \"type\": \"t_uint256\"\r\n    },\r\n    {\r\n      \"astId\": 23,\r\n      \"contract\": \"src/Counter.sol:Test\",\r\n      \"label\": \"number\",\r\n      \"offset\": 0,\r\n      \"slot\": \"3\",\r\n      \"type\": \"t_uint256\"\r\n    }\r\n  ],\r\n  \"types\": {\r\n    \"t_uint256\": {\r\n      \"encoding\": \"inplace\",\r\n      \"label\": \"uint256\",\r\n      \"numberOfBytes\": \"32\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis will have devastating effect in case of a protocol upgrade. I wonder if there should be a mechanism in which storage slots are not affected by linearization.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14684/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14684/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
