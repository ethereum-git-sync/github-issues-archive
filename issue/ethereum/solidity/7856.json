{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7856/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7856/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7856/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7856",
  "id": 531175270,
  "node_id": "MDU6SXNzdWU1MzExNzUyNzA=",
  "number": 7856,
  "title": "Support ERC-165 identifiers",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "aarlt",
    "id": 5008794,
    "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarlt",
    "html_url": "https://github.com/aarlt",
    "followers_url": "https://api.github.com/users/aarlt/followers",
    "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
    "organizations_url": "https://api.github.com/users/aarlt/orgs",
    "repos_url": "https://api.github.com/users/aarlt/repos",
    "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarlt/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "aarlt",
      "id": 5008794,
      "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarlt",
      "html_url": "https://github.com/aarlt",
      "followers_url": "https://api.github.com/users/aarlt/followers",
      "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
      "organizations_url": "https://api.github.com/users/aarlt/orgs",
      "repos_url": "https://api.github.com/users/aarlt/repos",
      "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarlt/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/51",
    "html_url": "https://github.com/ethereum/solidity/milestone/51",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/51/labels",
    "id": 5236000,
    "node_id": "MDk6TWlsZXN0b25lNTIzNjAwMA==",
    "number": 51,
    "title": "Sprint 6",
    "description": "Capacity multiplier: 86\nStory points: 32.5\nVelocity: 0.38",
    "creator": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 22,
    "state": "closed",
    "created_at": "2020-03-25T11:57:48Z",
    "updated_at": "2020-06-22T12:00:07Z",
    "due_on": "2020-05-01T07:00:00Z",
    "closed_at": "2020-05-04T13:44:59Z"
  },
  "comments": 30,
  "created_at": "2019-12-02T14:46:24Z",
  "updated_at": "2022-06-22T02:06:21Z",
  "closed_at": "2020-04-23T10:24:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Implement `type(I).interfaceId` as the XOR of the function selectors of the external interface of an interface or contract excluding inherited functions.\r\n\r\nThe tests should include a full ERC-165 implementation that includes inheritance.\r\n\r\n-----------\r\nOriginal text:\r\n\r\nWe can add ERC-165 support to Solidity like this:\r\n\r\n# Test case \r\n\r\n```solidity\r\ninterface I {\r\n}\r\n\r\ncontract C {\r\n    private bytes4 a = I.erc165interfaceid;\r\n}\r\n```\r\n\r\n# Negative test cases\r\n\r\n```solidity\r\ninterface I {\r\n}\r\n\r\nlibrary L {\r\n}\r\n\r\ncontract C {\r\n    private bytes4 a = C.erc165interfaceid; // ❌ ERROR: contracts do not have ERC-165 interface identifiers\r\n    private bytes4 b = L.erc165interfaceid; // ❌ ERROR: libraries do not have ERC-165 interface identifiers\r\n\r\n    function f() returns () {\r\n        private bytes4 c = this.erc165interfaceid; // ❌ ERROR: instances do not have ERC-165 interface identifiers    \r\n    }\r\n}\r\n```\r\n\r\n# Useful example\r\n\r\n```solidity\r\ninterface ERCX is ERC165\r\n{\r\n    // .\r\n}\r\n\r\ninterface ERC165\r\n{\r\n  /**\r\n   * @dev Checks if the smart contract includes a specific interface.\r\n   * @notice This function uses less than 30,000 gas.\r\n   * @param _interfaceID The interface identifier, as specified in ERC-165.\r\n   * @return True if _interfaceID is supported, false otherwise.\r\n   */\r\n  function supportsInterface(bytes4 _interfaceID)  external view returns (bool);    \r\n}\r\n\r\ncontract MyContract is ERC165, ERCX\r\n{\r\n  mapping(bytes4 => bool) internal supportedInterfaces;\r\n\r\n  constructor() public \r\n  {\r\n    supportedInterfaces[ERC165.erc165interfaceid] = true;\r\n    supportedInterfaces[ERCX.erc165interfaceid] = true;\r\n  }\r\n\r\n  function supportsInterface(bytes4 _interfaceID) external view returns (bool)\r\n  {\r\n    return supportedInterfaces[_interfaceID];\r\n  }\r\n}\r\n```\r\n\r\n# Discussion\r\n\r\nI just want to note that the convention (established by ENS and followed since then) is:\r\n\r\n> the ERC-165 identifier for an interface B, which extends an interface A, shall be based only on the members of B.\r\n\r\n**Test case**\r\n\r\n```solidity\r\npragma solidity ^0.5;\r\n\r\ninterface I { function a() external; }\r\ninterface I2 is I { function b() external; }\r\n\r\ncontract C {\r\n    constructor() public {\r\n        I2 i;\r\n        assert(I2.erc165interfaceid == i.b.selector);\r\n    }\r\n}\r\n```\r\n\r\n# References\r\n\r\nhttps://eips.ethereum.org/EIPS/eip-165",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7856/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7856/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/561090941",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-561090941",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 561090941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTA5MDk0MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-03T09:57:59Z",
    "updated_at": "2019-12-03T09:57:59Z",
    "author_association": "MEMBER",
    "body": "I'm a bit reluctant to add explicit ERC numbers to the Solidity language, but I think this is a good feature to have. We should consider adding it to `type(I)`, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/561090941/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/565231642",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-565231642",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 565231642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTIzMTY0Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T23:23:33Z",
    "updated_at": "2019-12-12T23:23:33Z",
    "author_association": "MEMBER",
    "body": "A lot of discussion took place in #1447.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/565231642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566003319",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-566003319",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 566003319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjAwMzMxOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T10:35:59Z",
    "updated_at": "2019-12-16T10:35:59Z",
    "author_association": "MEMBER",
    "body": "This could be non-breaking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566003319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566025139",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-566025139",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 566025139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjAyNTEzOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T11:37:28Z",
    "updated_at": "2019-12-16T11:37:28Z",
    "author_association": "MEMBER",
    "body": "Discussion: it should be a member of `type(I)`.\r\n\r\nBrainstorming about names:\r\n\r\n - `ercID(165)`\r\n - `interface`\r\n - `interfaceid`\r\n - `interfaceID`\r\n - `mask`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566025139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566068078",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-566068078",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 566068078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA2ODA3OA==",
    "user": {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T13:47:23Z",
    "updated_at": "2019-12-16T13:47:23Z",
    "author_association": "MEMBER",
    "body": "So, also as a sum-up for myself:\r\n\r\n* a function selector is constructed by calling keccak256 on the stringified function signature, and then resizing the resulting hash string by the first 4 bytes.\r\n* in the ticket #7922 the usecase is to xor' all \"ERC721\" function selector bytes so the result CAN be used to check for interface requirements tests.\r\n\r\nAfter some discussion IRL, I'd like to propose the following:\r\n\r\n* Since `type(arg)` already exists, a compile-time evaluated `checksum` member can be added to return the checksum of `arg`.\r\n* `type(FunctionSignature).checksum` returns the checksum of a function signature, i.e. `bytes4(keccak256(FunctionSignature))`, which happens to be equivalent to the function signature\r\n* `type(Interface_or_Contract).checksum` returns the checksum of each public function xor'd toegher.\r\n* `type(Contract as Interface).checksum` same as above, except that only public member functions from `Interface` in `Contract` are taken into account. -- The word `as` does not need to be a new keyword, as it is a context dependent word, and be treated like a directive.\r\n\r\nThe last case would be to construct the checksum of a type (contract) to be able to match it for conformance against, for example, ERC721.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566068078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566070574",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-566070574",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 566070574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA3MDU3NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T13:53:37Z",
    "updated_at": "2019-12-16T13:53:37Z",
    "author_association": "MEMBER",
    "body": "@christianparpart see my proposal in https://github.com/ethereum/solidity/issues/1447#issuecomment-287393362, it just needs the ability to pass around interface types.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/566070574/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573629024",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-573629024",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 573629024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzYyOTAyNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-13T11:56:56Z",
    "updated_at": "2020-01-13T11:56:56Z",
    "author_association": "MEMBER",
    "body": "About inheritance: We could have two members, one that only concerns the functions in the interface itself and another one that also includes inherited members. They can be combined by xor, so people can use them how they like.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/573629024/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574301165",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-574301165",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 574301165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDMwMTE2NQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-14T18:07:08Z",
    "updated_at": "2020-01-14T18:07:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Brainstorming:\r\n\r\n* `ERC721.bytes4Id`\r\n* `ERC721.bytes4IdWithAncestors`\r\n\r\n---\r\n\r\nLeaving open the possibility that ERC-165 will be superseded.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574301165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584081162",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-584081162",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 584081162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDA4MTE2Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T11:35:23Z",
    "updated_at": "2020-02-10T15:03:24Z",
    "author_association": "MEMBER",
    "body": "`type(I).inheritedInterfaceID` - `type(I).intrinsicInterfaceID`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584081162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584119815",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-584119815",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 584119815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDExOTgxNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T13:23:09Z",
    "updated_at": "2020-02-10T13:23:09Z",
    "author_association": "MEMBER",
    "body": "@fulldecent @jbaylina @nventuro @frangio We kindly need your input here. We would like to add eip 165 support as a feature to Solidity. Unfortunately, I was not able to find out how EIP 165 is defined with regards to inheritance. If a contract C inherits from A and B, what is its interface identifier? Is it the xor of the function selectors defined in A, B and C or just the ones added by C?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584119815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584257279",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-584257279",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 584257279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDI1NzI3OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T18:12:41Z",
    "updated_at": "2020-02-10T18:12:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "A contract can support more than a one interface identifier, so it's not possible to say which should be the identifier for a contract. If C inherits from A and B, it may be that both A's and B's identifiers are relevant for the specific protocol, or C's, or any other combination.\r\n\r\nThe proposal at the beginning of this issue suggested to only support asking for the identifier of an interface. This is interesting because interfaces don't support inheritance, so it wouldn't be a problem in that case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584257279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584595847",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-584595847",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 584595847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDU5NTg0Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T11:41:07Z",
    "updated_at": "2020-02-11T11:41:43Z",
    "author_association": "MEMBER",
    "body": "@frangio \"unfortunately\", interfaces now do support inheritance. My intuitive approach would be to include all functions, inherited or not. If you want to compare against multiple interfaces, you would of course have to use something like\r\n```\r\ninterface A { ... }\r\ninterface B { ... }\r\ninterface C is A, B { ... }\r\ncontract Contr is C {\r\n    function supportsInterface(bytes4 _interfaceID)  external view returns (bool) {\r\n      return\r\n        _interfaceID == type(A).interfaceID ||\r\n        _interfaceID == type(B).interfaceID ||\r\n        _interfaceID == type(C).interfaceID;\r\n    }\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584595847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584690679",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-584690679",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 584690679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDY5MDY3OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T15:26:57Z",
    "updated_at": "2020-02-11T15:26:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I share that intuition. However, in the [spec for ERC721](https://eips.ethereum.org/EIPS/eip-721), the optional interfaces were documented as:\r\n\r\n```solidity\r\ninterface ERC721Metadata /* is ERC721 */ {\r\n```\r\n\r\nThe inheritance was commented out because at the moment it wasn't allowed, but it would nowadays be uncommented. What would you say in this case? What's needed is the id for the uninherited functions of `ERC721Metadata`. Is the snippet wrong in using inheritance or would Solidity be wrong in producing the id for the full list of functions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/584690679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/585240220",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-585240220",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 585240220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTI0MDIyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T14:47:44Z",
    "updated_at": "2020-02-12T14:47:52Z",
    "author_association": "MEMBER",
    "body": "@frangio you are right, this is a place where we would need the interface id of the \"intrinsic\" interface. Other solutions:\r\n - defining an interface without erc165 and inheriting from that as well as 165.\r\n - using `type(ERC721Metadata).inerfaceID ^ type(ERC164).interfaceID`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/585240220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/585337461",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-585337461",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 585337461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTMzNzQ2MQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T18:03:08Z",
    "updated_at": "2020-02-12T18:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "The ERC-165 identifier uses only the functions directly in the interface and it excludes the functions from the inherited interfaces.\r\n\r\nTest case 1:\r\n\r\n```solidity\r\ninterface B {\r\n    function f();\r\n}\r\n\r\ninterface I is B { // The ERC-165 signature uses only the function g\r\n    function g();\r\n}\r\n```\r\n\r\nTest case 2:\r\n\r\n```solidity\r\ninterface B {\r\n    function f();\r\n}\r\n\r\ninterface I is B { // The ERC-165 signature uses functions f and g\r\n    function f();\r\n    function g();\r\n}\r\n```\r\n\r\nThis is not explicitly stated in ERC-165 (sorry!). But it is implied with its reference to Ethereum Name Service. And ENS prescribes the above process with its dependent interfaces.\r\n\r\nOther than the ERC-165 standard, the above specification is already implemented in ERC-721 and ERC-1155. For example, ERC-1155 states `interface ERC1155 /* is ERC165 */` but the interface identifier is specified and it is calculated WITHOUT the function from ERC-165.\r\n\r\n---\r\n\r\nI believe Solidity should NOT support an ERC-165 interface calculation for `contract`s. Arguments:\r\n\r\n1. This would be non-standard, only \"interfaces\" are specified in ERC-165\r\n1. An ERC-165 interface identifier serves to promote interoperability, and if a `contract` wants to support interoperability then it should conform to an `interface`, thus making a ERC-165 `contract` identifier useless\r\n1. It is possible to add this feature later additively, if desired",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/585337461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/586210492",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-586210492",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 586210492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjIxMDQ5Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-14T10:57:48Z",
    "updated_at": "2020-02-14T10:57:48Z",
    "author_association": "MEMBER",
    "body": "@fulldecent thanks for the clarifications! Would you think that `type(I).interfaceID` is an appropriate name for the xor of the identifiers of the functions defined in `I` (excluding the inherited functions)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/586210492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/586552405",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-586552405",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 586552405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU1MjQwNQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-15T04:23:50Z",
    "updated_at": "2020-02-15T04:23:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think this is an appropriate name.\r\n\r\nIt is consistent with the function definition at https://eips.ethereum.org/EIPS/eip-165",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/586552405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/587424086",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-587424086",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 587424086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQyNDA4Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T11:52:18Z",
    "updated_at": "2020-02-18T11:52:18Z",
    "author_association": "MEMBER",
    "body": "@frangio @axic what is your opinion on disallowing this on contracts and only allowing it on actual interfaces?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/587424086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/592031367",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-592031367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 592031367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjAzMTM2Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-27T15:52:16Z",
    "updated_at": "2020-02-27T15:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have a strong opinion but I feel that disallowing on contracts is kind of arbitrary. A contract defines an interface too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/592031367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597320184",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-597320184",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 597320184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzMyMDE4NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T21:12:25Z",
    "updated_at": "2020-03-10T21:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth Has there been any decision regarding whether the interfaceId will include inherited functions? We need to decide whether to use inheritance in our interfaces for the upcoming OpenZeppelin Contracts 3.0. (https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2113)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597320184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597654816",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-597654816",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 597654816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY1NDgxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T14:06:55Z",
    "updated_at": "2020-03-11T14:06:55Z",
    "author_association": "MEMBER",
    "body": "@frangio no decision yet. We are leaning towards disallowing interfaceID for contracts at least for now. What is your take on whether it should include inherited functions or not? How is it used in the community?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597654816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597747675",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-597747675",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 597747675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzc0NzY3NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T16:55:02Z",
    "updated_at": "2020-03-11T16:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think there's sufficient precedent in the community yet. Most people probably still don't know that interfaces can inherit.\r\n\r\nMy intuition is that inherited functions should not be included for the id.\r\n\r\nEdit: I realized that I'm contradicting my initial intuition that I shared a few comments back. I guess I'm still undecided on this. Sorry!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597747675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597774635",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-597774635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 597774635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzc3NDYzNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T17:45:39Z",
    "updated_at": "2020-03-11T17:45:39Z",
    "author_association": "MEMBER",
    "body": "Yeah, I think most of us are :(",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597774635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597835607",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-597835607",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 597835607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzgzNTYwNw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T19:53:18Z",
    "updated_at": "2020-03-11T19:53:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also believe an interface's id should be computed exclusively based on the functions declared on that interface and not on inherited ones. And I take @fulldecent's [comment](https://github.com/ethereum/solidity/issues/7856#issuecomment-585337461) about how interfaces are interpreted by ERC165 as confirmation that this is how we should proceed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/597835607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598223621",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-598223621",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 598223621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODIyMzYyMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T14:37:29Z",
    "updated_at": "2020-03-12T14:37:29Z",
    "author_association": "MEMBER",
    "body": "I talked to @jbaylina at EthCC and he mentioned he would intuitively think that `interfaceID` would include inherited functions, but he also said that he did not have much time to think about it.\r\n\r\nHow would an implementation of ERC165's `supportsInterface` work in both cases? Is it very different?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598223621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/599763343",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-599763343",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 599763343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc2MzM0Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-16T21:19:49Z",
    "updated_at": "2020-03-16T21:19:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue with including inherited interfaces is that would only be useful when referring to that very specific contract, with its entire ABI. Often you're only concerned with a subset of it (e.g. does it support ERC165, does it support ERC20, etc), not the entire thing. I'm not sure I can think of scenarios where I'd use something else other than the 'intrinsic' interface id.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/599763343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/599974116",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-599974116",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 599974116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTk3NDExNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-17T09:41:58Z",
    "updated_at": "2020-03-17T09:41:58Z",
    "author_association": "MEMBER",
    "body": "@nventuro I think the prime example here is an extension interface of ERC20. What should its interface ID be?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/599974116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/601767010",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-601767010",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 601767010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTc2NzAxMA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T15:43:18Z",
    "updated_at": "2020-03-20T15:43:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I see your point. \r\n\r\nI was mostly thinking about contracts, not interfaces. I _do_ believe though that 'intrinsic' would definitely be the way to go for contracts: if we're considering adding IDs for them, I'd rather they work the same way as interface IDs do. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/601767010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/602634442",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-602634442",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 602634442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjYzNDQ0Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-23T14:35:59Z",
    "updated_at": "2020-03-23T14:35:59Z",
    "author_association": "MEMBER",
    "body": "It seems that most of the people who have a specific opinion think that inherited functions should not be included. Because of that, I would propose to just implement it like that now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/602634442/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1162541287",
    "html_url": "https://github.com/ethereum/solidity/issues/7856#issuecomment-1162541287",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7856",
    "id": 1162541287,
    "node_id": "IC_kwDOAm_5kc5FSvjn",
    "user": {
      "login": "lukehutch",
      "id": 811305,
      "node_id": "MDQ6VXNlcjgxMTMwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/811305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukehutch",
      "html_url": "https://github.com/lukehutch",
      "followers_url": "https://api.github.com/users/lukehutch/followers",
      "following_url": "https://api.github.com/users/lukehutch/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukehutch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukehutch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukehutch/subscriptions",
      "organizations_url": "https://api.github.com/users/lukehutch/orgs",
      "repos_url": "https://api.github.com/users/lukehutch/repos",
      "events_url": "https://api.github.com/users/lukehutch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukehutch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T02:06:21Z",
    "updated_at": "2022-06-22T02:06:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @frangio \"unfortunately\", interfaces now do support inheritance. My intuitive approach would be to include all functions, inherited or not. If you want to compare against multiple interfaces, you would of course have to use something like\r\n> \r\n> ```\r\n> interface A { ... }\r\n> interface B { ... }\r\n> interface C is A, B { ... }\r\n> contract Contr is C {\r\n>     function supportsInterface(bytes4 _interfaceID)  external view returns (bool) {\r\n>       return\r\n>         _interfaceID == type(A).interfaceID ||\r\n>         _interfaceID == type(B).interfaceID ||\r\n>         _interfaceID == type(C).interfaceID;\r\n>     }\r\n> }\r\n> ```\r\n\r\nAt present, given `contract ERC1363 is ERC20, ERC165`, the value of `type(ERC1363).interfaceId` is the XOR of only the function selectors of `ERC1363` itself, not the function selectors of `ERC20` or `ERC165`. It doesn't seem right that the `interfaceId` of `contract ERC1363 is ERC20, ERC165` and `contract ERC1363 /* is ERC20, ERC165 */` should be the same. Any comment, @chriseth?\r\n\r\n> ## Negative test cases\r\n> ```solidity\r\n> interface I {\r\n> }\r\n> \r\n> library L {\r\n> }\r\n> \r\n> contract C {\r\n>     private bytes4 a = C.erc165interfaceid; // ❌ ERROR: contracts do not have ERC-165 interface identifiers\r\n>     private bytes4 b = L.erc165interfaceid; // ❌ ERROR: libraries do not have ERC-165 interface identifiers\r\n> \r\n>     function f() returns () {\r\n>         private bytes4 c = this.erc165interfaceid; // ❌ ERROR: instances do not have ERC-165 interface identifiers    \r\n>     }\r\n> }\r\n> ```\r\n\r\nWhy does `type(C).interfaceId` not work for contracts `C`, when it works for interfaces?\r\n\r\n```\r\nTypeError: Member \"interfaceId\" not found or not visible after argument-dependent lookup in type(contract C).\r\n```\r\n\r\nI don't see why this syntax should work for interfaces but not contracts. If you want the ERC165 `interfaceId` for a contract, you currently have to manually extract the interface for the contract into another file. That just seems like unnecessary effort.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1162541287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
