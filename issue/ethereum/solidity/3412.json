{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3412/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3412/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3412/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3412",
  "id": 290165350,
  "node_id": "MDU6SXNzdWUyOTAxNjUzNTA=",
  "number": 3412,
  "title": "Inheritance: allow stricter mutability",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2018-01-20T04:54:20Z",
  "updated_at": "2022-07-10T18:07:23Z",
  "closed_at": "2020-07-21T13:24:06Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Code example 1:\r\n\r\n```\r\npragma solidity ^0.4.19;\r\n\r\ninterface NamedThing {\r\n    function name() public view returns (string _name);\r\n}\r\n\r\ncontract Bob is NamedThing {\r\n    string public constant name = \"Bob\";\r\n}\r\n```\r\n\r\n# Code example 2:\r\n\r\n```\r\npragma solidity ^0.4.19;\r\n\r\ninterface NamedThing {\r\n    function name() public view returns (string _name);\r\n}\r\n\r\ncontract Bob is NamedThing {\r\n    function name() public pure returns (string) {\r\n        return \"Bob\";\r\n    }\r\n}\r\n```\r\n\r\n# Discussion\r\n\r\nThese two cases illustrate where an implementing contract meets the requirements of an interface. However, both cases are rejected by the compiler with the error:\r\n\r\n> Overriding function changes state mutability from \"view\" to XXX\r\n\r\nMutability is expressed in these forms:\r\n\r\n1. Payable\r\n2. Nonpayable\r\n3. View\r\n4. Pure\r\n\r\nThese are strictly ordered. All pures are views, all views are nonpayables. All nonpayables are payables.\r\n\r\n# Recommendation\r\n\r\nThe compiler should allow class inheritance / interface implementation if the downstream function has a stronger mutability guarantee.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3412/reactions",
    "total_count": 13,
    "+1": 13,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3412/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359146092",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-359146092",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 359146092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE0NjA5Mg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T05:04:43Z",
    "updated_at": "2018-01-20T05:04:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\npragma solidity ^0.4.19;\r\n\r\ncontract Bob {\r\n    function name() public pure returns (string) {\r\n        return \"Bob\";\r\n    }\r\n    \r\n    modifier makePureToView {\r\n        require(address(this) != address(0));\r\n        _;\r\n    }\r\n    \r\n    modifier makeViewNonpayable {\r\n        address[] storage a;\r\n        _;\r\n    }\r\n    \r\n    modifier makeNonpayablePayable {\r\n        require(msg.value == 0);\r\n        _;\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359146092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359174155",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-359174155",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 359174155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE3NDE1NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T14:09:19Z",
    "updated_at": "2018-01-20T14:09:19Z",
    "author_association": "MEMBER",
    "body": "I think this is a good idea to allow reducing the state mutability levels during inheritance, but we should really examine all the effects before implementing the change.\r\n\r\nQuestion is: should the external interface be based on the final implementation or the interface?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359174155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359219512",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-359219512",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 359219512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTIxOTUxMg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-21T02:44:51Z",
    "updated_at": "2018-01-21T02:44:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the \"ABI\" (which is not actually a binary interface), the stricter guarantees should be presented.\r\n\r\nAnd for the actual external interface, i.e. EVM, there is no difference since this is not part of the function signature.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/359219512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362928261",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-362928261",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 362928261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkyODI2MQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-04T18:28:27Z",
    "updated_at": "2018-02-04T18:28:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@axic Could you please help identify stakeholders for this issue and who would need to sign off? And we can query their issues/questions/concerns.\r\n\r\nI am hoping to have this issue \"accepted\". This means we can be confident it will be implemented at some point (do we have a GitHub issue label for that?) \r\n\r\nI care about this because standards work depends on this. Right now that standard (draft) is written in a way that assumes #3412 will be implemented at some point. It would be very helpful if I could justify such an assertion.\r\n\r\nReferences: \r\n\r\n- https://github.com/ethereum/EIPs/pull/841",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362928261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367185358",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-367185358",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 367185358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE4NTM1OA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T01:43:18Z",
    "updated_at": "2018-02-21T01:43:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also can we please evaluate if this test case should pass or fail:\r\n\r\n# Test case 1\r\n\r\n```solidity\r\npragma solidity ^0.4.20;\r\n\r\ninterface Math {\r\n    function calculateMostCommonNumberInSolidityDocumentation() external payable returns (int);\r\n}\r\n\r\ncontract MathImplementation is Math {\r\n    function calculateMostCommonNumberInSolidityDocumentation() external returns (int) {\r\n        return 69;\r\n    }\r\n}\r\n```\r\n\r\n# Test case 2\r\n\r\n```solidity\r\npragma solidity ^0.4.20;\r\n\r\ninterface Math {\r\n    function calculateMostCommonNumberInSolidityDocumentation() external returns (int);\r\n}\r\n\r\ncontract MathImplementation is Math {\r\n    function calculateMostCommonNumberInSolidityDocumentation() external payable returns (int) {\r\n        return 69;\r\n    }\r\n}\r\n```\r\n\r\n# Discussion\r\n\r\nIn the discussion of the deed/NFT/DAR standard https://github.com/ethereum/EIPs/pull/841 we have specified which functions are payable and which are not. The 0x team argues that it is not in scope for a standard (an interface) to specify whether functions are payable.\r\n\r\nI think this discussion has wider applicability in the Solidity ecosystem so I have brought it here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367185358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367185899",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-367185899",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 367185899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE4NTg5OQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T01:46:02Z",
    "updated_at": "2018-02-21T01:46:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@axic Sorry, posted to the wrong place. Moving here.\r\n\r\nReferencing your comment https://github.com/ethereum/solidity/issues/3458#issuecomment-367177446\r\n\r\n> I think the current specific rule in the code is that a contract implementing an interface may not modify the state mutability level of a function.\r\n>\r\n> State mutability is defined as ([the only summary](http://solidity.readthedocs.io/en/develop/abi-spec.html?highlight=payable#json) - there is also another suggestion to [move selfdestruct into another state mutability level](https://github.com/ethereum/solidity/issues/3221)):\r\n>\r\n> > stateMutability: a string with one of the following values:\r\n> >\r\n> > - pure (specified to not read blockchain state),\r\n> > - view (specified to not modify the blockchain state),\r\n> > - nonpayable (cannot accept value transfers) and\r\n> > - payable (can accept value transfers).\r\n>\r\n> Above the state mutability level is increasing from pure (nothing) to payable (everything).\r\n>\r\n> What are the reasons proposed for disregarding the payable keyword for interfaces?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367185899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/605926678",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-605926678",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 605926678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTkyNjY3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-30T10:47:33Z",
    "updated_at": "2020-03-30T10:47:33Z",
    "author_association": "MEMBER",
    "body": "Agreement from call: We should have this.\r\n\r\nUnless anyone can come up with an example why this might be a bad example, we should check it on the inheritance graph instead of the linearized hierarchy.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/605926678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652394891",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-652394891",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 652394891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjM5NDg5MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T12:41:35Z",
    "updated_at": "2020-07-01T12:41:35Z",
    "author_association": "MEMBER",
    "body": "Discussion: maybe take payable / nonpayable out because it is more complicated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652394891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652419856",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-652419856",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 652419856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjQxOTg1Ng==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T13:31:02Z",
    "updated_at": "2020-07-01T13:31:02Z",
    "author_association": "MEMBER",
    "body": "I'm fine with taking payable/nonpayable out in the first step. Once we want to go for it, I'd say this:\r\n\r\nOverriding something payable with something non-payable is fine (after all you could also implement a payable function with ``require(msg.value == 0);`` in the beginning) - but overriding something non-payable with something payable is not fine (since calling in the base contract should always be able to assume that there is a callvalue check).\r\n\r\nActually if we don't allow overriding payable with non-payable, then we should also not allow overriding payable with view or pure, because it has the same problem. But I think the following is fine:\r\n\r\nThe as far as I'm concerned, the order is ``payable < non-payable < view < pure``, increasing is fine, decreasing isn't.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652419856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/654928436",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-654928436",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 654928436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDkyODQzNg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-07T15:06:26Z",
    "updated_at": "2020-07-07T15:06:26Z",
    "author_association": "MEMBER",
    "body": "> Overriding something payable with something non-payable is fine (after all you could also implement a payable function with require(msg.value == 0); in the beginning) \r\n\r\nI think that is correct, but at the same time it just opens the door for unwanted mistakes. We should also decide how much we try to ensure people avoid mistakes vs. \"somehow forcing them\" to be more depending on tests and not the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/654928436/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661859151",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-661859151",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 661859151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTg1OTE1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-21T13:24:06Z",
    "updated_at": "2020-07-21T13:24:06Z",
    "author_association": "MEMBER",
    "body": "Implemented in https://github.com/ethereum/solidity/pull/9344",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661859151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1179773476",
    "html_url": "https://github.com/ethereum/solidity/issues/3412#issuecomment-1179773476",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3412",
    "id": 1179773476,
    "node_id": "IC_kwDOAm_5kc5GUeok",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-10T18:07:22Z",
    "updated_at": "2022-07-10T18:07:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any appetite here to allow a `payable` to be overridden by a stricter type (non-payable, view, pure), the way that other override-with-stricter is possible?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1179773476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
