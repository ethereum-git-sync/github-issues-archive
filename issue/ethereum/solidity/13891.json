{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13891/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13891/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13891/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13891",
  "id": 1558022824,
  "node_id": "I_kwDOAm_5kc5c3Yqo",
  "number": 13891,
  "title": "26-byte memory leak in libcln makes the nightly `t_ubu_asan_soltest` and `t_ubu_asan_cli` jobs fail",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "r0qs",
    "id": 457348,
    "node_id": "MDQ6VXNlcjQ1NzM0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/r0qs",
    "html_url": "https://github.com/r0qs",
    "followers_url": "https://api.github.com/users/r0qs/followers",
    "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
    "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
    "organizations_url": "https://api.github.com/users/r0qs/orgs",
    "repos_url": "https://api.github.com/users/r0qs/repos",
    "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/r0qs/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2023-01-26T11:51:27Z",
  "updated_at": "2023-01-31T10:44:57Z",
  "closed_at": "2023-01-31T10:44:57Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Our address sanitizer jobs keep failing due to a small memory leak, apparently coming from libcln.\r\n\r\nWe should reproduce and report upstream if possible, but it does not seem to be coming from our own code so first we need to silence that in the nightly run. It's currently spamming the #solidity-dev channel with tons of messages every day.\r\n\r\n### Details\r\n[run 1254522 of `t_ubu_asan_soltest`](https://app.circleci.com/pipelines/github/ethereum/solidity/28269/workflows/f9ee7aa4-82c3-4057-bdcd-c340a8138581/jobs/1254522) and [run 1254523 of `t_ubu_asan_cli`](https://app.circleci.com/pipelines/github/ethereum/solidity/28269/workflows/f9ee7aa4-82c3-4057-bdcd-c340a8138581/jobs/1254523):\r\n```\r\n=================================================================\r\n==95==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 26 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7fb17efca867 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\r\n    #1 0x7fb17d787170  (/lib/x86_64-linux-gnu/libcln.so.6+0x5f170)\r\n\r\nSUMMARY: AddressSanitizer: 26 byte(s) leaked in 1 allocation(s).\r\n```",
  "closed_by": {
    "login": "r0qs",
    "id": 457348,
    "node_id": "MDQ6VXNlcjQ1NzM0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/r0qs",
    "html_url": "https://github.com/r0qs",
    "followers_url": "https://api.github.com/users/r0qs/followers",
    "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
    "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
    "organizations_url": "https://api.github.com/users/r0qs/orgs",
    "repos_url": "https://api.github.com/users/r0qs/repos",
    "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/r0qs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13891/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13891/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1404896592",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1404896592",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1404896592,
    "node_id": "IC_kwDOAm_5kc5TvQVQ",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T11:52:32Z",
    "updated_at": "2023-01-26T11:52:32Z",
    "author_association": "MEMBER",
    "body": "@r0qs's analysis of the issue:\r\n\r\n> Hey, I quickly looked at the asan CI problem and reproduced it locally. The memory leak apparently started when we updated the ubuntu images to 22.04 and added `libcln-dev` (used by CVC4). I couldn't find the root of the issue though.\r\n> \r\n> ```\r\n> =================================================================\r\n> ==2245==ERROR: LeakSanitizer: detected memory leaks\r\n> \r\n> Direct leak of 26 byte(s) in 1 object(s) allocated from:\r\n>     #0 0x7f409ccbfa89 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n>     #1 0x7f409a2eec2f  (/usr/lib/libcln.so.6+0x56c2f)\r\n> \r\n> SUMMARY: AddressSanitizer: 26 byte(s) leaked in 1 allocation(s).\r\n> ```\r\n> \r\n> It seems to be in `libcln` and I tried to find some more info in their mailing list https://www.ginac.de/pipermail/cln-list/ and code base, but I have no clue at the moment.\r\n> However, the problem does not happen when using clang or when compiling with gcc using `-DSANITIZE=leak` instead of `address`, which may hint that is a `out-of-bounds` or `use-after-free` type of bug.\r\n> \r\n> I still need to check the available asan options: https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags and see if I can generate more meaningful logs. And, maybe check the differences between the gcc versions in ubuntu 20.04 and 22.04, which may also be a cause, although I manage to reproduce in my machine, so it is probably a problem related with the most recent gcc versions?\r\n> \r\n> The triggered malloc interception was this one: https://github.com/gcc-mirror/gcc/blob/master/libsanitizer/asan/asan_malloc_linux.cpp#L69",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1404896592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1405172681",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1405172681",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1405172681,
    "node_id": "IC_kwDOAm_5kc5TwTvJ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T15:22:18Z",
    "updated_at": "2023-01-26T15:22:18Z",
    "author_association": "MEMBER",
    "body": "My guess is that this is some static global allocation in libcln, which is probably perfectly fine, so (of course after a proper investigation) we may just want to blacklist allocations from there being sanitized (there ought to be *some* way of doing that). Interestingly, due to similar issues with Z3 and CVC4 in general, we don't even run the SMT tests in those test runs, I think - so it may actually stem from some static library initialization merely due to linking to it itself, not from actually running anything through it. But yeah, worth a closer look eventually.\r\n\r\nThe easiest way to sched a bit more light on this without too much effort would probably be to work within the dockerimage environment of this test run, remove the ``libcln-dev`` package and replace it by a custom build with debug symbols, which should tell us what ``/usr/lib/libcln.so.6+0x56c2f`` really is (there may even be some way to plug in remote debugging symbols or such with even less effort).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1405172681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408227233",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408227233",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408227233,
    "node_id": "IC_kwDOAm_5kc5T79eh",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:07:46Z",
    "updated_at": "2023-01-30T09:09:20Z",
    "author_association": "MEMBER",
    "body": "I think your guess is about right @ekpyron:\r\n```\r\n\r\n=================================================================\r\n==25==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 26 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7fb815e07867 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\r\n    #1 0x7fb81456d860 in xmalloc base/cl_malloc.cc:28\r\n    #2 0x7fb81457e450 in cln::cl_make_heap_string(char const*) base/string/cl_st_make1.cc:20\r\n    #3 0x7fb81457bb7c in cln::cl_string::cl_string(char const*) ../include/cln/string.h:83\r\n    #4 0x7fb81457bc63 in cln::cl_print_univpoly_flags::cl_print_univpoly_flags() (/lib/x86_64-linux-gnu/libcln.so.6+0x63c63)\r\n    #5 0x7fb81457bd23 in cln::cl_print_flags::cl_print_flags() (/lib/x86_64-linux-gnu/libcln.so.6+0x63d23)\r\n    #6 0x7fb81457b93d in cln::cl_prin_globals_init_helper::cl_prin_globals_init_helper() base/output/cl_prin_globals.cc:21\r\n    #7 0x7fb81456cfd1 in __static_initialization_and_destruction_0 ../include/cln/io.h:76\r\n    #8 0x7fb81456d00e in _GLOBAL__sub_I_cl_as_exception.cc base/cl_as_exception.cc:44\r\n    #9 0x7fb81674b47d  (/lib64/ld-linux-x86-64.so.2+0x647d)\r\n\r\nSUMMARY: AddressSanitizer: 26 byte(s) leaked in 1 allocation(s).\r\n```\r\n\r\nHowever, running with `ASAN_OPTIONS=report_globals=0` (https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags) and `-fsanitize=address` doesn't seem to work though. And the blocklist seems to be only supported by clang: https://github.com/google/sanitizers/wiki/AddressSanitizer#turning-off-instrumentation\r\n\r\nFor a bit more context of why this started to happen when we migrated to Ubuntu `22.04`. It seems to be because CVC4 actually has CLN as an [optional feature](https://github.com/CVC4/CVC4-archived/blob/master/INSTALL.md#cln--v13-class-library-for-numbers), but Jammy ships CVC4 with it enabled by default (see cvc4 build logs: https://launchpadlibrarian.net/500040171/buildlog_ubuntu-groovy-amd64.cvc4_1.8-2_BUILDING.txt.gz - search for `MP library`).\r\nWhile Ubuntu `20.04` doesn't, it uses the default CVC4 multi-precision arithmetic package, which is GMP (see: https://launchpadlibrarian.net/463402585/buildlog_ubuntu-focal-amd64.cvc4_1.6-2build2_BUILDING.txt.gz).\r\n\r\nRebuilding CVC4 with GMP instead of CLN work around the problem.\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408227233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408277140",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408277140",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408277140,
    "node_id": "IC_kwDOAm_5kc5T8JqU",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:39:55Z",
    "updated_at": "2023-01-30T09:39:55Z",
    "author_association": "MEMBER",
    "body": "A static global for a shared library in a header... what are they thinking there :-)...\r\nAnd this is what it does: https://www.ginac.de/CLN/cln.git/?p=cln.git;a=blob_plain;f=src/base/output/cl_prin_globals.cc;hb=HEAD\r\n\r\nQuite weird, if you ask me...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408277140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408287809",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408287809",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408287809,
    "node_id": "IC_kwDOAm_5kc5T8MRB",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:44:49Z",
    "updated_at": "2023-01-30T09:44:49Z",
    "author_association": "MEMBER",
    "body": "haha. Maybe setting `alloc_dealloc_mismatch` to false and/or `asan-globals` to 0 could also work. I also found this option: [malloc_context_size=0](https://github.com/google/sanitizers/wiki/AddressSanitizerCallStack) which may work. But it would disable it completely I guess.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408287809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408288931",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408288931",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408288931,
    "node_id": "IC_kwDOAm_5kc5T8Mij",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:45:18Z",
    "updated_at": "2023-01-30T09:46:19Z",
    "author_association": "MEMBER",
    "body": "I guess that's meant to be a workaround for undefined order of initialization of static globals...\r\nShould probably rather use something like\r\n```\r\ncl_print_flags& default_print_flags();\r\n```\r\nwith an implemenation of\r\n```\r\ncl_print_flags& default_print_flags()\r\n{\r\n    static cl_print_flags flags;\r\n    return flags;\r\n}\r\n```\r\n\r\nIf we want to suggest that upstream... won't solve our problem short-term, though...\r\n\r\nI guess the hardcore method for working around this on our end for now would be\r\n```\r\nsed -i -e 's/static cl_prin_globals_init_helper cl_prin_globals_init_helper_instance;//' /usr/include/cln/io.h\r\n```\r\nfor that build run - that *may* solve this and I'd be surprised if it had any bad effects...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408288931/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408293301",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408293301",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408293301,
    "node_id": "IC_kwDOAm_5kc5T8Nm1",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:47:15Z",
    "updated_at": "2023-01-30T09:47:15Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, it's our default build run this test run is running against... not sure it's wise to mess with third party headers like that for those builds...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408293301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408301486",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408301486",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408301486,
    "node_id": "IC_kwDOAm_5kc5T8Pmu",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:52:09Z",
    "updated_at": "2023-01-30T09:52:43Z",
    "author_association": "MEMBER",
    "body": "Yeah, and IMHO rebuilding CVC4 disabling CLN seems fine to me. I mean, we were already not using CLN with CVC4 and the Ubuntu Focal image, so even though the CVC4 docs claims that CLN has some performance gains against GMP, going back to GMP would only keep us in a similar configuration as we had before the migration to Ubuntu Jammy. And we don't need to mess with anything.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408301486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408303240",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408303240",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408303240,
    "node_id": "IC_kwDOAm_5kc5T8QCI",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:53:34Z",
    "updated_at": "2023-01-30T09:53:34Z",
    "author_association": "MEMBER",
    "body": "Rebuilding a custom cvc4 messes up all our testing. Building with or without GMP has caused various differences in Z3 in the past - same danger for CVC4 I guess...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408303240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408303912",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408303912",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408303912,
    "node_id": "IC_kwDOAm_5kc5T8QMo",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:54:08Z",
    "updated_at": "2023-01-30T09:54:08Z",
    "author_association": "MEMBER",
    "body": "As in: the SMT test suite won't pass against a stock ubuntu installation, if we test against custom builds of things.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408303912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408313539",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408313539",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408313539,
    "node_id": "IC_kwDOAm_5kc5T8SjD",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:59:10Z",
    "updated_at": "2023-01-30T09:59:10Z",
    "author_association": "MEMBER",
    "body": "But yeah, as for the root cause in libcln: it's actually not a false positive - cln is properly leaking memory there (even though not exactly a devestating amount) :-). Might be worth reporting.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408313539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408332673",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408332673",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408332673,
    "node_id": "IC_kwDOAm_5kc5T8XOB",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T10:10:32Z",
    "updated_at": "2023-01-30T10:10:32Z",
    "author_association": "MEMBER",
    "body": "Maybe we should just disable CVC4 for now, if that helps. Most SMTChecker tests rely on z3 because of CHC (CVC4 doesn't have a CHC solver), and we need to upgrade the interface to CVC5 anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408332673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408500559",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408500559",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408500559,
    "node_id": "IC_kwDOAm_5kc5T9ANP",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:04:47Z",
    "updated_at": "2023-01-30T12:04:47Z",
    "author_association": "MEMBER",
    "body": "> I guess that's meant to be a workaround for undefined order of initialization of static globals... Should probably rather use something like\r\n> \r\n> ```\r\n> cl_print_flags& default_print_flags();\r\n> ```\r\n> \r\n> with an implemenation of\r\n> \r\n> ```\r\n> cl_print_flags& default_print_flags()\r\n> {\r\n>     static cl_print_flags flags;\r\n>     return flags;\r\n> }\r\n> ```\r\n> \r\n> If we want to suggest that upstream... won't solve our problem short-term, though...\r\n> \r\n> I guess the hardcore method for working around this on our end for now would be\r\n> \r\n> ```\r\n> sed -i -e 's/static cl_prin_globals_init_helper cl_prin_globals_init_helper_instance;//' /usr/include/cln/io.h\r\n> ```\r\n> \r\n> for that build run - that _may_ solve this and I'd be surprised if it had any bad effects...\r\n\r\nThe following options works:\r\n```\r\nLSAN_OPTIONS=\"malloc_context_size=0\" solc\r\n```\r\n\r\nor\r\n\r\n```\r\ncat <<- 'EOF' > cln.supp\r\nleak:*__interceptor_malloc*\r\nEOF\r\nLSAN_OPTIONS=\"suppressions=cln.supp\" solc\r\n```\r\n\r\nI cannot suppress by `cl_prin_globals_init_helper` since it does not appear in the stack trace in the default (non-debug) CLN build.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408500559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408510992",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408510992",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408510992,
    "node_id": "IC_kwDOAm_5kc5T9CwQ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:12:26Z",
    "updated_at": "2023-01-30T12:12:26Z",
    "author_association": "MEMBER",
    "body": "That sounds like it disables *a lot* of cases in bulk... you can't suppress by library name instead of by symbol?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408510992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408517121",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408517121",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408517121,
    "node_id": "IC_kwDOAm_5kc5T9EQB",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:17:05Z",
    "updated_at": "2023-01-30T12:39:47Z",
    "author_association": "MEMBER",
    "body": "> That sounds like it disables _a lot_ of cases in bulk... you can't suppress by library name instead of by symbol?\r\n\r\nAccording with the [docs](https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer#suppressions) it depends on the stack trace, and the one without the debug symbols does not provide too much info to match against it.\r\n```\r\nThe pattern will be substring-matched against the symbolized stack trace of the leak.\r\n```\r\n\r\nThe actual stack trace is just:\r\n```\r\n=================================================================\r\n==8==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 26 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7fb17efca867 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\r\n    #1 0x7fb17d787170  (/lib/x86_64-linux-gnu/libcln.so.6+0x5f170)\r\n\r\nSUMMARY: AddressSanitizer: 26 byte(s) leaked in 1 allocation(s).\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408517121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408519444",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408519444",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408519444,
    "node_id": "IC_kwDOAm_5kc5T9E0U",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:18:56Z",
    "updated_at": "2023-01-30T12:18:56Z",
    "author_association": "MEMBER",
    "body": "Maybe you can match ``libcln.so`` in that trace :-)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408519444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408521014",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408521014",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408521014,
    "node_id": "IC_kwDOAm_5kc5T9FM2",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:20:11Z",
    "updated_at": "2023-01-30T12:20:11Z",
    "author_association": "MEMBER",
    "body": "> Maybe you can match `libcln.so` in that trace :-)?\r\n\r\nhaha true",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408521014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408522253",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408522253",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408522253,
    "node_id": "IC_kwDOAm_5kc5T9FgN",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:21:10Z",
    "updated_at": "2023-01-30T12:21:10Z",
    "author_association": "MEMBER",
    "body": "yeah, it works:\r\n```\r\n-----------------------------------------------------\r\n Suppressions used:\r\n  count      bytes template\r\n       1         26 *libcln*\r\n-----------------------------------------------------\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408522253/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408563245",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408563245",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408563245,
    "node_id": "IC_kwDOAm_5kc5T9Pgt",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T12:48:41Z",
    "updated_at": "2023-01-30T12:48:41Z",
    "author_association": "MEMBER",
    "body": "Beyond the workaround, it'd be nice to complain about this to CLN upstream.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408563245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408690010",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1408690010",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1408690010,
    "node_id": "IC_kwDOAm_5kc5T9uda",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T14:09:01Z",
    "updated_at": "2023-01-30T14:09:01Z",
    "author_association": "MEMBER",
    "body": "Right I will do that now. Should we consider the issue closed for now or better to keep it open until it is fixed upstream?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1408690010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410133715",
    "html_url": "https://github.com/ethereum/solidity/issues/13891#issuecomment-1410133715",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13891",
    "id": 1410133715,
    "node_id": "IC_kwDOAm_5kc5UDO7T",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T10:44:57Z",
    "updated_at": "2023-01-31T10:44:57Z",
    "author_association": "MEMBER",
    "body": "The problem was reported upstream to the CLN mailing list.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410133715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
