{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9790",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9790/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9790/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9790/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9790",
  "id": 700464297,
  "node_id": "MDU6SXNzdWU3MDA0NjQyOTc=",
  "number": 9790,
  "title": "Non-deterministic output according to filesystem path",
  "user": {
    "login": "mikeshultz",
    "id": 1048089,
    "node_id": "MDQ6VXNlcjEwNDgwODk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1048089?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mikeshultz",
    "html_url": "https://github.com/mikeshultz",
    "followers_url": "https://api.github.com/users/mikeshultz/followers",
    "following_url": "https://api.github.com/users/mikeshultz/following{/other_user}",
    "gists_url": "https://api.github.com/users/mikeshultz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mikeshultz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mikeshultz/subscriptions",
    "organizations_url": "https://api.github.com/users/mikeshultz/orgs",
    "repos_url": "https://api.github.com/users/mikeshultz/repos",
    "events_url": "https://api.github.com/users/mikeshultz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mikeshultz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-13T02:42:48Z",
  "updated_at": "2020-10-01T14:51:37Z",
  "closed_at": "2020-10-01T14:51:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI'm seeing non-deterministic output according to filesystem path when compiling libraries.  I've been able to reproduce it with multiple versions.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.5.11-0.7.1 (tested)\r\n- Target EVM version (as per compiler settings): default\r\n- Framework/IDE (e.g. Truffle or Remix): n/a\r\n- EVM execution environment / backend / blockchain client: n/a\r\n- Operating system: Linux\r\n\r\n## Steps to Reproduce\r\n\r\nI put together [a test case repository](https://github.com/mikeshultz/solc-non-deterministic-case).  If you run `run.sh /path/to/solc` it'll compile 3 identical libraries in 3 different directories displaying md5 hashes of the source contract and output.\r\n\r\nExample from my last run:\r\n\r\n    $ ./run.sh ~/.local/bin/solc.0.7.1\r\n    Compiled contract a: 253b4238c2f607c39950d7cd2e6f4641/40f8f82ad16272edc8dd616069b22605\r\n    Compiled contract b: 253b4238c2f607c39950d7cd2e6f4641/48da6b634e3ee37565a99955d02454a4\r\n    Compiled contract c: 253b4238c2f607c39950d7cd2e6f4641/19888f5974c4bb763ed80282f4bbd239\r\n\r\nThis may be related to #168 which was closed before resolution.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9790/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9790/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/691969623",
    "html_url": "https://github.com/ethereum/solidity/issues/9790#issuecomment-691969623",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9790",
    "id": 691969623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTk2OTYyMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T10:36:07Z",
    "updated_at": "2020-09-14T10:36:07Z",
    "author_association": "MEMBER",
    "body": "This is known behaviour. You tell the compiler: \"Compile the file called `a/SafeMath.sol`\", so this is how the file is known to the compiler. Any imports performed will also call the file by that name and because of that, this fact has to be hashed into the compilation artefact to make the build reproducible (otherwise, imports might resolve to different files).\r\n\r\nIf you want to abstract away the directories a / b / c, you have three options:\r\n - compile from inside the directory and call the compile directly on the file. This will cause the compiler to put the file in the root directory of its virtual filesystem\r\n - use the `--base-path` option to tell the compiler where the root of its virtual filesystem is\r\n - use standard-json, where you have full control about how to name files and are not constrained to how they are called in the file system or how they are arranged relative to each other in directories.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/691969623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/692157927",
    "html_url": "https://github.com/ethereum/solidity/issues/9790#issuecomment-692157927",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9790",
    "id": 692157927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjE1NzkyNw==",
    "user": {
      "login": "mikeshultz",
      "id": 1048089,
      "node_id": "MDQ6VXNlcjEwNDgwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1048089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikeshultz",
      "html_url": "https://github.com/mikeshultz",
      "followers_url": "https://api.github.com/users/mikeshultz/followers",
      "following_url": "https://api.github.com/users/mikeshultz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikeshultz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikeshultz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikeshultz/subscriptions",
      "organizations_url": "https://api.github.com/users/mikeshultz/orgs",
      "repos_url": "https://api.github.com/users/mikeshultz/repos",
      "events_url": "https://api.github.com/users/mikeshultz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikeshultz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T16:08:51Z",
    "updated_at": "2020-09-14T16:08:51Z",
    "author_association": "NONE",
    "body": "I'm curious about the hashing logic.  What does the bytecode care about source imports? Any interfaces or library code should be effectively integrated or placeholdered at the point of bytecode output, no?  I get why placeholder hashes might include file paths since it's very relevant, but not why that might effect contract bytecode.  If you happen to move source files around but leave execution instructions all the same, I think most of us would expect the build to output the same bytecode at the end.\r\n\r\nNot a big deal to me, it's just unintuitive.  Thank you for the options, those will be helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/692157927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/692196980",
    "html_url": "https://github.com/ethereum/solidity/issues/9790#issuecomment-692196980",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9790",
    "id": 692196980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjE5Njk4MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T17:20:11Z",
    "updated_at": "2020-09-14T17:20:11Z",
    "author_association": "MEMBER",
    "body": "Of course, there are changes to filenames and paths that should not change the semantics of the contract, but if you exchange the names of to files, then this can have a big influence, especially if they define the same symbols. The idea is that we want a hash in the bytecode that basically is a watermark and allows re-compilation in exactly the same way as it was done before deployment, including the names of all files and all comments in the source code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/692196980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
