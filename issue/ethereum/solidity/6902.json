{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6902/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6902/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6902/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6902",
  "id": 452405657,
  "node_id": "MDU6SXNzdWU0NTI0MDU2NTc=",
  "number": 6902,
  "title": "[isoltest] Handle events in isoltest semantics tests.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "aarlt",
    "id": 5008794,
    "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarlt",
    "html_url": "https://github.com/aarlt",
    "followers_url": "https://api.github.com/users/aarlt/followers",
    "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
    "organizations_url": "https://api.github.com/users/aarlt/orgs",
    "repos_url": "https://api.github.com/users/aarlt/repos",
    "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarlt/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "aarlt",
      "id": 5008794,
      "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarlt",
      "html_url": "https://github.com/aarlt",
      "followers_url": "https://api.github.com/users/aarlt/followers",
      "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
      "organizations_url": "https://api.github.com/users/aarlt/orgs",
      "repos_url": "https://api.github.com/users/aarlt/repos",
      "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarlt/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-06-05T09:38:50Z",
  "updated_at": "2021-05-31T12:38:15Z",
  "closed_at": "2021-05-31T12:38:15Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "At some point we should be able to expect events emitted during a transaction/call in ``isoltest``.\r\nWe'll first need to decide what syntax to use for that, though.\r\nSuggestion:\r\n```\r\ncontract C {\r\n    event TestEvent(uint256);\r\n    function f() public {\r\n        emit TestEvent(42);\r\n    }\r\n}\r\n// ----\r\n// f() ->\r\n// LOG[0]: TestEvent(uint256), 42\r\n```\r\n\r\nMaybe we should also have some way to check the logged ether amount of the transaction.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6902/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6902/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734507285",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-734507285",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 734507285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDUwNzI4NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-26T23:32:51Z",
    "updated_at": "2020-11-26T23:32:51Z",
    "author_association": "MEMBER",
    "body": "Moved from #10427:\r\n> Some tests depend on checking `numLogTopics(logIndex) -> uint`, `logAddress(logIndex) -> address`, `logData(logIndex) -> bytes`, `logTopic(logIndex, topic) -> bytes`, such as `abi_encodePackedV2_structs`.\r\n>\r\n> I have no syntax suggestion, but this may be a blocker for getting rid of `SolidityEndToEndTest`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734507285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736420757",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-736420757",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 736420757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjQyMDc1Nw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T11:02:13Z",
    "updated_at": "2020-12-01T11:04:35Z",
    "author_association": "MEMBER",
    "body": "> Some tests depend on checking `numLogTopics(logIndex) -> uint`, `logAddress(logIndex) -> address`, `logData(logIndex) -> bytes`, `logTopic(logIndex, topic) -> bytes`, such as `abi_encodePackedV2_structs`.\r\n> I have no syntax suggestion, but this may be a blocker for getting rid of `SolidityEndToEndTest`.\r\n\r\nAll of this would be covered by just checking the entire log precisely, though, wouldn't it? I.e. in ``abi_encodePackedV2_structs`` the following would be fine:\r\n\r\n```\r\n// testStorage() ->\r\n// LOG[0]: E(string[]) -> ... /* encoding */\r\n// testMemory() ->\r\n// LOG[0]: E(string[]) -> ... /* same encoding */\r\n```\r\nEspecially, if we make events *not* occurring in the expectations an error (which we definitely should).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736420757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736425061",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-736425061",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 736425061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjQyNTA2MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T11:04:53Z",
    "updated_at": "2020-12-01T11:04:53Z",
    "author_association": "MEMBER",
    "body": "Yes, all are reading parts of the same `logIndex` supplied. This was a direct translation what is in the tests currently, not a definitive suggestion. However since logs can be large, perhaps it is easier to read if it is split up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736425061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736426669",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-736426669",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 736426669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjQyNjY2OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T11:05:56Z",
    "updated_at": "2020-12-01T11:05:56Z",
    "author_association": "MEMBER",
    "body": "Ok, ``logAddress`` in some of the other tests is still a thing. But if we don't come up with something better we can just make the address part of the expectation in general (the addresses in the tests are deterministic)...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/736426669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/756197096",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-756197096",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 756197096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjE5NzA5Ng==",
    "user": {
      "login": "aarlt",
      "id": 5008794,
      "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarlt",
      "html_url": "https://github.com/aarlt",
      "followers_url": "https://api.github.com/users/aarlt/followers",
      "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
      "organizations_url": "https://api.github.com/users/aarlt/orgs",
      "repos_url": "https://api.github.com/users/aarlt/repos",
      "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarlt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T15:45:30Z",
    "updated_at": "2021-01-07T15:45:30Z",
    "author_association": "MEMBER",
    "body": "I was experimenting a bit with the syntax and how we could implement this. I was thinking about introducing \"builtin\" functions into isoltest. I thought it would make sense to provide the same \"low-level\" functions - `numLogs`, `numLogTopics`, `logTopic`, `logAddress` and `logData` - as used in `SolidityEndToEndTest.cpp`.\r\n\r\nI think @ekpyron syntax proposal is nice but maybe it is too high-level. If I understood that syntax correctly, we will not be able to check explicitly for indexed & anonymous events. I could imagine that it may make sense to have such \"higher-level\" function. Such function may simplify the event usage of newly written semantic tests. I think we should start with the \"low-level\" functions first, so that we are able to easily translate the event based `SolidityEndToEndTest` tests to semantic tests.\r\n\r\nI think the syntax for the \"low-level\" functions could look like this:\r\n```\r\n// logs.numLogs() -> 1\r\n// logs.numLogTopics(uint256): 0 -> 2\r\n// logs.logTopic(uint256,uint256): 0, 0 -> 0x123...\r\n// logs.logAddress(uint256): 0 -> 0x234..\r\n// logs.logData(uint256): 1 -> 0x345..\r\n```\r\n\r\nI have in mind to create a simple framework that allows to define builtin functions. These builtin functions will be placed in a \"module\" namespace, where each module can provide different functions. A call to a builtin will always be defined like `<module>.<builtin-function>(<parameter-types)` and follow the syntax of normal functions calls defined by the semantic tests. The difference is, that the builtin functions will contain a dot to specify the module and a function within that module. So for now, a normal call will never contain any dot, where a call to a builtin function will always contain a dot.\r\n\r\nI think this will make it more easy to extend the semantic tests with additional functions. \r\n\r\nSee https://github.com/ethereum/solidity/issues/10474 and https://github.com/ethereum/solidity/issues/10426.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/756197096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/758820976",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-758820976",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 758820976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODgyMDk3Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-12T17:36:01Z",
    "updated_at": "2021-01-12T17:36:01Z",
    "author_association": "MEMBER",
    "body": "I think for logs, this is much too detailed, and we can keep the 2-3 tests that cannot use the event interface in EndToEndTests, but it could be useful for `balance`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/758820976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/759156397",
    "html_url": "https://github.com/ethereum/solidity/issues/6902#issuecomment-759156397",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6902",
    "id": 759156397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE1NjM5Nw==",
    "user": {
      "login": "aarlt",
      "id": 5008794,
      "node_id": "MDQ6VXNlcjUwMDg3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5008794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarlt",
      "html_url": "https://github.com/aarlt",
      "followers_url": "https://api.github.com/users/aarlt/followers",
      "following_url": "https://api.github.com/users/aarlt/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarlt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarlt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarlt/subscriptions",
      "organizations_url": "https://api.github.com/users/aarlt/orgs",
      "repos_url": "https://api.github.com/users/aarlt/repos",
      "events_url": "https://api.github.com/users/aarlt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarlt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-13T02:10:35Z",
    "updated_at": "2021-01-13T02:10:35Z",
    "author_association": "MEMBER",
    "body": "> I think for logs, this is much too detailed, and we can keep the 2-3 tests that cannot use the event interface in EndToEndTests, but it could be useful for `balance`.\r\n\r\nYes these \"low-level\" builtins are too detailed, but I added a new builtin `logs.expectEvent(uint256,string)` that is more \"high-level\" . It is quite similar to @ekpyron proposal. See [comment](https://github.com/ethereum/solidity/pull/10728#issuecomment-759152620).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/759156397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
