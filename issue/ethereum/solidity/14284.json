{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14284",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14284/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14284/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14284/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14284",
  "id": 1734340162,
  "node_id": "I_kwDOAm_5kc5nX-5C",
  "number": 14284,
  "title": "Type Inference/Checking for Experimental Solidity",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4806670945,
      "node_id": "LA_kwDOAm_5kc8AAAABHn_6YQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/roadmap",
      "name": "roadmap",
      "color": "15B732",
      "default": false,
      "description": ""
    },
    {
      "id": 4867045645,
      "node_id": "LA_kwDOAm_5kc8AAAABIhk5DQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/epic",
      "name": "epic",
      "color": "BE24FA",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-05-31T14:17:39Z",
  "updated_at": "2023-06-07T09:53:17Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What\r\nAfter introducing ``pragma experimental solidity;`` we want to introduce a basic mechanism for Hindley-Milner-style type inference on a suitably reduced subset of the language, extend that by type classes, and move most of the hardcoded via-IR code generation to the standard library.\r\n\r\n### How\r\nIn experimental language mode, replace the current analysis after syntax checking with a new Hindley-Milner-style type inference system. This will involve building a new separate kind of AST annotation system as well. After the basic infrastructure is there, roughly follow these steps:\r\n  - Only non-function-value types (still builtin) only in free functions and no code generation, no type classes.\r\n  - Introduce type classes.\r\n  - Move definitions for built-in types to the standard library; implement ABI en-/decoding in the standard library.\r\n  - Skeleton code generation, allowing to compile deployable contracts (still only with functions acting on value types; first version without storage)\r\n  - Implement function types.\r\n  - Implement loading from and writing to storage for value types using type classes.\r\n  - Implement reference types (i.e. build the required type system mechanisms (even linear types?) to then actually implement them in the standard library).\r\n  - Implement more types and language features.\r\n  - Solve the inheritance issue.\r\n\r\n### Tasks\r\n- [ ] The first milestone is reached as soon as we have type inference for value types and type classes.\r\n- [ ] The second milestone is reached once we have ABI encoding/decoding and the code generation skeleton reached.\r\n- [ ] The third milestone is reached once we have reference types reintroduced via the standard library, and experimental solidity starts becoming real-world-usable.\r\n- [ ] The fourth milestone is reached when the first more complex real-world contracts can be transitioned to experimental solidity.\r\n- [ ] The final milestone is reached when experimental solidity is sufficiently expressive to cover most existing contracts\r\n\r\n\r\n### Out of Scope\r\nTBD\r\n\r\n---\r\n### Resources\r\n\r\n1. TBD",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14284/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14284/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
