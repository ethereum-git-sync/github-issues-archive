{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4115/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4115/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4115/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4115",
  "id": 321858504,
  "node_id": "MDU6SXNzdWUzMjE4NTg1MDQ=",
  "number": 4115,
  "title": "A Struct which contains Array of Structs can't be initialized",
  "user": {
    "login": "carbogninalberto",
    "id": 17618905,
    "node_id": "MDQ6VXNlcjE3NjE4OTA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17618905?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carbogninalberto",
    "html_url": "https://github.com/carbogninalberto",
    "followers_url": "https://api.github.com/users/carbogninalberto/followers",
    "following_url": "https://api.github.com/users/carbogninalberto/following{/other_user}",
    "gists_url": "https://api.github.com/users/carbogninalberto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carbogninalberto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carbogninalberto/subscriptions",
    "organizations_url": "https://api.github.com/users/carbogninalberto/orgs",
    "repos_url": "https://api.github.com/users/carbogninalberto/repos",
    "events_url": "https://api.github.com/users/carbogninalberto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carbogninalberto/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-05-10T08:56:44Z",
  "updated_at": "2020-04-11T03:08:15Z",
  "closed_at": "2018-05-11T16:16:27Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Is there anyway to initialized a Struct which contains an Array of Structs?\r\n### Let's suppose we have this contract:\r\n\r\n```solidity\r\ncontract ChallengeManager is Owned {\r\n        Challenge[] public challenges;\r\n        struct Participant {\r\n                address participantAddress;\r\n\t\tbool participate;\r\n\t\tuint goal;\r\n\t}\r\n\tstruct Challenge {\r\n\t\tstring name;\r\n\t\tuint256 timestamp;\r\n\t\taddress owner;\r\n\t\tbytes32 challengeHash;\r\n\t\tParticipant[] participants;\r\n\t}\r\n}\r\n```\r\n\r\nNow, i can't initialized the Participant[] array inside Challenge.\r\nUsing this line when initializing struct\r\n```solidity\r\nnew Participant[](0)\r\n```\r\ni get the following error:\r\n> UnimplementedFeatureError: Copying of type struct ChallengeManager.Participant memory[] memory to storage not yet supported.\r\n\r\nA less elegant solution i thought is deleting Participant struct and modify Challenge like this:\r\n\r\n```solidity\r\nstruct Challenge {\r\n\tstring name;\r\n\tuint256 timestamp;\r\n\taddress owner;\r\n\tbytes32 challengeHash;\r\n\taddress[] participantAddress;\r\n\tbool[] participate;\r\n\tuint[] goal;\r\n}\r\n```\r\n\r\nBut this _**is not a great solution**_ in my opinion.\r\n### Do you have any suggestion?\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4115/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4115/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388411697",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-388411697",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 388411697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODQxMTY5Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T16:16:26Z",
    "updated_at": "2018-05-11T16:16:26Z",
    "author_association": "MEMBER",
    "body": "We will soon have `challenges.pushEmpty()` or something like that. Until then, please use `challenges.length++;` and then initialize using `Challenge storage c = challenges[challenges.length - 1]; c.name = ...`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388411697/reactions",
      "total_count": 8,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 7,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609464550",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-609464550",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 609464550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQ2NDU1MA==",
    "user": {
      "login": "egealpay",
      "id": 25003254,
      "node_id": "MDQ6VXNlcjI1MDAzMjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25003254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/egealpay",
      "html_url": "https://github.com/egealpay",
      "followers_url": "https://api.github.com/users/egealpay/followers",
      "following_url": "https://api.github.com/users/egealpay/following{/other_user}",
      "gists_url": "https://api.github.com/users/egealpay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egealpay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egealpay/subscriptions",
      "organizations_url": "https://api.github.com/users/egealpay/orgs",
      "repos_url": "https://api.github.com/users/egealpay/repos",
      "events_url": "https://api.github.com/users/egealpay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egealpay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T18:55:07Z",
    "updated_at": "2020-04-05T18:55:07Z",
    "author_association": "NONE",
    "body": "Any update on this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609464550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609530643",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-609530643",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 609530643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTUzMDY0Mw==",
    "user": {
      "login": "ferdrian06",
      "id": 49253502,
      "node_id": "MDQ6VXNlcjQ5MjUzNTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/49253502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ferdrian06",
      "html_url": "https://github.com/ferdrian06",
      "followers_url": "https://api.github.com/users/ferdrian06/followers",
      "following_url": "https://api.github.com/users/ferdrian06/following{/other_user}",
      "gists_url": "https://api.github.com/users/ferdrian06/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ferdrian06/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ferdrian06/subscriptions",
      "organizations_url": "https://api.github.com/users/ferdrian06/orgs",
      "repos_url": "https://api.github.com/users/ferdrian06/repos",
      "events_url": "https://api.github.com/users/ferdrian06/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ferdrian06/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T02:11:12Z",
    "updated_at": "2020-04-06T02:11:12Z",
    "author_association": "NONE",
    "body": "> # Is there anyway to initialized a Struct which contains an Array of Structs?\r\n> ### Let's suppose we have this contract:\r\n> ```solidity\r\n> contract ChallengeManager is Owned {\r\n>         Challenge[] public challenges;\r\n>         struct Participant {\r\n>                 address participantAddress;\r\n> \t\tbool participate;\r\n> \t\tuint goal;\r\n> \t}\r\n> \tstruct Challenge {\r\n> \t\tstring name;\r\n> \t\tuint256 timestamp;\r\n> \t\taddress owner;\r\n> \t\tbytes32 challengeHash;\r\n> \t\tParticipant[] participants;\r\n> \t}\r\n> }\r\n> ```\r\n> \r\n> Now, i can't initialized the Participant[] array inside Challenge.\r\n> Using this line when initializing struct\r\n> \r\n> ```solidity\r\n> new Participant[](0)\r\n> ```\r\n> \r\n> i get the following error:\r\n> \r\n> > UnimplementedFeatureError: Copying of type struct ChallengeManager.Participant memory[] memory to storage not yet supported.\r\n> \r\n> A less elegant solution i thought is deleting Participant struct and modify Challenge like this:\r\n> \r\n> ```solidity\r\n> struct Challenge {\r\n> \tstring name;\r\n> \tuint256 timestamp;\r\n> \taddress owner;\r\n> \tbytes32 challengeHash;\r\n> \taddress[] participantAddress;\r\n> \tbool[] participate;\r\n> \tuint[] goal;\r\n> }\r\n> ```\r\n> \r\n> But this _**is not a great solution**_ in my opinion.\r\n> \r\n> ### Do you have any suggestion?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609530643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609915614",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-609915614",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 609915614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTkxNTYxNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T16:59:15Z",
    "updated_at": "2020-04-06T16:59:15Z",
    "author_association": "MEMBER",
    "body": "There is `.push()` now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/609915614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/612255375",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-612255375",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 612255375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjI1NTM3NQ==",
    "user": {
      "login": "naddison36",
      "id": 6491112,
      "node_id": "MDQ6VXNlcjY0OTExMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6491112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naddison36",
      "html_url": "https://github.com/naddison36",
      "followers_url": "https://api.github.com/users/naddison36/followers",
      "following_url": "https://api.github.com/users/naddison36/following{/other_user}",
      "gists_url": "https://api.github.com/users/naddison36/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naddison36/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naddison36/subscriptions",
      "organizations_url": "https://api.github.com/users/naddison36/orgs",
      "repos_url": "https://api.github.com/users/naddison36/repos",
      "events_url": "https://api.github.com/users/naddison36/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naddison36/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-10T22:57:31Z",
    "updated_at": "2020-04-10T22:57:31Z",
    "author_association": "NONE",
    "body": "@chriseth I can see how you can `.push()` a new `Challenge` to the `challenges` array. But how do you initialise an empty `participants` array on the `Challenge` struct?\r\n\r\nThe below is failing with\r\n`UnimplementedFeatureError: Copying of type struct ChallengeManager.Participant memory[] memory to storage not yet supported.`\r\n\r\n```Solidity\r\ncontract ChallengeManager {\r\n    struct Participant {\r\n        address participantAddress;\r\n\t\tbool participate;\r\n\t}\r\n\tstruct Challenge {\r\n\t\tbytes32 challengeHash;\r\n\t\tuint256 timestamp;\r\n\t\taddress owner;\r\n\t\tParticipant[] participants;\r\n\t}\r\n\tChallenge[] public challenges;\r\n\t\r\n\tfunction addChallenge(bytes32 _challengeHash) public {\r\n\t    challenges.push(Challenge({\r\n\t        challengeHash: _challengeHash,\r\n\t        timestamp: now,\r\n\t        owner: msg.sender,\r\n\t        participants: new Participant[](0)\r\n\t    }));\r\n\t}\r\n}\r\n```\r\n\r\nI've also tried the below but this fails with `This variable is of storage pointer type and can be accessed without prior assignment, which would lead to undefined behaviour.`\r\n\r\n```Solidity\r\nfunction addChallenge(bytes32 _challengeHash) public {\r\n    Challenge storage newChallange;\r\n    newChallange.hash = _challengeHash;\r\n    newChallange.timestamp = now;\r\n    newChallange.owner = msg.sender;\r\n    challenges.push(newChallange);\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/612255375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/612309066",
    "html_url": "https://github.com/ethereum/solidity/issues/4115#issuecomment-612309066",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4115",
    "id": 612309066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjMwOTA2Ng==",
    "user": {
      "login": "naddison36",
      "id": 6491112,
      "node_id": "MDQ6VXNlcjY0OTExMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6491112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naddison36",
      "html_url": "https://github.com/naddison36",
      "followers_url": "https://api.github.com/users/naddison36/followers",
      "following_url": "https://api.github.com/users/naddison36/following{/other_user}",
      "gists_url": "https://api.github.com/users/naddison36/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naddison36/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naddison36/subscriptions",
      "organizations_url": "https://api.github.com/users/naddison36/orgs",
      "repos_url": "https://api.github.com/users/naddison36/repos",
      "events_url": "https://api.github.com/users/naddison36/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naddison36/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T03:08:15Z",
    "updated_at": "2020-04-11T03:08:15Z",
    "author_association": "NONE",
    "body": "I worked out how to do the above. You can push an empty struct to the storage array and then update the properties you want. Any properties you don't update will have a default value. In the below case, `participants` on the `Challenge` struct will be an empty array of `Participant` structs.\r\n\r\n```Solidity\r\npragma solidity ^0.6.6;\r\n\r\ncontract ChallengeManager {\r\n    struct Participant {\r\n        address participantAddress;\r\n\t\tbool participate;\r\n\t}\r\n\tstruct Challenge {\r\n\t\tbytes32 hash;\r\n\t\tuint256 timestamp;\r\n\t\taddress owner;\r\n\t\tParticipant[] participants;\r\n\t}\r\n\tChallenge[] public challenges;\r\n\t\r\n\tfunction addChallenge(bytes32 _challengeHash) public {\r\n\t    challenges.push();\r\n\t    uint256 newIndex = challenges.length - 1;\r\n\t    challenges[newIndex].hash = _challengeHash;\r\n        challenges[newIndex].timestamp = now;\r\n        challenges[newIndex].owner = msg.sender;\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/612309066/reactions",
      "total_count": 10,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 4,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
