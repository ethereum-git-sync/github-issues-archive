{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10674",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10674/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10674/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10674/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10674",
  "id": 772564502,
  "node_id": "MDU6SXNzdWU3NzI1NjQ1MDI=",
  "number": 10674,
  "title": "Make `this` behave more closely to how it behaves in all other languages.",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-12-22T01:09:21Z",
  "updated_at": "2022-09-14T17:55:53Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Abstract\r\nChange the semantics of `this` to match other object oriented languages.  `this.member` would reference a storage slot of the current contract and `this.function` would do an internal call of the given function.  If one wants to force an external call of a member function then typecasts can be used like:\r\n```sol\r\ncontract Apple {\r\n\tfunction banana() {}\r\n\tfunction cherry() {\r\n\t\tApple(address(this)).banana();\r\n\t}\r\n}\r\n```\r\n\r\n## Motivation\r\nCurrently, `this.member` doesn't work and `this.function` works but has a surprising behavior of calling `function` externally.  This is confusing for new users since this behavior doesn't align with other languages the user is likely familiar with.  It also causes problems because there is no way to differentiate between a local variable and a member variable like in the following example:\r\n```sol\r\ncontract Apple {\r\n\taddress owner;\r\n\tconstructor(address owner) {\r\n\t\towner = owner;\r\n\t}\r\n}\r\n```\r\nIt is very rare that someone intentionally wants to force an external call of a member function because doing so comes with significantly increased costs.  Rather than having such functionality be the surprising default, instead doing such things should require extra effort (like casting).\r\n\r\n## Specification\r\n`this.member` compiles to the same thing as `member`.\r\n`this.function(...)` compiles to the same thing as `function(...)`.\r\n\r\n## Backwards Compatibility\r\nThis is a breaking change that will cause contracts that were previously using `this.` to force external function calls to no longer have the same behavior.  Thus, this change should occur as part of a major version bump.  Alternatively, `this.` could be deprecated now, and then in one or more major versions in the future it can be re-introduced with the new semantics.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10674/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10674/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749467318",
    "html_url": "https://github.com/ethereum/solidity/issues/10674#issuecomment-749467318",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10674",
    "id": 749467318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQ2NzMxOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T10:21:52Z",
    "updated_at": "2020-12-22T10:21:52Z",
    "author_association": "MEMBER",
    "body": "I do see the confusion with other languages, but what you are essentially suggesting is a second way of accessing items that are already accessible directly. Note that local variables and state variables can already be disambiguated:\r\n```\r\ncontract Apple {\r\n\taddress owner;\r\n\tconstructor(address owner) {\r\n\t\tApple.owner = owner;\r\n\t}\r\n}\r\n```\r\n\r\n`this` is indeed used almost never for external function calls, but I think that the type of `this` would be naturally expected to be `Apple`.\r\n\r\nSo to summarize: The confusion stems from the distinction between internal and external calls, and maybe we should solve that in a completely different way?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749467318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749482204",
    "html_url": "https://github.com/ethereum/solidity/issues/10674#issuecomment-749482204",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10674",
    "id": 749482204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQ4MjIwNA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T10:58:22Z",
    "updated_at": "2020-12-22T10:58:22Z",
    "author_association": "MEMBER",
    "body": "I did not know that you could reference members like that!  Given that information, perhaps the right solution is to just remove the `this.` functionality entirely for now and create some new mechanism for forcing external calls?  I personally think they are rare enough that `Apple(address(this)).banana()` is acceptable, but if others disagree I'm not opposed to something like `externalThis.banana()` or `external.banana()`.  The goal is that it is abundantly clear that you are making an external call.\r\n\r\nI *still* stand by my claim that most users of Solidity will expect `this.owner` and `this.banana()` to work, but given that there is already a way to achieve that, I can appreciate being in no hurry to change the behavior of `this` on users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749482204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/763610776",
    "html_url": "https://github.com/ethereum/solidity/issues/10674#issuecomment-763610776",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10674",
    "id": 763610776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzYxMDc3Ng==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-20T13:37:53Z",
    "updated_at": "2021-01-20T13:37:53Z",
    "author_association": "MEMBER",
    "body": "I do relate to the feeling that new users would expect `this.owner` and `this.banana()` to work as what we call `internal calls`, but I don't see a new way that is clearly better than the current way right now.\r\nIn my opinion, the non-`this` cases are very clear currently:\r\n- If you use a typename in a state var access or function call, it's an internal read/call. Examples: `B.x`, `B.f()`\r\n- If you use a contract *instance* in a function call, it's an external call. Examples: `C c = new C(); c.f()`\r\nSince `this` is an `instance` of the contract, I'd say the current way is precise. This of course doesn't solve the initial problem of people being confused. Therefore I would also be fine with removing the word `this` entirely and adding some other way of calling the contract itself externally, which is not very common but exists.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/763610776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
