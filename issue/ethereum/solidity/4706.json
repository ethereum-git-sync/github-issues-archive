{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4706",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4706/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4706/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4706/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4706",
  "id": 348081693,
  "node_id": "MDU6SXNzdWUzNDgwODE2OTM=",
  "number": 4706,
  "title": "Crash when converting signed rational using ABIEncoderV2",
  "user": {
    "login": "mattaereal",
    "id": 388605,
    "node_id": "MDQ6VXNlcjM4ODYwNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/388605?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattaereal",
    "html_url": "https://github.com/mattaereal",
    "followers_url": "https://api.github.com/users/mattaereal/followers",
    "following_url": "https://api.github.com/users/mattaereal/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattaereal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattaereal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattaereal/subscriptions",
    "organizations_url": "https://api.github.com/users/mattaereal/orgs",
    "repos_url": "https://api.github.com/users/mattaereal/repos",
    "events_url": "https://api.github.com/users/mattaereal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattaereal/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-08-06T21:04:53Z",
  "updated_at": "2018-08-07T13:25:12Z",
  "closed_at": "2018-08-07T13:25:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "_This issue is being reported as part of the current audit being held by Zeppelin Solutions to Solidity's compiler (tag v0.4.24)._\r\n\r\n## Description \r\nCompiler crashes on the assembly code generation when using `pragma experimental ABIEncoderv2` to encode a signed rational.\r\n\r\n## Error in file\r\n`libsolidity/codegen/CompilerContext.cpp(368)`\r\n\r\n## Displayed message\r\n\r\n```\r\nError parsing/analyzing inline assembly block.\r\nThrow in function void dev::solidity::CompilerContext::appendInlineAssembly(const st\r\nring&, const std::vector<std::__cxx11::basic_string<char> >&, bool)\r\n------------------ Errors: ----------------\r\n--CODEGEN--:9:35: Error: Expected '(' but got '-'\r\n                        function abi_encode_t_rational_-1337_by_1_to_t_int16(value, pos) {    \r\n```\r\n\r\n## Example code\r\n\r\n```solidity\r\npragma solidity ^0.4.24;\r\npragma experimental ABIEncoderV2;\r\ncontract CrashContract {\r\n   function f1() public pure returns (bytes) {\r\n       return abi.encode(1,-2);\r\n   }\r\n}\r\n```",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4706/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4706/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410879937",
    "html_url": "https://github.com/ethereum/solidity/issues/4706#issuecomment-410879937",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4706",
    "id": 410879937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg3OTkzNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T23:03:59Z",
    "updated_at": "2018-08-06T23:03:59Z",
    "author_association": "MEMBER",
    "body": "This is still a problem. The full debug log:\r\n```\r\nInternal compiler error during compilation:\r\n/Users/alex/Projects/solidity/libsolidity/codegen/CompilerContext.cpp(391): Throw in function void dev::solidity::CompilerContext::appendInlineAssembly(const std::__1::string &, const vector<std::__1::string> &, bool)\r\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\r\nstd::exception::what: Error parsing/analyzing inline assembly block:\r\n------------------ Input: -----------------\r\n{\r\n\t\t\tfunction abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\r\n\t\t\t\tlet length := array_length_t_bytes_memory_ptr(value)\r\n\t\t\t\tmstore(pos, length)\r\n\t\t\t\tcopy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\r\n\t\t\t\tend := add(add(pos, 0x20), round_up_to_mul_of_32(length))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_t_rational_-2_by_1_to_t_int8(value, pos) {\r\n\t\t\t\tmstore(pos, convert_t_rational_-2_by_1_to_t_int8(value))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_t_rational_1_by_1_to_t_uint8(value, pos) {\r\n\t\t\t\tmstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr_(headStart , value0) -> tail {\r\n\t\t\t\ttail := add(headStart, 32)\r\n\t\t\t\t\r\n\t\t\t\t\tmstore(add(headStart, 0), sub(tail, headStart))\r\n\t\t\t\t\ttail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0,  tail)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_tuple_t_rational_1_by_1_t_rational_-2_by_1__to_t_uint8_t_int8_(headStart , value1, value0) -> tail {\r\n\t\t\t\ttail := add(headStart, 64)\r\n\t\t\t\t\r\n\t\t\t\t\tabi_encode_t_rational_1_by_1_to_t_uint8(value0,  add(headStart, 0))\r\n\t\t\t\t\r\n\t\t\t\t\tabi_encode_t_rational_-2_by_1_to_t_int8(value1,  add(headStart, 32))\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction array_length_t_bytes_memory_ptr(value) -> length {\r\n\t\t\t\tlength := mload(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction cleanup_assert_t_int8(value) -> cleaned {\r\n\t\t\t\tcleaned := signextend(0, value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction cleanup_assert_t_uint8(value) -> cleaned {\r\n\t\t\t\tcleaned := and(value, 0xFF)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction convert_t_rational_-2_by_1_to_t_int8(value) -> converted {\r\n\t\t\t\tconverted := cleanup_assert_t_int8(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\r\n\t\t\t\tconverted := cleanup_assert_t_uint8(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction copy_memory_to_memory(src, dst, length) {\r\n\t\t\t\t\tlet i := 0\r\n\t\t\t\t\tfor { } lt(i, length) { i := add(i, 32) }\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmstore(add(dst, i), mload(add(src, i)))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif gt(i, length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// clear end\r\n\t\t\t\t\t\tmstore(add(dst, length), 0)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction round_up_to_mul_of_32(value) -> result {\r\n\t\t\t\tresult := and(add(value, 31), not(31))\r\n\t\t\t}\r\n\t\t\t}\r\n------------------ Errors: ----------------\r\n--CODEGEN--:9:35: Error: Expected '(' but got '-'\r\n\t\t\tfunction abi_encode_t_rational_-2_by_1_to_t_int8(value, pos) {\r\n\t\t\t                               ^\r\n-------------------------------------------\r\n\r\n[dev::tag_comment*] = Error parsing/analyzing inline assembly block:\r\n------------------ Input: -----------------\r\n{\r\n\t\t\tfunction abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\r\n\t\t\t\tlet length := array_length_t_bytes_memory_ptr(value)\r\n\t\t\t\tmstore(pos, length)\r\n\t\t\t\tcopy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\r\n\t\t\t\tend := add(add(pos, 0x20), round_up_to_mul_of_32(length))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_t_rational_-2_by_1_to_t_int8(value, pos) {\r\n\t\t\t\tmstore(pos, convert_t_rational_-2_by_1_to_t_int8(value))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_t_rational_1_by_1_to_t_uint8(value, pos) {\r\n\t\t\t\tmstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr_(headStart , value0) -> tail {\r\n\t\t\t\ttail := add(headStart, 32)\r\n\t\t\t\t\r\n\t\t\t\t\tmstore(add(headStart, 0), sub(tail, headStart))\r\n\t\t\t\t\ttail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0,  tail)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_encode_tuple_t_rational_1_by_1_t_rational_-2_by_1__to_t_uint8_t_int8_(headStart , value1, value0) -> tail {\r\n\t\t\t\ttail := add(headStart, 64)\r\n\t\t\t\t\r\n\t\t\t\t\tabi_encode_t_rational_1_by_1_to_t_uint8(value0,  add(headStart, 0))\r\n\t\t\t\t\r\n\t\t\t\t\tabi_encode_t_rational_-2_by_1_to_t_int8(value1,  add(headStart, 32))\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction array_length_t_bytes_memory_ptr(value) -> length {\r\n\t\t\t\tlength := mload(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction cleanup_assert_t_int8(value) -> cleaned {\r\n\t\t\t\tcleaned := signextend(0, value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction cleanup_assert_t_uint8(value) -> cleaned {\r\n\t\t\t\tcleaned := and(value, 0xFF)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction convert_t_rational_-2_by_1_to_t_int8(value) -> converted {\r\n\t\t\t\tconverted := cleanup_assert_t_int8(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\r\n\t\t\t\tconverted := cleanup_assert_t_uint8(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction copy_memory_to_memory(src, dst, length) {\r\n\t\t\t\t\tlet i := 0\r\n\t\t\t\t\tfor { } lt(i, length) { i := add(i, 32) }\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmstore(add(dst, i), mload(add(src, i)))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif gt(i, length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// clear end\r\n\t\t\t\t\t\tmstore(add(dst, length), 0)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction round_up_to_mul_of_32(value) -> result {\r\n\t\t\t\tresult := and(add(value, 31), not(31))\r\n\t\t\t}\r\n\t\t\t}\r\n------------------ Errors: ----------------\r\n--CODEGEN--:9:35: Error: Expected '(' but got '-'\r\n\t\t\tfunction abi_encode_t_rational_-2_by_1_to_t_int8(value, pos) {\r\n\t\t\t                               ^\r\n-------------------------------------------\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410879937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410880719",
    "html_url": "https://github.com/ethereum/solidity/issues/4706#issuecomment-410880719",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4706",
    "id": 410880719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg4MDcxOQ==",
    "user": {
      "login": "mattaereal",
      "id": 388605,
      "node_id": "MDQ6VXNlcjM4ODYwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattaereal",
      "html_url": "https://github.com/mattaereal",
      "followers_url": "https://api.github.com/users/mattaereal/followers",
      "following_url": "https://api.github.com/users/mattaereal/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattaereal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattaereal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattaereal/subscriptions",
      "organizations_url": "https://api.github.com/users/mattaereal/orgs",
      "repos_url": "https://api.github.com/users/mattaereal/repos",
      "events_url": "https://api.github.com/users/mattaereal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattaereal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T23:08:08Z",
    "updated_at": "2018-08-06T23:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I trimmed the output because it was very big and did not want to shadow the rest of the description.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/410880719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
