{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/5424/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/5424/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/5424/events",
  "html_url": "https://github.com/ethereum/solidity/issues/5424",
  "id": 380724308,
  "node_id": "MDU6SXNzdWUzODA3MjQzMDg=",
  "number": 5424,
  "title": "Require 'override' and 'virtual' keyword",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 29,
  "created_at": "2018-11-14T14:30:33Z",
  "updated_at": "2019-12-11T16:17:00Z",
  "closed_at": "2019-12-11T16:17:00Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Related to https://github.com/ethereum/solidity/issues/2563\r\n\r\nSteps: \r\n* [x] private functions cannot be overridden at all (virtual and private cannot be combined, and private functions are \"visible\" for overriding detection) https://github.com/ethereum/solidity/pull/7807\r\n* [x] `override` for public state variables, but they can't be `virtual` #7839\r\n* [x] `override` #7563 \r\n* [x] `virtual`\r\n* [ ] common base / cut vertex - override exception",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/5424/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/5424/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454801357",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-454801357",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 454801357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgwMTM1Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:36:30Z",
    "updated_at": "2019-11-05T16:49:18Z",
    "author_association": "MEMBER",
    "body": "draft of specification:\r\n - interface functions are always virtual implicitly\r\n - functions coming in from different bases are disallowed, unless they override the same function in a shared base\r\n - public state variables can override external virtual functions, but need to be marked \"override\", but cannot be marked virtual themselves. (can they be overridden again?)\r\n - overriding an \"override\" function is fine\r\n - private functions cannot be overridden at all (virtual and private cannot be combined, and private functions are \"visible\" for overriding detection)\r\n- functions without implementation still need `virtual`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454801357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454803285",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-454803285",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 454803285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgwMzI4NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:42:03Z",
    "updated_at": "2019-01-16T14:42:03Z",
    "author_association": "MEMBER",
    "body": "How to handle combinations of overloading and overriding?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454803285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454824965",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-454824965",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 454824965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgyNDk2NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T15:40:29Z",
    "updated_at": "2019-01-16T15:40:39Z",
    "author_association": "MEMBER",
    "body": "I tend to make functions that are marked ``override`` not overridable themselves unless they are again explicitly marked ``virtual`` again. Otherwise we need to think about whether we need an additional ``final`` keyword and I think just sticking to \"only things *explicitly* marked ``virtual`` can be overriden\" is easier and better than doing that... if overriding state variables are allowed to be overwritten again, that may be an issue though - but maybe that shouldn't be possible anyways (not sure about that)...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454824965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454863075",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-454863075",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 454863075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDg2MzA3NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T17:17:41Z",
    "updated_at": "2019-01-16T18:08:37Z",
    "author_association": "MEMBER",
    "body": "And I think it makes sense to introduce the keywords themselves in 0.6.0, but to only deprecate omitting them. So in 0.6.0 omitting the keywords would cause warnings, unless you specify e.g. ``pragma legacy;`` or ``pragma ignore deprecated;`` or sth like that and these warnings turn into errors with 0.7.0. That may be a good way to get around the adoption and real-world testing problem and if it works well we could re-use the concept for future changes.\r\nEDIT: maybe even ``pragma compat 0.5;``",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/454863075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471033382",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-471033382",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 471033382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTAzMzM4Mg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T18:44:48Z",
    "updated_at": "2019-03-08T18:44:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will this info (e.g. a function being `virtual`) be available in the contract artifacts? It'd interesting if we were able to e.g. have tests asserting a certain function is `virtual` to prevent regression errors.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471033382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471089793",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-471089793",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 471089793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTA4OTc5Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T21:57:02Z",
    "updated_at": "2019-03-08T21:57:02Z",
    "author_association": "MEMBER",
    "body": "> contract artifacts\r\n\r\nWhat do you exactly mean by that?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471089793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471093549",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-471093549",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 471093549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTA5MzU0OQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T22:10:37Z",
    "updated_at": "2019-03-08T22:10:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess the most appropriate location for such a thing would be the JSON AST (which is included in the `.json` file that results from compilation when using e.g. truffle).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471093549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520389894",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-520389894",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 520389894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDM4OTg5NA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T11:36:54Z",
    "updated_at": "2019-08-12T11:36:54Z",
    "author_association": "MEMBER",
    "body": "To recap my understanding of the goals:\r\n* `override` to explicitly show that a function is overriding another function from a base\r\n* `virtual` to explicitly _allow_ overriding in a derived function\r\n\r\nI would argue that users want to do the `virtual` use case a lot and thus `virtual` would need to be used a lot. If that kind of usage is the default, wouldn't it be smarter to make the other way explicit, e.g. having a `final` keyword to mark a function explicitly as not overridable?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520389894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520423741",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-520423741",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 520423741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQyMzc0MQ==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T13:26:04Z",
    "updated_at": "2019-08-12T13:26:04Z",
    "author_association": "MEMBER",
    "body": "> How to handle combinations of overloading and overriding?\r\n\r\nI'd say the overriding function function signature must match the signature exactly, that should include any overloads, too.\r\nOr did I miss a scenario where this isn't enough?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520423741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520430044",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-520430044",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 520430044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQzMDA0NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T13:42:55Z",
    "updated_at": "2019-08-12T13:42:55Z",
    "author_association": "MEMBER",
    "body": "> I'd say the overriding function function signature must match the signature exactly, that should include any overloads, too.\r\n\r\nYes, I think this is how it is handled currently.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520430044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520430920",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-520430920",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 520430920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQzMDkyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T13:45:23Z",
    "updated_at": "2019-08-12T13:45:23Z",
    "author_association": "MEMBER",
    "body": "About the default: I'm actually not sure if virtual is really that common. In any case, if we do not default to non-virtual, this feature is useless.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520430920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520433984",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-520433984",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 520433984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQzMzk4NA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T13:53:14Z",
    "updated_at": "2019-08-12T13:53:29Z",
    "author_association": "MEMBER",
    "body": "> About the default: I'm actually not sure if virtual is really that common. In any case, if we do not default to non-virtual, this feature is useless.\r\n\r\nWell, yes, my suggestion was to basically use `final` instead of `virtual` with virtual as the default. But if it is less common then my main argument doesn't apply anymore. We should gather some data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/520433984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521273611",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-521273611",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 521273611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTI3MzYxMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T14:38:19Z",
    "updated_at": "2019-08-14T14:38:19Z",
    "author_association": "MEMBER",
    "body": "Discussion resulted in relaxation of the requirements for the case of a function being inherited from multiple base classes:\r\n\r\n> A function declaration D1 is called a \"base function\" of a function declaration D2 if they declare the same function, D1 is in a (direct or indirect) base contract of the contract of D2 and no contract in the path through the inheritance graph contains the function.\r\n> \r\n> If a function has a base function, it needs the \"override\" specifier and the base function needs the \"virtual\" specifier (which is implied in interfaces).\r\n> If a function has more than one base functions, the \"override\" specifier needs to list all contract types of all the base functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521273611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521279428",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-521279428",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 521279428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTI3OTQyOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T14:50:49Z",
    "updated_at": "2019-08-14T14:50:49Z",
    "author_association": "MEMBER",
    "body": "In addition to that: It is illegal, if a function that is not declared in a contract would have multiple base functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521279428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521295488",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-521295488",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 521295488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTI5NTQ4OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T15:28:11Z",
    "updated_at": "2019-08-14T15:46:40Z",
    "author_association": "MEMBER",
    "body": "I'm still not entirely sure about this case and fine with both options, but I wanted to bring it up once more:\r\n```\r\ncontract A { function f() virtual {...} }\r\ncontract B is A {}\r\ncontract C is B { function f() override {...} }\r\n```\r\nShould this be valid or not? We said ǹot having ``f`` in ``B`` indicates \"do everything like the base\", but does that mean \"always use A's implementation of ``f``\" or \"inherit the fact that A's ``f`` is``virtual``\"?\r\n\r\nThere's two cases: either ``B`` wants to allow overriding ``f`` or wants to disallow it, the question is what's the default.\r\n\r\nExplicit allowing would mean you need to write\r\n``contract B is A { function f() virtual override { A.f(); } }``\r\nif overriding ``f`` in ``C`` should be possible.\r\n\r\nExplicit disallowing would mean you need to write\r\n``contract B is A { function f() override { A.f(); } }``\r\nif overriding ``f`` in ``C`` should **not** be possible.\r\n\r\n@chriseth Your specification would mean defaulting to allowing. Do we want to do it that way? I'm fine with it, just reconfirming.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521295488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521304674",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-521304674",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 521304674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMwNDY3NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T15:50:34Z",
    "updated_at": "2019-08-14T15:50:34Z",
    "author_association": "MEMBER",
    "body": "I don't have strong arguments for or against the behaviour that `contract C is A {}` leads to `C` essentially having the same virtual/override behaviour as `A`, but I have the feeling that it is the expected behaviour.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521304674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521306435",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-521306435",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 521306435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMwNjQzNQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T15:54:51Z",
    "updated_at": "2019-08-14T15:54:51Z",
    "author_association": "MEMBER",
    "body": "Defaulting to disallow has the advantage that looking at a contract will tell you everything that a derived contract can change about it... Otherwise you'll have to look at the bases as well...\r\nBut yeah, I'm not sure what's better myself.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521306435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527105482",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-527105482",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 527105482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzEwNTQ4Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T11:01:01Z",
    "updated_at": "2019-09-02T11:01:01Z",
    "author_association": "MEMBER",
    "body": "I was just looking over the draft PR(s) for implementing this - and I'm realizing: requiring to redeclare functions of the base \"virtual\" again to allow them to be overridden would make the implementation much simpler, since we'd only need to check one level at a time :-). And by the same logic I could imagine that this would make auditing code easier, so I'm actually still leaning towards that option...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527105482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527118717",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-527118717",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 527118717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzExODcxNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T11:49:26Z",
    "updated_at": "2019-09-02T11:49:26Z",
    "author_association": "MEMBER",
    "body": "Can you ask the list?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527118717/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527381799",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-527381799",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 527381799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM4MTc5OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-03T09:31:18Z",
    "updated_at": "2019-09-03T09:31:18Z",
    "author_association": "MEMBER",
    "body": "One option that will get us around discussing which should be the default is to allow both, i.e. to have \"virtual\" and \"final\" inheritance, but I'm not sure, if we should seriously consider that :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/527381799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/529333627",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-529333627",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 529333627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTMzMzYyNw==",
    "user": {
      "login": "fasteater",
      "id": 49999458,
      "node_id": "MDQ6VXNlcjQ5OTk5NDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/49999458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fasteater",
      "html_url": "https://github.com/fasteater",
      "followers_url": "https://api.github.com/users/fasteater/followers",
      "following_url": "https://api.github.com/users/fasteater/following{/other_user}",
      "gists_url": "https://api.github.com/users/fasteater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fasteater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fasteater/subscriptions",
      "organizations_url": "https://api.github.com/users/fasteater/orgs",
      "repos_url": "https://api.github.com/users/fasteater/repos",
      "events_url": "https://api.github.com/users/fasteater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fasteater/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T07:22:43Z",
    "updated_at": "2019-09-09T07:22:43Z",
    "author_association": "NONE",
    "body": "if` B is A` , B should inherit everything from A, which means `B.f` should also be `virtual`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/529333627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/529639761",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-529639761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 529639761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTYzOTc2MQ==",
    "user": {
      "login": "ericDeCourcy",
      "id": 19626305,
      "node_id": "MDQ6VXNlcjE5NjI2MzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19626305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericDeCourcy",
      "html_url": "https://github.com/ericDeCourcy",
      "followers_url": "https://api.github.com/users/ericDeCourcy/followers",
      "following_url": "https://api.github.com/users/ericDeCourcy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericDeCourcy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericDeCourcy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericDeCourcy/subscriptions",
      "organizations_url": "https://api.github.com/users/ericDeCourcy/orgs",
      "repos_url": "https://api.github.com/users/ericDeCourcy/repos",
      "events_url": "https://api.github.com/users/ericDeCourcy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericDeCourcy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T19:55:27Z",
    "updated_at": "2019-09-09T19:55:27Z",
    "author_association": "NONE",
    "body": "> public state variables can override external virtual functions, but need to be marked \"override\", but cannot be marked virtual themselves. (can they be overridden again?)\r\n\r\nHow would this work in the case of an overloaded functions? Is this portion of the spec still being considered?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/529639761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530717629",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-530717629",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 530717629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDcxNzYyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T08:14:19Z",
    "updated_at": "2019-09-12T08:14:19Z",
    "author_association": "MEMBER",
    "body": "@ericDeCourcy currently, overloading and overriding are considered to be unrelated. We might want to restrict this, but probably not for 0.6.0.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530717629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530787767",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-530787767",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 530787767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc4Nzc2Nw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T11:44:11Z",
    "updated_at": "2019-09-12T11:44:11Z",
    "author_association": "MEMBER",
    "body": "Our current specification has one hole:\r\n```\r\ncontract A {\r\n  function f() external {...}\r\n}\r\ncontract B {\r\n  function f() external {...}\r\n}\r\ncontract C is A,B {\r\n  function f() external override(A,B) { /* wants to call A.f, but can't */ }\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530787767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530788880",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-530788880",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 530788880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc4ODg4MA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T11:48:02Z",
    "updated_at": "2019-09-12T12:10:38Z",
    "author_association": "MEMBER",
    "body": "Which we could solve be allowing\r\n``function f() external override(A,B) = A.f;``\r\nWhich would also be nice to have for non-external functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530788880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530946974",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-530946974",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 530946974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDk0Njk3NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T18:23:47Z",
    "updated_at": "2019-09-12T18:23:47Z",
    "author_association": "MEMBER",
    "body": "Sounds good! I would not allow anything like `A.g` for now, but we might in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530946974/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/532677078",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-532677078",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 532677078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjY3NzA3OA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T13:10:48Z",
    "updated_at": "2019-09-18T13:10:48Z",
    "author_association": "MEMBER",
    "body": "for reference, the current PR for `override` is https://github.com/ethereum/solidity/pull/7320",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/532677078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/558606934",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-558606934",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 558606934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODYwNjkzNA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-26T12:28:01Z",
    "updated_at": "2019-11-26T12:28:01Z",
    "author_association": "MEMBER",
    "body": "> Which we could solve be allowing\r\n> `function f() external override(A,B) = A.f;`\r\n> Which would also be nice to have for non-external functions.\r\n\r\nDo we want this for 0.6.0 as well?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/558606934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/558667581",
    "html_url": "https://github.com/ethereum/solidity/issues/5424#issuecomment-558667581",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/5424",
    "id": 558667581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODY2NzU4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-26T14:57:53Z",
    "updated_at": "2019-11-26T14:57:53Z",
    "author_association": "MEMBER",
    "body": "Maybe better to introduce calldata variables for public functions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/558667581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
