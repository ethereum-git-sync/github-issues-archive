{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10926",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10926/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10926/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10926/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10926",
  "id": 804726043,
  "node_id": "MDU6SXNzdWU4MDQ3MjYwNDM=",
  "number": 10926,
  "title": "[SMTChecker] ICE in auto solidity::frontend::SMTEncoder::functionCallToDefinition(const solidity::frontend::FunctionCall &, const solidity::frontend::ContractDefinition *, const solidity::frontend::ContractDefinition *)::(anonymous class)::operator()(const auto *) const [_ref:auto = solidity::frontend::MemberAccess]",
  "user": {
    "login": "agroce",
    "id": 967816,
    "node_id": "MDQ6VXNlcjk2NzgxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/agroce",
    "html_url": "https://github.com/agroce",
    "followers_url": "https://api.github.com/users/agroce/followers",
    "following_url": "https://api.github.com/users/agroce/following{/other_user}",
    "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
    "organizations_url": "https://api.github.com/users/agroce/orgs",
    "repos_url": "https://api.github.com/users/agroce/repos",
    "events_url": "https://api.github.com/users/agroce/events{/privacy}",
    "received_events_url": "https://api.github.com/users/agroce/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-02-09T16:49:33Z",
  "updated_at": "2021-03-15T14:01:52Z",
  "closed_at": "2021-03-15T14:01:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThis contract:\r\n```solidity\r\npragma experimental SMTChecker;\r\ncontract A {\r\n    function f() internal virtual {\r\n\tv();\r\n    }\r\n    function v() internal virtual {\r\n    }\r\n}\r\n\r\ncontract B is A {\r\n    function f() internal virtual override {\r\n\tsuper.f();\r\n    }\r\n}\r\n\r\ncontract C is B {\r\n    function v() internal override {\r\n\tif (0==1)\r\n\t    f();\r\n    }\r\n}\r\n```\r\n\r\nproduces:\r\n\r\n```\r\nInternal compiler error during compilation:\r\n/solidity/libsolidity/formal/SMTEncoder.cpp(2722): Throw in function auto solidity::frontend::SMTEncoder::functionCallToDefinition(const solidity::frontend::FunctionCall &, const solidity::frontend::ContractDefinition *, const solidity::frontend::ContractDefinition *)::(anonymous class)::operator()(const auto *) const [_ref:auto = solidity::frontend::MemberAccess]\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Super contract not available.\r\n[solidity::util::tag_comment*] = Super contract not available.\r\n```\r\n\r\nwhen compiled with solc.\r\n\r\nLooks like all other deaths in isDynamicallyEncoded were fixed, so this is a new variant (the structure looks different to me at a glance).\r\n\r\nOn master, using AFL fuzzing.  Another discovery using https://github.com/agroce/afl-compiler-fuzzer.\r\n\r\n## Environment\r\n\r\n- Compiler version:  0.8.2-develop.2021.2.9+commit.43319574.Linux.clang\r\n- Target EVM version (as per compiler settings): N/A\r\n- Framework/IDE (e.g. Truffle or Remix): N/A\r\n- EVM execution environment / backend / blockchain client: N/A\r\n- Operating system: Ubuntu 20.04.1 LTS in docker\r\n\r\n## Steps to Reproduce\r\n\r\nAbove shows pretty clearly, I think.\r\n",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10926/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10926/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/777647252",
    "html_url": "https://github.com/ethereum/solidity/issues/10926#issuecomment-777647252",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10926",
    "id": 777647252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzY0NzI1Mg==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T17:07:34Z",
    "updated_at": "2021-02-11T17:07:34Z",
    "author_association": "MEMBER",
    "body": "Thank you for reporting the bug @agroce !",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/777647252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/778331705",
    "html_url": "https://github.com/ethereum/solidity/issues/10926#issuecomment-778331705",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10926",
    "id": 778331705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODMzMTcwNQ==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T17:27:05Z",
    "updated_at": "2021-02-14T00:17:25Z",
    "author_association": "MEMBER",
    "body": "Here's another, independent repro for this bug (from https://github.com/ethereum/solidity/pull/10952#issuecomment-778307247):\r\n\r\n``` solidity\r\npragma experimental SMTChecker;\r\n\r\ncontract ERC20 {\r\n    function approve() public virtual { _approve(); }\r\n    function _approve() internal virtual {}\r\n}\r\n\r\ncontract __unstable__ERC20Owned is ERC20 {\r\n    function _approve() internal override {\r\n        if (true) {\r\n            super._approve();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\n/solidity/test/boostTest.cpp(123): error: in \"smtCheckerTests/inheritance/gsn\": Exception during extracted test: /solidity/libsolidity/formal/SMTEncoder.cpp(2722): Throw in function solidity::frontend::SMTEncoder::functionCallToDefinition(const solidity::frontend::FunctionCall&, const solidity::frontend::ContractDefinition*, const solidity::frontend::ContractDefinition*)::<lambda(const auto:36*)> [with auto:36 = solidity::frontend::MemberAccess]\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Super contract not available.\r\n[solidity::util::tag_comment*] = Super contract not available.\r\n```\r\n\r\nIt's actually happening in OpenZeppelin code when SMTChecker is enabled, together with #10957.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/778331705/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
