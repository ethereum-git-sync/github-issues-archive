{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12947/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12947/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12947/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12947",
  "id": 1208616438,
  "node_id": "I_kwDOAm_5kc5ICgX2",
  "number": 12947,
  "title": "Discrepancy between a Library bytecode function identifier check and the generated abi with structs",
  "user": {
    "login": "hroussille",
    "id": 7825509,
    "node_id": "MDQ6VXNlcjc4MjU1MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7825509?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hroussille",
    "html_url": "https://github.com/hroussille",
    "followers_url": "https://api.github.com/users/hroussille/followers",
    "following_url": "https://api.github.com/users/hroussille/following{/other_user}",
    "gists_url": "https://api.github.com/users/hroussille/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hroussille/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hroussille/subscriptions",
    "organizations_url": "https://api.github.com/users/hroussille/orgs",
    "repos_url": "https://api.github.com/users/hroussille/repos",
    "events_url": "https://api.github.com/users/hroussille/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hroussille/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-04-19T16:51:40Z",
  "updated_at": "2022-04-29T13:14:08Z",
  "closed_at": "2022-04-26T18:06:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n    - [Solidity chat](https://gitter.im/ethereum/solidity)\r\n    - [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n\r\n*Delete the above section and the instructions in the sections below before submitting*\r\n-->\r\n\r\n## Description\r\n\r\nWhen compiling a simple library, the generated byte code doesn't match the output of the ABI regarding the function identifier.\r\nThis result in a revert for what seem to be a perfectly valid action.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\nstruct AB {\r\n  uint8 a;\r\n  uint8 b;\r\n}\r\n\r\nlibrary TheLibrary {\r\n  function add(AB memory ab) public pure returns(uint8) {\r\n    return ab.a + ab.b;\r\n  }\r\n}\r\n```\r\n\r\nThe generated bytecode checks for the function identifier : `0x70c40302` (`keccak256(\"add(AB)\")`) but the ABI file interpretation generates the following function identifier `0x2f563ac4` (`keccak256(\"add((uint8,uint8))\")` on the client side.\r\n\r\nIf  you were to compile a Contract : \r\n\r\n```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\nstruct AB {\r\n  uint8 a;\r\n  uint8 b;\r\n}\r\n\r\ncontract TheContract {\r\n  function add(AB memory ab) public pure returns(uint8) {\r\n    return ab.a + ab.b;\r\n  }\r\n}\r\n```\r\n\r\nThe generated byte code checks for `0x2f563ac4`, the discrepancy between library and contract seems like a bug to me ?\r\n\r\n\r\n## Environment\r\n\r\n- Compiler version: Tested from 0.8.7 and above\r\n- Framework/IDE : Truffle / Remix / Hardhat\r\n- EVM execution environment : Truffle / Remix JS EVM / Hardhat\r\n- EVM version : London\r\n\r\n## Steps to Reproduce\r\n\r\nCompile the library above and try to call `add` directly, leading to a revert.\r\n\r\nCall it with the following calldata : `0x70c4030200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001` and the result is `2` as expected.\r\n",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12947/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12947/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1104710268",
    "html_url": "https://github.com/ethereum/solidity/issues/12947#issuecomment-1104710268",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
    "id": 1104710268,
    "node_id": "IC_kwDOAm_5kc5B2Ip8",
    "user": {
      "login": "OrizzoN7",
      "id": 101925485,
      "node_id": "U_kgDOBhNCbQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/101925485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OrizzoN7",
      "html_url": "https://github.com/OrizzoN7",
      "followers_url": "https://api.github.com/users/OrizzoN7/followers",
      "following_url": "https://api.github.com/users/OrizzoN7/following{/other_user}",
      "gists_url": "https://api.github.com/users/OrizzoN7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OrizzoN7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OrizzoN7/subscriptions",
      "organizations_url": "https://api.github.com/users/OrizzoN7/orgs",
      "repos_url": "https://api.github.com/users/OrizzoN7/repos",
      "events_url": "https://api.github.com/users/OrizzoN7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OrizzoN7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T05:01:03Z",
    "updated_at": "2022-04-26T17:58:08Z",
    "author_association": "NONE",
    "body": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\nstruct AB {\r\n  uint8 a;\r\n  uint8 b;\r\n}\r\n\r\nlibrary TheLibrary {\r\n  function add(AB memory ab) public pure returns(uint8) {\r\n    return ab.a + ab.b;\r\n  }\r\n}\r\nThe generated bytecode checks for the function identifier : 0x70c40302 (keccak256(\"add(AB)\")) but the ABI file interpretation generates the following function identifier 0x2f563ac4 (keccak256(\"add((uint8,uint8))\") on the client side.\r\n\r\nIf you were to compile a Contract :\r\n\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\nstruct AB {\r\n  uint8 a;\r\n  uint8 b;\r\n}\r\n\r\ncontract TheContract {\r\n  function add(AB memory ab) public pure returns(uint8) {\r\n    return ab.a + ab.b;\r\n  }\r\n}\r\nThe generated byte code checks for 0x2f563ac4, the discrepancy between library and contract seems like a bug to me ?\r\n\r\nEnvironment\r\nCompiler version: Tested from 0.8.7 and above\r\nFramework/IDE : Truffle / Remix / Hardhat\r\nEVM execution environment : Truffle / Remix JS EVM / Hardhat\r\nEVM version : London\r\nSteps to Reproduce\r\nCompile the library above and try to call add directly, leading to a revert.\r\n\r\nCall it with the following calldata : 0x70c4030200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001 and the result is 2 as expected.\r\n\r\nKEYWORDS Required",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1104710268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110099194",
    "html_url": "https://github.com/ethereum/solidity/issues/12947#issuecomment-1110099194",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
    "id": 1110099194,
    "node_id": "IC_kwDOAm_5kc5CKsT6",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-26T18:06:38Z",
    "updated_at": "2022-04-26T18:07:40Z",
    "author_association": "MEMBER",
    "body": "It's by design. See [Function Signatures and Selectors in Libraries](https://docs.soliditylang.org/en/latest/contracts.html#function-signatures-and-selectors-in-libraries):\r\n\r\n> While external calls to public or external library functions are possible, the calling convention for such calls is considered to be internal to Solidity and not the same as specified for the regular [contract ABI](https://docs.soliditylang.org/en/latest/abi-spec.html#abi).\r\n\r\n> Non-storage structs are referred to by their fully qualified name, i.e. `C.S` for `contract C { struct S { ... } }`.\r\n\r\nThere's been a lot of discussion about whether the contract ABI should be updated to support user-defined types explicitly, like enums or structs but breaking changes in the ABI are problematic so the current status quo is that they're simply encoded as uints or tuples, respectively. With libraries we did not have that limitation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110099194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110754400",
    "html_url": "https://github.com/ethereum/solidity/issues/12947#issuecomment-1110754400",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
    "id": 1110754400,
    "node_id": "IC_kwDOAm_5kc5CNMRg",
    "user": {
      "login": "hroussille",
      "id": 7825509,
      "node_id": "MDQ6VXNlcjc4MjU1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7825509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hroussille",
      "html_url": "https://github.com/hroussille",
      "followers_url": "https://api.github.com/users/hroussille/followers",
      "following_url": "https://api.github.com/users/hroussille/following{/other_user}",
      "gists_url": "https://api.github.com/users/hroussille/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hroussille/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hroussille/subscriptions",
      "organizations_url": "https://api.github.com/users/hroussille/orgs",
      "repos_url": "https://api.github.com/users/hroussille/repos",
      "events_url": "https://api.github.com/users/hroussille/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hroussille/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-27T09:06:03Z",
    "updated_at": "2022-04-27T09:06:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah okay I did miss that part, thanks !\r\n\r\nI just don't understand why an incorrect ABI is exposed though? if such calls are considered to be internal, there should be no mention of it in the abi file ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110754400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110819438",
    "html_url": "https://github.com/ethereum/solidity/issues/12947#issuecomment-1110819438",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
    "id": 1110819438,
    "node_id": "IC_kwDOAm_5kc5CNcJu",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-27T10:09:30Z",
    "updated_at": "2022-04-27T10:09:30Z",
    "author_association": "MEMBER",
    "body": "That's a bit of a grey area. It's not like the ABI of libraries is completely off-limits but it also does not have the strong compatibility an interoperability guarantees of the contract ABI. As the docs say, it's possible to interact with it, the compiler is not going out of its way to hide it but there are some caveats.\r\n\r\nAnd as for the reasoning behind this, @chriseth or @axic would have to chime in with some historical details.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1110819438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1113296781",
    "html_url": "https://github.com/ethereum/solidity/issues/12947#issuecomment-1113296781",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12947",
    "id": 1113296781,
    "node_id": "IC_kwDOAm_5kc5CW4-N",
    "user": {
      "login": "hroussille",
      "id": 7825509,
      "node_id": "MDQ6VXNlcjc4MjU1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7825509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hroussille",
      "html_url": "https://github.com/hroussille",
      "followers_url": "https://api.github.com/users/hroussille/followers",
      "following_url": "https://api.github.com/users/hroussille/following{/other_user}",
      "gists_url": "https://api.github.com/users/hroussille/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hroussille/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hroussille/subscriptions",
      "organizations_url": "https://api.github.com/users/hroussille/orgs",
      "repos_url": "https://api.github.com/users/hroussille/repos",
      "events_url": "https://api.github.com/users/hroussille/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hroussille/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-29T13:14:08Z",
    "updated_at": "2022-04-29T13:14:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That's a bit of a grey area. It's not like the ABI of libraries is completely off-limits but it also does not have the strong compatibility an interoperability guarantees of the contract ABI. As the docs say, it's possible to interact with it, the compiler is not going out of its way to hide it but there are some caveats.\r\n> \r\n> And as for the reasoning behind this, @chriseth or @axic would have to chime in with some historical details.\r\n\r\nI see, thanks for your reply ! I'd be curious to know those details though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1113296781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
