{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9570/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9570/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9570/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9570",
  "id": 672941271,
  "node_id": "MDU6SXNzdWU2NzI5NDEyNzE=",
  "number": 9570,
  "title": "Support all Solidity Constants in Inline Assembly",
  "user": {
    "login": "mudgen",
    "id": 49092,
    "node_id": "MDQ6VXNlcjQ5MDky",
    "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mudgen",
    "html_url": "https://github.com/mudgen",
    "followers_url": "https://api.github.com/users/mudgen/followers",
    "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
    "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
    "organizations_url": "https://api.github.com/users/mudgen/orgs",
    "repos_url": "https://api.github.com/users/mudgen/repos",
    "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mudgen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438490842,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3-2g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20have",
      "name": "should have",
      "color": "ffbe6c",
      "default": false,
      "description": "We like the idea but itâ€™s not important enough to be a part of the roadmap."
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-08-04T17:00:58Z",
  "updated_at": "2023-03-14T12:05:16Z",
  "closed_at": "2023-03-14T12:05:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "It would be nice if Solidity constants were supported in Yul.\r\n\r\nCurrently I have to do this:\r\n\r\n```Solidity\r\n    bytes32 internal constant ERC20TOKEN_STORAGE_POSITION = keccak256(\"governance.token.diamond.ERC20Token\");\r\n\r\n    function erc20TokenStorage() internal pure returns(ERC20TokenStorage storage ds) {\r\n        bytes32 position = ERC20TOKEN_STORAGE_POSITION;\r\n        assembly { ds.slot := position }\r\n    }\r\n```\r\n\r\nIt would be nice if it worked this way:\r\n\r\n```Solidity\r\n    bytes32 internal constant ERC20TOKEN_STORAGE_POSITION = keccak256(\"governance.token.diamond.ERC20Token\");\r\n\r\n    function erc20TokenStorage() internal pure returns(ERC20TokenStorage storage ds) {\r\n        assembly { ds.slot := ERC20TOKEN_STORAGE_POSITION }\r\n    }\r\n```",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9570/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9570/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668762018",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-668762018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 668762018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc2MjAxOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T18:43:49Z",
    "updated_at": "2020-08-04T18:51:34Z",
    "author_association": "MEMBER",
    "body": "In general there *is* support for accessing solidity constants from yul just like you want - but unfortunately only as long as they are actually compile-time constant, i.e. with ``bytes32 internal constant ERC20TOKEN_STORAGE_POSITION = 0x6ed1e8b58b8677af52e598804adae6eaacd4c419a6334c92069fde3cd6d8affc;`` it should work.\r\nCalls to e.g. ``keccak256``, however, are not evaluated at compile-time, but rather inlined... we want to fix that and we have several long-standing issues for it e.g. https://github.com/ethereum/solidity/issues/3157 - once that's finally done this should just work... but I'm not sure when that'll be :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668762018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668773790",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-668773790",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 668773790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc3Mzc5MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T19:09:35Z",
    "updated_at": "2020-08-04T19:09:35Z",
    "author_association": "MEMBER",
    "body": "Here's the original issue: #3776",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668773790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668778435",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-668778435",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 668778435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc3ODQzNQ==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T19:20:22Z",
    "updated_at": "2020-08-04T19:28:55Z",
    "author_association": "NONE",
    "body": "@ekpyron The [changelog for Solidity 0.6.12](https://github.com/ethereum/solidity/releases/tag/v0.6.12) says this:\r\n*  Code Generator: Evaluate keccak256 of string literals at compile-time.\r\n\r\nSo it seems like it should work now. I am using Solidity 0.7.0",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668778435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668782371",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-668782371",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 668782371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc4MjM3MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T19:28:41Z",
    "updated_at": "2020-08-04T19:31:05Z",
    "author_association": "MEMBER",
    "body": "Good point :-). But that change in 0.6.12 was rather a code generation optimization - so you're right, the compiler now actually evaluates keccak256 during code generation, but that's \"too late\"...\r\nSo this issue is a special case of the more general problem, namely, that this works:\r\n```\r\ncontract C {\r\n    uint256 constant x = 3 + 1;\r\n    function f() public returns (bytes32) {\r\n        assembly {\r\n            let y := x\r\n        }\r\n    }\r\n}\r\n```\r\nwhile this doesn't:\r\n\r\n```\r\ncontract C {\r\n    uint256 constant x = uint256(3) + uint256(1);\r\n    function f() public returns (bytes32) {\r\n        assembly {\r\n            let y := x\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(the latter is not evaluated *early* enough, even though after optimization you'll likely still have ``4`` in the bytecode when referring to ``x``, i.e. it's still *eventually* evaluated during optimization...)\r\n\r\nSo I still think the most general solution to this would be to implement https://github.com/ethereum/solidity/issues/3157 - but we could also think about introducing a special case for string-literal-keccak256 earlier than that, since that's a likely use for constants...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668782371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668783898",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-668783898",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 668783898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc4Mzg5OA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T19:32:07Z",
    "updated_at": "2020-08-04T19:32:21Z",
    "author_association": "NONE",
    "body": "@ekpyron I gotcha. I appreciate the explanation. Thank you. Yes, a special case for string-literal-keccak256 earlier than that would be great!  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668783898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456013264",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-1456013264",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 1456013264,
    "node_id": "IC_kwDOAm_5kc5WyP_Q",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-06T12:05:32Z",
    "updated_at": "2023-03-06T12:05:32Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1456013264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1467977903",
    "html_url": "https://github.com/ethereum/solidity/issues/9570#issuecomment-1467977903",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9570",
    "id": 1467977903,
    "node_id": "IC_kwDOAm_5kc5Xf5Cv",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-14T12:05:14Z",
    "updated_at": "2023-03-14T12:05:14Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1467977903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
