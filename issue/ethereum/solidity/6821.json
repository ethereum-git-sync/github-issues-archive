{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6821",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6821/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6821/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6821/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6821",
  "id": 447287262,
  "node_id": "MDU6SXNzdWU0NDcyODcyNjI=",
  "number": 6821,
  "title": "Disable access to uninitialized array in memory",
  "user": {
    "login": "scucchiero",
    "id": 19697277,
    "node_id": "MDQ6VXNlcjE5Njk3Mjc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19697277?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/scucchiero",
    "html_url": "https://github.com/scucchiero",
    "followers_url": "https://api.github.com/users/scucchiero/followers",
    "following_url": "https://api.github.com/users/scucchiero/following{/other_user}",
    "gists_url": "https://api.github.com/users/scucchiero/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/scucchiero/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/scucchiero/subscriptions",
    "organizations_url": "https://api.github.com/users/scucchiero/orgs",
    "repos_url": "https://api.github.com/users/scucchiero/repos",
    "events_url": "https://api.github.com/users/scucchiero/events{/privacy}",
    "received_events_url": "https://api.github.com/users/scucchiero/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-22T18:43:21Z",
  "updated_at": "2019-05-22T19:58:41Z",
  "closed_at": "2019-05-22T19:58:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\nAttempting to assign to any slot in an uninitialized dynamic array in memory **is not detected by the compiler.**\r\n\r\n**This could be potentially used in a honeypot as it looks like legit code and it actually compiles and can be deployed in the blockchain.**\r\n\r\n## Environment\r\n\r\n- Compiler version: **0.5.8**\r\n- Target EVM version: **default**\r\n- Framework/IDE (e.g. Truffle or Remix): **Remix**\r\n- EVM execution environment / backend / blockchain client: **geth**/**ropsten**/**ganache**\r\n\r\n## Steps to Reproduce\r\nThe following contract is subject of this bug.\r\n```solidity\r\npragma solidity >=0.5.8;\r\n\r\ncontract Test {\r\n    \r\n    function foo() public pure returns (uint256[] memory) {\r\n        //uninitialized memory array\r\n        uint256[] memory arr;\r\n        //assignation to array slot\r\n        arr[3] = 4;\r\n        return arr;\r\n    }\r\n}\r\n```\r\nThe execution throws **\"error invalid opcode\"** as it is trying to access the array out of its bounds. Before initialization, an array's length is 0.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6821/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6821/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/494947797",
    "html_url": "https://github.com/ethereum/solidity/issues/6821#issuecomment-494947797",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6821",
    "id": 494947797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDk0Nzc5Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T19:58:41Z",
    "updated_at": "2019-05-22T19:58:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for opening this issue!\r\n\r\nIf I understand you correctly, you propose to change the detection of this error condition from runtime to compile-time, right? There are several other error conditions that occur at runtime which we do not detect at compile-time. These include division by zero, modulo by zero, call to an invalid contract, and others.\r\n\r\nWhile in your example it seems like the error would be easy to detect at compile-time, it is not very useful to implement this only for the simple cases. Wit the SMTChecker component, we are working on a feature that would be far more useful than just detecting this simple programming error.\r\n\r\nFinally, there are several tools available that can be applied to the bytecode of this smart contract and which would immediately tell you that the function foo will never successfully return.\r\n\r\nPlease reopen if I misunderstood something or you have further suggestions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/494947797/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
