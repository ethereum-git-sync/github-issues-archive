{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12610/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12610/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12610/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12610",
  "id": 1120738925,
  "node_id": "I_kwDOAm_5kc5CzR5t",
  "number": 12610,
  "title": "Support for `offchain` keyword",
  "user": {
    "login": "beerefine",
    "id": 93521351,
    "node_id": "U_kgDOBZMFxw",
    "avatar_url": "https://avatars.githubusercontent.com/u/93521351?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/beerefine",
    "html_url": "https://github.com/beerefine",
    "followers_url": "https://api.github.com/users/beerefine/followers",
    "following_url": "https://api.github.com/users/beerefine/following{/other_user}",
    "gists_url": "https://api.github.com/users/beerefine/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/beerefine/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beerefine/subscriptions",
    "organizations_url": "https://api.github.com/users/beerefine/orgs",
    "repos_url": "https://api.github.com/users/beerefine/repos",
    "events_url": "https://api.github.com/users/beerefine/events{/privacy}",
    "received_events_url": "https://api.github.com/users/beerefine/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-02-01T14:19:49Z",
  "updated_at": "2023-03-29T12:06:41Z",
  "closed_at": "2023-03-29T12:06:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nA lot of expensive sanity checks can be performed off-chain. I propose a new solidity keyword with simple, familiar syntax and fully compatible with current EVM opcodes.\r\n\r\n## Motivation\r\n\r\nGas costs increase significantly with complexity. Moreover, a lot of information present on-chain can be fetched off-chain, saving significant gas for storage access.\r\n\r\n## Specification\r\n\r\nSimilarly to the `unchecked` keyword, I propose a syntax for `offchain` blocks:\r\n\r\n```\r\noffchain {\r\n    // off-chain logic here, e.g.\r\n    require(token.balanceOf(msg.sender) >= amount, \"insufficient balance\");\r\n}\r\n```\r\n\r\nTo avoid contradictions between off-chain & on-chain logic, the block must behave like view-only or pure functions, such that it cannot affect the flow of execution aside from reverting.\r\n\r\nWhich is equivalent to:\r\n`if (isOffChain) { ... }`\r\n\r\nisOffChain can be repurpose `block.coinbase`, since it is unknown during offchain execution anyway. So now the above code can be translated to:\r\n\r\n`if (block.coinbase == OFFCHAIN_MAGIC) { ... }`\r\n\r\nNote `COINBASE` opcode costs only 2 gas. I suggest OFFCHAIN_MAGIC to be `uint256(0)`. this way the new keyword can be implemented with just 4 opcodes overhead:\r\n\r\n```\r\nCOINBASE             // 2 gas\r\nISZERO               // 3 gas\r\nJUMPI endOfBlock     // 10 gas\r\n    <offchain logic here>\r\nendOfBlock:\r\nJUMPDEST             // 1 gas\r\n```\r\n\r\nThe extra cost will be  2 + 3 + 10 + 1 = 16 gas, while potentially saving significantly larger amounts. Moreover, the cost of the off-chain block can be calculated and if it is smaller than 16, the `offchain` keyword can be optimized out.\r\n\r\n## Caveats\r\n\r\nUsers of the `offchain` keyword need to be careful not to introduce security holes. Here is a safe and an unsafe example:\r\n\r\nsafe:\r\n```\r\noffchain {\r\n    require(token.balanceOf(msg.sender) >= amount, \"insufficient balance\");\r\n}\r\ntoken.safeTransferFrom(msg.sender, address(this), amount); // if user doesn't have enough balance, this will fail anyway\r\n```\r\n\r\nunsafe:\r\n```\r\noffchain {\r\n    require(recipient == ecrecover(hash, v, r, s), \"invalid signature\");\r\n}\r\ntoken.safeTransferFrom(address(this), recipient, amount); // the previous validity check must be performed on-chain\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nSince no new EVM opcodes were introduced, it is compatible with existing EVM chains.\r\nNothing breaks on the compiler side, and additionally the `offchain` keyword can be ignored with a warning for older solidity versions, with the side effect of producing more expensive bytecode.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12610/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12610/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1027360141",
    "html_url": "https://github.com/ethereum/solidity/issues/12610#issuecomment-1027360141",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
    "id": 1027360141,
    "node_id": "IC_kwDOAm_5kc49PEWN",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T22:43:56Z",
    "updated_at": "2022-02-01T22:43:56Z",
    "author_association": "MEMBER",
    "body": "That's an interesting idea. Very similar to how for example in C/C++ you have the `assert()` macro that only generates code in debug builds to avoid any runtime penalty in production ones. has similar downsides though.\r\n\r\nUnfortunately I don't think it would work out in practice. This would need support from blockchain clients and the flow would probably be something like this:\r\n1. You submit your signed transaction to the node.\r\n2. Node executes it off chain first to make sure all your offchain checks pass. If they don't you get an error.\r\n3. Node actually propagates your transaction.\r\n\r\nThe problem is that the fact that your checks passed in the initial execution does not mean they would pass on-chain too. Unless all your offchain logic is `pure`, the result might be different depending on what other transactions run before it - the node can't know that until your transaction actually published as a part of a block.\r\n\r\nAlso, some general remarks:\r\n- I'm not sure if there's a good use case for it being a general mechanism that can handle arbitrary statements. I think that doing it for `require()` and `assert()` would cover most practical situations. This would allow a more concise syntax, e.g. `offchain require( ...);`.\r\n- Ensuring that the content of the block is `view`/`pure` is not enough IMO. It should also for example disallow assignments to local or memory variables. I'd also disallow assembly. One of the pitfalls of the `assert()` macro is that you can do things that have side-effects and your code might fail in production where those side-effects are no longer present.\r\n- If this code is never executed on-chain you unnecessarily pay for it to be posted there. It might make more sense to pass it to the clients out of band, just like this is the case with the ABI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1027360141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031156114",
    "html_url": "https://github.com/ethereum/solidity/issues/12610#issuecomment-1031156114",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
    "id": 1031156114,
    "node_id": "IC_kwDOAm_5kc49djGS",
    "user": {
      "login": "beerefine",
      "id": 93521351,
      "node_id": "U_kgDOBZMFxw",
      "avatar_url": "https://avatars.githubusercontent.com/u/93521351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beerefine",
      "html_url": "https://github.com/beerefine",
      "followers_url": "https://api.github.com/users/beerefine/followers",
      "following_url": "https://api.github.com/users/beerefine/following{/other_user}",
      "gists_url": "https://api.github.com/users/beerefine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beerefine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beerefine/subscriptions",
      "organizations_url": "https://api.github.com/users/beerefine/orgs",
      "repos_url": "https://api.github.com/users/beerefine/repos",
      "events_url": "https://api.github.com/users/beerefine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beerefine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T07:33:23Z",
    "updated_at": "2022-02-07T07:41:29Z",
    "author_association": "NONE",
    "body": "you understand the flow perfectly. and yes, as I mentioned the `offchain` block should be pure. I agree that what `pure` means in the context of a code-block rather than an entire function is different and it should not allow side effects such as writing to memory outside of the block. so thank you for that good observation. however, I do not agree about your arguments:\r\n1. _\"This would need support from blockchain clients\"_ - no, because the `offchain` keyword is only syntactic-sugar for things you can accomplish with extra few characters of code (`if (block.coinbase == address(0)) { .. }`) and so is transparent to clients.\r\n2. _\"the result might be different depending on what other transactions run before it\"_ - that is true regardless, any transaction you emulate offchain by call() might disagree with what you actually send() on chain (frontrunning, gas mismatch, conditions based on timestamp, block number, etc.) so it is no argument against the proposed keyword.\r\n\r\nand lastly regarding your last remark: the whole point is gas saving, the one-time payment of few extra weis for the extra code is completely negligible compared to the overall gas savings. and what you suggest with extending the ABI would actually require clients support.\r\n\r\nconsidering the code-block will indeed have no side effects, I can't see any other drawbacks for this syntax. although I am open to be enlightened and learn otherwise :)\r\n\r\nedit: I have to admit I did not check a single client's given `block.coinbase`. so long the majority do have predictable coinbase I believe it's fine. otherwise, perhaps some other logic may be used instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031156114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031269777",
    "html_url": "https://github.com/ethereum/solidity/issues/12610#issuecomment-1031269777",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
    "id": 1031269777,
    "node_id": "IC_kwDOAm_5kc49d-2R",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T09:49:40Z",
    "updated_at": "2022-02-07T09:49:40Z",
    "author_association": "MEMBER",
    "body": "> keyword is only syntactic-sugar (...) and so is transparent to clients.\r\n\r\nWhat I meant is that you need support from clients to execute it. Otherwise it's just a piece of dead code that's useless without client-side support.\r\n\r\n> any transaction you emulate offchain by call() might disagree with what you actually send() on chain (frontrunning, gas mismatch, conditions based on timestamp, block number, etc.) so it is no argument against the proposed keyword.\r\n\r\nI mean, this was more of an argument against executing it off-chain at all. A `require()` executed off-chain is just not reliable enough in that sense compared to one that gets executed on-chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031269777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1479452698",
    "html_url": "https://github.com/ethereum/solidity/issues/12610#issuecomment-1479452698",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
    "id": 1479452698,
    "node_id": "IC_kwDOAm_5kc5YLqga",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-22T12:05:38Z",
    "updated_at": "2023-03-22T12:05:38Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1479452698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488479189",
    "html_url": "https://github.com/ethereum/solidity/issues/12610#issuecomment-1488479189",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12610",
    "id": 1488479189,
    "node_id": "IC_kwDOAm_5kc5YuGPV",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-29T12:06:39Z",
    "updated_at": "2023-03-29T12:06:39Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488479189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
