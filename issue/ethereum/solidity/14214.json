{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14214",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14214/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14214/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14214/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14214",
  "id": 1705752816,
  "node_id": "I_kwDOAm_5kc5lq7jw",
  "number": 14214,
  "title": "`outputSelection` with contract name and not `*` leads to empty compiler output in `<=0.5.8`",
  "user": {
    "login": "kuzdogan",
    "id": 13069972,
    "node_id": "MDQ6VXNlcjEzMDY5OTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kuzdogan",
    "html_url": "https://github.com/kuzdogan",
    "followers_url": "https://api.github.com/users/kuzdogan/followers",
    "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
    "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
    "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
    "repos_url": "https://api.github.com/users/kuzdogan/repos",
    "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-05-11T12:42:42Z",
  "updated_at": "2023-05-15T12:54:32Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n### Summary:\r\n\r\nProviding a contract name in the contract selection of the `outputSelection` field of the JSON input is outputting empty JSON fields in versions `<=0.5.8`.\r\n\r\nDoesn't work:\r\n```json\r\n\"outputSelection\": {\r\n  \"*\": {\r\n    \"Storage\": [\"*\"]\r\n  }\r\n}\r\n```\r\n\r\nWorks:\r\n```json\r\n\"outputSelection\": {\r\n  \"*\": {\r\n    \"*\": [\"*\"]\r\n  }\r\n}\r\n```\r\n\r\n### Details\r\n\r\nI've encountered multiple issues about the `outputSelection`. \r\n\r\n- Initially https://github.com/ethereum/solidity/issues/13985 about the **file selection** in the output selection in `v0.6.5`.\r\n- Recently I've come across another issue https://github.com/ethereum/solc-js/issues/690 in `<=0.4.19`\r\n  - I thought it happens because of the introduction of the `outputSelection` in that version.\r\n  - Shouldn't be related to solc as the field wasn't introduced back then and unfortunately there was no valid field check.\r\n  - Hence issue opened in solc-js to handle the JSON translation for earlier versions\r\n\r\nDigging into the issue https://github.com/ethereum/sourcify/issues/1017 in Sourcify, I came across this issue which affects versions `<=0.5.8` but not `>=0.5.9`. I couldn't find any related changes in this version about the `outputSelection` so I'm opening the issue.\r\n\r\nTo reproduce, here's the compiler input JSON:\r\n```json\r\n{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"optimizer\": { \"enabled\": true, \"runs\": 200 },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"Storage\": [\"evm.bytecode\"]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"Storage.sol\": {\r\n      \"content\": \"pragma solidity >=0.4.0 <0.9.0;\\n\\ncontract Storage {\\n\\n    uint256 number;\\n\\n    function store(uint256 num) public {\\n        number = num;\\n    }\\n\\n    function retrieve() public view returns (uint256){\\n        return number;\\n    }\\n}\\n\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis would generate the following unexpected output:\r\n```json\r\n{\r\n  \"contracts\": {\r\n    \"Storage.sol\": {\r\n      \"Storage\": {\r\n        \"evm\": {\r\n          \"bytecode\": {\r\n            \"linkReferences\": {},\r\n            \"object\": \"\",\r\n            \"opcodes\": \"\",\r\n            \"sourceMap\": \"\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"Storage.sol\": {\r\n      \"id\": 0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nChanging the `\"Storage\"` field in the JSON to `\"*\"` will lead to an expected compiler output with bytecode.\r\n\r\nThe contract is fairly simple and attached here: \r\n[Storage.sol.txt](https://github.com/ethereum/solidity/files/11452181/Storage.sol.txt)\r\n\r\n## Environment\r\n\r\n- Compiler version: affected `<=0.5.8`\r\n- Target EVM version (as per compiler settings): `default`\r\n- Framework/IDE (e.g. Truffle or Remix): Both in `0.5.8+commit.23d335f2.Darwin.appleclang` downloaded with [solc-select](https://github.com/crytic/solc-select). I was able to reproduce in Remix, as well as in Sourcify, which uses solc-js on Mac ARM.\r\n- Operating system: MacOS ARM 64bit",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14214/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14214/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547783120",
    "html_url": "https://github.com/ethereum/solidity/issues/14214#issuecomment-1547783120",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14214",
    "id": 1547783120,
    "node_id": "IC_kwDOAm_5kc5cQUvQ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T12:36:31Z",
    "updated_at": "2023-05-15T12:36:31Z",
    "author_association": "MEMBER",
    "body": "Since we won't touch old releases, the fix for this will probably be something similar to https://github.com/ethereum/solc-js/issues/690, although we may want to come up with a nicer cross-platform way to do such input/output translations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547783120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547807004",
    "html_url": "https://github.com/ethereum/solidity/issues/14214#issuecomment-1547807004",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14214",
    "id": 1547807004,
    "node_id": "IC_kwDOAm_5kc5cQakc",
    "user": {
      "login": "kuzdogan",
      "id": 13069972,
      "node_id": "MDQ6VXNlcjEzMDY5OTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuzdogan",
      "html_url": "https://github.com/kuzdogan",
      "followers_url": "https://api.github.com/users/kuzdogan/followers",
      "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
      "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
      "repos_url": "https://api.github.com/users/kuzdogan/repos",
      "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T12:54:32Z",
    "updated_at": "2023-05-15T12:54:32Z",
    "author_association": "MEMBER",
    "body": "Right. Putting this for the record and if it is indeed a bug, maybe to be listed in bugs. \r\n\r\nWe just went forward with the workaround of using `*` on all levels, so all fine if this should be closed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1547807004/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
