{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8076/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8076/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8076/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8076",
  "id": 542136837,
  "node_id": "MDU6SXNzdWU1NDIxMzY4Mzc=",
  "number": 8076,
  "title": "View function become input function after upgrade 0.5.1 to 0.6.0 ERC20",
  "user": {
    "login": "codev911",
    "id": 53482087,
    "node_id": "MDQ6VXNlcjUzNDgyMDg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/53482087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/codev911",
    "html_url": "https://github.com/codev911",
    "followers_url": "https://api.github.com/users/codev911/followers",
    "following_url": "https://api.github.com/users/codev911/following{/other_user}",
    "gists_url": "https://api.github.com/users/codev911/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/codev911/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/codev911/subscriptions",
    "organizations_url": "https://api.github.com/users/codev911/orgs",
    "repos_url": "https://api.github.com/users/codev911/repos",
    "events_url": "https://api.github.com/users/codev911/events{/privacy}",
    "received_events_url": "https://api.github.com/users/codev911/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-12-24T13:55:50Z",
  "updated_at": "2020-01-15T12:57:22Z",
  "closed_at": "2020-01-14T17:13:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "this is my source code after update from 0.5.1 to 0.6.0, i just clear any error appear at 0.6.0 but after deploy i got only input function, and my view function like view token name, view decimals, view supply and many more : \r\n\r\n```\r\npragma solidity >=0.5.0 <0.7.0;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor () internal { }\r\n    // solhint-disable-previous-line no-empty-blocks\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\r\n}\r\n\r\ncontract token is Context, IERC20{\r\n    using SafeMath for uint256;\r\n    address contractOwner;\r\n    \r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    uint256 private _totalSupply;\r\n    uint256 private _totalDistributed;\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    constructor (string memory name, string memory symbol, uint8 decimals, uint256 totalSupply) public {\r\n       contractOwner = msg.sender;\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n        uint cvdecimal = decimals;\r\n        _totalSupply = totalSupply.mul(10**cvdecimal);\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == contractOwner);\r\n        _;\r\n    }\r\n\r\n    function name() override external view returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() override external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    function totalSupply() override public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    function totalDistributed() public view returns (uint256) {\r\n        return _totalDistributed;\r\n    }\r\n    \r\n    function balanceOf(address account) public override view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) public override view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        uint256 counter = _totalDistributed + amount;\r\n        if(_totalDistributed <= _totalSupply && counter <= _totalSupply){\r\n            _totalDistributed = _totalDistributed.add(amount);\r\n            _balances[account] = _balances[account].add(amount);\r\n            emit Transfer(address(0), account, amount);\r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n        _allowances[msg.sender][spender] = tokens;\r\n        _approve(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n    function mint(address account, uint256 amount) public onlyOwner returns (bool) {\r\n        _mint(account, amount);\r\n        return true;\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8076/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8076/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568814348",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-568814348",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 568814348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODgxNDM0OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-25T00:35:16Z",
    "updated_at": "2019-12-25T00:35:16Z",
    "author_association": "MEMBER",
    "body": "Can you please mention the tools you are using?\r\n\r\nI believe this is a duplicate of #8065, which means it is not a problem in the compiler, but the tooling.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568814348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568847473",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-568847473",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 568847473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODg0NzQ3Mw==",
    "user": {
      "login": "codev911",
      "id": 53482087,
      "node_id": "MDQ6VXNlcjUzNDgyMDg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/53482087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codev911",
      "html_url": "https://github.com/codev911",
      "followers_url": "https://api.github.com/users/codev911/followers",
      "following_url": "https://api.github.com/users/codev911/following{/other_user}",
      "gists_url": "https://api.github.com/users/codev911/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codev911/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codev911/subscriptions",
      "organizations_url": "https://api.github.com/users/codev911/orgs",
      "repos_url": "https://api.github.com/users/codev911/repos",
      "events_url": "https://api.github.com/users/codev911/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codev911/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-25T06:20:18Z",
    "updated_at": "2019-12-25T06:20:18Z",
    "author_association": "NONE",
    "body": "i just deploy at remix.ethereum.org",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568847473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568921509",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-568921509",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 568921509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODkyMTUwOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-25T18:39:29Z",
    "updated_at": "2019-12-25T18:39:29Z",
    "author_association": "MEMBER",
    "body": "@LianaHus is this fixed/deployed on Remix yet?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/568921509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569528765",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-569528765",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 569528765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTUyODc2NQ==",
    "user": {
      "login": "BogdanVidrean",
      "id": 13217082,
      "node_id": "MDQ6VXNlcjEzMjE3MDgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13217082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BogdanVidrean",
      "html_url": "https://github.com/BogdanVidrean",
      "followers_url": "https://api.github.com/users/BogdanVidrean/followers",
      "following_url": "https://api.github.com/users/BogdanVidrean/following{/other_user}",
      "gists_url": "https://api.github.com/users/BogdanVidrean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BogdanVidrean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BogdanVidrean/subscriptions",
      "organizations_url": "https://api.github.com/users/BogdanVidrean/orgs",
      "repos_url": "https://api.github.com/users/BogdanVidrean/repos",
      "events_url": "https://api.github.com/users/BogdanVidrean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BogdanVidrean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-29T18:08:24Z",
    "updated_at": "2019-12-29T18:12:30Z",
    "author_association": "NONE",
    "body": "I also reproduced this problem after upgrading from 0.5.15 to 0.6.0. I used Remix IDE and now all my view functions initiate a transaction (they are not readonly anymore). I tested with a local node and also with the JavaScriptVM and it maintains the same behaviour. In order to reproduce create a new contract that contains a view function, and test it with the latest release of 0.15 and then switch to 0.6.0 and see that it creates a new transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569528765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569544216",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-569544216",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 569544216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTU0NDIxNg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-29T21:38:19Z",
    "updated_at": "2019-12-29T21:38:19Z",
    "author_association": "MEMBER",
    "body": "Please note this is not a bug in the compiler. Those hints in the ABI JSON are nothing more, but hints. Tooling can decide how to interpret them.\r\n\r\nThe problem here is that tools seemingly didn't update since 2017, when the new fields were introduced.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569544216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569734254",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-569734254",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 569734254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTczNDI1NA==",
    "user": {
      "login": "BogdanVidrean",
      "id": 13217082,
      "node_id": "MDQ6VXNlcjEzMjE3MDgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13217082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BogdanVidrean",
      "html_url": "https://github.com/BogdanVidrean",
      "followers_url": "https://api.github.com/users/BogdanVidrean/followers",
      "following_url": "https://api.github.com/users/BogdanVidrean/following{/other_user}",
      "gists_url": "https://api.github.com/users/BogdanVidrean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BogdanVidrean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BogdanVidrean/subscriptions",
      "organizations_url": "https://api.github.com/users/BogdanVidrean/orgs",
      "repos_url": "https://api.github.com/users/BogdanVidrean/repos",
      "events_url": "https://api.github.com/users/BogdanVidrean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BogdanVidrean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-30T17:00:13Z",
    "updated_at": "2019-12-30T17:00:13Z",
    "author_association": "NONE",
    "body": "Yeah, I was thinking at the exact same scenario. Most probably Remix uses those hints from the ABI JSON in order to determine whether a function is view, pure or it requires a transaction. Currently I also discovered this problem with Web3j's java class wrapper generation. They are also not up to date.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/569734254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574279170",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-574279170",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 574279170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDI3OTE3MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-14T17:13:37Z",
    "updated_at": "2020-01-14T17:13:37Z",
    "author_association": "MEMBER",
    "body": "Closing this as out of scope. Please re-open if in error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574279170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574648538",
    "html_url": "https://github.com/ethereum/solidity/issues/8076#issuecomment-574648538",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8076",
    "id": 574648538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDY0ODUzOA==",
    "user": {
      "login": "LianaHus",
      "id": 9685356,
      "node_id": "MDQ6VXNlcjk2ODUzNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9685356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LianaHus",
      "html_url": "https://github.com/LianaHus",
      "followers_url": "https://api.github.com/users/LianaHus/followers",
      "following_url": "https://api.github.com/users/LianaHus/following{/other_user}",
      "gists_url": "https://api.github.com/users/LianaHus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LianaHus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LianaHus/subscriptions",
      "organizations_url": "https://api.github.com/users/LianaHus/orgs",
      "repos_url": "https://api.github.com/users/LianaHus/repos",
      "events_url": "https://api.github.com/users/LianaHus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LianaHus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T12:57:22Z",
    "updated_at": "2020-01-15T12:57:22Z",
    "author_association": "MEMBER",
    "body": "> @LianaHus is this fixed/deployed on Remix yet?\r\n\r\nthis is fixed in remix-alpha. will be released soon",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/574648538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
