{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13259",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13259/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13259/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13259/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13259",
  "id": 1300026606,
  "node_id": "I_kwDOAm_5kc5NfNTu",
  "number": 13259,
  "title": "ICE in the codegen when using `.slot` on a mapping reference in assembly: `InternalCompilerError: Invalid stack item name: slot`",
  "user": {
    "login": "jameswenzel",
    "id": 6371847,
    "node_id": "MDQ6VXNlcjYzNzE4NDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6371847?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jameswenzel",
    "html_url": "https://github.com/jameswenzel",
    "followers_url": "https://api.github.com/users/jameswenzel/followers",
    "following_url": "https://api.github.com/users/jameswenzel/following{/other_user}",
    "gists_url": "https://api.github.com/users/jameswenzel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jameswenzel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jameswenzel/subscriptions",
    "organizations_url": "https://api.github.com/users/jameswenzel/orgs",
    "repos_url": "https://api.github.com/users/jameswenzel/repos",
    "events_url": "https://api.github.com/users/jameswenzel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jameswenzel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "wechman",
    "id": 37188783,
    "node_id": "MDQ6VXNlcjM3MTg4Nzgz",
    "avatar_url": "https://avatars.githubusercontent.com/u/37188783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wechman",
    "html_url": "https://github.com/wechman",
    "followers_url": "https://api.github.com/users/wechman/followers",
    "following_url": "https://api.github.com/users/wechman/following{/other_user}",
    "gists_url": "https://api.github.com/users/wechman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wechman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wechman/subscriptions",
    "organizations_url": "https://api.github.com/users/wechman/orgs",
    "repos_url": "https://api.github.com/users/wechman/repos",
    "events_url": "https://api.github.com/users/wechman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wechman/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "wechman",
      "id": 37188783,
      "node_id": "MDQ6VXNlcjM3MTg4Nzgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/37188783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wechman",
      "html_url": "https://github.com/wechman",
      "followers_url": "https://api.github.com/users/wechman/followers",
      "following_url": "https://api.github.com/users/wechman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wechman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wechman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wechman/subscriptions",
      "organizations_url": "https://api.github.com/users/wechman/orgs",
      "repos_url": "https://api.github.com/users/wechman/repos",
      "events_url": "https://api.github.com/users/wechman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wechman/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-07-10T22:00:27Z",
  "updated_at": "2022-09-05T12:00:20Z",
  "closed_at": "2022-09-05T12:00:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n    - [Solidity chat](https://gitter.im/ethereum/solidity)\r\n    - [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n\r\n*Delete the above section and the instructions in the sections below before submitting*\r\n-->\r\n\r\n## Description\r\n\r\n<!--Please shortly describe the bug you have found, and what you expect instead.-->\r\n\r\nSometimes compiling via IR results in the following error (with Foundry):\r\n```\r\n❯ forge build\r\n[⠆] Compiling...\r\n[⠆] Compiling 69 files with 0.8.15\r\n[⠔] Solc 0.8.15 finished in 3.00s\r\nError: \r\nCompiler run failed\r\nInternalCompilerError: Invalid stack item name: slot\r\n```\r\n\r\nAs the error implies, it seems to be related to storing variables that point to storage slots.\r\n\r\n## Environment\r\n\r\n- Compiler version: reproduced with 0.8.15,0.8.14,0.8.13\r\n- Framework/IDE (e.g. Truffle or Remix): Foundry\r\n- EVM execution environment / backend / blockchain client: Foundry\r\n- Operating system: macOS\r\n\r\n## Steps to Reproduce\r\n\r\n<!--\r\nPlease provide a *minimal* source code example to trigger the bug you have found.\r\nPlease also mention any command line flags that are necessary for triggering the bug.\r\nProvide as much information as necessary to reproduce the bug.\r\n\r\n```solidity\r\n// Some *minimal* Solidity source code to reproduce the bug.\r\n// ...\r\n```\r\n-->\r\n\r\nIn my case, I was able to resolve this by changing the following code from this:\r\n\r\n```solidity\r\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\r\n        assembly {\r\n            // Compute the slot.\r\n            mstore(0x00, tokenId)\r\n            mstore(0x20, tokenApprovalsPtr.slot)\r\n            approvedAddressSlot := keccak256(0x00, 0x40)\r\n            // Load the slot's value from storage.\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n```\r\n\r\nto this:\r\n\r\n\r\n```solidity\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\r\n        assembly {\r\n            // Compute the slot.\r\n            mstore(0x00, tokenId)\r\n            mstore(0x20, _tokenApprovals.slot)\r\n            approvedAddressSlot := keccak256(0x00, 0x40)\r\n            // Load the slot's value from storage.\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n```\r\n\r\nLink to commit with issue present: https://github.com/jameswenzel/bound-layerable/blob/91b7096cfedd20bb422f5ed1f83c7e50261c2bcc/src/token/ERC721A.sol#L694\r\nLink to commit with issue fixed: https://github.com/jameswenzel/bound-layerable/blob/770ded9df31d624f38e1db6c32d0d5c6f7e64132/src/token/ERC721A.sol#L694\r\n\r\nWhile the code I changed is [copied from the ERC721A repo](https://github.com/chiru-labs/ERC721A/blob/7819fc341da2fece936688239c66b702f7c8add8/contracts/ERC721A.sol#L585), I'm able to build the code at that commit as-is without issues, with the IR pipeline enabled.\r\n\r\n\r\n",
  "closed_by": {
    "login": "wechman",
    "id": 37188783,
    "node_id": "MDQ6VXNlcjM3MTg4Nzgz",
    "avatar_url": "https://avatars.githubusercontent.com/u/37188783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wechman",
    "html_url": "https://github.com/wechman",
    "followers_url": "https://api.github.com/users/wechman/followers",
    "following_url": "https://api.github.com/users/wechman/following{/other_user}",
    "gists_url": "https://api.github.com/users/wechman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wechman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wechman/subscriptions",
    "organizations_url": "https://api.github.com/users/wechman/orgs",
    "repos_url": "https://api.github.com/users/wechman/repos",
    "events_url": "https://api.github.com/users/wechman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wechman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13259/reactions",
    "total_count": 3,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13259/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1180362360",
    "html_url": "https://github.com/ethereum/solidity/issues/13259#issuecomment-1180362360",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13259",
    "id": 1180362360,
    "node_id": "IC_kwDOAm_5kc5GWuZ4",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-11T12:41:41Z",
    "updated_at": "2022-07-11T12:41:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report! This indeed seems to be a bug in the compiler. I managed to create a smaller repro (see below). Simply using `.slot` on a storage reference to a mapping in assembly triggers it.\r\n\r\nLooks like the bug has been there all the way since the IR was introduced (or at least the `--ir` option) in 0.5.8. Back then the syntax was `_slot`, not `.slot` though. Between 0.5.10 and 0.7.0 it was causing an uncaught exception in `map::at()` but starting with 0.7.1 it's again an ICE.\r\n\r\n### Repro\r\n`test.sol`:\r\n```solidity\r\ncontract C  {\r\n    mapping(uint => uint) private m;\r\n\r\n    function g() public {\r\n        mapping(uint => uint) storage mPtr = m;\r\n        assembly {\r\n            pop(mPtr.slot)\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\nsolc test.sol --ir\r\n```\r\n```\r\nInternal compiler error:\r\n/solidity/libsolidity/codegen/ir/IRVariable.cpp(52): Throw in function solidity::frontend::IRVariable solidity::frontend::IRVariable::part(const std::string&) const\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Invalid stack item name: slot\r\n[solidity::util::tag_comment*] = Invalid stack item name: slot\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1180362360/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
