{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/796",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/796/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/796/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/796/events",
  "html_url": "https://github.com/ethereum/solidity/issues/796",
  "id": 168829728,
  "node_id": "MDU6SXNzdWUxNjg4Mjk3Mjg=",
  "number": 796,
  "title": "Exception on overflow",
  "user": {
    "login": "phiferd",
    "id": 25631,
    "node_id": "MDQ6VXNlcjI1NjMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/phiferd",
    "html_url": "https://github.com/phiferd",
    "followers_url": "https://api.github.com/users/phiferd/followers",
    "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
    "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
    "organizations_url": "https://api.github.com/users/phiferd/orgs",
    "repos_url": "https://api.github.com/users/phiferd/repos",
    "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
    "received_events_url": "https://api.github.com/users/phiferd/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 35,
  "created_at": "2016-08-02T08:40:16Z",
  "updated_at": "2020-10-20T13:34:17Z",
  "closed_at": "2020-10-20T13:34:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "It would be nice if Solidity, by default, threw an exception for arithmetic overflow, rather than allowing it.\n\nJustification:\n1. Overflow is rarely desired behavior and is commonly cited as a security vulnerability.  \n2: Even in cases where overflow is desired behavior, throwing an exception is a far safer failure mode and easier to detect/correct.\n3: The goal of solidity, as I understand it, is to enable the creation of secure and reliable smart contacts.  Therefore, although it is of course possible for the developer to include their own checks, including this as a feature of the language will make the common case both simple and more secure.  \n\nIf this is not achievable, I welcome alternatives that do not require each and every developer to remember these corner cases for each and every arithmetic operation.  A solution that states \"everybody should do XYZ\" will inevitably lead to failures.\n\nI'm am not familiar enough with the code to propose a detailed solution. However, a compiler switch that is on by default and can be disabled for backward compatibility is the sort of approach I was imagining.\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/796/reactions",
    "total_count": 14,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 7,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/796/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236845367",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-236845367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 236845367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjg0NTM2Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-02T08:58:47Z",
    "updated_at": "2016-08-02T08:58:47Z",
    "author_association": "MEMBER",
    "body": "The main Problem I see with this is that you still have to aware of the possibility of an arithmetic overflow. If we throw in that case, this could stall a smart contract.\n\nThe only solution I see is to use our formal verification system that automatically verifies whether overflow protection checks are in place (or not needed).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236845367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236858358",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-236858358",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 236858358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjg1ODM1OA==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-02T09:54:48Z",
    "updated_at": "2016-08-02T09:54:48Z",
    "author_association": "NONE",
    "body": "Could the same argument be made for the exception that is thrown for division by 0 and a negative array index? Those could have the same effect, but I can't see arguing that coming up with some default but incorrect behavior would be better (e.g. We could just wrap array indices around).  \n\nMy concern is that the failures that can come from overflow go undetected.  \n\nI am definitely not suggesting that formal verification should not be done, there is no substitute.  But I think allowing overflow offers no real advantage, unless you're hoping to hack a contract.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236858358/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236865861",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-236865861",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 236865861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjg2NTg2MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-02T10:28:39Z",
    "updated_at": "2016-08-02T10:28:39Z",
    "author_association": "MEMBER",
    "body": "You have a valid point. Still, I think these are not exactly comparable:\nInvalid array access and division by zero are more predictable and less \"continuous\" than arithmetic overflow.\n\nBut yes, it is probably better to stall a contract in case of overflow than to provoke undesired effects on state.\n\nWhat are cases where overflow is actually desired? I think for most of them, we can still use `mulmod` and `addmod`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/236865861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239419172",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-239419172",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 239419172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQxOTE3Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T11:02:09Z",
    "updated_at": "2016-08-12T11:02:09Z",
    "author_association": "MEMBER",
    "body": "Note that this is quite expensive to do, especially for types shorter than 256 bits.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239419172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243061835",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243061835",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243061835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA2MTgzNQ==",
    "user": {
      "login": "rainbreak",
      "id": 18486361,
      "node_id": "MDQ6VXNlcjE4NDg2MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/18486361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainbreak",
      "html_url": "https://github.com/rainbreak",
      "followers_url": "https://api.github.com/users/rainbreak/followers",
      "following_url": "https://api.github.com/users/rainbreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainbreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainbreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainbreak/subscriptions",
      "organizations_url": "https://api.github.com/users/rainbreak/orgs",
      "repos_url": "https://api.github.com/users/rainbreak/repos",
      "events_url": "https://api.github.com/users/rainbreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainbreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T08:21:27Z",
    "updated_at": "2016-08-29T08:21:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would you consider this for 0.4.0, or is it a bit involved for that?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243061835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243199842",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243199842",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243199842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzE5OTg0Mg==",
    "user": {
      "login": "ethernomad",
      "id": 161566,
      "node_id": "MDQ6VXNlcjE2MTU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/161566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethernomad",
      "html_url": "https://github.com/ethernomad",
      "followers_url": "https://api.github.com/users/ethernomad/followers",
      "following_url": "https://api.github.com/users/ethernomad/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethernomad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethernomad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethernomad/subscriptions",
      "organizations_url": "https://api.github.com/users/ethernomad/orgs",
      "repos_url": "https://api.github.com/users/ethernomad/repos",
      "events_url": "https://api.github.com/users/ethernomad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethernomad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T17:51:15Z",
    "updated_at": "2016-08-29T17:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe this should be implemented in the EVM?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243199842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243208773",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243208773",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243208773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzIwODc3Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T18:20:24Z",
    "updated_at": "2016-08-29T18:20:24Z",
    "author_association": "MEMBER",
    "body": "I think arithmetic overflow detection belongs to the EVM, but that would be a rather big change to it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243208773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243297041",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243297041",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243297041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzI5NzA0MQ==",
    "user": {
      "login": "rainbreak",
      "id": 18486361,
      "node_id": "MDQ6VXNlcjE4NDg2MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/18486361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainbreak",
      "html_url": "https://github.com/rainbreak",
      "followers_url": "https://api.github.com/users/rainbreak/followers",
      "following_url": "https://api.github.com/users/rainbreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainbreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainbreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainbreak/subscriptions",
      "organizations_url": "https://api.github.com/users/rainbreak/orgs",
      "repos_url": "https://api.github.com/users/rainbreak/repos",
      "events_url": "https://api.github.com/users/rainbreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainbreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T00:20:00Z",
    "updated_at": "2016-08-30T00:20:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the EVM I think it would need extra opcodes as overflowing math is still useful. In the meantime we can have it in Solidity and get the safety benefits at the expense of a bit of gas (completely worth it I think because you end up checking it in safe code anyway).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243297041/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243520222",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243520222",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243520222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzUyMDIyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T17:42:46Z",
    "updated_at": "2016-08-30T17:42:46Z",
    "author_association": "MEMBER",
    "body": "@rainbeam This is too involved for 0.4.0. Arithmetics is almost for free when compared to storage writes or even a transaction, so I think it is fine to do it. I do not really agree that this belongs to the EVM. Something like an overflow flag might be added to the EVM, but not a \"force-stop\" on overflow.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243520222/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243521812",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-243521812",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 243521812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzUyMTgxMg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T17:48:06Z",
    "updated_at": "2016-08-30T17:48:06Z",
    "author_association": "MEMBER",
    "body": "> I think arithmetic overflow **detection** belongs to the EVM\n\nBy detection I meant the overflow flag. So perhaps that would then needs its on opcode for getting the overflow flag onto the stack and/or its own jump (`JUMPOF`).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/243521812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/253512778",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-253512778",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 253512778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzUxMjc3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T13:28:18Z",
    "updated_at": "2016-10-13T13:28:18Z",
    "author_association": "MEMBER",
    "body": "@pirapira Can you please list all these other issues as tasks for this issue and close the others, or do you think that each issues is a substantial amount of work?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/253512778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/253578925",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-253578925",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 253578925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU3ODkyNQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:19:40Z",
    "updated_at": "2018-09-03T13:50:58Z",
    "author_association": "MEMBER",
    "body": "The main reason I opened separate issues is that each requires discussion if we want it or not, but if we are set to go over everything, here is a list.\r\n- [ ] exception on overflow in unsigned->signed conversion\r\n- [ ] exception on overflow in signed->unsigned conversion\r\n- [ ] exception on overflow in size-decreasing implicit conversion\r\n- [ ] exception on overflow in addition of two signed numbers\r\n- [ ] exception on overflow in addition of two unsigned numbers\r\n- [ ] exception on underflow in subtraction of two signed numbers\r\n- [ ] exception on underflow in subtraction of two unsigned numbers\r\n- [ ] exception on overflow in multiplication of two signed numbers\r\n- [ ] exception on overflow in multiplication of two unsigned numbers\r\n- [ ] exception on overflow in shifts\r\n- [ ] exception on overflow in `++` on a signed number\r\n- [ ] exception on overflow in `++` on an unsigned number\r\n- [ ] exception on underflow in `--` on a signed number\r\n- [ ] exception on underflow in `--` on an unsigned number\r\n- [ ] exception on overflow in `+=`\r\n- [ ] exception on overflow in `-=`\r\n- [ ] exception on overflow in `*=`\r\n- [ ] exception on overflow in `/=`\r\n- [ ] make sure no optimizations are relying on `(a + b - b == a)`; lest they remove overflow exceptions\r\n- [x] compiler error on an out-of-range constant expression when the constant expression is interpreted into a type (`uint x = -1`)\r\n- [ ] exception on overflow in `INT_MIN/-1` #1091 \r\n- [ ] exponentiation",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/253578925/reactions",
      "total_count": 45,
      "+1": 33,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 7,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268388495",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-268388495",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 268388495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODM4ODQ5NQ==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-20T23:23:05Z",
    "updated_at": "2016-12-20T23:23:05Z",
    "author_association": "MEMBER",
    "body": "This is labelled \"soon\" and how soon will this be? :)  Does the long checklist need to be implemented at once, or can it be done iteratively?\r\nImplementing some of them can already provide early safety/ROI imo, like:\r\n- [ ] exception on overflow in addition of two unsigned numbers \r\n- [ ] exception on underflow in subtraction of two unsigned numbers",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268388495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268390274",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-268390274",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 268390274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODM5MDI3NA==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-20T23:33:16Z",
    "updated_at": "2016-12-20T23:39:26Z",
    "author_association": "MEMBER",
    "body": "@pirapira In your checklist, `exception on overflow in /=` is duplicated.  I think for one of them you mean `exception on underflow in -=`.\r\n\r\nAlso, how about overflow of INT_MIN/-1 ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268390274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268475271",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-268475271",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 268475271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODQ3NTI3MQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-21T09:22:39Z",
    "updated_at": "2016-12-21T09:22:39Z",
    "author_association": "MEMBER",
    "body": "@ethers Thank you.  I fixed the checklist above.\r\n\r\nThese overflow checkings are breaking changes, and for some reasons, Solidity release `0.5.0` will be the next one that can contain breaking changes.  I would support removing this rule (until we get to 1.0.0).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/268475271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312382018",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-312382018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 312382018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM4MjAxOA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T22:00:04Z",
    "updated_at": "2017-06-30T22:00:35Z",
    "author_association": "MEMBER",
    "body": "If Solidity doesn't already do this, a line item in the TODO list should be added for truncation during assignment.\r\n```\r\nuint16 a = 2^15;\r\nuint8 b = a;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312382018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312391066",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-312391066",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 312391066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM5MTA2Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T23:07:08Z",
    "updated_at": "2017-06-30T23:07:08Z",
    "author_association": "MEMBER",
    "body": "@MicahZoltu not sure what compiler version you are using, but that should not compile.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312391066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312391409",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-312391409",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 312391409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM5MTQwOQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T23:10:28Z",
    "updated_at": "2017-06-30T23:10:28Z",
    "author_association": "MEMBER",
    "body": "I didn't test it, so if you say its already handled then I trust that it is.  I assume the compiler will give me an error even if I use `var b = 0; b = a;` as well since `b` will be uint8 which can't hold a uint16 without a cast?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312391409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312392051",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-312392051",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 312392051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM5MjA1MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T23:16:33Z",
    "updated_at": "2017-06-30T23:17:47Z",
    "author_association": "MEMBER",
    "body": "Different int types can only be assigned using explicit conversion. As of the next release the int size inferred at `var` assignment will also be displayed to the user.\r\n\r\n```\r\n796.sol:5:1: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.\r\nvar b = 0;\r\n^-------^\r\n796.sol:6:5: Error: Type uint16 is not implicitly convertible to expected type uint8.\r\nb = a;\r\n    ^\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/312392051/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383060269",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383060269",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383060269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA2MDI2OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T10:52:24Z",
    "updated_at": "2018-04-20T10:52:24Z",
    "author_association": "MEMBER",
    "body": "> For the EVM I think it would need extra opcodes as overflowing math is still useful. \r\n\r\nHow about having a modifier area for unchecked arithmetics:\r\n```\r\nfunction f(uint a, uint b) returns (uint c) {\r\n  uncheckedmath {\r\n    c := a - b;\r\n  }\r\n}\r\n```\r\n\r\nThen again it can be accomplished with inline assembly if it is needed.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383060269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383065027",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383065027",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383065027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA2NTAyNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T11:15:37Z",
    "updated_at": "2018-04-20T11:15:37Z",
    "author_association": "MEMBER",
    "body": "I am really torn about what should be the default. I don't think that we should force the user to resort to inline assembly for the non-default case, though, since it makes complex crypto operations much less readable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383065027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066171",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383066171",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383066171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA2NjE3MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T11:21:21Z",
    "updated_at": "2018-04-20T11:21:21Z",
    "author_association": "MEMBER",
    "body": "I think it may be good to have overflow checks on by default, except in an unchecked area, because then the SMT checker could also ignore those blocks and just assume their values can be the entire range after the block, requiring the user to insert `require`/`assert` statements after.\r\n\r\nIn general user code is about high level logic where they do not expect overflows and then there are specific blocks of code which do expect it, but I think that is the minority and hence it makes sense to turn it on by default.\r\n\r\nWe could also verify this assumption by checking the user code we already have imported as part of the test suite.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066172",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383066172",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383066172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA2NjE3Mg==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T11:21:22Z",
    "updated_at": "2018-04-20T11:21:22Z",
    "author_association": "MEMBER",
    "body": "One way to get the intention of the programmer is to introduce types for numbers meant as `wei`, `seconds (duration)` `seconds (UNIX time)`...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066320",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383066320",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383066320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA2NjMyMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T11:22:11Z",
    "updated_at": "2018-04-20T11:22:11Z",
    "author_association": "MEMBER",
    "body": "> One way to get the intention of the programmer is to introduce types for numbers meant as wei, seconds (duration) seconds (UNIX time)...\r\n\r\nFor that I'd suggest to have a look at Vyper. It also is a good (perhaps complementary) solution.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383066320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383071292",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-383071292",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 383071292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA3MTI5Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T11:46:34Z",
    "updated_at": "2018-04-20T11:46:34Z",
    "author_association": "MEMBER",
    "body": "@axic yes, an unchecked region where also the SMT checker is disabled is certainly a good idea. Whether we can enable runtime checks by default in the non-unchecked areas should also depend on an assessment about how well the optimizer can handle such cases, and perhaps an improvement in that area.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/383071292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384654412",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-384654412",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 384654412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY1NDQxMg==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:09:06Z",
    "updated_at": "2018-04-26T14:09:06Z",
    "author_association": "NONE",
    "body": "The recently discovered overflow on batchTransfer in some ERC20 contracts is a good example of the type of issue that could be avoided if this is implemented.  \r\n\r\nhttps://medium.com/@peckshield/alert-new-batchoverflow-bug-in-multiple-erc20-smart-contracts-cve-2018-10299-511067db6536",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384654412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384661933",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-384661933",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 384661933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY2MTkzMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:30:37Z",
    "updated_at": "2018-04-26T14:32:00Z",
    "author_association": "MEMBER",
    "body": "For the syntax (mentioned in https://github.com/ethereum/solidity/issues/796#issuecomment-383060269) I propose:\r\n```\r\nunchecked \"overflow\" {\r\n  a = b + c;\r\n}\r\n```\r\n\r\nIt follows the same syntax as not-so-well-known syntax of the assembly keyword: `assembly \"evmasm\" {}`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384661933/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384700392",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-384700392",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 384700392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDcwMDM5Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T16:14:10Z",
    "updated_at": "2018-04-26T16:14:10Z",
    "author_association": "MEMBER",
    "body": "@axic yep, exactly my thought, that allows us to introduce other checks in the same way later.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384700392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384702684",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-384702684",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 384702684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDcwMjY4NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T16:21:16Z",
    "updated_at": "2018-04-26T16:21:16Z",
    "author_association": "MEMBER",
    "body": "> that allows us to introduce other checks in the same way later.\r\n\r\nThat was my motivation :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384702684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384722564",
    "html_url": "https://github.com/ethereum/solidity/issues/796#issuecomment-384722564",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/796",
    "id": 384722564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDcyMjU2NA==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T17:25:32Z",
    "updated_at": "2018-04-26T17:33:06Z",
    "author_association": "MEMBER",
    "body": "@axic what about making the current math operators safe and adding new operators for non-safe math\r\n```\r\nc = a + b // safe\r\nc = a %+ b // non-safe\r\n```\r\npick whatever symbol works, i chose `%+` to imply modular arithmetic\r\n\r\nEdit:\r\nI guess this would not handle the conversion cases (e.g. signed->unsigned)\r\nAnd the generic check-modifying block opens up interesting possibilities",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/384722564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
