{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10918",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10918/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10918/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10918/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10918",
  "id": 804467807,
  "node_id": "MDU6SXNzdWU4MDQ0Njc4MDc=",
  "number": 10918,
  "title": "[Sol->Yul] Invalid code generation due to function type input argument in constructor",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-02-09T11:32:32Z",
  "updated_at": "2021-02-15T13:59:02Z",
  "closed_at": "2021-02-15T13:59:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of information requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n\t- [Solidity chat](https://gitter.im/ethereum/solidity)\r\n\t- [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported.\r\n- The issue should be reproducible with the latest solidity version; however, this isn't a hard requirement and being reproducible with an older version is sufficient.\r\n-->\r\n\r\n## Description\r\n\r\n<!--Please shortly describe the bug you have found, and what you expect instead.-->\r\n\r\n```\r\ncontract D {\r\n  constructor(function() external returns (uint)) {}\r\n}\r\n```\r\n\r\nresults in following Yul code\r\n\r\n```\r\nInternal compiler error during compilation:\r\n/solidity/libsolidity/codegen/ir/IRGenerator.cpp(64): Throw in function std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > solidity::frontend::IRGenerator::run(const solidity::frontend::ContractDefinition&, const std::map<const solidity::frontend::ContractDefinition*, const std::basic_string_view<char> >&)\r\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: \r\nobject \"D_11\" {\r\n    code {\r\n        mstore(64, 128)\r\n        if callvalue() { revert(0, 0) }\r\n\r\n        let _1 := copy_arguments_for_constructor_10_object_D_11()\r\n        constructor_D_11(_1)\r\n\r\n        codecopy(0, dataoffset(\"D_11_deployed\"), datasize(\"D_11_deployed\"))\r\n\r\n        return(0, datasize(\"D_11_deployed\"))\r\n\r\n        function abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(offset, end) -> fun {\r\n            fun := mload(offset)\r\n            validator_revert_t_function_external_nonpayable$__$returns$_t_uint256_$(fun)\r\n        }\r\n\r\n        function abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory_onStack(offset, end) -> addr, function_selector {\r\n            addr, function_selector := split_external_function_id(abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(offset, end))\r\n        }\r\n\r\n        function abi_decode_tuple_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(headStart, dataEnd) -> value0, value1 {\r\n            if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\r\n\r\n            {\r\n\r\n                let offset := 0\r\n\r\n                value0, value1 := abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory_onStack(add(headStart, offset), dataEnd)\r\n            }\r\n\r\n        }\r\n\r\n        function allocate_memory(size) -> memPtr {\r\n            memPtr := allocate_unbounded()\r\n            finalize_allocation(memPtr, size)\r\n        }\r\n\r\n        function allocate_unbounded() -> memPtr {\r\n            memPtr := mload(64)\r\n        }\r\n\r\n        function cleanup_t_bytes24(value) -> cleaned {\r\n            cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000)\r\n        }\r\n\r\n        function cleanup_t_function_external_nonpayable$__$returns$_t_uint256_$(value) -> cleaned {\r\n            cleaned := cleanup_t_bytes24(value)\r\n        }\r\n\r\n        function constructor_D_11(vloc__6_address, vloc__6_functionSelector) {\r\n\r\n        }\r\n\r\n        function copy_arguments_for_constructor_10_object_D_11() -> ret_param_0 {\r\n            let programSize := datasize(\"D_11\")\r\n            let argSize := sub(codesize(), programSize)\r\n\r\n            let memoryDataOffset := allocate_memory(argSize)\r\n            codecopy(memoryDataOffset, programSize, argSize)\r\n\r\n            ret_param_0 := abi_decode_tuple_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(memoryDataOffset, add(memoryDataOffset, argSize))\r\n        }\r\n\r\n        function finalize_allocation(memPtr, size) {\r\n            let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\r\n            // protect against overflow\r\n            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\r\n            mstore(64, newFreePtr)\r\n        }\r\n\r\n        function panic_error_0x41() {\r\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\r\n            mstore(4, 0x41)\r\n            revert(0, 0x24)\r\n        }\r\n\r\n        function round_up_to_mul_of_32(value) -> result {\r\n            result := and(add(value, 31), not(31))\r\n        }\r\n\r\n        function shift_right_32_unsigned(value) -> newValue {\r\n            newValue :=\r\n\r\n            shr(32, value)\r\n\r\n        }\r\n\r\n        function shift_right_64_unsigned(value) -> newValue {\r\n            newValue :=\r\n\r\n            shr(64, value)\r\n\r\n        }\r\n\r\n        function split_external_function_id(combined) -> addr, selector {\r\n            combined := shift_right_64_unsigned(combined)\r\n            selector := and(combined, 0xffffffff)\r\n            addr := shift_right_32_unsigned(combined)\r\n        }\r\n\r\n        function validator_revert_t_function_external_nonpayable$__$returns$_t_uint256_$(value) {\r\n            if iszero(eq(value, cleanup_t_function_external_nonpayable$__$returns$_t_uint256_$(value))) { revert(0, 0) }\r\n        }\r\n\r\n    }\r\n    object \"D_11_deployed\" {\r\n        code {\r\n            mstore(64, 128)\r\n\r\n            if iszero(lt(calldatasize(), 4))\r\n            {\r\n                let selector := shift_right_224_unsigned(calldataload(0))\r\n                switch selector\r\n\r\n                default {}\r\n            }\r\n            if iszero(calldatasize()) {  }\r\n            revert(0, 0)\r\n\r\n            function shift_right_224_unsigned(value) -> newValue {\r\n                newValue :=\r\n\r\n                shr(224, value)\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nInvalid IR generated:\r\nError: Function \"constructor_D_11\" expects 2 arguments but got 1.\r\n\r\nError: Variable count of \"ret_param_0\" does not match number of values (1 vs. 2)\r\n\r\nWarning: \"switch\" statement with only a default case.\r\n\r\n\r\n\r\n[solidity::util::tag_comment*] = \r\nobject \"D_11\" {\r\n    code {\r\n        mstore(64, 128)\r\n        if callvalue() { revert(0, 0) }\r\n\r\n        let _1 := copy_arguments_for_constructor_10_object_D_11()\r\n        constructor_D_11(_1)\r\n\r\n        codecopy(0, dataoffset(\"D_11_deployed\"), datasize(\"D_11_deployed\"))\r\n\r\n        return(0, datasize(\"D_11_deployed\"))\r\n\r\n        function abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(offset, end) -> fun {\r\n            fun := mload(offset)\r\n            validator_revert_t_function_external_nonpayable$__$returns$_t_uint256_$(fun)\r\n        }\r\n\r\n        function abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory_onStack(offset, end) -> addr, function_selector {\r\n            addr, function_selector := split_external_function_id(abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(offset, end))\r\n        }\r\n\r\n        function abi_decode_tuple_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(headStart, dataEnd) -> value0, value1 {\r\n            if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\r\n\r\n            {\r\n\r\n                let offset := 0\r\n\r\n                value0, value1 := abi_decode_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory_onStack(add(headStart, offset), dataEnd)\r\n            }\r\n\r\n        }\r\n\r\n        function allocate_memory(size) -> memPtr {\r\n            memPtr := allocate_unbounded()\r\n            finalize_allocation(memPtr, size)\r\n        }\r\n\r\n        function allocate_unbounded() -> memPtr {\r\n            memPtr := mload(64)\r\n        }\r\n\r\n        function cleanup_t_bytes24(value) -> cleaned {\r\n            cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000)\r\n        }\r\n\r\n        function cleanup_t_function_external_nonpayable$__$returns$_t_uint256_$(value) -> cleaned {\r\n            cleaned := cleanup_t_bytes24(value)\r\n        }\r\n\r\n        function constructor_D_11(vloc__6_address, vloc__6_functionSelector) {\r\n\r\n        }\r\n\r\n        function copy_arguments_for_constructor_10_object_D_11() -> ret_param_0 {\r\n            let programSize := datasize(\"D_11\")\r\n            let argSize := sub(codesize(), programSize)\r\n\r\n            let memoryDataOffset := allocate_memory(argSize)\r\n            codecopy(memoryDataOffset, programSize, argSize)\r\n\r\n            ret_param_0 := abi_decode_tuple_t_function_external_nonpayable$__$returns$_t_uint256_$_fromMemory(memoryDataOffset, add(memoryDataOffset, argSize))\r\n        }\r\n\r\n        function finalize_allocation(memPtr, size) {\r\n            let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\r\n            // protect against overflow\r\n            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\r\n            mstore(64, newFreePtr)\r\n        }\r\n\r\n        function panic_error_0x41() {\r\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\r\n            mstore(4, 0x41)\r\n            revert(0, 0x24)\r\n        }\r\n\r\n        function round_up_to_mul_of_32(value) -> result {\r\n            result := and(add(value, 31), not(31))\r\n        }\r\n\r\n        function shift_right_32_unsigned(value) -> newValue {\r\n            newValue :=\r\n\r\n            shr(32, value)\r\n\r\n        }\r\n\r\n        function shift_right_64_unsigned(value) -> newValue {\r\n            newValue :=\r\n\r\n            shr(64, value)\r\n\r\n        }\r\n\r\n        function split_external_function_id(combined) -> addr, selector {\r\n            combined := shift_right_64_unsigned(combined)\r\n            selector := and(combined, 0xffffffff)\r\n            addr := shift_right_32_unsigned(combined)\r\n        }\r\n\r\n        function validator_revert_t_function_external_nonpayable$__$returns$_t_uint256_$(value) {\r\n            if iszero(eq(value, cleanup_t_function_external_nonpayable$__$returns$_t_uint256_$(value))) { revert(0, 0) }\r\n        }\r\n\r\n    }\r\n    object \"D_11_deployed\" {\r\n        code {\r\n            mstore(64, 128)\r\n\r\n            if iszero(lt(calldatasize(), 4))\r\n            {\r\n                let selector := shift_right_224_unsigned(calldataload(0))\r\n                switch selector\r\n\r\n                default {}\r\n            }\r\n            if iszero(calldatasize()) {  }\r\n            revert(0, 0)\r\n\r\n            function shift_right_224_unsigned(value) -> newValue {\r\n                newValue :=\r\n\r\n                shr(224, value)\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nInvalid IR generated:\r\nError: Function \"constructor_D_11\" expects 2 arguments but got 1.\r\n\r\nError: Variable count of \"ret_param_0\" does not match number of values (1 vs. 2)\r\n\r\nWarning: \"switch\" statement with only a default case.\r\n```\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10918/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10918/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775882851",
    "html_url": "https://github.com/ethereum/solidity/issues/10918#issuecomment-775882851",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10918",
    "id": 775882851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTg4Mjg1MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T11:51:13Z",
    "updated_at": "2021-02-09T11:51:13Z",
    "author_association": "MEMBER",
    "body": "Problem is this call on the top: `        constructor_D_11(_1)`\r\n\r\nIt is defined as\r\n```\r\n        function constructor_D_11(vloc__6_address, vloc__6_functionSelector) {\r\n\r\n        }\r\n```\r\n\r\nProbably it doesn't handle tuples properly, given function selector is two stack items / two vairables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/775882851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
