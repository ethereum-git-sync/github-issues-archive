{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14467",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14467/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14467/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14467/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14467",
  "id": 1836198617,
  "node_id": "I_kwDOAm_5kc5tcirZ",
  "number": 14467,
  "title": "Enable \"safe\" call a function on arbitrary address.",
  "user": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4726043980,
      "node_id": "LA_kwDOAm_5kc8AAAABGbG1TA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/feature",
      "name": "feature",
      "color": "fbca02",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-04T07:12:36Z",
  "updated_at": "2023-08-04T15:05:59Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nFix the try catch pattern.\r\n\r\n## Motivation\r\n\r\nThere are many ways to perform an evm call and decode the result:\r\n\r\n#### simple call\r\n```solidity\r\naddress owner = IERC5313(target).owner()\r\n// do stuff with owner\r\n```\r\n\r\n#### try catch\r\n```solidity\r\ntry IERC5313(target).owner() returns (address owner) {\r\n    // do stuff with owner\r\n} catch {\r\n    // process error\r\n}\r\n```\r\n\r\n#### low level call\r\n```solidity\r\n(bool success, bytes memory returndata) = target.staticcall(abi.encodeCall(IERC5313.owner, ()));\r\nif (success & returndata.length >= 0x20) {\r\n    address owner = abi.decode(returndata, (address));\r\n    // do stuff with owner\r\n} else {\r\n    // process error\r\n}\r\n```\r\n\r\n**None of them is safe to call, is you want to make sure that the operation does not revert and that errors can be catched properly!**\r\n\r\n- Simple call will revert is anything wrong happens, that is ok.\r\n- Try catch will revert if\r\n  - the target has no code: that is something we can check before doing the try catch. Its a bit painfull, but its ok\r\n  - the target does not revert, but the returned data are not long enough for doing `abi.decode`. This is bad\r\n- Low level call doesn't \"contain\" the return data, and is vulnerable to the \"returnbomb\" attack.\r\n\r\nSaid otherwize, if I want to look for an `owner()` in a way that will never revert, regardless of the target address, we have no choice but to go heavily into assembly. That is a simple usecase that solidity does not cover.\r\n\r\n\r\n## Specification\r\n\r\nThere are multiple possible solutions:\r\n- change the \"try catch\" behavior so that \"not enough return data for decode\" can be catched.\r\n\r\n- change the `call` and `staticcall` operation by adding a new parameter that is the maximum return data, so that the return bomb is contained.\r\n```solidity\r\ntarget.staticcall{returnsize: 0x20}(abi.encodeCall(IERC5313.owner, ()));\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nTBD",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14467/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14467/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
