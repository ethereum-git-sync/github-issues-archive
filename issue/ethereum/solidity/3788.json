{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3788",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3788/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3788/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3788/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3788",
  "id": 308730077,
  "node_id": "MDU6SXNzdWUzMDg3MzAwNzc=",
  "number": 3788,
  "title": "Unexpected compilation differences leading to gas cost differences",
  "user": {
    "login": "wbt",
    "id": 563406,
    "node_id": "MDQ6VXNlcjU2MzQwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbt",
    "html_url": "https://github.com/wbt",
    "followers_url": "https://api.github.com/users/wbt/followers",
    "following_url": "https://api.github.com/users/wbt/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
    "organizations_url": "https://api.github.com/users/wbt/orgs",
    "repos_url": "https://api.github.com/users/wbt/repos",
    "events_url": "https://api.github.com/users/wbt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-03-26T20:49:33Z",
  "updated_at": "2018-03-26T22:55:16Z",
  "closed_at": "2018-03-26T22:54:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Summary\r\n----\r\nMaking some small changes to a contract changes gas usage in surprising ways.  This Issue gives code/steps to reproduce and identifies those surprising ways, identified by letters, below. \r\n\r\nCode to reproduce\r\n----\r\nI have the following files in a Truffle project:\r\n\r\n`contracts/Contract.sol`: \r\n\r\n    pragma solidity ^0.4.0;\r\n    contract Counter {\r\n        int public value; //starts at 0 by default\r\n\r\n        function increment() public {\r\n            value = value+1;\r\n        }\r\n\r\n        function decrement() public {\r\n            value = value-1;\r\n        }\r\n\r\n        function reset() public {\r\n            value = 0;\r\n        }\r\n\r\n    }\r\n\r\n`migrations/2_deploy_contracts.js`\r\n\r\n    var Counter = artifacts.require(\"./Counter.sol\");\r\n\r\n    module.exports = function(deployer) {\r\n        var counterInstance;\r\n        deployer.deploy(Counter)\r\n        .then(function () {\r\n            return Counter.deployed();\r\n        }).then(function (data) {\r\n            counterInstance = data;\r\n            return counterInstance.value.call();\r\n        }).then(function (data) {\r\n            console.log(\"Counter value at start is \"+data);\r\n            return counterInstance.increment();\r\n        }).then(function (data) {\r\n            console.log(\"Increment #1 used \"+data.receipt.gasUsed+\" gas.\");\r\n            return counterInstance.increment();\r\n        }).then(function (data) {\r\n            console.log(\"Increment #2 used \"+data.receipt.gasUsed+\" gas.\");\r\n            return counterInstance.increment();\r\n        }).then(function (data) {\r\n            console.log(\"Increment #3 used \"+data.receipt.gasUsed+\" gas.\");\r\n            return counterInstance.increment();\r\n        }).then(function (data) {\r\n            console.log(\"Increment #4 used \"+data.receipt.gasUsed+\" gas.\");\r\n            return counterInstance.increment();\r\n        }).then(function (data) {\r\n            console.log(\"Increment #5 used \"+data.receipt.gasUsed+\" gas.\");\r\n            return counterInstance.value.call();\r\n        }).then(function (data) {\r\n            console.log(\"Counter value at end is \"+data);\r\n        }).catch(function(err) {\r\n            console.log(err.message);\r\n        });\r\n    };\r\n\r\nFor a simpler example, I am not using the Migrations contract nor any first migration.\r\n\r\nI am connecting to Ganache, compiling and running this with `truffle migrate --reset`.\r\n\r\nUnexpected Results\r\n----\r\n**A**: The first call to increment() used 41664 gas and subsequent calls used 26664 gas each.  Unexpected point **A** is that these are different amounts; the expected behavior is that they would cost the same gas.  This one may be just a result of the limits of my own present understanding.\r\n\r\n**B**: When I comment out the decrement() function, all calls to increment() cost 2 gas less.  I'd expect the gas for a call to increment() to not depend on whether or not a decrement() function exists (though I'd expect *contract deployment* gas costs to be lower for the version with less code).  Adding an additional simple function, such as `decrement2` which subtracts 2 from `value`, also raises the gas price of calling `increment()` by 2.\r\n\r\n**C**: When I comment out the `reset()` function, the gas price for calls to `increment()` does not change.  This is only unexpected because of the observation in **B.** If **B** is explained by the fact that having an extra function requires an extra step of iteration through contract code to find the right function when executing `increment,` `reset` should have the same effect as `decrement` and the inconsistency between these two is surprising point **C**.\r\n\r\n**D**: When I change the name `reset()` to `resot()` or `resat()` (note that both are the same length as `reset()`), the gas price for `increment()` goes up by 2 and the `resot()` function behaves like `decrement()`.  The fact that this tiny tweak to the function name, with no other change in the function contents, changes whether or not this function's presence affects another function's gas cost, is surprising point **D**.  (Is `reset` a reserved word, and if so, is that documented somewhere?) \r\n\r\nAll of the above observations hold if I swap the positions of `reset` and `decrement`, so I don't think there's anything special about the last position in the contract definition which is causing this.  \r\n\r\n  \r\n\r\n\r\n\r\n\r\nVersions:\r\n----\r\nOS: Windows 10 x64\r\nGanache v1.1.0-beta.0, on localhost:7545\r\nTruffle: v4.0.4 (core: 4.0.4)\r\nSolidity: v0.4.18 (solc-js) (specifically, `0.4.18+commit.9cf6e910.Emscripten.clang`)\r\n\r\n",
  "closed_by": {
    "login": "wbt",
    "id": 563406,
    "node_id": "MDQ6VXNlcjU2MzQwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbt",
    "html_url": "https://github.com/wbt",
    "followers_url": "https://api.github.com/users/wbt/followers",
    "following_url": "https://api.github.com/users/wbt/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
    "organizations_url": "https://api.github.com/users/wbt/orgs",
    "repos_url": "https://api.github.com/users/wbt/repos",
    "events_url": "https://api.github.com/users/wbt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3788/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3788/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/376311052",
    "html_url": "https://github.com/ethereum/solidity/issues/3788#issuecomment-376311052",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3788",
    "id": 376311052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjMxMTA1Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T21:04:11Z",
    "updated_at": "2018-03-26T21:04:11Z",
    "author_association": "MEMBER",
    "body": "> A: The first call to increment() used 41664 gas and subsequent calls used 26664 gas each. \r\n\r\nThis first call changes `value` from 0 to non-zero. Internally that is done using the `sstore` opcode, which has this behaviour.\r\n\r\n> B: When I comment out the decrement() function, all calls to increment() cost 2 gas less.\r\n\r\nThis is due to the dispatcher function being an if-else jungle. #1289 is an issue to document this.\r\n\r\n> C: When I comment out the reset() function, the gas price for calls to increment() does not change.\r\n\r\nThis is because the order of function in the dispatcher is determined by the function signature (the hash of the function + its parameters). See the previous point.\r\n\r\n> D: When I change the name reset() to resot() or resat()\r\n\r\nIt is due to the same issue.\r\n\r\nI think B, C and D should be explained by documenting what #1289 mentions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/376311052/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/376337914",
    "html_url": "https://github.com/ethereum/solidity/issues/3788#issuecomment-376337914",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3788",
    "id": 376337914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjMzNzkxNA==",
    "user": {
      "login": "wbt",
      "id": 563406,
      "node_id": "MDQ6VXNlcjU2MzQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbt",
      "html_url": "https://github.com/wbt",
      "followers_url": "https://api.github.com/users/wbt/followers",
      "following_url": "https://api.github.com/users/wbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
      "organizations_url": "https://api.github.com/users/wbt/orgs",
      "repos_url": "https://api.github.com/users/wbt/repos",
      "events_url": "https://api.github.com/users/wbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T22:54:49Z",
    "updated_at": "2018-03-26T22:55:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!  This is helpful and the underlying reasons were not intuitive!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/376337914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
