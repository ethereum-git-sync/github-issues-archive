{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9133/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9133/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9133/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9133",
  "id": 631190698,
  "node_id": "MDU6SXNzdWU2MzExOTA2OTg=",
  "number": 9133,
  "title": "Incomplete sourcemaps for constructors when immutables are used",
  "user": {
    "login": "alcuadrado",
    "id": 176499,
    "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alcuadrado",
    "html_url": "https://github.com/alcuadrado",
    "followers_url": "https://api.github.com/users/alcuadrado/followers",
    "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
    "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
    "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
    "repos_url": "https://api.github.com/users/alcuadrado/repos",
    "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "christianparpart",
    "id": 56763,
    "node_id": "MDQ6VXNlcjU2NzYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/christianparpart",
    "html_url": "https://github.com/christianparpart",
    "followers_url": "https://api.github.com/users/christianparpart/followers",
    "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
    "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
    "organizations_url": "https://api.github.com/users/christianparpart/orgs",
    "repos_url": "https://api.github.com/users/christianparpart/repos",
    "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
    "received_events_url": "https://api.github.com/users/christianparpart/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-06-04T22:39:41Z",
  "updated_at": "2021-10-12T16:09:07Z",
  "closed_at": "2021-10-12T16:09:07Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I think there's a bug that makes solc output fewer source maps than instructions. Not that it's emitting sourcemaps that don't point to a file, but there's just fewer source maps than instructions.\r\n\r\nI believe this is related to `immutable`, but I can't confirm it.\r\n\r\n## Environment\r\n\r\n- Compiler version: At least `soljson-v0.6.8+commit.0bbfe453.js` and `soljson-v0.6.9+commit.3e3065ac.js`\r\n- Target EVM version (as per compiler settings): latest\r\n- Framework/IDE (e.g. Truffle or Remix): Not relevant\r\n- EVM execution environment / backend / blockchain client: Not relevant\r\n- Operating system: Not relevant\r\n\r\n## Steps to Reproduce\r\n\r\nCompile this without optimizations using `soljson-v0.6.9+commit.3e3065ac.js`.\r\n\r\n```\r\npragma solidity ^0.6.0;\r\n\r\ncontract D {\r\n  uint immutable x = 11;\r\n  \r\n  function get2X () public returns (uint) {\r\n    return 2*x;\r\n  }\r\n  \r\n  function fail(uint arg) public returns (uint) {\r\n    revert(\"D failed\");\r\n    return x;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract C {\r\n\r\n  function test() public {\r\n    D d = new D();\r\n    d.fail(0);\r\n  }\r\n\r\n}\r\n```\r\n\r\nThe output you get for `D`'s deployment bytecode is:\r\n\r\n```json\r\n          \"bytecode\": {\r\n            \"linkReferences\": {},\r\n            \"object\": \"60a0604052600b60809081525034801561001857600080fd5b5060805161016c61003260003980609f525061016c6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309ba654b1461003b578063132e4f3c14610059575b600080fd5b61004361009b565b6040518082815260200191505060405180910390f35b6100856004803603602081101561006f57600080fd5b81019080803590602001909291905050506100c6565b6040518082815260200191505060405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000600202905090565b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f44206661696c656400000000000000000000000000000000000000000000000081525060200191505060405180910390fdfea2646970667358221220f2632f8405529f2e4d418b0e4668ef248857cdbe66ec75300b4e2857dab9ddd664736f6c63430006090033\",\r\n            \"opcodes\": \"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0xB PUSH1 0x80 SWAP1 DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x16C PUSH2 0x32 PUSH1 0x0 CODECOPY DUP1 PUSH1 0x9F MSTORE POP PUSH2 0x16C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BA654B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x132E4F3C EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x44206661696C6564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH4 0x2F840552 SWAP16 0x2E 0x4D COINBASE DUP12 0xE CHAINID PUSH9 0xEF248857CDBE66EC75 ADDRESS SIGNEXTEND 0x4E 0x28 JUMPI 0xDA 0xB9 0xDD 0xD6 PUSH5 0x736F6C6343 STOP MOD MULMOD STOP CALLER \",\r\n            \"sourceMap\": \"25:202:0:-:0;;;59:2;40:21;;;;;25:202;;;;;;;;;;;;;;;;;;;\"\r\n          },\r\n```\r\n\r\nIt has 29 source maps, but there are 32 instructions, excluding the final `INVALID`.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9133/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9133/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639155328",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-639155328",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 639155328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTE1NTMyOA==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T22:42:34Z",
    "updated_at": "2020-06-04T23:42:42Z",
    "author_association": "MEMBER",
    "body": "Also, I was using the number of source maps to figure out where the actual code ends. Is there another way of doing this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639155328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639324836",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-639324836",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 639324836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTMyNDgzNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T08:03:51Z",
    "updated_at": "2020-06-05T08:03:51Z",
    "author_association": "MEMBER",
    "body": "I think your assessment is correct - the elements in the source maps refer to instructions, but the \"assign immutable\" pseudo-instruction translates to multiple instructions in the resulting bytecode. This is not too critical, because the source map at this point is usually empty anyway, but we should still fix it.\r\n\r\nYour way of finding out where the code ends seems to be pretty solid. You could combine it with a check that there is an invalid opcode right after the code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639324836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639326466",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-639326466",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 639326466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTMyNjQ2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T08:07:18Z",
    "updated_at": "2020-06-05T08:07:18Z",
    "author_association": "MEMBER",
    "body": "The `AssignImmutable` assembly item gets translated into multiple opcodes, also depending on how often the immutable was referred (Assembly.cpp:668). In AssemblyItem::computeSourceMapping we need to take this into account and just add as many `;` as we have opcodes generated from the AssignImmutable. The information about how many refereces we have needs to be retained for that, too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639326466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639525367",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-639525367",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 639525367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTUyNTM2Nw==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T14:18:31Z",
    "updated_at": "2020-06-05T14:18:31Z",
    "author_association": "MEMBER",
    "body": "> This is not too critical, because the source map at this point is usually empty anyway, but we should still fix it.\r\n\r\nCan `AssignImmutable` be inlined in the middle of the bytecode? If that's the case, sourcemaps are pointing to incorrectly sections of the code, right?\r\n\r\n> You could combine it with a check that there is an invalid opcode right after the code.\r\n\r\nI think I'll add this. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/639525367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642971933",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-642971933",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 642971933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjk3MTkzMw==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T22:58:34Z",
    "updated_at": "2020-06-11T22:58:34Z",
    "author_association": "MEMBER",
    "body": "> Can `AssignImmutable` be inlined in the middle of the bytecode? If that's the case, sourcemaps are pointing to incorrectly sections of the code, right?\r\n\r\nI think I can reply to this myself now:\r\n\r\n1. These unmapped instructions are right before the part of the bytecode that returns the runtime bytecode. Like that part, they would have been mapped to the entire constructor.\r\n2. This somewhat reduces the impact of the issue, because it's safe to assume that any unmapped instruction would have the same sourcemap as the latest mapped one.\r\n\r\nCan someone confirm this?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642971933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642987612",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-642987612",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 642987612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjk4NzYxMg==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T23:56:37Z",
    "updated_at": "2020-06-11T23:56:37Z",
    "author_association": "MEMBER",
    "body": "> 1. These unmapped instructions are right before the part of the bytecode that returns the runtime bytecode\r\n\r\nAlso, if this is correct, I think a workaround to figure out how many instructions there are is to initially decode as many instructions as the number of source maps. Then continue decoding until you see a `0xfe`/`Invalid Opcode`.\r\n\r\nWould this work? Can I be sure that no `0xfe` is emitted in that last unmapped part of the deployment bytecode?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/642987612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/643140052",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-643140052",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 643140052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzE0MDA1Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-12T08:16:16Z",
    "updated_at": "2020-06-12T08:16:16Z",
    "author_association": "MEMBER",
    "body": "You are right, the `AssignImmutable` section should be after any user-generated code and before the runtime bytecode is returned. Tracking `0xfe` should be reasonably safe.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/643140052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/643516047",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-643516047",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 643516047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzUxNjA0Nw==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-12T23:06:22Z",
    "updated_at": "2020-06-12T23:07:28Z",
    "author_association": "MEMBER",
    "body": "Thanks for your confirmation Chris.\r\n\r\n@iamdefinitelyahuman @nebojsa94 this is probably useful for you too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/643516047/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923993894",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-923993894",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 923993894,
    "node_id": "IC_kwDOAm_5kc43Ewcm",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T13:32:47Z",
    "updated_at": "2021-09-21T13:32:47Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/ethereum/solidity/pull/11908",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923993894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923996582",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-923996582",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 923996582,
    "node_id": "IC_kwDOAm_5kc43ExGm",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T13:35:53Z",
    "updated_at": "2021-09-21T13:35:53Z",
    "author_association": "MEMBER",
    "body": "Actually sorry, #11908 probably also was a problem here (especially in the initial example code), but we still need to fix it by adjusting how AssignImmutable is translated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923996582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923998519",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-923998519",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 923998519,
    "node_id": "IC_kwDOAm_5kc43Exk3",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T13:38:02Z",
    "updated_at": "2021-09-21T13:38:02Z",
    "author_association": "MEMBER",
    "body": "@christianparpart while you are at it, can you also update the documentation to state that \"verbatim\" counts as a single opcode with regards to source maps?\r\n\r\nMaybe we should try to fix this fully by changing source maps to byte offsets instead of opcodes, but that would be a breaking change....",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/923998519/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924002216",
    "html_url": "https://github.com/ethereum/solidity/issues/9133#issuecomment-924002216",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9133",
    "id": 924002216,
    "node_id": "IC_kwDOAm_5kc43Eyeo",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T13:42:14Z",
    "updated_at": "2021-09-21T13:42:31Z",
    "author_association": "MEMBER",
    "body": "The fix in `AssemblyItem::computeSourceMapping` should take `m_immutableOccurrences` into account when it encounters an `AssignImmutable`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/924002216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
