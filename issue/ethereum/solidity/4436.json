{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4436",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4436/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4436/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4436/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4436",
  "id": 338518940,
  "node_id": "MDU6SXNzdWUzMzg1MTg5NDA=",
  "number": 4436,
  "title": "Suggestion: Disallow tuple types with less than two components. Replace empty tuple type with explicit void type.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-07-05T10:36:04Z",
  "updated_at": "2020-05-07T19:05:13Z",
  "closed_at": "2020-05-07T19:05:12Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently we still have rather weird and somewhat inconsistent constructs in connection with tuples, e.g.\r\n``var () = g()``, ``(uint a,) = (1,)`` being an error, etc.\r\n\r\nThis can be worked around by continuing to remove ``var`` and disallowing constructs like ``(1,)``, but I think it may make sense to rethink tuple types in general.\r\n\r\nWhereas one-element tuples hardly occur \"naturally\" in the type system, especially after multi-var declarations and tuple assignments require equal numbers of components, zero element tuples are used as a ``void`` type at several places (which most of the time is only made comprehensible by an explicit comment in the code).\r\n\r\nI suggest to require tuple types to have at least two components by assertion in the ``TupleType`` constructor, to replace one-element tuple types by their component type and to introduce an explicit void type to replace empty tuples.\r\nI already had a look into the code and the required changes wouldn't be very invasive and seem to work well.\r\n\r\nI think it would improve readability and consistency in the type system in general.\r\n\r\nWhat do you think @chriseth @axic?",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4436/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4436/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/402699825",
    "html_url": "https://github.com/ethereum/solidity/issues/4436#issuecomment-402699825",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4436",
    "id": 402699825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjY5OTgyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T12:02:35Z",
    "updated_at": "2018-07-05T12:02:35Z",
    "author_association": "MEMBER",
    "body": "I am fine with removing the special case of `(1,)` and just disallowing empty components in tuple expressions (but not in left-hand-sides).\r\n\r\nAs far as disallowing tuple types of less than two components is concerned: I'm fine with disallowing to explicitly construct such tuples, but I think it is quite nicely handled for function calls:\r\n\r\nA function always returns a tuple. A one-component tuple is auto-converted to its only component by the type checker (with a special case about `(1,)` which would be removed), a zero-component tuple is also called \"void\". Note that parenthesized expressions are explicit in the AST, result in one-element tuples which are then assigned the type of their component by the type checker (i.e. they are only really visible as a syntactical component inside the AST, not in the type system).\r\n\r\nI think because of this handling, it is actually rather consistent inside the internal type system (void being the empty tuple type is consistent with functions returning nothing and also corresponds to the \"unit type\" available in many functional languages).\r\n\r\nAre you sure that the changes required are really so small?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/402699825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/402714728",
    "html_url": "https://github.com/ethereum/solidity/issues/4436#issuecomment-402714728",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4436",
    "id": 402714728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjcxNDcyOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T13:03:45Z",
    "updated_at": "2018-07-05T13:03:45Z",
    "author_association": "MEMBER",
    "body": "Well, the function return type initially is not a tuple, but just a vector of types. The type checker annotates function call types as tuple, unless there's only a single element, in which case that element is used. But there's never one-component tuples involved in all that.\r\n\r\nI think it would be consistent if every non-tuple type would at the same time be a tuple-type with one component (so there'd need to be some kind of tuple interface implemented by every \"non-tuple\" type announcing one component, namely itself, as well as by the \"real\" tuple type announcing more than one components or zero components (unless the void/unit type is made explicit)). That would match what I'd be used to from functional languages or logical type theory. I would imagine that this would be a rather nasty change to the code, though.\r\n\r\nSo I think either making \"one-component types\" actually **be** tuples themselves (which would be rather involved) would be consistent (then everything is a tuple) - or letting tuple types always be compound types with more than one component would be consistent (which would require an explicit void type).\r\n\r\nCurrently, there's a tuple type with a strange \"gap\" - one-component tuples never actually occur apart from the ``(1,)`` construct - I could assert ``_types.size() != 1`` in the TupleType constructor and it would only fail for these. Still conceptually there are one-component tuple types that are \"kind of\" the same as the type of their single component, but not really the same, and they are never actually used :).\r\n\r\nAnd the changes for requiring tuples to have at least two components are indeed rather small - I pushed a crude experimental version, if you want to have a look (https://github.com/ethereum/solidity/tree/tupleSuggestion).\r\n\r\nBut yeah - maybe it's only me who finds tuples at the moment to be a bit weird and I'm fine with just disallowing ``(1,)`` for now, but it may be worth thinking about this some more at some point!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/402714728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625440911",
    "html_url": "https://github.com/ethereum/solidity/issues/4436#issuecomment-625440911",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4436",
    "id": 625440911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQ0MDkxMQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T19:05:12Z",
    "updated_at": "2020-05-07T19:05:12Z",
    "author_association": "MEMBER",
    "body": "Yah... I don't think we need this anymore...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625440911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
