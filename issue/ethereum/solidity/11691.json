{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11691/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11691/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11691/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11691",
  "id": 952148088,
  "node_id": "MDU6SXNzdWU5NTIxNDgwODg=",
  "number": 11691,
  "title": "Feature Request: Combine nested structs in single storage slots",
  "user": {
    "login": "zemse",
    "id": 22412996,
    "node_id": "MDQ6VXNlcjIyNDEyOTk2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zemse",
    "html_url": "https://github.com/zemse",
    "followers_url": "https://api.github.com/users/zemse/followers",
    "following_url": "https://api.github.com/users/zemse/following{/other_user}",
    "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
    "organizations_url": "https://api.github.com/users/zemse/orgs",
    "repos_url": "https://api.github.com/users/zemse/repos",
    "events_url": "https://api.github.com/users/zemse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zemse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-07-24T21:05:56Z",
  "updated_at": "2023-03-28T12:05:07Z",
  "closed_at": "2023-03-28T12:05:07Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\n<!--\r\nPlease describe by example what problem you see in the current Solidity language\r\nand reason about it.\r\n-->\r\n\r\n```solidity\r\nstruct Number {\r\n    uint56 value;\r\n    uint8 shift;\r\n}\r\n\r\nstruct Slot0 {\r\n    Number val1;\r\n    Number val2;\r\n    Number val3;\r\n    Number val4;\r\n}\r\n\r\nstruct Slot1 {\r\n    uint64 val1;\r\n    uint64 val2;\r\n    uint64 val3;\r\n    uint64 val4;\r\n}\r\n\r\nSlot0 public slot0;\r\nSlot1 public slot1;\r\n\r\n// costs 4 SSTOREs\r\nfunction write0() public {\r\n    slot0 = Slot0(Number(1, 1), Number(1, 1), Number(1, 1), Number(1, 1));\r\n}\r\n\r\n// costs 1 SSTORE\r\nfunction write1() public {\r\n    slot1 = Slot1(1, 1, 1, 1);\r\n}\r\n```\r\n\r\n\r\n## Motivation\r\n\r\nAllowing fixed-length structs to behave as a `uint` type in the storage sense (like in this case `Number` as `uint64`) can be very helpful and simplify the code.\r\n\r\n## Specification\r\n\r\nSince Slot0 in total uses (8+56)x4 = 256 bits, it should use only one slot instead of 4.\r\n\r\n## Backwards Compatibility\r\n\r\n~Since there is no change in syntax is needed, just how the storage layout works this out, existing solidity code would also be successfully compiled.~\r\n\r\nThis is a backward-incompatible change to the storage layout. Some contracts using upgradable proxy patterns are affected.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11691/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11691/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886113371",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-886113371",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 886113371,
    "node_id": "IC_kwDOAm_5kc400QRb",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-24T21:28:13Z",
    "updated_at": "2021-07-24T21:28:33Z",
    "author_association": "MEMBER",
    "body": "This isn't really an optimiser feature, but a core feature how storage is laid out. Marking it an optimiser feature would mean storage layout changes whether the optimiser is turned on or not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886113371/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886125064",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-886125064",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 886125064,
    "node_id": "IC_kwDOAm_5kc400TII",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-24T23:54:16Z",
    "updated_at": "2021-07-24T23:58:09Z",
    "author_association": "MEMBER",
    "body": "> Since there is no change in syntax is needed, just how the storage layout works this out, existing solidity code would also be successfully compiled.\r\n\r\nThe fact that the contract still compiles does not make the change backwards-compatible if the behavior of the compiler changes. It's a backwards-incompatible change to the storage layout. Consider for example the case of someone using a proxy to make his contract upgradable. In the case you're presenting the location of `slot1` would shift and even the same exact source code compiled with a newer compiler having this feature would not be usable with that proxy.\r\n\r\nSo this at least needs a way to get the old behavior back. And I think that making the new behavior the default is an unnecessary complication. The change would be completely backwards-compatible if you had to explicitly request it. For example:\r\n\r\n```solidity\r\nstruct Slot0 {\r\n    Number packed val1;\r\n    Number packed val2;\r\n    Number packed val3;\r\n    Number packed val4;\r\n}\r\n```\r\nor\r\n```solidity\r\nstruct packed Slot0 {\r\n    Number val1;\r\n    Number val2;\r\n    Number val3;\r\n    Number val4;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886125064/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886841233",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-886841233",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 886841233,
    "node_id": "IC_kwDOAm_5kc403B-R",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T16:16:20Z",
    "updated_at": "2021-07-26T16:16:20Z",
    "author_association": "MEMBER",
    "body": "The problem is not only with the layout, it is also with how storage items are referenced. If you use `slot0.val2` in the original example, then that expression needs two stack slots to be represented: The slot number and the offset inside the slot. Structs only use a single stack slot, so this would have to be changed. So using `slot packed` on Slot0 as @cameel suggested is not enough, you also need to change the type of `Number`.\r\n\r\nMy recommendation is to first do user-defined value types #11531 and then introduce functions to access the members:\r\n```\r\ntype Number is uint64;\r\nfunction value(Number _n) pure returns (uint56) { return uint64(_n) & type(uint56).max; }\r\nfunction shift(Number _n) pure returns (uint8) { return (uint64(_n) >> 56) & type(uint8).max; }\r\n```\r\n\r\nThis could cause `Number` to be tightly packed inside structs. The only downside is that assignment needs its own function again, but this is how proponents of functional-style languages would want it anyway:\r\n\r\n```\r\nfunction NewNumber(uint56 value, uint8 shift) pure returns (Number) {\r\n  return Number(uint64(value) << 8 | uint64(shift));\r\n}\r\n\r\nslot0.val1 = NewNumber(value, shift);\r\n```\r\n\r\nIf combined with `using {value, shift} for Number;` at least accessing looks almost like member access:\r\n`n = slot0.number();`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/886841233/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1234857635",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-1234857635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 1234857635,
    "node_id": "IC_kwDOAm_5kc5Jmm6j",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T22:38:28Z",
    "updated_at": "2022-09-01T22:38:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this still considered now that there are user defined value types that pack in storage?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1234857635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105300",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-1476105300",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 1476105300,
    "node_id": "IC_kwDOAm_5kc5X-5RU",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-20T12:05:37Z",
    "updated_at": "2023-03-20T12:05:37Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1486750296",
    "html_url": "https://github.com/ethereum/solidity/issues/11691#issuecomment-1486750296",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11691",
    "id": 1486750296,
    "node_id": "IC_kwDOAm_5kc5YngJY",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-28T12:05:04Z",
    "updated_at": "2023-03-28T12:05:04Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1486750296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
