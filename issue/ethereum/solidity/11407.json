{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11407",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11407/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11407/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11407/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11407",
  "id": 894889889,
  "node_id": "MDU6SXNzdWU4OTQ4ODk4ODk=",
  "number": 11407,
  "title": "Allow specifying parameter name in public mappings",
  "user": {
    "login": "zemse",
    "id": 22412996,
    "node_id": "MDQ6VXNlcjIyNDEyOTk2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zemse",
    "html_url": "https://github.com/zemse",
    "followers_url": "https://api.github.com/users/zemse/followers",
    "following_url": "https://api.github.com/users/zemse/following{/other_user}",
    "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
    "organizations_url": "https://api.github.com/users/zemse/orgs",
    "repos_url": "https://api.github.com/users/zemse/repos",
    "events_url": "https://api.github.com/users/zemse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zemse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-05-19T00:46:04Z",
  "updated_at": "2022-09-26T21:29:10Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\n<!--\r\nPlease describe by example what problem you see in the current Solidity language\r\nand reason about it.\r\n-->\r\n\r\n```solidity\r\ncontract Temp {\r\n    mapping(address => uint256) public balanceOf;\r\n}\r\n\r\n// the above code produces the following ABI\r\n[\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '', // this is empty\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n```\r\n\r\nSince there is no param name, tools like typechain by default fill the param as `arg${i}`\r\n\r\n```ts\r\n// typescript\r\n// an example of typing generated by typechain ethers v5 target\r\nbalanceOf(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;\r\n```\r\n\r\nI understand it's not a big deal, but it'd be great to have a relevant param name like `userAddress` instead of `arg0` here. In cases where there are nested mappings (multiple inputs), parameter names can show up when hovered on the method, it can quickly help to understand which parameter is what.\r\n\r\n```solidity\r\n// solidity\r\nmapping(address => mapping(address => uint256)) public allowance;\r\n\r\n// typescript\r\n// generated typing\r\nallowance(arg0: string, arg1: string, overrides?: CallOverrides): Promise<BigNumber>;\r\n\r\n// would be great to instead have\r\nallowance(spender: string, owner: string, overrides?: CallOverrides): Promise<BigNumber>;\r\n// edit: I just noticed I wrote the above order incorrectly xD\r\n```\r\n\r\n## Motivation\r\n\r\n<!--\r\nIn this section you describe how you propose to address the problem you described earlier,\r\nincluding by giving one or more exemplary source code snippets for demonstration.\r\n-->\r\n\r\nIf solidity allows to somehow specify parameter names, through some syntax. For e.g.:\r\n\r\n```solidity\r\nmapping(address userAddress => uint256) public balanceOf;\r\n\r\n// can also specify name for output\r\nmapping(address userAddress => uint256 balance) public balanceOf;\r\n```\r\n\r\nThis syntax is very similar to other elements in solidity that take input parameters:\r\n\r\n```solidity\r\nevent Transfer(address, address, uint256);\r\nfunction balanceOf(address) external view returns (uint256);\r\n\r\n// with parameter names\r\nevent Transfer(address from, address to, uint256 value);\r\nfunction balanceOf(address userAddress) external view returns (uint256 balance);\r\n```\r\n\r\n## Specification\r\n\r\n<!--\r\nThe technical specification should describe the syntax and semantics of any new feature. The\r\nspecification should be detailed enough to allow any developer to implement the functionality.\r\n-->\r\n\r\nIn a mapping declaration, if there is a word between a data type and `=>` or `)`, then use that word as a name for that type.\r\n\r\n## Backwards Compatibility\r\n\r\n<!--\r\nAll language changes that introduce backwards incompatibilities must include a section describing\r\nthese incompatibilities and their severity.\r\n\r\nPlease describe how you propose to deal with these incompatibilities.\r\n-->\r\n\r\nThere is no backward compatibility as existing code will function the same. And adding parameters should not change bytecode as well, since it only fills the respective `name` parameters in the ABI.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11407/reactions",
    "total_count": 12,
    "+1": 12,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11407/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/845943069",
    "html_url": "https://github.com/ethereum/solidity/issues/11407#issuecomment-845943069",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11407",
    "id": 845943069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTk0MzA2OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T13:16:26Z",
    "updated_at": "2021-05-21T13:18:33Z",
    "author_association": "MEMBER",
    "body": "I think this is a good idea and do not see any syntactical issue yet.\r\n\r\nHowever, I wonder regarding strictness:\r\n1) Allow no names (backwards compatibility)\r\n2) Allow names in any location and assume empty name where unspecified\r\n3) If a name is present at one location, require if for all entires\r\n\r\nI guess we want to have 1) the very least in the short term, but since we allow unnamed parameters in functions, I do not see any reason to disallow it here. Likewise based on the function example 3) seems to be not in line with that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/845943069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/846102778",
    "html_url": "https://github.com/ethereum/solidity/issues/11407#issuecomment-846102778",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11407",
    "id": 846102778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjEwMjc3OA==",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T16:56:00Z",
    "updated_at": "2021-05-21T16:56:00Z",
    "author_association": "MEMBER",
    "body": "Just a note to anyone implementing this in the future: remember about shadowing (#9231).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/846102778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1210662984",
    "html_url": "https://github.com/ethereum/solidity/issues/11407#issuecomment-1210662984",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11407",
    "id": 1210662984,
    "node_id": "IC_kwDOAm_5kc5IKUBI",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T13:18:10Z",
    "updated_at": "2022-08-10T13:18:10Z",
    "author_association": "MEMBER",
    "body": "@zemse We just discussed this in the call. We think it's reasonable, do you want to start with an implementation?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1210662984/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
