{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4116/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4116/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4116/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4116",
  "id": 321980274,
  "node_id": "MDU6SXNzdWUzMjE5ODAyNzQ=",
  "number": 4116,
  "title": "Enforcing ABI length checks for return data from calls can be breaking",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 37,
  "created_at": "2018-05-10T15:45:09Z",
  "updated_at": "2020-06-11T14:30:37Z",
  "closed_at": "2020-06-11T14:30:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This was identified independently by @yaronvel (https://gitter.im/ethereum/solidity-dev?at=5af1490f97f07c7e13787516) and @mattdf / @Ivshti / @decanus (https://gist.github.com/decanus/bdc08df5bf73af349333d1a8cae07d23).\r\n\r\nTo show the problem as a simple example:\r\n```\r\ninterface Token {\r\n  function transfer() returns (bool);\r\n}\r\n\r\ncontract Good {\r\n  function transfer() returns (bool) { return true; }\r\n}\r\n\r\ncontract Bad {\r\n  function transfer() {}\r\n}\r\n\r\ncontract Wallet {\r\n  function transfer(address token) {\r\n    require(Token(token).transfer());\r\n  }\r\n}\r\n```\r\n\r\nThe interface expects the `transfer` function to return a value and as a result `Wallet` compiles. In the current version of Solidity this will trigger:\r\n- a length check when ABI decoding the returned data (fails if the length is < 32)\r\n- using the `returndatasize` opcode to retrieve the length\r\n\r\nThis fails when passing in an instance of `Bad`, because it returns 0 bytes.\r\n\r\nApparently, this wasn't a problem with previous versions, because it didn't had the length check. Also because the return types are not part of the ABI selector hash, this wasn't enforced in the past at all.\r\n\r\nAs a result there are token contracts out there which do not comply with the above ERC20 interface and this change deprives decentralised exchanges from dealing with them if compiled with a recent Solidity version.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4116/reactions",
    "total_count": 9,
    "+1": 9,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4116/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388096373",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388096373",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388096373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA5NjM3Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T15:51:59Z",
    "updated_at": "2018-05-10T15:51:59Z",
    "author_association": "MEMBER",
    "body": "I wonder though about the expectation.\r\n\r\nIf it doesnâ€™t return a bool, the old compiler should have taken it as a 0, which means false. I think the real solution is to stop using `require` if you know some tokens are incompatible. The `call` itself will bubble up exceptions so if it fails, the caller will fail too.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388096373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388097201",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388097201",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388097201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA5NzIwMQ==",
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "node_id": "MDQ6VXNlcjEyNDc2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1247629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T15:54:29Z",
    "updated_at": "2018-05-10T15:54:29Z",
    "author_association": "NONE",
    "body": "Is there a notable case where an ERC20 might return `false` but not throw? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388097201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388097824",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388097824",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388097824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA5NzgyNA==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T15:56:23Z",
    "updated_at": "2018-05-10T15:56:23Z",
    "author_association": "NONE",
    "body": "@Ivshti As far as I know, the older ERC20 contracts returned false. Open Zeppelin I think only changed it recently",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388097824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388098009",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388098009",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388098009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA5ODAwOQ==",
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "node_id": "MDQ6VXNlcjEyNDc2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1247629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T15:56:59Z",
    "updated_at": "2018-05-10T15:56:59Z",
    "author_association": "NONE",
    "body": "OpenZeppelin behaviour in the adex contract is to not return anything, but only throw. Perhaps it returned `false` before that",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388098009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388113892",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388113892",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388113892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODExMzg5Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T16:51:41Z",
    "updated_at": "2018-05-10T16:51:41Z",
    "author_association": "MEMBER",
    "body": "There's an important distinction between what an interface specifies and what a contract does.\r\n\r\nIf the interface says it returns `bool` (which ERC20 does), then the implementation *must* return an ABI-encoded boolean if it returns, even if it's always the same value.\r\n\r\nThe current convention is for ERC20 tokens to `revert` if there's an error and `return true` if there isn't, because this is safest should work for everyone. An ERC20 token that returns 0 bytes is violating the ERC20 interface.\r\n\r\nBut, suddenly changing Solidity behaviour for these nonstandard return values in a point release isn't a great thing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388113892/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388114405",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388114405",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388114405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODExNDQwNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T16:53:28Z",
    "updated_at": "2018-05-10T16:53:28Z",
    "author_association": "MEMBER",
    "body": "Apparently the reason this worked in the old compiler is that the output memory area overlapping with the input memory area and since the input contained the function selector, it was never all zeroes, and as a result, never `false`.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388114405/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 3,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388115411",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388115411",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388115411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODExNTQxMQ==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T16:56:55Z",
    "updated_at": "2018-05-10T16:58:08Z",
    "author_association": "MEMBER",
    "body": "On @axic's comment, this behaviour is triggered when the child contract ends on a STOP instruction, or when it ends on a RETURN instruction with returnsize of 0, because then the memarea of input is not written to at all, and:\r\n\r\nMLOAD (inoffset/outoffset)\r\nISZERO\r\nISZERO\r\n\r\nEnsures that this always returns true, since the method signature makes the first 32 bytes always nonzero.\r\n\r\nThis means that contracts that call children that specify return values but end in STOP or RETURN(0) can be tricked into thinking that the input calldata is what is returned by the child.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388115411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388125016",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388125016",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388125016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODEyNTAxNg==",
    "user": {
      "login": "DaveAppleton",
      "id": 1858302,
      "node_id": "MDQ6VXNlcjE4NTgzMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1858302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaveAppleton",
      "html_url": "https://github.com/DaveAppleton",
      "followers_url": "https://api.github.com/users/DaveAppleton/followers",
      "following_url": "https://api.github.com/users/DaveAppleton/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaveAppleton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaveAppleton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaveAppleton/subscriptions",
      "organizations_url": "https://api.github.com/users/DaveAppleton/orgs",
      "repos_url": "https://api.github.com/users/DaveAppleton/repos",
      "events_url": "https://api.github.com/users/DaveAppleton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaveAppleton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T17:29:41Z",
    "updated_at": "2018-05-10T17:29:41Z",
    "author_association": "NONE",
    "body": "> Is there a notable case where an ERC20 might return false but not throw?\r\n\r\nAnything that copied BAT contracts would do so. \r\nAt the time they were taken as pretty safe to copy.\r\n\r\n```\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388125016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388160265",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388160265",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388160265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODE2MDI2NQ==",
    "user": {
      "login": "yaronvel",
      "id": 19823963,
      "node_id": "MDQ6VXNlcjE5ODIzOTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19823963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yaronvel",
      "html_url": "https://github.com/yaronvel",
      "followers_url": "https://api.github.com/users/yaronvel/followers",
      "following_url": "https://api.github.com/users/yaronvel/following{/other_user}",
      "gists_url": "https://api.github.com/users/yaronvel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yaronvel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yaronvel/subscriptions",
      "organizations_url": "https://api.github.com/users/yaronvel/orgs",
      "repos_url": "https://api.github.com/users/yaronvel/repos",
      "events_url": "https://api.github.com/users/yaronvel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yaronvel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T19:31:08Z",
    "updated_at": "2018-05-10T19:31:08Z",
    "author_association": "NONE",
    "body": "Just to give some background. This behavior was detected on OMG token. And afaik most existing DEX contract will break (will not be able to trade OMG) once compiled with new version.\r\n\r\nI agree it is not a solidity issue, and I am also not sure the compiler should fix anything.\r\nHowever, this should be brought to the attention of the public, or at least relevant projects.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388160265/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388181506",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388181506",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388181506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODE4MTUwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T20:50:14Z",
    "updated_at": "2018-05-11T11:11:20Z",
    "author_association": "MEMBER",
    "body": "Calling a function on a contract that does not return the expected type is a runtime error and should be treated as such. The caller has to decode the data into something. If the returned size is zero, there is no way to create a value out of it and the correct way is to revert.\r\n\r\nAs a workaround, you can use `--evm-version homestead` to make it still work for faulty contracts, but you will observe undefined behaviour with regards to the return value, which might be dangerous.\r\n\r\nAnother way to make an ERC20-non-compliant contract work is by creating an intermediate contract that translates between the two interfaces.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388181506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388306751",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388306751",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388306751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMwNjc1MQ==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T09:05:24Z",
    "updated_at": "2018-05-11T09:05:24Z",
    "author_association": "NONE",
    "body": "So I did a bit of digging and found that any token using Open Zeppelin between https://github.com/OpenZeppelin/openzeppelin-solidity/commit/52120a8c428de5e34f157b7eaed16d38f3029e66#diff-da41308b41a2748120cc2cfa52b1ea00 and https://github.com/OpenZeppelin/openzeppelin-solidity/commit/6331dd125d8e8429480b2630f49781f3e1ed49cd#diff-da41308b41a2748120cc2cfa52b1ea00 does not conform to ERC20. So the landscape of tokens which would be affected by this feature is likely to be huge.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388306751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388319643",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388319643",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388319643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMxOTY0Mw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T10:00:10Z",
    "updated_at": "2018-05-11T10:00:10Z",
    "author_association": "MEMBER",
    "body": "@chriseth Agreed this is a bug in the contracts concerned - but this change in a point-release of Solidity is a breaking change for existing code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388319643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388336387",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-388336387",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 388336387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMzNjM4Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T11:21:58Z",
    "updated_at": "2018-05-11T11:21:58Z",
    "author_association": "MEMBER",
    "body": "@Arachnid I agree, we should have been more careful there, so sorry about that.\r\n\r\nTo clarify the `--evm-version homestead` option: This removes that feature, reading of dynamic return data (where the size check is required) and the use of `staticcall` which can be breaking in a similar way.\r\n\r\nAlso not that the versioning scheme does not distinguish between bugfix releases and feature releases. We only distinguish breaking (change in the second component of the version number as long as the first is zero) and non-breaking (change only in the last copmonent of the version number, as long as the first is zero) changes, where a change is defined as non-breaking if and only if it does not change the compilability and semantics of previously compilable contracts unless they rely on undocumented or undefined features or bugs in the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388336387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/389897300",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-389897300",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 389897300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg5NzMwMA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T14:59:02Z",
    "updated_at": "2018-05-17T14:59:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "What about this case of Bad Token `GavCoin`? \r\nhttps://etherscan.io/address/0x0b8d56c26d8cf16fe1bddf4967753503d974de06#code\r\n\r\nIt defines `returns (bool)` at signature but never returns true:\r\n```\r\n    function transfer(address _to, uint256 _value) when_owns(msg.sender, _value) returns (bool success) {\r\n        Transfer(msg.sender, _to, _value);\r\n        accounts[msg.sender].balance -= _value;\r\n        accounts[_to].balance += _value;\r\n    }\r\n```\r\nI think is not the case, but also an example of bad implemented token that fail even before the return lenght check (in case you require token transfer to return true, as in spec)..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/389897300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/391267752",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-391267752",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 391267752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI2Nzc1Mg==",
    "user": {
      "login": "ngutman",
      "id": 1540134,
      "node_id": "MDQ6VXNlcjE1NDAxMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1540134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngutman",
      "html_url": "https://github.com/ngutman",
      "followers_url": "https://api.github.com/users/ngutman/followers",
      "following_url": "https://api.github.com/users/ngutman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngutman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngutman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngutman/subscriptions",
      "organizations_url": "https://api.github.com/users/ngutman/orgs",
      "repos_url": "https://api.github.com/users/ngutman/repos",
      "events_url": "https://api.github.com/users/ngutman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngutman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T08:39:07Z",
    "updated_at": "2018-05-23T08:39:07Z",
    "author_association": "NONE",
    "body": "Another \"high-profile\" non ERC20 compatible token is [OMG](https://etherscan.io/address/0xd26114cd6EE289AccF82350c8d8487fedB8A0C07#code) for example.\r\n\r\n```\r\nfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32);\r\nfunction transfer(address _to, uint _value) onlyPayloadSize(2 * 32);\r\n```\r\n\r\nThis is highly problematic for DEXes, as soon as they redeploy their contracts with solidity > 0.4.24 such tokens won't be usable on the platform.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/391267752/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/391541654",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-391541654",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 391541654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTU0MTY1NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T00:03:07Z",
    "updated_at": "2018-05-24T00:03:07Z",
    "author_association": "MEMBER",
    "body": "> It defines `returns (bool)` at signature but never returns true:\r\n\r\n@3esmit it implicitly returns `false`, which I would categorise as a programmer's error. One could argue this implicit behaviour isn't the best. For that there are proposals to change it and I would rather discuss that separately.\r\n\r\n> This is highly problematic for DEXes, as soon as they redeploy their contracts with solidity > 0.4.24 such tokens won't be usable on the platform.\r\n\r\nAs mentioned by @chriseth, it is still possible to compile contracts with non-byzantium mode to remove the length check. I've raised issues at truffle (https://github.com/trufflesuite/truffle-compile/issues/72) and remix (https://github.com/ethereum/remix-ide/issues/1282) to implement support for this option. I hope that will help. We also plan to document this a bit further and raise awareness.\r\n\r\nI have also created this proof of concept (do not use!) to show it should be possible creating wrappers even for recent Solidity versions: https://gist.github.com/axic/85f12e78885a5336f2806357b1ba6ea1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/391541654/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392528032",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-392528032",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 392528032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjUyODAzMg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T13:32:28Z",
    "updated_at": "2018-05-28T13:32:28Z",
    "author_association": "MEMBER",
    "body": "@axic regarding that poc snippet. If someone embeds that into a contract, and calls it internally. So that method `foo` calls `safeTransfer`. \r\n\r\nWon't that become a `JUMP` instead of a `CALL` internally? And if so, is there a possible corruption happening since you're writing to memory location `0` instead of what solidity designates the 'free memory' area ('0x60` onwards or whatever it is?) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392528032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392530517",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-392530517",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 392530517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjUzMDUxNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T13:43:48Z",
    "updated_at": "2018-05-28T13:43:48Z",
    "author_association": "MEMBER",
    "body": "Yes it would be a `JUMP`. Memory location 0 is designated as a \"scratch area\" used by hashing functions, so it is safe to use. It will be overwritten by the next use of `KECCAK256`.\r\n\r\nAlso the free memory area starts now at `0x80`, but better to rely on the actual pointer in `0x40`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392530517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392532284",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-392532284",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 392532284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjUzMjI4NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T13:50:07Z",
    "updated_at": "2018-05-28T13:50:07Z",
    "author_association": "MEMBER",
    "body": "For long term compatibility it may be better to use the free memory pointer, just not update it in the function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392532284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392960818",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-392960818",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 392960818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjk2MDgxOA==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T22:02:48Z",
    "updated_at": "2018-06-08T22:31:07Z",
    "author_association": "NONE",
    "body": "Created my own version of safe `transfer / transferFrom / approve`. @axic is there more information about the memory locations somewhere? `0x0` and `0x40` and other important ones?\r\n\r\nMy implementation:\r\nhttps://gist.github.com/BrendanChou/88a2eeb80947ff00bcf58ffdafeaeb61\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/392960818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393114975",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-393114975",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 393114975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzExNDk3NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T10:40:45Z",
    "updated_at": "2018-05-30T10:40:45Z",
    "author_association": "MEMBER",
    "body": "https://solidity.readthedocs.io/en/v0.4.24/miscellaneous.html#layout-in-memory",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393114975/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393799279",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-393799279",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 393799279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzc5OTI3OQ==",
    "user": {
      "login": "lukas-berlin",
      "id": 26850933,
      "node_id": "MDQ6VXNlcjI2ODUwOTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26850933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukas-berlin",
      "html_url": "https://github.com/lukas-berlin",
      "followers_url": "https://api.github.com/users/lukas-berlin/followers",
      "following_url": "https://api.github.com/users/lukas-berlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukas-berlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukas-berlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukas-berlin/subscriptions",
      "organizations_url": "https://api.github.com/users/lukas-berlin/orgs",
      "repos_url": "https://api.github.com/users/lukas-berlin/repos",
      "events_url": "https://api.github.com/users/lukas-berlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukas-berlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T07:58:33Z",
    "updated_at": "2018-06-01T08:00:04Z",
    "author_association": "NONE",
    "body": "This issue is now 22 days old and I see no response in the community. This is a critical issue for the affected contracts. When users send their BadToken to any contract (DEX, DutchEx, ... ) compiled after solc 0.4.22  the token will most likely be stuck on such contracts\r\nI did write an email to OMG. I think there should be a bigger outcry. These tokens may need to be forked, or the need to implement some proxy as @chriseth  suggested",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393799279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393801779",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-393801779",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 393801779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzgwMTc3OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T08:06:26Z",
    "updated_at": "2018-06-01T08:06:26Z",
    "author_association": "MEMBER",
    "body": "> This issue is now 22 days old and I see no response in the community. \r\n\r\nWell, Chris posted this a couple of days ago: https://medium.com/@chris_77367/explaining-unexpected-reverts-starting-with-solidity-0-4-22-3ada6e82308c",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393801779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393936335",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-393936335",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 393936335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzkzNjMzNQ==",
    "user": {
      "login": "lukas-berlin",
      "id": 26850933,
      "node_id": "MDQ6VXNlcjI2ODUwOTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26850933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukas-berlin",
      "html_url": "https://github.com/lukas-berlin",
      "followers_url": "https://api.github.com/users/lukas-berlin/followers",
      "following_url": "https://api.github.com/users/lukas-berlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukas-berlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukas-berlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukas-berlin/subscriptions",
      "organizations_url": "https://api.github.com/users/lukas-berlin/orgs",
      "repos_url": "https://api.github.com/users/lukas-berlin/repos",
      "events_url": "https://api.github.com/users/lukas-berlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukas-berlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T16:32:55Z",
    "updated_at": "2018-06-01T16:32:55Z",
    "author_association": "NONE",
    "body": "I compiled a list of affected contracts from the tokens listed on etherdelta. 130/913 tokens are affected.\r\nhttps://gist.github.com/lukas-berlin/f587086f139df93d22987049f3d8ebd2\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/393936335/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394857270",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-394857270",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 394857270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg1NzI3MA==",
    "user": {
      "login": "lukas-berlin",
      "id": 26850933,
      "node_id": "MDQ6VXNlcjI2ODUwOTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26850933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukas-berlin",
      "html_url": "https://github.com/lukas-berlin",
      "followers_url": "https://api.github.com/users/lukas-berlin/followers",
      "following_url": "https://api.github.com/users/lukas-berlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukas-berlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukas-berlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukas-berlin/subscriptions",
      "organizations_url": "https://api.github.com/users/lukas-berlin/orgs",
      "repos_url": "https://api.github.com/users/lukas-berlin/repos",
      "events_url": "https://api.github.com/users/lukas-berlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukas-berlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T20:56:22Z",
    "updated_at": "2018-06-05T20:56:22Z",
    "author_association": "NONE",
    "body": "I published an article about this issue, https://medium.com/@lukas.berlin/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca with a safeTransfer proposal similar to  the proposal of @BrendanChou \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394857270/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394876205",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-394876205",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 394876205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg3NjIwNQ==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T22:08:06Z",
    "updated_at": "2018-06-05T22:08:06Z",
    "author_association": "NONE",
    "body": "Has anyone looked into `transferFrom` and `approve`? Are there tokens out there that do not return values for these functions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394876205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394878164",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-394878164",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 394878164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg3ODE2NA==",
    "user": {
      "login": "lukas-berlin",
      "id": 26850933,
      "node_id": "MDQ6VXNlcjI2ODUwOTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26850933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukas-berlin",
      "html_url": "https://github.com/lukas-berlin",
      "followers_url": "https://api.github.com/users/lukas-berlin/followers",
      "following_url": "https://api.github.com/users/lukas-berlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukas-berlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukas-berlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukas-berlin/subscriptions",
      "organizations_url": "https://api.github.com/users/lukas-berlin/orgs",
      "repos_url": "https://api.github.com/users/lukas-berlin/repos",
      "events_url": "https://api.github.com/users/lukas-berlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukas-berlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T22:16:29Z",
    "updated_at": "2018-06-05T22:16:29Z",
    "author_association": "NONE",
    "body": "@BrendanChou  Yes the faulty interface from OpenZeppelin also includes approve() and transferFrom(), so  transferFrom() has the same problem as transfer(). It would require the same solution. I have never seen a contract that calls approve() ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394878164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394899431",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-394899431",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 394899431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg5OTQzMQ==",
    "user": {
      "login": "BrendanChou",
      "id": 3680392,
      "node_id": "MDQ6VXNlcjM2ODAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3680392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrendanChou",
      "html_url": "https://github.com/BrendanChou",
      "followers_url": "https://api.github.com/users/BrendanChou/followers",
      "following_url": "https://api.github.com/users/BrendanChou/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrendanChou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrendanChou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrendanChou/subscriptions",
      "organizations_url": "https://api.github.com/users/BrendanChou/orgs",
      "repos_url": "https://api.github.com/users/BrendanChou/repos",
      "events_url": "https://api.github.com/users/BrendanChou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrendanChou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T00:10:45Z",
    "updated_at": "2018-06-06T00:10:45Z",
    "author_association": "NONE",
    "body": "Most DEXs will probably not have to use `approve`, but any smart contract that interacts with DEXs will. [Example from dYdX](https://github.com/dydxprotocol/protocol/blob/83db412aed596c2dd8b741c761e1dd417c81d959/contracts/margin/external/exchangewrappers/ZeroExExchangeWrapper.sol#L242)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394899431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395794855",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-395794855",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 395794855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5NDg1NQ==",
    "user": {
      "login": "p0n1",
      "id": 36690236,
      "node_id": "MDQ6VXNlcjM2NjkwMjM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/36690236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/p0n1",
      "html_url": "https://github.com/p0n1",
      "followers_url": "https://api.github.com/users/p0n1/followers",
      "following_url": "https://api.github.com/users/p0n1/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0n1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/p0n1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0n1/subscriptions",
      "organizations_url": "https://api.github.com/users/p0n1/orgs",
      "repos_url": "https://api.github.com/users/p0n1/repos",
      "events_url": "https://api.github.com/users/p0n1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/p0n1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T15:21:10Z",
    "updated_at": "2018-06-08T15:21:10Z",
    "author_association": "NONE",
    "body": "Most of the incompatible ERC20 tokens (**above 1703**) have used `token-advanced.sol` code in [solidity-org](https://github.com/ethereum/ethereum-org/pull/863) repo and I created PRs to fix.\r\n\r\nCheck this blog post for detailed report. \r\nhttps://medium.com/loopring-protocol/an-incompatibility-in-smart-contract-threatening-dapp-ecosystem-72b8ca5db4da\r\n\r\nAnd also, we are trying to make a working solution for the dApps and dexs, which is similar to the work of @lukas-berlin and @BrendanChou. But using `call` with function signature instead of still using incompatible `no return` function interface in code. Community should care more about **common seen template code**.\r\n\r\nHoping not to break anything. Help review please. \r\nhttps://github.com/sec-bit/badERC20Fix/blob/master/badERC20Fix.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395794855/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/406303646",
    "html_url": "https://github.com/ethereum/solidity/issues/4116#issuecomment-406303646",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4116",
    "id": 406303646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwMzY0Ng==",
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "node_id": "MDQ6VXNlcjEyNDc2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1247629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T14:50:06Z",
    "updated_at": "2018-07-19T14:50:06Z",
    "author_association": "NONE",
    "body": "After a brief discussion with @chriseth, it seems that this should be mitigatable by replicating the behavior of the old require in assembly, but we will have to construct the bytecode of the transfer() call ourselves \r\n\r\n@mattdf @decanus thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/406303646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
