{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3229",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3229/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3229/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3229/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3229",
  "id": 275978062,
  "node_id": "MDU6SXNzdWUyNzU5NzgwNjI=",
  "number": 3229,
  "title": "Generate a payload for call of another contract",
  "user": {
    "login": "naumenkogs",
    "id": 7975071,
    "node_id": "MDQ6VXNlcjc5NzUwNzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/naumenkogs",
    "html_url": "https://github.com/naumenkogs",
    "followers_url": "https://api.github.com/users/naumenkogs/followers",
    "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
    "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
    "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
    "repos_url": "https://api.github.com/users/naumenkogs/repos",
    "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-11-22T08:13:09Z",
  "updated_at": "2017-11-22T17:34:33Z",
  "closed_at": "2017-11-22T17:08:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi.\r\nIs it possible to access a low-level payload of a call to another contract on a solidity level?\r\nIn web3.js I can do\r\nconst addOwnerData = multisigInstance.contract.addOwner.getData(accounts[3])\r\nAnd I'll have such a payload. Is it possible to do at the solidity-level? Assuming I have an instance of another contract.\r\n",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3229/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3229/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346414600",
    "html_url": "https://github.com/ethereum/solidity/issues/3229#issuecomment-346414600",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3229",
    "id": 346414600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQxNDYwMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T17:08:03Z",
    "updated_at": "2017-11-22T17:08:03Z",
    "author_association": "MEMBER",
    "body": "I am not fully sure what do you mean, but `msg.data` should give access to the entire incoming message for an external function.\r\n\r\nPlease reopen if this doesn't answer the question.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346414600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346418878",
    "html_url": "https://github.com/ethereum/solidity/issues/3229#issuecomment-346418878",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3229",
    "id": 346418878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQxODg3OA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T17:22:42Z",
    "updated_at": "2017-11-22T17:22:42Z",
    "author_association": "NONE",
    "body": "@axic I'm not sure I can reopen this issue.\r\n\r\nmsg.data gives access to the payload for the function of *current contract*.\r\nI need to prepare a call from *current contract* to *another contract*, and get the payload of such a call without execution.\r\n\r\n*From inside solidity function*:\r\n\r\n```\r\nfunction storePayloadForCallingAnotherContract() {\r\n    TestContract contract = TestContract(\"address....\");\r\n\r\n    // *Without execution*\r\n    var payload = contract.call(\"functionFromTestContract\", \"argument1\", argument2).getPayload();\r\n} \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346418878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346422240",
    "html_url": "https://github.com/ethereum/solidity/issues/3229#issuecomment-346422240",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3229",
    "id": 346422240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQyMjI0MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T17:34:33Z",
    "updated_at": "2017-11-22T17:34:33Z",
    "author_association": "MEMBER",
    "body": "Oh, I understand then. That is tracked in issue #1707, a pull request is pending but it is a not finished feature yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346422240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
