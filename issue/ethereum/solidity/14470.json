{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14470",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14470/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14470/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14470/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14470",
  "id": 1837441941,
  "node_id": "I_kwDOAm_5kc5thSOV",
  "number": 14470,
  "title": "When compiling Yul, optimizer does a lot even when disabled in settings",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-04T23:29:25Z",
  "updated_at": "2023-08-07T12:57:41Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen compiling Yul, setting `enabled: false` and even `yul: false` seems to leave on a lot of optimizations.  Moreover, setting `yul: false` prohibits setting `yulDetails`; this means that to get code that isn't substantially optimized, you actually have to set `yul: true` so you can go into `yulDetails` and turn things off!\r\n\r\nI'm a bit unsure how much this is a bug and how much this is intentional, but it didn't seem right to me (the part about having to set `yul: true` in particular strikes me as perverse), so I thought I'd file an issue.  Thanks!\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.21\r\n- Target EVM version (as per compiler settings): default\r\n\r\n## Steps to Reproduce\r\n\r\nFor what it's worth, the test contract I was trying this with was\r\n\r\n```yul\r\nobject \"YulTest\" {\r\n  code {\r\n    let size := datasize(\"runtime\")\r\n    datacopy(0, dataoffset(\"runtime\"), size)\r\n    return(0, size)\r\n  }\r\n  object \"runtime\" {\r\n    code {\r\n      let a := 1\r\n      let b := 2\r\n      b := add(b,a)\r\n      mstore(0, add(b, a))\r\n      return(0, 0x20)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n(Well, that, and quite a few variants on it.)  The code above got substantially rewritten even with `enabled: false` and `yul: false`, as mentioned above!  I had to set `yul: true` and go turn things off in `yulDetails` to get something that worked the way I wrote it above...",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14470/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14470/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1667721030",
    "html_url": "https://github.com/ethereum/solidity/issues/14470#issuecomment-1667721030",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14470",
    "id": 1667721030,
    "node_id": "IC_kwDOAm_5kc5jZ2dG",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-07T11:57:54Z",
    "updated_at": "2023-08-07T11:57:54Z",
    "author_association": "MEMBER",
    "body": "Related comment: https://github.com/ethereum/solidity/pull/14149#discussion_r1174026509\r\n\r\nAs mentioned via matrix, the \"minimal optimizations\" enabled in that PR are meant to solve compilability issues and are meant to conceptually be considered as part of regular code generation.\r\n\r\nCan you elaborate on why you want to disable those \"optimizations\"? Are they causing any issues for you?\r\n\r\nI'd be open to allowing a more intuitive and user-friendly way to disable those optimizations, but the idea was that the default settings should produce compiler output that's fine to consume for tooling and that the need to disable them should not arise. Can you elaborate on which substantial rewrites are causing issues for you, if any?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1667721030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1667810834",
    "html_url": "https://github.com/ethereum/solidity/issues/14470#issuecomment-1667810834",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14470",
    "id": 1667810834,
    "node_id": "IC_kwDOAm_5kc5jaMYS",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-07T12:57:41Z",
    "updated_at": "2023-08-07T12:57:41Z",
    "author_association": "MEMBER",
    "body": "Yeah, it could be that it's actually interfering with what you're trying to do, but it's also possible that it just seems more \"rewritten\" than it actually is. The only optimizer step we run with `yul: false` is [`UnusedPruner`](https://docs.soliditylang.org/en/latest/internals/optimizer.html#unused-pruner). All it does is remove unreferenced functions, unreferenced variables and movable expression statements. So I wonder it's just the case of the diff looking horrible while the non-removed bits are actually intact.\r\n\r\nAnd additional factor making it look worse might be that now the `--ir` output is always reformatted just like `--ir-optimized` is. It might even reorder functions compared to how it was before (though I'm not not 100% sure about that). That's the consequence of the Yul stack being always on. Even if no optimization is performed, the Yul code is still reparsed after code generation and only then printed to the output.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1667810834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
