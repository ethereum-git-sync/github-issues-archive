{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14501/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14501/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14501/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14501",
  "id": 1857435546,
  "node_id": "I_kwDOAm_5kc5utjea",
  "number": 14501,
  "title": "External functions in linked libraries don't generate any ABI",
  "user": {
    "login": "banteg",
    "id": 4562643,
    "node_id": "MDQ6VXNlcjQ1NjI2NDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4562643?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/banteg",
    "html_url": "https://github.com/banteg",
    "followers_url": "https://api.github.com/users/banteg/followers",
    "following_url": "https://api.github.com/users/banteg/following{/other_user}",
    "gists_url": "https://api.github.com/users/banteg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/banteg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/banteg/subscriptions",
    "organizations_url": "https://api.github.com/users/banteg/orgs",
    "repos_url": "https://api.github.com/users/banteg/repos",
    "events_url": "https://api.github.com/users/banteg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/banteg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-08-19T00:41:58Z",
  "updated_at": "2023-08-24T20:53:36Z",
  "closed_at": "2023-08-24T20:49:13Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nwhen using external linked libraries, the compiler doesn't generate abi for external library functions, preventing external tooling from decoding delegatecalls to them.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.21\r\n- Target EVM version (as per compiler settings): shanghai\r\n- Framework/IDE (e.g. Truffle or Remix): foundry\r\n- EVM execution environment / backend / blockchain client: anvil\r\n- Operating system: macos\r\n\r\n## Steps to Reproduce\r\n\r\nCounter.sol\r\n```solidity\r\npragma solidity ^0.8.21;\r\n\r\nimport 'src/CounterCommon.sol';\r\n\r\ncontract Counter {\r\n    using CounterCommon for uint256;\r\n\r\n    uint256 public number;\r\n\r\n    function increment() public {\r\n        number = number.incr();\r\n    }\r\n}\r\n```\r\n\r\nCounterCommon.sol\r\n```solidity\r\npragma solidity ^0.8.21;\r\n\r\nlibrary CounterCommon {\r\n    function incr(uint256 n) external returns (uint256) {\r\n        return n + 1;\r\n    }\r\n}\r\n```\r\n\r\n```js\r\n$ foundry test -vvvv\r\n[⠢] Compiling...\r\nNo files changed, compilation skipped\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] test_Increment() (gas: 31486)\r\nTraces:\r\n  [31486] CounterTest::test_Increment()\r\n    ├─ [25447] Counter::increment()\r\n    │   ├─ [341] CounterCommon::incr(0) [delegatecall]\r\n    │   │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000001\r\n    │   └─ ← ()\r\n    ├─ [261] Counter::number() [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 6.48ms\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n```\r\n\r\n```js\r\n$ jq '.abi' out/Counter.sol/Counter.json\r\n[\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"increment\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"number\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n```\r\n\r\n```js\r\n$ jq '.abi' out/Counter.sol/CounterCommon.json\r\n[]\r\n```\r\n\r\nas you can see, there is no entry for `incr`, thus no easy way for external tooling to decode the delegatecall to the library.\r\n\r\noriginally observed in this codebase with PoolCommons.sol library https://github.com/ajna-finance/ajna-core/tree/main/src",
  "closed_by": {
    "login": "matheusaaguiar",
    "id": 95899911,
    "node_id": "U_kgDOBbdRBw",
    "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matheusaaguiar",
    "html_url": "https://github.com/matheusaaguiar",
    "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
    "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
    "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
    "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
    "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
    "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14501/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14501/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684910266",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684910266",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684910266,
    "node_id": "IC_kwDOAm_5kc5kbbC6",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T10:06:03Z",
    "updated_at": "2023-08-19T10:06:03Z",
    "author_association": "NONE",
    "body": "Seems to be a bug with `0.8.21`, `0.8.20` produces the expected result\r\n\r\n```➜  test git:(main) ✗ forge clean     \r\n➜  test git:(main) ✗ forge test -vvvv\r\n[⠊] Compiling...\r\n[⠘] Compiling 23 files with 0.8.20\r\n[⠊] Solc 0.8.20 finished in 2.81s\r\nCompiler run successful!\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] testIncrement() (gas: 31394)\r\nTraces:\r\n  [31394] CounterTest::testIncrement() \r\n    ├─ [25422] Counter::increment() \r\n    │   ├─ [316] CounterCommon::incr(0) [delegatecall]\r\n    │   │   └─ ← 1\r\n    │   └─ ← ()\r\n    ├─ [261] Counter::number() [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 460.50µs\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n➜  test git:(main) ✗ jq '.abi' out/Counter.sol/CounterCommon.json\r\njq: error: Could not open file out/Counter.sol/CounterCommon.json: No such file or directory\r\n➜  test git:(main) ✗ jq '.abi' out/CounterCommon.sol/CounterCommon.json\r\n[\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"n\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"incr\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"pure\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n```\r\n\r\nAlso notice that the abi is inside `out/CounterCommon.sol`, not `out/Counter.sol`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684910266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684910628",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684910628",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684910628,
    "node_id": "IC_kwDOAm_5kc5kbbIk",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T10:08:25Z",
    "updated_at": "2023-08-19T10:08:25Z",
    "author_association": "NONE",
    "body": "I actually tried again with `0.8.21` and it worked this time (could reproduce the first time I tried the example...)\r\n\r\n```➜  test git:(main) ✗ forge test -vvvv\r\n[⠊] Compiling...\r\n[⠃] Compiling 23 files with 0.8.21\r\n[⠒] Solc 0.8.21 finished in 2.94s\r\nCompiler run successful!\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] testIncrement() (gas: 31394)\r\nTraces:\r\n  [31394] CounterTest::testIncrement() \r\n    ├─ [25422] Counter::increment() \r\n    │   ├─ [316] CounterCommon::incr(0) [delegatecall]\r\n    │   │   └─ ← 1\r\n    │   └─ ← ()\r\n    ├─ [261] Counter::number() [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 393.13µs\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n➜  test git:(main) ✗ jq '.abi' out/CounterCommon.sol/CounterCommon.json\r\n[\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"n\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"incr\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"pure\",\r\n    \"type\": \"function\"\r\n  }\r\n]```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684910628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684911338",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684911338",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684911338,
    "node_id": "IC_kwDOAm_5kc5kbbTq",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T10:12:44Z",
    "updated_at": "2023-08-19T10:12:44Z",
    "author_association": "NONE",
    "body": "Found it!!\r\n\r\n```➜  test git:(main) ✗ forge test -vvvv                                  \r\n[⠊] Compiling...\r\n[⠃] Compiling 23 files with 0.8.21\r\n[⠒] Solc 0.8.21 finished in 2.92s\r\nCompiler run successful with warnings:\r\nWarning (2018): Function state mutability can be restricted to pure\r\n --> src/CounterCommon.sol:4:5:\r\n  |\r\n4 |     function incr(uint256 n) external returns (uint256) {\r\n  |     ^ (Relevant source part starts here and spans across multiple lines).\r\n\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] testIncrement() (gas: 31419)\r\nTraces:\r\n  [31419] CounterTest::testIncrement() \r\n    ├─ [25447] Counter::increment() \r\n    │   ├─ [341] CounterCommon::incr(0) [delegatecall]\r\n    │   │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000001\r\n    │   └─ ← ()\r\n    ├─ [261] Counter::number() [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 380.63µs\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n➜  test git:(main) ✗ jq '.abi' out/CounterCommon.sol/CounterCommon.json\r\n[]\r\n➜  test git:(main) ✗ forge clean                                       \r\n➜  test git:(main) ✗ forge test -vvvv                                  \r\n[⠊] Compiling...\r\n[⠘] Compiling 23 files with 0.8.20\r\n[⠒] Solc 0.8.20 finished in 2.85s\r\nCompiler run successful with warnings:\r\nWarning (2018): Function state mutability can be restricted to pure\r\n --> src/CounterCommon.sol:4:5:\r\n  |\r\n4 |     function incr(uint256 n) external returns (uint256) {\r\n  |     ^ (Relevant source part starts here and spans across multiple lines).\r\n\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] testIncrement() (gas: 31419)\r\nTraces:\r\n  [31419] CounterTest::testIncrement() \r\n    ├─ [25447] Counter::increment() \r\n    │   ├─ [341] CounterCommon::incr(0) [delegatecall]\r\n    │   │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000001\r\n    │   └─ ← ()\r\n    ├─ [261] Counter::number() [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 435.46µs\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n➜  test git:(main) ✗ \r\n```\r\n\r\nAs it can be seen, both compiler versions can be tricked into the bug of not generating the abi for the external function.\r\n\r\nThe issue is related to the `pure/view` modifier in the external lib function, if not set as in @banteg example, the bug will show up, setting the compiler suggested one `pure` or even `view` would get the abi generated...\r\n\r\nStill think is a bug though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684911338/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684914250",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684914250",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684914250,
    "node_id": "IC_kwDOAm_5kc5kbcBK",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T10:31:47Z",
    "updated_at": "2023-08-19T10:31:47Z",
    "author_association": "NONE",
    "body": "It's even worse, it seems that it won't generate an abi even for legit non pure/view functions in the lib, like the ones receiving storage pointers as params, or accessing storage slots directly.\r\n\r\nCan observe this happening in my codebase and also ajna's one, here's an example of a legit function that won't get into the abi.\r\n\r\n```solidity\r\ncontract Counter {\r\n    mapping(address user => uint256 number) public counters;\r\n\r\n    function increment() public {\r\n        CounterCommon.incr(counters);\r\n    }\r\n}\r\n\r\n\r\nlibrary CounterCommon {\r\n    function incr(mapping(address user => uint256 number) storage counters) external returns (uint256) {\r\n        return counters[msg.sender] += 1;\r\n    }\r\n}\r\n```\r\n\r\n```➜  test git:(main) ✗ forge clean     \r\n➜  test git:(main) ✗ forge test -vvvv                                  \r\n[⠊] Compiling...\r\n[⠘] Compiling 23 files with 0.8.20\r\n[⠒] Solc 0.8.20 finished in 2.86s\r\nCompiler run successful!\r\n\r\nRunning 1 test for test/Counter.t.sol:CounterTest\r\n[PASS] testIncrement() (gas: 31684)\r\nTraces:\r\n  [31684] CounterTest::testIncrement() \r\n    ├─ [25542] Counter::increment() \r\n    │   ├─ [22546] CounterCommon::0d0ac626(0000000000000000000000000000000000000000000000000000000000000000) [delegatecall]\r\n    │   │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000001\r\n    │   └─ ← ()\r\n    ├─ [453] Counter::counters(CounterTest: [0x34A1D3fff3958843C43aD80F30b94c510645C316]) [staticcall]\r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 562.92µs\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n➜  test git:(main) ✗ jq '.abi' out/CounterCommon.sol/CounterCommon.json\r\n[]\r\n➜  test git:(main) ✗ ```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684914250/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684917242",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684917242",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684917242,
    "node_id": "IC_kwDOAm_5kc5kbcv6",
    "user": {
      "login": "banteg",
      "id": 4562643,
      "node_id": "MDQ6VXNlcjQ1NjI2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4562643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/banteg",
      "html_url": "https://github.com/banteg",
      "followers_url": "https://api.github.com/users/banteg/followers",
      "following_url": "https://api.github.com/users/banteg/following{/other_user}",
      "gists_url": "https://api.github.com/users/banteg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/banteg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/banteg/subscriptions",
      "organizations_url": "https://api.github.com/users/banteg/orgs",
      "repos_url": "https://api.github.com/users/banteg/repos",
      "events_url": "https://api.github.com/users/banteg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/banteg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T10:50:28Z",
    "updated_at": "2023-08-19T11:10:43Z",
    "author_association": "NONE",
    "body": "seems the regression was introduced back in 2019 in 0.5.6.\r\n\r\nthe post above correctly narrowed it down to `external`, if you add `view` or `pure`, you can observe abi output in all versions checked below. it didn't compile below 0.4.22, so i stopped there.\r\n```python\r\n> python check.py\r\ncompiler=0.8.21+commit.d9974bed abi=[]\r\ncompiler=0.8.20+commit.a1b79de6 abi=[]\r\ncompiler=0.8.19+commit.7dd6d404 abi=[]\r\ncompiler=0.8.18+commit.87f61d96 abi=[]\r\ncompiler=0.8.17+commit.8df45f5f abi=[]\r\ncompiler=0.8.16+commit.07a7930e abi=[]\r\ncompiler=0.8.15+commit.e14f2714 abi=[]\r\ncompiler=0.8.14+commit.80d49f37 abi=[]\r\ncompiler=0.8.13+commit.abaa5c0e abi=[]\r\ncompiler=0.8.12+commit.f00d7308 abi=[]\r\ncompiler=0.8.11+commit.d7f03943 abi=[]\r\ncompiler=0.8.10+commit.fc410830 abi=[]\r\ncompiler=0.8.9+commit.e5eed63a abi=[]\r\ncompiler=0.8.8+commit.dddeac2f abi=[]\r\ncompiler=0.8.7+commit.e28d00a7 abi=[]\r\ncompiler=0.8.6+commit.11564f7e abi=[]\r\ncompiler=0.8.5+commit.a4f2e591 abi=[]\r\ncompiler=0.8.4+commit.c7e474f2 abi=[]\r\ncompiler=0.8.3+commit.8d00100c abi=[]\r\ncompiler=0.8.2+commit.661d1103 abi=[]\r\ncompiler=0.8.1+commit.df193b15 abi=[]\r\ncompiler=0.8.0+commit.c7dfd78e abi=[]\r\ncompiler=0.7.6+commit.7338295f abi=[]\r\ncompiler=0.7.5+commit.eb77ed08 abi=[]\r\ncompiler=0.7.4+commit.3f05b770 abi=[]\r\ncompiler=0.7.3+commit.9bfce1f6 abi=[]\r\ncompiler=0.7.2+commit.51b20bc0 abi=[]\r\ncompiler=0.7.1+commit.f4a555be abi=[]\r\ncompiler=0.7.0+commit.9e61f92b abi=[]\r\ncompiler=0.6.12+commit.27d51765 abi=[]\r\ncompiler=0.6.11+commit.5ef660b1 abi=[]\r\ncompiler=0.6.10+commit.00c0fcaf abi=[]\r\ncompiler=0.6.9+commit.3e3065ac abi=[]\r\ncompiler=0.6.8+commit.0bbfe453 abi=[]\r\ncompiler=0.6.7+commit.b8d736ae abi=[]\r\ncompiler=0.6.6+commit.6c089d02 abi=[]\r\ncompiler=0.6.5+commit.f956cc89 abi=[]\r\ncompiler=0.6.4+commit.1dca32f3 abi=[]\r\ncompiler=0.6.3+commit.8dda9521 abi=[]\r\ncompiler=0.6.2+commit.bacdbe57 abi=[]\r\ncompiler=0.6.1+commit.e6f7d5a4 abi=[]\r\ncompiler=0.6.0+commit.26b70077 abi=[]\r\ncompiler=0.5.17+commit.d19bba13 abi=[]\r\ncompiler=0.5.16+commit.9c3226ce abi=[]\r\ncompiler=0.5.15+commit.6a57276f abi=[]\r\ncompiler=0.5.14+commit.01f1aaa4 abi=[]\r\ncompiler=0.5.13+commit.5b0b510c abi=[]\r\ncompiler=0.5.12+commit.7709ece9 abi=[]\r\ncompiler=0.5.11+commit.22be8592 abi=[]\r\ncompiler=0.5.10+commit.5a6ea5b1 abi=[]\r\ncompiler=0.5.9+commit.c68bc34e abi=[]\r\ncompiler=0.5.8+commit.23d335f2 abi=[]\r\ncompiler=0.5.7+commit.6da8b019 abi=[]\r\ncompiler=0.5.6+commit.b259423e abi=[]\r\ncompiler=0.5.5+commit.47a71e8f abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.5.4+commit.9549d8ff abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.5.3+commit.10d17f24 abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.5.2+commit.1df8f40c abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.5.1+commit.c8a2cb62 abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.5.0+commit.1d4f565a abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.4.26+commit.4563c3fc abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.4.25+commit.59dbf8f1 abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.4.24+commit.e67f0147 abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.4.23+commit.124ca40d abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\ncompiler=0.4.22+commit.4cb486ee abi=[{'constant': False, 'inputs': [{'name': 'n', 'type': 'uint256'}], 'name': 'incr', 'outputs': [{'name': '', 'type': 'uint256'}], 'payable': False,\r\n'stateMutability': 'nonpayable', 'type': 'function'}]\r\nError:\r\nCompiler run failed:\r\nError: Member \"incr\" not found or not visible after argument-dependent lookup in uint256\r\n        number = number.incr();\r\n                 ^---------^\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684917242/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684923596",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1684923596",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1684923596,
    "node_id": "IC_kwDOAm_5kc5kbeTM",
    "user": {
      "login": "banteg",
      "id": 4562643,
      "node_id": "MDQ6VXNlcjQ1NjI2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4562643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/banteg",
      "html_url": "https://github.com/banteg",
      "followers_url": "https://api.github.com/users/banteg/followers",
      "following_url": "https://api.github.com/users/banteg/following{/other_user}",
      "gists_url": "https://api.github.com/users/banteg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/banteg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/banteg/subscriptions",
      "organizations_url": "https://api.github.com/users/banteg/orgs",
      "repos_url": "https://api.github.com/users/banteg/repos",
      "events_url": "https://api.github.com/users/banteg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/banteg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-19T11:32:42Z",
    "updated_at": "2023-08-19T11:32:42Z",
    "author_association": "NONE",
    "body": "https://github.com/ethereum/solidity/pull/6187 seems it was introduced here",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1684923596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1692387178",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1692387178",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1692387178,
    "node_id": "IC_kwDOAm_5kc5k38dq",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-24T20:49:13Z",
    "updated_at": "2023-08-24T20:49:13Z",
    "author_association": "MEMBER",
    "body": "Hi @banteg and @ultrasecreth. Thanks for the report but this is not a bug.\r\nNon view/pure functions and storage pointers are intentionally excluded from the ABI, as stated in https://github.com/ethereum/solidity/issues/3409#issuecomment-360750870, which is the PR that solves the issue you linked.\r\n\r\nFunctions taking storage pointers are excluded because such types are not well defined in the ABI. We consider them an internal detail and they are not supposed to be called in ways other than from Solidity contracts (which does not require the ABI JSON, and knows how to encode those types).\r\n\r\nNon view/pure functions are excluded because the only way to call them is delegatecall. As [the comment above says](https://github.com/ethereum/solidity/issues/3409#issuecomment-360750870), this was done after we implemented [#3203](https://github.com/ethereum/solidity/pull/3203), which makes library functions check if they're being delegatecalled and revert if that's not the case. These function are technically there but are not really usable and there's no point including them. People would not be able to make external calls based on that ABI definition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1692387178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1692392002",
    "html_url": "https://github.com/ethereum/solidity/issues/14501#issuecomment-1692392002",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14501",
    "id": 1692392002,
    "node_id": "IC_kwDOAm_5kc5k39pC",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-24T20:53:06Z",
    "updated_at": "2023-08-24T20:53:06Z",
    "author_association": "NONE",
    "body": "But then it means that external tooling won't understand them, like the tenderly folks can't decode the call to show in the stacktrace. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1692392002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
