{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6495",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6495/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6495/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6495/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6495",
  "id": 430885734,
  "node_id": "MDU6SXNzdWU0MzA4ODU3MzQ=",
  "number": 6495,
  "title": "[Yul] Assert that AST is still valid every time after applying optimizer component",
  "user": {
    "login": "sifmelcara",
    "id": 10496191,
    "node_id": "MDQ6VXNlcjEwNDk2MTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/10496191?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sifmelcara",
    "html_url": "https://github.com/sifmelcara",
    "followers_url": "https://api.github.com/users/sifmelcara/followers",
    "following_url": "https://api.github.com/users/sifmelcara/following{/other_user}",
    "gists_url": "https://api.github.com/users/sifmelcara/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sifmelcara/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sifmelcara/subscriptions",
    "organizations_url": "https://api.github.com/users/sifmelcara/orgs",
    "repos_url": "https://api.github.com/users/sifmelcara/repos",
    "events_url": "https://api.github.com/users/sifmelcara/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sifmelcara/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    },
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-04-09T10:17:00Z",
  "updated_at": "2022-11-25T12:44:47Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In `libyul/optimiser/Suite.cpp`, we might want to do some \"sanity check\" every time after applying an optimizer component to AST.\r\n\r\nBy doing this we can ensure that every AST transformation is valid when running `solc`.\r\n\r\n(Inspired by #6492)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6495/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6495/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/481695478",
    "html_url": "https://github.com/ethereum/solidity/issues/6495#issuecomment-481695478",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6495",
    "id": 481695478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY5NTQ3OA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T13:41:02Z",
    "updated_at": "2019-04-10T13:57:21Z",
    "author_association": "MEMBER",
    "body": "Won't such a sanity check involve parsing the AST after each step, which is expensive? We could probably use this piece of code\r\n\r\nhttps://github.com/ethereum/solidity/blob/bf653b004eb1168ac84a7c0532ba9ea66c415d0b/test/tools/yulopti.cpp#L89-L114\r\n\r\nin here\r\n\r\nhttps://github.com/ethereum/solidity/blob/bf653b004eb1168ac84a7c0532ba9ea66c415d0b/test/libyul/YulOptimizerTest.cpp#L71\r\n\r\nand then add\r\n\r\n```\r\nif (!parse(m_obtainedResult))\r\n  return false;\r\n```\r\n\r\nhere\r\n\r\nhttps://github.com/ethereum/solidity/blob/bf653b004eb1168ac84a7c0532ba9ea66c415d0b/test/libyul/YulOptimizerTest.cpp#L274\r\n\r\nWhat do you think?\r\n\r\nP.S. Probably better to add an additional method such as `YulOptimizerTest::parseObtainedResult` that looks very much like `YulOptimizerTest::parse` with `s/m_source/m_obtainedResult/` and minus the assignment of resulting ast to private members.\r\n\r\nP.P.S. Doing sanity checking inside YulOptimizerTests is redundant because if a test input results in unparseable AST post optimization, it is going to fail that test (assuming the expectation is correctly encoded which is fair) regardless.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/481695478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/483258920",
    "html_url": "https://github.com/ethereum/solidity/issues/6495#issuecomment-483258920",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6495",
    "id": 483258920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzI1ODkyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-15T13:48:33Z",
    "updated_at": "2019-04-15T13:48:47Z",
    "author_association": "MEMBER",
    "body": "I think parsing is not really required, because we perform optimizer steps based on its memory representation. So I think the checks we can do would be those performed by the AsmAnalyzer.\r\n\r\nI would assume that the checks are optional and only performed e.g. during fuzzer runs, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/483258920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/483490565",
    "html_url": "https://github.com/ethereum/solidity/issues/6495#issuecomment-483490565",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6495",
    "id": 483490565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ5MDU2NQ==",
    "user": {
      "login": "sifmelcara",
      "id": 10496191,
      "node_id": "MDQ6VXNlcjEwNDk2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10496191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sifmelcara",
      "html_url": "https://github.com/sifmelcara",
      "followers_url": "https://api.github.com/users/sifmelcara/followers",
      "following_url": "https://api.github.com/users/sifmelcara/following{/other_user}",
      "gists_url": "https://api.github.com/users/sifmelcara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sifmelcara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sifmelcara/subscriptions",
      "organizations_url": "https://api.github.com/users/sifmelcara/orgs",
      "repos_url": "https://api.github.com/users/sifmelcara/repos",
      "events_url": "https://api.github.com/users/sifmelcara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sifmelcara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-16T02:49:25Z",
    "updated_at": "2019-04-16T02:49:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bshastry Sorry for the late reply. Yes it is expensive but probably worth it? Typically smart contracts are `< 1000` lines so the overhead should not be noticeable from the user side.\r\n\r\n@chriseth I agree. Using `AsmAnalyzer` makes sense.\r\n\r\n> I would assume that the checks are optional and only performed e.g. during fuzzer runs, right?\r\n\r\nAt minimum we should do this sanity check when fuzzing. Not sure if we should turn on the check by default though..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/483490565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
