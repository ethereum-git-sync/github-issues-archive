{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12513/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12513/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12513/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12513",
  "id": 1098394178,
  "node_id": "I_kwDOAm_5kc5BeCpC",
  "number": 12513,
  "title": "New keyword `pin` for fixed sparse storage layouts",
  "user": {
    "login": "thedavidmeister",
    "id": 629710,
    "node_id": "MDQ6VXNlcjYyOTcxMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/thedavidmeister",
    "html_url": "https://github.com/thedavidmeister",
    "followers_url": "https://api.github.com/users/thedavidmeister/followers",
    "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
    "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
    "repos_url": "https://api.github.com/users/thedavidmeister/repos",
    "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-01-10T21:11:56Z",
  "updated_at": "2023-03-29T12:06:14Z",
  "closed_at": "2023-03-29T12:06:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nApologies if this has already been requested, wasn't sure exactly what to search for.\r\n\r\nSome kind of `pin` keyword for storage would make contracts using delegate call easier to work with.\r\n\r\nSolidity sequentially orders storage slots based on the lexical ordering of things in in storage, including across contracts.\r\n\r\nThis means that working on projects where the storage layout changes over time requires some awkwardness like https://docs.openzeppelin.com/contracts/4.x/api/utils#StorageSlot and https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/token/ERC20/ERC20Upgradeable.sol#L362\r\n\r\nThe `StorageSlot` from OZ takes a hardcoded hash like:\r\n\r\n```\r\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n```\r\n\r\nTo put primitives like `address`, `bool`, `bytes32` and `uint256` into a known _non-sequential_ slot.\r\n\r\nSolidity itself could do the same thing but better as it could support mapping and everything else, which would then also remove the need for \"gaps\" where the contract forces sequential spacing between storage locations by putting say 50 unused slots in every contract \"just in case\".\r\n\r\nCurrent:\r\n\r\n```\r\ncontract Foo {\r\n  uint256 private foo;\r\n  mapping (address => uint256) private bar;\r\n}\r\n```\r\n\r\nPinned:\r\n\r\n```\r\ncontract Foo {\r\n    uint256 private foo pin \"eip1967.proxy.rollback\"; // foo is at the rollback slot as above rather than 0\r\n    mapping (address => uint256) private bar pin \"something.else\"; // normal mapping logic with hashes of keys but sans sequential offset\r\n}\r\n```\r\n\r\nBonus if having multiple things with the same pin would work the same as current sequential logic, i.e. a sequential offset from the start of the pin location, to support packing etc. as per normal solidity\r\n\r\nPinned packed:\r\n\r\n```\r\ncontract Foo {\r\n   uint16 private foo pin \"some.pin\";\r\n   uint16 private bar pin \"some.pin\"; // bar packs with foo as they share the same pin, doesn't overwrite\r\n}\r\n```\r\n\r\nNot having the `pin` keyword falls back to slot `0` which behaves exactly as solidity does now. Also integer literals for the pin are supported so e.g. hex hashes work fine too.\r\n\r\n```\r\ncontract Foo {\r\n  uint256 private foo pin 0;\r\n  uint256 private bar; // shares the pin with foo as `0` is the fallback\r\n}\r\n```\r\n\r\n## Motivation\r\n\r\nSo one way to interject new storage across versions (e.g. think of inheritance graphs where append-only is not possible) would be to  have the same pin for everything that was first deployed at the same time.\r\n\r\nFirst deploy:\r\n\r\n```\r\ncontract V1 {\r\n  uint foo pin \"v1\";\r\n  uint bar pin \"v1\";\r\n}\r\n```\r\n\r\nSecond deploy:\r\n\r\n```\r\ncontract V2 {\r\n  uint foo pin \"v1\";\r\n  uint baz pin \"v2\";\r\n  uint bar pin \"v1\";\r\n}\r\n```\r\n\r\nWithout pinning, the addition of `baz` pushes `bar` down, but with pinning `bar` remains in the same place, in the second slot after `foo` at their shared pin.\r\n\r\nAlternatively, the pins could be named uniquely but the same within a base contract across all versions, so adding additional storage to the base contract would not impact any other contract that inherits from it. This is basically the \"gap\" strategy but with the sparseness (never run out of slots) of hashing and automatically managed by solidity rather than a hand-hacked 50 item array.\r\n\r\nFirst deploy:\r\n\r\n```\r\ncontract Av1 {\r\n  uint foo pin \"A\";\r\n}\r\n\r\ncontract Bv1 {\r\n  uint foo pin \"B\":\r\n}\r\n\r\ncontract C is A, B { }\r\n```\r\n\r\nSecond deploy:\r\n\r\n```\r\ncontract Av2 {\r\n  uint foo pin \"A\";\r\n  uint bar pin \"A\";\r\n}\r\n\r\ncontract Bv1 {\r\n  uint foo pin \"B\";\r\n}\r\n\r\ncontract C is A, B { }\r\n```\r\n\r\nThere's probably other good conventions and strategies that make pinning useful, but this is the basic idea.\r\n\r\n## Specification\r\n\r\nNew keyword `pin` for any/all storage.\r\n\r\n`pin` must be followed by either an integer literal or string, the latter is hashed to normalize it to an integer.\r\n\r\nIf `pin` is absent, fallback to `0`.\r\n\r\nThe pin integer defines a new space/offset within/from which sequential storage behaves exactly as it does now re: packing, hashing mapping keys, etc. across inheritance, it's all the same as it is now but from the `pin` defined offset.\r\n\r\nAll offsets are computed at compile time so as not to introduce additional gas costs.\r\n\r\n## Backwards Compatibility\r\n\r\nIf `pin` is absent fallback to `0`.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12513/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12513/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009880844",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1009880844",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1009880844,
    "node_id": "IC_kwDOAm_5kc48MY8M",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T11:41:24Z",
    "updated_at": "2022-01-11T11:41:24Z",
    "author_association": "MEMBER",
    "body": "Oh yes, this, resp. similar requests have come up before, but there is no consensus on any of it yet, so thank you very much for the suggestion!\r\nRelated older issues are (maybe among others): https://github.com/ethereum/solidity/issues/4519 https://github.com/ethereum/solidity/issues/597 https://github.com/ethereum/solidity/issues/8353 https://github.com/ethereum/solidity/issues/8490",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009880844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009955812",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1009955812",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1009955812,
    "node_id": "IC_kwDOAm_5kc48MrPk",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T13:17:33Z",
    "updated_at": "2022-01-11T13:17:33Z",
    "author_association": "NONE",
    "body": "yes it seems to me like the upgrade problems are introduced by design choices in solidity, not fundamental to the evm, so i'm not surprised it has come up before :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009955812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009973312",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1009973312",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1009973312,
    "node_id": "IC_kwDOAm_5kc48MvhA",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T13:38:58Z",
    "updated_at": "2022-01-11T13:39:45Z",
    "author_association": "NONE",
    "body": "so the obvious next question is, how to reach consensus @ekpyron because these conversations date back 6 years, how are they getting stalled?\r\n\r\nis this a \"PR welcome\" situation, or is there something blocking code?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009973312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010013053",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1010013053",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1010013053,
    "node_id": "IC_kwDOAm_5kc48M5N9",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T14:23:44Z",
    "updated_at": "2022-01-11T14:23:44Z",
    "author_association": "MEMBER",
    "body": "The main issue is to reach a decision about whether and how this should be allowed, to what extend and with what concrete syntax - once a decision was reached about all that, it would probably be rather trivial and quick to implement this. But unless there is agreement about those design questions, it won't happen.\r\nSo at this stage a PR would not help as much as further commenting on the relevant issues and trying to get people to agree on one approach.\r\n\r\nIt got stalled in the past because there's quite different opinions on how this should be done, resp. whether it should be done at all or whether mechanisms like using inline assembly to synthesize storage pointers are to be considered sufficient.\r\n\r\nWe can try to prioritize this again and try to get to a decision - but I'm sure @chriseth will want to weigh in on this and he's on vacation until February.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010013053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010293538",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1010293538",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1010293538,
    "node_id": "IC_kwDOAm_5kc48N9si",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T19:31:20Z",
    "updated_at": "2022-01-11T19:31:20Z",
    "author_association": "NONE",
    "body": "@ekpyron of course there are workarounds like assembly, also the problem is introduced by a design decision in solidity so it feels like something solidity should handle",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010293538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010643659",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1010643659",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1010643659,
    "node_id": "IC_kwDOAm_5kc48PTLL",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T05:14:31Z",
    "updated_at": "2022-01-12T05:14:31Z",
    "author_association": "NONE",
    "body": "@ekpyron  so maybe the steps are like:\r\n\r\n1. agree that contract upgradeability issues described above are due to a leaky abstraction in solidity to be fixed rather than worked around with hand rolled \"gaps\" or inline assembly\r\n2. agree that an acceptable solution exists somewhere in the last 6 years of discourse\r\n3. agree on some criteria that allow us to definitively exclude some proposed options\r\n4. some kind of decision making process re: the final shortlist\r\n5. implement the solution",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010643659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010879987",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1010879987",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1010879987,
    "node_id": "IC_kwDOAm_5kc48QM3z",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T10:15:28Z",
    "updated_at": "2022-01-12T10:15:28Z",
    "author_association": "MEMBER",
    "body": "Something like that, yes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1010879987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1021853334",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1021853334",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1021853334,
    "node_id": "IC_kwDOAm_5kc486D6W",
    "user": {
      "login": "wranai",
      "id": 1048544,
      "node_id": "MDQ6VXNlcjEwNDg1NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1048544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wranai",
      "html_url": "https://github.com/wranai",
      "followers_url": "https://api.github.com/users/wranai/followers",
      "following_url": "https://api.github.com/users/wranai/following{/other_user}",
      "gists_url": "https://api.github.com/users/wranai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wranai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wranai/subscriptions",
      "organizations_url": "https://api.github.com/users/wranai/orgs",
      "repos_url": "https://api.github.com/users/wranai/repos",
      "events_url": "https://api.github.com/users/wranai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wranai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T04:34:27Z",
    "updated_at": "2022-01-26T04:44:03Z",
    "author_association": "NONE",
    "body": "I came here to request the same thing. My idea was to add a more generic `@ slot`  modifier at the end of the declaration, something like:\r\n\r\n```solidity\r\ncontract Foo {\r\n    uint256 x; // slot 0 as usual\r\n    uint256 private foo = 0x123 @ keccak256(\"eip1967.proxy.rollback\") - 1; // foo is at the rollback slot, exempt from the sequential numbering\r\n    mapping (address => uint256) private bar; // continued with slot 1\r\n}\r\n```\r\n\r\nThe compiler should pay attention to skip the numbers that are specified, or maybe `slot` could be restricted to numbers larger than e.g. 2**32 to avoid clashes.\r\n\r\nEDIT: And now I just saw it's **exactly** what was suggested here: https://github.com/ethereum/solidity/issues/597#221609070; I guess it's an intuitive way to go about it multiple people thought of the same thing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1021853334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1479449610",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1479449610",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1479449610,
    "node_id": "IC_kwDOAm_5kc5YLpwK",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-22T12:05:16Z",
    "updated_at": "2023-03-22T12:05:16Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1479449610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488478509",
    "html_url": "https://github.com/ethereum/solidity/issues/12513#issuecomment-1488478509",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12513",
    "id": 1488478509,
    "node_id": "IC_kwDOAm_5kc5YuGEt",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-29T12:06:12Z",
    "updated_at": "2023-03-29T12:06:12Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488478509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
