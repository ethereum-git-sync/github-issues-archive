{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9393",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9393/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9393/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9393/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9393",
  "id": 655809766,
  "node_id": "MDU6SXNzdWU2NTU4MDk3NjY=",
  "number": 9393,
  "title": "[SMTChecker] CHC counterexample: report subcalls (internal and reentrant)",
  "user": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-07-13T12:25:37Z",
  "updated_at": "2021-01-15T15:47:13Z",
  "closed_at": "2021-01-15T15:47:13Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\npragma experimental SMTChecker;\r\n\r\nabstract contract D {\r\n\tfunction d() external virtual;\r\n}\r\n\r\ncontract C {\r\n\tuint x;\r\n\tD d;\r\n\r\n\tfunction inc() public {\r\n\t\t++x;\r\n\t}\r\n\r\n\tfunction f() public {\r\n\t\td.d();\r\n\t\tassert(x < 10);\r\n\t}\r\n}\r\n```\r\n\r\nCEX:\r\n```\r\nWarning: Assertion violation happens here\r\n  --> ../test/libsolidity/smtCheckerTests/external_calls/external_inc.sol:17:3:\r\n   |\r\n17 | \t\tassert(x < 10);\r\n   | \t\t^^^^^^^^^^^^^^\r\nNote:  for:\r\nx = 10, d = 0\r\n\r\nTransaction trace:\r\nconstructor()\r\nState: x = 0, d = 0\r\nf()\r\nState: x = 2, d = 0\r\nf()\r\nState: x = 4, d = 0\r\nf()\r\nState: x = 6, d = 0\r\nf()\r\n```\r\n\r\nAs you can see, the state is modified according to `D.d` calling `C.inc` twice, which is not shown in this cex. However, this information is present in the counterexample graph (in the `nondet` predicates):\r\n```\r\nnondet_interface_C_32_0(0, 0, 2, 0) -> nondet_interface_C_32_0(0, 0, 1, 0)\r\nnondet_interface_C_32_0(0, 0, 2, 0) -> summary_1_function_inc__16_32_0(0, 1, 0, 2, 0)\r\nsummary_2_function_f__31_32_0(0, 4, 0, 6, 0) -> nondet_interface_C_32_0(4, 0, 6, 0)\r\nsummary_2_function_f__31_32_0(0, 4, 0, 6, 0) -> block_6_f_30_32_0(0, 4, 0, 4, 0)\r\nquery!31() -> error_C_32_1()\r\nnondet_interface_C_32_0(8, 0, 9, 0) -> nondet_interface_C_32_0(8, 0, 8, 0)\r\nnondet_interface_C_32_0(8, 0, 9, 0) -> summary_1_function_inc__16_32_0(0, 8, 0, 9, 0)\r\nnondet_interface_C_32_0(6, 0, 8, 0) -> nondet_interface_C_32_0(6, 0, 7, 0)\r\nnondet_interface_C_32_0(6, 0, 8, 0) -> summary_1_function_inc__16_32_0(0, 7, 0, 8, 0)\r\nsummary_1_function_inc__16_32_0(0, 8, 0, 9, 0) -> block_4_inc_15_32_0(0, 8, 0, 8, 0)\r\nsummary_2_function_f__31_32_0(1, 6, 0, 10, 0) -> nondet_interface_C_32_0(6, 0, 10, 0)\r\nsummary_2_function_f__31_32_0(1, 6, 0, 10, 0) -> block_6_f_30_32_0(0, 6, 0, 6, 0)\r\nnondet_interface_C_32_0(6, 0, 7, 0) -> nondet_interface_C_32_0(6, 0, 6, 0)\r\nnondet_interface_C_32_0(6, 0, 7, 0) -> summary_1_function_inc__16_32_0(0, 6, 0, 7, 0)\r\nnondet_interface_C_32_0(4, 0, 5, 0) -> nondet_interface_C_32_0(4, 0, 4, 0)\r\nnondet_interface_C_32_0(4, 0, 5, 0) -> summary_1_function_inc__16_32_0(0, 4, 0, 5, 0)\r\nsummary_1_function_inc__16_32_0(0, 2, 0, 3, 0) -> block_4_inc_15_32_0(0, 2, 0, 2, 0)\r\ninterface_C_32_0(4, 0) -> summary_2_function_f__31_32_0(0, 2, 0, 4, 0)\r\ninterface_C_32_0(4, 0) -> interface_C_32_0(2, 0)\r\ninterface_C_32_0(6, 0) -> summary_2_function_f__31_32_0(0, 4, 0, 6, 0)\r\ninterface_C_32_0(6, 0) -> interface_C_32_0(4, 0)\r\ninterface_C_32_0(2, 0) -> summary_2_function_f__31_32_0(0, 0, 0, 2, 0)\r\ninterface_C_32_0(2, 0) -> interface_C_32_0(0, 0)\r\nnondet_interface_C_32_0(2, 0, 3, 0) -> nondet_interface_C_32_0(2, 0, 2, 0)\r\nnondet_interface_C_32_0(2, 0, 3, 0) -> summary_1_function_inc__16_32_0(0, 2, 0, 3, 0)\r\nsummary_2_function_f__31_32_0(0, 2, 0, 4, 0) -> nondet_interface_C_32_0(2, 0, 4, 0)\r\nsummary_2_function_f__31_32_0(0, 2, 0, 4, 0) -> block_6_f_30_32_0(0, 2, 0, 2, 0)\r\nnondet_interface_C_32_0(0, 0, 1, 0) -> nondet_interface_C_32_0(0, 0, 0, 0)\r\nnondet_interface_C_32_0(0, 0, 1, 0) -> summary_1_function_inc__16_32_0(0, 0, 0, 1, 0)\r\nsummary_2_function_f__31_32_0(1, 8, 0, 10, 0) -> nondet_interface_C_32_0(8, 0, 10, 0)\r\nsummary_2_function_f__31_32_0(1, 8, 0, 10, 0) -> block_6_f_30_32_0(0, 8, 0, 8, 0)\r\nnondet_interface_C_32_0(6, 0, 10, 0) -> nondet_interface_C_32_0(6, 0, 8, 0)\r\nnondet_interface_C_32_0(6, 0, 10, 0) -> summary_2_function_f__31_32_0(1, 8, 0, 10, 0)\r\ninterface_C_32_0(0, 0) -> summary_constructor_C_32_0(0, 0, 0)\r\nsummary_1_function_inc__16_32_0(0, 3, 0, 4, 0) -> block_4_inc_15_32_0(0, 3, 0, 3, 0)\r\nsummary_2_function_f__31_32_0(0, 0, 0, 2, 0) -> nondet_interface_C_32_0(0, 0, 2, 0)\r\nsummary_2_function_f__31_32_0(0, 0, 0, 2, 0) -> block_6_f_30_32_0(0, 0, 0, 0, 0)\r\nsummary_1_function_inc__16_32_0(0, 0, 0, 1, 0) -> block_4_inc_15_32_0(0, 0, 0, 0, 0)\r\nsummary_1_function_inc__16_32_0(0, 4, 0, 5, 0) -> block_4_inc_15_32_0(0, 4, 0, 4, 0)\r\nsummary_1_function_inc__16_32_0(0, 5, 0, 6, 0) -> block_4_inc_15_32_0(0, 5, 0, 5, 0)\r\nerror_C_32_1() -> summary_2_function_f__31_32_0(1, 6, 0, 10, 0)\r\nerror_C_32_1() -> interface_C_32_0(6, 0)\r\nsummary_1_function_inc__16_32_0(0, 1, 0, 2, 0) -> block_4_inc_15_32_0(0, 1, 0, 1, 0)\r\nsummary_1_function_inc__16_32_0(0, 6, 0, 7, 0) -> block_4_inc_15_32_0(0, 6, 0, 6, 0)\r\nnondet_interface_C_32_0(2, 0, 4, 0) -> nondet_interface_C_32_0(2, 0, 3, 0)\r\nnondet_interface_C_32_0(2, 0, 4, 0) -> summary_1_function_inc__16_32_0(0, 3, 0, 4, 0)\r\nsummary_1_function_inc__16_32_0(0, 7, 0, 8, 0) -> block_4_inc_15_32_0(0, 7, 0, 7, 0)\r\nsummary_1_function_inc__16_32_0(0, 9, 0, 10, 0) -> block_4_inc_15_32_0(0, 9, 0, 9, 0)\r\nnondet_interface_C_32_0(4, 0, 6, 0) -> nondet_interface_C_32_0(4, 0, 5, 0)\r\nnondet_interface_C_32_0(4, 0, 6, 0) -> summary_1_function_inc__16_32_0(0, 5, 0, 6, 0)\r\nnondet_interface_C_32_0(8, 0, 10, 0) -> nondet_interface_C_32_0(8, 0, 9, 0)\r\nnondet_interface_C_32_0(8, 0, 10, 0) -> summary_1_function_inc__16_32_0(0, 9, 0, 10, 0)\r\n```\r\n\r\nIdeally, the reported cex would be similar to:\r\n```\r\nWarning: Assertion violation happens here\r\n  --> ../test/libsolidity/smtCheckerTests/external_calls/external_inc.sol:17:3:\r\n   |\r\n17 | \t\tassert(x < 10);\r\n   | \t\t^^^^^^^^^^^^^^\r\nNote:  for:\r\nx = 10, d = 0\r\n\r\nTransaction trace:\r\nconstructor()\r\nState: x = 0, d = 0\r\nf()\r\n--inc()\r\n--inc()\r\nState: x = 2, d = 0\r\nf()\r\n--inc()\r\n--inc()\r\nState: x = 4, d = 0\r\nf()\r\n--inc()\r\n--inc()\r\nState: x = 6, d = 0\r\nf()\r\n--inc()\r\n--inc()\r\n--inc()\r\n--inc()\r\n```",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9393/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9393/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749011654",
    "html_url": "https://github.com/ethereum/solidity/issues/9393#issuecomment-749011654",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9393",
    "id": 749011654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTAxMTY1NA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T14:49:52Z",
    "updated_at": "2020-12-21T14:49:52Z",
    "author_association": "MEMBER",
    "body": "Besides that, it would be good to know which external calls created which reentrant calls:\r\n```\r\ncontract C {\r\n    uint x;\r\n    function inc() public { require(x < 1000); ++x; }\r\n    function f(D d) public {\r\n        x = 50;\r\n        d.g();\r\n        if (cond)\r\n            d.h();\r\n        assert(x <= 60);\r\n    }\r\n}\r\n```\r\nIf `cond` depends on `C`'s state which can be modified by `d.g()`, it's important to know exactly what `d.g()` and `d.h()` did in the counterexample.\r\n\r\nThis can potentially be done by adding simple rules for each of this externally called functions, where they add the `nondet_interface` constraints instead of adding those directly at the call point",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749011654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/761019341",
    "html_url": "https://github.com/ethereum/solidity/issues/9393#issuecomment-761019341",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9393",
    "id": 761019341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTAxOTM0MQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-15T15:47:13Z",
    "updated_at": "2021-01-15T15:47:13Z",
    "author_association": "MEMBER",
    "body": "Implemented in https://github.com/ethereum/solidity/pull/10741",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/761019341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
