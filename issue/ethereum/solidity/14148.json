{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14148",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14148/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14148/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14148/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14148",
  "id": 1678586909,
  "node_id": "I_kwDOAm_5kc5kDTQd",
  "number": 14148,
  "title": "import { ... } from \"...\" syntax does not know all objects even if it should",
  "user": {
    "login": "migoldfinger",
    "id": 106750422,
    "node_id": "U_kgDOBlzh1g",
    "avatar_url": "https://avatars.githubusercontent.com/u/106750422?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/migoldfinger",
    "html_url": "https://github.com/migoldfinger",
    "followers_url": "https://api.github.com/users/migoldfinger/followers",
    "following_url": "https://api.github.com/users/migoldfinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/migoldfinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/migoldfinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/migoldfinger/subscriptions",
    "organizations_url": "https://api.github.com/users/migoldfinger/orgs",
    "repos_url": "https://api.github.com/users/migoldfinger/repos",
    "events_url": "https://api.github.com/users/migoldfinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/migoldfinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-21T14:06:10Z",
  "updated_at": "2023-04-21T14:51:02Z",
  "closed_at": "2023-04-21T14:49:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "With this setup\r\nIERC20.sol\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20\r\n{\r\n...\r\n}\r\n```\r\n\r\nIERC20Metadata.sol\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport { IERC20 } from \"./IERC20.sol\";\r\n\r\ninterface IERC20Metadata is IERC20\r\n{\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction decimals() external pure returns (uint8);\r\n}\r\n```\r\n\r\nERC20.sol\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport { IERC20Metadata } from \"./IERC20Metadata.sol\";\r\n\r\ncontract ERC20 is IERC20Metadata\r\n{\r\n...\r\n}\r\n```\r\n\r\nMyToken.sol\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport { IERC20Metadata, IERC20, ERC20 } from \"./ERC20.sol\"; // Error on this line\r\n\r\ncontract MyToken is ERC20\r\n{\r\n...\r\n}\r\n```\r\nOn the import line IERC20Metadata is known, ERC20 is also known. But IERC20 is unknown and raises an error.\r\nThis is unexpected since IERC20 is imported in the IERC20Metadata file.\r\n\r\nExpected Result\r\nOption 1:\r\nWhen importing specific contracts or interfaces the compiler has to go down all nested imports to look for the object. Therefore IERC20 should be valid in this example.\r\nOption 2:\r\nThe Compiler does not follow nested imports. In this case IERC20 and IERC20Metadata should fail because they are not directly included in the imported file.\r\n\r\nThe current behavior seems to be that only nested imports that are listed in the imported file are followed. But for consistency it should follow all nested imports including the ones nested in nested imports or none.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14148/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1517951691",
    "html_url": "https://github.com/ethereum/solidity/issues/14148#issuecomment-1517951691",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14148",
    "id": 1517951691,
    "node_id": "IC_kwDOAm_5kc5aehrL",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T14:49:53Z",
    "updated_at": "2023-04-21T14:51:02Z",
    "author_association": "MEMBER",
    "body": "That's by design. In `ERC20.sol` you do not import `IERC20` so it's not present in the module namespace and, as a consequence, another module cannot import it from that namespace. Contracts that other contracts inherit from are not automatically available in the namespace.\r\n\r\nIf you want it to be in the namespace, `ERC20.sol` has to explicitly import it:\r\n```solidity\r\nimport { IERC20Metadata, IERC20 } from \"./IERC20Metadata.sol\";\r\n```\r\nor just import all names:\r\n```solidity\r\nimport \"./IERC20Metadata.sol\";\r\n```\r\n\r\nThe way it works currently makes perfect sense to me and I don't think it should be changed. In the same vein, you would not expect to have e.g. the type of a struct field necessarily available just because you can access that struct or its type. You can use the field but not use its type unless you explicitly import that type (assuming it's not a built-in type).  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1517951691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
