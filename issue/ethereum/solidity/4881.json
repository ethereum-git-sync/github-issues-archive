{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4881",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4881/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4881/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4881/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4881",
  "id": 356481171,
  "node_id": "MDU6SXNzdWUzNTY0ODExNzE=",
  "number": 4881,
  "title": "memory never freed, can be fixed by insert two instructions",
  "user": {
    "login": "liangdzou",
    "id": 1409883,
    "node_id": "MDQ6VXNlcjE0MDk4ODM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/liangdzou",
    "html_url": "https://github.com/liangdzou",
    "followers_url": "https://api.github.com/users/liangdzou/followers",
    "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
    "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
    "organizations_url": "https://api.github.com/users/liangdzou/orgs",
    "repos_url": "https://api.github.com/users/liangdzou/repos",
    "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/liangdzou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-09-03T12:11:52Z",
  "updated_at": "2018-09-05T11:53:23Z",
  "closed_at": "2018-09-04T18:10:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nWrite a simple example as follows.\r\n```\r\n  1 pragma solidity ^0.4.15;                                                        \r\n  2 contract Hello {                                                                \r\n  3   function f() public {                                                         \r\n  4     int[10] memory x;                                                                                                                                                                                                                                                     \r\n  5   }                                                                             \r\n  6 }                                                                               \r\n```\r\nI only found one place changes the \"free memory pointer\" in the generated ASM.\r\n\r\n```\r\n 81       0x140\r\n 82       mload(0x40)                                                               \r\n 83       swap1                                                                     \r\n 84       dup2                                                                      \r\n 85       add                                                                       \r\n 86       0x40                                                                      \r\n 87       mstore                                                                    \r\n```\r\n\r\nSo, the memory is never freed.\r\nThis can be fixed by insert \"mload\" at the beginning of a function call and \"mstore\" at the end of the function call.\r\n\r\n## Motivation\r\n\r\nCurrently, Solidity does not free memory automatically. I have tried a few examples, the ASM code generated by Solidity never subtracts the \"free memory pointer\" in memory location 0x40. This can be fixed by insert two instructions.\r\n\r\n## Specification\r\n\r\nInsert one instruction \"mload 0x40\" at the beginning of a function call and store it back to \"free memory pointer\" by \"mstore 0x40 value\".\r\nThe cost is very low and actually can save lots of memory. I think at least this can be an optimization option.\r\n\r\n## Backwards Compatibility\r\n\r\nThis change does not bring any backwards compatibility problem.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4881/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4881/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418465581",
    "html_url": "https://github.com/ethereum/solidity/issues/4881#issuecomment-418465581",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4881",
    "id": 418465581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQ2NTU4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T18:10:56Z",
    "updated_at": "2018-09-04T18:10:56Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, this is much more tricky, since we do not track the lifetime of memory objects. If a function only has local variables, this could be done, but even if the function only receives a single memory object, we cannot assume that the free memory pointer can be reset.\r\n\r\nSince memory is usually short-lived due to the gas constraints, this should not be a problem for now, but we will revisit this when we implement more fine-grained control over memory objects with the introduction of the mutable and immutable keyword.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418465581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418702970",
    "html_url": "https://github.com/ethereum/solidity/issues/4881#issuecomment-418702970",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4881",
    "id": 418702970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODcwMjk3MA==",
    "user": {
      "login": "liangdzou",
      "id": 1409883,
      "node_id": "MDQ6VXNlcjE0MDk4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1409883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liangdzou",
      "html_url": "https://github.com/liangdzou",
      "followers_url": "https://api.github.com/users/liangdzou/followers",
      "following_url": "https://api.github.com/users/liangdzou/following{/other_user}",
      "gists_url": "https://api.github.com/users/liangdzou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liangdzou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liangdzou/subscriptions",
      "organizations_url": "https://api.github.com/users/liangdzou/orgs",
      "repos_url": "https://api.github.com/users/liangdzou/repos",
      "events_url": "https://api.github.com/users/liangdzou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liangdzou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T11:53:23Z",
    "updated_at": "2018-09-05T11:53:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMHO, the functions that return memory reference cannot reset the free memory pointer. This is known statically, so, we can insert those instructions for the functions that do not return memory references. Even if one function returns memory reference, the memory can be freed by the first ancestor that does not return memory reference. I think this will also help to save some gas.\r\n\r\nBy the way, can we implement the returned memory by allocating the memory by its parent an pass by reference?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/418702970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
