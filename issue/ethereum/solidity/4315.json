{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4315/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4315/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4315/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4315",
  "id": 333534167,
  "node_id": "MDU6SXNzdWUzMzM1MzQxNjc=",
  "number": 4315,
  "title": "Invalid struct initialization leads to unexpected behavior",
  "user": {
    "login": "phiferd",
    "id": 25631,
    "node_id": "MDQ6VXNlcjI1NjMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/phiferd",
    "html_url": "https://github.com/phiferd",
    "followers_url": "https://api.github.com/users/phiferd/followers",
    "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
    "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
    "organizations_url": "https://api.github.com/users/phiferd/orgs",
    "repos_url": "https://api.github.com/users/phiferd/repos",
    "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
    "received_events_url": "https://api.github.com/users/phiferd/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-06-19T06:25:26Z",
  "updated_at": "2018-06-19T23:52:24Z",
  "closed_at": "2018-06-19T16:44:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "@mustafa92348 (attacker) posted a contract with the following code to the gitter tutorials channel:\r\n\r\nSCAM\r\n\r\n```\r\npragma solidity ^0.4.24;\r\n\r\n// To play, call the play() method with the guessed number.  Bet price: 0.1 ether\r\n\r\ncontract CryptoRoulette {\r\n\r\n    uint256 public secretNumber;\r\n    uint256 public lastPlayed;\r\n    uint256 public betPrice = 0.1 ether;\r\n    address public ownerAddr;\r\n\r\n    struct Game {\r\n        address player;\r\n        uint256 number;\r\n    }\r\n    Game[] public gamesPlayed;\r\n\r\n    function CryptoRoulette() public {\r\n        ownerAddr = msg.sender;\r\n        generateNewRandom();\r\n    }\r\n\r\n    function generateNewRandom() internal {\r\n        // initialize secretNumber with a value between 0 and 15\r\n        secretNumber = uint8(sha3(now, block.blockhash(block.number-1))) % 16;\r\n    }\r\n\r\n    function play(uint256 number) payable public {\r\n        require(msg.value >= betPrice && number < 16);\r\n\r\n        Game game;\r\n        game.player = msg.sender;  // <-- this assignment changes secretNumber\r\n        game.number = number;\r\n        gamesPlayed.push(game);\r\n\r\n        if (number == secretNumber) {\r\n            // win!\r\n            if(msg.value*15>this.balance){\r\n                msg.sender.transfer(this.balance);\r\n            }\r\n            else{\r\n                msg.sender.transfer(msg.value*15);\r\n            }\r\n        }\r\n\r\n        generateNewRandom();\r\n        lastPlayed = now;\r\n    }\r\n\r\n    function kill() public {\r\n        if (msg.sender == ownerAddr && now > lastPlayed + 1 days) {\r\n            suicide(msg.sender);\r\n        }\r\n    }\r\n\r\n    function() public payable { }\r\n}\r\n```\r\n\r\nThe code appears to be a naive attempt at a lottery contract.  The obvious issue is that the \"secretNumber\" field is visible to everyone. The contract is initialized with 1 ETH, and is intended to entice people into playing under the assumption that they can make some easy ETH (or help the the newbie by rescuing his ETH).  However, they cannot win.\r\n\r\n@MicahZoltu noticed that the assignment on line 32 is what causes the trouble:\r\n\r\n```\r\nGame game;\r\ngame.player = msg.sender;\r\n```\r\nThe effect of this statement is to *change the secretNumber* stored in the first slot of the contract, making it impossible to win the game.\r\n\r\nThe issue appears to be that initializing game as `Game game;` creates an object that shares ~memory~ storage with the contract itself.  So, assigning `game.player = msg.sender` overwrites the `secretNumber` field in the CryptoRoulette contract.  This should not be possible.\r\n\r\nI think this is the right place to open this issue, but feel free to redirect me if it belongs somewhere else.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4315/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4315/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398293761",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398293761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398293761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODI5Mzc2MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T06:53:08Z",
    "updated_at": "2018-06-19T06:53:08Z",
    "author_association": "MEMBER",
    "body": "Solidity does give a compiler warning, but such warnings do not show up in etherscan.  One option would be to make etherscan present compiler warnings, though in this case it feels like the compiler shouldn't allow assignment to uninitialized local storage variables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398293761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398297377",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398297377",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398297377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODI5NzM3Nw==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T07:09:03Z",
    "updated_at": "2018-06-19T07:09:03Z",
    "author_association": "NONE",
    "body": "Even showing the warning probably wouldn't help much. Is there any use case where accessing an uninitialized storage pointer makes sense?  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398297377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398307466",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398307466",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398307466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODMwNzQ2Ng==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T07:49:03Z",
    "updated_at": "2018-06-19T07:49:03Z",
    "author_association": "MEMBER",
    "body": "No, but it can be difficult to statically prove that the variable is initialized before being used in all code paths.  I think for Solidity, security should be king so if the analyzer cannot prove that the variable _will_ be initialized before being used then it should error instead of warn.  Curious to hear if someone feels that is too extreme.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398307466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398316781",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398316781",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398316781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODMxNjc4MQ==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T08:23:10Z",
    "updated_at": "2018-06-19T08:23:10Z",
    "author_association": "NONE",
    "body": "If it can be handled at compile time, that would be great.  However, I think the code above should throw an exception at runtime, which should be easier to detect.  \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398316781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398466651",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398466651",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398466651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQ2NjY1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T16:44:51Z",
    "updated_at": "2018-06-19T16:44:51Z",
    "author_association": "MEMBER",
    "body": "I think it would be a good idea for etherscan to highlight any contract that compiles with warnings as potentially malicious. Even if people use external libraries that are not up to date with recent security best practices. If they want random users to use their code and trust that it operates correctly, they have to put the additional effort into that and update the library's code.\r\n\r\nConcerning the issue at hand: The warning will turn into an error with the next version, so I consider this issue solved.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398466651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398471730",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398471730",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398471730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQ3MTczMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T17:00:24Z",
    "updated_at": "2018-06-19T17:00:24Z",
    "author_association": "MEMBER",
    "body": "The warning in question is:\r\n```\r\n4315.sol:31:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory game'?\r\n        Game game;\r\n        ^-------^\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398471730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398579929",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398579929",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398579929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU3OTkyOQ==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T23:46:11Z",
    "updated_at": "2018-06-19T23:46:28Z",
    "author_association": "NONE",
    "body": "Thanks @chriseth .  Can you clarify, would the following compile and have the same effect?\r\n\r\n```\r\nGame storage game;\r\ngame.player = msg.sender;  // <-- this assignment changes secretNumber\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398579929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398580870",
    "html_url": "https://github.com/ethereum/solidity/issues/4315#issuecomment-398580870",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4315",
    "id": 398580870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU4MDg3MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T23:52:13Z",
    "updated_at": "2018-06-19T23:52:24Z",
    "author_association": "MEMBER",
    "body": "That is still an uninitialised pointer reporting the same warning. Also one can test this in Remix IDE with latest release (should receive warnings for the above). Soon one of the nightlies will report it as an error though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398580870/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
