{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11629/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11629/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11629/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11629",
  "id": 938982981,
  "node_id": "MDU6SXNzdWU5Mzg5ODI5ODE=",
  "number": 11629,
  "title": "[CLI] Report errors for command line options that have no effect",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1012613901,
      "node_id": "MDU6TGFiZWwxMDEyNjEzOTAx",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/easy%20difficulty",
      "name": "easy difficulty",
      "color": "0b3f89",
      "default": false,
      "description": ""
    },
    {
      "id": 3515010024,
      "node_id": "LA_kwDOAm_5kc7Rgsvo",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/good%20first%20issue%20candidate",
      "name": "good first issue candidate",
      "color": "91B44D",
      "default": false,
      "description": "Could be a \"good first issue\" but something is blocking it or it has open questions."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "Midhun07",
    "id": 6437979,
    "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Midhun07",
    "html_url": "https://github.com/Midhun07",
    "followers_url": "https://api.github.com/users/Midhun07/followers",
    "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
    "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
    "organizations_url": "https://api.github.com/users/Midhun07/orgs",
    "repos_url": "https://api.github.com/users/Midhun07/repos",
    "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Midhun07/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2021-07-07T14:57:52Z",
  "updated_at": "2022-12-05T19:16:46Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Abstract\r\nThe compiler is pretty lax about command-line options whose values it does not use and just ignores many of them. It should report errors instead.\r\n\r\nOver time we've started adding checks against this (e.g. #9075, #9364) they they're still very incomplete.\r\n\r\n## Motivation\r\nNot getting an error when an option is invalid makes it harder for the user to realize that. It's especially problematic with options that seem to make sense together:\r\n- `--pretty-json` sounds like it would affect `--standard-json` but it only works with `--combined-json` (#11583.) \r\n- `--bin` should be supported in the assembler mode but currently isn't (#3870).\r\n\r\n## Specification\r\n-  There are several input modes (compiler, linker, assembler, standard JSON) and many options are not valid in one of these modes. The invalid ones should produce an error.\r\n    - Take a look at [tests for input modes in `CommandLineParser`](https://github.com/ethereum/solidity/blob/develop/test/solc/CommandLineParser.cpp). Basically, all options do not result in a change in `CommandLineOptions` in a specific mode should be invalid in that mode.\r\n- Options that have equivalents and Standard JSON should be errors when `--standard-json` is used. For example:\r\n    - Model checker settings.\r\n    - Remappings.\r\n    - `--color`/`--no-color` - Standard JSON output is not colorized and even when it will be (#11507), this option should not affect it.\r\n    - `--libraries`.\r\n    - `--error-codes`.\r\n- Please also check options whose values are not ignored by `CommandLineParser` but are still not used by `CommandLineInterface`.\r\n\r\n## Backwards Compatibility\r\nThis does not introduce any backwards-incompatible changes to the language itself but any command-line tools relying on the current behavior of options being ignored will be affected.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11629/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11629/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/903924413",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-903924413",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 903924413,
    "node_id": "IC_kwDOAm_5kc414Mq9",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T16:24:16Z",
    "updated_at": "2021-08-23T16:29:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @cameel I would like to work on this issue.\r\nAlso, Kindly point me to a good starting point. Thank you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/903924413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/904076291",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-904076291",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 904076291,
    "node_id": "IC_kwDOAm_5kc414xwD",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T19:56:37Z",
    "updated_at": "2021-08-26T14:43:54Z",
    "author_association": "MEMBER",
    "body": "Great! There are many options so maybe it would be best to start with a PR that does this for only one of them and then, when you get the hang of it, continue with the rest in subsequent PRs. I think that `--experimental-via-ir` might be a good one to start with.\r\n\r\nStart by running `solc --help` and looking at the option description and at the \"Alternative Input Modes\" section. These modes map to the [`InputMode`](https://github.com/ethereum/solidity/blob/v0.8.7/solc/CommandLineParser.h#L45-L52) enum in `CommandLineParser`. The only modes where the option makes sense are `Compiler` and `CompilerWithASTImport`. You can find that out by looking at `solc/CommandLineInterface.cpp` - there's [only a single place in `compile()` that uses its value](https://github.com/ethereum/solidity/blob/v0.8.7/solc/CommandLineInterface.cpp#L590). In any other mode the option is ignored. The task is to modify `CommandLineParser` to return an error if the option is used in those other modes.\r\n\r\nAfter you do this, tests in `test/solc/CommandLineParser.cpp` will start failing. Remove the option from them and instead add a new test case that loops over the modes where the option is invalid and checks the error message. You can use the existing [`no_options` test case](https://github.com/ethereum/solidity/blob/v0.8.7/test/solc/CommandLineParser.cpp#L75-L91) as a base.\r\n\r\nFinally, don't forget to mention your change in the [changelog](https://github.com/ethereum/solidity/blob/develop/Changelog.md).\r\n\r\nIf you need more help, drop by at the `#solidity-dev` [Matrix](https://app.element.io/#/room/#ethereum_solidity-dev:gitter.im)/[Gitter](https://gitter.im/ethereum/solidity-dev) channel.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/904076291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/904778328",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-904778328",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 904778328,
    "node_id": "IC_kwDOAm_5kc417dJY",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T16:10:08Z",
    "updated_at": "2021-08-24T16:10:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for the detailed explanation, It is really helpful. I will start with the said option.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/904778328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/907317802",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-907317802",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 907317802,
    "node_id": "IC_kwDOAm_5kc42FJIq",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T16:16:51Z",
    "updated_at": "2021-08-27T16:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cameel  I have made a pull request. https://github.com/ethereum/solidity/pull/11853. Please check.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/907317802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/907379393",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-907379393",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 907379393,
    "node_id": "IC_kwDOAm_5kc42FYLB",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T18:05:24Z",
    "updated_at": "2021-08-27T18:05:24Z",
    "author_association": "MEMBER",
    "body": "#11853 looks good overall. Here are some pointers on where to go from there once we merge it:\r\n- `CommandLineParser` needs to have a list of forbidden options for each mode. [There's already a stub of such a list for assembly mode](https://github.com/ethereum/solidity/blob/a3d8da2530856b62787010816c50f83baf1c10ca/solc/CommandLineParser.cpp#L955-L962). We need to complete that list and add a similar one for each mode.\r\n    - We already have some existing checks for incompatible options (e.g. [for `--dialect` and `--machine` outside of assembly mode](https://github.com/ethereum/solidity/blob/a3d8da2530856b62787010816c50f83baf1c10ca/solc/CommandLineParser.cpp#L1064-L1069) but it's not the only one). You need to find them all and remove them. Please check `CommandLineInterface.cpp` as well - there might be some checks there.\r\n- The error message in each case should be very similar. The only changing parts should be the names of all the options that are incompatible and the name of the input mode.\r\n- We need a single test that loops over all modes and within each mode over all the incompatible options.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/907379393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/908520738",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-908520738",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 908520738,
    "node_id": "IC_kwDOAm_5kc42Ju0i",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-30T17:08:46Z",
    "updated_at": "2021-08-30T17:09:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cameel  Thank you for merging the PR. I shall start with the other options. A couple of questions, Can I use the test case that I made in the previous PR for the rest of the options, maybe loop over each invalid option-input mode combination. Also, can I fix multiple option cases in a single PR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/908520738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/908547852",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-908547852",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 908547852,
    "node_id": "IC_kwDOAm_5kc42J1cM",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-30T17:40:01Z",
    "updated_at": "2021-08-30T17:40:14Z",
    "author_association": "MEMBER",
    "body": "> Also, can I fix multiple option cases in a single PR.\r\n\r\nSure. I wanted a PR dealing with a single one mostly to work through potential issues on something small. Now I think we could do something bigger.\r\n\r\nBut I think it would be best to submit an incomplete PR as a draft for some feedback and add more stuff to it once we agree on the overall structure.\r\n\r\n> Can I use the test case that I made in the previous PR for the rest of the options, maybe loop over each invalid option-input mode combination. \r\n\r\nYeah, that's exactly what we need. That test should be refactored into something more generic. There are a lot of options and they should all be handled in a uniform way anyway so looping over them will save us a lot of code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/908547852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912916252",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-912916252",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 912916252,
    "node_id": "IC_kwDOAm_5kc42af8c",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-04T06:05:23Z",
    "updated_at": "2021-09-04T06:05:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cameel What should be the action if the user enters multiple invalid options for an input mode? Should it exit and return an error on the **First invalid option** or return errors for **all invalid options**? Please clarify.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912916252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912980725",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-912980725",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 912980725,
    "node_id": "IC_kwDOAm_5kc42avr1",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-04T14:10:01Z",
    "updated_at": "2021-09-04T14:10:01Z",
    "author_association": "MEMBER",
    "body": "I think it should report one error listing the names of all the invalid options and then exit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/912980725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/913673453",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-913673453",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 913673453,
    "node_id": "IC_kwDOAm_5kc42dYzt",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-06T14:02:27Z",
    "updated_at": "2021-09-06T14:09:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cameel  So I assume when creating test cases we need to check for `one invalid option with one input mode` and `multiple invalid options with one input mode` separately. This would be tricky as there would be many combinations. I'm thinking of putting all invalid options for a particular input mode in one test loop. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/913673453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/913824566",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-913824566",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 913824566,
    "node_id": "IC_kwDOAm_5kc42d9s2",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-06T19:32:26Z",
    "updated_at": "2021-09-06T19:32:26Z",
    "author_association": "MEMBER",
    "body": "I think that checking all of the `one invalid option with one input mode` combinations would be enough. I think this will be enough to detect most errors and we'll never be able to test all possible combinations anyway. For the `multiple invalid options with one input mode` case you can test one or two such combinations but I'd also be fine with not testing them at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/913824566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/914946532",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-914946532",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 914946532,
    "node_id": "IC_kwDOAm_5kc42iPnk",
    "user": {
      "login": "Midhun07",
      "id": 6437979,
      "node_id": "MDQ6VXNlcjY0Mzc5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6437979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midhun07",
      "html_url": "https://github.com/Midhun07",
      "followers_url": "https://api.github.com/users/Midhun07/followers",
      "following_url": "https://api.github.com/users/Midhun07/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midhun07/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midhun07/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midhun07/subscriptions",
      "organizations_url": "https://api.github.com/users/Midhun07/orgs",
      "repos_url": "https://api.github.com/users/Midhun07/repos",
      "events_url": "https://api.github.com/users/Midhun07/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midhun07/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-08T06:08:48Z",
    "updated_at": "2021-09-08T06:08:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cameel  I have created fix for option `error-recovery` as a template for other options. Please check.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/914946532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/995970423",
    "html_url": "https://github.com/ethereum/solidity/issues/11629#issuecomment-995970423",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11629",
    "id": 995970423,
    "node_id": "IC_kwDOAm_5kc47XU13",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-16T16:20:49Z",
    "updated_at": "2021-12-16T16:20:49Z",
    "author_association": "MEMBER",
    "body": "#11350 will soon be merged. When that happens, we need to remember to also validate its options (currently it does not take any so they all should be rejected as invalid).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/995970423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
