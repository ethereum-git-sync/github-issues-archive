{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14026/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14026/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14026/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14026",
  "id": 1609711729,
  "node_id": "I_kwDOAm_5kc5f8kBx",
  "number": 14026,
  "title": "Remove `uint` as alias for `uint256`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 467898404,
      "node_id": "MDU6TGFiZWw0Njc4OTg0MDQ=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/breaking%20change%20:warning:",
      "name": "breaking change :warning:",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    },
    {
      "id": 4726043980,
      "node_id": "LA_kwDOAm_5kc8AAAABGbG1TA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/feature",
      "name": "feature",
      "color": "fbca02",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/52",
    "html_url": "https://github.com/ethereum/solidity/milestone/52",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/52/labels",
    "id": 8084058,
    "node_id": "MI_kwDOAm_5kc4Ae1pa",
    "number": 52,
    "title": "0.9.0",
    "description": "",
    "creator": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 18,
    "closed_issues": 3,
    "state": "open",
    "created_at": "2022-06-15T13:38:10Z",
    "updated_at": "2023-12-04T12:43:39Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 16,
  "created_at": "2023-03-04T10:20:20Z",
  "updated_at": "2023-12-05T11:12:10Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nI would like to propose removing `uint` as an alias for `uint256` for the upcoming breaking `>=0.9.0` versions. The reason is that global aliases in the area of user-defined types and operators decrease readability.\r\n\r\n## Motivation\r\n\r\nConsider the following example:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: WTFPL\r\npragma solidity 0.8.19;\r\n\r\ntype Uint is uint8; /// @dev Use `Uint` for `uint8` type. \r\nusing {safeAddUint256 as +} for Uint global;\r\n\r\n/// @dev The function name is chosen on purpose like that to increase the confusion.\r\nfunction unsafeAddUint256(Uint a, Uint b) pure returns (Uint) {\r\n    unchecked {\r\n        return Uint.wrap(Uint.unwrap(a) + Uint.unwrap(b));\r\n    }\r\n}\r\n\r\ncontract evil {\r\n    function add(Uint a, Uint b) external pure returns (Uint) {\r\n        return a + b;\r\n    }\r\n}\r\n```\r\n\r\nThe example is on purpose like that to indicate that `uint` and `Uint` can mean completely different things and I feel that for the reason of auditability and readability, we should discourage the use of `uint` as an alias for `uint256`. Explicitness of the type range is a good language feature to have.\r\n\r\n[EDIT]: This example was on purpose rather provocative and please take a look at the examples of @Amxx [here](https://github.com/ethereum/solidity/issues/14026#issuecomment-1454691844) for more spot-on examples.\r\n\r\n## Specification\r\n\r\nI would like to propose the following specification:\r\n- For the remaining `>=0.8.20` versions, the compiler issues a deprecation warning for the alias `uint`.\r\n- Starting with version `0.9.0` disallow the usage of the `uint` alias.\r\n\r\n## Backwards Compatibility\r\n\r\nThis change is not backward-compatible with `<0.9.0` versions.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14026/reactions",
    "total_count": 13,
    "+1": 10,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14026/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454691844",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1454691844",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1454691844,
    "node_id": "IC_kwDOAm_5kc5WtNYE",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-04T10:28:53Z",
    "updated_at": "2023-03-04T10:37:19Z",
    "author_association": "NONE",
    "body": "While I do personally agree that `uint` as an alias to `uint256` creates more confusion than good, I'm not sure your example is really about that. I think you are pointing out the danger of terribly named UDVT.\r\n\r\nYou would have the same issue with\r\n```solidity\r\ntype Uint256 is int256;\r\ntype Int256 is uint256;\r\n```\r\nor any other stupid thing like that.\r\n\r\n---\r\n\r\nOne good reason to deprecate `uint` is that some people thing its a type of its own, and use it (instead of uint256) when trying to compute function selector or EIP-712 typehash. I can't recall all the times users came to me with difficulty to get a signature recognized because they did\r\n\r\n```solidity\r\nstruct MyStruct {\r\n    address a;\r\n    uint b;\r\n}\r\nbytes32 constant MYSTRUCT_TYPE_HASH = keccak256(\"MyStruct(address a,uint b)\");\r\n```\r\n\r\nWhen I told them to do `keccak256(\"MyStruct(address a,uint256 b)\")` instead, they often insisted that I was stupid for not seeing that their struct uses a `uint` and not `uint256`.\r\n\r\n---\r\n\r\nI've also seen developers say that their code did not have overflow issues because they replaced `uint256` with `uint`, and that as a consequence the 256 bits limit no longer applies.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454691844/reactions",
      "total_count": 6,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454706531",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1454706531",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1454706531,
    "node_id": "IC_kwDOAm_5kc5WtQ9j",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-04T11:25:25Z",
    "updated_at": "2023-03-04T11:25:59Z",
    "author_association": "NONE",
    "body": "Yes, I agree with you @Amxx - the examples you provide are much more spot-on. Let me give another example I've seen among developers. Some people assumed that `uint` is an alias for the lowest possible conversion type:\r\n\r\n```\r\nfunction fn(uint8 x) external {\r\n    uint scale = x; /// Developer assumes it converts automatically to type `uint8` for `scale`.\r\n    ....\r\n}\r\n```\r\n\r\nI even had people assuming that `uint` is an alias for `uint64` (I don't know the reasons tbh, and here I could argue people should read more carefully the documentation). Another motivation I want to share is cross-language consistency. In Vyper, for example, such an alias is not existent.\r\n\r\nPS: Tbh my issue example was on purpose a little bit provocative wrt UDVT in order to highlight what can go wrong overall.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454706531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454788817",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1454788817",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1454788817,
    "node_id": "IC_kwDOAm_5kc5WtlDR",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-04T16:08:55Z",
    "updated_at": "2023-03-04T22:13:32Z",
    "author_association": "NONE",
    "body": "> I even had people assuming that uint is an alias for uint64\r\n\r\nThat tipically sounds like some C/C++ héritage. Int and uint are usually 32 bits, and long often 64 bits (even though that is not guaranteed, some people prefer long long to be sure, even though that is not garanteed to be 64  bits either). When I wrote c++ (10 years ago) I used to rely on uint32_t and uint64_t, but I was in a minority of devs that use these types. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1454788817/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1517623465",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1517623465",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1517623465,
    "node_id": "IC_kwDOAm_5kc5adRip",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T10:30:39Z",
    "updated_at": "2023-04-21T13:01:58Z",
    "author_association": "NONE",
    "body": "I would like to add another (honeypot) example where the `uint` alias creates an issue:\r\n\r\n```solidity\r\ncontract B {\r\n    function claim(uint amount) external payable {\r\n        payable(msg.sender).transfer(amount * 2);\r\n    }\r\n    fallback() payable external {}\r\n}\r\n\r\ncontract C {\r\n    function claim(address b) external payable {\r\n        uint amount = msg.value;\r\n        require(amount > 0, \"Zero deposit\");\n        // The following line will call the `fallback` function in `B`.\r\n        (bool success, ) = b.call{value: amount}(abi.encodeWithSignature(\"claim(uint)\", amount));\r\n        require(success, \"Claim failed\");\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n    receive() payable external {}\r\n}\r\n```\r\n\r\nThere are multiple issues with the example contracts above and *it's more of an illustration* of why the alias can create confusion. The issue with the above contract that I want to point out is that we have `B.claim.selector != bytes4(keccak256(bytes(\"claim(uint)\")))` and thus it will call the `fallback` function in the contract `B`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1517623465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645474288",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1645474288",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1645474288,
    "node_id": "IC_kwDOAm_5kc5iE_Hw",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-07-21T12:04:06Z",
    "updated_at": "2023-07-21T12:04:06Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645474288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645476056",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1645476056",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1645476056,
    "node_id": "IC_kwDOAm_5kc5iE_jY",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-21T12:05:23Z",
    "updated_at": "2023-07-21T12:05:23Z",
    "author_association": "NONE",
    "body": "This issue is still relevant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1645476056/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1772609934",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1772609934",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1772609934,
    "node_id": "IC_kwDOAm_5kc5pp-GO",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-10-20T12:04:34Z",
    "updated_at": "2023-10-20T12:04:34Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1772609934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1772611891",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1772611891",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1772611891,
    "node_id": "IC_kwDOAm_5kc5pp-kz",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-20T12:06:04Z",
    "updated_at": "2023-10-20T12:06:04Z",
    "author_association": "NONE",
    "body": "Don't close as this issue is still relevant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1772611891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1837998797",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1837998797",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1837998797,
    "node_id": "IC_kwDOAm_5kc5tjaLN",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T07:45:05Z",
    "updated_at": "2023-12-04T07:45:05Z",
    "author_association": "NONE",
    "body": "Any updates on the roadmap for this security feature @cameel?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1837998797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838468745",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1838468745",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1838468745,
    "node_id": "IC_kwDOAm_5kc5tlM6J",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T11:46:33Z",
    "updated_at": "2023-12-04T11:46:33Z",
    "author_association": "MEMBER",
    "body": "@pcaversaccio @Amxx I'm not personally gonna close this issue, since I'd prefer for @cameel and/or @ekpyron to get the blame instead of me :)\r\nThe reason it'll most likely be closed is that we're currently reworking our type system (or rather writing a new one), which will have full on generics and type deduction; in addition, we're likely gonna implement all of the types in the standard library, whilst having the core language remain as small as possible, such that the standard library will be written in Solidity, which will in turn allow community peer review/contributions (at a larger scale than now), as well as auditing of said standard library. This means that your gripe with the `uint256` -> `uint` alias (valid btw) will be addressed in Solidity 1.0.0.\r\nOf course, removing the alias now would mean a breaking release, which would target it for the 0.9 release, and given that we're already putting most of our focus (as far as language design and long term direction is concerned) into the new type system, it's very unlikely that we'll actually introduce this change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838468745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838485505",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1838485505",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1838485505,
    "node_id": "IC_kwDOAm_5kc5tlRAB",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T11:57:16Z",
    "updated_at": "2023-12-04T11:57:16Z",
    "author_association": "NONE",
    "body": "> @pcaversaccio @Amxx I'm not personally gonna close this issue, since I'd prefer for @cameel and/or @ekpyron to get the blame instead of me :) The reason it'll most likely be closed is that we're currently reworking our type system (or rather writing a new one), which will have full on generics and type deduction; in addition, we're likely gonna implement all of the types in the standard library, whilst having the core language remain as small as possible, such that the standard library will be written in Solidity, which will in turn allow community peer review/contributions (at a larger scale than now), as well as auditing of said standard library. This means that your gripe with the `uint256` -> `uint` alias (valid btw) will be addressed in Solidity 1.0.0. Of course, removing the alias now would mean a breaking release, which would target it for the 0.9 release, and given that we're already putting most of our focus (as far as language design and long term direction is concerned) into the new type system, it's very unlikely that we'll actually introduce this change.\r\n\r\nDo I understand correctly that there will be no syntactic changes at all before 2025 ([link](https://app.streameth.org/devconnect/solidity_summit/session/experimental_solidity))? \r\n![image](https://github.com/ethereum/solidity/assets/25297591/f6ac1a1d-8204-4ed8-a98f-31f3bb3ba1d3)\r\n\r\nI.e., there will be no breaking syntax changes in version `0.9`?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838485505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838491883",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1838491883",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1838491883,
    "node_id": "IC_kwDOAm_5kc5tlSjr",
    "user": {
      "login": "nikola-matic",
      "id": 4415530,
      "node_id": "MDQ6VXNlcjQ0MTU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4415530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikola-matic",
      "html_url": "https://github.com/nikola-matic",
      "followers_url": "https://api.github.com/users/nikola-matic/followers",
      "following_url": "https://api.github.com/users/nikola-matic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikola-matic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikola-matic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikola-matic/subscriptions",
      "organizations_url": "https://api.github.com/users/nikola-matic/orgs",
      "repos_url": "https://api.github.com/users/nikola-matic/repos",
      "events_url": "https://api.github.com/users/nikola-matic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikola-matic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T11:59:53Z",
    "updated_at": "2023-12-04T12:00:15Z",
    "author_association": "MEMBER",
    "body": "> > @pcaversaccio @Amxx I'm not personally gonna close this issue, since I'd prefer for @cameel and/or @ekpyron to get the blame instead of me :) The reason it'll most likely be closed is that we're currently reworking our type system (or rather writing a new one), which will have full on generics and type deduction; in addition, we're likely gonna implement all of the types in the standard library, whilst having the core language remain as small as possible, such that the standard library will be written in Solidity, which will in turn allow community peer review/contributions (at a larger scale than now), as well as auditing of said standard library. This means that your gripe with the `uint256` -> `uint` alias (valid btw) will be addressed in Solidity 1.0.0. Of course, removing the alias now would mean a breaking release, which would target it for the 0.9 release, and given that we're already putting most of our focus (as far as language design and long term direction is concerned) into the new type system, it's very unlikely that we'll actually introduce this change.\r\n> \r\n> Do I understand correctly that there will be no syntactic changes at all before 2025 ([link](https://app.streameth.org/devconnect/solidity_summit/session/experimental_solidity))? ![image](https://private-user-images.githubusercontent.com/25297591/287689469-f6ac1a1d-8204-4ed8-a98f-31f3bb3ba1d3.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTEiLCJleHAiOjE3MDE2OTEzNjQsIm5iZiI6MTcwMTY5MTA2NCwicGF0aCI6Ii8yNTI5NzU5MS8yODc2ODk0NjktZjZhYzFhMWQtODIwNC00ZWQ4LWE5OGYtMzFmM2JiM2JhMWQzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFJV05KWUFYNENTVkVINTNBJTJGMjAyMzEyMDQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjMxMjA0VDExNTc0NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM5OTY3ZjgxZTcxZWM4MTlhZjRjM2ExYzAzZWEyNDZmZGFhOGEzNjk0MzYyMzFjOTRlYTNiMmU3MDMzODgzZDMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.nMFfV8rhXZ6lnnsaBwc62lIdq3sdCNohxELc5s9pjuI)\r\n> \r\n> I.e., there will be no breaking syntax changes in version `0.9`?\r\n\r\nNope, there will be - it's just a question of the quantity of such changes - since the focus for 0.9 is `via-ir` by default. That's why I didn't close the issue, but given that our main priority is `via-ir` and the new type system, it's unlikely that we'll be focusing on the syntax that much.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838491883/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838558807",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1838558807",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1838558807,
    "node_id": "IC_kwDOAm_5kc5tli5X",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T12:43:32Z",
    "updated_at": "2023-12-04T12:46:13Z",
    "author_association": "MEMBER",
    "body": "It's exactly as @nikola-matic said. This is one of the things that are much better off handed off to the community via the future stdlib process. It will take time and I know that the wait may be frustrating, but once it's in place, it will seriously boost our ability to address these things efficiently. Currently it's a whack-a-mole where, if we spend time to address one problem with syntax sugar, ten new ones crop up and the core roadmap work gets pushed more and more into the unspecified future.\r\n\r\nThe change itself is small in terms of implementation, so we'll consider it along with other breaking changes for 0.9 but I think that the chance of it getting in is pretty slim. It's quite opinionated and even if we may agree with the opinion, we'd much rather have it handled in a way that gives us more confidence that this is really the opinion of the wider community. We'd rather not rush it just because it's easy to change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838558807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838590706",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1838590706",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1838590706,
    "node_id": "IC_kwDOAm_5kc5tlqry",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T13:02:07Z",
    "updated_at": "2023-12-04T13:02:07Z",
    "author_association": "NONE",
    "body": "> The change itself is small in terms of implementation, so we'll consider it along with other breaking changes for 0.9 but I think that the chance of it getting in is pretty slim. It's quite opinionated and even if we may agree with the opinion, we'd much rather have it handled in a way that gives us more confidence that this is really the opinion of the wider community. We'd rather not rush it just because it's easy to change.\r\n\r\nWhat do you have in mind to provide you with more confidence? As two critical examples: EIPs or ABI-based function selectors use `uint256` and not `uint`. Generally, having the alias `uint` for `uint256` follows the [principle of least astonishment](https://en.wikipedia.org/wiki/Principle_of_least_astonishment), but there are still surprises where `uint` can create harm.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1838590706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1839346458",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1839346458",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1839346458,
    "node_id": "IC_kwDOAm_5kc5tojMa",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T19:36:55Z",
    "updated_at": "2023-12-04T19:40:28Z",
    "author_association": "MEMBER",
    "body": "I was thinking about the stdlib process. Handing the decision off to the actual users of the language is the ultimate way to be sure that we're giving them what they want.\r\n\r\nAlso, it's not only about whether the alias itself is problematic, but also about whether deprecating it right now is really the best decision. We have much bigger changes to the type system ahead and doing it now may just create more confusion and upgrade friction than it's worth. In the short term there are still ways to address this without necessarily removing it - for example this could be flagged by linters - so we don't really see this as so urgent that it can't wait for a time where we have more clarity and better tools to handle it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1839346458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1840538192",
    "html_url": "https://github.com/ethereum/solidity/issues/14026#issuecomment-1840538192",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14026",
    "id": 1840538192,
    "node_id": "IC_kwDOAm_5kc5ttGJQ",
    "user": {
      "login": "drortirosh",
      "id": 40341007,
      "node_id": "MDQ6VXNlcjQwMzQxMDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drortirosh",
      "html_url": "https://github.com/drortirosh",
      "followers_url": "https://api.github.com/users/drortirosh/followers",
      "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
      "organizations_url": "https://api.github.com/users/drortirosh/orgs",
      "repos_url": "https://api.github.com/users/drortirosh/repos",
      "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drortirosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-05T11:12:09Z",
    "updated_at": "2023-12-05T11:12:09Z",
    "author_association": "NONE",
    "body": "There is a distinction between \"binary format\" (uint256) and \"native type\".\r\nI suggest to keep the alias, but restrict its usage as storage field (or struct)\r\n\r\nnative type is what the compiler should handle the best.\r\ne.g. `for (uint256 i=0,...)` and `for( uint32 i=0,...)` seem equivalent, but AFAIK, the latter is far less optimize from Solidity's point of view, since it uses a non-native type",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1840538192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
