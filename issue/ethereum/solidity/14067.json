{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14067",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14067/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14067/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14067/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14067",
  "id": 1637342831,
  "node_id": "I_kwDOAm_5kc5hl95v",
  "number": 14067,
  "title": "better heuristics for choosing variables to move to memory",
  "user": {
    "login": "sifislag",
    "id": 4061051,
    "node_id": "MDQ6VXNlcjQwNjEwNTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4061051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sifislag",
    "html_url": "https://github.com/sifislag",
    "followers_url": "https://api.github.com/users/sifislag/followers",
    "following_url": "https://api.github.com/users/sifislag/following{/other_user}",
    "gists_url": "https://api.github.com/users/sifislag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sifislag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sifislag/subscriptions",
    "organizations_url": "https://api.github.com/users/sifislag/orgs",
    "repos_url": "https://api.github.com/users/sifislag/repos",
    "events_url": "https://api.github.com/users/sifislag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sifislag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4828600698,
      "node_id": "LA_kwDOAm_5kc8AAAABH86Zeg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/viair",
      "name": "viair",
      "color": "5999F7",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-03-23T11:26:42Z",
  "updated_at": "2023-03-29T14:47:29Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n## Description\r\n\r\nI've been looking at bytecodes produced using the `--via-ir` pipeline and I noticed that in most cases, popular constants (0, 4, etc.) are pushed to the stack on the function selector code and shared between public functions. I stumbled upon a [contract](https://library.dedaub.com/ethereum/address/0x619f793e2d7e077986d06630c11c6c0563eb28e6/source) where the memory mover kicks in to resolve stack too deep errors. This behavior can be seen in the [produced yul code](https://library.dedaub.com/ethereum/address/0x619f793e2d7e077986d06630c11c6c0563eb28e6/source-yul?line=147), with `0` being stored at memory offset `0xa0`. After this point the constant is loaded 271 times (can be observed by searching \"60a051\" in the [deployed bytecode](https://library.dedaub.com/ethereum/address/0x619f793e2d7e077986d06630c11c6c0563eb28e6/bytecode)).\r\n\r\nSo in this case the sequence `60a051` is used instead of `6000`, adding 271 extra bytes to the deployed bytecode. Thought to report it as it will probably be common in large programs.\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.17 (also on 0.8.19)\r\n- Target EVM version (as per compiler settings): london\r\n- Operating system: ubuntu 20.04\r\n\r\n## Steps to Reproduce\r\n\r\nI got the contract's code concatenated to a single file from [here](https://library.dedaub.com/ethereum/address/0x619f793e2d7e077986d06630c11c6c0563eb28e6/) and compiled using 0.8.19 (after removing imports, etc). The same behavior is present. I'm not posting it here because its too large. \r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14067/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14067/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485053394",
    "html_url": "https://github.com/ethereum/solidity/issues/14067#issuecomment-1485053394",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14067",
    "id": 1485053394,
    "node_id": "IC_kwDOAm_5kc5YhB3S",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T12:35:24Z",
    "updated_at": "2023-03-27T12:35:24Z",
    "author_association": "MEMBER",
    "body": "Yeah, there's two underlying issues involved in this - for once the memory-mover currently naively chooses the first candidate for moving to memory to solve stack-too-deep errors rather than analyzing the cost for all candidates and choosing the cheapest one based on some heuristics. Secondly, the code transform (i.e. the transformation from yul code to evm bytecode) does currently not always make use of the fact that it knows the value of constants and can replace variable references by constants.\r\n\r\nBoth of this are known problems and it's on our agenda to improve both of the components involved.\r\nI'll be linking this issue to https://github.com/ethereum/solidity/issues/13721, which will involve improving the mentioned code transform to account for the example case you're posting - thank you very much for that, concrete examples help a lot in tweaking these mechanisms!\r\n\r\nBeyond that I'll leave this issue open, but will repurpose it to a more general improvment of the heuristics of moving variables to memory, which is the second component involved in this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1485053394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488769237",
    "html_url": "https://github.com/ethereum/solidity/issues/14067#issuecomment-1488769237",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14067",
    "id": 1488769237,
    "node_id": "IC_kwDOAm_5kc5YvNDV",
    "user": {
      "login": "sifislag",
      "id": 4061051,
      "node_id": "MDQ6VXNlcjQwNjEwNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4061051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sifislag",
      "html_url": "https://github.com/sifislag",
      "followers_url": "https://api.github.com/users/sifislag/followers",
      "following_url": "https://api.github.com/users/sifislag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sifislag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sifislag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sifislag/subscriptions",
      "organizations_url": "https://api.github.com/users/sifislag/orgs",
      "repos_url": "https://api.github.com/users/sifislag/repos",
      "events_url": "https://api.github.com/users/sifislag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sifislag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T14:47:29Z",
    "updated_at": "2023-03-29T14:47:29Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation!\r\nI can get you more examples if that'd be helpful. I ran a quick analysis on ~900 contracts compiled using `--via-ir`, in 42 of them the memory mover was used (according to my heuristic) and I found 20 instances where small (single byte) constants are stored on an offset reserved by the memory mover.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488769237/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
