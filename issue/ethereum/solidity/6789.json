{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6789/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6789/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6789/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6789",
  "id": 446064271,
  "node_id": "MDU6SXNzdWU0NDYwNjQyNzE=",
  "number": 6789,
  "title": "``make_vector`` evaluates its arguments in undefined order",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3515010024,
      "node_id": "LA_kwDOAm_5kc7Rgsvo",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/good%20first%20issue%20candidate",
      "name": "good first issue candidate",
      "color": "91B44D",
      "default": false,
      "description": "Could be a \"good first issue\" but something is blocking it or it has open questions."
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-05-20T11:26:34Z",
  "updated_at": "2023-03-03T12:04:32Z",
  "closed_at": "2023-03-03T12:04:32Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Since the order in which the expressions of function arguments are executed is undefined in C++, the new ``make_vector`` helper might have unexpected behaviour, e.g.:\r\n\r\n``make_vector<SomeType>(visit(A), visit(B))`` might (and probably will) call ``visit(B)`` before ``visit(A)``, while one might expect that it first calls ``visit(A)`` and then ``visit(B)``.\r\n\r\nThere's no nice and easy way around this. With C++17 the standard requires that in a function call the expression determining which function to call is evaluated before the arguments, so then we could change the syntax to something like:\r\n\r\n``make_vector<SomeType>(visit(A))(visit(B)).get()``\r\n\r\nThere might be better solutions, but it'd be good to solve this issue in some way.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6789/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6789/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1017388922",
    "html_url": "https://github.com/ethereum/solidity/issues/6789#issuecomment-1017388922",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
    "id": 1017388922,
    "node_id": "IC_kwDOAm_5kc48pB96",
    "user": {
      "login": "peroket",
      "id": 11351375,
      "node_id": "MDQ6VXNlcjExMzUxMzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11351375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peroket",
      "html_url": "https://github.com/peroket",
      "followers_url": "https://api.github.com/users/peroket/followers",
      "following_url": "https://api.github.com/users/peroket/following{/other_user}",
      "gists_url": "https://api.github.com/users/peroket/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peroket/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peroket/subscriptions",
      "organizations_url": "https://api.github.com/users/peroket/orgs",
      "repos_url": "https://api.github.com/users/peroket/repos",
      "events_url": "https://api.github.com/users/peroket/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peroket/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-20T11:11:20Z",
    "updated_at": "2022-01-20T11:11:20Z",
    "author_association": "NONE",
    "body": "Hello, I would like to take part in the community, and this task seems like a good one to start with.\r\n\r\nOne solution would be to use the vector `initializer_list' constructor. The order for those is defined left to right. The constraints is that all types need to match, so it may require casting first. That is a solution for light types though, as the values will be copied.\r\n\r\nOtherwise I could propose a syntax like\r\n```c++\r\nauto vector = (make_vector<int>() << visit(A) << visit(B)).get() // Explicit get\r\nstd::vector<int> vector2 = make_vector<int>() << visit(A) << visit(B); // Implicit cast\r\n```\r\n\r\nWhat do you think?\r\n\r\n@ekpyron @cameel \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1017388922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1024760635",
    "html_url": "https://github.com/ethereum/solidity/issues/6789#issuecomment-1024760635",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
    "id": 1024760635,
    "node_id": "IC_kwDOAm_5kc49FJs7",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-29T00:09:07Z",
    "updated_at": "2022-01-29T00:09:07Z",
    "author_association": "MEMBER",
    "body": "Sorry for a late response. I think we'll actually need @ekpyron's opinion here. This issue is marked only as a candidate rather than `good first issue` because, while it'll be easy to implement once we have the right idea, it needs some discussion before we get what we want.\r\n\r\nPersonally I like your explicit get syntax. Stacked `()` operator never reads well. So as long as it enforces the order too I'd be fine with that.\r\n\r\nTo be honest though, the fact that these expressions do enforce order does not stand out enough to me so I'd always leave a comment anyway losing the conciseness. In that case I'm not sure if keeping it simple isn't actually the best choice:\r\n```c++\r\nT a = visit(A);\r\nT b = visit(B);\r\nstd::vector<T> v = make_vector<T>(move(a), move(b));\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1024760635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1026923303",
    "html_url": "https://github.com/ethereum/solidity/issues/6789#issuecomment-1026923303",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
    "id": 1026923303,
    "node_id": "IC_kwDOAm_5kc49NZsn",
    "user": {
      "login": "peroket",
      "id": 11351375,
      "node_id": "MDQ6VXNlcjExMzUxMzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11351375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peroket",
      "html_url": "https://github.com/peroket",
      "followers_url": "https://api.github.com/users/peroket/followers",
      "following_url": "https://api.github.com/users/peroket/following{/other_user}",
      "gists_url": "https://api.github.com/users/peroket/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peroket/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peroket/subscriptions",
      "organizations_url": "https://api.github.com/users/peroket/orgs",
      "repos_url": "https://api.github.com/users/peroket/repos",
      "events_url": "https://api.github.com/users/peroket/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peroket/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T14:48:56Z",
    "updated_at": "2022-02-01T14:48:56Z",
    "author_association": "NONE",
    "body": "So maybe the best is to not provide such a functionality at all, and let each person solve that problem locally (meaning remove the helper function)?\r\nIt's not used in many places, so I can do that easily as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1026923303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1441647348",
    "html_url": "https://github.com/ethereum/solidity/issues/6789#issuecomment-1441647348",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
    "id": 1441647348,
    "node_id": "IC_kwDOAm_5kc5V7cr0",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-02-23T12:05:17Z",
    "updated_at": "2023-02-23T12:05:17Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1441647348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1453433486",
    "html_url": "https://github.com/ethereum/solidity/issues/6789#issuecomment-1453433486",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6789",
    "id": 1453433486,
    "node_id": "IC_kwDOAm_5kc5WoaKO",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-03T12:04:30Z",
    "updated_at": "2023-03-03T12:04:30Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1453433486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
