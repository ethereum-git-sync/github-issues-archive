{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11586",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11586/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11586/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11586/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11586",
  "id": 931276728,
  "node_id": "MDU6SXNzdWU5MzEyNzY3Mjg=",
  "number": 11586,
  "title": "[YulOpti] Converting loops that copy into memory into calldatacopy and returndatacopy",
  "user": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-06-28T07:48:01Z",
  "updated_at": "2023-06-08T12:04:03Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "\r\n## Converting a memory loop into calldatacopy\r\n\r\nTake the example\r\n\r\n```solidity\r\n    contract C {\r\n        function f(uint[] memory x) external returns (uint) {\r\n            return x.length;\r\n        }\r\n    }\r\n```\r\n\r\nCopying from calldata to memory currently would be done in the following loop:\r\n\r\n```yul\r\nfor { } lt(i, _4) { i := add(i, 1) }\r\n{\r\n    mstore(dst, calldataload(src))\r\n    dst := add(dst, 32)\r\n    src := add(src, 32)\r\n}\r\n```\r\n\r\nHowever, it's more optimal to rewrite this as\r\n\r\n```\r\nif lt(i, _4) {\r\n    calldatacopy(dst, src, mul(32, sub(_4, i)))\r\n}\r\n```\r\n----\r\n## Analysis on the savings\r\n\r\nAssuming that the loop will be run `n` times, each iteration involves\r\n\r\n1. the condition check: total: 25 gas.\r\n   - `lt(i, _4) + iszero`: 12 gas\r\n   - `push tag` + `jumpi`: 13 gas\r\n2. loop body: total: 33 gas (current codegen: 45 gas)\r\n   - `calldataload(src)`: 6 gas\r\n   - `mstore(a, calldataload(src))`: 9 (including memory exansion cost; assuming it's linear)\r\n   - `dst := add(dst, 32)`: 9 (ends up being 15 gas right now though)\r\n   - `src := add(src, 32)`: 9 (also ends up being 15 gas right now.)\r\n4. post condition: 9 gas (current codegen: 15 gas)\r\n   - `i := add(i, 1)`: 9 (also ends up being  15 gas)\r\n\r\nSo each iteration is: 67 gas (in the best case) or 85 gas (in the current codegen.)\r\n\r\nHowever, the equivalent average cost for one iteration in the `calldatacopy` case would be approximately`6` gas. Total cost would be\r\n- If condition + `jumpi`: 25\r\n- Body: `3 + 6*n` (for calldatacopy) + 21 for the rest.\r\n\r\nThe total cost for loop would be `25 + 64 * n` whereas it's `49 + 6*n` for the if condition, where `n` is the number of iterations.\r\n\r\n(In practice, a user reported that a certain function after the change went from `3k` to `700` gas!)\r\n\r\n---\r\n\r\n## Implementation\r\n\r\nOne way to implement this is similar to pattern matching in `ExpressionSimplifier`.\r\n\r\nWe match\r\n\r\n```\r\nfor { } lt(X, Y) { Z := add(Z, 1) }\r\n{\r\n    mstore(U, calldataload(V))\r\n    U := add(U, 32)\r\n    V := add(V, 32)\r\n}\r\n```\r\n\r\nand replace it by \r\n\r\n```\r\nif lt(X, Y) {\r\n    calldatacopy(U, V, mul(32, sub(Y, X)))\r\n}\r\n```\r\n\r\nWhere `X`, `Y`, `U` and `V` should match only identifiers or literals.\r\n\r\n--- \r\n## Other loops.\r\n\r\nSimilarly, also for `returndata`.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11586/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11586/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/874582091",
    "html_url": "https://github.com/ethereum/solidity/issues/11586#issuecomment-874582091",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11586",
    "id": 874582091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDU4MjA5MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T08:51:28Z",
    "updated_at": "2021-07-06T08:51:28Z",
    "author_association": "MEMBER",
    "body": "We were thinking about a pattern matching system that can match Yul syntax beyond expressions previously (I guess there is also an issue).\r\n\r\nFor this particular case, we have the additional requirements that:\r\n - `X` and `Y` are movable\r\n -  `Z`, `U` and `V` are never read after the for loop\r\n\r\n(I actually think that `X` and `Z` should be the same variable)\r\n\r\nThe second condition can be removed by changing the replacement so that `U`, `V` and `X`/`Z` are just incremented accordingly. Another optimizer stage should remove this assignment if they are never read afterwards.\r\n\r\nAlso, potentially wrapping behaviour should be taken into account for the condition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/874582091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1463220808",
    "html_url": "https://github.com/ethereum/solidity/issues/11586#issuecomment-1463220808",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11586",
    "id": 1463220808,
    "node_id": "IC_kwDOAm_5kc5XNvpI",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T04:02:18Z",
    "updated_at": "2023-03-10T04:02:18Z",
    "author_association": "NONE",
    "body": "any update on this? thx",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1463220808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1582461116",
    "html_url": "https://github.com/ethereum/solidity/issues/11586#issuecomment-1582461116",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11586",
    "id": 1582461116,
    "node_id": "IC_kwDOAm_5kc5eUnC8",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-06-08T12:04:02Z",
    "updated_at": "2023-06-08T12:04:02Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1582461116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
