{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9597",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9597/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9597/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9597/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9597",
  "id": 676706662,
  "node_id": "MDU6SXNzdWU2NzY3MDY2NjI=",
  "number": 9597,
  "title": "pragma experimental ABIEncoderV2 cannot compile some existing code",
  "user": {
    "login": "saurik",
    "id": 36743,
    "node_id": "MDQ6VXNlcjM2NzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/36743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saurik",
    "html_url": "https://github.com/saurik",
    "followers_url": "https://api.github.com/users/saurik/followers",
    "following_url": "https://api.github.com/users/saurik/following{/other_user}",
    "gists_url": "https://api.github.com/users/saurik/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saurik/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saurik/subscriptions",
    "organizations_url": "https://api.github.com/users/saurik/orgs",
    "repos_url": "https://api.github.com/users/saurik/repos",
    "events_url": "https://api.github.com/users/saurik/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saurik/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-08-11T09:01:59Z",
  "updated_at": "2020-08-24T20:38:46Z",
  "closed_at": "2020-08-17T15:20:19Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I have now read through a number of issues--mostly supposedly closed and fixed?--surrounding ABIEncoderV2 and stack depth, but I can't find anything that addresses this and it feels like a bug: there is code that works fine without ABIEncoderV2 that breaks with the new encoder... and this code doesn't even use any of the new encoding features, which seems incorrect (and makes it so you can't turn on ABIEncoderV2 on existing code if you want to use the new encoder for some new function).\r\n\r\n```solidity\r\npragma solidity 0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Test {\r\n    function test(\r\n        int, int, int,\r\n        int, int, int,\r\n        int, int, int,\r\n        int, int, int, int\r\n    ) external {\r\n    }\r\n}\r\n```\r\n\r\n```Compiler error: Stack too deep when compiling inline assembly: Variable dataEnd is 1 slot(s) too deep inside the stack.```\r\n\r\nIf this is intentional, is there some place I can get a better understanding of what this new encoder is doing that is so much different than the old encoder for these basic functions?",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9597/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9597/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/674944640",
    "html_url": "https://github.com/ethereum/solidity/issues/9597#issuecomment-674944640",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9597",
    "id": 674944640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDk0NDY0MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T15:20:19Z",
    "updated_at": "2020-08-17T15:20:19Z",
    "author_association": "MEMBER",
    "body": "Sorry, but this is a know limitation. We are trying to improve stack problems, but ABIEncoderV2 is not a drop-in replacement for the older encoder. The way to fix this is to back the 13 variables into structs to allow for better readability.\r\n\r\nThe reason this fails is because the new encoder uses an intermediate language that prevents some errors but at the same time adds overhead which needs more stack slots.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/674944640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678590717",
    "html_url": "https://github.com/ethereum/solidity/issues/9597#issuecomment-678590717",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9597",
    "id": 678590717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODU5MDcxNw==",
    "user": {
      "login": "saurik",
      "id": 36743,
      "node_id": "MDQ6VXNlcjM2NzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurik",
      "html_url": "https://github.com/saurik",
      "followers_url": "https://api.github.com/users/saurik/followers",
      "following_url": "https://api.github.com/users/saurik/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurik/subscriptions",
      "organizations_url": "https://api.github.com/users/saurik/orgs",
      "repos_url": "https://api.github.com/users/saurik/repos",
      "events_url": "https://api.github.com/users/saurik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-22T04:08:26Z",
    "updated_at": "2020-08-22T04:08:26Z",
    "author_association": "NONE",
    "body": "> The way to fix this is to back the 13 variables into structs to allow for better readability.\r\n\r\nThanks for the suggestion, but in addition to finding the readability of a structure vs. parameters subjective, when I tested the gas cost of the structure it was higher than the arguments; I can check that again (as maybe I'd done that wrong or had forgotten exactly what I had tested now, as this was a while ago), but \"it is maybe, subjectively, ever so slightly harder for some people to read code that uses parameters, but the resulting program will be more expensive to run until the end of time\", I know which side I'm going to fall on (particularly as the entire reason I'm embarking on this project task right now with this new ABI support is to reduce my gas cost ;P).\r\n\r\nFWIW, the reason I still consider this a bug is because you can't always just change the code anyway: if that function is specified on an interface, I guess you just can't use the ABIv2 encoder anywhere in your contract? If a function doesn't actually use any struct or tuple arguments, it should have identical drop-in behavior to the v1 encoder, as the v1 encoder would literally still work: like, opting in to \"I want to be able to serialize and deserialize structs and tuples using a new maybe-experimental/unstable ABI\" shouldn't affect the behavior of functions that are using neither structs nor tuples as parameters, as the ABI for those functions hasn't changed, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678590717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679353498",
    "html_url": "https://github.com/ethereum/solidity/issues/9597#issuecomment-679353498",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9597",
    "id": 679353498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTM1MzQ5OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T20:38:46Z",
    "updated_at": "2020-08-24T20:38:46Z",
    "author_association": "MEMBER",
    "body": "ABIEncoderV2 is a re-implementation of the original ABI coder. It adds features but the ABI did not change. Since it is a re-implementation, some tradeoff decisions were made with different goals in mind. The new coder creates intermediate code that is readable while the old coder just creates a big mess of opcodes nobody can understand. The new coder performs range checks while the old coder just masks invalid data. Because of that, the V2 coder is not a drop-in replacement and will fail to compile some contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679353498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
