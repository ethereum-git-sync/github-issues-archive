{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3618/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3618/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3618/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3618",
  "id": 300977984,
  "node_id": "MDU6SXNzdWUzMDA5Nzc5ODQ=",
  "number": 3618,
  "title": "Provide name hints for tuples in ABI-json",
  "user": {
    "login": "iikirilov",
    "id": 9802500,
    "node_id": "MDQ6VXNlcjk4MDI1MDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9802500?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iikirilov",
    "html_url": "https://github.com/iikirilov",
    "followers_url": "https://api.github.com/users/iikirilov/followers",
    "following_url": "https://api.github.com/users/iikirilov/following{/other_user}",
    "gists_url": "https://api.github.com/users/iikirilov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iikirilov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iikirilov/subscriptions",
    "organizations_url": "https://api.github.com/users/iikirilov/orgs",
    "repos_url": "https://api.github.com/users/iikirilov/repos",
    "events_url": "https://api.github.com/users/iikirilov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iikirilov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2018-02-28T10:52:44Z",
  "updated_at": "2019-07-18T16:33:20Z",
  "closed_at": "2019-07-18T16:33:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hey, I'm using pragma experimental ABIEncoderV2; when compiling a contract with a struct as a constructor parameter. I am looking to generate a java wrapper class for web3j to use java to communicate with the contract, however the abi is rather ambiguous and generic\r\n```\r\n{  \r\n   \"components\":[  \r\n       {  \r\n          \"name\":\"id\",\r\n           \"type\":\"string\"\r\n       },\r\n       {  \r\n          \"name\":\"name\",\r\n           \"type\":\"string\"\r\n       }\r\n   ],\r\n   \"name\":\"_toSet\",\r\n   \"type\":\"tuple\"\r\n}\r\n```\r\n        \r\nI know this is an experimental feature, but I am wondering what are the plans for the final product. I envisage the \"type\":\"tuple\"should become \"type\":<struct_name>?\r\nN.B. this is a generic example but I can see a number of issues with this kind of encoding, checkout web3j/web3j#368 for more info.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3618/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3618/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/369251623",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-369251623",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 369251623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTI1MTYyMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T14:14:06Z",
    "updated_at": "2018-02-28T14:14:06Z",
    "author_association": "MEMBER",
    "body": "This is to be improved with #2899. Please read that issue thoroughly, it should explain this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/369251623/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371426781",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371426781",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371426781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNjc4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T09:12:46Z",
    "updated_at": "2018-03-08T09:12:46Z",
    "author_association": "MEMBER",
    "body": "@iikirilov the tl;dr is that user-defined types in the ABI are not named, because there is no way to make such names globally unique. ABI only knows anonymous tuples with named components. Solidity's structs are mapped to those, stripping off the identity of the struct.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371426781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371427025",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371427025",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371427025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNzAyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T09:13:47Z",
    "updated_at": "2018-03-08T09:13:47Z",
    "author_association": "MEMBER",
    "body": "What would be your suggestion?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371427025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371534974",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371534974",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371534974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUzNDk3NA==",
    "user": {
      "login": "iikirilov",
      "id": 9802500,
      "node_id": "MDQ6VXNlcjk4MDI1MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9802500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iikirilov",
      "html_url": "https://github.com/iikirilov",
      "followers_url": "https://api.github.com/users/iikirilov/followers",
      "following_url": "https://api.github.com/users/iikirilov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iikirilov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iikirilov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iikirilov/subscriptions",
      "organizations_url": "https://api.github.com/users/iikirilov/orgs",
      "repos_url": "https://api.github.com/users/iikirilov/repos",
      "events_url": "https://api.github.com/users/iikirilov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iikirilov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T16:10:18Z",
    "updated_at": "2018-03-08T16:10:18Z",
    "author_association": "NONE",
    "body": "Correct me if I'm wrong, such user-defined names are unique to the contract. As suggested in #2899 an extra field with user-defined name could be used when generating the ABI.\r\n\r\nWhat is the downside to adding a field to the ABI for such cases?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371534974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371561529",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371561529",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371561529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTU2MTUyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T17:31:17Z",
    "updated_at": "2018-03-08T17:31:17Z",
    "author_association": "MEMBER",
    "body": "Yes, user-defined names are unique to the contract, but the contract name is not globally unique, it only gets globally unique for a compilation run if you prepend the full path to the source name.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371561529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371762792",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371762792",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371762792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc2Mjc5Mg==",
    "user": {
      "login": "iikirilov",
      "id": 9802500,
      "node_id": "MDQ6VXNlcjk4MDI1MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9802500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iikirilov",
      "html_url": "https://github.com/iikirilov",
      "followers_url": "https://api.github.com/users/iikirilov/followers",
      "following_url": "https://api.github.com/users/iikirilov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iikirilov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iikirilov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iikirilov/subscriptions",
      "organizations_url": "https://api.github.com/users/iikirilov/orgs",
      "repos_url": "https://api.github.com/users/iikirilov/repos",
      "events_url": "https://api.github.com/users/iikirilov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iikirilov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T09:39:10Z",
    "updated_at": "2018-03-09T09:39:10Z",
    "author_association": "NONE",
    "body": "Agreed, but I do not understand the why the added should be globally unique. An example encoding of what is proposed follows:\r\n\r\n```\r\n{  \r\n   \"components\":[  \r\n       {  \r\n          \"name\":\"id\",\r\n           \"type\":\"string\"\r\n       },\r\n       {  \r\n          \"name\":\"name\",\r\n           \"type\":\"string\"\r\n       }\r\n   ],\r\n   \"name\":\"_toSet\",\r\n   \"type\":\"tuple\"\r\n   \"namedType\": \"Foo\"\r\n}\r\n```\r\nAn extra field added like this for such cases would cause the swarm hash to change, which is essentially what happens when compiling the same contract with different version of Solidity anyway, so developers would expect this.\r\n\r\nApart from the fact that the ABI files will be (slightly) larger I do not see an immediate drawback to this. From my understanding the ABI is not stored on the blockchain so no extra gas cost is incurred. Also adding an extra field should not break backwards compatibility when interacting with contracts via geth/parity etc. \r\n\r\nConsider the case, where there are multiple structs in a contract used in multiple function input/output. With the current ABI, we are able to generate classes with ambiguous name such as `Struct1`, `Struct2` etc. It does not make sense to expect the developer to know that class `Struct1` in their java smart-contract wrapper is the same as the `Foo` struct in their contract.\r\n\r\nIn either case, this metadata is invaluable information for creating high-level construct such as smart-contract wrappers to interact with smart contract via major languages such as Java. It will make it easier for developers using web3j/ether.js/nethereum to be able to create instances of their structs in their native language to call methods that require those structs as parameters.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371762792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371772415",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371772415",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371772415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc3MjQxNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T10:18:32Z",
    "updated_at": "2018-03-09T10:18:32Z",
    "author_association": "MEMBER",
    "body": "@iikirilov you have a point, perhaps it is not too important that the names are unique. Could you explain how exactly you would use such information? We haven't really discussed that yet. Please also consider cases where users might be tricked into using the wrong struct. Furthermore, we should check what information an algorithm using the ABI information needs to know in addition to just the ABI (currently, no additional information is require).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371772415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371819813",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-371819813",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 371819813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTgxOTgxMw==",
    "user": {
      "login": "iikirilov",
      "id": 9802500,
      "node_id": "MDQ6VXNlcjk4MDI1MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9802500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iikirilov",
      "html_url": "https://github.com/iikirilov",
      "followers_url": "https://api.github.com/users/iikirilov/followers",
      "following_url": "https://api.github.com/users/iikirilov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iikirilov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iikirilov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iikirilov/subscriptions",
      "organizations_url": "https://api.github.com/users/iikirilov/orgs",
      "repos_url": "https://api.github.com/users/iikirilov/repos",
      "events_url": "https://api.github.com/users/iikirilov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iikirilov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T14:01:06Z",
    "updated_at": "2018-03-09T14:01:06Z",
    "author_association": "NONE",
    "body": "Web3j has a module to autogenerate smart-contract wrappers from smart contract ABI. One would type in terminal:\r\n```\r\nweb3j solidity generate [--javaTypes|--solidityTypes] /path/to/<smart-contract>.bin /path/to/<smart-contract>.abi -o /path/to/src/main/java -p com.your.organisation.name\r\n```\r\nThis creates a Java class representing their contract using [JavaPoet](https://github.com/square/javapoet). In our case, the generated constructs are typesafe so one could not possibly use the wrong struct. The class is used to interact with the the smart contract, including things like deploying a new contract, loading an existing contract and executing functions.\r\n\r\nI believe discussing the algorithm used to autogenerate these smart-contract wrappers is out of the scope of this issue. However, feel free to checkout the implementation [here](https://github.com/web3j/web3j/tree/master/codegen/src/main/java/org/web3j/codegen).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371819813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/372303428",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-372303428",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 372303428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMwMzQyOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T13:08:45Z",
    "updated_at": "2018-03-12T13:08:45Z",
    "author_association": "MEMBER",
    "body": "Sure, Solidity is also type safe, but still, people could confuse two structs of the same name (but different namespaces). I'm fine with ignoring this potential point of confusion, though. If the compiler only specifies the name of the struct and not its full location, would your tool still be able to work with it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/372303428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/372985572",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-372985572",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 372985572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjk4NTU3Mg==",
    "user": {
      "login": "iikirilov",
      "id": 9802500,
      "node_id": "MDQ6VXNlcjk4MDI1MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9802500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iikirilov",
      "html_url": "https://github.com/iikirilov",
      "followers_url": "https://api.github.com/users/iikirilov/followers",
      "following_url": "https://api.github.com/users/iikirilov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iikirilov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iikirilov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iikirilov/subscriptions",
      "organizations_url": "https://api.github.com/users/iikirilov/orgs",
      "repos_url": "https://api.github.com/users/iikirilov/repos",
      "events_url": "https://api.github.com/users/iikirilov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iikirilov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T11:13:06Z",
    "updated_at": "2018-03-14T11:58:35Z",
    "author_association": "NONE",
    "body": "Yes, we do not need the full location for our use case. \r\n\r\nI do see the potential for confusion now. Let us consider the following case:\r\n1. Library A with struct W\r\n2. Library B with struct X\r\n3. Contract C with struct Y which imports Libraries A and B\r\n4. Contract D with struct Z,\r\nwhere the name of W, X, Y, Z is `MyStruct`.\r\n\r\nThe ABI of A and B is empty as they are libraries.\r\n\r\nThe ABI of C will include:\r\nevery instance of W as `A.MyStruct`,\r\nevery instance of X as `B.MyStruct` and\r\nevery instance of Y as `MyStruct`\r\n\r\nThe ABI of D will include every instance of Z as `MyStruct`\r\n\r\nTo remove the ambiguity just use the fully qualified name such that:\r\nC will represent Y as `C.MyStruct` and\r\nD will represent Z as `D.MyStruct`\r\n\r\nNow, even if D imports C the \"name hint\" for each struct will be unique, until you get two contract with the same name, but that is a different issue.\r\n                                                                                                   ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/372985572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/373352441",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-373352441",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 373352441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM1MjQ0MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T11:59:09Z",
    "updated_at": "2018-03-15T11:59:09Z",
    "author_association": "MEMBER",
    "body": "I specifically had the case of two contracts with the same name in mind. This is perfectly fine if they are in different files.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/373352441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386035803",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-386035803",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 386035803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAzNTgwMw==",
    "user": {
      "login": "juanfranblanco",
      "id": 562371,
      "node_id": "MDQ6VXNlcjU2MjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanfranblanco",
      "html_url": "https://github.com/juanfranblanco",
      "followers_url": "https://api.github.com/users/juanfranblanco/followers",
      "following_url": "https://api.github.com/users/juanfranblanco/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanfranblanco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanfranblanco/subscriptions",
      "organizations_url": "https://api.github.com/users/juanfranblanco/orgs",
      "repos_url": "https://api.github.com/users/juanfranblanco/repos",
      "events_url": "https://api.github.com/users/juanfranblanco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanfranblanco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T16:19:58Z",
    "updated_at": "2018-05-03T04:49:51Z",
    "author_association": "NONE",
    "body": "With Netherum we will face the very same problem, in a similar way as we create a class per command / query input / ouput message, each struct will represent also a class type. It will be great that for a Contract each struct type component will be listed (to simplify and avoid duplication).\r\n\r\nHaving something like described in #2899 will solve the problem, but also the internal parameter name. \r\n\r\nFor example Contract X has struct Y. \r\nContract X could have methods Add(Y), Update(Y), DoSomethingWith(Y) \r\nY should be listed in the Contract ABI.\r\n\r\nThe abis could become smaller as you would only need the input / output parameter pointing to the struct type including its name.\r\n\r\nBut if Y has Z and A internally each element needs to be named so a hierarchical structure can be created.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386035803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386037538",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-386037538",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 386037538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAzNzUzOA==",
    "user": {
      "login": "juanfranblanco",
      "id": 562371,
      "node_id": "MDQ6VXNlcjU2MjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanfranblanco",
      "html_url": "https://github.com/juanfranblanco",
      "followers_url": "https://api.github.com/users/juanfranblanco/followers",
      "following_url": "https://api.github.com/users/juanfranblanco/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanfranblanco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanfranblanco/subscriptions",
      "organizations_url": "https://api.github.com/users/juanfranblanco/orgs",
      "repos_url": "https://api.github.com/users/juanfranblanco/repos",
      "events_url": "https://api.github.com/users/juanfranblanco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanfranblanco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T16:25:28Z",
    "updated_at": "2018-05-03T04:47:05Z",
    "author_association": "NONE",
    "body": "Now the interesting part is when you are creating \"Standard Contracts\" that can be extended / inherited, for example, a custom ERC20 with extra functions. \r\n\r\nIn this scenario, most of your business logic (for example validation, assignment etc) will be the duplicated if having duplicated types. \r\n\r\nProbably in this scenario the end user will have to remove duplications himself / herself providing the right namespace.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386037538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386253327",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-386253327",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 386253327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI1MzMyNw==",
    "user": {
      "login": "juanfranblanco",
      "id": 562371,
      "node_id": "MDQ6VXNlcjU2MjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanfranblanco",
      "html_url": "https://github.com/juanfranblanco",
      "followers_url": "https://api.github.com/users/juanfranblanco/followers",
      "following_url": "https://api.github.com/users/juanfranblanco/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanfranblanco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanfranblanco/subscriptions",
      "organizations_url": "https://api.github.com/users/juanfranblanco/orgs",
      "repos_url": "https://api.github.com/users/juanfranblanco/repos",
      "events_url": "https://api.github.com/users/juanfranblanco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanfranblanco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T10:33:48Z",
    "updated_at": "2018-05-03T10:33:48Z",
    "author_association": "NONE",
    "body": "An example (using a previous issue)\r\n\r\n```solidity\r\npragma solidity 0.4.23;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract TestContract\r\n{\r\n    struct SubStruct {\r\n        uint256 id;\r\n        string description;\r\n    }\r\n\r\n    struct TestStruct {\r\n        SubStruct subStruct1;\r\n        SubStruct subStruct2;\r\n    }\r\n\r\n    event SomethingDone(uint256 indexed id1, uint256 indexed id2 );\r\n\r\n    TestStruct[] internal tests;\r\n\r\n    function addTestStruct(TestStruct testStruct) public\r\n    {\r\n        tests.push(testStruct);\r\n    }\r\n\r\n    function doSomethingWithStruct(TestStruct testStruct) public {\r\n        emit SomethingDone(testStruct.subStruct1.id, testStruct.subStruct2.id);\r\n    }\r\n}\r\n```\r\n\r\nResults in this abi\r\n\r\n```\r\n[\r\n   {\r\n      \"constant\":false,\r\n      \"inputs\":[\r\n         {\r\n            \"components\":[\r\n               {\r\n                  \"components\":[\r\n                     {\r\n                        \"name\":\"id\",\r\n                        \"type\":\"uint256\"\r\n                     },\r\n                     {\r\n                        \"name\":\"description\",\r\n                        \"type\":\"string\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"subStruct1\",\r\n                  \"type\":\"tuple\"\r\n               },\r\n               {\r\n                  \"components\":[\r\n                     {\r\n                        \"name\":\"id\",\r\n                        \"type\":\"uint256\"\r\n                     },\r\n                     {\r\n                        \"name\":\"description\",\r\n                        \"type\":\"string\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"subStruct2\",\r\n                  \"type\":\"tuple\"\r\n               }\r\n            ],\r\n            \"name\":\"testStruct\",\r\n            \"type\":\"tuple\"\r\n         }\r\n      ],\r\n      \"name\":\"addTestStruct\",\r\n      \"outputs\":[\r\n\r\n      ],\r\n      \"payable\":false,\r\n      \"stateMutability\":\"nonpayable\",\r\n      \"type\":\"function\"\r\n   },\r\n   {\r\n      \"constant\":false,\r\n      \"inputs\":[\r\n         {\r\n            \"components\":[\r\n               {\r\n                  \"components\":[\r\n                     {\r\n                        \"name\":\"id\",\r\n                        \"type\":\"uint256\"\r\n                     },\r\n                     {\r\n                        \"name\":\"description\",\r\n                        \"type\":\"string\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"subStruct1\",\r\n                  \"type\":\"tuple\"\r\n               },\r\n               {\r\n                  \"components\":[\r\n                     {\r\n                        \"name\":\"id\",\r\n                        \"type\":\"uint256\"\r\n                     },\r\n                     {\r\n                        \"name\":\"description\",\r\n                        \"type\":\"string\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"subStruct2\",\r\n                  \"type\":\"tuple\"\r\n               }\r\n            ],\r\n            \"name\":\"testStruct\",\r\n            \"type\":\"tuple\"\r\n         }\r\n      ],\r\n      \"name\":\"doSomethingWithStruct\",\r\n      \"outputs\":[\r\n\r\n      ],\r\n      \"payable\":false,\r\n      \"stateMutability\":\"nonpayable\",\r\n      \"type\":\"function\"\r\n   },\r\n   {\r\n      \"anonymous\":false,\r\n      \"inputs\":[\r\n         {\r\n            \"indexed\":true,\r\n            \"name\":\"id1\",\r\n            \"type\":\"uint256\"\r\n         },\r\n         {\r\n            \"indexed\":true,\r\n            \"name\":\"id2\",\r\n            \"type\":\"uint256\"\r\n         }\r\n      ],\r\n      \"name\":\"SomethingDone\",\r\n      \"type\":\"event\"\r\n   }\r\n]\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386253327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396981930",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-396981930",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 396981930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk4MTkzMA==",
    "user": {
      "login": "conor10",
      "id": 2148266,
      "node_id": "MDQ6VXNlcjIxNDgyNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2148266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conor10",
      "html_url": "https://github.com/conor10",
      "followers_url": "https://api.github.com/users/conor10/followers",
      "following_url": "https://api.github.com/users/conor10/following{/other_user}",
      "gists_url": "https://api.github.com/users/conor10/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conor10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conor10/subscriptions",
      "organizations_url": "https://api.github.com/users/conor10/orgs",
      "repos_url": "https://api.github.com/users/conor10/repos",
      "events_url": "https://api.github.com/users/conor10/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conor10/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T15:34:24Z",
    "updated_at": "2018-06-13T15:34:24Z",
    "author_association": "NONE",
    "body": "@chriseth @axic did you have any further thoughts on the above? It would be really useful if for the web3j community we could have an additional field in the ABI for structs",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396981930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409013551",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-409013551",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 409013551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAxMzU1MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T21:17:08Z",
    "updated_at": "2018-07-30T21:17:08Z",
    "author_association": "MEMBER",
    "body": "Sorry for the delay. I haven't fully read this thread yet, but proposed to have an `annontatedType` next to the current *encoding* `type` field. See #2899.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409013551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/475272597",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-475272597",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 475272597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTI3MjU5Nw==",
    "user": {
      "login": "juanfranblanco",
      "id": 562371,
      "node_id": "MDQ6VXNlcjU2MjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanfranblanco",
      "html_url": "https://github.com/juanfranblanco",
      "followers_url": "https://api.github.com/users/juanfranblanco/followers",
      "following_url": "https://api.github.com/users/juanfranblanco/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanfranblanco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanfranblanco/subscriptions",
      "organizations_url": "https://api.github.com/users/juanfranblanco/orgs",
      "repos_url": "https://api.github.com/users/juanfranblanco/repos",
      "events_url": "https://api.github.com/users/juanfranblanco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanfranblanco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-21T15:19:08Z",
    "updated_at": "2019-03-21T15:19:08Z",
    "author_association": "NONE",
    "body": "@chriseth Following our chat a while ago, would it be possible to add the hint of the struct type to the abi? This is probably the simplest solution before we have @axic ```annotatedTypes```\r\n\r\nSimilar to what @iikirilov said, this will allow for simple identification of the different structs and be code generated accordingly so we can avoid duplication of types generated.\r\n\r\n```json\r\n{  \r\n   \"components\":[  \r\n       {  \r\n          \"name\":\"id\",\r\n           \"type\":\"string\"\r\n       },\r\n       {  \r\n          \"name\":\"name\",\r\n           \"type\":\"string\"\r\n       }\r\n   ],\r\n   \"name\":\"_toSet\",\r\n   \"type\":\"tuple\"\r\n   \"namedType\": \"Foo\"\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/475272597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/507746138",
    "html_url": "https://github.com/ethereum/solidity/issues/3618#issuecomment-507746138",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3618",
    "id": 507746138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzc0NjEzOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-02T16:15:27Z",
    "updated_at": "2019-07-02T16:15:57Z",
    "author_association": "MEMBER",
    "body": "@juanfranblanco @iikirilov sorry for the delay, we are working on this now. Please check out the [PR](https://github.com/ethereum/solidity/pull/7033) to see if this is sufficient for your needs. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/507746138/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  }
]
