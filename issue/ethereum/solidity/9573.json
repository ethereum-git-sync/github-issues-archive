{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9573/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9573/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9573/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9573",
  "id": 673174820,
  "node_id": "MDU6SXNzdWU2NzMxNzQ4MjA=",
  "number": 9573,
  "title": "Inconsistent bytecode created for identical contract input using standard-json compiler input",
  "user": {
    "login": "epheph",
    "id": 361654,
    "node_id": "MDQ6VXNlcjM2MTY1NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/361654?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/epheph",
    "html_url": "https://github.com/epheph",
    "followers_url": "https://api.github.com/users/epheph/followers",
    "following_url": "https://api.github.com/users/epheph/following{/other_user}",
    "gists_url": "https://api.github.com/users/epheph/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/epheph/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/epheph/subscriptions",
    "organizations_url": "https://api.github.com/users/epheph/orgs",
    "repos_url": "https://api.github.com/users/epheph/repos",
    "events_url": "https://api.github.com/users/epheph/events{/privacy}",
    "received_events_url": "https://api.github.com/users/epheph/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 26,
  "created_at": "2020-08-05T00:57:28Z",
  "updated_at": "2022-12-21T14:50:53Z",
  "closed_at": "2020-08-26T14:39:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nDuring deployment of Augur, one of the contracts would not verify on Etherscan properly: the deployment process created one bytecode for \"ZeroXTrade\", while giving the Standard Json to Etherscan and having them compile created bytecode with VERY slightly different bytecode  (of different lengths!).\r\n\r\nDue to past issues with contract verification, Augur flattens all contracts prior to deployment. The Standard Json that is provided to solidity lists many contracts to be compiled, but all of them are completely flattened and self-contained (with significant code-duplication between them).\r\n\r\nThe issue is that the bytecode created for a self-contained contract changes depending on what OTHER self-contained contracts are compiled at the same time. In the example below, I have linked two different inputs that are identical except for an additional self-contained contract being compiled at the same time which demonstrates this issue.\r\n \r\n## Environment\r\n\r\n- Compiler version: 0.5.17\r\n- Target EVM version (as per compiler settings): 0.5.17\r\n- Framework/IDE (e.g. Truffle or Remix): n/a\r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system: Linux\r\n\r\n## Steps to Reproduce\r\n\r\nstandard-json examples that show the issue:\r\n\r\nhttps://gist.github.com/epheph/20428a1ff7163bce1d47be7d7b623344\r\n\r\nThe only difference between these two files is the \"Augur.sol\" section (which jq is discarding the output of).\r\n\r\nIf you run each of these through solc 0.5.17:\r\n```\r\n$ cat 1-contract.json  | solc-0.5.17 --standard-json \\\r\n      | jq -r '.contracts[\"trading/ZeroXTrade.sol\"].ZeroXTrade.evm.bytecode.object' | egrep -o '^.{64}'\r\n60806040526000805461ffff1916905534801561001b57600080fd5b506147c2\r\n\r\n$ cat 2-contracts.json  | solc-0.5.17 --standard-json \\\r\n     | jq -r '.contracts[\"trading/ZeroXTrade.sol\"].ZeroXTrade.evm.bytecode.object' | egrep -o '^.{64}'\r\n60806040526000805461ffff1916905534801561001b57600080fd5b506147d1\r\n```\r\n\r\nLook at the last characters, `c2` vs `d1`. There are many other slight differences, but this is the first.\r\n\r\nZeroXTrade.sol makes NO reference to Augur.sol, so the fact that Augur.sol is compiled in the same solidity run should not change the ZeroXTrade's bytecode.\r\n\r\n/cc @nuevoalex\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9573/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9573/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669024825",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-669024825",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 669024825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTAyNDgyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T07:15:07Z",
    "updated_at": "2020-08-05T07:15:07Z",
    "author_association": "MEMBER",
    "body": "Thanks for reporting this!\r\n\r\nLooking at the assembly output, two things are interesting:\r\n - the source references to internal routines are different, which means that the internal routines themselves are probably different\r\n - the differences in generated code look like different decisions being made in the optimizer",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669024825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669026642",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-669026642",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 669026642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTAyNjY0Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T07:19:11Z",
    "updated_at": "2020-08-05T07:19:11Z",
    "author_association": "MEMBER",
    "body": "To fix this properly, we have to reset the yul string repository between contracts, which would invalidate the inline assembly part of the AST which is stored in parsed form and thus uses yul strings.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669026642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669044575",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-669044575",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 669044575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTA0NDU3NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T07:59:36Z",
    "updated_at": "2020-08-05T07:59:36Z",
    "author_association": "MEMBER",
    "body": "Actually the difference is only in the internal routines, so resetting the yul string repository might be all that is needed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669044575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669111906",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-669111906",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 669111906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTExMTkwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T10:21:24Z",
    "updated_at": "2020-08-05T10:21:24Z",
    "author_association": "MEMBER",
    "body": "It turns out that the problem is that AST IDs are encoded into function names which leads to the optimizing handling them in a different order resulting in a different way functions are inlined.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669111906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669231306",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-669231306",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 669231306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTIzMTMwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T14:37:23Z",
    "updated_at": "2020-08-05T14:37:23Z",
    "author_association": "MEMBER",
    "body": "Current plan of attack:\r\n - rename all identifiers to look nicer (we wanted to do that anyway) and remove AST IDs in the process\r\n - modify the function inliner such that it inlines functions in an order that does not depend (very much) on the names of the functions: Start with leaves of the call graph ( https://github.com/ethereum/solidity/pull/9314 ) and use the block hasher to make it deterministic",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/669231306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/677664199",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-677664199",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 677664199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzY2NDE5OQ==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T13:27:29Z",
    "updated_at": "2020-08-20T13:27:29Z",
    "author_association": "MEMBER",
    "body": "This bug has really big implications for Buidler's new compilation pipeline. We are now forced to disable some optimizations we've been working on. \r\n\r\nCan someone point to the first version of solc with this problem? That would be incredibly valuable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/677664199/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/677745516",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-677745516",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 677745516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Nzc0NTUxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T15:46:12Z",
    "updated_at": "2020-08-20T15:46:12Z",
    "author_association": "MEMBER",
    "body": "The problem should be present whenever you have some Yul code and the yul optimizer is activated. It got activated together with the regular optimizer starting from 0.6.0. You have Yul code whenever you use ABIEncoderV2. I think there are also some other situations here yul code is generated, but it might not have that problem.\r\n\r\nActually I think this only happens if you have multiple files in one compilation unit that contain structs or contracts with the same name. So if you don't just flatten everything ( ;) ), you should be rather safe. The reason is that the names of the Yul functions always have the data type name and its AST ID. If the data type name is already unique, a change in the AST ID should not matter much.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/677745516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678833033",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-678833033",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 678833033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODgzMzAzMw==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-23T22:30:59Z",
    "updated_at": "2020-08-23T22:49:00Z",
    "author_association": "MEMBER",
    "body": "> So if you don't just flatten everything ( ;) ), you should be rather safe.\r\n\r\nI think that's not always true. I believe our new compilation pipeline can easily trigger this bug. \r\n\r\nHere's an example of what we were planning to do, and why it would fail:\r\n\r\n* Suppose you have files `A.sol`, `B.sol` and `C.sol`. `B.sol` imports `A.sol`.\r\n* Starting with a clean project, you'd compile `A.sol`, `B.sol` and `C.sol` together. \r\n* Then, you modify `B.sol` and it gets compiled alongside `A.sol`.\r\n* The user then deploys each a contract from `B.sol`, and forgets to verify it, nor is willing to commit the compilation output to git. Note that this is **extremely common**. I can't stress enough how common this is.\r\n* For some reason, like migrating to another pc, the project's cache/artifacts get cleared.\r\n* The user now wants to verify the contract from `B.sol`, so they compile the project. i.e. `A.sol`, `B.sol` and `C.sol` together.\r\n* `B.sol`'s output may be different, and if so, the verification would fail.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678833033/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678973981",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-678973981",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 678973981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODk3Mzk4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T08:02:36Z",
    "updated_at": "2020-08-24T08:02:36Z",
    "author_association": "MEMBER",
    "body": "@alcuadrado maybe I didn't understand, but are you saying that a user deploys a contract from a source that is not stored permanently and then cannot verify the contract? If this is so extremely common, then deployment tools should make sure they only work from a clean git repo that is synced to origin or even better, store the sources and the metadata somewhere.\r\n\r\nOr did I misunderstand you - I don't see how this is related to importing or flattening, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/678973981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679105609",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-679105609",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 679105609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTEwNTYwOQ==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T12:47:51Z",
    "updated_at": "2020-08-24T12:47:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth the sources (meaning, the Solidity files) are stored permanently. What is not stored permanently is the JSON input used by solc. In the first scenario, this JSON had the contracts `[A, B, C]`, but in the second scenario it only had `[B, C]`.\r\n\r\nThe point is that, because of this bug, this optimization (ignoring A in a re-compilation because it doesn't affect B and C) cannot be done. Does that make sense?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679105609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679144426",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-679144426",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 679144426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE0NDQyNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T14:01:35Z",
    "updated_at": "2020-08-24T14:01:35Z",
    "author_association": "MEMBER",
    "body": "@fvictorio as I said, my assumption is that this bug does not manifest itself as long as the files do not contain structs or contracts of the same name, but I will try to verify this assumption.\r\n\r\nIn general, the optimizer settings, file names, remappings and so on are crucial for verification and thus have to be stored. It would be great if deployment tools could help store the metadata file. If the metadata file is not requested as one of the output artefacts, then it is very much more difficult to source-verify a contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679144426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679154238",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-679154238",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 679154238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE1NDIzOA==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T14:16:30Z",
    "updated_at": "2020-08-24T14:16:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, yes, I forgot to add that detail: in that example, files `A` and `B` have contracts with the same name (and optimization is enabled, etc.) I was able to reproduce this bug that way.\r\n\r\nSo the thing we want to do is to be able to make the optimization of only compiling `B` and `C` if they were modified but `A` wasn't. With this bug, we won't be able to do that: we'll always need to include `A` even if it's not necessary. I think the point @alcuadrado was making is that this is an example of this bug manifesting itself while there's no flattening involved and limiting a potentially useful feature.\r\n\r\nI agree that this, in theory, this bug could be worked around by the deployment tool, but that doesn't change our situation with respect to the compilation pipeline.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679154238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679350400",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-679350400",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 679350400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTM1MDQwMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T20:31:54Z",
    "updated_at": "2020-08-24T20:31:54Z",
    "author_association": "MEMBER",
    "body": "@fvictorio ok, you are right, I confused the flattening in the initial example with the main problem of two files sharing identifiers of the same name. I assume that if you don't flatten then this will be a very rare case, but I guess we'll just fix this issue and then we are all happy - as long as everyone uses the latest version of Solidity :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679350400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680001675",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680001675",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680001675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDAwMTY3NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T12:43:55Z",
    "updated_at": "2020-08-25T12:43:55Z",
    "author_association": "MEMBER",
    "body": "Disabling the FullInliner results in the same bytecode, so it might be that we only have to fix that component.\r\n\r\n@ekpyron I think using the blockHasher does not really help here because it will consider two functions to be different if they call two different but equivalent functions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680001675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680008735",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680008735",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680008735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDAwODczNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T12:58:31Z",
    "updated_at": "2020-08-25T12:58:31Z",
    "author_association": "MEMBER",
    "body": "It turns out the actual fix is much easier: The function inliner processes functions according to their YulString sorting order. If they are processed based on their name (or position in the source, which is equivalent) instead, the bug is gone, and even the metadata is fully equal.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680008735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680046326",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680046326",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680046326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDA0NjMyNg==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T14:05:28Z",
    "updated_at": "2020-08-25T14:05:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chriseth can we assume that this bug will never happen if the optimizer is disabled?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680046326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680159501",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680159501",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680159501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDE1OTUwMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T17:18:37Z",
    "updated_at": "2020-08-25T17:18:37Z",
    "author_association": "MEMBER",
    "body": "@fvictorio this specific bug needs the yul optimizer to be enabled.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680159501/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680211870",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680211870",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680211870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDIxMTg3MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T18:59:21Z",
    "updated_at": "2020-08-25T18:59:21Z",
    "author_association": "MEMBER",
    "body": "It turns out that if you update the example code to Solidity 0.7.0, the bug is not present. I compared the yul code generated and it seems that there are some functions that are duplicated it 0.5.17: One for \"memory\" and one for \"memory pointer\", while the distinction between \"pointer\" or \"not pointer\" is only relevant for storage and thus it was removed for memory at some point.\r\n\r\nI implemented and verified a fix, but we cannot test it due to lack of example input.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680211870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680212040",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-680212040",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 680212040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDIxMjA0MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-25T18:59:43Z",
    "updated_at": "2020-08-25T18:59:43Z",
    "author_association": "MEMBER",
    "body": "If someone encounters an example that fails for 0.7.0, please report it!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/680212040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/683754915",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-683754915",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 683754915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mzc1NDkxNQ==",
    "user": {
      "login": "gitpusha",
      "id": 36712489,
      "node_id": "MDQ6VXNlcjM2NzEyNDg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36712489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitpusha",
      "html_url": "https://github.com/gitpusha",
      "followers_url": "https://api.github.com/users/gitpusha/followers",
      "following_url": "https://api.github.com/users/gitpusha/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitpusha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitpusha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitpusha/subscriptions",
      "organizations_url": "https://api.github.com/users/gitpusha/orgs",
      "repos_url": "https://api.github.com/users/gitpusha/repos",
      "events_url": "https://api.github.com/users/gitpusha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitpusha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-31T12:44:10Z",
    "updated_at": "2020-08-31T12:44:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi. This bug caused me a lot of trouble recently when I tried to verify some contracts that a colleague had compiled using solc-js `0.6.10` and deployed. I understand that this problem should be fixed with solidity `0.7.x`.  @chriseth - concerning my previously deployed contracts, should I have any other (security?) concerns with regards to this bug other than that verification might be difficult (if we havent stored the metadata)? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/683754915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/683764169",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-683764169",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 683764169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mzc2NDE2OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-31T13:03:54Z",
    "updated_at": "2020-08-31T13:03:54Z",
    "author_association": "MEMBER",
    "body": "The cause of the bug was just that optimizer steps were applied in a different order to the individual functions, so no reason for concern.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/683764169/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721632715",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-721632715",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 721632715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTYzMjcxNQ==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T09:57:11Z",
    "updated_at": "2020-11-04T09:57:11Z",
    "author_association": "COLLABORATOR",
    "body": "Leaving a note here that this affects Argent wallet contracts that are on solc 0.6.12 and using `ABIEncoderV2` pragma. When compiling these as part of the overall set of contracts they generate different bytecode than when compiled on their own. Example bytecode differences for `ApprovedTransfer` contract:\r\n\r\nCompiled as part of larger contracts set\r\nhttps://gist.github.com/elenadimitrova/9073bc073ee72a7264cafe2982823f6b#file-approvedtransfer_bytecode_compiledwithall\r\n\r\nCompiled alone\r\nhttps://gist.github.com/elenadimitrova/4f58d3795d009a05be2c2f56ca77d97c#file-approvedtransfer_bytecode_compiledalone\r\n\r\nAffected contracts are: `ApprovedTransfer`, `TokenExchanger`, `TransferManager`, `LimitStorage` and `RelayerManager`. \r\nBy compiling `ApprovedTransfer` and `RelayerManager` independently we've managed to produce the same bytecode as Etherscan for verification however this wasn't successful for `TransferManager` and `TokenExchanger` contracts which makes me think there is a larger issue here. I'd like this issue to be reopened and addressed as part of an update to 0.6 (as it is not an issue with 0.7).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/721632715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1359582370",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-1359582370",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 1359582370,
    "node_id": "IC_kwDOAm_5kc5RCZSi",
    "user": {
      "login": "vittominacori",
      "id": 8151143,
      "node_id": "MDQ6VXNlcjgxNTExNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8151143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vittominacori",
      "html_url": "https://github.com/vittominacori",
      "followers_url": "https://api.github.com/users/vittominacori/followers",
      "following_url": "https://api.github.com/users/vittominacori/following{/other_user}",
      "gists_url": "https://api.github.com/users/vittominacori/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vittominacori/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vittominacori/subscriptions",
      "organizations_url": "https://api.github.com/users/vittominacori/orgs",
      "repos_url": "https://api.github.com/users/vittominacori/repos",
      "events_url": "https://api.github.com/users/vittominacori/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vittominacori/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T15:40:07Z",
    "updated_at": "2022-12-20T15:40:07Z",
    "author_association": "NONE",
    "body": "Hi @fvictorio @alcuadrado is this issue solved?\r\nI always had that issue and it means that after developing with hardhat I must compile contracts with truffle before deploy otherwise I won't be able to verify them on etherscan.\r\n\r\nFor instance if I compile `SampleContract` in this [repository](https://github.com/noncept/solidity-toolkit) I obtain the following (different) bytecode:\r\n* [Truffle artifact](https://gist.github.com/vittominacori/bd1a43d91e93d9579bbea61fa642327b)\r\n* [Hardhat artifact](https://gist.github.com/vittominacori/0a10d4fd2550a5c20a7e4ffd1766ab11)\r\n\r\nIs there any hardhat configuration I'm missing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1359582370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1359845854",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-1359845854",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 1359845854,
    "node_id": "IC_kwDOAm_5kc5RDZne",
    "user": {
      "login": "scnale",
      "id": 12967987,
      "node_id": "MDQ6VXNlcjEyOTY3OTg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12967987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scnale",
      "html_url": "https://github.com/scnale",
      "followers_url": "https://api.github.com/users/scnale/followers",
      "following_url": "https://api.github.com/users/scnale/following{/other_user}",
      "gists_url": "https://api.github.com/users/scnale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scnale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scnale/subscriptions",
      "organizations_url": "https://api.github.com/users/scnale/orgs",
      "repos_url": "https://api.github.com/users/scnale/repos",
      "events_url": "https://api.github.com/users/scnale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scnale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T17:22:41Z",
    "updated_at": "2022-12-20T17:22:41Z",
    "author_association": "NONE",
    "body": "I don't think you can reasonably expect hardhat and truffle to produce the same bytecode since they both implement their own build pipeline. I.e. they define the standard input JSON that is passed to the compiler, which is not necessarily the same.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1359845854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1361199687",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-1361199687",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 1361199687,
    "node_id": "IC_kwDOAm_5kc5RIkJH",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T11:31:09Z",
    "updated_at": "2022-12-21T11:31:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vittominacori from what I can tell, the difference is just in the metadata (the last bytes) generated by Hardhat and Truffle. I don't quite understand why they are different though. (Btw, I obtained this by actually compiling your project, because the gist files you shared are super different in length, that can't be right.)\r\n\r\nThis issue is about a difference in the executable part of the bytecode, so I don't think you are running into a regression.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1361199687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1361429763",
    "html_url": "https://github.com/ethereum/solidity/issues/9573#issuecomment-1361429763",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9573",
    "id": 1361429763,
    "node_id": "IC_kwDOAm_5kc5RJcUD",
    "user": {
      "login": "vittominacori",
      "id": 8151143,
      "node_id": "MDQ6VXNlcjgxNTExNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8151143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vittominacori",
      "html_url": "https://github.com/vittominacori",
      "followers_url": "https://api.github.com/users/vittominacori/followers",
      "following_url": "https://api.github.com/users/vittominacori/following{/other_user}",
      "gists_url": "https://api.github.com/users/vittominacori/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vittominacori/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vittominacori/subscriptions",
      "organizations_url": "https://api.github.com/users/vittominacori/orgs",
      "repos_url": "https://api.github.com/users/vittominacori/repos",
      "events_url": "https://api.github.com/users/vittominacori/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vittominacori/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T14:50:53Z",
    "updated_at": "2022-12-21T14:50:53Z",
    "author_association": "NONE",
    "body": "> @vittominacori from what I can tell, the difference is just in the metadata (the last bytes) generated by Hardhat and Truffle. I don't quite understand why they are different though. (Btw, I obtained this by actually compiling your project, because the gist files you shared are super different in length, that can't be right.)\r\n> \r\n> This issue is about a difference in the executable part of the bytecode, so I don't think you are running into a regression.\r\n\r\nYes, sorry. Maybe I had old node modules installed.  \r\nI've just executed again with a fresh install and I updated the gist files.\r\nThey are still different but now I'm able to verify code on etherscan. Thanks\r\n\r\nHere the env\r\n* Hardhat 2.12.4\r\n* Truffle v5.7.0 (core: 5.7.0)\r\n* Ganache v7.5.0\r\n* Solidity - 0.8.17 (solc-js)\r\n* Node v16.18.1\r\n* npm 8.19.2\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1361429763/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
