{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12008/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12008/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12008/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12008",
  "id": 1004520092,
  "node_id": "I_kwDOAm_5kc4738Kc",
  "number": 12008,
  "title": "Reporting unused library references",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1012613901,
      "node_id": "MDU6TGFiZWwxMDEyNjEzOTAx",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/easy%20difficulty",
      "name": "easy difficulty",
      "color": "0b3f89",
      "default": false,
      "description": ""
    },
    {
      "id": 3515010024,
      "node_id": "LA_kwDOAm_5kc7Rgsvo",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/good%20first%20issue%20candidate",
      "name": "good first issue candidate",
      "color": "91B44D",
      "default": false,
      "description": "Could be a \"good first issue\" but something is blocking it or it has open questions."
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2021-09-22T16:59:05Z",
  "updated_at": "2022-12-05T19:07:38Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Abstract\r\nCurrently the compiler does not report an error if you supply library addresses that do not match any library referenced in the compiled sources. I think the compiler should warn user about with a message at 'info' severity.\r\n\r\n## Motivation\r\nThe current behavior is convenient for tools, which can simply pass in the list of all deployed libraries, without worrying whether they are actually used by the contracts being compiled or not. This is the case especially for incremental compilation where only a subset of contracts is being recompiled.\r\n\r\nOn the other hand this means that supplying a bad name does not result in an error. This does not make it easy for users to determine when they are doing it wrong.\r\n\r\n## Specification\r\nWhen a list of libraries is passed to the compiler using either `--libraries` option (on the CLI) or in `settings.libraries` (in Standard JSON), the compiler should check if all of them are present in the sources. Any that do not should be reported. The message should have 'info' severity and the compilation/linking should still succeed.\r\n\r\nIn assembly and linker modes the source of the library is not available. In that case the error should be based on whether the library address was actually used to replace a link reference in the bytecode.\r\n\r\n### Example 1\r\n- `contract.sol`:\r\n    ```solidity\r\n    library L {\r\n        function f() public {}\r\n    }\r\n    contract C {\r\n        function f() public { L.f(); }\r\n    }\r\n    ```\r\nWhen compiled with:\r\n```bash\r\nsolc contract.sol \\\r\n    --libraries \"contract.sol:X=0x1111111111111111111111111111111111111111\" \\\r\n    --libraries \"test.sol:L=0x2222222222222222222222222222222222222222\" \\\r\n    --libraries \"contract.sol:L=0x3333333333333333333333333333333333333333\"\r\n```\r\nthis should result in the following messages:\r\n```\r\nUnused link reference: 'contract.sol:X'. Library not found.\r\nUnused link reference: 'test.sol:L'. Library not found.\r\n```\r\nThe compiler should continue despite the messages.\r\n\r\n### Example 2\r\n- `contract.sol`:\r\n    ```solidity\r\n    contract C {}\r\n    ```\r\nthis should result in the following messages:\r\n```\r\nUnused link reference: 'contract.sol:L'. Library not found.\r\nUnused link reference: 'contract.sol:X'. Library not found.\r\nUnused link reference: 'test.sol:L'. Library not found.\r\n```\r\n\r\n### Example 3\r\nThis example should report the same messages as example 1. `contract.sol:L` should **not** be reported as unused despite not being referenced by `C` because the library does exist:\r\n- `contract.sol`:\r\n    ```solidity\r\n    library L {}\r\n    contract C {}\r\n    ```\r\n\r\n### Example 4\r\n- `contract.yul`:\r\n    ```yul\r\n    {\r\n        mstore(0x100, linkersymbol(\"contract.sol:L\"))\r\n    }\r\n    ```\r\nWhen compiled with:\r\n```bash\r\nsolc --strict-assembly contract.yul \\\r\n    --libraries \"contract.sol:X=0x1111111111111111111111111111111111111111\" \\\r\n    --libraries \"test.sol:L=0x2222222222222222222222222222222222222222\" \\\r\n    --libraries \"contract.sol:L=0x3333333333333333333333333333333333333333\"\r\n```\r\nthis should result in the following messages:\r\n```\r\nUnused link reference: 'contract.sol:X'. Library not found.\r\nUnused link reference: 'test.sol:L'. Library not found.\r\n```\r\n\r\n### Example 5\r\n- `contract.bin`:\r\n    ```\r\n    608060405234801561001057600080fd5b5060c78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806326121ff014602d575b600080fd5b60336035565b005b73__$a83509b47300fb2872e107211bec0983bd$__6326121ff06040518163ffffffff1660e01b815260040160006040518083038186803b158015607857600080fd5b505af4158015608b573d6000803e3d6000fd5b5050505056fea2646970667358221220c2f72d183b0908ff6e63a38057ad4b11b727aad99e02b5e656f123d4fa91e36864736f6c63430008070033\r\n\r\n    // $a83509b47300fb2872e107211bec0983bd$ -> contract.sol:L\r\n    ```\r\n\r\nWhen linked with:\r\n```bash\r\nsolc --link contract.bin \\\r\n    --libraries \"contract.sol:X=0x1111111111111111111111111111111111111111\" \\\r\n    --libraries \"test.sol:L=0x2222222222222222222222222222222222222222\" \\\r\n    --libraries \"contract.sol:L=0x3333333333333333333333333333333333333333\"\r\n```\r\nthis should result in the following messages:\r\n```\r\nUnused link reference: 'contract.sol:X'. Library not found.\r\nUnused link reference: 'test.sol:L'. Library not found.\r\n```\r\n\r\n## Backwards Compatibility\r\nThe change is backwards-compatible because reporting a message at an info level does not interrupt the compilation.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12008/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12008/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925126527",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-925126527",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 925126527,
    "node_id": "IC_kwDOAm_5kc43JE9_",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T17:18:40Z",
    "updated_at": "2021-09-22T17:18:40Z",
    "author_association": "MEMBER",
    "body": "Related: #12009.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/925126527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926511377",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-926511377",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 926511377,
    "node_id": "IC_kwDOAm_5kc43OXER",
    "user": {
      "login": "soroosh-sdi",
      "id": 4056691,
      "node_id": "MDQ6VXNlcjQwNTY2OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4056691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soroosh-sdi",
      "html_url": "https://github.com/soroosh-sdi",
      "followers_url": "https://api.github.com/users/soroosh-sdi/followers",
      "following_url": "https://api.github.com/users/soroosh-sdi/following{/other_user}",
      "gists_url": "https://api.github.com/users/soroosh-sdi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soroosh-sdi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soroosh-sdi/subscriptions",
      "organizations_url": "https://api.github.com/users/soroosh-sdi/orgs",
      "repos_url": "https://api.github.com/users/soroosh-sdi/repos",
      "events_url": "https://api.github.com/users/soroosh-sdi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soroosh-sdi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T10:13:04Z",
    "updated_at": "2021-09-24T10:13:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "this issue sounds interesting, Can you assign it to me?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926511377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926519815",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-926519815",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 926519815,
    "node_id": "IC_kwDOAm_5kc43OZIH",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T10:27:41Z",
    "updated_at": "2021-09-24T10:27:41Z",
    "author_association": "MEMBER",
    "body": "This would be a better one but I got some feedback on the #solc-tooling channel that perhaps just reporting unlinked references would be a better way to go about it. So we need to discuss this first. I'm going to add it to design backlog for now.\r\n\r\nSee https://github.com/ethereum/solidity/issues/12014#issuecomment-926517874 for some issues that would be useful to solve right now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926519815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926531531",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-926531531",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 926531531,
    "node_id": "IC_kwDOAm_5kc43Ob_L",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T10:49:33Z",
    "updated_at": "2021-09-24T10:49:33Z",
    "author_association": "MEMBER",
    "body": "I think this is fine at the info severity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/926531531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/927727186",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-927727186",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 927727186,
    "node_id": "IC_kwDOAm_5kc43S_5S",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-27T10:17:22Z",
    "updated_at": "2021-09-27T10:17:22Z",
    "author_association": "MEMBER",
    "body": "This is kind of a feature, where the idea is that you have a set of libraries in your project and you compile all contracts supplying all libraries, whether the contract needs the library or not. If we want to restrict it, you first need to find out which contract needs which library. Info severity might be OK, but we should check with tooling to see if this is any problem to them",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/927727186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/940136820",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-940136820",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 940136820,
    "node_id": "IC_kwDOAm_5kc44CVl0",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-11T15:34:55Z",
    "updated_at": "2021-10-11T15:34:55Z",
    "author_association": "MEMBER",
    "body": "The feature was originally discussed on the tooling channel and no one protested so - do you think I should ask more directly?\r\n\r\nThe problem with it being so permissive is that this also makes it harder to notice that you did something wrong. For example dapp-tools has been using undocumened syntax that stopped working at some point and no one noticed for quite a while. And especially in manual usage case linking is pretty error prone.\r\n\r\nAlternative idea: how about requiring a special marker to tell the compiler that the reference might be unused? E.g. adding `?` at the beginning? Tools could use that while by default an unused reference would be a warning.\r\n\r\nYet another way to do this check might be to treat unlinked references as errors/warnings  if `--libraries` option is used at all. I.e  you have to either not specify any libraries (you want to do manual linking or don't have any libraries) or specify them all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/940136820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942431687",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-942431687",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 942431687,
    "node_id": "IC_kwDOAm_5kc44LF3H",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T15:40:16Z",
    "updated_at": "2021-10-13T15:40:16Z",
    "author_association": "MEMBER",
    "body": "We discussed it on the call today and decided that it's ok to implement it at info severity.\r\n\r\nBut overall this issue has a very low priority. I'm moving it to icebox in case someone wants to work on it but otherwise we probably won't implement it in the near future.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942431687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332356138",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-1332356138",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 1332356138,
    "node_id": "IC_kwDOAm_5kc5PaiQq",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T15:35:17Z",
    "updated_at": "2022-11-30T15:35:17Z",
    "author_association": "MEMBER",
    "body": "Looks like hardhat-preprocessor relies on being able to pass in unused references to some extent. As reported by @kuzdogan:\r\n> There's this `\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"}`, everywhere. I could track it into [hardhat-preprocessor](https://github.com/wighawag/hardhat-preprocessor/blob/dac6c715ce1fa5af83441302d655d8922cfc4880/src/index.ts#L179) and seems to be intended for what the name suggests. I guess this does not have any implications.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332356138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332368799",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-1332368799",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 1332368799,
    "node_id": "IC_kwDOAm_5kc5PalWf",
    "user": {
      "login": "kuzdogan",
      "id": 13069972,
      "node_id": "MDQ6VXNlcjEzMDY5OTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13069972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuzdogan",
      "html_url": "https://github.com/kuzdogan",
      "followers_url": "https://api.github.com/users/kuzdogan/followers",
      "following_url": "https://api.github.com/users/kuzdogan/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuzdogan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuzdogan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuzdogan/subscriptions",
      "organizations_url": "https://api.github.com/users/kuzdogan/orgs",
      "repos_url": "https://api.github.com/users/kuzdogan/repos",
      "events_url": "https://api.github.com/users/kuzdogan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuzdogan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T15:44:33Z",
    "updated_at": "2022-11-30T15:46:14Z",
    "author_association": "MEMBER",
    "body": "Pinging @wighawag for `__CACHE_BREAKER__` if this is still needed as I see in most of the Sourcify verified contracts this field is `0x00000000d41867734bbee4c6863d9255b2b06ac1` and not a different value as expected from a cache breaker. The context is, I checked for the metadata of verified contracts and a lot of them had `\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"` and I was able to trace it to hardhat-preprocessor",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332368799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332443481",
    "html_url": "https://github.com/ethereum/solidity/issues/12008#issuecomment-1332443481",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12008",
    "id": 1332443481,
    "node_id": "IC_kwDOAm_5kc5Pa3lZ",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T16:39:56Z",
    "updated_at": "2022-11-30T16:39:56Z",
    "author_association": "NONE",
    "body": "The __CACHE_BREAKER__ is needed because hardhat did not have full proof cache management (though it might have improved since then, I did not check)\r\n\r\nas for `0x00000000d41867734bbee4c6863d9255b2b06ac1` this is the hash of a config so if 2 user or 2 different source use the same config the cache breaker will still work as the source will differ and hardhat will handle that\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1332443481/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
