{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13807",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13807/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13807/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13807/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13807",
  "id": 1498487662,
  "node_id": "I_kwDOAm_5kc5ZURtu",
  "number": 13807,
  "title": "[yul] Access object members by qualified name",
  "user": {
    "login": "GeorgePlotnikov",
    "id": 22812032,
    "node_id": "MDQ6VXNlcjIyODEyMDMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/22812032?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GeorgePlotnikov",
    "html_url": "https://github.com/GeorgePlotnikov",
    "followers_url": "https://api.github.com/users/GeorgePlotnikov/followers",
    "following_url": "https://api.github.com/users/GeorgePlotnikov/following{/other_user}",
    "gists_url": "https://api.github.com/users/GeorgePlotnikov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GeorgePlotnikov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GeorgePlotnikov/subscriptions",
    "organizations_url": "https://api.github.com/users/GeorgePlotnikov/orgs",
    "repos_url": "https://api.github.com/users/GeorgePlotnikov/repos",
    "events_url": "https://api.github.com/users/GeorgePlotnikov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GeorgePlotnikov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-12-15T13:58:43Z",
  "updated_at": "2022-12-15T13:58:43Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nDuring working on #13707 an occasion of the same object qualified member access issue was founded. Literally, it is impossible to get an access to an object member by calling it via the qualified name.\r\n\r\n## Motivation\r\n\r\nIt might be useful to improve code readability and reduce number of possible errors. For tests it can help to write more precise test and not to miss tricky access issues.\r\n\r\n**Example**\r\n```\r\nobject \"A\" {\r\n    code {\r\n        sstore(0, datasize(\"A\"))\r\n        sstore(1, datasize(\"A.data1\"))\r\n        sstore(2, datasize(\"A.data2\"))\r\n    }\r\n\r\n        data \"data1\" \"abcdef\"\r\n        data \"data2\" \"123\"\r\n}\r\n```\r\n\r\n## Specification\r\n\r\nIn the Object Parser\r\n\r\nhttps://github.com/ethereum/solidity/blob/591df042115c6df190faa26a1fb87617f7772db3/libyul/ObjectParser.cpp#L215\r\n\r\nwhen data objects are parsed it considers exact names (like `data1` `data2` from the example above).\r\n\r\nhowever, when this data object is tried to get from parsed object according to the `funCall.arguments` in\r\n\r\nhttps://github.com/ethereum/solidity/blob/591df042115c6df190faa26a1fb87617f7772db3/libyul/AsmAnalysis.cpp#L395\r\n\r\nthe condition fails because of hash mismatch ( `hash(\"A.data1\") != hash(\"data1\")` and `hash(\"A.data2\") != hash(\"data2\")`.\r\n\r\n## Backwards Compatibility\r\n\r\nBackwards compatibility should not be affected after this change.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13807/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13807/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
