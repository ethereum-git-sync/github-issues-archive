{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6148/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6148/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6148/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6148",
  "id": 415925401,
  "node_id": "MDU6SXNzdWU0MTU5MjU0MDE=",
  "number": 6148,
  "title": "An ERC20 contract was identified as an ERC721 contract.",
  "user": {
    "login": "YannickXiong",
    "id": 33046810,
    "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/YannickXiong",
    "html_url": "https://github.com/YannickXiong",
    "followers_url": "https://api.github.com/users/YannickXiong/followers",
    "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
    "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
    "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
    "repos_url": "https://api.github.com/users/YannickXiong/repos",
    "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
    "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2019-03-01T03:30:23Z",
  "updated_at": "2019-03-05T10:02:10Z",
  "closed_at": "2019-03-05T10:02:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I found in an ERC20-token contract, the Transfer() event would impact the contract type of ecah token transcation, for example.\r\n\r\nCase1, when i used, `event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);` the transcation was ERC721.\r\npls see https://kovan.etherscan.io/tx/0xce25abd0ded4566717010048e59fa9ce5601b6d3f612b0676ae754ac8e9313f0\r\nCase2, when i used `event Transfer(address indexed _from, address indexed _to, uint256 _value);` the transcation was ERC721.\r\npls see https://kovan.etherscan.io/tx/0xeed92be7c6a1d09cd1fe197f9998db699ba25359f269fba6a55c174d7e3e9e55\r\n\r\nup to now, as I know, the keyword `indexed` is just used to filter the log. Why it did make the contract type of token transcation on Kovan?",
  "closed_by": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6148/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/468629127",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-468629127",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 468629127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODYyOTEyNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T11:03:46Z",
    "updated_at": "2019-03-01T11:03:46Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand, can you elaborate a bit more?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/468629127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469122386",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469122386",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469122386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTEyMjM4Ng==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T05:21:16Z",
    "updated_at": "2019-03-04T05:21:16Z",
    "author_association": "NONE",
    "body": "@YannickXiong I am not sure how does it come out, but I think the event `Transfer()` in the ERC20-token contract only can impact itself rather than other contract, such as ERC721. Obviously, the event `Transfer()` exists both in the two type contract, but how does the event be triggered? This only happens when someone calls the special function, so when you call a function of the ERC20-token contract, it will only impact on itself, if not, it is really a big problem. so in order to remove all hidden dangers, could you please give more details about how do you operate it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469122386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469135086",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469135086",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469135086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTEzNTA4Ng==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T06:33:54Z",
    "updated_at": "2019-03-04T06:33:54Z",
    "author_association": "NONE",
    "body": "I could reproduce the problem. Below was the details.\r\n\r\n# the source code.\r\n```\r\npragma solidity ^0.4.25;\r\n\r\n/**\r\n * @title  : erc20 demo\r\n * @dev    : a erc20 token implement.\r\n * @author : yannick.xiong@aliyun.com\r\n */\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev : Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev : Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev : Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev : Adds two unsigned integers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev : Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n     * reverts when dividing by zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface AuthorizeToken{\r\n    /**\r\n     * @dev : \r\n     * @param _authorizedFrom : \r\n     * @param _authorizedTo : \r\n     * @param _value : \r\n     * @param _extraData : \r\n     */\r\n    function authorizeToken(address _authorizedFrom, address _authorizedTo, uint256 _value, bytes _extraData) external;\r\n}\r\n\r\n\r\ncontract ERC20BaseToken{\r\n    // using from\r\n    using SafeMath for uint256;\r\n\r\n    // state vars\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n\r\n    uint256 public totalSupply;\r\n    \r\n    // balance of each address\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    // allowance[A][B] menas the balance of address B could used which authorized by address A\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    // event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);\r\n\r\n    event Approval(address indexed _tokenOwner, address indexed _spender, uint256 indexed _value);\r\n    event BurnEvent(address indexed _from, uint256 indexed _value);\r\n\r\n    constructor(uint256 initialSupply, string tokenName, string tokenSymbol, uint8 tokenDecimals) \r\n    public {\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = tokenDecimals;\r\n\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    // methods\r\n\r\n    /**\r\n     * @dev : return totalSupply of a contract.\r\n     */\r\n    function totalSupply() public view returns(uint256){\r\n        return totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev : return balance of a tokenOwner.\r\n     */\r\n    function balanceOf(address tokenOwner) public view returns(uint256){\r\n        return balanceOf[tokenOwner];\r\n    }\r\n\r\n    /**\r\n     * @dev    : \r\n     * @param _from : \r\n     * @param _to   : \r\n     * @param _value : \r\n     */\r\n    // bug: https://github.com/ethereum/solidity/issues/6124\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        \r\n        uint256 preBalance = balanceOf[_from].add(balanceOf[_to]);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        assert(balanceOf[_from].add(balanceOf[_to]) == preBalance);\r\n    }\r\n    \r\n    /**\r\n     * @dev    : \r\n     * @param _to   : \r\n     * @param _value : \r\n     */\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * @dev    : \r\n     * @param _from : \r\n     * @param _to   : \r\n     * @param _value : \r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool){\r\n        require(_value <= allowance[_from][msg.sender]);\r\n\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev : \r\n     */\r\n    function approve(address _spender, uint256 _value) public returns(bool) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev : \r\n     * @param _tokenOwner : \r\n     * @param _spender : \r\n     * @return : \r\n     */\r\n    function allowance(address _tokenOwner, address _spender) public view returns(uint256) {\r\n        return allowance[_tokenOwner][_spender];\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @dev : \r\n     * @param _value : \r\n     */\r\n    function burn(uint256 _value) public returns(bool) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n\r\n        emit BurnEvent(msg.sender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev : \r\n     * @param _from : \r\n     * @param _value : \r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns(bool) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n\r\n        emit BurnEvent(msg.sender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    function approveToContract(address _spender, uint256 _value, bytes _extraData) \r\n    public \r\n    returns(bool) {\r\n        AuthorizeToken authorizedContractSpender = AuthorizeToken(_spender);\r\n\r\n        if (approve(_spender, _value)) {\r\n            authorizedContractSpender.authorizeToken(msg.sender, this, _value, _extraData); \r\n        }\r\n    }\r\n}\r\n\r\ncontract ThirdParty{\r\n\r\n    event BeAuthorized\r\n    (address _sender, \r\n    address _self, \r\n    address _authorizedFrom, \r\n    address _authorizedTo, \r\n    uint256 _value, bytes \r\n    _extraData);\r\n\r\n    function authorizeToken(address _authorizedFrom, address _authorizedTo, uint256 _value, bytes _extraData) \r\n    public {\r\n        emit BeAuthorized(msg.sender, this, _authorizedFrom, _authorizedTo, _value, _extraData);\r\n    }\r\n\r\n    \r\n}\r\n\r\n```\r\n\r\n# testing steps.\r\n## Common steps.\r\n- Compiled the contract in remix-ide, version is `solidity ^0.4.25;`\r\n- Deployed the contract to Kovan using MetaMask;\r\n- Added the token to MetaMask;\r\n- Transfer some token using MetaMask;\r\n\r\n## Case 1, Token AT, using `event Transfer(address indexed _from, address indexed _to, uint256 _value);`\r\ncontract was created trx: https://kovan.etherscan.io/tx/0xb691876dd9537596f06e059e12e77f2f5685eb5db876da39dcd8ab37ff4297b2\r\ncontract address: 0xea0E52eFB8Bb2525B1388Efa412172162DfCbA1D\r\ntransfer 500 at token trx: https://kovan.etherscan.io/tx/0x63e667be8a08ef546060027b733217921a276bcec1704b4716558ea0e95cbb28\r\nthe transfer trx is ERC20.\r\n\r\n## Case 2, Token BT, using ` event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);`\r\n### Case 2-1, transfer amount was 500;\r\ncontract was created trx: https://kovan.etherscan.io/tx/0x26aa7a8bee571e4c1d1835080d06f1250d35048e907d84981b6665e49b956942\r\ncontract address: 0xC40A315653A61de3082218fEcB0ec6a2d709Eee9\r\ntransfer 500 at token trx: https://kovan.etherscan.io/tx/0xb57e15b739e1d26ff48486e9594afc5f82f7a74a7e44671bf4dfe67baf5f37fe\r\n**the transcation is still ERC20, which means could not reproduced the problem.**\r\n\r\n### Case 2-2, transfer amount was 10;\r\nCompred Case 2-1 to the situation when I met the problem first time, I found the transfer amout is 10. Maybe it was the trigger condition?\r\nSo I tried case2-2, still using token BT.\r\nhowever, when the transfer amout is 10 token, the transcation is ERC721, see https://kovan.etherscan.io/tx/0x7a64d877c168f571784593a659fb760f6ea41dc1bb32690d6d208431d02ab5a4.\r\n\r\n### Case 3, Token AT, using `event Transfer(address indexed _from, address indexed _to, uint256 _value);`, transfer 10 at token.\r\nCompred case2-2 to case 2-1, I guessed that maybe it was none bussiness of the Transfer() event, the differ maybe it just the transfer.\r\nSo I tried case 3, which could be used as compare to Case 1.\r\n\r\ntransfer 10 AT token, the transcation is ERC20, so it was related to both the `Transfer()` event and `transfer amout`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469135086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469136022",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469136022",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469136022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTEzNjAyMg==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T06:38:42Z",
    "updated_at": "2019-03-04T06:38:42Z",
    "author_association": "NONE",
    "body": "Sorry, there was a mistoken. In `case 2-1`, the trx was alse ERC-721, more precisel, when it was in pendding status, it was ERC20, and in confirmed status, it was ERC721.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469136022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469208290",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469208290",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469208290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTIwODI5MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T10:50:16Z",
    "updated_at": "2019-03-04T10:50:16Z",
    "author_association": "MEMBER",
    "body": "@YannickXiong could you please condense your report a little? What is the observed behaviour of the compiler, what is the expected behaviour of the compiler?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469208290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469238266",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469238266",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469238266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTIzODI2Ng==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T12:39:32Z",
    "updated_at": "2019-03-04T12:39:32Z",
    "author_association": "NONE",
    "body": "@YannickXiong yeah, you can simplify the code by deleting the code you do not use in this example, just left necessary function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469238266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469248931",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469248931",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469248931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI0ODkzMQ==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T13:15:21Z",
    "updated_at": "2019-03-04T13:17:20Z",
    "author_association": "NONE",
    "body": "@YannickXiong  I find out what you are talking about, [look at here](https://snag.gy/D4mHnO.jpg), yeah, we deployed an ERC20 contract, but it really showed ERC-721 TokenID, I never noticed this before, I do not know what does that mean.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469248931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469271355",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469271355",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469271355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI3MTM1NQ==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:27:19Z",
    "updated_at": "2019-03-04T14:28:20Z",
    "author_association": "NONE",
    "body": "@Skyge Yeah, you got what I said.\r\n\r\n@chriseth Sorry, I am a software tester, so I often use the control variable method to do different testing to locate the root cause of the problem, so my previous description may be a bit verbose.\r\n\r\n\r\nthe core code is shown as below in a ERC20 contract,\r\n```\r\n    // code A\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n```\r\nand \r\n```\r\n    // code B\r\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);\r\n```\r\n\r\nSimply put, my question is: using code B, in the same ERC20 smart contract, if the transfer amount is 500 token, it is an ERC20 contract, but when the transfer amount is 10 token, why it was an ERC721 contract (it does not implement the interface of ERC721). \r\n\r\nHowever, When code A is used, transfer both 500 token andm10 token, it is always ERC20.\r\n\r\nMy conclusion is that whether it is ERC721 or ERC20 depends on:\r\n- the amount of transfer;\r\n- the transfer event, `    event Transfer(address indexed _from, address indexed _to, uint256 _value);` or `    event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);\r\n`;\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469271355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469273518",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469273518",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469273518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI3MzUxOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:33:41Z",
    "updated_at": "2019-03-04T14:33:41Z",
    "author_association": "MEMBER",
    "body": "@YannickXiong ok, this gets us closer to something, I think :)\r\n\r\nThere is an open issue about whether or not a parameter is `indexed` in an event is not relevant in inheritance ( #4873 ).\r\n\r\nI'm still not fully clear about what your issue is about.\r\n\r\nWhat do you mean by \"the contract is an ERC20 contract\"? As far as the compiler is concerned, it is an ERC20 contract if and only if it inherits from a contract called `ERC20`. This is a compile-time feature, so I'm not sure I understand the \"the amount of transfer\" part - because that is a runtime fact.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469273518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469279370",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469279370",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469279370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI3OTM3MA==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T14:50:19Z",
    "updated_at": "2019-03-04T14:50:19Z",
    "author_association": "NONE",
    "body": "@chriseth @axic @Skyge \r\n\r\nSorry, my previous description is not accurate  because of  my poor english.\r\n\r\nI writed an erc20 contract, using `event Transfer(address indexed _from, address indexed _to, uint256 indexed _value);`, and deployed it, of course the contract it was always erc20 contract. \r\n\r\nMy issue is that, when I transfer some token, in pendding stauts, it was really showed as erc20, \r\n<img width=\"951\" alt=\"pending\" src=\"https://user-images.githubusercontent.com/33046810/53740748-d6898580-3ecf-11e9-9c38-808099884eec.png\">\r\n\r\n\r\nwhile in confirmed status, it was really showed as erc721 tokenid.\r\n<img width=\"1146\" alt=\"confiremed\" src=\"https://user-images.githubusercontent.com/33046810/53740753-db4e3980-3ecf-11e9-8e8b-b4e1d11e3f90.png\">\r\n\r\nI just want to know why, mabye it's a bug or not?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469279370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469286005",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469286005",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469286005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI4NjAwNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T15:07:30Z",
    "updated_at": "2019-03-04T15:07:30Z",
    "author_association": "MEMBER",
    "body": "This seems to be an issue with either etherscan or the design of the token standards. Do you think it is related to the compiler or language?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469286005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469491617",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469491617",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469491617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTQ5MTYxNw==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T01:03:08Z",
    "updated_at": "2019-03-05T01:03:08Z",
    "author_association": "NONE",
    "body": "@chriseth Thanks for your replay. Not sure yet. I searched `etherscan` in github, it seemed that there was no the  related projects. I was also not sure where could I report the issue to?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469491617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469512573",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469512573",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469512573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTUxMjU3Mw==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T02:39:40Z",
    "updated_at": "2019-03-05T02:39:40Z",
    "author_association": "NONE",
    "body": "@YannickXiong I did some search and asked for some nice guys, and at last, I think I got it. \r\n<img width=\"985\" alt=\"2019-03-05 10 29 30\" src=\"https://user-images.githubusercontent.com/27282380/53776713-cdc99b80-3f31-11e9-9b48-62baf31236ff.png\">\r\n<img width=\"991\" alt=\"2019-03-05 10 30 23\" src=\"https://user-images.githubusercontent.com/27282380/53776747-ee91f100-3f31-11e9-82f6-515a6812cfa0.png\">\r\nwhen you see above, you will find they make a standard such so, so everyone should follow them.So just like @chriseth said, there is a design of the token standards. As for why they do like so, maybe you can find more details on [Solidity docs on Events](https://solidity.readthedocs.io/en/develop/contracts.html#events).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469512573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469521289",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469521289",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469521289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTUyMTI4OQ==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T03:22:45Z",
    "updated_at": "2019-03-05T03:22:45Z",
    "author_association": "NONE",
    "body": "@Skyge got it, thanks very much for your replying.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469521289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469534506",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469534506",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469534506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTUzNDUwNg==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T04:38:00Z",
    "updated_at": "2019-03-05T04:38:10Z",
    "author_association": "NONE",
    "body": "@YannickXiong Do you have any other questions? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469534506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469591053",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469591053",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469591053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTU5MTA1Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T08:42:07Z",
    "updated_at": "2019-03-05T08:42:07Z",
    "author_association": "MEMBER",
    "body": "@YannickXiong you could try here: https://etherscan.io/contactus or https://etherscancom.freshdesk.com/support/solutions",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469591053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469617849",
    "html_url": "https://github.com/ethereum/solidity/issues/6148#issuecomment-469617849",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6148",
    "id": 469617849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTYxNzg0OQ==",
    "user": {
      "login": "YannickXiong",
      "id": 33046810,
      "node_id": "MDQ6VXNlcjMzMDQ2ODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33046810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YannickXiong",
      "html_url": "https://github.com/YannickXiong",
      "followers_url": "https://api.github.com/users/YannickXiong/followers",
      "following_url": "https://api.github.com/users/YannickXiong/following{/other_user}",
      "gists_url": "https://api.github.com/users/YannickXiong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YannickXiong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YannickXiong/subscriptions",
      "organizations_url": "https://api.github.com/users/YannickXiong/orgs",
      "repos_url": "https://api.github.com/users/YannickXiong/repos",
      "events_url": "https://api.github.com/users/YannickXiong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YannickXiong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T10:00:53Z",
    "updated_at": "2019-03-05T10:00:53Z",
    "author_association": "NONE",
    "body": "@chriseth @Skyge Thanks for your replying, I have no questions about this issue. \r\nCould you close this issue, thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469617849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
