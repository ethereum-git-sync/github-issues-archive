{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6703",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6703/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6703/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6703/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6703",
  "id": 441721328,
  "node_id": "MDU6SXNzdWU0NDE3MjEzMjg=",
  "number": 6703,
  "title": "[soltest] Incorrect semantics tests suggestions for unaligned hex strings.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 1018738457,
      "node_id": "MDU6TGFiZWwxMDE4NzM4NDU3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/testing%20:hammer:",
      "name": "testing :hammer:",
      "color": "ffc6db",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-08T12:56:23Z",
  "updated_at": "2022-12-02T14:01:00Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\n  Contract:\r\n    pragma experimental ABIEncoderV2;\r\n    \r\n    contract C {\r\n        function f() public returns (bytes memory) {\r\n            bytes memory m = new bytes(64);\r\n            m[0] = 0x01;\r\n            m[1] = 0x02;\r\n            m[2] = 0x03;\r\n            m[3] = 0x04;\r\n            return m;\r\n        }\r\n    }\r\n    \r\n\r\n  Expected result:\r\n  // f() -> 0x20, 4, hex\"01020304\", 0, hex\"00000000000000000000000000000000000000000000000000000000\"\r\n\r\n  Obtained result:\r\n  // f() -> 32, 64, hex\"0102030400000000000000000000000000000000000000000000000000000000\"\r\n  Warning: Encoding does not match byte range. The call returned 128 bytes, but 128 bytes were expected.\r\n```\r\n\r\nThis also fails after \"updating\":\r\n```\r\n Contract:\r\n    pragma experimental ABIEncoderV2;\r\n    \r\n    contract C {\r\n        function f() public returns (bytes memory) {\r\n            bytes memory m = new bytes(64);\r\n            m[0] = 0x01;\r\n            m[1] = 0x02;\r\n            m[2] = 0x03;\r\n            m[3] = 0x04;\r\n            return m;\r\n        }\r\n    }\r\n    \r\n\r\n  Expected result:\r\n  // f() -> 32, 64, hex\"0102030400000000000000000000000000000000000000000000000000000000\"\r\n\r\n  Obtained result:\r\n  // f() -> 32, 64, hex\"0102030400000000000000000000000000000000000000000000000000000000\"\r\n  \r\n  Attention: Updates on the test will apply the detected format displayed.\r\n```\r\n\r\nHow I got to this and what works is the following:\r\n```\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract C {\r\n    struct S { uint8 a; bytes1 b; }\r\n    function g(S calldata s) external pure returns (bytes memory) {\r\n        return msg.data;\r\n    }\r\n\tfunction f(uint256 a, uint256 b) public returns (bytes memory) {\r\n\t\tS memory s = S(2,0x02);\r\n\t\treturn this.g(s);\r\n\t}\r\n}\r\n\r\n// ----\r\n// f(uint256,uint256): 1, 1 -> 0x20, 0x44, hex\"15fc073c\", 2, left(0x02), hex\"00000000000000000000000000000000000000000000000000000000\"\r\n```\r\nBut this also yields weird suggestions for incorrect or short expectations, e.g.\r\n```\r\n Expected result:\r\n  // f(uint256,uint256): 1, 1 -> 0x20, 0x44, hex\"15fc073c\", 1, left(0x02), hex\"00000000000000000000000000000000000000000000000000000000\"\r\n\r\n  Obtained result:\r\n  // f(uint256,uint256): 1, 1 -> 32, 68, hex\"15fc073c00000000000000000000000000000000000000000000000000000000\"\r\n```\r\nOr\r\n\r\n```\r\n Expected result:\r\n  // f(uint256,uint256): 1, 1 -> 0x20, 0x44, hex\"15fc073c\"\r\n\r\n  Obtained result:\r\n  // f(uint256,uint256): 1, 1 -> 0x20, 0x44, hex\"15fc073c00000000000000000000000000000000000000000000000000000000\"\r\n  \r\n  Attention: Updates on the test will apply the detected format displayed.\r\n```\r\n\r\nPing @erak.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6703/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6703/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734508480",
    "html_url": "https://github.com/ethereum/solidity/issues/6703#issuecomment-734508480",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6703",
    "id": 734508480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDUwODQ4MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-26T23:41:21Z",
    "updated_at": "2020-11-26T23:41:21Z",
    "author_association": "MEMBER",
    "body": "This is still somewhat a problem, this is what it gets updated with:\r\n```\r\n  Contract:\r\n        pragma experimental ABIEncoderV2;\r\n        \r\n        contract C {\r\n            function f() public returns (bytes memory) {\r\n                bytes memory m = new bytes(64);\r\n                m[0] = 0x01;\r\n                m[1] = 0x02;\r\n                m[2] = 0x03;\r\n                m[3] = 0x04;\r\n                return m;\r\n            }\r\n        }\r\n\r\n  Expected result:\r\n  // f() -> 0x20, 4, hex\"01020304\", 0, hex\"00000000000000000000000000000000000000000000000000000000\"\r\n\r\n  Obtained result:\r\n  // f() -> 0x20, 0x40, 455867355791650197326412238127320156238370893269403892517329811920608296960, 0\r\n  Warning: Could not convert \"bytes\" to internal ABI type representation. Falling back to default encoding.\r\n  Warning: Type or size of parameter(s) does not match.\r\n  Warning: Type or size of parameter(s) does not match.\r\n  Warning: Could not convert \"bytes\" to internal ABI type representation. Falling back to default encoding.\r\n  Warning: The call to \"f()\" returned \r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20]\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40]\r\n  [1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n  \r\n  Attention: Updates on the test will apply the detected format displayed.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/734508480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
