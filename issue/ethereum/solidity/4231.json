{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4231/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4231/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4231/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4231",
  "id": 329496452,
  "node_id": "MDU6SXNzdWUzMjk0OTY0NTI=",
  "number": 4231,
  "title": "How can I change push20 to push25? ",
  "user": {
    "login": "zheng-bin",
    "id": 18119716,
    "node_id": "MDQ6VXNlcjE4MTE5NzE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/18119716?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zheng-bin",
    "html_url": "https://github.com/zheng-bin",
    "followers_url": "https://api.github.com/users/zheng-bin/followers",
    "following_url": "https://api.github.com/users/zheng-bin/following{/other_user}",
    "gists_url": "https://api.github.com/users/zheng-bin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zheng-bin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zheng-bin/subscriptions",
    "organizations_url": "https://api.github.com/users/zheng-bin/orgs",
    "repos_url": "https://api.github.com/users/zheng-bin/repos",
    "events_url": "https://api.github.com/users/zheng-bin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zheng-bin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-06-05T14:58:30Z",
  "updated_at": "2018-06-19T17:21:08Z",
  "closed_at": "2018-06-11T14:33:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\nI deploy an erc20 smart contract in ethereum,then I want change the PUSH20 to PUSH25ã€‚\r\nWhere should I modify the code?\r\n\r\n![image](https://user-images.githubusercontent.com/18119716/40983992-6a73035e-6913-11e8-8e50-4d3af8a96a30.png)\r\n\r\n```\r\ndiff --git a/core/vm/interpreter.go b/core/vm/interpreter.go\r\nindex 3faa987..7069ecc 100755\r\n--- a/core/vm/interpreter.go\r\n+++ b/core/vm/interpreter.go\r\n@@ -133,6 +133,7 @@ func (in *Interpreter) Run(snapshot int, contract *Contract, input []byte) (ret\r\n        for atomic.LoadInt32(&in.evm.abort) == 0 {\r\n                // Get the memory location of pc\r\n                op = contract.GetOp(pc)\r\n+               fmt.Println(\"current opcode:\", op, \"     program counter:\", pc)\r\n \r\n                // get the operation from the jump table matching the opcode\r\n                operation := in.cfg.JumpTable[op]\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4231/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4231/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394806110",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-394806110",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 394806110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDgwNjExMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T18:06:27Z",
    "updated_at": "2018-06-05T18:06:27Z",
    "author_association": "MEMBER",
    "body": "The compiler does not provide direct control over which of the push opcodes is used. Why do you want to do the change?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394806110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394945766",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-394945766",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 394945766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk0NTc2Ng==",
    "user": {
      "login": "zheng-bin",
      "id": 18119716,
      "node_id": "MDQ6VXNlcjE4MTE5NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18119716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zheng-bin",
      "html_url": "https://github.com/zheng-bin",
      "followers_url": "https://api.github.com/users/zheng-bin/followers",
      "following_url": "https://api.github.com/users/zheng-bin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zheng-bin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zheng-bin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zheng-bin/subscriptions",
      "organizations_url": "https://api.github.com/users/zheng-bin/orgs",
      "repos_url": "https://api.github.com/users/zheng-bin/repos",
      "events_url": "https://api.github.com/users/zheng-bin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zheng-bin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T05:36:07Z",
    "updated_at": "2018-06-06T05:42:47Z",
    "author_association": "NONE",
    "body": "![image](https://user-images.githubusercontent.com/18119716/41018615-3b49d1a0-698d-11e8-88f1-1c47b4488275.png)\r\nAs you can see from the picture,I change my account address from 40 to 50 bytes, but the push opcodes is 20.I want to modify the compiled **data:0x.....6020.....**  to **data:0x......6025.....**,  push20 to push 25.\r\n```\r\nvar fixedsupplytokenContract = web3.eth.contract([{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]);\r\nvar fixedsupplytoken = fixedsupplytokenContract.new(\r\n   {\r\n     from: web3.eth.accounts[0], \r\n     data: '0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040805190810160405280600581526020017f4649584544000000000000000000000000000000000000000000000000000000815250600290805190602001906200009f92919062000221565b506040805190810160405280601a81526020017f4578616d706c6520466978656420537570706c7920546f6b656e00000000000081525060039080519060200190620000ed92919062000221565b506012600460006101000a81548160ff021916908360ff160217905550600460009054906101000a900460ff1660ff16600a0a620f424002600581905550600554600660008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6005546040518082815260200191505060405180910390a3620002d0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026457805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029457825182559160200191906001019062000277565b5b509050620002a49190620002a8565b5090565b620002cd91905b80821115620002c9576000816000905550600101620002af565b5090565b90565b61150f80620002e06000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100eb578063095ea7b31461017b57806318160ddd146101e057806323b872dd1461020b578063313ce567146102905780633eaaf86b146102c157806370a08231146102ec57806379ba5097146103435780638da5cb5b1461035a57806395d89b41146103b1578063a9059cbb14610441578063cae9ca51146104a6578063d4ee1d9014610551578063dc39d06d146105a8578063dd62ed3e1461060d578063f2fde38b14610684575b600080fd5b3480156100f757600080fd5b506101006106c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610140578082015181840152602081019050610125565b50505050905090810190601f16801561016d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018757600080fd5b506101c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610765565b604051808215151515815260200191505060405180910390f35b3480156101ec57600080fd5b506101f5610857565b6040518082815260200191505060405180910390f35b34801561021757600080fd5b50610276600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a2565b604051808215151515815260200191505060405180910390f35b34801561029c57600080fd5b506102a5610b4d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610b60565b6040518082815260200191505060405180910390f35b3480156102f857600080fd5b5061032d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b66565b6040518082815260200191505060405180910390f35b34801561034f57600080fd5b50610358610baf565b005b34801561036657600080fd5b5061036f610d4e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103bd57600080fd5b506103c6610d73565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104065780820151818401526020810190506103eb565b50505050905090810190601f1680156104335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044d57600080fd5b5061048c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e11565b604051808215151515815260200191505060405180910390f35b3480156104b257600080fd5b50610537600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610fac565b604051808215151515815260200191505060405180910390f35b34801561055d57600080fd5b506105666111fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b457600080fd5b506105f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611221565b604051808215151515815260200191505060405180910390f35b34801561061957600080fd5b5061066e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611385565b6040518082815260200191505060405180910390f35b34801561069057600080fd5b506106c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061140c565b005b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b505050505081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600660008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460055403905090565b60006108f682600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ab90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109c882600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ab90919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a9a82600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c790919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b60055481565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c0b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e095780601f10610dde57610100808354040283529160200191610e09565b820191906000526020600020905b815481529060010190602001808311610dec57829003601f168201915b505050505081565b6000610e6582600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ab90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610efa82600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c790919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561118957808201518184015260208101905061116e565b50505050905090810190601f1680156111b65780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156111d857600080fd5b505af11580156111ec573d6000803e3d6000fd5b50505050600190509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561127e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561134257600080fd5b505af1158015611356573d6000803e3d6000fd5b505050506040513d602081101561136c57600080fd5b8101908080519060200190929190505050905092915050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561146757600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008282111515156114bc57600080fd5b818303905092915050565b600081830190508281101515156114dd57600080fd5b929150505600a165627a7a72305820d113897c84b58b5e4be9228f77c14d19794a08c5734b53610caba2631b86142b0029', \r\n     gas: '4700000'\r\n   }, function (e, contract){\r\n    console.log(e, contract);\r\n    if (typeof contract.address !== 'undefined') {\r\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\r\n    }\r\n })\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394945766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394975614",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-394975614",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 394975614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk3NTYxNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T07:51:59Z",
    "updated_at": "2018-06-06T07:51:59Z",
    "author_association": "MEMBER",
    "body": "OK, so the issue is not about push20/push25, but rather about somehow using 25-byte addresses inside the EVM? Can you perhaps provide your source code? A simple change would be to replace `address` by `uint200`, but I'm not sure if that is what you want.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394975614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395006930",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-395006930",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 395006930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTAwNjkzMA==",
    "user": {
      "login": "zheng-bin",
      "id": 18119716,
      "node_id": "MDQ6VXNlcjE4MTE5NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18119716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zheng-bin",
      "html_url": "https://github.com/zheng-bin",
      "followers_url": "https://api.github.com/users/zheng-bin/followers",
      "following_url": "https://api.github.com/users/zheng-bin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zheng-bin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zheng-bin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zheng-bin/subscriptions",
      "organizations_url": "https://api.github.com/users/zheng-bin/orgs",
      "repos_url": "https://api.github.com/users/zheng-bin/repos",
      "events_url": "https://api.github.com/users/zheng-bin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zheng-bin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T09:31:27Z",
    "updated_at": "2018-06-06T09:31:27Z",
    "author_association": "NONE",
    "body": "The call order has not changed  inside the EVM.The code has been changed a lot, in order to distinguish the mobile terminal or the computer terminalï¼Œ so I added 10 more lengths than Ethereum.\r\nI want to modify the compile about PUSH, then try the effect.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395006930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395107817",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-395107817",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 395107817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTEwNzgxNw==",
    "user": {
      "login": "zheng-bin",
      "id": 18119716,
      "node_id": "MDQ6VXNlcjE4MTE5NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18119716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zheng-bin",
      "html_url": "https://github.com/zheng-bin",
      "followers_url": "https://api.github.com/users/zheng-bin/followers",
      "following_url": "https://api.github.com/users/zheng-bin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zheng-bin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zheng-bin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zheng-bin/subscriptions",
      "organizations_url": "https://api.github.com/users/zheng-bin/orgs",
      "repos_url": "https://api.github.com/users/zheng-bin/repos",
      "events_url": "https://api.github.com/users/zheng-bin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zheng-bin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T15:20:26Z",
    "updated_at": "2018-06-06T15:20:26Z",
    "author_association": "NONE",
    "body": "I think evm calls the relevant address based on the smart contract data I deploy, like push, pop, dup etc. Is this correct?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395107817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395369482",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-395369482",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 395369482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTM2OTQ4Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T10:16:19Z",
    "updated_at": "2018-06-07T10:16:19Z",
    "author_association": "MEMBER",
    "body": "Sorry, but the compiler makes the assumption that addresses have 20 bytes at too many places, so I'm afraid we cannot support your modifications.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/395369482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396268190",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-396268190",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 396268190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjI2ODE5MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T14:42:31Z",
    "updated_at": "2018-06-11T14:42:31Z",
    "author_association": "MEMBER",
    "body": "@zheng-bin if I understand correctly you have virtual machine based on EVM but modified to have longer addresses?\r\n\r\nAs @chriseth says that is breaking a very basic assumption of the compiler and cannot be easily supported. It probably is a rather big (or giant) task, I'd suggest to consider other options before pursuing supporting it in Solidity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396268190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398469288",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-398469288",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 398469288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQ2OTI4OA==",
    "user": {
      "login": "zheng-bin",
      "id": 18119716,
      "node_id": "MDQ6VXNlcjE4MTE5NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18119716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zheng-bin",
      "html_url": "https://github.com/zheng-bin",
      "followers_url": "https://api.github.com/users/zheng-bin/followers",
      "following_url": "https://api.github.com/users/zheng-bin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zheng-bin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zheng-bin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zheng-bin/subscriptions",
      "organizations_url": "https://api.github.com/users/zheng-bin/orgs",
      "repos_url": "https://api.github.com/users/zheng-bin/repos",
      "events_url": "https://api.github.com/users/zheng-bin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zheng-bin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T16:52:51Z",
    "updated_at": "2018-06-19T16:56:40Z",
    "author_association": "NONE",
    "body": "Helloï¼š\r\n@chriseth @axic \r\nI modified some placesï¼š\r\nhttps://github.com/ethereum/solidity/blob/develop/libsolidity/codegen/CompilerUtils.cpp#L1261\r\n```\r\nelse\r\n\tm_context << ((u256(1) << _typeOnStack.numBits()) - 1) << Instruction::AND;\r\n```\r\nLike the _typeOnStack.numBits() is unsigned 160, I chage it 160 to 200.\r\nThen the PUSH20 change to PUSH25.\r\n\r\nhttps://github.com/ethereum/solidity/blob/develop/libsolidity/ast/Types.cpp#L442\r\nhttps://github.com/ethereum/solidity/blob/develop/libsolidity/ast/Types.cpp#L299\r\n```\r\nreturn make_shared<IntegerType>(160, IntegerType::Modifier::Address);\r\nchange to:\r\nreturn make_shared<IntegerType>(200, IntegerType::Modifier::Address);\r\n```\r\n\r\n```\r\n73ffffffffffffffffffffffffffffffffffffffff\r\n78ffffffffffffffffffffffffffffffffffffffffffffffffff\r\n```\r\nThen the smart contracts are operationalã€‚But I don't know if there will be a risk of such modificationï¼ŒI will test some functionsã€‚\r\nDo you have any suggestions?\r\n\r\n\r\ndiff:\r\n```\r\ndiff --git a/libsolidity/analysis/TypeChecker.cpp b/libsolidity/analysis/TypeChecker.cpp\r\nindex 30302908..837d6c60 100644\r\n--- a/libsolidity/analysis/TypeChecker.cpp\r\n+++ b/libsolidity/analysis/TypeChecker.cpp\r\n@@ -2087,7 +2087,7 @@ bool TypeChecker::visit(MemberAccess const& _memberAccess)\r\n        {\r\n                // Warn about using address members on contracts\r\n                bool v050 = m_scope->sourceUnit().annotation().experimentalFeatures.count(ExperimentalFeature::V050);\r\n-               for (auto const& addressMember: IntegerType(160, IntegerType::Modifier::Address).nativeMembers(nullptr))\r\n+               for (auto const& addressMember: IntegerType(200, IntegerType::Modifier::Address).nativeMembers(nullptr))\r\n                        if (addressMember.name == memberName && *annotation.type == *addressMember.type)\r\n                        {\r\n                                solAssert(!v050, \"Address member still present on contract in v0.5.0.\");\r\ndiff --git a/libsolidity/ast/Types.cpp b/libsolidity/ast/Types.cpp\r\nindex 60e3183c..8408b632 100644\r\n--- a/libsolidity/ast/Types.cpp\r\n+++ b/libsolidity/ast/Types.cpp\r\n@@ -294,7 +294,7 @@ TypePointer Type::fromElementaryTypeName(ElementaryTypeNameToken const& _type)\r\n        case Token::Byte:\r\n                return make_shared<FixedBytesType>(1);\r\n        case Token::Address:\r\n-               return make_shared<IntegerType>(160, IntegerType::Modifier::Address);\r\n+               return make_shared<IntegerType>(200, IntegerType::Modifier::Address);\r\n        case Token::Bool:\r\n                return make_shared<BoolType>();\r\n        case Token::Bytes:\r\n@@ -429,7 +429,7 @@ IntegerType::IntegerType(unsigned _bits, IntegerType::Modifier _modifier):\r\n        m_bits(_bits), m_modifier(_modifier)\r\n {\r\n        if (isAddress())\r\n-               solAssert(m_bits == 160, \"\");\r\n+               solAssert(m_bits == 200, \"\");\r\n        solAssert(\r\n                m_bits > 0 && m_bits <= 256 && m_bits % 8 == 0,\r\n                \"Invalid bit number for integer type: \" + dev::toString(m_bits)\r\n@@ -1829,7 +1829,7 @@ MemberList::MemberMap ContractType::nativeMembers(ContractDefinition const* _con\r\n \r\n void ContractType::addNonConflictingAddressMembers(MemberList::MemberMap& _members)\r\n {\r\n-       MemberList::MemberMap addressMembers = IntegerType(160, IntegerType::Modifier::Address).nativeMembers(nullptr);\r\n+       MemberList::MemberMap addressMembers = IntegerType(200, IntegerType::Modifier::Address).nativeMembers(nullptr);\r\n        for (auto const& addressMember: addressMembers)\r\n        {\r\n                bool clash = false;\r\n@@ -3149,7 +3149,7 @@ MemberList::MemberMap MagicType::nativeMembers(ContractDefinition const*) const\r\n        {\r\n        case Kind::Block:\r\n                return MemberList::MemberMap({\r\n-                       {\"coinbase\", make_shared<IntegerType>(160, IntegerType::Modifier::Address)},\r\n+                       {\"coinbase\", make_shared<IntegerType>(200, IntegerType::Modifier::Address)},\r\n                        {\"timestamp\", make_shared<IntegerType>(256)},\r\n                        {\"blockhash\", make_shared<FunctionType>(strings{\"uint\"}, strings{\"bytes32\"}, FunctionType::Kind::BlockHash, false, StateMutability::View)},\r\n                        {\"difficulty\", make_shared<IntegerType>(256)},\r\n@@ -3158,7 +3158,7 @@ MemberList::MemberMap MagicType::nativeMembers(ContractDefinition const*) const\r\n                });\r\n        case Kind::Message:\r\n                return MemberList::MemberMap({\r\n-                       {\"sender\", make_shared<IntegerType>(160, IntegerType::Modifier::Address)},\r\n+                       {\"sender\", make_shared<IntegerType>(200, IntegerType::Modifier::Address)},\r\n                        {\"gas\", make_shared<IntegerType>(256)},\r\n                        {\"value\", make_shared<IntegerType>(256)},\r\n                        {\"data\", make_shared<ArrayType>(DataLocation::CallData)},\r\n@@ -3166,7 +3166,7 @@ MemberList::MemberMap MagicType::nativeMembers(ContractDefinition const*) const\r\n                });\r\n        case Kind::Transaction:\r\n                return MemberList::MemberMap({\r\n-                       {\"origin\", make_shared<IntegerType>(160, IntegerType::Modifier::Address)},\r\n+                       {\"origin\", make_shared<IntegerType>(200, IntegerType::Modifier::Address)},\r\n                        {\"gasprice\", make_shared<IntegerType>(256)}\r\n                });\r\n        case Kind::ABI:\r\ndiff --git a/libsolidity/ast/Types.h b/libsolidity/ast/Types.h\r\nindex 95821634..786f465a 100644\r\n--- a/libsolidity/ast/Types.h\r\n+++ b/libsolidity/ast/Types.h\r\n@@ -222,7 +222,9 @@ public:\r\n        /// it does not fit.\r\n        /// In order to avoid computation at runtime of whether such moving is necessary, structs and\r\n        /// array data (not each element) always start a new slot.\r\n-       virtual unsigned storageBytes() const { return 32; }\r\n+       virtual unsigned storageBytes() const {\r\n+           std::cout<<\"zheng1\"<<std::endl;\r\n+           return 32; }\r\n        /// Returns true if the type can be stored in storage.\r\n        virtual bool canBeStored() const { return true; }\r\n        /// Returns false if the type cannot live outside the storage, i.e. if it includes some mapping.\r\n@@ -715,7 +717,7 @@ public:\r\n        {\r\n                if (isSuper())\r\n                        return TypePointer{};\r\n-               return std::make_shared<IntegerType>(160, IntegerType::Modifier::Address);\r\n+               return std::make_shared<IntegerType>(200, IntegerType::Modifier::Address);\r\n        }\r\n        virtual TypePointer interfaceType(bool _inLibrary) const override\r\n        {\r\ndiff --git a/libsolidity/codegen/CompilerUtils.cpp b/libsolidity/codegen/CompilerUtils.cpp\r\nindex d9f17263..a6857aa3 100644\r\n--- a/libsolidity/codegen/CompilerUtils.cpp\r\n+++ b/libsolidity/codegen/CompilerUtils.cpp\r\n@@ -755,7 +755,7 @@ void CompilerUtils::convertType(\r\n                else\r\n                {\r\n                        solAssert(targetTypeCategory == Type::Category::Integer || targetTypeCategory == Type::Category::Contract, \"\");\r\n-                       IntegerType addressType(160, IntegerType::Modifier::Address);\r\n+                       IntegerType addressType(200, IntegerType::Modifier::Address);\r\n                        IntegerType const& targetType = targetTypeCategory == Type::Category::Integer\r\n                                ? dynamic_cast<IntegerType const&>(_targetType) : addressType;\r\n                        if (stackTypeCategory == Type::Category::RationalNumber)\r\ndiff --git a/libsolidity/codegen/ExpressionCompiler.cpp b/libsolidity/codegen/ExpressionCompiler.cpp\r\nindex 4bcc1fa9..f7222256 100644\r\n--- a/libsolidity/codegen/ExpressionCompiler.cpp\r\n+++ b/libsolidity/codegen/ExpressionCompiler.cpp\r\n@@ -1215,7 +1215,7 @@ bool ExpressionCompiler::visit(MemberAccess const& _memberAccess)\r\n                                                identifier = FunctionType(*function).externalIdentifier();\r\n                                        else\r\n                                                solAssert(false, \"Contract member is neither variable nor function.\");\r\n-                                       utils().convertType(type, IntegerType(160, IntegerType::Modifier::Address), true);\r\n+                                       utils().convertType(type, IntegerType(200, IntegerType::Modifier::Address), true);\r\n                                        m_context << identifier;\r\n                                }\r\n                                else\r\n@@ -1232,7 +1232,7 @@ bool ExpressionCompiler::visit(MemberAccess const& _memberAccess)\r\n                        {\r\n                                utils().convertType(\r\n                                        *_memberAccess.expression().annotation().type,\r\n-                                       IntegerType(160, IntegerType::Modifier::Address),\r\n+                                       IntegerType(200, IntegerType::Modifier::Address),\r\n                                        true\r\n                                );\r\n                                m_context << Instruction::BALANCE;\r\n@@ -1240,7 +1240,7 @@ bool ExpressionCompiler::visit(MemberAccess const& _memberAccess)\r\n                        else if ((set<string>{\"send\", \"transfer\", \"call\", \"callcode\", \"delegatecall\"}).count(member))\r\n                                utils().convertType(\r\n                                        *_memberAccess.expression().annotation().type,\r\n-                                       IntegerType(160, IntegerType::Modifier::Address),\r\n+                                       IntegerType(200, IntegerType::Modifier::Address),\r\n                                        true\r\n                                );\r\n                        else\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398469288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398478159",
    "html_url": "https://github.com/ethereum/solidity/issues/4231#issuecomment-398478159",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4231",
    "id": 398478159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQ3ODE1OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T17:21:08Z",
    "updated_at": "2018-06-19T17:21:08Z",
    "author_association": "MEMBER",
    "body": "This might work, but I cannot guarantee anything, tons of places in the code could rely on addresses being exactly 20 bytes long.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/398478159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
