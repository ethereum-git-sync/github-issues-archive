{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11640/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11640/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11640/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11640",
  "id": 941184752,
  "node_id": "MDU6SXNzdWU5NDExODQ3NTI=",
  "number": 11640,
  "title": "Optimize `if (a && b)`",
  "user": {
    "login": "fluidsonic",
    "id": 85242,
    "node_id": "MDQ6VXNlcjg1MjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/85242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fluidsonic",
    "html_url": "https://github.com/fluidsonic",
    "followers_url": "https://api.github.com/users/fluidsonic/followers",
    "following_url": "https://api.github.com/users/fluidsonic/following{/other_user}",
    "gists_url": "https://api.github.com/users/fluidsonic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fluidsonic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fluidsonic/subscriptions",
    "organizations_url": "https://api.github.com/users/fluidsonic/orgs",
    "repos_url": "https://api.github.com/users/fluidsonic/repos",
    "events_url": "https://api.github.com/users/fluidsonic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fluidsonic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-07-10T06:19:32Z",
  "updated_at": "2023-03-28T12:04:59Z",
  "closed_at": "2023-03-28T12:04:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nThe following code examples basically do the same thing but have different gas usage.\r\nIn my project the former costs me 26 more gas than the latter according to `hardhat-gas-reporter`.\r\n\r\n```sol\r\nif (a && b) { … }\r\n```\r\n\r\n```sol\r\nif (a) { if (b) { … } }\r\n```\r\n\r\nSolidity 0.8.6\r\n\r\n## Motivation\r\n\r\nLower gas use = good\r\n\r\n## Specification\r\n\r\nI have no idea how the optimizer works but I guess that can be optimized.\r\n\r\n## Backwards Compatibility\r\n\r\nShouldn't be an issue.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11640/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11640/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878049618",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878049618",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878049618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODA0OTYxOA==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T07:42:03Z",
    "updated_at": "2021-07-12T08:08:36Z",
    "author_association": "MEMBER",
    "body": "In your example, is `b` an expression?\r\n\r\nNote that ~solidity~ Yul doesn't have short-circuiting for boolean expressions, so the conversion `if (expr1 && expr2) ... -> if (expr1) { if (expr2) ... }` will break the semantics in general. We could do this if the expressions doesn't have side effects, or if they are identifiers.\r\n\r\nIn the case where it's an identifier, I don't see it making much difference in runtime gas. Note that the two `if`, in general would have higher deploy time cost.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878049618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878052658",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878052658",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878052658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODA1MjY1OA==",
    "user": {
      "login": "fluidsonic",
      "id": 85242,
      "node_id": "MDQ6VXNlcjg1MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluidsonic",
      "html_url": "https://github.com/fluidsonic",
      "followers_url": "https://api.github.com/users/fluidsonic/followers",
      "following_url": "https://api.github.com/users/fluidsonic/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluidsonic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluidsonic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluidsonic/subscriptions",
      "organizations_url": "https://api.github.com/users/fluidsonic/orgs",
      "repos_url": "https://api.github.com/users/fluidsonic/repos",
      "events_url": "https://api.github.com/users/fluidsonic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluidsonic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T07:47:30Z",
    "updated_at": "2021-07-12T07:47:30Z",
    "author_association": "NONE",
    "body": "@hrkrshnn I guess it was an expression. I can make some tests later to see if it happens when only using variables.\r\n\r\nSolidity [does have short-circuiting](https://docs.soliditylang.org/en/v0.8.6/control-structures.html#order-of-evaluation-of-expressions) and I would be shocked if not.\r\n> The evaluation order of expressions is not specified (more formally, the order in which the children of one node in the expression tree are evaluated is not specified, but they are of course evaluated before the node itself). **It is only guaranteed that statements are executed in order and short-circuiting for boolean expressions is done.**",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878052658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878066342",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878066342",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878066342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODA2NjM0Mg==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T08:07:59Z",
    "updated_at": "2021-07-12T08:13:08Z",
    "author_association": "MEMBER",
    "body": "@fluidsonic Ah, yes. Solidity does have short-circuiting. I mixed up solidity and Yul. \r\n\r\nGenerally, such optimizations would be done at the Yul level, so, the argument about short-circuiting for  `if and(expr1, expr2) { ... }` would still be true. Regardless, I would be interested in seeing the results of your tests.\r\n\r\n----\r\nAt the solidity level, changing `if (a && b)` to `if(a) { if (b) ...}`, even for identifiers, would make a difference.\r\n\r\nFor the former case, the Yul code would look like\r\n\r\n```\r\n                        let value0 := a\r\n                        let value1 := b\r\n                        let expr := value0\r\n                        if value0 { expr := value1 }\r\n                        if expr\r\n                        {\r\n                            ...\r\n                        }\r\n```\r\n \r\nIn the latter case, it would look like:\r\n\r\n```\r\n                        let value0 := a\r\n                        let value1 := b\r\n                        if value0\r\n                        {\r\n                            if value1\r\n                            {\r\n                               ...\r\n                            }\r\n                        }\r\n```\r\n\r\nSo if the `if` condition is not met, you would save one `jumpi` and some checks for it.\r\n\r\nMaybe we can think about combining `if` statements at the Yul level, somehow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878066342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878171895",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878171895",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878171895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODE3MTg5NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T10:42:34Z",
    "updated_at": "2021-07-12T10:42:34Z",
    "author_association": "MEMBER",
    "body": "Please not ethat @fluidsonic is probably using the \"legacy\" code generator, and not the yul code generator, so optimizer steps at the yul level do not help for this particular issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878171895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878430928",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878430928",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878430928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQzMDkyOA==",
    "user": {
      "login": "fluidsonic",
      "id": 85242,
      "node_id": "MDQ6VXNlcjg1MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluidsonic",
      "html_url": "https://github.com/fluidsonic",
      "followers_url": "https://api.github.com/users/fluidsonic/followers",
      "following_url": "https://api.github.com/users/fluidsonic/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluidsonic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluidsonic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluidsonic/subscriptions",
      "organizations_url": "https://api.github.com/users/fluidsonic/orgs",
      "repos_url": "https://api.github.com/users/fluidsonic/repos",
      "events_url": "https://api.github.com/users/fluidsonic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluidsonic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T16:45:04Z",
    "updated_at": "2021-07-12T16:45:04Z",
    "author_association": "NONE",
    "body": "I've tested it with Hardhat on a mainnet fork.\r\n\r\n- Scenario 1: `a` and `b` are `bool` function parameters.\r\n- Scenario 2: `a` and `b` are `.isNative()` called on `IERC20` function parameters.\r\n    That's a `internal pure` Library function that basically checks `token == address(0)`.\r\n- In both scenarios the statement `c` is `return 0`.\r\n\r\n| Scenario | Runs        | Idiomatic code     | Optimized code        | ±Gas | ±Deployment gas |\r\n|----------|-------------|--------------------|-----------------------|------|-----------------|\r\n| 1        | 200         | `if (a && b) c;`   | `if (a) if (b) c;`    | -20  | -636 ❗️          |\r\n| 1        | 200         | `if (a \\|\\| b) c;` | `if (a) c; if (b) c;` | -2   | +1,291          |\r\n| 1        | 200,000,000 | `if (a && b) c;`   | `if (a) if (b) c;`    | -20  | -636 ❗️          |\r\n| 1        | 200,000,000 | `if (a \\|\\| b) c;` | `if (a) c; if (b) c;` | -2   | +1,296          |\r\n| 2        | 200         | `if (a && b) c;`   | `if (a) if (b) c;`    | -26  | -1,512 ❗️        |\r\n| 2        | 200         | `if (a \\|\\| b) c;` | `if (a) c; if (b) c;` | -14  | +408            |\r\n| 2        | 200,000,000 | `if (a && b) c;`   | `if (a) if (b) c;`    | -26  | -1,532 ❗️        |\r\n| 2        | 200,000,000 | `if (a \\|\\| b) c;` | `if (a) c; if (b) c;` | -14  | +444            |\r\n\r\nThe savings in deployment gas are confusing me.\r\n\r\n@chriseth what is the YUL code generator? Is that the experimental `viaIR` flag?\r\nI've just tried it for the first time and didn't get too far:\r\n> YulException: Variable param_3 is 2 slot(s) too deep inside the stack.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878430928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878434100",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878434100",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878434100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQzNDEwMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T16:50:17Z",
    "updated_at": "2021-07-12T16:50:17Z",
    "author_association": "MEMBER",
    "body": "The gas values are very weird indeed. Can you maybe post the assembly code somewhere?\r\n\r\nYes, I was talking about the generator that is activated using `viaIR`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878434100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878474633",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-878474633",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 878474633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQ3NDYzMw==",
    "user": {
      "login": "fluidsonic",
      "id": 85242,
      "node_id": "MDQ6VXNlcjg1MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluidsonic",
      "html_url": "https://github.com/fluidsonic",
      "followers_url": "https://api.github.com/users/fluidsonic/followers",
      "following_url": "https://api.github.com/users/fluidsonic/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluidsonic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluidsonic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluidsonic/subscriptions",
      "organizations_url": "https://api.github.com/users/fluidsonic/orgs",
      "repos_url": "https://api.github.com/users/fluidsonic/repos",
      "events_url": "https://api.github.com/users/fluidsonic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluidsonic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T17:52:10Z",
    "updated_at": "2021-07-12T17:57:41Z",
    "author_association": "NONE",
    "body": "This is for the first row of the table above (-20 gas, -636 deployment gas, `if (a && b)` -> `if (a) if (b)`).\r\nThe contract with the optimized code is 6 bytes smaller.\r\n\r\nIdiomatic code:\r\n```asm\r\n    /*  function test(bool a, bool b) private view returns (uint) {... */\r\ntag_126:\r\n    /*  uint */\r\n  0x00\r\n    /*  a */\r\n  dup3\r\n    /*  a && b */\r\n  dup1\r\n  iszero\r\n  tag_219\r\n  jumpi\r\n  pop\r\n    /*  b */\r\n  dup2\r\n    /*  a && b */\r\ntag_219:\r\n    /*  if (a && b)... */\r\n  iszero\r\n  tag_220\r\n  jumpi\r\n  pop\r\n    /*  0 */\r\n  0x00\r\n    /*  return 0 */\r\n  jump(tag_104)\r\n    /*  if (a && b)... */\r\ntag_220:\r\n  pop\r\n    /*  1 */\r\n  0x01\r\n    /*  function test(bool a, bool b) private view returns (uint) {... */\r\n  swap3\r\n  swap2\r\n  pop\r\n  pop\r\n  jump\t// out\r\n```\r\n\r\nOptimized code:\r\n```asm\r\n    /*  function test(bool a, bool b) private view returns (uint) {... */\r\ntag_126:\r\n    /*  uint */\r\n  0x00\r\n    /*  a */\r\n  dup3\r\n    /*  if (a) if (b)... */\r\n  iszero\r\n  tag_220\r\n  jumpi\r\n    /*  b */\r\n  dup2\r\n    /*  if (b)... */\r\n  iszero\r\n  tag_220\r\n  jumpi\r\n  pop\r\n    /*  0 */\r\n  0x00\r\n    /*  return 0 */\r\n  jump(tag_104)\r\n    /*  if (b)... */\r\ntag_220:\r\n  pop\r\n    /*  1 */\r\n  0x01\r\n    /*  function test(bool a, bool b) private view returns (uint) {... */\r\n  swap3\r\n  swap2\r\n  pop\r\n  pop\r\n  jump\t// out\r\n```\r\n\r\nDiff:\r\n```diff\r\n@@ -4,17 +4,13 @@\r\n   0x00\r\n     /*  a */\r\n   dup3\r\n-    /*  a && b */\r\n-  dup1\r\n+    /*  if (a) if (b)... */\r\n   iszero\r\n-  tag_219\r\n+  tag_220\r\n   jumpi\r\n-  pop\r\n     /*  b */\r\n   dup2\r\n-    /*  a && b */\r\n-tag_219:\r\n-    /*  if (a && b)... */\r\n+    /*  if (b)... */\r\n   iszero\r\n   tag_220\r\n   jumpi\r\n@@ -23,7 +19,7 @@\r\n   0x00\r\n     /*  return 0 */\r\n   jump(tag_104)\r\n-    /*  if (a && b)... */\r\n+    /*  if (b)... */\r\n tag_220:\r\n   pop\r\n     /*  1 */\r\n```\r\n\r\nNo other differences in the contract apart from `auxdata`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/878474633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105175",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-1476105175",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 1476105175,
    "node_id": "IC_kwDOAm_5kc5X-5PX",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-20T12:05:32Z",
    "updated_at": "2023-03-20T12:05:32Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1476105175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1486749984",
    "html_url": "https://github.com/ethereum/solidity/issues/11640#issuecomment-1486749984",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11640",
    "id": 1486749984,
    "node_id": "IC_kwDOAm_5kc5YngEg",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-28T12:04:57Z",
    "updated_at": "2023-03-28T12:04:57Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1486749984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
