{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8425/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8425/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8425/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8425",
  "id": 576114427,
  "node_id": "MDU6SXNzdWU1NzYxMTQ0Mjc=",
  "number": 8425,
  "title": "Pureness of reading storage slots only without accessing storage.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4437999539,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZ_sw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20effort",
      "name": "high effort",
      "color": "ff54f4",
      "default": false,
      "description": "A lot to implement but still doable by a single person. The task is large or difficult."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-03-05T09:34:53Z",
  "updated_at": "2022-10-04T11:39:45Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently, within solidity code, any reference to a storage pointer is considered ``view``. However, there if there is actually no access to storage, but merely the storage slot is read, it could be considered ``pure``, e.g.\r\n```\r\ncontract C {\r\n    uint256[] s;\r\n    function f() internal pure returns (uint256[] storage c) {\r\n        c = s;\r\n    }\r\n}\r\n```\r\nis currently invalid, but could be valid. This is especially interesting, since we allow assembly access to storage slots in pure functions already, so the following is already allowed:\r\n```\r\ncontract C {\r\n    uint256[] s;\r\n    function f() internal pure returns (uint256[] storage c) {\r\n        assembly { c_slot := s_slot }\r\n    }\r\n}\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8425/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8425/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598195251",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-598195251",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 598195251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODE5NTI1MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T13:48:34Z",
    "updated_at": "2020-03-12T13:48:34Z",
    "author_association": "MEMBER",
    "body": "Sounds good! Is this breaking?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598195251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598225771",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-598225771",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 598225771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODIyNTc3MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T14:41:15Z",
    "updated_at": "2020-03-12T14:41:15Z",
    "author_association": "MEMBER",
    "body": "It just allows stuff that was disallowed before... we'll get ``mutability can be restricted to pure`` warnings for existing code, but that's only warnings, so non-breaking. Right now no other aspect comes to my mind that could make this breaking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/598225771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610814056",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-610814056",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 610814056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDgxNDA1Ng==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-08T08:03:46Z",
    "updated_at": "2021-06-23T09:38:54Z",
    "author_association": "MEMBER",
    "body": "The first contract issues the following error:\r\n\r\n> Error: Expected identifier but got 'storage'\r\n>  --> /tmp/storage.sol:2:12:\r\n>   |\r\n>  |     uint256[] storage s;\r\n>   |                   ^^^^^^^\r\n\r\nThe [documentation](https://solidity.readthedocs.io/en/v0.6.5/types.html#data-location-and-assignment-behaviour) says:\r\n\r\n```\r\ncontract C {\r\n    // The data location of x is storage.\r\n    // This is the only place where the\r\n    // data location can be omitted.\r\n    uint[] x;\r\n```\r\nShould it be possible to explicitly write storage in such cases?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610814056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610832383",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-610832383",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 610832383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDgzMjM4Mw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-08T08:42:58Z",
    "updated_at": "2021-06-23T09:39:06Z",
    "author_association": "MEMBER",
    "body": "@hrkrshnn I edited the code to avoid the error - I accidentally added a ``storage`` qualifier to the state variables, which is syntactically invalid.\r\nHowever, the error message you posted looks like there is an issue with reporting the source locations for this error, I'll have a look at that and potentially create a new issue for it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610832383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610833603",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-610833603",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 610833603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDgzMzYwMw==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-08T08:45:33Z",
    "updated_at": "2021-06-23T09:39:16Z",
    "author_association": "MEMBER",
    "body": "@ekpyron ok. Please don't bother with my error message, the ^ symbols  are my own, and the location 2:12 is probably wrong.\r\n\r\nHere's a verbatim one.\r\n```\r\nError: Expected identifier but got 'storage'\r\n --> /tmp/storage.sol:2:15:\r\n  |\r\n2 |     uint256[] storage s;\r\n  |               ^^^^^^^\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610833603/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610834017",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-610834017",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 610834017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDgzNDAxNw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-08T08:46:23Z",
    "updated_at": "2021-06-23T09:39:23Z",
    "author_association": "MEMBER",
    "body": "Ah, ok!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/610834017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611527303",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-611527303",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 611527303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTUyNzMwMw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T13:27:05Z",
    "updated_at": "2020-04-09T13:27:05Z",
    "author_association": "MEMBER",
    "body": "After discussing some aspects of this with @hrkrshnn I'm actually not sure anymore that this can be done in a reasonable way. We need to distinguish the following:\r\n```\r\nuint256[] s;\r\nfunction f(uint256[] storage x) internal pure returns (uint256[] storage) {\r\n   return x;\r\n}\r\nfunction g() internal pure {\r\n   s;\r\n}\r\nfunction h() internal pure {\r\n   f(s);\r\n}\r\n```\r\n\r\nFrom these:\r\n```\r\nuint256[] s;\r\nfunction f(uint256[] storage x) internal view returns (uint256[] memory) {\r\n   return x;\r\n}\r\nfunction g() internal view {\r\n   uint256[] memory c = s;\r\n}\r\nfunction h(uint256[] memory) internal view {}\r\nfunction i() internal view {\r\n   h(s);\r\n}\r\n```\r\n\r\nI.e. the change between view and pure occurs in implicit type conversions... catching that would make the ViewPureChecker significantly more complex... is there sufficient gain in making the accesses to only the slot pure to justify this? @chriseth\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611527303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611533869",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-611533869",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 611533869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTUzMzg2OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T13:40:16Z",
    "updated_at": "2020-04-09T13:40:16Z",
    "author_association": "MEMBER",
    "body": "@ekpyron it looks like it is better to postpone this to after the introduction of `copyof`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/611533869/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/633604189",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-633604189",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 633604189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzYwNDE4OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-25T14:42:05Z",
    "updated_at": "2020-05-25T14:42:05Z",
    "author_association": "MEMBER",
    "body": "Is this really in progress?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/633604189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/633605066",
    "html_url": "https://github.com/ethereum/solidity/issues/8425#issuecomment-633605066",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8425",
    "id": 633605066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzYwNTA2Ng==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-25T14:44:12Z",
    "updated_at": "2020-05-25T14:44:12Z",
    "author_association": "MEMBER",
    "body": "@chriseth No. I'll put this into icebox.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/633605066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
