{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/11044/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/11044/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/11044/events",
  "html_url": "https://github.com/ethereum/solidity/issues/11044",
  "id": 821503558,
  "node_id": "MDU6SXNzdWU4MjE1MDM1NTg=",
  "number": 11044,
  "title": "Compiling Yul doesn't produce immutableReferences even when setimmutable/loadimmutable is used",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1017612679,
      "node_id": "MDU6TGFiZWwxMDE3NjEyNjc5",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/protocol%20design%20:crystal_ball:",
      "name": "protocol design :crystal_ball:",
      "color": "8af77e",
      "default": false,
      "description": "Potential changes to ABI, meta data, standard JSON"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-03-03T21:32:52Z",
  "updated_at": "2022-02-07T12:21:46Z",
  "closed_at": "2022-02-07T12:21:46Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCompiling Yul that uses `linkersymbol` will produce link references in the compiler output, but compiling Yul that uses `setimmutable`/`loadimmutable` doesn't produce immutable references in the compiler output.\r\n\r\nSo, for why this is relevant -- this goes along with #11043 as one of the issues I encountered when trying to add [Yul support into Truffle](https://github.com/trufflesuite/truffle/issues/1906).\r\n\r\nWhy is this an issue?  It's for performing bytecode matching; there are a number of contexts where we're given a piece of externally-obtained bytecode and we want to know what contract class it is (so we can get an appropriate source mpa, etc).   In order to do this, we need to know which parts of any given compiled bytecode may possibly vary, so that when we attempt to match other bytecode against it, we don't get a false negative.  To do this we rely on both link references and immutable references (and knowledge of the delegatecall guard) to say, hey, these parts of the bytecode are allowed to vary.  So, the lack of immutable references would be a problem in that we wouldn't be able to recognize instances of Yul contracts that made use of `setimmutable`/`loadimmutable`.\r\n\r\nSo, this would be useful to have.  There is the problem that they couldn't be keyed by AST ID like with Solidity, since Yul ASTs don't have node IDs, but maybe they could just use the immutable name or something (which would be unambiguous in this context).  This probably wouldn't be used for decoding in the debugger or anything, but we'd want to have some way of knowing which places in the code might vary for bytecode matching.\r\n\r\n(I mean technically since it's Yul *anywhere* in the code might vary, so obviously this couldn't be done with full reliability, but we'd still like to handle the cases that we can.)\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.1\r\n\r\n## Steps to Reproduce\r\n\r\n```yul\r\nobject \"YulTest\" {\r\n  code {\r\n    let size := datasize(\"runtime\")\r\n    datacopy(0, dataoffset(\"runtime\"), size)\r\n    setimmutable(0, \"test\", 1)\r\n    return(0, size)\r\n  }\r\n  object \"runtime\" {\r\n    code {\r\n      mstore(0, loadimmutable(\"test\"))\r\n      return(0, 0x20)\r\n    }\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/11044/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/11044/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022141652",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022141652",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022141652,
    "node_id": "IC_kwDOAm_5kc487KTU",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T12:11:52Z",
    "updated_at": "2022-01-26T12:12:22Z",
    "author_association": "MEMBER",
    "body": "Here is a suggestion of how the output could look:\r\n\r\n```\r\n\r\n              \"deployedBytecode\": {\r\n                /* ..., */ // The same layout as above.\r\n                \"immutableReferences\": {\r\n                  // There are two references to the immutable with AST ID 3, both 32 bytes long. One is\r\n                  // at bytecode offset 42, the other at bytecode offset 80.\r\n                  \"3\": [{ \"start\": 42, \"length\": 32 }, { \"start\": 80, \"length\": 32 }]\r\n                }\r\n                \"immutableReferencesYul\": {\r\n                  \"test\": { \r\n                    \"value\": \"0x01\",\r\n                    \"offsets\": [16, 32, 44]  \r\n                  }\r\n                }\r\n              }\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022141652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022152024",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022152024",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022152024,
    "node_id": "IC_kwDOAm_5kc487M1Y",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T12:26:09Z",
    "updated_at": "2022-01-26T12:26:09Z",
    "author_association": "MEMBER",
    "body": "@Marenz What's ``value``? Also why not stick to the layout of ``deployedBytecode.immutableReferences``?\r\nI'm actually wondering if we could just reuse the very same fields and just use the name instead of the AST ID, in case we don't have an AST ID... although that'd of course potentially raise backwards compatibility concerns...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022152024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022153570",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022153570",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022153570,
    "node_id": "IC_kwDOAm_5kc487NNi",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T12:28:37Z",
    "updated_at": "2022-01-26T12:28:37Z",
    "author_association": "MEMBER",
    "body": "`value` would be the actual value of the immutable that way it also provides the length as well.\r\nI thought about reusing the existing one, but it felt very dirty to mix completely different identifiers together (ast ids and names used in yul when calling `setimmutable`)\r\n\r\nAlso notice how the length repeats needlessly for the old fields, when you'd only need it once...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022153570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022155007",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022155007",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022155007,
    "node_id": "IC_kwDOAm_5kc487Nj_",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T12:30:36Z",
    "updated_at": "2022-01-26T12:31:23Z",
    "author_association": "MEMBER",
    "body": "I wanted to include the `value` because while with the ASTs you can print the AST tree and get the actual value of the immutable, you can't do the same with the yul code (short of printing the yulcode itself  of course) so this would provide a JSON-specifc way to get that value, removing the need to do any extra parsing to get the same information as you'd get with the AST immutables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022155007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022211005",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022211005",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022211005,
    "node_id": "IC_kwDOAm_5kc487bO9",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T13:45:14Z",
    "updated_at": "2022-01-26T13:45:14Z",
    "author_association": "MEMBER",
    "body": "I'm still not sure what value you're talking about... in general, you don't know the value the immutable will get.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022211005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022226398",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022226398",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022226398,
    "node_id": "IC_kwDOAm_5kc487e_e",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T14:03:30Z",
    "updated_at": "2022-01-26T14:03:30Z",
    "author_association": "MEMBER",
    "body": "Why wouldn't I know it? Isn't it given in the function call `setimmutable(0, \"name\", value)`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022226398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022227964",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022227964",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022227964,
    "node_id": "IC_kwDOAm_5kc487fX8",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T14:05:16Z",
    "updated_at": "2022-01-26T14:05:16Z",
    "author_association": "MEMBER",
    "body": "But you don't know the value of ``value``, it can depend on anything, e.g. on constructor arguments. Or did you want to include the expression? Not sure that would be overly helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022227964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022229320",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1022229320",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1022229320,
    "node_id": "IC_kwDOAm_5kc487ftI",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T14:06:49Z",
    "updated_at": "2022-01-26T14:06:49Z",
    "author_association": "MEMBER",
    "body": "Ah, true. I guess `length` has to be enough in that case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1022229320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1023167008",
    "html_url": "https://github.com/ethereum/solidity/issues/11044#issuecomment-1023167008",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/11044",
    "id": 1023167008,
    "node_id": "IC_kwDOAm_5kc48_Eog",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-27T12:41:26Z",
    "updated_at": "2022-01-27T12:41:26Z",
    "author_association": "MEMBER",
    "body": "Given that the AST ID is also the actual string used in the immutable pseudo-opcodes in Yul, I'd actually say we can just reuse ``deployedBytecode.immutableReferences`` and just use whatever string is used for the immutables in Yul as keys in there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1023167008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
