{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13723/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13723/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13723/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13723",
  "id": 1453414388,
  "node_id": "I_kwDOAm_5kc5WoVf0",
  "number": 13723,
  "title": "Code/contractdata data location",
  "user": {
    "login": "NunoFilipeSantos",
    "id": 2582498,
    "node_id": "MDQ6VXNlcjI1ODI0OTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2582498?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NunoFilipeSantos",
    "html_url": "https://github.com/NunoFilipeSantos",
    "followers_url": "https://api.github.com/users/NunoFilipeSantos/followers",
    "following_url": "https://api.github.com/users/NunoFilipeSantos/following{/other_user}",
    "gists_url": "https://api.github.com/users/NunoFilipeSantos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NunoFilipeSantos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NunoFilipeSantos/subscriptions",
    "organizations_url": "https://api.github.com/users/NunoFilipeSantos/orgs",
    "repos_url": "https://api.github.com/users/NunoFilipeSantos/repos",
    "events_url": "https://api.github.com/users/NunoFilipeSantos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NunoFilipeSantos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4806670945,
      "node_id": "LA_kwDOAm_5kc8AAAABHn_6YQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/roadmap",
      "name": "roadmap",
      "color": "15B732",
      "default": false,
      "description": ""
    },
    {
      "id": 4867045645,
      "node_id": "LA_kwDOAm_5kc8AAAABIhk5DQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/epic",
      "name": "epic",
      "color": "BE24FA",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-11-17T14:08:10Z",
  "updated_at": "2023-07-06T10:45:25Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What\r\n\r\nIntroduce ``code`` or ``contractdata`` as a new data location for data stored in the deployed bytecode as an extension of the current immutable mechanism.\r\n\r\n### Why\r\n\r\nLifting the restrictions of the current immutable mechanism and transfer the merits to dynamic types.\r\n\r\n### How\r\n\r\n- [ ] https://github.com/ethereum/solidity/pull/13468\r\n\r\n### Notes\r\n- To be done in the design of Experimental Solidity.\r\n\r\n---\r\n### Resources\r\n\r\n1. #13323",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13723/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13723/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410499381",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410499381",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410499381,
    "node_id": "IC_kwDOAm_5kc5UEoM1",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T14:49:42Z",
    "updated_at": "2023-01-31T14:49:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will `immutable` be deprecated? I strongly suggest adding _more_ keywords. Given `constant` already exists (and causes confusion with `immutable`), if you prefer `code` over `immutable` I'd just replace the current usage with that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410499381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410509209",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410509209",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410509209,
    "node_id": "IC_kwDOAm_5kc5UEqmZ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T14:54:46Z",
    "updated_at": "2023-01-31T14:54:46Z",
    "author_association": "MEMBER",
    "body": "Yes, we will transition to one keyword for all of it, the question is rather what it will be. I was rather happy with ``code`` until EVM-level discussions about deprecating code introspection and ``codecopy`` started, which *may* lead to ``codecopy`` being replaced by a more restricted ``datacopy`` in a mid-term future evm version - which weakens the justification for using ``code``.\r\n\r\nMy plan was to open the discussion about the keyword to use for this now and try to settle this asap.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410509209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410517131",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410517131",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410517131,
    "node_id": "IC_kwDOAm_5kc5UEsiL",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T14:59:19Z",
    "updated_at": "2023-01-31T15:00:05Z",
    "author_association": "MEMBER",
    "body": "The main advantage of just sticking with `immutable` would be that we probably wouldn't need a breaking change then (for any new keyword we'll probably need that).\r\n\r\nThe main question for that is whether it's only me to whom stuff like this looks very off:\r\n```\r\ncontract C {\r\n  uint[] immutable x;\r\n  uint[] immutable y;\r\n  function f() public {\r\n    uint[] immutable immutableRef = x;\r\n    immutableRef = y;\r\n    ...\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410517131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410581897",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410581897",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410581897,
    "node_id": "IC_kwDOAm_5kc5UE8WJ",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T15:26:14Z",
    "updated_at": "2023-01-31T15:42:43Z",
    "author_association": "MEMBER",
    "body": "Some random ideas for the keyword that would avoid tying it to a specific section in the bytecode:\r\n- `embedded`\r\n- `persistent`\r\n- `inline`\r\n- `fixed` (we have that already for fixed-points though)\r\n- `installed`\r\n- `implant`\r\n- `frozen`\r\n- `integrated`\r\n- `inlay`\r\n- `inset`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410581897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410642578",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410642578",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410642578,
    "node_id": "IC_kwDOAm_5kc5UFLKS",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T15:58:58Z",
    "updated_at": "2023-01-31T16:00:04Z",
    "author_association": "MEMBER",
    "body": "Hm... not sure any of them really convince me right away :-).\r\n\r\nIt may actually be worth a thought what happened, if we instead actually just weakened the restrictions on what's ``constant``. Whether a ``constant`` is de-facto compile-time constant can always be determined on a case-by-case basis when evaluating the expression - and any use of a constant that's only known after the constructor in a context that requires to know the value at compile time can error out on that use only - so it could in principle be done.\r\nFor some reason ``uint[] constant ref = x; ref = y;`` looks less weird to me than for `immutable`, not exactly sure why...\r\n\r\nThat'd be straight the opposite direction of @nventuro asking for using *more* keywords instead, though :-). Would reusing constant really be confusing here though?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410642578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410648200",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410648200",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410648200,
    "node_id": "IC_kwDOAm_5kc5UFMiI",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T16:02:29Z",
    "updated_at": "2023-01-31T16:03:23Z",
    "author_association": "MEMBER",
    "body": "``constdata`` or ``deploydata`` or something like that may be options... but ugly...\r\nFor the record, the opcode that may replace ``codecopy`` in EOF would be ``datacopy`` which would allow only to read from a specific data section defined during deployment, so it'd still be a specific section of the deployed bytecode technically... but ``data`` really doesn't make for a good keyword :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410648200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410918232",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410918232",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410918232,
    "node_id": "IC_kwDOAm_5kc5UGOdY",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T19:06:35Z",
    "updated_at": "2023-01-31T19:07:28Z",
    "author_association": "MEMBER",
    "body": "Not sure I like the idea of relaxing `constant`. Being able to change constants by mistake in init code does not sound like a feature to me :) Sometimes you just want to say something will never change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410918232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410957250",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1410957250",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1410957250,
    "node_id": "IC_kwDOAm_5kc5UGX_C",
    "user": {
      "login": "d-xo",
      "id": 6689924,
      "node_id": "MDQ6VXNlcjY2ODk5MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6689924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d-xo",
      "html_url": "https://github.com/d-xo",
      "followers_url": "https://api.github.com/users/d-xo/followers",
      "following_url": "https://api.github.com/users/d-xo/following{/other_user}",
      "gists_url": "https://api.github.com/users/d-xo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d-xo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d-xo/subscriptions",
      "organizations_url": "https://api.github.com/users/d-xo/orgs",
      "repos_url": "https://api.github.com/users/d-xo/repos",
      "events_url": "https://api.github.com/users/d-xo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d-xo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T19:37:16Z",
    "updated_at": "2023-01-31T19:37:16Z",
    "author_association": "MEMBER",
    "body": "Just want to note here that allowing dynamically sized immutable data into the runtime bytecode will be challenging to deal with from a formal analysis perspective, and that my life (as an author of a symbolic execution engine) would be made easier if this would wait until after EOF (where the proper separation of code and data would make this much easier to model).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1410957250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1419073363",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1419073363",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1419073363,
    "node_id": "IC_kwDOAm_5kc5UlVdT",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-06T13:21:34Z",
    "updated_at": "2023-02-06T13:21:34Z",
    "author_association": "MEMBER",
    "body": "@d-xo The problem is that currently nobody knows if and when EOF will actually happen :-).\r\nI take it, you want to be able to analyze bytecode even without having sources available, i.e. providing the separation of code and data as compiler output artifact doesn't help you that much?\r\nWould it help if we defined better formal guarantees for distinguishing data from code in bytecode? E.g. we could define a recursive visitation algorithm starting from the entry point that would be guaranteed to cover everything that's code, leaving only data (not sure there's currently a reliable way to do this in all corner cases that would mess with function pointers in inline assembly)? This would depend on your exact requirements in any case, since nested code for contract creation can still occur indistinguishably from purely-non-code data (even in EOF, unless the latest \"no code introspection\" changes to EOF are accepted)...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1419073363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422682668",
    "html_url": "https://github.com/ethereum/solidity/issues/13723#issuecomment-1422682668",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13723",
    "id": 1422682668,
    "node_id": "IC_kwDOAm_5kc5UzGos",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T14:26:20Z",
    "updated_at": "2023-02-08T14:26:20Z",
    "author_association": "MEMBER",
    "body": "``contractdata`` may be an option",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422682668/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
