{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12328/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12328/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12328/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12328",
  "id": 1063127041,
  "node_id": "I_kwDOAm_5kc4_XggB",
  "number": 12328,
  "title": "Implicit conversion from contract to address",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-11-25T03:45:14Z",
  "updated_at": "2023-03-29T12:05:27Z",
  "closed_at": "2023-03-29T12:05:27Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "If a contract wants to query its own balance of some (ERC20) token, the expression is `token.balanceOf(address(this))`. As far as I can tell, there is no reason to force a manual cast to address. It would be simpler to write, but more importantly simpler to read and understand, if the expression was `token.balanceOf(this)`.\r\n\r\nCouldn't find an existing issue about this conversion in particular, and it seems like it is not a breaking change so it's worth discussing on its own.\r\n\r\nI'm not sure if this became a requirement in 0.5.0. There is this item in the changelog:\r\n>Explicitly convert values of contract type to addresses before using an address member. Example: if c is a contract, change c.transfer(...) to address(c).transfer(...).\r\n\r\nBut it applies to members only. I can see that that's more complicated. But in argument position I think this should be an implicit cast.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12328/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12328/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990093704",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-990093704",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 990093704,
    "node_id": "IC_kwDOAm_5kc47A6GI",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T18:04:16Z",
    "updated_at": "2021-12-09T18:05:20Z",
    "author_association": "MEMBER",
    "body": "The fact that contract types are no longer implicitly convertible to `address` was a breaking change added in #4321 (0.5.0). Looks like it was not explicitly mentioned in the changelog or [Solidity v0.5.0 Breaking Changes > Explicitness Requirements](https://docs.soliditylang.org/en/latest/050-breaking-changes.html#explicitness-requirements) and instead was assumed to be implied by this:\r\n> - Explicit conversions between unrelated contract types are now disallowed. You can only convert from a contract type to one of its base or ancestor types. If you are sure that a contract is compatible with the contract type you want to convert to, although it does not inherit from it, you can work around this by converting to `address` first. Example: if `A` and `B` are contract types, `B` does not inherit from `A` and `b` is a contract of type `B`, you can still convert `b` to type `A` using `A(address(b))`. Note that you still need to watch out for matching payable fallback functions, as explained below.\r\n\r\nIf an implicit conversion was allowed, you could still do `A(b)` because `b` would be implicitly converted to `address` and then the address explicitly converted to `A`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990093704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990381767",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-990381767",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 990381767,
    "node_id": "IC_kwDOAm_5kc47CAbH",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T23:03:08Z",
    "updated_at": "2021-12-09T23:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the context! I see the reasoning behind that, but is it possible to disallow `A(b)` while allowing implicit conversion to address in other contexts?\r\n\r\nMy position is that safe conversions should be implicit as much as possible. Otherwise, they dillute the attention given to unsafe casts because the syntax is indistinguishable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990381767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990883409",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-990883409",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 990883409,
    "node_id": "IC_kwDOAm_5kc47D65R",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-10T11:17:22Z",
    "updated_at": "2021-12-10T11:17:22Z",
    "author_association": "MEMBER",
    "body": "I think it could be done by just treating it as a special case and disallowing it in contract conversions. If it's really only that one case then I think it would not be a bad idea and I don't see much harm it automatically converting a contract to an address. I'll add this to the design backlog and we'll discuss it on a call.\r\n\r\nThe only thing is that it goes against #11700, which we have decided to implement some time ago. That issue would actually add more cases where an explicit `address` conversion is necessary. The main concern in that issue was that comparison between contracts could be mistaken for an operation that compares more than just an address, e.g. checks if it's actually an instance of the same contract type and comparison of addresses is always clear (and sometimes even more readable).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/990883409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1029964596",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1029964596",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1029964596,
    "node_id": "IC_kwDOAm_5kc49ZAM0",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-04T12:59:43Z",
    "updated_at": "2022-02-04T14:30:44Z",
    "author_association": "NONE",
    "body": "Implicit contract/interface conversion to `address` would create troubles with methods signatures: `address .transfer(uint256)` and `address.send(uint256)` and others. We could extract this methods away from address: `evm.transfer(address, uint256)` or smith like this. Casting to `address` in arguments feels really bad.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1029964596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031378828",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1031378828",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1031378828,
    "node_id": "IC_kwDOAm_5kc49eZeM",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T11:47:12Z",
    "updated_at": "2022-02-07T11:47:12Z",
    "author_association": "MEMBER",
    "body": "> Implicit contract/interface conversion to `address` would create troubles with methods signatures: `address .transfer(uint256)` and `address.send(uint256)` and others. We could extract this methods away from address: `evm.transfer(address, uint256)` or smith like this. Casting to `address` in arguments feels really bad.\r\n\r\nImplicit conversion is not performed for member lookup, so I don't see a problem here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1031378828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1037449188",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1037449188",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1037449188,
    "node_id": "IC_kwDOAm_5kc491jfk",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-12T20:19:04Z",
    "updated_at": "2022-02-12T20:19:04Z",
    "author_association": "NONE",
    "body": "@chriseth I would say `address` is not base contract/interface, that’s why we don’t have this collision. But if we would implicitly cast to address we will definitely have this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1037449188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245594942",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1245594942",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1245594942,
    "node_id": "IC_kwDOAm_5kc5KPkU-",
    "user": {
      "login": "adhusson",
      "id": 2977,
      "node_id": "MDQ6VXNlcjI5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adhusson",
      "html_url": "https://github.com/adhusson",
      "followers_url": "https://api.github.com/users/adhusson/followers",
      "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
      "organizations_url": "https://api.github.com/users/adhusson/orgs",
      "repos_url": "https://api.github.com/users/adhusson/repos",
      "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adhusson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T15:40:31Z",
    "updated_at": "2022-10-03T10:28:37Z",
    "author_association": "NONE",
    "body": "It looks like losing contract->address implicit conversion was a side-effect of disallowing sideways contract casting. Sadly that represents quite a loss in quality of life. I don't see any good reason for it, you can have both.\r\n\r\nedited for clarity/fixes: this responds to\r\n\r\n> If an implicit conversion was allowed, you could still do A(b) because b would be implicitly converted to address and then the address explicitly converted to A.\r\n\r\nSince [0.8.0](https://blog.soliditylang.org/2020/12/16/solidity-v0.8.0-release-announcement/) explicit conversions \"are only possible when there is at most one change in sign, width, payability or type-category\". You could add \"and none in contract hierarchy branch\" to the previous sentence. Then you take `address` as the root of the contract inheritance tree, and you can reenable implicit conversion everywhere. Then you would get the following (comparing with uints):\r\n\r\n|              | numbers    | contracts    |\r\n|--------------|------------|--------------|\r\n| value        | x:uint24   | x:Contract1  |\r\n| OK function  | f(uint256) | f(address)   |\r\n| Bad function | g(bytes3)  | f(Contract2) |\r\n| f(x)         | ✅          | ✅            |\r\n| g(x)         | ❌          | ❌            |\r\n\r\n(`Contract2` neither an ancestor nor a descendant of `Contract`.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1245594942/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1477723617",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1477723617",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1477723617,
    "node_id": "IC_kwDOAm_5kc5YFEXh",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-21T12:06:09Z",
    "updated_at": "2023-03-21T12:06:09Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1477723617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488477289",
    "html_url": "https://github.com/ethereum/solidity/issues/12328#issuecomment-1488477289",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12328",
    "id": 1488477289,
    "node_id": "IC_kwDOAm_5kc5YuFxp",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-29T12:05:25Z",
    "updated_at": "2023-03-29T12:05:25Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1488477289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
