{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/1137/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/1137/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/1137/events",
  "html_url": "https://github.com/ethereum/solidity/issues/1137",
  "id": 180513119,
  "node_id": "MDU6SXNzdWUxODA1MTMxMTk=",
  "number": 1137,
  "title": "needless storage clear when modifying a short dynamically sized byte array",
  "user": {
    "login": "cdetrio",
    "id": 997681,
    "node_id": "MDQ6VXNlcjk5NzY4MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cdetrio",
    "html_url": "https://github.com/cdetrio",
    "followers_url": "https://api.github.com/users/cdetrio/followers",
    "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
    "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
    "organizations_url": "https://api.github.com/users/cdetrio/orgs",
    "repos_url": "https://api.github.com/users/cdetrio/repos",
    "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cdetrio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-10-02T13:47:44Z",
  "updated_at": "2023-11-29T13:56:09Z",
  "closed_at": "2023-11-29T07:36:13Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This bug affects Solidity v0.3.6 (at least, didn't test versions prior), and the latest nightly v0.4.3-nightly.2016.9.30.\n\nTake this example contract:\n\n```\npragma solidity ^0.4.0;\ncontract c {\n    string test;\n    function setString(string _test) {\n        test = _test;\n    }\n}\n```\n\nThen pass a short string (i.e. one that fits in a single 32-byte storage slot) to the `setString()` method. For example, passing \"example string\":\n\n<img width=\"858\" alt=\"short byte array sstore bug first tx\" src=\"https://cloud.githubusercontent.com/assets/997681/19020766/306df486-88b2-11e6-8e8f-6e837f0a21de.png\">\n\nWe can see above that on the first execution of `setString()`, only one SSTORE occurs. \n\nNow call `setString()` a second time, for example with \"example string 2\":\n<img width=\"902\" alt=\"short byte array sstore bug second tx\" src=\"https://cloud.githubusercontent.com/assets/997681/19020777/77e8a720-88b2-11e6-9147-1ed38dc40a08.png\">\n\nWe can see that on the second execution, two SSTOREs occurred. The first SSTORE set the `0x0` slot to \"example string 2\" (0x6578616d...), and the second SSTORE cleared the `0x290de...` slot (i.e. set the slot to 0). But since the `0x290de...` slot was already empty, the second SSTORE was a needless operation.\n\nThis needless storage clear originates at [libsolidity/codegen/ArrayUtils.cpp#L99-L100](https://github.com/ethereum/solidity/blob/af6afb0415761b53721f89c7f65064807f41cbd3/libsolidity/codegen/ArrayUtils.cpp#L99-L100), since if the target storage size (i.e the value of `convertLengthToSize(_targetType)`) is 1, after adding it to `target_data_pos`, `target_data_pos` and `target_data_end` will span two storage slots. After the new string is written to the first storage slot (overwriting the previously-existing value at that slot), the second slot is then cleared in [`clearStorageLoop(*targetBaseType)`](https://github.com/ethereum/solidity/blob/af6afb0415761b53721f89c7f65064807f41cbd3/libsolidity/codegen/ArrayUtils.cpp#L267). On the first execution, the bug did not occur because the target storage size was 0, so `target_data_pos` and `target_data_end` are equal (and thus span only a single storage slot).\n",
  "closed_by": {
    "login": "mehtavishwa30",
    "id": 32997409,
    "node_id": "MDQ6VXNlcjMyOTk3NDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/32997409?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mehtavishwa30",
    "html_url": "https://github.com/mehtavishwa30",
    "followers_url": "https://api.github.com/users/mehtavishwa30/followers",
    "following_url": "https://api.github.com/users/mehtavishwa30/following{/other_user}",
    "gists_url": "https://api.github.com/users/mehtavishwa30/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mehtavishwa30/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mehtavishwa30/subscriptions",
    "organizations_url": "https://api.github.com/users/mehtavishwa30/orgs",
    "repos_url": "https://api.github.com/users/mehtavishwa30/repos",
    "events_url": "https://api.github.com/users/mehtavishwa30/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mehtavishwa30/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/1137/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/1137/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/254492872",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-254492872",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 254492872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQ5Mjg3Mg==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-18T12:31:48Z",
    "updated_at": "2016-10-18T12:31:48Z",
    "author_association": "MEMBER",
    "body": "I am wondering why this bug happens especially for \"target storage size == 1\".  Following the description, I don't see any reason why the same thing does not happen for \"target storage size == 2\".  In that case, `target_data_pos` and `target_data_end` would span three storage slots, which is bigger than two.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/254492872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/254962315",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-254962315",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 254962315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDk2MjMxNQ==",
    "user": {
      "login": "cdetrio",
      "id": 997681,
      "node_id": "MDQ6VXNlcjk5NzY4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdetrio",
      "html_url": "https://github.com/cdetrio",
      "followers_url": "https://api.github.com/users/cdetrio/followers",
      "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
      "organizations_url": "https://api.github.com/users/cdetrio/orgs",
      "repos_url": "https://api.github.com/users/cdetrio/repos",
      "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdetrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T22:42:37Z",
    "updated_at": "2016-10-19T22:42:37Z",
    "author_association": "MEMBER",
    "body": "Its a bug for target_storage_size == 1 because in that case, the storage length and the storage value both fit in the same slot. So to overwrite it, there only needs to be one SSTORE operation.\n\nFor target_storage_size == 2, storing the value requires three storage slots: the first slot stores the length of the value, and the second and third slots store the value. So to overwrite it, there should be three SSTORE operations. More accurately it is `target_ref` and `target_data_end` that span three storage slots; `target_ref` is the first slot, target_data_pos is `sha3(target_ref)` and so is the second slot, target_data_pos+1 is the third slot, and target_data_pos+2 == target_data_end.\n\nWalking through the case of target_storage_size == 2 (two calls to `setString(\"asdf asdf asdf asdf asdf asdf asdf\")` in the example contract):\n\n<img width=\"934\" alt=\"sstore short array bug - longer string example\" src=\"https://cloud.githubusercontent.com/assets/997681/19539873/2188f8b4-965c-11e6-8749-8ab7ff8d3cfb.png\">\n\nThe first SSTORE sets the 0x00 location (`target_ref`) to the target length ([2*length+1](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L136-L139)). The second SSTORE is done at `target_data_pos` ([this line](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L215)), `0x290de...ef3e563`. Then `target_data_pos` is [incremented](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L234), resulting in `0x290de...ef3e564`. It jumps back to [copyLoopStart](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L159), and the third SSTORE [is done](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L215) at `0x290de...ef3e564`. After being incremented again, `0x290de...ef3e565` is now equal to `target_data_end`.\n\nWhen `target_data_pos` and `target_data_end` are equal, then the GT (greater than) check in [clearStorageLoop()](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L752-L754) is false, which results in jumping over the storage clear operation [StorageItem().setToZero()](https://github.com/ethereum/solidity/blob/35ffcac35b89447a3b78f353e5b916c4dc2c0c70/libsolidity/codegen/ArrayUtils.cpp#L759).\n\nBy treating the `target_storage_size == 1` as a special case, setting `target_size = 0` ensures that `target_data_end == target_data_pos` which causes the storage clear in `clearStorageLoop()` to be skipped.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/254962315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/499406432",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-499406432",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 499406432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQwNjQzMg==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T08:47:05Z",
    "updated_at": "2019-06-06T08:47:05Z",
    "author_association": "MEMBER",
    "body": "We should try this with the new code generator + optimizer",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/499406432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942214393",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-942214393",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 942214393,
    "node_id": "IC_kwDOAm_5kc44KQz5",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T11:42:17Z",
    "updated_at": "2021-10-13T11:42:17Z",
    "author_association": "MEMBER",
    "body": "> We should try this with the new code generator + optimizer\r\n\r\nI just tried it in remix and could not reproduce it anymore. (It uses the new backend as far as I can tell (because the debugger opened up a utilities.yul file))\r\n\r\nMaybe we want to close this? Someone else could double check though, my remix skills are below-average at best.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942214393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942323771",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-942323771",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 942323771,
    "node_id": "IC_kwDOAm_5kc44Krg7",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T13:45:03Z",
    "updated_at": "2021-10-13T13:45:03Z",
    "author_association": "MEMBER",
    "body": "This might mean that this is part of the old abi decoder.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/942323771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1831942880",
    "html_url": "https://github.com/ethereum/solidity/issues/1137#issuecomment-1831942880",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/1137",
    "id": 1831942880,
    "node_id": "IC_kwDOAm_5kc5tMTrg",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-29T13:56:08Z",
    "updated_at": "2023-11-29T13:56:08Z",
    "author_association": "MEMBER",
    "body": "For the record: we're closing this because, as stated above, we did not manage to reproduce it with latest compiler so far. The issue pertains to a very old version of the compiler and is unlikely to be still relevant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1831942880/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
