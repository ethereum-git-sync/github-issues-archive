{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4287",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4287/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4287/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4287/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4287",
  "id": 331824406,
  "node_id": "MDU6SXNzdWUzMzE4MjQ0MDY=",
  "number": 4287,
  "title": "How to  verify contracts created by other contract?",
  "user": {
    "login": "rushairer",
    "id": 5195693,
    "node_id": "MDQ6VXNlcjUxOTU2OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5195693?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rushairer",
    "html_url": "https://github.com/rushairer",
    "followers_url": "https://api.github.com/users/rushairer/followers",
    "following_url": "https://api.github.com/users/rushairer/following{/other_user}",
    "gists_url": "https://api.github.com/users/rushairer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rushairer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rushairer/subscriptions",
    "organizations_url": "https://api.github.com/users/rushairer/orgs",
    "repos_url": "https://api.github.com/users/rushairer/repos",
    "events_url": "https://api.github.com/users/rushairer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rushairer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-06-13T03:01:14Z",
  "updated_at": "2018-06-18T07:20:35Z",
  "closed_at": "2018-06-18T07:20:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "https://etherscan.io/address/0x742721c4db2d104d4731f195dba422fe1e5d52cd#code\r\n\r\n```javascript\r\n\r\npragma solidity ^0.4.23;\r\n\r\ncontract ERC20Basic {\r\n  // events\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address addr) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  // public variables\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals = 18;\r\n\r\n  // internal variables\r\n  uint256 _totalSupply;\r\n  mapping(address => uint256) _balances;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address addr) public view returns (uint256 balance) {\r\n    return _balances[addr];\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[msg.sender]);\r\n\r\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n  // internal functions\r\n\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  // events\r\n  event Approval(address indexed owner, address indexed agent, uint256 value);\r\n\r\n  // public functions\r\n  function allowance(address owner, address agent) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address agent, uint256 value) public returns (bool);\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n  // public variables\r\n\r\n  // internal variables\r\n  mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[from]);\r\n    require(value <= _allowances[from][msg.sender]);\r\n\r\n    _balances[from] = _balances[from].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    _allowances[from][msg.sender] = _allowances[from][msg.sender].sub(value);\r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address agent, uint256 value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = value;\r\n    emit Approval(msg.sender, agent, value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address agent) public view returns (uint256) {\r\n    return _allowances[owner][agent];\r\n  }\r\n\r\n  function increaseApproval(address agent, uint value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = _allowances[msg.sender][agent].add(value);\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address agent, uint value) public returns (bool) {\r\n    uint allowanceValue = _allowances[msg.sender][agent];\r\n    if (value > allowanceValue) {\r\n      _allowances[msg.sender][agent] = 0;\r\n    } else {\r\n      _allowances[msg.sender][agent] = allowanceValue.sub(value);\r\n    }\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n  // internal functions\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract DetailedToken is StandardToken {\r\n  // public variables\r\n  string public name = \"Demo Coin Token\";\r\n  string public symbol = \"DEMO\";\r\n  uint8 public decimals = 18;\r\n\r\n  // public functions\r\n  constructor (\r\n    string tokenName,\r\n    string tokenSymbol,\r\n    uint8 tokenDecimals,\r\n    uint256 tokenTotal,\r\n    address owner\r\n  ) public {\r\n    name = tokenName;\r\n    symbol = tokenSymbol;\r\n    decimals = tokenDecimals;\r\n\r\n    _totalSupply = tokenTotal * (10 ** uint256(decimals));\r\n    _balances[owner] = _totalSupply;\r\n    emit Transfer(0x0, owner, _totalSupply);\r\n  }\r\n}\r\n\r\ncontract TokenManager {\r\n  mapping (address => address) public tokens;\r\n\r\n  function createToken (\r\n    string tokenName,\r\n    string tokenSymbol,\r\n    uint8 tokenDecimals,\r\n    uint256 tokenTotal,\r\n    address owner\r\n  ) public returns (address token) {\r\n\r\n    if (tokens[owner] == 0) {\r\n      tokens[owner] = new DetailedToken(tokenName, tokenSymbol, tokenDecimals, tokenTotal, owner);\r\n    }\r\n    return tokens[owner];\r\n  }\r\n}\r\n\r\n```\r\n\r\nI use DetailedToken created a token: https://etherscan.io/address/0x6629e2fd00b575199fbe656a514c6a1378eb3671\r\n\r\nHow can I verify it? \r\nAt the \"Verify And Publish\" page https://etherscan.io/address/0x6629e2fd00b575199fbe656a514c6a1378eb3671#code\r\n\r\nIt said that:\r\nThis contract was created by the contract code at 0x742721c4db2d104d4731f195dba422fe1e5d52cd\r\n\r\n\r\nThanks!",
  "closed_by": {
    "login": "rushairer",
    "id": 5195693,
    "node_id": "MDQ6VXNlcjUxOTU2OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5195693?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rushairer",
    "html_url": "https://github.com/rushairer",
    "followers_url": "https://api.github.com/users/rushairer/followers",
    "following_url": "https://api.github.com/users/rushairer/following{/other_user}",
    "gists_url": "https://api.github.com/users/rushairer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rushairer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rushairer/subscriptions",
    "organizations_url": "https://api.github.com/users/rushairer/orgs",
    "repos_url": "https://api.github.com/users/rushairer/repos",
    "events_url": "https://api.github.com/users/rushairer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rushairer/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4287/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4287/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396943829",
    "html_url": "https://github.com/ethereum/solidity/issues/4287#issuecomment-396943829",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4287",
    "id": 396943829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk0MzgyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T13:49:10Z",
    "updated_at": "2018-06-13T13:49:10Z",
    "author_association": "MEMBER",
    "body": "It might mean that you have to provide the source code of the contract at 0x742721c4db2d104d4731f195dba422fe1e5d52cd. Perhaps the people at etherscan can help you better than we can.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396943829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397163979",
    "html_url": "https://github.com/ethereum/solidity/issues/4287#issuecomment-397163979",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4287",
    "id": 397163979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzE2Mzk3OQ==",
    "user": {
      "login": "rushairer",
      "id": 5195693,
      "node_id": "MDQ6VXNlcjUxOTU2OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5195693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rushairer",
      "html_url": "https://github.com/rushairer",
      "followers_url": "https://api.github.com/users/rushairer/followers",
      "following_url": "https://api.github.com/users/rushairer/following{/other_user}",
      "gists_url": "https://api.github.com/users/rushairer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rushairer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rushairer/subscriptions",
      "organizations_url": "https://api.github.com/users/rushairer/orgs",
      "repos_url": "https://api.github.com/users/rushairer/repos",
      "events_url": "https://api.github.com/users/rushairer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rushairer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T04:04:49Z",
    "updated_at": "2018-06-14T04:04:49Z",
    "author_association": "NONE",
    "body": "@chriseth thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397163979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
