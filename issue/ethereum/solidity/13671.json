{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13671",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13671/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13671/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13671/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13671",
  "id": 1431032353,
  "node_id": "I_kwDOAm_5kc5VS9Ih",
  "number": 13671,
  "title": "Warn when modifiers with a post block is used in a function with a reachable inline assembly `return` or `stop`",
  "user": {
    "login": "hrkrshnn",
    "id": 13174375,
    "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hrkrshnn",
    "html_url": "https://github.com/hrkrshnn",
    "followers_url": "https://api.github.com/users/hrkrshnn/followers",
    "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
    "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
    "repos_url": "https://api.github.com/users/hrkrshnn/repos",
    "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4726043980,
      "node_id": "LA_kwDOAm_5kc8AAAABGbG1TA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/Feature%20Request",
      "name": "Feature Request",
      "color": "5DBB65",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-01T08:00:31Z",
  "updated_at": "2022-11-01T08:03:14Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```solidity\r\ncontract C {\r\n    bool lock;\r\n    modifier nonReentrant() {\r\n        require(lock);\r\n        lock = true;\r\n        _;\r\n        lock = false;\r\n    }\r\n\r\n    function earlyReturn() nonReentrant external {\r\n        assembly {\r\n            return(0, 0)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn the above contract, it's very easy to miss that the contract enters a deadlock. The lock is never freed.\r\n\r\nWe should do control flow analysis for contracts with modifiers that has a \"post\" block and warn if there is a reachable assembly `return` or `stop`. Note: unlike a reachable `return`, a reachable `revert` is fine. Because the lock will be freed.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13671/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13671/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
