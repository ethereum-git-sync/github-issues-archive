{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7594",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7594/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7594/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7594/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7594",
  "id": 515402194,
  "node_id": "MDU6SXNzdWU1MTU0MDIxOTQ=",
  "number": 7594,
  "title": "Test parser fails on wrong EVMVersion syntax",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "christianparpart",
    "id": 56763,
    "node_id": "MDQ6VXNlcjU2NzYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/christianparpart",
    "html_url": "https://github.com/christianparpart",
    "followers_url": "https://api.github.com/users/christianparpart/followers",
    "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
    "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
    "organizations_url": "https://api.github.com/users/christianparpart/orgs",
    "repos_url": "https://api.github.com/users/christianparpart/repos",
    "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
    "received_events_url": "https://api.github.com/users/christianparpart/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "christianparpart",
      "id": 56763,
      "node_id": "MDQ6VXNlcjU2NzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianparpart",
      "html_url": "https://github.com/christianparpart",
      "followers_url": "https://api.github.com/users/christianparpart/followers",
      "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
      "organizations_url": "https://api.github.com/users/christianparpart/orgs",
      "repos_url": "https://api.github.com/users/christianparpart/repos",
      "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianparpart/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-10-31T12:42:51Z",
  "updated_at": "2019-12-09T09:51:09Z",
  "closed_at": "2019-12-09T09:51:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Input:\r\n\r\n```\r\ncontract c {\r\n  function f() public pure returns (uint) {\r\n    return 7;\r\n  }\r\n}\r\n// ====\r\n// compileViaYul: also\r\n// EVMVersion: byzantium\r\n// ----\r\n// f(uint256): 7 -> 7\r\n```\r\n\r\nIt fails with an exception because of the syntax error in EVMVersion:\r\n\r\n```\r\n/Users/alex/Projects/solidity/test/boostTest.cpp:125: fatal error: in \"semanticTests/wasm\": unexpected exception thrown by { try { stringstream errorStream; auto testCase = _testCaseCreator(config); if (testCase->validateSettings(dev::test::Options::get().evmVersion())) switch (testCase->run(errorStream)) { case TestCase::TestResult::Success: break; case TestCase::TestResult::Failure: do { ::boost::unit_test::unit_test_log.set_checkpoint( ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(114) ); ::boost::test_tools::tt_detail:: report_assertion ( (false), (::boost::unit_test::lazy_ostream::instance() << \"Test expectation mismatch.\\n\" + errorStream.str()), ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(114), ::boost::test_tools::tt_detail::CHECK, ::boost::test_tools::tt_detail::CHECK_MSG , 0 ); } while( ::boost::test_tools::tt_detail::dummy_cond() ); break; case TestCase::TestResult::FatalError: do { ::boost::unit_test::unit_test_log.set_checkpoint( ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(117) ); ::boost::test_tools::tt_detail:: report_assertion ( (false), (::boost::unit_test::lazy_ostream::instance() << \"Fatal error during test.\\n\" + errorStream.str()), ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(117), ::boost::test_tools::tt_detail::CHECK, ::boost::test_tools::tt_detail::CHECK_MSG , 0 ); } while( ::boost::test_tools::tt_detail::dummy_cond() ); break; } } catch (boost::exception const& _e) { do { ::boost::unit_test::unit_test_log.set_checkpoint( ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(123) ); ::boost::test_tools::tt_detail:: report_assertion ( (false), (::boost::unit_test::lazy_ostream::instance() << \"Exception during extracted test: \" << boost::diagnostic_information(_e)), ::boost::unit_test::const_string( \"/Users/alex/Projects/solidity/test/boostTest.cpp\", sizeof( \"/Users/alex/Projects/solidity/test/boostTest.cpp\" ) - 1 ), static_cast<std::size_t>(123), ::boost::test_tools::tt_detail::CHECK, ::boost::test_tools::tt_detail::CHECK_MSG , 0 ); } while( ::boost::test_tools::tt_detail::dummy_cond() ); } }\r\n```\r\n",
  "closed_by": {
    "login": "erak",
    "id": 20012009,
    "node_id": "MDQ6VXNlcjIwMDEyMDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/20012009?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/erak",
    "html_url": "https://github.com/erak",
    "followers_url": "https://api.github.com/users/erak/followers",
    "following_url": "https://api.github.com/users/erak/following{/other_user}",
    "gists_url": "https://api.github.com/users/erak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/erak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/erak/subscriptions",
    "organizations_url": "https://api.github.com/users/erak/orgs",
    "repos_url": "https://api.github.com/users/erak/repos",
    "events_url": "https://api.github.com/users/erak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/erak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7594/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7594/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
