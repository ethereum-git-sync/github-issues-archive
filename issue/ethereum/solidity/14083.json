{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14083",
  "id": 1647385443,
  "node_id": "I_kwDOAm_5kc5iMRtj",
  "number": 14083,
  "title": "`solc --hashes` does not generate bytes4 `error` selectors for errors defined at file level",
  "user": {
    "login": "CJ42",
    "id": 31145285,
    "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CJ42",
    "html_url": "https://github.com/CJ42",
    "followers_url": "https://api.github.com/users/CJ42/followers",
    "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
    "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
    "organizations_url": "https://api.github.com/users/CJ42/orgs",
    "repos_url": "https://api.github.com/users/CJ42/repos",
    "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CJ42/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "matheusaaguiar",
    "id": 95899911,
    "node_id": "U_kgDOBbdRBw",
    "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matheusaaguiar",
    "html_url": "https://github.com/matheusaaguiar",
    "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
    "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
    "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
    "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
    "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
    "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2023-03-30T10:58:37Z",
  "updated_at": "2023-04-11T18:58:15Z",
  "closed_at": "2023-04-10T20:31:06Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of data requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n    - [Solidity chat](https://gitter.im/ethereum/solidity)\r\n    - [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported (check `feature` and `language design` labels).\r\n- If you feel uncertain about your feature request, perhaps it's better to open a language design or feedback forum thread via the issue selector, or by going to the forum directly.\r\n    - [Solidity forum](https://forum.soliditylang.org/)\r\n\r\n*Delete the above section and the instructions in the sections below before submitting*\r\n-->\r\n\r\n## Abstract\r\n\r\nI am using the `--hashes` option with the `solc` CLI to obtain the list of custom errors selectors defined across a repo.\r\n\r\nHowever, the `--hashes` option provides an output only when the `error` is:\r\n- defined within a `contract`, `library` or `interface` ✅ \r\n- but not when it is defined at file level ❌ \r\n\r\nHere is an example below on how to reproduce the error.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\n// solc does not generate the error selector for that\r\nerror MyFirstError();\r\n\r\ninterface Example {\r\n    // solc generates the error selector for this\r\n    error MySecondError();\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n![image](https://user-images.githubusercontent.com/31145285/228812725-16f80a91-4897-4dc2-b9ca-fc8e5e16853f.png)\r\n\r\n<!--Please describe by example what problem you see in the current Solidity language and reason about it.-->\r\n\r\nIf I now place both custom errors inside the `interface`, `solc` will output the custom error selector of both errors\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\ninterface Example {\r\n    error MyFirstError();\r\n    error MySecondError();\r\n}\r\n```\r\n\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/31145285/228813260-3debba9a-ca49-4b34-aad3-3a5c68dde6f8.png)\r\n\r\n\r\n## Motivation\r\n\r\n<!--In this section you describe how you propose to address the problem you described earlier, including by giving one or more exemplary source code snippets for demonstration.-->\r\n\r\nI suggest that `solc --hashes` enables parsing custom `error` defined at the file level, so their selector can be easily obtained.\r\nOtherwise, this leads to having to rely on manually scraping + parsing the `solc` file to generate these custom errors.\r\n\r\nThis will make the `solc --hashes` more flexible. Otherwise we need to define custom errors within a `library` or `interface` so that the command line utility generate their error selector (see example of this workaround below)\r\n\r\nThis is not convenient, as it makes the syntax and structure of Solidity project more complex, and therefore does not encourage to define custom errors at file level.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\ninterface Errors {\r\n    error MyFirstError();\r\n    error MySecondError();\r\n}\r\n\r\ncontract Example {\r\n    function doSomething() public pure {\r\n        revert Errors.MyFirstError();\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Specification\r\n\r\n<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow any developer to implement the functionality.-->\r\n\r\nI am suggesting to enable to parse + generate custom errors signatures at file level, and provide the output as shown below.\r\n\r\n- in the header `===...===`: Custom errors defined at file level are just referenced by just the filename --> `FileName.sol`\r\n- in the header `===...===`: Custom errors defined at `contract`, `library` or `interface` level are referenced by filename + contract/interface/library name --> `FileName.sol:ContractName`\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\n// solc does not generate the error selector for that\r\nerror MyFirstError();\r\n\r\ninterface Example {\r\n    // solc generates the error selector for this\r\n    error MySecondError();\r\n}\r\n```\r\n\r\n_Suggested output:_\r\n\r\n```\r\n======= contracts/Example.sol=======\r\nFunction signatures:\r\n\r\nError signatures:\r\nf59b1406: MyFirstError()\r\n\r\n======= contracts/Example.sol:Example =======\r\nFunction signatures:\r\n\r\nError signatures:\r\n4e8f4576: MySecondError()\r\n```\r\n",
  "closed_by": {
    "login": "matheusaaguiar",
    "id": 95899911,
    "node_id": "U_kgDOBbdRBw",
    "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matheusaaguiar",
    "html_url": "https://github.com/matheusaaguiar",
    "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
    "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
    "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
    "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
    "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
    "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14083/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491987504",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1491987504",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1491987504,
    "node_id": "IC_kwDOAm_5kc5Y7eww",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T14:11:09Z",
    "updated_at": "2023-03-31T14:11:09Z",
    "author_association": "MEMBER",
    "body": "I experimented a little with (hopefully) all possibilities and found that custom `error`s:\r\n * defined at file level, which are unused or used by an unused free function, do not get their selectors in the output of `--hashes` options;\r\n * defined inside `contract`/`library`/`interface`, even if unused, have their selector appear in the output;\r\n * defined at file level and used by a  `contract`/`library`/`interface` function, also have their selector in the output.\r\n\r\nI used `errors` and `contracts` defined both in the same file as well as separate files.\r\nI haven't investigated more, so this is only a guess, but maybe the selectors are ignored or discarded because unused (?) \r\nIn any case, could you provide an example or context where it would be useful to have the selector of an unused custom `error`? (Assuming of course that I am not mistaken or missing a case in my previous analysis)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491987504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491998896",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1491998896",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1491998896,
    "node_id": "IC_kwDOAm_5kc5Y7hiw",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T14:19:37Z",
    "updated_at": "2023-03-31T14:19:37Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\n// These don't show in --hashes output\r\nerror UnusedError();\r\nerror AnotherUnusedError();\r\n// These **do** show, although also defined at file level\r\nerror UsedError();\r\nerror AnotherUsedError();\r\n// Never used\r\nfunction unusedFreeFunction() pure {\r\n    revert AnotherUnusedError();\r\n}\r\n// Used by Contract\r\nfunction usedFreeFunction() pure {\r\n    revert UsedError();\r\n}\r\n\r\ninterface I {\r\n    error InterfaceError();\r\n}\r\n\r\nlibrary L {\r\n    error LibraryError();\r\n}\r\n\r\ncontract C {\r\n    error ContractError();\r\n    function f() public pure {\r\n        usedFreeFunction();\r\n    }\r\n    function g() public pure {\r\n        revert AnotherUsedError();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491998896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502089700",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502089700",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502089700,
    "node_id": "IC_kwDOAm_5kc5ZiBHk",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T17:27:34Z",
    "updated_at": "2023-04-10T17:28:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@matheusaaguiar \r\n\r\nHere is an example with inheritance where `solc --hashes` does not output the hash of a custom `error` defined at file level, although the custom error is used in the base contract.\r\n\r\n_file 1: A.sol_\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nerror MyError();\r\n\r\ncontract A {\r\n    function _foo() internal pure {\r\n        revert MyError();\r\n    }\r\n}\r\n```\r\n\r\n_file 2: B.sol_\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./A.sol\";\r\n\r\ncontract B is A {\r\n    function _bar() internal pure {\r\n        _foo();\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\nrunning the command:\r\n\r\n```\r\nsolc --hashes contracts/A.sol\r\n```\r\n\r\noutput:\r\n\r\n```\r\n======= contracts/A.sol:A =======\r\nFunction signatures:\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502089700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502091972",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502091972",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502091972,
    "node_id": "IC_kwDOAm_5kc5ZiBrE",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T17:30:00Z",
    "updated_at": "2023-04-10T17:30:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I do the same, but in `A.sol` define the custom error at the contract level, it works and `solc --hashes` output the error selector.\r\n\r\n_file 1: A.sol_\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\ncontract A {\r\n    error MyError();\r\n    \r\n    function _foo() internal pure {\r\n        revert MyError();\r\n    }\r\n}\r\n```\r\n\r\n_file 2: B.sol_\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./A.sol\";\r\n\r\ncontract B is A {\r\n    function _bar() internal pure {\r\n        _foo();\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\nrunning the command:\r\n\r\n```\r\nsolc --hashes contracts/A.sol\r\n```\r\n\r\noutput:\r\n\r\n```\r\n======= contracts/A.sol:A =======\r\nFunction signatures:\r\n\r\nError signatures:\r\ndd6c951c: MyError()\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502091972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502246545",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502246545",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502246545,
    "node_id": "IC_kwDOAm_5kc5ZinaR",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T19:59:45Z",
    "updated_at": "2023-04-10T19:59:45Z",
    "author_association": "MEMBER",
    "body": "Thanks @CJ42 !",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502246545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502274961",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502274961",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502274961,
    "node_id": "IC_kwDOAm_5kc5ZiuWR",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T20:23:05Z",
    "updated_at": "2023-04-10T20:24:54Z",
    "author_association": "MEMBER",
    "body": "I just noticed that all the functions in your example are `internal`, which are not part of the ABI.\r\nIf any of the functions using the error is `public` or `external`, then, being part of the ABI, they will have a documented signature, including the errors.\r\nThis seems to be related to [#11752](https://github.com/ethereum/solidity/issues/11752).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502274961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502282662",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502282662",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502282662,
    "node_id": "IC_kwDOAm_5kc5ZiwOm",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T20:30:58Z",
    "updated_at": "2023-04-10T20:30:58Z",
    "author_association": "MEMBER",
    "body": "I am closing this since it is not a bug.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502282662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502283997",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502283997",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502283997,
    "node_id": "IC_kwDOAm_5kc5Ziwjd",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T20:32:20Z",
    "updated_at": "2023-04-10T20:32:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@matheusaaguiar in my example, if you put the function _bar() as public, the same problem occurs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502283997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502290130",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502290130",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502290130,
    "node_id": "IC_kwDOAm_5kc5ZiyDS",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T20:38:26Z",
    "updated_at": "2023-04-10T20:38:26Z",
    "author_association": "MEMBER",
    "body": "What compiler version are you using?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502290130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502311981",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502311981",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502311981,
    "node_id": "IC_kwDOAm_5kc5Zi3Yt",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T20:56:42Z",
    "updated_at": "2023-04-10T20:56:42Z",
    "author_association": "MEMBER",
    "body": "@CJ42 , sorry. I guess I was too fast in closing it and only checked with version `0.8.19`.\r\nThe problem indeed occurs when using versions `0.8.4` to `0.8.11`.  The custom error signature is not printed, although the function signature is.\r\nFrom `0.8.12` both signatures are printed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502311981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502324672",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1502324672",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1502324672,
    "node_id": "IC_kwDOAm_5kc5Zi6fA",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T21:06:13Z",
    "updated_at": "2023-04-10T21:06:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I had the problem with 0.8.15. Will double check tomorrow",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1502324672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503877661",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1503877661",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1503877661,
    "node_id": "IC_kwDOAm_5kc5Zo1od",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T18:19:52Z",
    "updated_at": "2023-04-11T18:19:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@matheusaaguiar so I can confirm that the same thing happen with either version `0.8.15` or version `0.8.19` of solc.\r\n\r\nHere is my setup.\r\n\r\nI run the command on the following contract: `LSP1UniversalReceiverDelegateUP`.\r\n\r\nhttps://github.com/lukso-network/lsp-smart-contracts/blob/develop/contracts/LSP1UniversalReceiver/LSP1UniversalReceiverDelegateUP/LSP1UniversalReceiverDelegateUP.sol\r\n\r\nThis contract imports several libraries, including one called `LSP10Utils.sol`\r\n\r\n<img width=\"833\" alt=\"Screenshot 2023-04-11 at 18 58 41\" src=\"https://user-images.githubusercontent.com/31145285/231248865-219f7992-5d4e-4f47-9be2-a527ccb15d4c.png\">\r\n\r\nIn this library, several custom `error` are defined at the file level.\r\n\r\nhttps://github.com/lukso-network/lsp-smart-contracts/blob/e478626c478e8749601659d558d6a549462bb8a1/contracts/LSP10ReceivedVaults/LSP10Utils.sol#L15-L41\r\n\r\n<img width=\"845\" alt=\"Screenshot 2023-04-11 at 19 00 15\" src=\"https://user-images.githubusercontent.com/31145285/231249757-8d4571ad-bd07-42da-bf0a-aae10fef1a2d.png\">\r\n\r\nThe command I run (which includes the remappings)\r\n\r\n```\r\nsolc --hashes \\\r\n    @erc725/smart-contracts/=node_modules/@erc725/smart-contracts/ \\\r\n    @openzeppelin/=node_modules/@openzeppelin/ \\\r\n    solidity-bytes-utils/=node_modules/solidity-bytes-utils/ \\\r\n    contracts/LSP1UniversalReceiver/LSP1UniversalReceiverDelegateUP/LSP1UniversalReceiverDelegateUP.sol\r\n```\r\n\r\nThe output at the top that I get does not include any error selector from within `LSP10Utils.sol` (these custom `error` are definitely used within the `LSP10Utils` library contract.\r\n\r\n<img width=\"722\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31145285/231253515-76d7aab6-3155-465d-91f6-9e500e907310.png\">\r\n\r\nHowever, if I move the custom `error` inside the `library`, as shown below, I get the custom `error` selector in the `--hashes` output. See the screenshot below from VS Code.\r\n\r\n<img width=\"942\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31145285/231254054-57d9f713-7c81-4738-ae52-2b4f9a1a5488.png\">\r\n\r\nSo this definitely confirm the fact that the selector for custom `error` defined at file level is not given as an output.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503877661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503889853",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1503889853",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1503889853,
    "node_id": "IC_kwDOAm_5kc5Zo4m9",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T18:31:13Z",
    "updated_at": "2023-04-11T18:31:13Z",
    "author_association": "MEMBER",
    "body": "Do you have a minimal example triggering this issue with solc 0.8.19?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503889853/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503921873",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1503921873",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1503921873,
    "node_id": "IC_kwDOAm_5kc5ZpAbR",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T18:51:04Z",
    "updated_at": "2023-04-11T18:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes I can reproduce the same error with something more minimal.\r\n\r\n## ❌  Example when it does not work\r\n\r\n_file 1: `A.sol` that contains a `library ALib`_\r\n\r\nThe custom error is defined at file level.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nerror MyError();\r\n\r\nlibrary ALib {\r\n    function foo() internal pure {\r\n        revert MyError();\r\n    }\r\n}\r\n```\r\n\r\n_file 2: `B.sol` that contains a `contract B` that import + use `ALib`_\r\n\r\n```\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nimport {ALib} from \"./A.sol\";\r\n\r\ncontract B {\r\n    function bar() internal pure {\r\n        ALib.foo();\r\n    }\r\n}\r\n```\r\n\r\nrunning command on `B.sol`\r\n\r\n```\r\nsolc --hashes ./contracts/B.sol\r\n```\r\n\r\nDoes not output anything:\r\n\r\n```\r\n\r\n======= contracts/A.sol:ALib =======\r\nFunction signatures:\r\n\r\n======= contracts/B.sol:B =======\r\nFunction signatures:\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503921873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503925995",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1503925995",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1503925995,
    "node_id": "IC_kwDOAm_5kc5ZpBbr",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T18:52:44Z",
    "updated_at": "2023-04-11T18:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now with exactly the same except the custom `error` defined within the `ALib` library, the `error` selector` comes in the output.\r\n\r\n## ✅ Example when it works\r\n\r\n_file 1: `A.sol` that contains a `library ALib`_\r\n\r\nThe custom error is defined at file level.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nlibrary ALib {\r\n\r\n    error MyError();\r\n\r\n    function foo() internal pure {\r\n        revert MyError();\r\n    }\r\n}\r\n```\r\n\r\n_file 2: `B.sol` that contains a `contract B` that import + use `ALib`_\r\n\r\n```\r\n// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nimport {ALib} from \"./A.sol\";\r\n\r\ncontract B {\r\n    function bar() internal pure {\r\n        ALib.foo();\r\n    }\r\n}\r\n```\r\n\r\nrunning command on `B.sol`\r\n\r\n```\r\nsolc --hashes ./contracts/B.sol\r\n```\r\n\r\nDoes not output anything:\r\n\r\n```\r\n\r\n======= contracts/A.sol:ALib =======\r\nFunction signatures:\r\n\r\nError signatures:\r\ndd6c951c: MyError()\r\n\r\n======= contracts/B.sol:B =======\r\nFunction signatures:\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503925995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503938075",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1503938075",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1503938075,
    "node_id": "IC_kwDOAm_5kc5ZpEYb",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T18:57:45Z",
    "updated_at": "2023-04-11T18:58:15Z",
    "author_association": "MEMBER",
    "body": "As @matheusaaguiar noted earlier, emitting the event is only actually possible in ``B``, if ``bar()`` is ``public`` and in that case the error signature is outputted correctly.\r\n\r\nIn the case that the error is defined in the library, it is still not emitted as part of ``B``, but of `ALib` itself. For each contract/library all errors are reported that are either defined within the contract/library or can be emitted by it. Since an occurrence in an internal function only cannot actually emit the event, the absence of the error for ``B`` is correct. If ``bar`` is public, the error signature is also correctly outputted in either variant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1503938075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
