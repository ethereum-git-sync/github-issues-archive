{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14083",
  "id": 1647385443,
  "node_id": "I_kwDOAm_5kc5iMRtj",
  "number": 14083,
  "title": "`solc --hashes` does not generate bytes4 `error` selectors for errors defined at file level",
  "user": {
    "login": "CJ42",
    "id": 31145285,
    "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CJ42",
    "html_url": "https://github.com/CJ42",
    "followers_url": "https://api.github.com/users/CJ42/followers",
    "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
    "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
    "organizations_url": "https://api.github.com/users/CJ42/orgs",
    "repos_url": "https://api.github.com/users/CJ42/repos",
    "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CJ42/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-03-30T10:58:37Z",
  "updated_at": "2023-03-31T14:19:38Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--## Prerequisites\r\n\r\n- First, many thanks for taking part in the community. We really appreciate that.\r\n- We realize there is a lot of data requested here. We ask only that you do your best to provide as much information as possible so we can better help you.\r\n- Support questions are better asked in one of the following locations:\r\n    - [Solidity chat](https://gitter.im/ethereum/solidity)\r\n    - [Stack Overflow](https://ethereum.stackexchange.com/)\r\n- Ensure the issue isn't already reported (check `feature` and `language design` labels).\r\n- If you feel uncertain about your feature request, perhaps it's better to open a language design or feedback forum thread via the issue selector, or by going to the forum directly.\r\n    - [Solidity forum](https://forum.soliditylang.org/)\r\n\r\n*Delete the above section and the instructions in the sections below before submitting*\r\n-->\r\n\r\n## Abstract\r\n\r\nI am using the `--hashes` option with the `solc` CLI to obtain the list of custom errors selectors defined across a repo.\r\n\r\nHowever, the `--hashes` option provides an output only when the `error` is:\r\n- defined within a `contract`, `library` or `interface` ✅ \r\n- but not when it is defined at file level ❌ \r\n\r\nHere is an example below on how to reproduce the error.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\n// solc does not generate the error selector for that\r\nerror MyFirstError();\r\n\r\ninterface Example {\r\n    // solc generates the error selector for this\r\n    error MySecondError();\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n![image](https://user-images.githubusercontent.com/31145285/228812725-16f80a91-4897-4dc2-b9ca-fc8e5e16853f.png)\r\n\r\n<!--Please describe by example what problem you see in the current Solidity language and reason about it.-->\r\n\r\nIf I now place both custom errors inside the `interface`, `solc` will output the custom error selector of both errors\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\ninterface Example {\r\n    error MyFirstError();\r\n    error MySecondError();\r\n}\r\n```\r\n\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/31145285/228813260-3debba9a-ca49-4b34-aad3-3a5c68dde6f8.png)\r\n\r\n\r\n## Motivation\r\n\r\n<!--In this section you describe how you propose to address the problem you described earlier, including by giving one or more exemplary source code snippets for demonstration.-->\r\n\r\nI suggest that `solc --hashes` enables parsing custom `error` defined at the file level, so their selector can be easily obtained.\r\nOtherwise, this leads to having to rely on manually scraping + parsing the `solc` file to generate these custom errors.\r\n\r\nThis will make the `solc --hashes` more flexible. Otherwise we need to define custom errors within a `library` or `interface` so that the command line utility generate their error selector (see example of this workaround below)\r\n\r\nThis is not convenient, as it makes the syntax and structure of Solidity project more complex, and therefore does not encourage to define custom errors at file level.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\ninterface Errors {\r\n    error MyFirstError();\r\n    error MySecondError();\r\n}\r\n\r\ncontract Example {\r\n    function doSomething() public pure {\r\n        revert Errors.MyFirstError();\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Specification\r\n\r\n<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow any developer to implement the functionality.-->\r\n\r\nI am suggesting to enable to parse + generate custom errors signatures at file level, and provide the output as shown below.\r\n\r\n- in the header `===...===`: Custom errors defined at file level are just referenced by just the filename --> `FileName.sol`\r\n- in the header `===...===`: Custom errors defined at `contract`, `library` or `interface` level are referenced by filename + contract/interface/library name --> `FileName.sol:ContractName`\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.4;\r\n\r\n// solc does not generate the error selector for that\r\nerror MyFirstError();\r\n\r\ninterface Example {\r\n    // solc generates the error selector for this\r\n    error MySecondError();\r\n}\r\n```\r\n\r\n_Suggested output:_\r\n\r\n```\r\n======= contracts/Example.sol=======\r\nFunction signatures:\r\n\r\nError signatures:\r\nf59b1406: MyFirstError()\r\n\r\n======= contracts/Example.sol:Example =======\r\nFunction signatures:\r\n\r\nError signatures:\r\n4e8f4576: MySecondError()\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14083/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14083/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491987504",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1491987504",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1491987504,
    "node_id": "IC_kwDOAm_5kc5Y7eww",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T14:11:09Z",
    "updated_at": "2023-03-31T14:11:09Z",
    "author_association": "MEMBER",
    "body": "I experimented a little with (hopefully) all possibilities and found that custom `error`s:\r\n * defined at file level, which are unused or used by an unused free function, do not get their selectors in the output of `--hashes` options;\r\n * defined inside `contract`/`library`/`interface`, even if unused, have their selector appear in the output;\r\n * defined at file level and used by a  `contract`/`library`/`interface` function, also have their selector in the output.\r\n\r\nI used `errors` and `contracts` defined both in the same file as well as separate files.\r\nI haven't investigated more, so this is only a guess, but maybe the selectors are ignored or discarded because unused (?) \r\nIn any case, could you provide an example or context where it would be useful to have the selector of an unused custom `error`? (Assuming of course that I am not mistaken or missing a case in my previous analysis)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491987504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491998896",
    "html_url": "https://github.com/ethereum/solidity/issues/14083#issuecomment-1491998896",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14083",
    "id": 1491998896,
    "node_id": "IC_kwDOAm_5kc5Y7hiw",
    "user": {
      "login": "matheusaaguiar",
      "id": 95899911,
      "node_id": "U_kgDOBbdRBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95899911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matheusaaguiar",
      "html_url": "https://github.com/matheusaaguiar",
      "followers_url": "https://api.github.com/users/matheusaaguiar/followers",
      "following_url": "https://api.github.com/users/matheusaaguiar/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusaaguiar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matheusaaguiar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusaaguiar/subscriptions",
      "organizations_url": "https://api.github.com/users/matheusaaguiar/orgs",
      "repos_url": "https://api.github.com/users/matheusaaguiar/repos",
      "events_url": "https://api.github.com/users/matheusaaguiar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matheusaaguiar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T14:19:37Z",
    "updated_at": "2023-03-31T14:19:37Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\n// These don't show in --hashes output\r\nerror UnusedError();\r\nerror AnotherUnusedError();\r\n// These **do** show, although also defined at file level\r\nerror UsedError();\r\nerror AnotherUsedError();\r\n// Never used\r\nfunction unusedFreeFunction() pure {\r\n    revert AnotherUnusedError();\r\n}\r\n// Used by Contract\r\nfunction usedFreeFunction() pure {\r\n    revert UsedError();\r\n}\r\n\r\ninterface I {\r\n    error InterfaceError();\r\n}\r\n\r\nlibrary L {\r\n    error LibraryError();\r\n}\r\n\r\ncontract C {\r\n    error ContractError();\r\n    function f() public pure {\r\n        usedFreeFunction();\r\n    }\r\n    function g() public pure {\r\n        revert AnotherUsedError();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1491998896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
