{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3942/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3942/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3942/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3942",
  "id": 315754705,
  "node_id": "MDU6SXNzdWUzMTU3NTQ3MDU=",
  "number": 3942,
  "title": "Clarify implicit conversions between literals and bytesNN types.",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-04-19T07:17:27Z",
  "updated_at": "2018-08-13T15:25:31Z",
  "closed_at": "2018-08-13T15:25:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Extension of https://github.com/ethereum/solidity/issues/3786\r\n\r\nThe user should always be aware which side of the value is padded with zeros in the conversion. Conversion from hex literals (`0xff`), hex strings (`hex\"ab\"`) and strings (`\"hello\"') should be treated differently than conversion from decimal literals (`256`).",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3942/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3942/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/387781941",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-387781941",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 387781941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzc4MTk0MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T15:38:46Z",
    "updated_at": "2018-08-01T15:35:27Z",
    "author_association": "MEMBER",
    "body": "In PR #4091, I disallow any conversions between literals (resp. ``RationalNumberTypes``) and ``bytesX``, if the sizes don't match. This is a side-effect of restricting conversions between integer and bytes types to require identical sizes.\r\n\r\nThis means that the following are valid:\r\n  ``bytes1(0x1)``,   ``bytes1(0x12)``,  ``bytes2(0x123)``,  ``bytes2(0x1234)``, etc.\r\n\r\nBut these are invalid:\r\n  ``bytes1(0x1234)``,  ``bytes1(0x123)``, ``bytes2(0x12)``, ``bytes2(0x0012)``, etc.\r\n\r\nInstead you have to use:\r\n  ``bytes1(uint8(0x1234))``, ``bytes2(uint16(0x12))``, ``bytes2(uint16(0x0012))``, etc.\r\nresp.\r\n ``bytes2(bytes1(0x12))``,\r\n\r\n\r\nI explicitly allow zero-initialization for all ``bytesX`` types, though, so ``bytesX(0)`` is still valid for all X (padding is not relevant in this case).\r\n\r\nThis could be further restricted to *only* allow conversions from zero and *always* to require to cast literals to sized integer types before conversion to bytes types.\r\n\r\nSo ``bytes1(0x12)`` would have to be replaced with ``bytes1(uint8(0x12))`` as well.\r\n\r\nAny thoughts?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/387781941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388331832",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-388331832",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 388331832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMzMTgzMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T10:57:43Z",
    "updated_at": "2018-05-11T10:57:43Z",
    "author_association": "MEMBER",
    "body": "@ekpyron can we still make `bytes2(0x0012)` valid? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388331832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388342204",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-388342204",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 388342204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM0MjIwNA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T11:53:03Z",
    "updated_at": "2018-08-01T15:35:44Z",
    "author_association": "MEMBER",
    "body": "@chriseth This may be difficult, since I think currently ``0x12`` and ``0x0012`` are not distinguishable in the code, but I can see what I can do.\r\n\r\nUnfortunately, in the meantime I noticed that @meowingtwurtle had already started working on #3786 in PR #3899 without me realizing it, so #4091 is a duplicate of #3899.\r\n\r\nAlso, both #4091 and #3899 combine solving #3786 and this issue and I think it may be cleaner to do them in two separate steps.\r\n\r\nSo currently my plan is to adjust #4091, so that it does not change conversions between literals and bytes* types at all, but only changes conversions between integer types and bytes* type (as originally intended in #3786) and then this issue can be handled in a separate PR.\r\n\r\nDo you agree that this is a good way to move forward?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388342204/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388778302",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-388778302",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 388778302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODc3ODMwMg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T10:59:25Z",
    "updated_at": "2018-05-14T10:59:25Z",
    "author_association": "MEMBER",
    "body": "@chriseth One solution for still allowing ``bytes2(0x0012)`` would be to add a ``Literal const*`` member to ``RationalNumberType``. If the rational is directly parsed from a literal this member would point to that literal, whereas if it is the result of e.g. a binary operation it would be ``nullptr``. This way ``isExplicitlyConvertible`` could analyse the underlying literal in the case of ``bytes2(0x0012)`` and explicitly allow it (whereas ``bytes2(1*0x0012)`` would still be invalid). Not sure whether this is the most elegant solution, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388778302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388926203",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-388926203",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 388926203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODkyNjIwMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T18:59:40Z",
    "updated_at": "2018-05-14T18:59:40Z",
    "author_association": "MEMBER",
    "body": "@ekpyron I'm also not sure about literals. The best way would probably be to require the user to add a suffix to the literal `0x0012b` is `bytes2` and `0x0012` is integer, or use `hex\"0012\"` in the first place.\r\n\r\nPerhaps it would be better to add a warning if a hex literal has leading zeros?\r\n\r\nThe failed address checksum warning suggestion would have to be changed in that case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388926203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388958909",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-388958909",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 388958909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk1ODkwOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T20:52:38Z",
    "updated_at": "2018-05-14T20:52:38Z",
    "author_association": "MEMBER",
    "body": "(hex literal in the previous comment refers to `0x0012`, not to `hex\"0011\"`. The latter should always be of bytes type.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/388958909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409641406",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-409641406",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 409641406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY0MTQwNg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T16:44:56Z",
    "updated_at": "2018-08-01T16:44:56Z",
    "author_association": "MEMBER",
    "body": "Current status:\r\nImplicit conversions from any literal to any bytesNN types is allowed without warning or error, even though padding rules may not be clear (i.e. this Issue still needs to be fixed, only bytesNN to [u]intMM conversions were done in previous PRs, not literals).\r\n\r\nTo be discussed:\r\nWhich implicit conversions are allowed and how to specify the \"intended\" size, resp. type, resp. implicit convertability of a literal:\r\n  - Should ``0x0012`` be implicitly convertible to ``bytes1`` only or to ``bytes2`` only or to both or to neither?\r\n  - Do we want to introduce a suffix, s.t. ``0x0012b`` will be of type ``bytes2`` and ``0x0012`` will be an integer, that is implicitly convertible to ``bytes1`` only or not implicitly convertible to any ``bytesNN`` type?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409641406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409645529",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-409645529",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 409645529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY0NTUyOQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T16:56:23Z",
    "updated_at": "2018-08-01T16:56:23Z",
    "author_association": "MEMBER",
    "body": "Also possible: Hex literals of the form ``0x0012`` are always integers (of the minimal size that the value fits in) and there is no suffix for bytes types, but only literals like ``hex\"0012\"`` are ``bytesNN`` (size determined by string length). So no implicit conversions from ``0x0012`` and similar to ``bytesNN`` at all.\r\n\r\nMost radical would be to entirely decouple literals from integers in general, so the size *always* has to be specified, i.e. ``uint8 a = 1;`` is an error and you have to use ``uint8 a = uint8(1);``. I would actually consider that, but it may go too far.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409645529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409667709",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-409667709",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 409667709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY2NzcwOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T18:05:41Z",
    "updated_at": "2018-08-01T18:05:41Z",
    "author_association": "MEMBER",
    "body": "I think the best approach is that the literal length and the `bytesNN` size must match. This gives an instant visibility of size. Then the user can up/downscale with explicit conversion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409667709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409714018",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-409714018",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 409714018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcxNDAxOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T20:37:36Z",
    "updated_at": "2018-08-01T20:37:36Z",
    "author_association": "MEMBER",
    "body": "So ``bytes1(0x1)``, ``bytes1(0x01)``, ``bytes1(0x12)``, ``bytes2(0x0012)``, ``bytes2(0x123)``, ``bytes2(0x1234)`` are valid and ``bytes1(0x0023)``, ``bytes1(0x123);``, ``bytes2(0x1)``, ``bytes2(0x12345)`` are invalid?\r\nWe can argue about odd numbers of digits.\r\nI'd be fine with that, if all agree.\r\n\r\nWe may consider an exception for ``bytesNN(0x0)``, since padding is irrelevant there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409714018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409724178",
    "html_url": "https://github.com/ethereum/solidity/issues/3942#issuecomment-409724178",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3942",
    "id": 409724178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcyNDE3OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T21:09:38Z",
    "updated_at": "2018-08-01T21:09:38Z",
    "author_association": "MEMBER",
    "body": "> We can argue about odd numbers of digits.\r\n\r\nI think odd numbers of digits is fine as long as it fits into the type of course.\r\n\r\n> We may consider an exception for `bytesNN(0x0)`, since padding is irrelevant there.\r\n\r\nThat could be a good idea.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/409724178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
