{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13017",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13017/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13017/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13017/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13017",
  "id": 1235264530,
  "node_id": "I_kwDOAm_5kc5JoKQS",
  "number": 13017,
  "title": "Confusing error message when using function calls that don't return anything as expressions.",
  "user": {
    "login": "0xalpharush",
    "id": 87383155,
    "node_id": "MDQ6VXNlcjg3MzgzMTU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/87383155?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xalpharush",
    "html_url": "https://github.com/0xalpharush",
    "followers_url": "https://api.github.com/users/0xalpharush/followers",
    "following_url": "https://api.github.com/users/0xalpharush/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xalpharush/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xalpharush/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xalpharush/subscriptions",
    "organizations_url": "https://api.github.com/users/0xalpharush/orgs",
    "repos_url": "https://api.github.com/users/0xalpharush/repos",
    "events_url": "https://api.github.com/users/0xalpharush/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xalpharush/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2376148917,
      "node_id": "MDU6TGFiZWwyMzc2MTQ4OTE3",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20report%20better%20error",
      "name": "should report better error",
      "color": "53e0b5",
      "default": false,
      "description": "Error is just badly reported. Should be a proper type error - source is not fine."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-05-13T13:44:27Z",
  "updated_at": "2022-05-13T14:23:26Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe behavior of dynamic storage arrays with struct type is inconsistent and the compiler output is not helpful. I would expect that `pop1` and `pop3` be semantically equivalent; that is, `.pop()` would return the last array element and delete it. However, the error message for `pop3` suggests that a type of tuple is return by `.pop()`. \r\n\r\nWhen I treat it as a tuple as suggested, the error message says there's a different number of components... Ideally one could cast this tuple to the struct type or receive the struct type and manually reference values, but neither works with `.pop()`. \r\n\r\nSee also that the number of components is different when accessed via index versus using pop (`pop2` vs `pop4`).\r\n\r\n## Environment\r\n\r\n- Compiler version: Version: 0.8.13+commit.abaa5c0e.Darwin.appleclang\r\n- Target EVM version (as per compiler settings): NA\r\n- Framework/IDE (e.g. Truffle or Remix): NA\r\n- EVM execution environment / backend / blockchain client:  NA\r\n- Operating system: MacOS\r\n\r\n## Steps to Reproduce\r\nRun `solc test.sol`\r\n\r\n```solidity\r\npragma solidity =0.8.13;\r\ncontract Test {\r\n  struct MyStruct{\r\n    uint num;\r\n    bytes32 info;\r\n  }\r\n  MyStruct[] myStruct;\r\n  function add(uint a, bytes32 b) external {\r\n    myStruct.push(MyStruct({num: a, info: b}));\r\n  }\r\n  function pop1() external returns(MyStruct[] memory myMemoryStruct) {\r\n   if (myStruct.length != 0) {\r\n     myMemoryStruct = new MyStruct[](1);\r\n     myMemoryStruct[0] = myStruct[myStruct.length - 1];\r\n     delete myStruct[myStruct.length - 1];\r\n   }\r\n  }\r\n  function pop2() external returns(MyStruct[] memory myMemoryStruct) {\r\n   if (myStruct.length != 0) {\r\n     myMemoryStruct = new MyStruct[](1);\r\n     (uint a, bytes32 b) = myStruct[myStruct.length - 1];\r\n   }\r\n  }\r\n\r\n  function pop3() external returns(MyStruct[] memory myMemoryStruct){\r\n   if (myStruct.length != 0) {\r\n     myMemoryStruct = new MyStruct[](1);\r\n     myMemoryStruct[0] = myStruct.pop();\r\n   }\r\n  }\r\n\r\n  function pop4() external returns(MyStruct[] memory myMemoryStruct) {\r\n   if (myStruct.length != 0) {\r\n      myMemoryStruct = new MyStruct[](1);\r\n     (uint a, bytes32 b) = myStruct.pop();\r\n   }\r\n  }\r\n}\r\n\r\n```\r\n```\r\nError: Different number of components on the left hand side (2) than on the right hand side (1).\r\n  --> test.sol:21:6:\r\n   |\r\n21 |      (uint a, bytes32 b) = myStruct[myStruct.length - 1];\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nError: Type struct Test.MyStruct storage ref is not implicitly convertible to expected type uint256.\r\n  --> test.sol:21:6:\r\n   |\r\n21 |      (uint a, bytes32 b) = myStruct[myStruct.length - 1];\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nError: Type tuple() is not implicitly convertible to expected type struct Test.MyStruct memory.\r\n  --> test.sol:28:26:\r\n   |\r\n28 |      myMemoryStruct[0] = myStruct.pop();\r\n   |                          ^^^^^^^^^^^^^^\r\n\r\nError: Different number of components on the left hand side (2) than on the right hand side (0).\r\n  --> test.sol:35:6:\r\n   |\r\n35 |      (uint a, bytes32 b) = myStruct.pop();\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13017/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13017/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126086811",
    "html_url": "https://github.com/ethereum/solidity/issues/13017#issuecomment-1126086811",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13017",
    "id": 1126086811,
    "node_id": "IC_kwDOAm_5kc5DHrib",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T13:58:47Z",
    "updated_at": "2022-05-13T13:58:47Z",
    "author_association": "MEMBER",
    "body": "``.pop`` on storage arrays does not return anything... that is to say an empty tuple, which is nothing... so you're trying to take this nothing (i.e. an empty tuple) and assign it to something :-)... that's how those error messages are to be understood, but yeah, maybe we should consider rephrasing them...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126086811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126095805",
    "html_url": "https://github.com/ethereum/solidity/issues/13017#issuecomment-1126095805",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13017",
    "id": 1126095805,
    "node_id": "IC_kwDOAm_5kc5DHtu9",
    "user": {
      "login": "0xalpharush",
      "id": 87383155,
      "node_id": "MDQ6VXNlcjg3MzgzMTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/87383155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xalpharush",
      "html_url": "https://github.com/0xalpharush",
      "followers_url": "https://api.github.com/users/0xalpharush/followers",
      "following_url": "https://api.github.com/users/0xalpharush/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xalpharush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xalpharush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xalpharush/subscriptions",
      "organizations_url": "https://api.github.com/users/0xalpharush/orgs",
      "repos_url": "https://api.github.com/users/0xalpharush/repos",
      "events_url": "https://api.github.com/users/0xalpharush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xalpharush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T14:07:46Z",
    "updated_at": "2022-05-13T14:07:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it just not implemented or it will never return anything? If the latter, I'd expect a warning like \".pop()` is not a member of dynamic storage array\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126095805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126116726",
    "html_url": "https://github.com/ethereum/solidity/issues/13017#issuecomment-1126116726",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13017",
    "id": 1126116726,
    "node_id": "IC_kwDOAm_5kc5DHy12",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T14:23:26Z",
    "updated_at": "2022-05-13T14:23:26Z",
    "author_association": "MEMBER",
    "body": "``someArray.pop();`` works just fine and is implemented and removes the last element of the array.\r\nIt just does not return the value of the removed element.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1126116726/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
