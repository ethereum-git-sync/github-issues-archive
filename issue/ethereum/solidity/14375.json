{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/14375",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/14375/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/14375/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/14375/events",
  "html_url": "https://github.com/ethereum/solidity/issues/14375",
  "id": 1782448061,
  "node_id": "I_kwDOAm_5kc5qPf-9",
  "number": 14375,
  "title": "SMTChecker: Malformed SMT-LIB2 script generated",
  "user": {
    "login": "blishko",
    "id": 16404346,
    "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
    "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/blishko",
    "html_url": "https://github.com/blishko",
    "followers_url": "https://api.github.com/users/blishko/followers",
    "following_url": "https://api.github.com/users/blishko/following{/other_user}",
    "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
    "organizations_url": "https://api.github.com/users/blishko/orgs",
    "repos_url": "https://api.github.com/users/blishko/repos",
    "events_url": "https://api.github.com/users/blishko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/blishko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4810143649,
      "node_id": "LA_kwDOAm_5kc8AAAABHrT3oQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/smt",
      "name": "smt",
      "color": "1d76db",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "blishko",
    "id": 16404346,
    "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
    "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/blishko",
    "html_url": "https://github.com/blishko",
    "followers_url": "https://api.github.com/users/blishko/followers",
    "following_url": "https://api.github.com/users/blishko/following{/other_user}",
    "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
    "organizations_url": "https://api.github.com/users/blishko/orgs",
    "repos_url": "https://api.github.com/users/blishko/repos",
    "events_url": "https://api.github.com/users/blishko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/blishko/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "blishko",
      "id": 16404346,
      "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blishko",
      "html_url": "https://github.com/blishko",
      "followers_url": "https://api.github.com/users/blishko/followers",
      "following_url": "https://api.github.com/users/blishko/following{/other_user}",
      "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
      "organizations_url": "https://api.github.com/users/blishko/orgs",
      "repos_url": "https://api.github.com/users/blishko/repos",
      "events_url": "https://api.github.com/users/blishko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blishko/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-06-30T12:30:09Z",
  "updated_at": "2023-06-30T14:58:28Z",
  "closed_at": "2023-06-30T14:58:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "On the following file, SMTChecker generates invalid SMT-LIB2 script if run with the options `--model-checker-engine all --model-checker-solvers smtlib2  --model-checker-print-query --model-checker-ext-calls trusted`.\r\n\r\n```\r\ncontract D {\r\n    function zero() public view returns (uint)  {\r\n        return 0;\r\n    }\r\n}\r\n\r\ncontract C {\r\n    uint x;\r\n\tfunction f(D d) public view {\r\n        uint res = d.zero();\r\n        assert(x < 1000);\r\n\t}\r\n\r\n    function inc() public {\r\n        ++x;\r\n    }\r\n}\r\n\r\n```\r\n\r\nThis is the generated SMT-LIB script:\r\n```\r\n(set-option :produce-models true)\r\n(set-logic ALL)\r\n(declare-fun |_3_6| () Int)\r\n(declare-fun |x_11_3| () Int)\r\n(declare-fun |d_14_3| () Int)\r\n(declare-fun |res_18_3| () Int)\r\n(declare-fun |error_0| () Int)\r\n(declare-fun |this_0| () Int)\r\n(declare-datatypes ((|bytes_tuple| 0)) (((|bytes_tuple| (|bytes_tuple_accessor_array| (Array Int Int)) (|bytes_tuple_accessor_length| Int)))))\r\n(declare-datatypes ((|tx_type| 0)) (((|tx_type| (|block.basefee| Int) (|block.chainid| Int) (|block.coinbase| Int) (|block.gaslimit| Int) (|block.number| Int) (|block.prevrandao| Int) (|block.timestamp| Int) (|blockhash| (Array Int Int)) (|msg.data| |bytes_tuple|) (|msg.sender| Int) (|msg.sig| Int) (|msg.value| Int) (|tx.gasprice| Int) (|tx.origin| Int)))))\r\n(declare-fun |tx_0| () |tx_type|)\r\n(declare-datatypes ((|ecrecover_input_type| 0)) (((|ecrecover_input_type| (|hash| Int) (|v| Int) (|r| Int) (|s| Int)))))\r\n(declare-datatypes ((|crypto_type| 0)) (((|crypto_type| (|ecrecover| (Array |ecrecover_input_type| Int)) (|keccak256| (Array |bytes_tuple| Int)) (|ripemd160| (Array |bytes_tuple| Int)) (|sha256| (Array |bytes_tuple| Int))))))\r\n(declare-fun |crypto_0| () |crypto_type|)\r\n(declare-datatypes ((|abi_type| 0)) (((|abi_type|))))\r\n(declare-fun |abi_0| () |abi_type|)\r\n(declare-datatypes ((|storage_C_38_type| 0)) (((|storage_C_38_type| (|x_11_C_38| Int)))))\r\n(declare-datatypes ((|storage_type| 0)) (((|storage_type| (|storage_C_38| (Array Int |storage_C_38_type|))))))\r\n(declare-datatypes ((|state_type| 0)) (((|state_type| (|balances| (Array Int Int)) (|isActive| (Array Int Bool)) (|storage| |storage_type|)))))\r\n(declare-fun |state_0| () |state_type|)\r\n(declare-fun |_3_7| () Int)\r\n(declare-fun |x_11_4| () Int)\r\n(declare-fun |d_14_4| () Int)\r\n(declare-fun |res_18_4| () Int)\r\n(declare-fun |_3_0| () Int)\r\n(declare-fun |x_11_5| () Int)\r\n(declare-fun |expr_5_0| () Int)\r\n(declare-fun |_3_1| () Int)\r\n(declare-fun |_3_2| () Int)\r\n(declare-fun |x_11_6| () Int)\r\n(declare-fun |d_14_5| () Int)\r\n(declare-fun |res_18_5| () Int)\r\n(declare-fun |_3_3| () Int)\r\n(declare-fun |x_11_7| () Int)\r\n(declare-fun |d_14_6| () Int)\r\n(declare-fun |res_18_6| () Int)\r\n(declare-fun |x_11_0| () Int)\r\n(declare-fun |d_14_0| () Int)\r\n(declare-fun |res_18_0| () Int)\r\n(declare-fun |x_11_1| () Int)\r\n(declare-fun |expr_20_0| () Int)\r\n(declare-fun |expr_20_1| () Int)\r\n(declare-fun |expr_20_abstract_1| () Int)\r\n(declare-fun |expr_19_0| () Int)\r\n(declare-fun |x_11_2| () Int)\r\n(declare-fun |fresh_balances_5_0| () (Array Int Int))\r\n(declare-fun |state_1| () |state_type|)\r\n(declare-fun |expr_21_0| () Int)\r\n(declare-fun |res_18_1| () Int)\r\n(declare-fun |expr_24_0| () Int)\r\n(declare-fun |expr_25_0| () Int)\r\n(declare-fun |expr_26_1| () Bool)\r\n\r\n(assert\r\n  (and\r\n    (and\r\n      (and true true)\r\n      (and\r\n        (= expr_26_1 (< expr_24_0 expr_25_0))\r\n        (and\r\n          (=> (and true true) true)\r\n          (and\r\n            (= expr_25_0 1000)\r\n            (and\r\n              (=>\r\n                (and true true)\r\n                (and\r\n                  (>= expr_24_0 0)\r\n                  (<=\r\n                    expr_24_0\r\n                    115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n              (and\r\n                (= expr_24_0 x_11_2)\r\n                (and\r\n                  (ite (and true true) (= res_18_1 expr_21_0) (= res_18_1 res_18_0))\r\n                  (and\r\n                    (= state_1 (|state_type| fresh_balances_5_0))\r\n                    (and\r\n                      (and\r\n                        (>= x_11_2 0)\r\n                        (<=\r\n                          x_11_2\r\n                          115792089237316195423570985008687907853269984665640564039457584007913129639935))\r\n                      (and\r\n                        (=> (and true true) true)\r\n                        (and\r\n                          (= expr_19_0 d_14_0)\r\n                          (and\r\n                            (= expr_20_abstract_1 1612685573)\r\n                            (and\r\n                              (and\r\n                                (>= d_14_0 0)\r\n                                (<= d_14_0 1461501637330902918203684832716283019655932542975))\r\n                              (and\r\n                                (= res_18_0 0)\r\n                                (and\r\n                                  (and\r\n                                    (>= x_11_1 0)\r\n                                    (<=\r\n                                      x_11_1\r\n                                      115792089237316195423570985008687907853269984665640564039457584007913129639935))\r\n                                  (and\r\n                                    (and\r\n                                      (and\r\n                                        (and\r\n                                          (and\r\n                                            (and\r\n                                              (and\r\n                                                (and\r\n                                                  (and\r\n                                                    (and\r\n                                                      (and\r\n                                                        (and\r\n                                                          (and\r\n                                                            (> (|block.prevrandao| tx_0) 18446744073709551616)\r\n                                                            (and\r\n                                                              (>= (|block.basefee| tx_0) 0)\r\n                                                              (<=\r\n                                                                (|block.basefee| tx_0)\r\n                                                                115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                                          (and\r\n                                                            (>= (|block.chainid| tx_0) 0)\r\n                                                            (<=\r\n                                                              (|block.chainid| tx_0)\r\n                                                              115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                                        (and\r\n                                                          (>= (|block.coinbase| tx_0) 0)\r\n                                                          (<= (|block.coinbase| tx_0) 1461501637330902918203684832716283019655932542975)))\r\n                                                      (and\r\n                                                        (>= (|block.prevrandao| tx_0) 0)\r\n                                                        (<=\r\n                                                          (|block.prevrandao| tx_0)\r\n                                                          115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                                    (and\r\n                                                      (>= (|block.gaslimit| tx_0) 0)\r\n                                                      (<=\r\n                                                        (|block.gaslimit| tx_0)\r\n                                                        115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                                  (and\r\n                                                    (>= (|block.number| tx_0) 0)\r\n                                                    (<=\r\n                                                      (|block.number| tx_0)\r\n                                                      115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                                (and\r\n                                                  (>= (|block.timestamp| tx_0) 0)\r\n                                                  (<=\r\n                                                    (|block.timestamp| tx_0)\r\n                                                    115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                              (and\r\n                                                (>= (|msg.sender| tx_0) 0)\r\n                                                (<= (|msg.sender| tx_0) 1461501637330902918203684832716283019655932542975)))\r\n                                            (and\r\n                                              (>= (|msg.value| tx_0) 0)\r\n                                              (<=\r\n                                                (|msg.value| tx_0)\r\n                                                115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                          (and\r\n                                            (>= (|tx.origin| tx_0) 0)\r\n                                            (<= (|tx.origin| tx_0) 1461501637330902918203684832716283019655932542975)))\r\n                                        (and\r\n                                          (>= (|tx.gasprice| tx_0) 0)\r\n                                          (<=\r\n                                            (|tx.gasprice| tx_0)\r\n                                            115792089237316195423570985008687907853269984665640564039457584007913129639935)))\r\n                                      (and\r\n                                        (and\r\n                                          (and\r\n                                            (and\r\n                                              (and\r\n                                                (and (= (|msg.value| tx_0) 0) (= (|msg.sig| tx_0) 4234695194))\r\n                                                (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 0) 252))\r\n                                              (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 1) 104))\r\n                                            (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 2) 82))\r\n                                          (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 3) 26))\r\n                                        (>= (|bytes_tuple_accessor_length| (|msg.data| tx_0)) 4)))\r\n                                    true))))))))))))))))\r\n    (not expr_26_1)))\r\n(declare-const |EVALEXPR_0| Int)\r\n(assert (= |EVALEXPR_0| _3_3))\r\n(declare-const |EVALEXPR_1| Int)\r\n(assert (= |EVALEXPR_1| x_11_2))\r\n(declare-const |EVALEXPR_2| Int)\r\n(assert (= |EVALEXPR_2| d_14_0))\r\n(declare-const |EVALEXPR_3| Int)\r\n(assert (= |EVALEXPR_3| res_18_1))\r\n(check-sat)\r\n```\r\n\r\nThe problem with the script is with the `state_type` data type. It is declared with three members, but then applied to a single field in the body of the query.",
  "closed_by": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/14375/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/14375/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1614587710",
    "html_url": "https://github.com/ethereum/solidity/issues/14375#issuecomment-1614587710",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/14375",
    "id": 1614587710,
    "node_id": "IC_kwDOAm_5kc5gPKc-",
    "user": {
      "login": "blishko",
      "id": 16404346,
      "node_id": "MDQ6VXNlcjE2NDA0MzQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16404346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blishko",
      "html_url": "https://github.com/blishko",
      "followers_url": "https://api.github.com/users/blishko/followers",
      "following_url": "https://api.github.com/users/blishko/following{/other_user}",
      "gists_url": "https://api.github.com/users/blishko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blishko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blishko/subscriptions",
      "organizations_url": "https://api.github.com/users/blishko/orgs",
      "repos_url": "https://api.github.com/users/blishko/repos",
      "events_url": "https://api.github.com/users/blishko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blishko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-30T12:32:50Z",
    "updated_at": "2023-06-30T12:32:50Z",
    "author_association": "MEMBER",
    "body": "The problem seems to be with the symbolic variable for the blockchain state, which has different type in CHC engine and in BMC engine, if `trusted` mode is used to analyze external calls.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1614587710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
