{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10645/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10645/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10645/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10645",
  "id": 769834904,
  "node_id": "MDU6SXNzdWU3Njk4MzQ5MDQ=",
  "number": 10645,
  "title": "Extend DataFlowAnalyzer to not reset memory if memory ops use zero length",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1282209978,
      "node_id": "MDU6TGFiZWwxMjgyMjA5OTc4",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/optimizer",
      "name": "optimizer",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    },
    {
      "id": 4699440809,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvGqQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/closed%20due%20inactivity",
      "name": "closed due inactivity",
      "color": "91535E",
      "default": false,
      "description": "The issue/PR was automatically closed due to inactivity."
    },
    {
      "id": 4699444681,
      "node_id": "LA_kwDOAm_5kc8AAAABGBvVyQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/stale",
      "name": "stale",
      "color": "BF4801",
      "default": false,
      "description": "The issue/PR was marked as stale because it has been open for too long."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-12-17T10:30:38Z",
  "updated_at": "2023-03-23T12:04:22Z",
  "closed_at": "2023-03-23T12:04:22Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The `call` opcode (and others) should not reset memory if it can be determined that the memory output area is zero.\r\n\r\nThe trigger for this is to improve the code generated from the following snippet:\r\n```\r\ncontract MicroProxy {\r\n  address immutable _master;\r\n  constructor(address master_) { _master = master_; }\r\n  fallback(bytes calldata) external returns (bytes memory returndata) {\r\n    (,returndata) = _master.delegatecall(msg.data);\r\n  }\r\n}\r\n```\r\n\r\nGenerated:\r\n\r\n```\r\n        code {\r\n            {\r\n                mstore(64, 128)\r\n                if callvalue() { revert(0, 0) }\r\n                let _1 := 0\r\n                calldatacopy(128, _1, calldatasize())\r\n                mstore(add(128, calldatasize()), _1)\r\n                pop(delegatecall(gas(), loadimmutable(\"2\"), 128, calldatasize(), _1, _1))\r\n                let data := _1\r\n                switch returndatasize()\r\n                case 0 { data := 96 }\r\n                default {\r\n                    let result := and(add(returndatasize(), 63), not(31))\r\n                    let memPtr := mload(64)\r\n                    let newFreePtr := add(memPtr, result)\r\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\r\n                    {\r\n                        mstore(_1, shl(224, 0x4e487b71))\r\n                        mstore(4, 0x41)\r\n                        revert(_1, 0x24)\r\n                    }\r\n                    mstore(64, newFreePtr)\r\n                    data := memPtr\r\n                    mstore(memPtr, returndatasize())\r\n                    returndatacopy(add(memPtr, 0x20), _1, returndatasize())\r\n                }\r\n                return(add(data, 0x20), mload(data))\r\n            }\r\n        }\r\n```\r\n\r\nNote that if the `delegatecall` did not clear memory, the checks about `mpmPtr` can be removed.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10645/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10645/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/747521596",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-747521596",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 747521596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUyMTU5Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T15:46:02Z",
    "updated_at": "2020-12-17T15:46:02Z",
    "author_association": "MEMBER",
    "body": "It might be the best solution to introduce new builtins that do not write to memory and replace them in a new optimizer step. Note that since the memory-modifying instructions do not return data, we cannot use a rule for the ExpressionSimplifier.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/747521596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/747524703",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-747524703",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 747524703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUyNDcwMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T15:50:39Z",
    "updated_at": "2020-12-17T15:50:39Z",
    "author_association": "MEMBER",
    "body": "On the other hand - we also want to detect if such an opcode writes to a memory area that is not overlapping with other known memory areas, so it might be fine to add a special case just like we do for `mstore`. The downside is that it only works when the function containing the call is inlined.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/747524703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/748133863",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-748133863",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 748133863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODEzMzg2Mw==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-18T15:03:44Z",
    "updated_at": "2020-12-21T08:43:40Z",
    "author_association": "MEMBER",
    "body": "It might be possible to solve this using a Linear Program.\r\n\r\nThe important part of the above code is the following:\r\n\r\n```\r\nmstore(64, 128)\r\nlet _1 := 0\r\ncalldatacopy(128, _1, calldatasize())\r\nmstore(add(128, calldatasize()), _1)\r\ndelegatecall(gas(), loadimmutable, 128, calldatasize(), _1, _1)\r\n\r\n// We want to know if memPtr is 128\r\nlet memPtr := mload(64)\r\n```\r\n\r\nWe can encode things this way. Call the memory location that we are interested in by `m`. (Here we have the equation `m := 64`)\r\n\r\nDefine a variable `c := calldatasize()` and constraint `c >= 0`.\r\n\r\nThe memory encodings:\r\n1. `calldatacopy(128, _1, calldatasize())`: `128 <= m < 128 + c` also `128 <= m + 31 < 128 + c`\r\n2. `mstore(add(128, calldatasize()), _1)`: `128 + c <= m < 128 + c + 32` also `128 + c <= m + 31 < 128 + c + 32`\r\n3. `delegatecall(gas(), loadimmutable, 128, calldatasize(), _1, _1)`: `_1 <= m < _1` also `_1 <= m + 31 < _1`.\r\n\r\nTo check if `mload(64)` is invariant, all we need to do is to individually check if the linear equations are feasible. For example, for the first one, these are the equations:\r\n\r\n1. `m := 64`\r\n2. `128 <= m`\r\n3. `m < 128 + c`\r\n4. `c >= 0`\r\n\r\n This problem is infeasible. The other problems are infeasible too. So the value at `64` can be safely loaded.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/748133863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749579549",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-749579549",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 749579549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTU3OTU0OQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T14:53:53Z",
    "updated_at": "2020-12-22T14:54:15Z",
    "author_association": "MEMBER",
    "body": "BTW, `mstore(add(128, calldatasize()), _1)` will reset all the memory at that point (`64 -> 128`). So even if we don't clear memory for `delegatecall(gas(), loadimmutable(\"2\"), 128, calldatasize(), _1, _1)`, we still won't be able to resolve `let memPtr := mload(64)`.\r\n\r\nThe smt based technique can now handle this https://github.com/ethereum/solidity/pull/10681/files#diff-a543663ab8a611118fb129bbe24b2def1b3c4c8f79948d42cd61b0d8122d3015",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/749579549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/978025798",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-978025798",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 978025798,
    "node_id": "IC_kwDOAm_5kc46S31G",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-24T16:16:40Z",
    "updated_at": "2021-11-24T16:16:40Z",
    "author_association": "MEMBER",
    "body": "This could be combined with the `Operations` from #11352 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/978025798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157653465",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-1157653465",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 1157653465,
    "node_id": "IC_kwDOAm_5kc5FAGPZ",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T13:19:22Z",
    "updated_at": "2022-06-16T13:19:22Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/solidity/pull/12762 pretty much showcases how this can be done with the recent more elaborate semantic information we have - so the same mechanism just needs to be transferred to the data flow analyzer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1157653465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206369651",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-1206369651",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 1206369651,
    "node_id": "IC_kwDOAm_5kc5H571z",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T12:03:37Z",
    "updated_at": "2022-08-05T12:04:21Z",
    "author_association": "MEMBER",
    "body": "Staging this as a task ready to be worked on for using the mechanism of https://github.com/ethereum/solidity/pull/12762 to determine when a memory-writing call has a length of zero and, based on that, to not clear memory knowledge in the data flow analyzer.\r\n(i.e. not for anything more fancy like the linear programming suggestion)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1206369651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1469883857",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-1469883857",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 1469883857,
    "node_id": "IC_kwDOAm_5kc5XnKXR",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-15T12:05:10Z",
    "updated_at": "2023-03-15T12:05:10Z",
    "author_association": "NONE",
    "body": "This issue has been marked as stale due to inactivity for the last 90 days.\nIt will be automatically closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1469883857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1481073470",
    "html_url": "https://github.com/ethereum/solidity/issues/10645#issuecomment-1481073470",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10645",
    "id": 1481073470,
    "node_id": "IC_kwDOAm_5kc5YR2M-",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-03-23T12:04:19Z",
    "updated_at": "2023-03-23T12:04:19Z",
    "author_association": "NONE",
    "body": "Hi everyone! This issue has been automatically closed due to inactivity.\nIf you think this issue is still relevant in the latest Solidity version and you have something to [contribute](https://docs.soliditylang.org/en/latest/contributing.html), feel free to reopen.\nHowever, unless the issue is a concrete proposal that can be implemented, we recommend starting a language discussion on the [forum](https://forum.soliditylang.org) instead.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1481073470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
