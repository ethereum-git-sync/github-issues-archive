{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8149",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8149/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8149/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8149/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8149",
  "id": 550315462,
  "node_id": "MDU6SXNzdWU1NTAzMTU0NjI=",
  "number": 8149,
  "title": "Recursive datatypes",
  "user": {
    "login": "dddejan",
    "id": 1482564,
    "node_id": "MDQ6VXNlcjE0ODI1NjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1482564?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dddejan",
    "html_url": "https://github.com/dddejan",
    "followers_url": "https://api.github.com/users/dddejan/followers",
    "following_url": "https://api.github.com/users/dddejan/following{/other_user}",
    "gists_url": "https://api.github.com/users/dddejan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dddejan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dddejan/subscriptions",
    "organizations_url": "https://api.github.com/users/dddejan/orgs",
    "repos_url": "https://api.github.com/users/dddejan/repos",
    "events_url": "https://api.github.com/users/dddejan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dddejan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-01-15T17:05:06Z",
  "updated_at": "2020-01-28T16:55:19Z",
  "closed_at": "2020-01-28T16:55:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Solidity does not support simple datatype recursion. This makes sense as it would be impossible to do because of the \"value\" semantics of contract storage: there is no pointers allowed in storage and no optional types. \r\n\r\nNevertheless, recursive datatypes can be defined through the use of arrays and mappings. This is basically because empty arrays and mappings can be used as a \"null\" value. Example below.\r\n\r\n```solidity\r\ncontract A {\r\n    struct Tree {\r\n        int x;\r\n        Tree[] children;\r\n    }\r\n    Tree t;\r\n}\r\n``` \r\n\r\nIt could be that this is a deliberate design decision or maybe was just allowed because it works. \r\n\r\nI opened this issue is to better understand the rationale for allowing recursion in datatypes (e.g., true real-world use cases) and to argue that maybe it's better do disallow datatype recursion entirely. \r\n\r\nLet me start with some arguments against recursion:\r\n\r\n1. **Clarity of language**. Having a roundabout way in syntax to achieve recursion doesn't feel good.\r\n2. **Ease of reasoning**. Without recursion, storage of the contract has a much nicer structure: seen as an abstract datatype tree, the depth of the contract data is finite. This helps with formal verification (and human understanding) because it is easier to anticipate the locations where a storage pointer can point to.\r\n3. **Semantics**. Combined with deep copy assignments, recursion presents challenges in defining semantics. The following example illustrates this (similar to #736). Although you can compile this and run to see what will happen, it is not clear what the semantics are here?\r\n\r\n```solidity\r\ncontract A {\r\n    struct S {\r\n        S[] e;\r\n    }\r\n    S s;\r\n    function f() public {\r\n        s.e.push(s);\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8149/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8149/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/579348745",
    "html_url": "https://github.com/ethereum/solidity/issues/8149#issuecomment-579348745",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8149",
    "id": 579348745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTM0ODc0NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-28T16:55:18Z",
    "updated_at": "2020-01-28T16:55:18Z",
    "author_association": "MEMBER",
    "body": "The copy semantics are problematic, indeed, but don't you give a very good example for a use-case for the recursive data types as they are currently implemented?\r\n\r\nSince I don't think this will lead very far, I'm closing this issue. Please re-open it if you have a specific proposal. If you want to discuss design decisions, then please join our gitter room: https://gitter.im/ethereum/solidity-dev",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/579348745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
