{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/12343/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/12343/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/12343/events",
  "html_url": "https://github.com/ethereum/solidity/issues/12343",
  "id": 1066384883,
  "node_id": "I_kwDOAm_5kc4_j73z",
  "number": 12343,
  "title": "sushiswap/trident: `StackTooDeepError` in the new Yul->EVM transform",
  "user": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 682993385,
      "node_id": "MDU6TGFiZWw2ODI5OTMzODU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/performance%20:racehorse:",
      "name": "performance :racehorse:",
      "color": "c5def5",
      "default": false,
      "description": ""
    },
    {
      "id": 2376134343,
      "node_id": "MDU6TGFiZWwyMzc2MTM0MzQz",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/should%20compile%20without%20error",
      "name": "should compile without error",
      "color": "c48f13",
      "default": false,
      "description": "Error is reported even though it shouldn't. Source is fine."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-11-29T18:58:46Z",
  "updated_at": "2022-05-20T18:56:02Z",
  "closed_at": "2022-05-20T18:56:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I'm trying to compile [Trident](https://github.com/sushiswap/trident) via IR to use it for benchmarking the optimizer. Unfortunately it runs into \"stack too deep\" errors both with and without the optimizer. The project compiles fine with the legacy codegen (also both with and without the optimizer).\r\n\r\nIf the legacy codegen has no problem with it then I guess it should be possible to improve the Yul->EVM transform to handle it as well. If not,  we should at least have some specific workarounds to recommend since it's a real-life project and has to be compilable one way or another once the IR codegen becomes the default.\r\n\r\nAnother problem is that the old EVM transform runs out of memory trying to compile this project. I'm not sure if the new transform replaced it completely or if it can still be used in some situations. If it can, we should to track down the problem and fix it.\r\n\r\n### Repro\r\n```bash\r\ngit clone https://github.com/sushiswap/trident\r\ncd trident/\r\nyarn install\r\nfind . test -name '*.sol' -type f -print0 | xargs -0 sed -i -E -e 's/pragma solidity [^;]+;/pragma solidity >=0.0;/'\r\n\r\nsolc \\\r\n    --bin \\\r\n    --optimize \\\r\n    --experimental-via-ir \\\r\n    --metadata-literal \\\r\n    --base-path . \\\r\n    --include-path node_modules/ \\\r\n    $(find contracts/ -name '*.sol' -type f | grep -v \"contracts/flat/BentoBoxV1Flat.sol\") \r\n```\r\n\r\nNote: I'm excluding `BentoBoxV1Flat.sol` because it can't be compiled with 0.8.x (https://github.com/sushiswap/trident/pull/282). The problem is reproducible without it too.\r\n\r\n#### New EVM transform (0.8.10)\r\nIf you run the above with sol 0.8.10, the compiler crashes with a `StackTooDeepError`:\r\n```\r\nUncaught exception:\r\n/solidity/libyul/backends/evm/EVMObjectCompiler.cpp(77): Throw in function void solidity::yul::EVMObjectCompiler::run(solidity::yul::Object&, bool)\r\nDynamic exception type: boost::wrapexcept<solidity::yul::StackTooDeepError>\r\nstd::exception::what: Cannot swap Variable var_nearestTick with Variable _4: too deep in the stack by 4 slots in [ RET var_upper var_nearestTick var_lower _1 _2 var_nearestTick var_currentPrice var_ticks var_upper var_amount var_feeGrowthGlobal0 var_nearestTick _1 var_upperOld var_secondsGrowthGlobal var_feeGrowthGlobal1 var_amount var_lower _3 _2 var_lowerOld var_ticks var_secondsGrowthGlobal var_feeGrowthGlobal1 var_feeGrowthGlobal0 _4 ]\r\n[solidity::util::tag_comment*] = Cannot swap Variable var_nearestTick with Variable _4: too deep in the stack by 4 slots in [ RET var_upper var_nearestTick var_lower _1 _2 var_nearestTick var_currentPrice var_ticks var_upper var_amount var_feeGrowthGlobal0 var_nearestTick _1 var_upperOld var_secondsGrowthGlobal var_feeGrowthGlobal1 var_amount var_lower _3 _2 var_lowerOld var_ticks var_secondsGrowthGlobal var_feeGrowthGlobal1 var_feeGrowthGlobal0 _4 ]\r\n```\r\nWithout `--optimize` the error is slightly different but it's still a `StackTooDeepError`:\r\n```\r\nUncaught exception:\r\n/solidity/libyul/backends/evm/EVMObjectCompiler.cpp(95): Throw in function void solidity::yul::EVMObjectCompiler::run(solidity::yul::Object&, bool)\r\nDynamic exception type: boost::wrapexcept<solidity::yul::StackTooDeepError>\r\nstd::exception::what: Variable var_amount_24379 is 9 slot(s) too deep inside the stack.\r\n[solidity::util::tag_comment*] = Variable var_amount_24379 is 9 slot(s) too deep inside the stack.\r\n```\r\n\r\nThe compilation finishes successfully and produces IR if you replace `--bin` with `--ir-optimized` in the command.\r\n\r\n#### Old EVM transform (0.8.9)\r\nRunning the above snippet with solc 0.8.9 on a machine with 32 GB RAM exhausts all available memory.",
  "closed_by": {
    "login": "cameel",
    "id": 137030,
    "node_id": "MDQ6VXNlcjEzNzAzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cameel",
    "html_url": "https://github.com/cameel",
    "followers_url": "https://api.github.com/users/cameel/followers",
    "following_url": "https://api.github.com/users/cameel/following{/other_user}",
    "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
    "organizations_url": "https://api.github.com/users/cameel/orgs",
    "repos_url": "https://api.github.com/users/cameel/repos",
    "events_url": "https://api.github.com/users/cameel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cameel/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/12343/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/12343/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/993531817",
    "html_url": "https://github.com/ethereum/solidity/issues/12343#issuecomment-993531817",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
    "id": 993531817,
    "node_id": "IC_kwDOAm_5kc47OBep",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T13:19:38Z",
    "updated_at": "2021-12-14T13:21:41Z",
    "author_association": "MEMBER",
    "body": "The [new ENS repo](https://github.com/ensdomains/ens-contracts.git) on the `master` branch (currently at [`ed365227`](https://github.com/ensdomains/ens-contracts/commit/ed3652275e71e8811c9ee690a14a6492f461a6d4)) is another project that runs into stack errors no matter whether optimizer is used:\r\n- `viaIR: true, optimizer: {enabled: false}`\r\n    ```\r\n    YulException: Variable var__945 is 1 slot(s) too deep inside the stack.\r\n    ```\r\n- `viaIR: true, optimizer: {enabled: true, details: {yul: false}}`\r\n    ```\r\n    YulException: Variable var__945 is 1 slot(s) too deep inside the stack.\r\n    ```\r\n- `viaIR: true, optimizer: {enabled: true, details: {yul: true}}`\r\n    ```\r\n    YulException: Variable _5 is 1 too deep in the stack [ _5 usr$i usr$h _7 usr$scratch usr$k usr$f _4 usr$len usr$j_2 RET _2 _1 var_data_mpos usr$totallen usr$x _12 ]\r\n    ```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/993531817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009093621",
    "html_url": "https://github.com/ethereum/solidity/issues/12343#issuecomment-1009093621",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
    "id": 1009093621,
    "node_id": "IC_kwDOAm_5kc48JYv1",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T16:42:27Z",
    "updated_at": "2022-01-10T16:42:27Z",
    "author_association": "MEMBER",
    "body": "If I force-enable stack-to-memory (it's disabled due to the inline assembly), then trident works.\r\nActually, none of the trident inline assembly actually touches memory. We could also detect that (i.e. detect lvalue references to solidity memory variables as well as memory-accessing opcodes would cover it I guess).\r\n\r\nENS is tricker - the inline assembly in there actually involves manual keccak and memory accesses. But also none that seem to violate the memory assumptions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1009093621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012678237",
    "html_url": "https://github.com/ethereum/solidity/issues/12343#issuecomment-1012678237",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
    "id": 1012678237,
    "node_id": "IC_kwDOAm_5kc48XD5d",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T01:55:01Z",
    "updated_at": "2022-01-14T19:56:28Z",
    "author_association": "MEMBER",
    "body": "Two more projects that don't compile at all via IR due to stack errors: Uniswap v3 (#12532) and Euler (#12529).\r\n\r\nOn balance, in the other two there's at least one IR preset that works: Bleeps (#12531) and Yield Liquidator v2 (#12530).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1012678237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013103665",
    "html_url": "https://github.com/ethereum/solidity/issues/12343#issuecomment-1013103665",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
    "id": 1013103665,
    "node_id": "IC_kwDOAm_5kc48Yrwx",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T13:10:06Z",
    "updated_at": "2022-01-14T13:10:06Z",
    "author_association": "MEMBER",
    "body": "Note: the euler contracts compile with a tiny change, i.e. with using\r\n```\r\n\tauto generateSlotOnTheFly = [&](StackSlot const& _slot) {\r\n\t\tif (holds_alternative<FunctionCallReturnLabelSlot>(_slot))\r\n\t\t\treturn true;\r\n\t\treturn _aggressiveStackCompression && canBeFreelyGenerated(_slot);\r\n\t};\r\n```\r\nin ``StackLayoutGenerator::propagateStackThroughOperation``.\r\n\r\nActually that change has generally mostly positive effects, but at times (and especially for our the deposit and strings contracts in ``semanticTests/externalContracts``) results in ~2% increased code size... would be good to evaluate that a bit more carefully.\r\n\r\nBut it also means that ``_aggressiveStackCompression`` is not switched on in a critical situation here - it's probably during a jump or a cascading effect, that's also something that should ideally be fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1013103665/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1016772012",
    "html_url": "https://github.com/ethereum/solidity/issues/12343#issuecomment-1016772012",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/12343",
    "id": 1016772012,
    "node_id": "IC_kwDOAm_5kc48mrWs",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-19T18:57:36Z",
    "updated_at": "2022-01-19T18:58:29Z",
    "author_association": "MEMBER",
    "body": "Another one that does not compile via IR: Tracer Perpetual Pools (#12561).\r\n\r\n```Bash\r\n#ir-no-optimize            # Compilation fails with \"YulException: Variable var_amount_527 is 9 slot(s) too deep inside the stack.\"\r\n#ir-optimize-evm-only      # Compilation fails with \"YulException: Variable var_amount_527 is 9 slot(s) too deep inside the stack.\"\r\n#ir-optimize-evm+yul       # Compilation fails with \"YulException: Variable expr_mpos is 1 too deep in the stack\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1016772012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
