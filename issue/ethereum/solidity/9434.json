{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9434",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9434/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9434/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9434/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9434",
  "id": 658476094,
  "node_id": "MDU6SXNzdWU2NTg0NzYwOTQ=",
  "number": 9434,
  "title": "Segfault in SMTEncoder::shortcutRationalNumber",
  "user": {
    "login": "Changochen",
    "id": 18531282,
    "node_id": "MDQ6VXNlcjE4NTMxMjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/18531282?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Changochen",
    "html_url": "https://github.com/Changochen",
    "followers_url": "https://api.github.com/users/Changochen/followers",
    "following_url": "https://api.github.com/users/Changochen/following{/other_user}",
    "gists_url": "https://api.github.com/users/Changochen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Changochen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Changochen/subscriptions",
    "organizations_url": "https://api.github.com/users/Changochen/orgs",
    "repos_url": "https://api.github.com/users/Changochen/repos",
    "events_url": "https://api.github.com/users/Changochen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Changochen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-07-16T19:05:23Z",
  "updated_at": "2020-07-17T10:15:25Z",
  "closed_at": "2020-07-17T10:15:25Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\nConsider the following POC:\r\n```solidity\r\npragma experimental SMTChecker;\r\ncontract a { event b(uint[(1 / 1)]); }\r\n```\r\n\r\nRun with `solc --bin -o poc poc.sol` with an solc built with asan and we got \r\n```\r\nASAN:DEADLYSIGNAL\r\n=================================================================\r\n==236034==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55bdd00f2033 bp 0x7fff5cc4abb0 sp 0x7fff5cc4a700 T0)\r\n==236034==The signal is caused by a READ memory access.\r\n==236034==Hint: address points to the zero page.\r\n    #0 0x55bdd00f2032 in solidity::frontend::SMTEncoder::shortcutRationalNumber(solidity::frontend::Expression const&) (/home/yongheng/solidity/asan/solc/solc+0xcd7032)\r\n    #1 0x55bdd00da000 in solidity::frontend::SMTEncoder::visit(solidity::frontend::BinaryOperation const&) (/home/yongheng/solidity/asan/solc/solc+0xcbf000)\r\n    #2 0x55bdcfc7b2f0 in solidity::frontend::BinaryOperation::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x8602f0)\r\n    #3 0x55bdcfc7ad46 in solidity::frontend::TupleExpression::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x85fd46)\r\n    #4 0x55bdcfc772be in solidity::frontend::ArrayTypeName::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x85c2be)\r\n    #5 0x55bdcfc7584d in solidity::frontend::VariableDeclaration::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x85a84d)\r\n    #6 0x55bdcfc8e92c in void solidity::frontend::ASTNode::listAccept<std::shared_ptr<solidity::frontend::VariableDeclaration> >(std::vector<std::shared_ptr<solidity::frontend::VariableDeclaration>, std::allocator<std::shared_ptr<solidity::frontend::VariableDeclaration> > > const&, solidity::frontend::ASTConstVisitor&) (/home/yongheng/solidity/asan/solc/solc+0x87392c)\r\n    #7 0x55bdcfc74c23 in solidity::frontend::ParameterList::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x859c23)\r\n    #8 0x55bdcfc76536 in solidity::frontend::EventDefinition::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x85b536)\r\n    #9 0x55bdd00cbd46 in solidity::frontend::SMTEncoder::visit(solidity::frontend::ContractDefinition const&) (/home/yongheng/solidity/asan/solc/solc+0xcb0d46)\r\n    #10 0x55bdd0050e62 in solidity::frontend::CHC::visit(solidity::frontend::ContractDefinition const&) (/home/yongheng/solidity/asan/solc/solc+0xc35e62)\r\n    #11 0x55bdcfc73dc6 in solidity::frontend::ContractDefinition::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x858dc6)\r\n    #12 0x55bdcfc8db06 in void solidity::frontend::ASTNode::listAccept<std::shared_ptr<solidity::frontend::ASTNode> >(std::vector<std::shared_ptr<solidity::frontend::ASTNode>, std::allocator<std::shared_ptr<solidity::frontend::ASTNode> > > const&, solidity::frontend::ASTConstVisitor&) (/home/yongheng/solidity/asan/solc/solc+0x872b06)\r\n    #13 0x55bdcfc7366f in solidity::frontend::SourceUnit::accept(solidity::frontend::ASTConstVisitor&) const (/home/yongheng/solidity/asan/solc/solc+0x85866f)\r\n    #14 0x55bdd004fb44 in solidity::frontend::CHC::analyze(solidity::frontend::SourceUnit const&) (/home/yongheng/solidity/asan/solc/solc+0xc34b44)\r\n    #15 0x55bdd00c72d7 in solidity::frontend::ModelChecker::analyze(solidity::frontend::SourceUnit const&) (/home/yongheng/solidity/asan/solc/solc+0xcac2d7)\r\n    #16 0x55bdcf886d86 in solidity::frontend::CompilerStack::analyze() (/home/yongheng/solidity/asan/solc/solc+0x46bd86)\r\n    #17 0x55bdcf887df8 in solidity::frontend::CompilerStack::parseAndAnalyze() (/home/yongheng/solidity/asan/solc/solc+0x46cdf8)\r\n    #18 0x55bdcf888b4c in solidity::frontend::CompilerStack::compile() (/home/yongheng/solidity/asan/solc/solc+0x46db4c)\r\n    #19 0x55bdcf62ec93 in solidity::frontend::CommandLineInterface::processInput() (/home/yongheng/solidity/asan/solc/solc+0x213c93)\r\n    #20 0x55bdcf6d345e in main (/home/yongheng/solidity/asan/solc/solc+0x2b845e)\r\n    #21 0x7f6e8e0dbb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\r\n    #22 0x55bdcf617259 in _start (/home/yongheng/solidity/asan/solc/solc+0x1fc259)\r\n\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/home/yongheng/solidity/asan/solc/solc+0xcd7032) in solidity::frontend::SMTEncoder::shortcutRationalNumber(solidity::frontend::Expression const&)\r\n==236034==ABORTING\r\n```\r\n## Environment\r\n\r\n- Compiler version:Version: 0.6.12-develop.2020.7.16+commit.f9753a51.Linux.g++\r\n- Target EVM version (as per compiler settings):\r\n- Framework/IDE (e.g. Truffle or Remix):\r\n- EVM execution environment / backend / blockchain client:\r\n- Operating system: Ubuntu 16",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9434/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9434/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/659953895",
    "html_url": "https://github.com/ethereum/solidity/issues/9434#issuecomment-659953895",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/9434",
    "id": 659953895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTk1Mzg5NQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-17T08:21:00Z",
    "updated_at": "2020-07-17T08:21:00Z",
    "author_association": "MEMBER",
    "body": "Thanks for reporting!\r\n\r\nThe bug is triggered in the SMTChecker, exactly this line:\r\n`if (_expr.annotation().type->category() == Type::Category::RationalNumber)`\r\n\r\nHowever, gdb shows that\r\n```\r\n(gdb) p _expr.annotation().type\r\n$2 = (solidity::frontend::TypePointer) 0x0\r\n```\r\nSo it looks like the TypeChecker isn't filling the type of the expression properly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/659953895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
