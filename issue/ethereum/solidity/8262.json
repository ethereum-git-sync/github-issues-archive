{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8262/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8262/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8262/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8262",
  "id": 561397734,
  "node_id": "MDU6SXNzdWU1NjEzOTc3MzQ=",
  "number": 8262,
  "title": "Add mechanism for static/const/immutable selector.",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/46",
    "html_url": "https://github.com/ethereum/solidity/milestone/46",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/46/labels",
    "id": 5045662,
    "node_id": "MDk6TWlsZXN0b25lNTA0NTY2Mg==",
    "number": 46,
    "title": "Sprint 1",
    "description": "Capacity multiplier: 42\nStory points: 28\nVelocity: 0.67",
    "creator": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 14,
    "state": "closed",
    "created_at": "2020-01-27T14:58:04Z",
    "updated_at": "2020-03-11T11:39:08Z",
    "due_on": "2020-02-12T08:00:00Z",
    "closed_at": "2020-02-12T10:48:13Z"
  },
  "comments": 5,
  "created_at": "2020-02-07T03:23:24Z",
  "updated_at": "2020-02-17T11:09:16Z",
  "closed_at": "2020-02-14T11:34:41Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Abstract\r\nThere should be a way to reference a function selector from an interface or contract without having to construct it by hand (error prone/complicated) and such that it can be used in constants.\r\n\r\n## Motivation\r\n\r\n## Specification\r\nSimplest implementation (from a usability standpoint) would be to allow someone to reference an interface function definition with `.selector` in order to get a constant for the byte4.  Caveat here is that overloads become problematic.\r\n\r\nAnother option would be to provide a syntax for getting the selector from a string, though this is a bit more error prone I suspect.\r\n```\r\ninterface Banana {\r\n    function transfer(address,uint256) external returns(bool);\r\n}\r\n\r\ncontract Apple {\r\n    // simplest UX\r\n    bytes4 constant bananaTransfer1 = Banana.transfer.selector;\r\n\r\n    // a bit more complicated to write, but deals with overloads\r\n    bytes4 constant bananaTransfer2 = Banana.transfer(address,uint256).selector;\r\n\r\n    // if transfer signature changes on Banana, this will be incorrect with no compiler error\r\n    bytes4 constant bananaTransfer3 = selector(transfer(address,uint256));\r\n}\r\n```\r\n\r\n## Backwards Compatibility\r\nThe last option would introduce a new keyword that may be problematic.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8262/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8262/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583348029",
    "html_url": "https://github.com/ethereum/solidity/issues/8262#issuecomment-583348029",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
    "id": 583348029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM0ODAyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T11:18:19Z",
    "updated_at": "2020-02-07T11:18:19Z",
    "author_association": "MEMBER",
    "body": "I am pretty sure that at least the first solution (not supporting overloads) should already be possible, is just missing an implementation.\r\n\r\n@ekpyron this should work through our new `FunctionType::Kind::Declaration` model, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583348029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583349128",
    "html_url": "https://github.com/ethereum/solidity/issues/8262#issuecomment-583349128",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
    "id": 583349128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM0OTEyOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T11:21:36Z",
    "updated_at": "2020-02-07T11:21:36Z",
    "author_association": "MEMBER",
    "body": "The first one is already implemented, yes - but I haven't marked it for use in compile-time constants, that's missing - I'll quickly look into that!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583349128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583367218",
    "html_url": "https://github.com/ethereum/solidity/issues/8262#issuecomment-583367218",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
    "id": 583367218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM2NzIxOA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T12:20:01Z",
    "updated_at": "2020-02-07T12:20:01Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\ninterface Banana {\r\n    function transfer(address,uint256) external returns(bool);\r\n}\r\ncontract Apple {\r\n    bytes4 bananaTransfer = Banana.transfer.selector;\r\n}\r\n```\r\n```\r\nTypeError: Member \"transfer\" not found or not visible after argument-dependent lookup in type(contract Banana).\r\n    bytes4 bananaTransfer = Banana.transfer.selector;\r\n                            ^-------------^\r\n```\r\nIt doesn't work for me in 0.6.2 even when not constant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583367218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583368642",
    "html_url": "https://github.com/ethereum/solidity/issues/8262#issuecomment-583368642",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
    "id": 583368642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM2ODY0Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T12:24:45Z",
    "updated_at": "2020-02-07T12:24:45Z",
    "author_association": "MEMBER",
    "body": "Hm... curious... are you sure? I have:\r\n```\r\n$ solc --version\r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.6.2+commit.bacdbe57.Linux.g++\r\n$ cat test.sol\r\npragma solidity =0.6.2;\r\ninterface Banana {\r\n    function transfer(address,uint256) external returns(bool);\r\n}\r\ncontract Apple {\r\n    bytes4 bananaTransfer = Banana.transfer.selector;\r\n}\r\n$ solc test.sol --bin\r\n\r\n======= test.sol:Apple =======\r\nBinary:\r\n608060405263a9059cbb60e01b6000806101000a81548163ffffffff021916908360e01c0217905550348015603357600080fd5b50603f8060416000396000f3fe6080604052600080fdfea264697066735822122042d2fa55eea76cf265988d5b84b19c104746380ba35da6cb391a1d3bbd74510064736f6c63430006020033\r\n\r\n======= test.sol:Banana =======\r\nBinary:\r\n```\r\nIt was introduced with 0.6.2 itself actually...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583368642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583374761",
    "html_url": "https://github.com/ethereum/solidity/issues/8262#issuecomment-583374761",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8262",
    "id": 583374761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM3NDc2MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T12:45:09Z",
    "updated_at": "2020-02-07T12:45:09Z",
    "author_association": "MEMBER",
    "body": "Ah, no I am not confident.  I was testing using Remix, but when I just went back to test again I noticed that Remix is ignoring my requests to change compiler version.  Once I worked around that, I was able to verify that you are correct and it is present in 0.6.2.  🎉 \r\n\r\nThat just leaves \"overloads\" and \"works as a compile-time constant\" as part of this feature request.  😄 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/583374761/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
