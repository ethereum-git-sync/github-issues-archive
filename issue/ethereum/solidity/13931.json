{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13931",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13931/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13931/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13931/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13931",
  "id": 1571041582,
  "node_id": "I_kwDOAm_5kc5dpDEu",
  "number": 13931,
  "title": "encodeCall fails to reference public member",
  "user": {
    "login": "drortirosh",
    "id": 40341007,
    "node_id": "MDQ6VXNlcjQwMzQxMDA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drortirosh",
    "html_url": "https://github.com/drortirosh",
    "followers_url": "https://api.github.com/users/drortirosh/followers",
    "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
    "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
    "organizations_url": "https://api.github.com/users/drortirosh/orgs",
    "repos_url": "https://api.github.com/users/drortirosh/repos",
    "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drortirosh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438157609,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjpKQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20impact",
      "name": "low impact",
      "color": "5d71ff",
      "default": false,
      "description": "Changes are not very noticeable or potential benefits are limited."
    },
    {
      "id": 4438481746,
      "node_id": "LA_kwDOAm_5kc8AAAABCI3bUg",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/must%20have%20eventually",
      "name": "must have eventually",
      "color": "ffb04d",
      "default": false,
      "description": "Something we consider essential but not enough to prevent us from releasing Solidity 1.0 without it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-04T17:26:25Z",
  "updated_at": "2023-02-10T18:44:14Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Solidity generates an accessor method for every public member.\r\nHowever, `abi.encodeCall` doesn't recognize this variable.\r\n\r\n\r\n\r\n```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\n// import 'hardhat/console.sol';\r\n\r\npragma solidity ^0.8.12;\r\n\r\ncontract Test {\r\n\r\n    uint public val;\r\n    constructor(uint x) {\r\n        val = x;\r\n    }\r\n    function fun() public view returns(uint) { return val; }\r\n}\r\n\r\ncontract Test1 {\r\n\r\n    function test(Test a) internal view {\r\n        a.val(); //successfully reference the variable as method\r\n        a.fun();      \r\n        abi.encodeCall(Test.fun, ());\r\n\tabi.encodeCall(Test.val, ()); // <== fails to compile\r\n    }\r\n }\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13931/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13931/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1426110405",
    "html_url": "https://github.com/ethereum/solidity/issues/13931#issuecomment-1426110405",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13931",
    "id": 1426110405,
    "node_id": "IC_kwDOAm_5kc5VALfF",
    "user": {
      "login": "Darshantawte",
      "id": 43043538,
      "node_id": "MDQ6VXNlcjQzMDQzNTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43043538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Darshantawte",
      "html_url": "https://github.com/Darshantawte",
      "followers_url": "https://api.github.com/users/Darshantawte/followers",
      "following_url": "https://api.github.com/users/Darshantawte/following{/other_user}",
      "gists_url": "https://api.github.com/users/Darshantawte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Darshantawte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Darshantawte/subscriptions",
      "organizations_url": "https://api.github.com/users/Darshantawte/orgs",
      "repos_url": "https://api.github.com/users/Darshantawte/repos",
      "events_url": "https://api.github.com/users/Darshantawte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Darshantawte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T17:18:45Z",
    "updated_at": "2023-02-10T17:19:52Z",
    "author_association": "NONE",
    "body": "Hello i tried to look and learn about this error an found that , \r\nabi.encodeCall() function is used to encode a call to a specific function and not a state variable.\r\n\r\neg. uint public val; -> declared in the code snippet.\r\nWe can can use the abi.encodePacked() function instead to encode the val variable eg. abi.encodePacked(a.val).\r\n\r\nFeel free to explain me as i am a beginner with opensource contributions and would love to learn more.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1426110405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1426198542",
    "html_url": "https://github.com/ethereum/solidity/issues/13931#issuecomment-1426198542",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13931",
    "id": 1426198542,
    "node_id": "IC_kwDOAm_5kc5VAhAO",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T18:43:32Z",
    "updated_at": "2023-02-10T18:44:14Z",
    "author_association": "MEMBER",
    "body": "> abi.encodeCall() function is used to encode a call to a specific function and not a state variable.\r\n\r\n`a.val` refers to the getter, not the the state variable (which is not accessible externally). @drortirosh has a point. You can assign it to a function pointer (which by the way would be the workaround for anyone running into this):\r\n\r\n```solidity\r\ncontract C {\r\n    uint public stateVariable;\r\n\r\n    function test() public view {\r\n        function () external view returns (uint) f = this.stateVariable;\r\n        f();\r\n    }\r\n}\r\n```\r\n\r\nso you should be able to use it in `abi.encodeCall()` as well. It does have a proper function type. This is just a corner case we did not think about when adding `abi.encodeCall()` so basically a bug.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1426198542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
