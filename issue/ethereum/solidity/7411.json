{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/7411/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/7411/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/7411/events",
  "html_url": "https://github.com/ethereum/solidity/issues/7411",
  "id": 492695509,
  "node_id": "MDU6SXNzdWU0OTI2OTU1MDk=",
  "number": 7411,
  "title": "[yul] optimizer can produce different side-effects because of the order of evaluation of for-loop conditional expression that contains `msize()` or a user-defined function that has a side-effect",
  "user": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2019-09-12T09:37:53Z",
  "updated_at": "2019-09-17T10:58:18Z",
  "closed_at": "2019-09-17T10:58:18Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n```\r\n{\r\n  for {} div(create(0, 1, 0), shl(msize(), 1)) {}\r\n  {\r\n  }\r\n}\r\n```\r\n\r\nNot sure why the yul interpreter is evaluating create twice (trace below)\r\n\r\n```\r\nTrace:\r\n  CREATE(0, 1, 0)\r\n  CREATE(0, 1, 0)\r\n```\r\n\r\nwhile the optimized version of the program.\r\n\r\n```\r\n{\r\n    for { } shr(msize(), create(0, 1, 0)) { }\r\n    { }\r\n}\r\n```\r\n\r\nreports this trace\r\n\r\n```\r\nTrace:\r\n  CREATE(0, 1, 0)\r\n```\r\n\r\ntripping the fuzzer in the process.\r\n\r\nThe rule list responsible for this is the following\r\nhttps://github.com/ethereum/solidity/blob/324cc71b13a2e1ebf1fe34397d085832b89076a4/libevmasm/RuleList.h#L489-L496\r\n## Environment\r\n\r\n- Compiler version: latest develop\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\n$ yulrun --input-file <test.yul>\r\n...\r\n$ solc --strict-assembly --optimize <test.yul>\r\n$ yulrun --input-file <test_optimized.yul>\r\n```",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/7411/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/7411/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530774523",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530774523",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530774523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc3NDUyMw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T10:59:37Z",
    "updated_at": "2019-09-12T11:25:02Z",
    "author_association": "MEMBER",
    "body": "So the problem seems to be order of evaluation here\r\n\r\n- In the unoptimized test, `msize()` is evaluated before `create()` which has the effect of passing the for-loop condition (since `create`  returns a non-zero address value, `0xcccccc+ arg[1]` to be precise and the divisor is `1` because `msize()` equals zero)\r\n- In the optimized test, `msize()` is evaluated after `create()`, making the divisor greater than the address returned by create (divisor becomes 4294967296, and dividend is 0xcccccc+1 = 13421773 in decimal). This falsifies the for loop condition\r\n\r\nBecause in the unoptimized case the for-loop condition is evaluated twice, we get two traces of `CREATE`. OTOH, in the optimized program, we get a single trace of `CREATE` since for-loop is evaluated only once.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530774523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530778524",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530778524",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530778524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc3ODUyNA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T11:13:03Z",
    "updated_at": "2019-09-12T11:13:45Z",
    "author_association": "MEMBER",
    "body": "My guess is this is because the rule list only has \"removes non-constant argument\" instead of \"moves non-constant argument\" and that's ``false`` for ``DIV(X, SHL(Y, 1)) -> SHR(Y, X)``.\r\nThe same will is true for ``MUL(X, SHL(Y, 1)) -> SHL(Y, X)``.\r\nBut those are the only two I found after a quick look through the list.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530778524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530782227",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530782227",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530782227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc4MjIyNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T11:25:35Z",
    "updated_at": "2019-09-12T11:25:35Z",
    "author_association": "MEMBER",
    "body": "We can just set the flag to true and maybe also adjust the explanation of the flag. Please also change the comment in ExpressionSimplifier.cpp that talks about the distinction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530782227/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530788865",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530788865",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530788865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc4ODg2NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T11:47:59Z",
    "updated_at": "2019-09-12T11:47:59Z",
    "author_association": "MEMBER",
    "body": "Analysis for likelihood of appearance:\r\n\r\nThe sub-expressions `X` and `Y` need to be non-movable opcodes (or larger expression trees) with side-effects. If an opcode is part of an expression tree, it needs to return a single value.\r\n\r\n - `keccak256` (only side-effect on `msize`)\r\n - `extcodesize`\r\n - `balance`\r\n - `returndatasize`\r\n - `extcodehash`\r\n - `mload`\r\n - `sload`\r\n - `pc`\r\n - `msize`\r\n - `create`\r\n - `call`\r\n - `callcode`\r\n - `delegatecall`\r\n - `staticcall`\r\n - `create2`\r\n\r\n### New optimizer\r\n\r\nFor the new optimizer, this also includes calls to user-defined functions, so the effect looks rather large at first sight. On the other hand, the expression simplifier is usually applied to the \"split form\", a kind of three-address-code. In this form, arguments to opcodes and function calls are usually variables and thus the order of execution is not changed by exchanging these variables.\r\n\r\nThe only place where this bug could surface is the conditions of for loops (as also exemplified by the example). It could be rather uncommon to put non-movable expressions in for loop conditions. The existing generated code does not do that and user-written code would probably not rely on the order of execution in such expressions.\r\n\r\n### Old optimizer\r\n\r\nHere, the opcode stream is chopped up into blocks at certain opcodes. These opcodes include all opcodes that have side-effects. So this does not apply to the old optimizer at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530788865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530819166",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530819166",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530819166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgxOTE2Ng==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:12:45Z",
    "updated_at": "2019-09-12T13:12:45Z",
    "author_association": "MEMBER",
    "body": "The other rule where this issue applies\r\n\r\nhttps://github.com/ethereum/solidity/blob/324cc71b13a2e1ebf1fe34397d085832b89076a4/libevmasm/RuleList.h#L472-L479\r\n\r\ndoes not cause a problem in the for-loop-condition case because the for-loop condition value does not change across iterations due to the left shift (for division/right shift this is different though as noted before). So for the `mul` case, it makes the yul interpreter \"time out\" on the infinite loop.\r\n\r\nUnoptimized (where `address` is value returned by the `create` call)\r\n```\r\n{\r\n  // condition = address * 1 = true for first iteration\r\n  //                = address * 32 = true for subsequent iterations\r\n  for {} mul(create(0, 1, 0), shl(msize(), 1)) {} {\r\n  }\r\n}\r\n```\r\n\r\noptimized form\r\n\r\n```\r\n{\r\n  // condition = address * 32 = true for all iterations\r\n  for {} shl(msize(), create(0, 1, 0)) {} {\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530819166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530820173",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530820173",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530820173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyMDE3Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:15:26Z",
    "updated_at": "2019-09-12T13:15:26Z",
    "author_association": "MEMBER",
    "body": "Hm, but those expressions can be embedded in more complex expressions, can't they?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530820173/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530821236",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530821236",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530821236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyMTIzNg==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:17:50Z",
    "updated_at": "2019-09-12T13:17:50Z",
    "author_association": "MEMBER",
    "body": "yeah, I would vote for better safe than sorry since we already anticipate the problem",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530821236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530822365",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530822365",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530822365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyMjM2NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:20:35Z",
    "updated_at": "2019-09-12T13:20:35Z",
    "author_association": "MEMBER",
    "body": "Oh and by the way: The title of this issue is too strict - there can be way more severe problems than just msize when you take user-defined functions into account.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530822365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530824285",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530824285",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530824285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyNDI4NQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:25:16Z",
    "updated_at": "2019-09-12T13:25:16Z",
    "author_association": "MEMBER",
    "body": "```\r\nfunction f() -> a { a := add(mload(0), 1) }\r\nfor {} lt(mul(f(), shl(msize(), 1)),1) {} { /* some trace output */ }\r\n```\r\n\r\nWithout optimization ``mul(f(), shl(msize(), 1))`` is zero, hence loop is executed.\r\nWith optimization ``shl(msize(), f())`` is 32, hence loop is not executed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530824285/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530828123",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530828123",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530828123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyODEyMw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:33:26Z",
    "updated_at": "2019-09-12T13:33:26Z",
    "author_association": "MEMBER",
    "body": "@ekpyron Nice! Shouldn't it be something like\r\n\r\n```\r\nfunction f() -> a { a := add(mload(0), 1) }\r\nfor {} sub(mul(f(), shl(msize(), 1)),1) {} { /* some trace output */ }\r\n```\r\n\r\nwithout optimization -> loop not taken\r\nwith optimization -> loop taken",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530828123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530829507",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530829507",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530829507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgyOTUwNw==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:36:03Z",
    "updated_at": "2019-09-12T13:36:03Z",
    "author_association": "MEMBER",
    "body": "Not sure - If I was correct about the values of the expressions being ``0`` or ``32``, then ``lt(exp,1)`` or ``iszero(exp)`` for that matter, would work - but I haven't checked in detail, the point is just: this *can* happen for the other rule as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530829507/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530837156",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530837156",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530837156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgzNzE1Ng==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T13:54:16Z",
    "updated_at": "2019-09-12T13:54:16Z",
    "author_association": "MEMBER",
    "body": "> We can just set the flag to true and maybe also adjust the explanation of the flag. Please also change the comment in ExpressionSimplifier.cpp that talks about the distinction.\r\n\r\nIf we set the optimization rule \"movable\" flag for the order altering DIV/MUL rules to true (as a fix), there is a different issue that I don't understand\r\n\r\nThis program\r\n\r\n```\r\n{\r\n  let x_0\r\n  x_0 := 0\r\n  for {let i_0} lt(i_0,6) {i_0 := add(i_0, 2)} {\r\n    x_0 := x_0\r\n  }\r\n}\r\n```\r\n\r\nfails this assertion\r\n\r\nhttps://github.com/ethereum/solidity/blob/b747c26788c60d9d4487329f47b96d20df68dfb4/libyul/optimiser/BlockHasher.cpp#L116",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530837156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530840662",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530840662",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530840662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDg0MDY2Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T14:02:06Z",
    "updated_at": "2019-09-12T14:02:06Z",
    "author_association": "MEMBER",
    "body": "@bshastry That seems quite unrelated... could you output the yul code at the point when the assertion fails?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530840662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530864977",
    "html_url": "https://github.com/ethereum/solidity/issues/7411#issuecomment-530864977",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/7411",
    "id": 530864977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDg2NDk3Nw==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T14:56:35Z",
    "updated_at": "2019-09-12T14:56:35Z",
    "author_association": "MEMBER",
    "body": "@ekpyron You're right. This is an unrelated issue. Created #7416",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/530864977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
