{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13944",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13944/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13944/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13944/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13944",
  "id": 1574861238,
  "node_id": "I_kwDOAm_5kc5d3nm2",
  "number": 13944,
  "title": "[SMTChecker]: document currently unsupported features",
  "user": {
    "login": "PaulRBerg",
    "id": 8782666,
    "node_id": "MDQ6VXNlcjg3ODI2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PaulRBerg",
    "html_url": "https://github.com/PaulRBerg",
    "followers_url": "https://api.github.com/users/PaulRBerg/followers",
    "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
    "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
    "repos_url": "https://api.github.com/users/PaulRBerg/repos",
    "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 275027668,
      "node_id": "MDU6TGFiZWwyNzUwMjc2Njg=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/documentation%20:book:",
      "name": "documentation :book:",
      "color": "006b75",
      "default": false,
      "description": ""
    },
    {
      "id": 4438006499,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaa4w",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/low%20effort",
      "name": "low effort",
      "color": "ffb1fa",
      "default": false,
      "description": "There is not much implementation work to be done. The task is very easy or tiny."
    },
    {
      "id": 4438155599,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjhTw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20impact",
      "name": "medium impact",
      "color": "314aff",
      "default": false,
      "description": "Default level of impact"
    },
    {
      "id": 4810143649,
      "node_id": "LA_kwDOAm_5kc8AAAABHrT3oQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/smt",
      "name": "smt",
      "color": "1d76db",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-07T18:52:12Z",
  "updated_at": "2023-02-12T23:39:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Page\r\n\r\n[SMTChecker](https://docs.soliditylang.org/en/v0.8.18/smtchecker.html).\r\n\r\n## Issue Description\r\n\r\nI've recently started using the SMTChecker on a code base that uses many of the modern Solidity features, and I was disappointed to see that many features are not yet supported. To share just a few examples:\r\n\r\n```text\r\nwarning[7650]: Warning: Assertion checker does not yet support this expression.\r\n   --> src/SablierV2LockupLinear.sol:370:17:\r\n    |\r\n370 |             if (recipient.code.length > 0) {\r\n    |                 ^^^^^^^^^^^^^^\r\n```\r\n\r\nThe above is the [`.code` member of the `address` type](https://docs.soliditylang.org/en/v0.8.18/units-and-global-variables.html#members-of-address-types).\r\n\r\nThen:\r\n\r\n```text\r\nwarning[8364]: Warning: Assertion checker does not yet implement type type(struct LockupLinear.Stream storage pointer)\r\n   --> src/SablierV2LockupLinear.sol:419:30:\r\n    |\r\n419 |         _streams[streamId] = LockupLinear.Stream({\r\n    |                              ^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nHere, I am not sure what is not supported: structs defined in libraries, assignments to mappings, or the `Struct({ key: val })` style of initialing structs?\r\n\r\n```text\r\nwarning[7650]: Warning: Assertion checker does not yet support this expression.\r\n   --> src/SablierV2LockupLinear.sol:419:30:\r\n    |\r\n419 |         _streams[streamId] = LockupLinear.Stream({\r\n    |                          \r\n```\r\n\r\nDitto.\r\n\r\n## Documentation Request\r\n\r\nGiven the above, it would be helpful to add a new section in the SMTChecker documentation page that would outline the list of currently unsupported features of the compiler.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13944/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13944/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1421465980",
    "html_url": "https://github.com/ethereum/solidity/issues/13944#issuecomment-1421465980",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13944",
    "id": 1421465980,
    "node_id": "IC_kwDOAm_5kc5Uudl8",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-07T21:19:11Z",
    "updated_at": "2023-02-07T21:19:11Z",
    "author_association": "MEMBER",
    "body": "Yea, that makes sense.\nTo clarify the specific examples you gave:\n\n1. `recipient.code` isn't supported precisely because it's a runtime value, but it does get its own symbolic variable. I'm not sure what kind of properties you'd be able to write about it though.\n\n2. The struct warning looks like it's referring to the type itself which at a quick glance looks like a false positive in warning that. Structs themselves and their constructors are supported (except for recursive structs), but storage references are tricky and many things related to references are unsupported.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1421465980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422247387",
    "html_url": "https://github.com/ethereum/solidity/issues/13944#issuecomment-1422247387",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13944",
    "id": 1422247387,
    "node_id": "IC_kwDOAm_5kc5UxcXb",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T08:55:17Z",
    "updated_at": "2023-02-08T08:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the clarifications, Leo.\r\n\r\n> I'm not sure what kind of properties you'd be able to write about it though\r\n\r\nI was not interested in writing any assertions about it - it's moreso a question of user experience, i.e. I was lead to believe that the property verifications are impaired by this warning, so maybe the compiler could add a clarificatory note add at the end of a report with many warnings like this? e.g. something like \"in spite of the many warnings above, the verification succeeded\" (in the successful case).\r\n\r\n> The struct warning looks like it's referring to the type itself which at a quick glance looks like a false positive in warning that\r\n\r\nInteresting! This is how the struct is defined:\r\n\r\n```solidity\r\nlibrary LockupLinear {\r\n    struct Stream {\r\n        Lockup.Amounts amounts;\r\n        Range range;\r\n        address sender\r\n        bool isCancelable;\r\n        Lockup.Status status;\r\n        IERC20 asset;\r\n    }\r\n}\r\n\r\nIs this a bug in the SMTChecker then?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422247387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422367106",
    "html_url": "https://github.com/ethereum/solidity/issues/13944#issuecomment-1422367106",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13944",
    "id": 1422367106,
    "node_id": "IC_kwDOAm_5kc5Ux5mC",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T10:23:59Z",
    "updated_at": "2023-02-08T10:23:59Z",
    "author_association": "MEMBER",
    "body": "> I was not interested in writing any assertions about it - it's moreso a question of user experience, i.e. I was lead to believe that the property verifications are impaired by this warning\r\n\r\nThat may be the case, but yea the warning is rather general.\r\n\r\n> , so maybe the compiler could add a clarificatory note add at the end of a report with many warnings like this? e.g. something like \"in spite of the many warnings above, the verification succeeded\" (in the successful case).\r\n\r\nThat's great feedback, thanks! We do have an issue that's going to be worked on soon (https://github.com/ethereum/solidity/issues/11703) to first of all group all the \"unsupported\" messages into a single one, similarly to how it's currently done for unproven targets, with a flag to expand on it if the user is interested. The final information that the verification was successful is also a good idea.\r\n\r\n> Is this a bug in the SMTChecker then?\r\n\r\nYea it does look like a bug, the struct itself should be supported so the message looks wrong to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1422367106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1423099877",
    "html_url": "https://github.com/ethereum/solidity/issues/13944#issuecomment-1423099877",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13944",
    "id": 1423099877,
    "node_id": "IC_kwDOAm_5kc5U0sfl",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T19:02:46Z",
    "updated_at": "2023-02-08T19:02:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> group all the \"unsupported\" messages into a single one\r\n\r\nThis would be great!\r\n\r\n> with a flag to expand on it if the user is interested\r\n\r\nAnd this, too.\r\n\r\n> it does look like a bug, the struct itself should be supported so the message looks wrong to me.\r\n\r\nGood, thanks for confirming. I will try to reproduce it and I will open an issue if I succeed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1423099877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
