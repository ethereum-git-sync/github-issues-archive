{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/3221/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/3221/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/3221/events",
  "html_url": "https://github.com/ethereum/solidity/issues/3221",
  "id": 275860244,
  "node_id": "MDU6SXNzdWUyNzU4NjAyNDQ=",
  "number": 3221,
  "title": "Introduce selfdestruct as a new stateMutability level",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-11-21T21:08:38Z",
  "updated_at": "2022-08-17T13:49:14Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Propose to introduce `destructible` either above or mutually exclusive with`payable`.\r\n\r\nReasoning: it is an even more elevated state mutability case, than payable, which could warrant its on level.\r\n\r\nBenefits: mutability checker will be able to reject `selfdestruct` used in a method where it may not be desired. Also, libraries could have the callable check restricted to functions marked this way.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/3221/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/3221/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346179249",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-346179249",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 346179249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjE3OTI0OQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-21T22:16:54Z",
    "updated_at": "2017-11-21T22:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Doesn't it make more sense to define that at the contract-level, maybe through a fake base contract? Then, the contracts cannot be destructed no matter which method is called/delegatecalled.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346179249/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346358545",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-346358545",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 346358545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM1ODU0NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T14:02:55Z",
    "updated_at": "2017-11-22T14:02:55Z",
    "author_association": "MEMBER",
    "body": "I'm not at all fond of \"fake base contracts\". Perhaps pragmas?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346358545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346412202",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-346412202",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 346412202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQxMjIwMg==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T16:59:51Z",
    "updated_at": "2017-11-22T16:59:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, and the name didn't help either! I am not fond of pragmas because they apply to the whole source file. They seem like the wrong device to use here.\r\n\r\nWhat about a constructor-only specifier? Makes sense to declare its lifecycle at the point of creation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346412202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346413206",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-346413206",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 346413206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQxMzIwNg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T17:03:05Z",
    "updated_at": "2017-11-22T17:03:05Z",
    "author_association": "MEMBER",
    "body": "Yeah, constructor specifier makes sense.\r\n\r\nAlso I don't think these are two mutually exclusive features, the above proposal is defining whether `selfdestruct` can be used within a function, while your proposal defines whether calling such a function is legal in a contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346413206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346439037",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-346439037",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 346439037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQzOTAzNw==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T18:40:27Z",
    "updated_at": "2017-11-22T18:40:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's take the following code example:\r\n\r\n```javascript\r\ncontract Auction {\r\n  // ...\r\n  function endAuction() public {\r\n     // do some stuff and let users define custom behaviour in finalize\r\n     finalize();\r\n  }\r\n}\r\n\r\ncontract MyAuction is Auction {\r\n  function finalize() destructible internal {\r\n    selfdestruct(owner);\r\n  }\r\n}\r\n```\r\nI assume `endAuction` requires the `destructible` specifier too. If that's the case, it becomes hard for generic contract authors to know whether to put destructible specifiers in all functions that are meant for extension or none, which could limit the options of users down the road. Am I missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/346439037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367184964",
    "html_url": "https://github.com/ethereum/solidity/issues/3221#issuecomment-367184964",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/3221",
    "id": 367184964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE4NDk2NA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T01:41:08Z",
    "updated_at": "2018-02-21T01:41:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "There should be consistency between:\r\n\r\n* State mutability in interface specifications (`payable`, default non-payable, `view`, `pure`)\r\n* Ethereum ABI (ABI is maybe not the best word choice)\r\n* EVM opcodes\r\n\r\nCurrently we have parity\r\n\r\n* `payable`, default non-payable -- `CALL`\r\n* `view` -- `STATICCALL`\r\n* `pure` -- `PURECALL`? <-- I need a link for this proposal\r\n\r\nIf we are considering to add a level that competes with these then effectively you are proposing `NODESTRUCTCALL`? I don't think there will be an opcode for that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/367184964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
