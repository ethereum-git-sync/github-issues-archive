{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4530",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4530/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4530/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4530/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4530",
  "id": 342654389,
  "node_id": "MDU6SXNzdWUzNDI2NTQzODk=",
  "number": 4530,
  "title": "Introduce a new state variable tx.id",
  "user": {
    "login": "m-schmoock",
    "id": 4090425,
    "node_id": "MDQ6VXNlcjQwOTA0MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4090425?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m-schmoock",
    "html_url": "https://github.com/m-schmoock",
    "followers_url": "https://api.github.com/users/m-schmoock/followers",
    "following_url": "https://api.github.com/users/m-schmoock/following{/other_user}",
    "gists_url": "https://api.github.com/users/m-schmoock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m-schmoock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m-schmoock/subscriptions",
    "organizations_url": "https://api.github.com/users/m-schmoock/orgs",
    "repos_url": "https://api.github.com/users/m-schmoock/repos",
    "events_url": "https://api.github.com/users/m-schmoock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m-schmoock/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-07-19T09:40:32Z",
  "updated_at": "2018-07-25T10:04:42Z",
  "closed_at": "2018-07-25T10:04:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The transaction ID can be made accessible by a Solidity state variable (i.e. `tx.hash` or `tx.id`. A transaction hash cannot change by the mining process, and will be the same regardless when it is included in a block. \r\n\r\nRationale: I think it can be useful in various scenarios where the transaction ID hash can used in order to generate and keep track of receipts like objects without the need to replay the blocks to lookup the corresponding TX ids. The only way currently is to generate some clumsy `sha3(msg.data, msg.sender, block.number`) and make the actual receipts some ecc signed message of msg.sender but that doesnt offer a good way to lookup the transaction at a later point.\r\n\r\nI found some old discussion about this on stackexchange ( https://ethereum.stackexchange.com/questions/2664/is-it-possible-to-get-the-transaction-hash-from-within-a-solidity-function-call ) but no follow up issue or any pull request.\r\n\r\nWhat do you think?",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4530/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4530/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/406687696",
    "html_url": "https://github.com/ethereum/solidity/issues/4530#issuecomment-406687696",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4530",
    "id": 406687696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjY4NzY5Ng==",
    "user": {
      "login": "lukas-berlin",
      "id": 26850933,
      "node_id": "MDQ6VXNlcjI2ODUwOTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26850933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukas-berlin",
      "html_url": "https://github.com/lukas-berlin",
      "followers_url": "https://api.github.com/users/lukas-berlin/followers",
      "following_url": "https://api.github.com/users/lukas-berlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukas-berlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukas-berlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukas-berlin/subscriptions",
      "organizations_url": "https://api.github.com/users/lukas-berlin/orgs",
      "repos_url": "https://api.github.com/users/lukas-berlin/repos",
      "events_url": "https://api.github.com/users/lukas-berlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukas-berlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T18:25:41Z",
    "updated_at": "2018-07-20T18:25:41Z",
    "author_association": "NONE",
    "body": "This is not possible within the scope of solidity. because you can only use data the EVM is delivering. The tx hash is calculated from the sha3(tx.nonce,tx.gasPrice,tx.gasLimit,tx.origin,tx value,tx.data) The EVM only provides part of this data. You could write an EIP to include new opcodes that provide the tx.hash. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/406687696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/407703309",
    "html_url": "https://github.com/ethereum/solidity/issues/4530#issuecomment-407703309",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4530",
    "id": 407703309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzcwMzMwOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T10:04:42Z",
    "updated_at": "2018-07-25T10:04:42Z",
    "author_association": "MEMBER",
    "body": "As mentioned by @lukas-berlin the `block`, `msg` and `tx` objects map 1-to-1 onto EVM opcodes. Whatever is available in the EVM we expose there, but cannot do anything else.\r\n\r\n[EIP901](https://github.com/ethereum/EIPs/issues/901) suggests the above.\r\n\r\nClosing this issue since we cannot do anything unless relevant EIPs are accepted and implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/407703309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
