{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13858",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13858/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13858/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13858/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13858",
  "id": 1527740564,
  "node_id": "I_kwDOAm_5kc5bD3iU",
  "number": 13858,
  "title": "IR-based compilation increase contract size when an internal function is called many times",
  "user": {
    "login": "fruiz08",
    "id": 89082649,
    "node_id": "MDQ6VXNlcjg5MDgyNjQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/89082649?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fruiz08",
    "html_url": "https://github.com/fruiz08",
    "followers_url": "https://api.github.com/users/fruiz08/followers",
    "following_url": "https://api.github.com/users/fruiz08/following{/other_user}",
    "gists_url": "https://api.github.com/users/fruiz08/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fruiz08/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fruiz08/subscriptions",
    "organizations_url": "https://api.github.com/users/fruiz08/orgs",
    "repos_url": "https://api.github.com/users/fruiz08/repos",
    "events_url": "https://api.github.com/users/fruiz08/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fruiz08/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-10T17:12:32Z",
  "updated_at": "2023-02-13T22:04:57Z",
  "closed_at": "2023-02-13T22:04:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen calling an internal function many times using `viaIR=true`, the contract size increase drastically compared to using `viaIR=false`\r\n\r\nWith viaIR=true\r\n```\r\n ·····················|··············|·················\r\n |  Test              ·      14.445  ·  \r\n ·····················|··············|·················\r\n```\r\n With viaIR=false\r\n```\r\n  ·····················|··············|·················\r\n |  Test              ·       3.788  ·                │\r\n ·····················|··············|·················\r\n```\r\n\r\n## Environment\r\n\r\n- Compiler version: 0.8.17\r\n- Target EVM version (as per compiler settings): default\r\n- Framework/IDE (e.g. Truffle or Remix): hardhat\r\n- Operating system: macOS\r\n\r\n## Steps to Reproduce\r\nHere is an example and a repository to reproduce it\r\n[Repo](https://github.com/fruiz08/viaIR-size-issue)\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Test {\r\n\r\n    ERC20 internal token1;\r\n\r\n    function _function1(address address_) internal {\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n        token1.transfer(address_, 1000 ether);\r\n    }   \r\n\r\n    function function1() public {\r\n        _function1(msg.sender);\r\n    }\r\n\r\n    function function1v2(address address_) public {\r\n        _function1(address_);\r\n    }\r\n\r\n    function function1v10() public {\r\n        _function1(address(10));\r\n    }\r\n    function function1v11() public {\r\n        _function1(address(11));\r\n    }\r\n    function function1v12() public {\r\n        _function1(address(12));\r\n    }\r\n    function function1v13() public {\r\n        _function1(address(13));\r\n    }\r\n    function function1v14() public {\r\n        _function1(address(14));\r\n    }\r\n    function function1v15() public {\r\n        _function1(address(15));\r\n    }\r\n    function function1v16() public {\r\n        _function1(address(16));\r\n    }\r\n    function function1v17() public {\r\n        _function1(address(17));\r\n    }\r\n    function function1v18() public {\r\n        _function1(address(18));\r\n    }\r\n    function function1v19() public {\r\n        _function1(address(19));\r\n    }\r\n}\r\n```\r\n-->\r\n",
  "closed_by": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13858/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13858/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1378767045",
    "html_url": "https://github.com/ethereum/solidity/issues/13858#issuecomment-1378767045",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13858",
    "id": 1378767045,
    "node_id": "IC_kwDOAm_5kc5SLlDF",
    "user": {
      "login": "jmendiola222",
      "id": 5326111,
      "node_id": "MDQ6VXNlcjUzMjYxMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5326111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmendiola222",
      "html_url": "https://github.com/jmendiola222",
      "followers_url": "https://api.github.com/users/jmendiola222/followers",
      "following_url": "https://api.github.com/users/jmendiola222/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmendiola222/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmendiola222/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmendiola222/subscriptions",
      "organizations_url": "https://api.github.com/users/jmendiola222/orgs",
      "repos_url": "https://api.github.com/users/jmendiola222/repos",
      "events_url": "https://api.github.com/users/jmendiola222/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmendiola222/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T13:39:18Z",
    "updated_at": "2023-01-11T13:39:18Z",
    "author_association": "NONE",
    "body": "Interesting, does the content of the internal function changes the outcome? I'm mean, for example if instead of making \"external\" calls to `token1` you just do some math. Does it change if instead of `internal` the function is public or private? :thinking: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1378767045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1378815584",
    "html_url": "https://github.com/ethereum/solidity/issues/13858#issuecomment-1378815584",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13858",
    "id": 1378815584,
    "node_id": "IC_kwDOAm_5kc5SLw5g",
    "user": {
      "login": "fruiz08",
      "id": 89082649,
      "node_id": "MDQ6VXNlcjg5MDgyNjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/89082649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fruiz08",
      "html_url": "https://github.com/fruiz08",
      "followers_url": "https://api.github.com/users/fruiz08/followers",
      "following_url": "https://api.github.com/users/fruiz08/following{/other_user}",
      "gists_url": "https://api.github.com/users/fruiz08/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fruiz08/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fruiz08/subscriptions",
      "organizations_url": "https://api.github.com/users/fruiz08/orgs",
      "repos_url": "https://api.github.com/users/fruiz08/repos",
      "events_url": "https://api.github.com/users/fruiz08/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fruiz08/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T14:13:55Z",
    "updated_at": "2023-01-11T14:14:15Z",
    "author_association": "NONE",
    "body": "> Interesting, does the content of the internal function changes the outcome? I'm mean, for example if instead of making \"external\" calls to `token1` you just do some math. Does it change if instead of `internal` the function is public or private? 🤔\r\n\r\n1. If you do anything else, like maths, instead of external calls the same thing happens\r\n2. If you make _function1() public the size change very little",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1378815584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420656826",
    "html_url": "https://github.com/ethereum/solidity/issues/13858#issuecomment-1420656826",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13858",
    "id": 1420656826,
    "node_id": "IC_kwDOAm_5kc5UrYC6",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-07T11:59:18Z",
    "updated_at": "2023-02-07T11:59:18Z",
    "author_association": "MEMBER",
    "body": "This is probably ultimately a duplicate of https://github.com/ethereum/solidity/issues/13787 - can anyone confirm that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1420656826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1428754261",
    "html_url": "https://github.com/ethereum/solidity/issues/13858#issuecomment-1428754261",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13858",
    "id": 1428754261,
    "node_id": "IC_kwDOAm_5kc5VKQ9V",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T22:04:54Z",
    "updated_at": "2023-02-13T22:04:54Z",
    "author_association": "MEMBER",
    "body": "For the record:\r\nOptimizing with a custom optimizer sequence of\r\n``--yul-optimizations \"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul\"``\r\n(that's the default optimizer sequence without the ``F`` for the function specializer)\r\ndoesn't suffer from the described problem, resulting in significantly lower compilation time and significantly smaller bytecode - confirming that this indeed is a duplicate of #13787.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1428754261/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
