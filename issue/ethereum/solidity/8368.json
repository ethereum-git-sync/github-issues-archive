{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8368/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8368/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8368/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8368",
  "id": 569369900,
  "node_id": "MDU6SXNzdWU1NjkzNjk5MDA=",
  "number": 8368,
  "title": "ICE in CompilerContext::appendInlineAssembly()::(anonymous class)::operator()(const std::__cxx11::string &) [Invalid assembly generated by code generator]",
  "user": {
    "login": "agroce",
    "id": 967816,
    "node_id": "MDQ6VXNlcjk2NzgxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/agroce",
    "html_url": "https://github.com/agroce",
    "followers_url": "https://api.github.com/users/agroce/followers",
    "following_url": "https://api.github.com/users/agroce/following{/other_user}",
    "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
    "organizations_url": "https://api.github.com/users/agroce/orgs",
    "repos_url": "https://api.github.com/users/agroce/repos",
    "events_url": "https://api.github.com/users/agroce/events{/privacy}",
    "received_events_url": "https://api.github.com/users/agroce/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-02-22T18:00:44Z",
  "updated_at": "2020-05-13T15:55:26Z",
  "closed_at": "2020-05-13T15:55:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe attached contract (which does not work well just copied from here, but is shown to give an overview of what it looks like):\r\n\r\n```solidity\r\npragma experimental ABIEncoderV2;contract C{struct S{int56 x;}bytes32 y=sha256(\"             ?                                                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");}\r\n```\r\n\r\nproduces:\r\n\r\n```\r\nInternal compiler error during compilation:\r\n/home/user/solidity/libsolidity/codegen/CompilerContext.cpp(405): Throw in function auto solidity::frontend::CompilerContext::appendInlineAssembly(const std::__cxx11::string &, const vector<std::__cxx11::string> &, const set<std::__cxx11::string> &, bool, const solidity::frontend::OptimiserSettings &)::(anonymous class)::operator()(const std::__cxx11::string &)\r\n[invalidassembly.zip](https://github.com/ethereum/solidity/files/4239727/invalidassembly.zip)\r\n\r\n const\r\nDynamic exception type: boost::exception_detail::clone_impl<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Error parsing/analyzing inline assembly block:\r\nInvalid assembly generated by code generator.\r\n------------------ Input: -----------------\r\n{\r\n\t\t\tfunction abi_decode_t_bytes32_fromMemory(offset, end) -> value {\r\n\t\t\t\tvalue := mload(offset)\r\n\t\t\t\tvalidator_revert_t_bytes32(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\r\n\t\t\t\tif slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tlet offset := 0\r\n\t\t\t\t\tvalue0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction abi_encode_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\r\n\t\t\t\t\tpos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 115)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 0), 0x202020202020202020202001002020ff7f000020202020202020202020202020)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 32), \"                                \")\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 64), \"   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 96), \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\r\n\t\t\t\t\tend := add(pos, 115)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction abi_encode_tuple_packed_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack(pos ) -> end {\r\n\t\t\t\t\r\n\t\t\t\t\tpos := abi_encode_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\r\n\t\t\t\t\r\n\t\t\t\tend := pos\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\r\n\t\t\t\t\tupdated_pos := pos\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction cleanup_t_bytes32(value) -> cleaned {\r\n\t\t\t\tcleaned := value\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction validator_revert_t_bytes32(value) {\r\n\t\t\t\tif iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\r\n\t\t\t}\r\n\t\t}\r\n------------------ Errors: ----------------\r\n--CODEGEN--:24:28: Error: Literal or identifier expected.\r\n\t\t\t\t\t\tmstore(add(pos, 64), \"   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\t                     ^---------------------------------^\r\n-------------------------------------------\r\n\r\n[solidity::util::tag_comment*] = Error parsing/analyzing inline assembly block:\r\nInvalid assembly generated by code generator.\r\n------------------ Input: -----------------\r\n{\r\n\t\t\tfunction abi_decode_t_bytes32_fromMemory(offset, end) -> value {\r\n\t\t\t\tvalue := mload(offset)\r\n\t\t\t\tvalidator_revert_t_bytes32(value)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\r\n\t\t\t\tif slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tlet offset := 0\r\n\t\t\t\t\tvalue0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction abi_encode_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\r\n\t\t\t\t\tpos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 115)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 0), 0x202020202020202020202001002020ff7f000020202020202020202020202020)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 32), \"                                \")\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 64), \"   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tmstore(add(pos, 96), \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\r\n\t\t\t\t\tend := add(pos, 115)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction abi_encode_tuple_packed_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack(pos ) -> end {\r\n\t\t\t\t\r\n\t\t\t\t\tpos := abi_encode_t_stringliteral_c816a9c7bea034f32c215b4d77b16e7e57af3a1d1fcc3653a2145c811f5b2fde_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\r\n\t\t\t\t\r\n\t\t\t\tend := pos\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\tfunction array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\r\n\t\t\t\t\tupdated_pos := pos\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction cleanup_t_bytes32(value) -> cleaned {\r\n\t\t\t\tcleaned := value\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction validator_revert_t_bytes32(value) {\r\n\t\t\t\tif iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\r\n\t\t\t}\r\n\t\t}\r\n------------------ Errors: ----------------\r\n--CODEGEN--:24:28: Error: Literal or identifier expected.\r\n\t\t\t\t\t\tmstore(add(pos, 64), \"   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\r\n\t\t\t\t\t\t                     ^---------------------------------^\r\n-------------------------------------------\r\n\r\n\r\n```\r\n\r\nwhen compiled with solc (optimization not needed)\r\n\r\nOn master, using AFL fuzzing.  Another discovery using https://github.com/agroce/afl-compiler-fuzzer, again with more mutation operators\r\n\r\n## Environment\r\n\r\n- Compiler version:  0.6.3-develop.2020.2.10+commit.e8eb1f2d.Linux.clang\r\n- Target EVM version (as per compiler settings): N/A\r\n- Framework/IDE (e.g. Truffle or Remix): N/A\r\n- EVM execution environment / backend / blockchain client: N/A\r\n- Operating system: Ubuntu 18.04 in docker\r\n\r\n## Steps to Reproduce\r\n\r\nAbove shows pretty clearly, I think.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8368/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8368/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625343593",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-625343593",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 625343593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM0MzU5Mw==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T15:59:36Z",
    "updated_at": "2020-05-07T15:59:36Z",
    "author_association": "MEMBER",
    "body": "I was unable to reproduce this with the given compiler version and contract. Do I need to use any specific flags when compiling?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625343593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625347885",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-625347885",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 625347885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM0Nzg4NQ==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T16:06:55Z",
    "updated_at": "2020-05-07T16:06:55Z",
    "author_association": "NONE",
    "body": "Hmm.  Try adding --optimize, or solfuzzer?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625347885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625349089",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-625349089",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 625349089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM0OTA4OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T16:08:53Z",
    "updated_at": "2020-05-07T16:08:53Z",
    "author_association": "MEMBER",
    "body": "It looks like the backslashes are not properly escaped and I would say this is still the case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625349089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625353492",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-625353492",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 625353492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM1MzQ5Mg==",
    "user": {
      "login": "agroce",
      "id": 967816,
      "node_id": "MDQ6VXNlcjk2NzgxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agroce",
      "html_url": "https://github.com/agroce",
      "followers_url": "https://api.github.com/users/agroce/followers",
      "following_url": "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
      "organizations_url": "https://api.github.com/users/agroce/orgs",
      "repos_url": "https://api.github.com/users/agroce/repos",
      "events_url": "https://api.github.com/users/agroce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agroce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T16:15:48Z",
    "updated_at": "2020-05-07T16:15:48Z",
    "author_association": "NONE",
    "body": "I can reproduce on a more recent solc:\r\n\r\n```\r\n$ ~/solidity/build/solc/solc --version\r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.6.7-develop.2020.4.20+commit.41ef1312.Linux.clang\r\n```\r\n\r\nUse the file https://github.com/agroce/afl-compiler-fuzzer/blob/master/example.sol\r\n\r\n```\r\n$ ~/solidity/build/solc/solc example.sol\r\n```\r\n...\r\n```\r\nInternal compiler error during compilation:\r\n/home/user/solidity/libsolidity/codegen/CompilerContext.cpp(439): Throw in function auto solidity::frontend::CompilerContext::appendInlineAssembly(const std::__cxx11::string &, const vector<std::__cxx11::string> &, const set<std::__cxx11::string> &, bool, const solidity::frontend::OptimiserSettings &)::(anonymous class)::operator()(const std::__cxx11::string &) const\r\nDynamic exception type: boost::exception_detail::clone_impl<solidity::langutil::InternalCompilerError>\r\nstd::exception::what: Error parsing/analyzing inline assembly block:\r\nInvalid assembly generated by code generator.\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625353492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625373007",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-625373007",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 625373007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM3MzAwNw==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T16:52:35Z",
    "updated_at": "2020-05-07T16:52:35Z",
    "author_association": "MEMBER",
    "body": "Using your provided file I can reproduce it as well now. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625373007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/626987821",
    "html_url": "https://github.com/ethereum/solidity/issues/8368#issuecomment-626987821",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8368",
    "id": 626987821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjk4NzgyMQ==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T21:58:44Z",
    "updated_at": "2020-05-11T21:58:44Z",
    "author_association": "MEMBER",
    "body": "Another test case for this issue if that helps\r\n\r\n```\r\npragma experimental ABIEncoderV2;\r\ncontract C{function i()public{abi.encode((\"\\\\\"));}}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/626987821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
