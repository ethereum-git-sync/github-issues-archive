{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/869",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/869/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/869/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/869/events",
  "html_url": "https://github.com/ethereum/solidity/issues/869",
  "id": 170678684,
  "node_id": "MDU6SXNzdWUxNzA2Nzg2ODQ=",
  "number": 869,
  "title": "templates / generics",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4372329032,
      "node_id": "LA_kwDOAm_5kc8AAAABBJxySA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/selected%20for%20development",
      "name": "selected for development",
      "color": "ff8e00",
      "default": false,
      "description": "It's on our short-term development"
    },
    {
      "id": 4437989273,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZXmQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/epic%20effort",
      "name": "epic effort",
      "color": "ff00ef",
      "default": false,
      "description": "Multi-stage task that may require coordination between team members across multiple PRs."
    },
    {
      "id": 4438153180,
      "node_id": "LA_kwDOAm_5kc8AAAABCIjX3A",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20impact",
      "name": "high impact",
      "color": "001dff",
      "default": false,
      "description": "Changes are very prominent and affect users or the project in a major way."
    },
    {
      "id": 4525128519,
      "node_id": "LA_kwDOAm_5kc8AAAABDbf7Rw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/needs%20design",
      "name": "needs design",
      "color": "18F737",
      "default": false,
      "description": "The proposal is too vague to be implemented right away"
    },
    {
      "id": 4866148015,
      "node_id": "LA_kwDOAm_5kc8AAAABIguGrw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/generics",
      "name": "generics",
      "color": "C81703",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 41,
  "created_at": "2016-08-11T15:45:21Z",
  "updated_at": "2022-12-06T12:57:26Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Solidity should support template types / generics for contracts, libraries, functions and structs.\n\nThe syntax should be as follows:\n\n```\nlibrary listImpl[T] {\n  struct List { T[] elements }\n  function append(List storage self, T _e) {\n    self.elements.push(_e);\n  }\n}\n```\n\nIn general, at every point where a new library, contract, function or user-defined type is defined, you can suffix the name with `[T1, T2, ...]`.\n\nInside the library, contract, function or user-defined type, the identifiers `T1, T2, ...` are bound to whatever they will be used with later. This means that type checking will not be done on those at the point where the template is defined.\n\nAt the point where a templated name is used, you have to prefix the name with `[...]`, where inside the square brackets, an arbitrary expression is allowed. This will cause the template itself to be type-checked again, replacing the identifiers `T1, T2, ...` with the respective values.\n\nOn the implementation side, this means that the AST annotations now have to be context-sensitive. Every template variable will be assigned a compiler-global identifier. The `annotation()` function will receive an argument where these identifiers receive actual expressions. This argument will be transferred downwards in the AST during the second type checking phase.\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/869/reactions",
    "total_count": 41,
    "+1": 29,
    "-1": 1,
    "laugh": 0,
    "hooray": 11,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/869/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242220688",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-242220688",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 242220688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIyMDY4OA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T21:54:44Z",
    "updated_at": "2016-08-24T21:54:44Z",
    "author_association": "MEMBER",
    "body": "any chance we can go full javascript on this and do this by using var as the generic type with a typeOf function to weed out unwanted types in the generics function? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242220688/reactions",
      "total_count": 14,
      "+1": 0,
      "-1": 14,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242304163",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-242304163",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 242304163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMwNDE2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T07:33:16Z",
    "updated_at": "2016-08-25T07:33:16Z",
    "author_association": "MEMBER",
    "body": "@VoR0220 I think what you are proposing is to basically do type checking at runtime, which is not a good idea in my opinion.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242304163/reactions",
      "total_count": 8,
      "+1": 6,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242414706",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-242414706",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 242414706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQxNDcwNg==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T14:46:31Z",
    "updated_at": "2016-08-25T14:46:31Z",
    "author_association": "MEMBER",
    "body": "no it's more of a syntactic thing I think... could not `[T]` be substituted by `var` ? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242414706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/298219776",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-298219776",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 298219776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODIxOTc3Ng==",
    "user": {
      "login": "SCBuergel",
      "id": 11379673,
      "node_id": "MDQ6VXNlcjExMzc5Njcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11379673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SCBuergel",
      "html_url": "https://github.com/SCBuergel",
      "followers_url": "https://api.github.com/users/SCBuergel/followers",
      "following_url": "https://api.github.com/users/SCBuergel/following{/other_user}",
      "gists_url": "https://api.github.com/users/SCBuergel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SCBuergel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SCBuergel/subscriptions",
      "organizations_url": "https://api.github.com/users/SCBuergel/orgs",
      "repos_url": "https://api.github.com/users/SCBuergel/repos",
      "events_url": "https://api.github.com/users/SCBuergel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SCBuergel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-30T08:45:25Z",
    "updated_at": "2017-04-30T08:45:25Z",
    "author_association": "NONE",
    "body": "Any progress / timeline on this one? Seems to be a fantastic feature that is been around here for a while.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/298219776/reactions",
      "total_count": 9,
      "+1": 8,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334741076",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-334741076",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 334741076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc0MTA3Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T12:30:07Z",
    "updated_at": "2017-10-06T12:30:07Z",
    "author_association": "MEMBER",
    "body": "A larger example from https://www.pivotaltracker.com/story/show/89907258:\r\n\r\nType-templated contracts, libraries, structs and functions, where type names are given after struct name in [] and concrete types in the same way at the point of instantiation.\r\nExample:\r\n```\r\nstruct Set[T] {\r\n  uint m_lastIndex;\r\n  mapping(T => uint) m_indices;\r\n  mapping(uint => T) m_elements;\r\n  uint constant notFound = 0;\r\n\r\n  function insert(T _element) {\r\n    if (find(_element) != notFound) return;\r\n    uint index  = ++m_lastIndex;\r\n    m_elements[index] = _element;\r\n    m_indices[_element] = index;\r\n  }\r\n  function find(T _element) returns (uint index) {\r\n    return m_indices[_element];\r\n  }\r\n  function remove(T _element) returns (bool removed) {\r\n    uint index = m_indices[_element];\r\n    if (index == notFound) return false;\r\n    delete m_indices[_element];\r\n    delete m_elements[index];\r\n    return true;\r\n  }\r\n  function remove(uint _index) returns (bool removed) {\r\n    if (_index == notFound) return false;\r\n    delete m_indices[m_elements[_index]];\r\n    delete m_elements[_index];\r\n    return true;\r\n  }\r\n}\r\n\r\ncontract C {\r\n  Set[address] m_owners;\r\n}\r\n```\r\n\r\nImplementation details: Obviously, we cannot do type checking on the template struct, but only at the point of instantiation. This means that we need to create a kind of parellel AST node that contains the actual types. This might be the point where we separate the type checking from the AST and move it to its own visitor.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334741076/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334785812",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-334785812",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 334785812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc4NTgxMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-06T15:19:24Z",
    "updated_at": "2017-10-06T15:19:45Z",
    "author_association": "MEMBER",
    "body": "@axic the implementation idea here was to use the `annotation()` function and provide as parameter to it the values for the template parameters. Whenever `annotation(x)` is not yet defined, run type checking over it again.\r\n\r\nHaving said that: I think the fastest way to achieve something like this outside the compiler is to use a simple preprocessor that only does string replacement, i.e. `Set<address>` -> `Set_generic_address` and then `library Set<T> { ... }` is copied to something `library Set_generic_address { ... }` where every `T` in `{....}` is replaced by `address`.\r\n\r\nPerhaps that could be a feature request for truffle?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/334785812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362072205",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-362072205",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 362072205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA3MjIwNQ==",
    "user": {
      "login": "nickbclifford",
      "id": 11001606,
      "node_id": "MDQ6VXNlcjExMDAxNjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11001606?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickbclifford",
      "html_url": "https://github.com/nickbclifford",
      "followers_url": "https://api.github.com/users/nickbclifford/followers",
      "following_url": "https://api.github.com/users/nickbclifford/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickbclifford/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickbclifford/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickbclifford/subscriptions",
      "organizations_url": "https://api.github.com/users/nickbclifford/orgs",
      "repos_url": "https://api.github.com/users/nickbclifford/repos",
      "events_url": "https://api.github.com/users/nickbclifford/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickbclifford/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T21:12:43Z",
    "updated_at": "2018-01-31T21:12:43Z",
    "author_association": "NONE",
    "body": "Would this mean that things like `uint[]` would become `Array<uint>` and `mapping (address => uint)` would become `Mapping<address, uint>` or would generics be for user-defined types only?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/362072205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/468983002",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-468983002",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 468983002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk4MzAwMg==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T03:07:46Z",
    "updated_at": "2019-03-03T03:07:46Z",
    "author_association": "NONE",
    "body": "So which method should we take? outside the compiler or inside? Maybe we can implement two methods at the same time, and then we can find out which one is better?\r\nOK, if I want to achieve this outside the compiler at first, what should I notice and what is the key point to be solved? I think I should learn some thing about the AST(Abstract Syntax Tree) at first, shouldn't I?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/468983002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469139359",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-469139359",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 469139359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTEzOTM1OQ==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T06:55:03Z",
    "updated_at": "2019-03-04T06:55:03Z",
    "author_association": "NONE",
    "body": "@chriseth @axic @elopio OK, this issue really has existed for a long time, so now I will push it forward, please do me a favor, listing more details. BTW, my issue is related to this one, but I think it is much easier. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469139359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469208613",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-469208613",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 469208613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTIwODYxMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T10:51:20Z",
    "updated_at": "2019-03-04T10:51:20Z",
    "author_association": "MEMBER",
    "body": "The reason why this has been open for quite some time is because it is a really delicate matter whose pros and cons have to weighed carefully.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469208613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469221643",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-469221643",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 469221643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTIyMTY0Mw==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T11:37:20Z",
    "updated_at": "2019-03-04T11:37:20Z",
    "author_association": "NONE",
    "body": "Absolutely, we really should  weighed carefully for all changes, but you know, there are not only many things to solve at now, but also more and more issues come out, besides that, we should go forward on schedule, in a word, all things are extremely urgent. I hope to contribute my humble efforts to you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469221643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469224280",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-469224280",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 469224280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTIyNDI4MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T11:47:27Z",
    "updated_at": "2019-03-04T11:47:27Z",
    "author_association": "MEMBER",
    "body": "We of course appreciate your help! I think all the details we have worked out so far are here. Do you have specific questions? One of the problems we might run into is function overloading, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/469224280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471073295",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-471073295",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 471073295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTA3MzI5NQ==",
    "user": {
      "login": "mwaeckerlin",
      "id": 4056726,
      "node_id": "MDQ6VXNlcjQwNTY3MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4056726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaeckerlin",
      "html_url": "https://github.com/mwaeckerlin",
      "followers_url": "https://api.github.com/users/mwaeckerlin/followers",
      "following_url": "https://api.github.com/users/mwaeckerlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaeckerlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaeckerlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaeckerlin/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaeckerlin/orgs",
      "repos_url": "https://api.github.com/users/mwaeckerlin/repos",
      "events_url": "https://api.github.com/users/mwaeckerlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaeckerlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T20:55:27Z",
    "updated_at": "2019-03-08T20:55:27Z",
    "author_association": "NONE",
    "body": "> @VoR0220 I think what you are proposing is to basically do type checking at runtime, which is not a good idea in my opinion.\r\n\r\nNope. In C++, template types are strictly checked at compile time. Templates do not require runtime type checking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471073295/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/474193310",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-474193310",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 474193310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDE5MzMxMA==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T04:24:29Z",
    "updated_at": "2019-03-19T04:24:29Z",
    "author_association": "NONE",
    "body": "I have got to say, it is hard for me rather than a little complex as I expected to achieve overloading, so it is more suitable for experienced people. I will move to help at other issues, but I will also keep my eye on this question. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/474193310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/550320329",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-550320329",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 550320329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDMyMDMyOQ==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T13:57:47Z",
    "updated_at": "2019-11-06T13:57:47Z",
    "author_association": "NONE",
    "body": "I've been working a bit on a solution for pre-compile template generation. It's very far from perfect, but here is a link to the repo in case anyone sees a point to it and want to use / improve it\r\nhttps://github.com/Amxx/SolStruct",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/550320329/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/555563440",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-555563440",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 555563440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTU2MzQ0MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-19T15:37:15Z",
    "updated_at": "2019-11-19T15:37:15Z",
    "author_association": "MEMBER",
    "body": "Nice!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/555563440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/624541988",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-624541988",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 624541988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDU0MTk4OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T09:32:44Z",
    "updated_at": "2020-05-06T09:32:44Z",
    "author_association": "MEMBER",
    "body": "Since public functions of libraries are not really used, we do not have the problem of linking to the correct templatized library. We could allow templates only for libraries that do not have public functions.\r\n\r\nAnother step would be to only allow templatized functions. This would remove the possibility to define templatized structs - which might also be a good simplification.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/624541988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/624670197",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-624670197",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 624670197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDY3MDE5Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T14:05:40Z",
    "updated_at": "2020-05-06T14:05:40Z",
    "author_association": "CONTRIBUTOR",
    "body": ">remove the possibility to define templatized structs\r\n\r\nI don't think this would be useful. Templates are mostly used to build generic data structures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/624670197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625359623",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-625359623",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 625359623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM1OTYyMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T16:27:04Z",
    "updated_at": "2020-05-07T16:27:04Z",
    "author_association": "MEMBER",
    "body": "@frangio this is probably true. So I think restricting to libraries with only internal functions is a good first step.\r\n\r\nWhich template libraries come to mind that are really useful and efficient enough?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/625359623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628510436",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-628510436",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 628510436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODUxMDQzNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T09:20:31Z",
    "updated_at": "2020-05-14T09:20:31Z",
    "author_association": "MEMBER",
    "body": "Some implementation notes for the version of templatizing full libraries (including their structs):\r\n\r\nWe parse templatized libraries, but skip them at first for reference resolution. After reference resolution, we add a loop:\r\n\r\nloop:\r\n - search for all references to templatized libraries and store the types for the template parameters in a map\r\n - break if no new template parameter values are discovered\r\n - re-run reference resolution on the libraries for all values for the templatized parameters\r\n\r\nFor the rest of the compilation process, whenever a templatized library is encountered, we run all checks for all values of the parameters. AST annotations are stored relative to the values for the template parameters (by the AST id of the template parameter).\r\n\r\nSome type constructors (that reference declarations inside templatized libraries, for example) will need the template parameter values.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628510436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628520988",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-628520988",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 628520988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODUyMDk4OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T09:40:24Z",
    "updated_at": "2020-05-14T09:40:24Z",
    "author_association": "MEMBER",
    "body": "What about this:\r\n- For each templatized library we store a map from type to AST nodes containing versions of the library specialized for that type.\r\n- Whenever we encounter a reference to a templatized library, we either resolve to the specialized AST node in the map or create a specialization and store it in the map.\r\n\r\nThe rest of the compilation process can continue without modification, as if there were no templatized libraries at all.\r\n\r\nIn any case, we need to take care about self-referential templates, e.g.\r\n``library L[T] { struct S { T x; } function f() internal {  L[L[T].S].f(); } }``",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628520988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628539892",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-628539892",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 628539892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODUzOTg5Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T10:19:51Z",
    "updated_at": "2020-05-14T10:19:51Z",
    "author_association": "MEMBER",
    "body": "If we go for specialized copies of AST subtrees, we should probably still annotate such AST nodes with the \"source template\" and specialization type and support that in error messages (e.g. ``TypeError: blahblah in specialization of L for type int.``)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/628539892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/635846297",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-635846297",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 635846297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTg0NjI5Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T08:31:17Z",
    "updated_at": "2020-05-29T08:31:17Z",
    "author_association": "MEMBER",
    "body": "Similar idea, but without libraries: https://github.com/ethereum/solidity/issues/9063",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/635846297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661881831",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-661881831",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 661881831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTg4MTgzMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-21T14:04:48Z",
    "updated_at": "2020-07-21T14:04:48Z",
    "author_association": "MEMBER",
    "body": "If we want to use the `<`-syntax for templates, we could borrow an idea from rust (I hope I understood it correctly):\r\nAt expression context, you move from the identifier to specifying its template arguments by using `.` (in rust it is `::`):\r\n\r\n```\r\nfunction add<T>(T _a, T_b) pure returns (T _c) {\r\n  return _a + _b;\r\n}\r\n\r\nfunction useTemplate() pure {\r\n  add.<uint>(x, y);\r\n}\r\n```\r\n\r\nFor us, we also have to use this when we specify types at statement level - so maybe we could require the `.` everywhere except in the declaration of the template itself:\r\n\r\n```\r\nstruct IterableMap<Key, Value> {\r\n  mapping(Key => value) data;\r\n  Key[] keys;\r\n}\r\nfunction f(IterableMap.<uint, bytes> storage _map) {\r\n...\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/661881831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662429689",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-662429689",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 662429689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQyOTY4OQ==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T12:40:34Z",
    "updated_at": "2020-07-22T12:40:34Z",
    "author_association": "MEMBER",
    "body": "Sounds good, although visually I think I prefer `::<>`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662429689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662432588",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-662432588",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 662432588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQzMjU4OA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T12:47:17Z",
    "updated_at": "2020-07-22T12:47:17Z",
    "author_association": "MEMBER",
    "body": "Example from D:\r\n```\r\nvoid templateFunction(TemplateType)(TemplateType _parameter)\r\n{\r\n..\r\n}\r\n\r\ncalling:\r\ntemplateFunction!uint(34);\r\n\r\nvoid templateFunction2(TemplateType, TemplateType2)(TemplateType _parameter, TemplateType2 _parameter)\r\n{\r\n..\r\n}\r\n\r\ncalling:\r\ntemplateFunction!(uint, size_t)(34, 24);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662432588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662432999",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-662432999",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 662432999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQzMjk5OQ==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T12:48:10Z",
    "updated_at": "2020-07-22T12:48:24Z",
    "author_association": "MEMBER",
    "body": "Also an even further shorthand for defining a function:\r\n\r\n```\r\nvoid templ(auto param) {..}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/662432999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668767160",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-668767160",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 668767160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc2NzE2MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T18:54:42Z",
    "updated_at": "2020-08-04T18:54:42Z",
    "author_association": "MEMBER",
    "body": "Here is another example of how templates might be used: https://gist.github.com/chriseth/d8bf126817fa236c0406c130433a0a7e\r\n\r\nI think we have to force people to specify the data location, so data location cannot be part of the template. In the worst case, two/three templates have to be written. If something turns out to be a value type, it does not matter if a data location is specified.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/668767160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/676517663",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-676517663",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 676517663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjUxNzY2Mw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T16:06:04Z",
    "updated_at": "2020-08-19T16:06:04Z",
    "author_association": "MEMBER",
    "body": "Suggested by @cameel : there should be a way to write templates for data locations.\r\n\r\nOne way to do this would be to have a keyword that means \"any data location\". For function parameters, it would mean \"generate one function for each combination of data locations that are used\". For local variables, it would mean \"infer the data location from the context\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/676517663/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679190778",
    "html_url": "https://github.com/ethereum/solidity/issues/869#issuecomment-679190778",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/869",
    "id": 679190778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE5MDc3OA==",
    "user": {
      "login": "franzihei",
      "id": 41991517,
      "node_id": "MDQ6VXNlcjQxOTkxNTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41991517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franzihei",
      "html_url": "https://github.com/franzihei",
      "followers_url": "https://api.github.com/users/franzihei/followers",
      "following_url": "https://api.github.com/users/franzihei/following{/other_user}",
      "gists_url": "https://api.github.com/users/franzihei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franzihei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franzihei/subscriptions",
      "organizations_url": "https://api.github.com/users/franzihei/orgs",
      "repos_url": "https://api.github.com/users/franzihei/repos",
      "events_url": "https://api.github.com/users/franzihei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franzihei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T15:18:09Z",
    "updated_at": "2020-08-24T15:18:28Z",
    "author_association": "MEMBER",
    "body": "**Heads-up for all people involved in this issue so far**: \r\n\r\nWe are conducting a language design call to ideate around the topic of templates / generics for Solidity on **Wednesday, 2nd of September at 5PM CEST.** You can find all relevant information and a link to the meeting invite [here](https://groups.google.com/g/solidity-users/c/OSeyrReiE6M).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/679190778/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
