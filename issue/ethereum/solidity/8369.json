{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/8369/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/8369/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/8369/events",
  "html_url": "https://github.com/ethereum/solidity/issues/8369",
  "id": 569370575,
  "node_id": "MDU6SXNzdWU1NjkzNzA1NzU=",
  "number": 8369,
  "title": "Stack too deep in ABIEncoderV2 (ICE in yul::CodeGenerator::assemble(Block &, AsmAnalysisInfo &, evmasm::Assembly &,EVMVersion, ExternalIdentifierAccess &, bool, bool) [Stack too deep when compiling inline assembly: Variable dataEnd is 1 slot(s) too deep inside the stack])",
  "user": {
    "login": "agroce",
    "id": 967816,
    "node_id": "MDQ6VXNlcjk2NzgxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/967816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/agroce",
    "html_url": "https://github.com/agroce",
    "followers_url": "https://api.github.com/users/agroce/followers",
    "following_url": "https://api.github.com/users/agroce/following{/other_user}",
    "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agroce/subscriptions",
    "organizations_url": "https://api.github.com/users/agroce/orgs",
    "repos_url": "https://api.github.com/users/agroce/repos",
    "events_url": "https://api.github.com/users/agroce/events{/privacy}",
    "received_events_url": "https://api.github.com/users/agroce/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 249074435,
      "node_id": "MDU6TGFiZWwyNDkwNzQ0MzU=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/bug%20:bug:",
      "name": "bug :bug:",
      "color": "fc1313",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-02-22T18:06:04Z",
  "updated_at": "2020-07-01T10:24:37Z",
  "closed_at": "2020-07-01T10:24:36Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThis contract:\r\n```solidity\r\npragma experimental ABIEncoderV2;\r\ncontract C{\r\n    struct S{int56 x;}\r\n    function f(int56,S calldata,bytes2,bytes2,bytes2,int56,int56,bytes2,bytes2,bytes2,int56,int56,int56)external{}\r\n}\r\n```\r\n\r\nproduces:\r\n\r\n```\r\nException during compilation: /home/user/solidity/libyul/backends/evm/AsmCodeGen.cpp(215): Throw in function static void solidity::yul::CodeGenerator::assemble(const solidity::yul::Block &, solidity::yul::AsmAnalysisInfo &, evmasm::Assembly &, langutil::EVMVersion, const solidity::yul::ExternalIdentifierAccess &, bool, bool)\r\nDynamic exception type: boost::exception_detail::clone_impl<solidity::yul::YulAssertion>\r\nstd::exception::what: Stack too deep when compiling inline assembly: Variable dataEnd is 1 slot(s) too deep inside the stack.\r\n[solidity::util::tag_comment*] = Stack too deep when compiling inline assembly: Variable dataEnd is 1 slot(s) too deep inside the stack.\r\n```\r\n\r\nwhen compiled with solc\r\n\r\nOn master, using AFL fuzzing.  Another discovery using https://github.com/agroce/afl-compiler-fuzzer, now with a few more mutation operators\r\n\r\n## Environment\r\n\r\n- Compiler version:  0.6.3-develop.2020.2.10+commit.e8eb1f2d.Linux.clang\r\n- Target EVM version (as per compiler settings): N/A\r\n- Framework/IDE (e.g. Truffle or Remix): N/A\r\n- EVM execution environment / backend / blockchain client: N/A\r\n- Operating system: Ubuntu 18.04 in docker\r\n\r\n## Steps to Reproduce\r\n\r\nAbove shows pretty clearly, I think.\r\n",
  "closed_by": {
    "login": "bshastry",
    "id": 2388185,
    "node_id": "MDQ6VXNlcjIzODgxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bshastry",
    "html_url": "https://github.com/bshastry",
    "followers_url": "https://api.github.com/users/bshastry/followers",
    "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
    "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
    "organizations_url": "https://api.github.com/users/bshastry/orgs",
    "repos_url": "https://api.github.com/users/bshastry/repos",
    "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bshastry/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/8369/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/8369/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/635943801",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-635943801",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 635943801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTk0MzgwMQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T12:24:14Z",
    "updated_at": "2020-06-02T08:17:13Z",
    "author_association": "MEMBER",
    "body": "It seems that yul function for ABI decoding has additional variables which causes a stack too deep issue.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/635943801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637531589",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-637531589",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 637531589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzUzMTU4OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T13:09:52Z",
    "updated_at": "2020-06-02T13:09:52Z",
    "author_association": "MEMBER",
    "body": "Stack too deep errors can always happen if there are many function parameters and it can only be detected at code generation phase. @hrkrshnn do you think we should rather create a new exception type that does not translate into an ICE?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637531589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637534476",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-637534476",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 637534476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzUzNDQ3Ng==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T13:14:46Z",
    "updated_at": "2020-06-02T13:14:46Z",
    "author_association": "MEMBER",
    "body": "@chriseth @hrkrshnn I had filed an issue some time back wishing stack-too-deep errors could be specialized (https://github.com/ethereum/solidity/issues/6772) so that the fuzzer can ignore them. If you think that is still a good idea, I can propose a PR for it. However, I do not think that will help here because solc would still fail but with the newly introduced exception type instead of an ICE.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637534476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637535127",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-637535127",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 637535127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzUzNTEyNw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T13:15:54Z",
    "updated_at": "2020-06-02T13:15:54Z",
    "author_association": "MEMBER",
    "body": "It is fine to fail, but it should not be considered as bad as an assertion failure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637535127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637540062",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-637540062",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 637540062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzU0MDA2Mg==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T13:24:25Z",
    "updated_at": "2020-06-02T13:24:25Z",
    "author_association": "MEMBER",
    "body": "@chriseth @bshastry I was wondering if it's possible to have a compiler error like the following:\r\n\r\n```\r\nCompiler error: Stack too deep, try removing local variables.\r\n --> /tmp/stack.sol:2:5:\r\n  |\r\n2 |     function f(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)external{}\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n```\r\n\r\nGetting the original location is a non-trivial task, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637540062/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637604465",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-637604465",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 637604465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYwNDQ2NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T15:08:40Z",
    "updated_at": "2020-06-02T15:08:40Z",
    "author_association": "MEMBER",
    "body": "We have an open issue for at least improving it for regular solidity variables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/637604465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652334518",
    "html_url": "https://github.com/ethereum/solidity/issues/8369#issuecomment-652334518",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/8369",
    "id": 652334518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjMzNDUxOA==",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T10:24:36Z",
    "updated_at": "2020-07-01T10:24:36Z",
    "author_association": "MEMBER",
    "body": "This issue is \"fixed\" by #9281 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/652334518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
