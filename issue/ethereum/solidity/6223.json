{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/6223/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/6223/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/6223/events",
  "html_url": "https://github.com/ethereum/solidity/issues/6223",
  "id": 418438415,
  "node_id": "MDU6SXNzdWU0MTg0Mzg0MTU=",
  "number": 6223,
  "title": "Merge ``Type::canBeUsedExternally`` and ``Type::interfaceType``.",
  "user": {
    "login": "ekpyron",
    "id": 1347491,
    "node_id": "MDQ6VXNlcjEzNDc0OTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ekpyron",
    "html_url": "https://github.com/ekpyron",
    "followers_url": "https://api.github.com/users/ekpyron/followers",
    "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
    "organizations_url": "https://api.github.com/users/ekpyron/orgs",
    "repos_url": "https://api.github.com/users/ekpyron/repos",
    "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ekpyron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Marenz",
    "id": 424752,
    "node_id": "MDQ6VXNlcjQyNDc1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marenz",
    "html_url": "https://github.com/Marenz",
    "followers_url": "https://api.github.com/users/Marenz/followers",
    "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
    "organizations_url": "https://api.github.com/users/Marenz/orgs",
    "repos_url": "https://api.github.com/users/Marenz/repos",
    "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marenz/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2019-03-07T17:52:49Z",
  "updated_at": "2019-03-14T17:12:08Z",
  "closed_at": "2019-03-14T17:12:08Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Noticed this while reviewing #6222.\r\n\r\nWe require ``canBeUsedExternally(x) == !!interfaceType(x)``, but allow the former to be optimized, i.e. avoid the actual construction of type pointers, which might involve allocations. That's unnecessary maintenance effort and an unnecessary risk of getting it wrong.\r\n\r\nI'm not sure this optimization is really necessary, but even if one wants to keep it, it'd still be possible to have only one function, so we should refactor this.\r\n\r\nE.g. we could have one virtual function in ``Type``:\r\n``virtual bool Type::canBeUsedExternally(bool _inLibrary, TypePointer *_type = nullptr) const;``\r\n\r\nIn the case of ``ArrayType`` this could e.g. contain:\r\n\r\n```\r\nif (m_arrayKind != ArrayKind::Ordinary) {\r\n  if (_type) {\r\n     *_type = this->copyForLocation(DataLocation::Memory, true);\r\n     solAssert(*_type, \"\");\r\n  }\r\n  return true;\r\n}\r\n```\r\nThis could be further simplified with a helper and/or some template magic.\r\n\r\nWe could then just implement in Type (non-virtual):\r\n```\r\nTypePointer Type::interfaceType(bool _inLibrary) const {\r\n  TypePointer ret;\r\n  bool success = canBeUsedExternally(_inLibrary, &ret);\r\n  solAssert(success == !!ret, \"\"); // could be skipped\r\n  return ret;\r\n}\r\n```\r\n\r\nAnother, maybe better option might be adding a helper type:\r\n```\r\nclass FlagOptimizedTypePointer {\r\npublic:\r\n  template<typename T>\r\n  FlagOptimizedTypePointer(T&& _typeGetter): m_typeGetter(std::forward<T>(_typeGetter)) {}\r\n  FlagOptimizedTypePointer() = default;\r\n  operator TypePointer() const { return m_typeGetter(); } // might want to cache this in a m_type member and/or directly return {} in case !m_value, etc.\r\n  operator bool() const { return m_value; }\r\nprivate:\r\n  bool m_value = false;\r\n  std::function<TypePointer()> m_typeGetter = [] -> TypePointer { solAssert(false, \"\"); };\r\n};\r\n```\r\n\r\nand we could just return ``return [&]{ return this->copyForLocation(DataLocation::Memory, true); }`` (and ``return {};`` for false) in the case above.\r\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/6223/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/6223/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470630328",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-470630328",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 470630328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDYzMDMyOA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T17:59:24Z",
    "updated_at": "2019-03-07T17:59:24Z",
    "author_association": "MEMBER",
    "body": "We could simply measure how much benefit there really is in optimizing before trying all those alternative ways. As in, running a few timing tests",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470630328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470643071",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-470643071",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 470643071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY0MzA3MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T18:36:21Z",
    "updated_at": "2019-03-07T18:36:21Z",
    "author_association": "MEMBER",
    "body": "Yeah - although dynamic memory allocations might have a greater impact on asm.js, so if we want to benchmark, we should take soljson.js into account. Shouldn't be too hard to avoid them efficiently in any case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470643071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470649209",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-470649209",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 470649209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY0OTIwOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T18:53:58Z",
    "updated_at": "2019-03-07T18:53:58Z",
    "author_association": "MEMBER",
    "body": "After the recent change, we need to descend into the type in every case, so there is not much benefit keeping both functions, actually.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470649209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470673518",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-470673518",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 470673518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY3MzUxOA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T20:03:56Z",
    "updated_at": "2019-03-07T20:03:56Z",
    "author_association": "MEMBER",
    "body": "Right - in ``StructType`` and ``ArrayType``, ``return this->copyForLocation(DataLocation::Memory, true);`` is more expensive than ``return true;``, but that's the only benefit. If it's worth it, one could mitigate that e.g. with the lambda trick above or sth. like that - might be in vain though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470673518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470941982",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-470941982",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 470941982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDk0MTk4Mg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T14:13:59Z",
    "updated_at": "2019-03-08T14:13:59Z",
    "author_association": "MEMBER",
    "body": "Maybe we should even cache the interface type in the type or the annotations (and create it on first request only) - I guess if ``canBeUsedExternally`` is used for some check and returns true, most of the time we will need the interface type sooner or later as well anyways - and if we cache it, ``copyForLocation`` would always be run only once. That might be the easiest and cleanest solution.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/470941982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471658813",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471658813",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471658813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY1ODgxMw==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T18:14:40Z",
    "updated_at": "2019-03-11T18:14:40Z",
    "author_association": "MEMBER",
    "body": "Could there be a problem that the cache becomes invalid during the compilation steps?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471658813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471666958",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471666958",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471666958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY2Njk1OA==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T18:35:50Z",
    "updated_at": "2019-03-11T18:35:50Z",
    "author_association": "MEMBER",
    "body": "Not that I'm aware of - both ``interfaceType`` and ``copyForLocation`` should always return the same types given the same arguments I think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471666958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471672630",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471672630",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471672630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY3MjYzMA==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T18:50:07Z",
    "updated_at": "2019-03-11T18:50:07Z",
    "author_association": "MEMBER",
    "body": "But the typechecker sometimes sets types right? Couldn't that change the result?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471672630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471679422",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471679422",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471679422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY3OTQyMg==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T19:08:23Z",
    "updated_at": "2019-03-11T19:10:47Z",
    "author_association": "MEMBER",
    "body": "Not sure what you mean - I meant to cache the result of ``interfaceType`` in the type itself, maybe that was unclear?\r\nSo something like\r\n```\r\nclass Type {\r\npublic:\r\nTypePointer interfaceType(bool _inLibrary) const {\r\n    if (!m_cachedInterfaceTypes[_inLibrary ? 1 : 0])\r\n      m_cachedInterfaceTypes[_inLibrary ? 1 : 0] = interfaceTypeImpl(_inLibrary);\r\n    return *m_cachedInterfaceTypes[_inLibrary ? 1 : 0];\r\n}\r\nprotected:\r\nvirtual TypePointer interfaceTypeImpl(bool /* _inLibrary */) { return {}; /* to be overridden and actually compute the interface type */ }\r\nprivate:\r\n  mutable boost::optional<TypePointer> m_cachedInterfaceTypes[2]{{},{}};\r\n};\r\n```\r\nMaybe not in ``Type``, but only in ``ReferenceType`` and maybe it's not worth the effort/complexity/additional memory needed for the cache, but it should be fine.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471679422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471924862",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471924862",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471924862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTkyNDg2Mg==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T09:36:30Z",
    "updated_at": "2019-03-12T09:36:30Z",
    "author_association": "MEMBER",
    "body": "No, I understood that. What I meant where things like this: https://github.com/ethereum/solidity/blob/develop/libsolidity/analysis/TypeChecker.cpp#L1159\r\nI feared they might change the result. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471924862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471942339",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471942339",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471942339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTk0MjMzOQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T10:24:47Z",
    "updated_at": "2019-03-12T10:24:47Z",
    "author_association": "MEMBER",
    "body": "The TypeChecker assigns Types to ASTNodes - but every Type itself is immutable - nothing will change about it once it is created.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471942339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471942815",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471942815",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471942815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTk0MjgxNQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T10:26:10Z",
    "updated_at": "2019-03-12T10:26:10Z",
    "author_association": "MEMBER",
    "body": "Note that ``_assignment`` in the line you reference is not a type, but an ASTNode that is annotated with a type.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471942815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471943785",
    "html_url": "https://github.com/ethereum/solidity/issues/6223#issuecomment-471943785",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/6223",
    "id": 471943785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTk0Mzc4NQ==",
    "user": {
      "login": "Marenz",
      "id": 424752,
      "node_id": "MDQ6VXNlcjQyNDc1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marenz",
      "html_url": "https://github.com/Marenz",
      "followers_url": "https://api.github.com/users/Marenz/followers",
      "following_url": "https://api.github.com/users/Marenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marenz/subscriptions",
      "organizations_url": "https://api.github.com/users/Marenz/orgs",
      "repos_url": "https://api.github.com/users/Marenz/repos",
      "events_url": "https://api.github.com/users/Marenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T10:28:52Z",
    "updated_at": "2019-03-12T10:28:52Z",
    "author_association": "MEMBER",
    "body": "Alright :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/471943785/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
