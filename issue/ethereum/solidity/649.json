{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/649",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/649/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/649/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/649/events",
  "html_url": "https://github.com/ethereum/solidity/issues/649",
  "id": 160196105,
  "node_id": "MDU6SXNzdWUxNjAxOTYxMDU=",
  "number": 649,
  "title": "Explicit keyword for abstract contracts",
  "user": {
    "login": "Antanukas",
    "id": 6258979,
    "node_id": "MDQ6VXNlcjYyNTg5Nzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6258979?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Antanukas",
    "html_url": "https://github.com/Antanukas",
    "followers_url": "https://api.github.com/users/Antanukas/followers",
    "following_url": "https://api.github.com/users/Antanukas/following{/other_user}",
    "gists_url": "https://api.github.com/users/Antanukas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Antanukas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Antanukas/subscriptions",
    "organizations_url": "https://api.github.com/users/Antanukas/orgs",
    "repos_url": "https://api.github.com/users/Antanukas/repos",
    "events_url": "https://api.github.com/users/Antanukas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Antanukas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/solidity/milestones/36",
    "html_url": "https://github.com/ethereum/solidity/milestone/36",
    "labels_url": "https://api.github.com/repos/ethereum/solidity/milestones/36/labels",
    "id": 1936632,
    "node_id": "MDk6TWlsZXN0b25lMTkzNjYzMg==",
    "number": 36,
    "title": "3-abstract-",
    "description": null,
    "creator": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 2,
    "state": "closed",
    "created_at": "2016-08-11T11:16:36Z",
    "updated_at": "2019-11-04T12:27:20Z",
    "due_on": null,
    "closed_at": "2018-07-30T10:42:58Z"
  },
  "comments": 29,
  "created_at": "2016-06-14T14:29:40Z",
  "updated_at": "2019-11-04T12:27:20Z",
  "closed_at": "2019-11-04T12:27:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Compiler doesn't produce errors, but returns empty bytecode when child contract does not call inherited constructor.\n\nTo reproduce:\n\n```\ncontract parent {\n  function parent(address _someValue) {}\n}\n\ncontract child is parent {\n//  Uncomment to fixes compilation\n//  function child(address a) parent(a) {}\n}\n```\n\nrun `sold child.sol --bin`\noutput:\n\n```\n\n======= child =======\nBinary: \n\n\n======= parent =======\nBinary: \n60606040526040516020806038833981016040528080519060200190919050505b5b50600a80602e6000396000f360606040526008565b00\n```\n\nsolc version:\n\n```\nsolc, the solidity compiler commandline interface\nVersion: 0.3.4-0/RelWithDebInfo-Linux/g++/Interpreter\n```\n\nExpected: some error message that child must define constructor\n",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/649/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/649/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/225953322",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-225953322",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 225953322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTk1MzMyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T17:23:01Z",
    "updated_at": "2016-06-14T17:23:01Z",
    "author_association": "MEMBER",
    "body": "If you do not proved base contract constructor arguments, your contract is abstract, as if you did not implement one of the methods. There is nothing wrong with that, so it is not possible to show any error.\n\nHaving said that, we plan to change the way the compiler is invoked so you can explicitly specify which contract you want to compile (instead of all non-abstract ones). In that case, the compiler can provide an error message and should also tell you the reason why a contract is abstract.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/225953322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/226158472",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-226158472",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 226158472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE1ODQ3Mg==",
    "user": {
      "login": "Antanukas",
      "id": 6258979,
      "node_id": "MDQ6VXNlcjYyNTg5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6258979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Antanukas",
      "html_url": "https://github.com/Antanukas",
      "followers_url": "https://api.github.com/users/Antanukas/followers",
      "following_url": "https://api.github.com/users/Antanukas/following{/other_user}",
      "gists_url": "https://api.github.com/users/Antanukas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Antanukas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Antanukas/subscriptions",
      "organizations_url": "https://api.github.com/users/Antanukas/orgs",
      "repos_url": "https://api.github.com/users/Antanukas/repos",
      "events_url": "https://api.github.com/users/Antanukas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Antanukas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T11:17:05Z",
    "updated_at": "2016-06-15T11:19:39Z",
    "author_association": "NONE",
    "body": "So maybe a simple keyword 'abstract' could be added like in Java, Scala, C#? This way compiler will have enough information to warn user if his intention was not an abstract contract. Cause I spent some time until I have realized this mistake. \n\nIn my concrete case I had a big contract which was inheriting from a contract with constructor and I have missed the constructor in derived contract. This resulted in empty bytecode from compiler which seems incorrect.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/226158472/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235943893",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-235943893",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 235943893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk0Mzg5Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:10:52Z",
    "updated_at": "2016-07-28T16:10:52Z",
    "author_association": "MEMBER",
    "body": "So right now the only way to test if it is an abstract contract is by seeing if a bytecode is returned during compilation. For real abstract contracts, that is empty.\n\nFun fact, the below is not abstract:\n\n```\ncontract A {\n}\n```\n\nbecause it contains only the implicit definition of the fallback function.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/235943893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237805341",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-237805341",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 237805341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzgwNTM0MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T09:27:59Z",
    "updated_at": "2016-08-05T09:27:59Z",
    "author_association": "MEMBER",
    "body": "I think having an explicit keyword could aid error reporting. Should it be called `abstract contract` or `interface` though?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237805341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237849924",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-237849924",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 237849924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzg0OTkyNA==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T13:27:45Z",
    "updated_at": "2016-08-05T13:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be _A Very Good Thing_ to have an explicit `abstract` keyword to denote abstract contracts. It would improve the readability of Solidity code even more than the `constant` keyword.\n\n@axic I wouldn't use `interface` because (at least in Java) interfaces can't implement any methods (all methods are implicitly abstract), whereas Solidity's abstract contracts can implement methods,  leaving at least one method abstract. (Very similar to Java's abstract classes.)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237849924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237895422",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-237895422",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 237895422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzg5NTQyMg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T16:21:17Z",
    "updated_at": "2016-08-05T16:21:17Z",
    "author_association": "MEMBER",
    "body": "@redsquirrel forgot that it can have implemented as well as non-implemented functions.\n\nI'm not sure abstract contracts make sense in that case, perhaps marking such functions clearly `abstract` makes more sense?\n\n```\ncontract Weird {\n  function a() abstract;\n  function b() {\n    if (msg.value > 0)\n       a();\n  }\n}\n```\n\nI would personally prefer to have a clean `interface` definition in any case, so that we can have a clean, interface-only `Token` (and Mango `Repository`) object to be used for linking. Basically the Solidity source code version of the JSON ABI.\n\n```\ninterface WeirdInterface {\n  function a();\n  function b();\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237895422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237900586",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-237900586",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 237900586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzkwMDU4Ng==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T16:42:34Z",
    "updated_at": "2016-08-05T16:42:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@axic [In Java](https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html), you can mark methods and classes as `abstract`. For solidity, I recommend requiring an explicit `abstract` keyword for abstract (un-instantiable) contracts, and letting abstract functions be implicitly abstract.\n\nSeems like the `interface` idea deserves it's own issue/discussion.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/237900586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239133396",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239133396",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239133396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzMzM5Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T11:16:13Z",
    "updated_at": "2016-08-11T11:16:13Z",
    "author_association": "MEMBER",
    "body": "As also commented on the \"interface\" issue:\n\nI think having another type of contract is not a good idea and will confuse users. What about:\n\nWarn if contract is abstract but not \"marked\" as abstract.\nYou can mark a contract as abstract by using contract a is abstract {}.\nIt is a bit weird, because abstract would be a keyword that is not inherited, i.e. contracts that derive from a will not necessarily be abstract.\n\nAlso having the distinction between explicitly abstract contract and purely abstract (interface) is too fine and confusing. Please let's not go down the path C# went.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239133396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239138280",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239138280",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239138280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzODI4MA==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T11:43:54Z",
    "updated_at": "2016-08-11T11:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Warn if contract is abstract but not \"marked\" as abstract.\n\nI'd prefer to see it more strictly enforced with an error, but a warning is fine.\n\n> You can mark a contract as abstract by using `contract a is abstract {}`.\n\nI think this is going to confuse people because it looks like inheritance. I'd prefer:\n\n`abstract contract a {}`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239138280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239219712",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239219712",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239219712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTIxOTcxMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T16:47:16Z",
    "updated_at": "2016-08-11T16:47:16Z",
    "author_association": "MEMBER",
    "body": "Yep, that is how it is done in Typescript, so we could also follow that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239219712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239768149",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239768149",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239768149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTc2ODE0OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T09:58:47Z",
    "updated_at": "2016-08-15T10:12:33Z",
    "author_association": "MEMBER",
    "body": "> You can mark a contract as abstract by using `contract a is abstract {}`.\n\nI think this is a bad idea. It suggests that it is derived from an `abstract` parent, but that wouldn't mean your contract cannot be instantiated.\n\n> Also having the distinction between explicitly abstract contract and purely abstract (interface) is too fine and confusing. Please let's not go down the path C# went.\n\nAbstract contracts are probably useful to map out source code in a more sensible way.\n\nInterfaces on the other hand map the ABI 1-to-1 and have a different use case. It helps to avoid the mistake of using an abstract contract, which has a few extra methods defined, and pointing it to an instance which only has the interface methods available.\n\nTake this example:\n\n```\ncontract MyInterface {\n    function a() returns (bytes32);\n}\n\ncontract Abstract is MyInterface {\n    function a() returns (bytes32);\n    function b() returns (bytes32) {\n        return a();\n    }\n}\n\ncontract Real is MyInterface {\n    function a() returns (bytes32) {\n        return 0x4242;\n    }\n}\n\ncontract Test {\n    function a() returns (bytes32) {\n        return Abstract(<the address of Real>).b(); // this compiles, but will fail\n        return MyInterface(<the address of Real>).b(); // this will raise the compilation error\n    }\n}\n```\n\n`MyInterface` is the interface (i.e. Token) and `Real` is an actual contract implementing that interface (i.e. a real token).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239768149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239791046",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239791046",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239791046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTc5MTA0Ng==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T12:33:22Z",
    "updated_at": "2016-08-15T12:33:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nreturn Abstract(<the address of Real>).b(); // this compiles, but will fail\n```\n\nWhy would this fail?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239791046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239854533",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239854533",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239854533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg1NDUzMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T16:39:16Z",
    "updated_at": "2016-08-15T16:39:16Z",
    "author_association": "MEMBER",
    "body": "Because the instance of `Real` doesn't implement the method `b`. `Real` is derivate of the interface and not the abstract, but when interfaces are defined as abstracts (as today), this can easily be uncaught.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239854533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239855765",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-239855765",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 239855765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg1NTc2NQ==",
    "user": {
      "login": "redsquirrel",
      "id": 2512,
      "node_id": "MDQ6VXNlcjI1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redsquirrel",
      "html_url": "https://github.com/redsquirrel",
      "followers_url": "https://api.github.com/users/redsquirrel/followers",
      "following_url": "https://api.github.com/users/redsquirrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/redsquirrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redsquirrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redsquirrel/subscriptions",
      "organizations_url": "https://api.github.com/users/redsquirrel/orgs",
      "repos_url": "https://api.github.com/users/redsquirrel/repos",
      "events_url": "https://api.github.com/users/redsquirrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redsquirrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T16:43:54Z",
    "updated_at": "2016-08-15T16:43:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ahhh, I see it now. I thought that `Real` inherited from `Abstract`. Now I see what you were doing. Thanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/239855765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242378599",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-242378599",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 242378599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM3ODU5OQ==",
    "user": {
      "login": "asinyagin",
      "id": 700837,
      "node_id": "MDQ6VXNlcjcwMDgzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/700837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asinyagin",
      "html_url": "https://github.com/asinyagin",
      "followers_url": "https://api.github.com/users/asinyagin/followers",
      "following_url": "https://api.github.com/users/asinyagin/following{/other_user}",
      "gists_url": "https://api.github.com/users/asinyagin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asinyagin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asinyagin/subscriptions",
      "organizations_url": "https://api.github.com/users/asinyagin/orgs",
      "repos_url": "https://api.github.com/users/asinyagin/repos",
      "events_url": "https://api.github.com/users/asinyagin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asinyagin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T13:05:51Z",
    "updated_at": "2016-08-25T13:05:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like both `abstract contract` and `interface` but the second one is shorter.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/242378599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371157654",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-371157654",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 371157654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE1NzY1NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T14:36:03Z",
    "updated_at": "2018-03-07T14:36:03Z",
    "author_association": "MEMBER",
    "body": "I think we should discuss this again. Currently, there are many situations that lead to a contract being abstract, but you get not notified about that unless you try to instantiate such a contract. If we require a keyword of some sort for such cases, it is much easier to detect. (suggested by @recmo)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/371157654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/387350894",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-387350894",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 387350894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzM1MDg5NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T09:59:47Z",
    "updated_at": "2018-05-08T09:59:47Z",
    "author_association": "MEMBER",
    "body": "Since we have `interface` for interfaces, the only choice here remains (based on the above): `abstract contract`.\r\n\r\nI would suggest an alternative: `partial contract`.\r\n\r\nI'm still a proponent of making this required.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/387350894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394546405",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-394546405",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 394546405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDU0NjQwNQ==",
    "user": {
      "login": "XertroV",
      "id": 1046448,
      "node_id": "MDQ6VXNlcjEwNDY0NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1046448?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XertroV",
      "html_url": "https://github.com/XertroV",
      "followers_url": "https://api.github.com/users/XertroV/followers",
      "following_url": "https://api.github.com/users/XertroV/following{/other_user}",
      "gists_url": "https://api.github.com/users/XertroV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XertroV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XertroV/subscriptions",
      "organizations_url": "https://api.github.com/users/XertroV/orgs",
      "repos_url": "https://api.github.com/users/XertroV/repos",
      "events_url": "https://api.github.com/users/XertroV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XertroV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T00:58:38Z",
    "updated_at": "2018-06-05T00:58:38Z",
    "author_association": "NONE",
    "body": "As a workaround it'd be good to emit a warning on abstract contracts - this allows for the compiler to give feedback to coders who don't expect the sort of thing I talk about in #4220 \r\n\r\nPart of the reason this happens is b/c `function a(bytes16 b)` and `function a(bytes32 b)` have different hashes so solidity considers them different functions that can co-exist. This is VERY different to how most other languages work\r\n\r\nAlternate suggestion: a \"strict\" pragma (or something) that doesn't allow identically named functions with different arguments. This would allow my case (#4220) to be caught and isn't a breaking change.\r\n\r\nMy feeling is this is a significant issue because it requires the programmer to learn more than should be necessary about the internal functioning of solidity and the compiler, which _should not be the default_. Good compilers give good feedback (erring on the side of more feedback) and _help_ the programmer as much as possible. My 2 wei.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/394546405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396205548",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-396205548",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 396205548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIwNTU0OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T11:03:27Z",
    "updated_at": "2018-06-11T11:03:27Z",
    "author_association": "MEMBER",
    "body": "> As a workaround it'd be good to emit a warning on abstract contracts\r\n\r\nI do not think that is a viable approach since we do not have a way to suppress warnings and as a result there would be no way to create abstract contracts without warnings.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396205548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396212043",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-396212043",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 396212043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIxMjA0Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T11:30:49Z",
    "updated_at": "2018-06-11T11:30:49Z",
    "author_association": "MEMBER",
    "body": "@chriseth @ekpyron what do you think about `partial contract` or `abstract contract`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396212043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396214971",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-396214971",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 396214971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIxNDk3MQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T11:43:58Z",
    "updated_at": "2018-06-11T11:43:58Z",
    "author_association": "MEMBER",
    "body": "Between the two I would prefer ``abstract contract``, and I would also prefer this to be an error and not merely a warning.\r\n\r\nIn general I'd prefer a single keyword for abstract contracts, but since ``interface`` is already taken, I'm not sure whether there's a good choice (and arguably having ``contract``, ``interface`` and yet another keyword for abstract contracts may be too much - there's even ``library`` as well already as a top-level construct). ``abstract C { ... }`` doesn't look nice either...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/396214971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397294662",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-397294662",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 397294662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI5NDY2Mg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T13:24:23Z",
    "updated_at": "2018-06-14T13:24:23Z",
    "author_association": "MEMBER",
    "body": "I think I would prefer `contract abstract Name {` although I also don't particularly like it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397294662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397310079",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-397310079",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 397310079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzMxMDA3OQ==",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T14:11:25Z",
    "updated_at": "2018-06-14T14:11:25Z",
    "author_association": "MEMBER",
    "body": "What about ``contract Name abstract {``? That's closer to a modifier. Since we have ``is`` for inheritance, ``contract Name abstract is Base {`` is still unambiguous. Or one also could consider ``contract Name is Base abstract {``, although that looks stranger to me.\r\nFor some reason in post notation I think ``contract Name partial {`` looks better than ``partial contract`` does, so in that ordering I'd actually be fine with that as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/397310079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/423638302",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-423638302",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 423638302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzYzODMwMg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T18:55:58Z",
    "updated_at": "2018-09-21T18:55:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I consider `abstract contract` as a type.\r\n\r\nExample from https://github.com/0xcert/ethereum-utils/blob/master/contracts/ownership/Ownable.sol\r\n\r\n```\r\npragma solidity ^0.5.0;\r\n\r\nabstract contract Ownable {\r\n  address public owner;\r\n\r\n  // event OwnershipTransferred...\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) onlyOwner public {\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\nNobody in their right mind would deploy the `Ownable` contract, even though it is presently possible. The keyword `abstract` removes the ability to compile this contract. And in the Remix IDE, abstract contracts won't even show up as compile targets.\r\n\r\nIn addition to *allowing* `abstract` keyword to compileable contracts. It is probably helpful to *require* `abstract` for non-compilable contracts. \r\n\r\n```\r\npragma solidity ^0.4.25;\r\n\r\ncontract A {\r\n    function x();\r\n}\r\n```\r\n\r\n^^^ Presently this code is legal. I propose that it should be an error \"Contracts with unimplemented methods must be explicitly marked as `abstract`.\" Or better, \"Contract A must implement function x() or be marked as abstract\". And of course, interfaces are implicitly abstract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/423638302/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465158112",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-465158112",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 465158112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE1ODExMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T14:47:41Z",
    "updated_at": "2019-02-19T14:47:41Z",
    "author_association": "MEMBER",
    "body": "Quick decision by show of hands during meeting: In favour for `abstract contract` instead of `contract abstract`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465158112/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465161731",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-465161731",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 465161731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE2MTczMQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T14:55:41Z",
    "updated_at": "2019-02-19T14:55:41Z",
    "author_association": "MEMBER",
    "body": "To clarify the implementation proposal again:\r\n\r\n - cannot be applied to interfaces (for now)\r\n - cannot be applied to libraries (for now)\r\n - abstract is a setting for the contract\r\n - if `!isFullyImplemented()` (as implemented now) has a different value than `abstract()`, issue a warning.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465161731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465162366",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-465162366",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 465162366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE2MjM2Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T14:57:01Z",
    "updated_at": "2019-02-19T14:57:01Z",
    "author_association": "MEMBER",
    "body": "Idea by @axic: An empty contract should be considered not implemented (and thus require `abstract`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/465162366/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521326242",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-521326242",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 521326242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMyNjI0Mg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T16:48:13Z",
    "updated_at": "2019-08-14T16:48:13Z",
    "author_association": "CONTRIBUTOR",
    "body": ">Nobody in their right mind would deploy the Ownable contract, even though it is presently possible. The keyword abstract removes the ability to compile this contract. And in the Remix IDE, abstract contracts won't even show up as compile targets.\r\n\r\nThat can also be achieved by making the constructor internal:\r\n\r\n```solidity\r\ncontract Ownable {\r\n  constructor() internal {\r\n    _owner = msg.sender();\r\n  }\r\n\r\n ...\r\n}\r\n```\r\n\r\nThis is IMO a cleaner approach, since it directly tackles the actual objective: preventing the contract from being deployed.\r\n\r\nI'd have the `abstract` keyword cause a compiler error when applied to a contract that has no pure virtual functions. That way, it will always have the same meaning: the contract contains function declarations with no definition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/521326242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/549331577",
    "html_url": "https://github.com/ethereum/solidity/issues/649#issuecomment-549331577",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/649",
    "id": 549331577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTMzMTU3Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T12:27:19Z",
    "updated_at": "2019-11-04T12:27:19Z",
    "author_association": "MEMBER",
    "body": "Implemented in https://github.com/ethereum/solidity/pull/7358",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/549331577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
