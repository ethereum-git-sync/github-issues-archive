{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/4060",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/4060/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/4060/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/4060/events",
  "html_url": "https://github.com/ethereum/solidity/issues/4060",
  "id": 320128748,
  "node_id": "MDU6SXNzdWUzMjAxMjg3NDg=",
  "number": 4060,
  "title": "Public properties not providing a getter as expected",
  "user": {
    "login": "saturnial",
    "id": 683181,
    "node_id": "MDQ6VXNlcjY4MzE4MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/683181?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saturnial",
    "html_url": "https://github.com/saturnial",
    "followers_url": "https://api.github.com/users/saturnial/followers",
    "following_url": "https://api.github.com/users/saturnial/following{/other_user}",
    "gists_url": "https://api.github.com/users/saturnial/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saturnial/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saturnial/subscriptions",
    "organizations_url": "https://api.github.com/users/saturnial/orgs",
    "repos_url": "https://api.github.com/users/saturnial/repos",
    "events_url": "https://api.github.com/users/saturnial/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saturnial/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-05-04T01:14:32Z",
  "updated_at": "2018-05-19T07:25:47Z",
  "closed_at": "2018-05-04T10:37:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Below you will find a set of dummy contracts that illustrate the pattern I'm attempting to accomplish.\r\n\r\nAt a high level, I'm creating a registry contract `A` that holds a reference to contract `B`.  I then instantiate contract `C` with a reference to contract `A`, which in turn holds a reference to `B`. I expect that I should then be able to access functions on contract `B` from contract `C` through `A` given that contract `A` has a public property referencing contract `B`. Instead, I get the following error:\r\n\r\n> TypeError: Member \"test\" not found or not visible after argument-dependent lookup in function () view external returns (contract B) `return a.b.test();`\r\n\r\nThe code is as follows:\r\n\r\n```\r\npragma solidity 0.4.18;\r\n\r\n\r\n// Registry contract\r\ncontract A {\r\n\r\n    B public b;\r\n\r\n    function A(\r\n        address _b\r\n    ) public {\r\n        b = B(_b);\r\n    }\r\n}\r\n\r\n// Contract in the registry\r\ncontract B {\r\n\r\n    address public d;\r\n\r\n    function B(\r\n        address _d\r\n    ) public {\r\n        d = _d;\r\n    }\r\n\r\n    function test() public view returns (address) {\r\n        return d;\r\n    }\r\n}\r\n\r\n\r\n// Contract with access to the registry\r\ncontract C {\r\n\r\n    A public a;\r\n\r\n    function C(\r\n        address _a\r\n    ) public {\r\n        a = A(_a);\r\n    }\r\n\r\n    function work() public view returns (address) {\r\n        return a.b.test();\r\n    }\r\n}\r\n```\r\n\r\nUpon rewriting the contracts with my own getter `getB()` that returns the `B` instance, the code now compiles and works as expected. See below:\r\n\r\n```\r\npragma solidity 0.4.18;\r\n\r\n\r\n// Registry contract\r\ncontract A {\r\n\r\n    B b;\r\n\r\n    function A(\r\n        address _b\r\n    ) public {\r\n        b = B(_b);\r\n    }\r\n\r\n    function getB() public view returns (B) {\r\n        return b;\r\n    }\r\n}\r\n\r\n// Contract in the registry\r\ncontract B {\r\n\r\n    address public d;\r\n\r\n    function B(\r\n        address _d\r\n    ) public {\r\n        d = _d;\r\n    }\r\n\r\n    function test() public view returns (address) {\r\n        return d;\r\n    }\r\n}\r\n\r\n\r\n// Contract with access to the registry\r\ncontract C {\r\n\r\n    A public a;\r\n\r\n    function C(\r\n        address _a\r\n    ) public {\r\n        a = A(_a);\r\n    }\r\n\r\n    function work() public view returns (address) {\r\n        return a.getB().test();\r\n    }\r\n}\r\n```\r\n\r\nThis is counter-intuitive as I would assume a public property would expose a getter identical to the one I wrote out in the second code snippet.\r\n\r\nIs this a bug or am I misconstruing `public`?\r\n\r\nAny clarification would be much appreciated.",
  "closed_by": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/4060/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/4060/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386563494",
    "html_url": "https://github.com/ethereum/solidity/issues/4060#issuecomment-386563494",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4060",
    "id": 386563494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjU2MzQ5NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T10:37:05Z",
    "updated_at": "2018-05-04T10:37:05Z",
    "author_association": "MEMBER",
    "body": "The getter is an actual function, so you have to call it: `return a.b().test();`\r\n\r\nI created an issue to improve the error message: https://github.com/ethereum/solidity/issues/4066",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/386563494/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/390385598",
    "html_url": "https://github.com/ethereum/solidity/issues/4060#issuecomment-390385598",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/4060",
    "id": 390385598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDM4NTU5OA==",
    "user": {
      "login": "ivan-homoliak-sutd",
      "id": 31821845,
      "node_id": "MDQ6VXNlcjMxODIxODQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31821845?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivan-homoliak-sutd",
      "html_url": "https://github.com/ivan-homoliak-sutd",
      "followers_url": "https://api.github.com/users/ivan-homoliak-sutd/followers",
      "following_url": "https://api.github.com/users/ivan-homoliak-sutd/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivan-homoliak-sutd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivan-homoliak-sutd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivan-homoliak-sutd/subscriptions",
      "organizations_url": "https://api.github.com/users/ivan-homoliak-sutd/orgs",
      "repos_url": "https://api.github.com/users/ivan-homoliak-sutd/repos",
      "events_url": "https://api.github.com/users/ivan-homoliak-sutd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivan-homoliak-sutd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T07:13:50Z",
    "updated_at": "2018-05-19T07:25:47Z",
    "author_association": "NONE",
    "body": "I've got the same issue when accessing external public structs or their members, even though I am using () to invoke getters. To me, it looks that autogenerated getters do not work with structs, which is a pity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/390385598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
