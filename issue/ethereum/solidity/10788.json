{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/10788",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/10788/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/10788/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/10788/events",
  "html_url": "https://github.com/ethereum/solidity/issues/10788",
  "id": 787066510,
  "node_id": "MDU6SXNzdWU3ODcwNjY1MTA=",
  "number": 10788,
  "title": "[SMTChecker] CHC report loop invariants",
  "user": {
    "login": "leonardoalt",
    "id": 504195,
    "node_id": "MDQ6VXNlcjUwNDE5NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonardoalt",
    "html_url": "https://github.com/leonardoalt",
    "followers_url": "https://api.github.com/users/leonardoalt/followers",
    "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
    "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
    "repos_url": "https://api.github.com/users/leonardoalt/repos",
    "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4438003076,
      "node_id": "LA_kwDOAm_5kc8AAAABCIaNhA",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/medium%20effort",
      "name": "medium effort",
      "color": "ff7df7",
      "default": false,
      "description": "Default level of effort"
    },
    {
      "id": 4810143649,
      "node_id": "LA_kwDOAm_5kc8AAAABHrT3oQ",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/smt",
      "name": "smt",
      "color": "1d76db",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-01-15T17:33:25Z",
  "updated_at": "2023-06-14T12:35:39Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Depends on https://github.com/ethereum/solidity/issues/14325\r\n\r\nCurrently we support exporting contract and reentrancy invariants to the user. We should also export loop invariants. This means that in `Invariants.cpp` we need to add `loop_header` (or whatever the prefix used for loop header predicates is in CHC.cpp) to the search targets.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/10788/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/10788/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/762085949",
    "html_url": "https://github.com/ethereum/solidity/issues/10788#issuecomment-762085949",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10788",
    "id": 762085949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjA4NTk0OQ==",
    "user": {
      "login": "hrkrshnn",
      "id": 13174375,
      "node_id": "MDQ6VXNlcjEzMTc0Mzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13174375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrkrshnn",
      "html_url": "https://github.com/hrkrshnn",
      "followers_url": "https://api.github.com/users/hrkrshnn/followers",
      "following_url": "https://api.github.com/users/hrkrshnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrkrshnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrkrshnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrkrshnn/subscriptions",
      "organizations_url": "https://api.github.com/users/hrkrshnn/orgs",
      "repos_url": "https://api.github.com/users/hrkrshnn/repos",
      "events_url": "https://api.github.com/users/hrkrshnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrkrshnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-18T08:42:43Z",
    "updated_at": "2021-01-18T08:42:43Z",
    "author_association": "MEMBER",
    "body": "What kind of invariants? Can it detect that a memory struct declared inside is invariant?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/762085949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/762122118",
    "html_url": "https://github.com/ethereum/solidity/issues/10788#issuecomment-762122118",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10788",
    "id": 762122118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjEyMjExOA==",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-18T09:41:11Z",
    "updated_at": "2021-01-18T09:42:40Z",
    "author_association": "MEMBER",
    "body": "If you write a property that represents that, it could.\r\nBut what I mean is:\r\n```\r\ny = 0;\r\nwhile (y < x)\r\n  ++x;\r\nassert(x == y);\r\n```\r\n`y <= x` is an inductive invariant for the loop, that is, it is true every time the condition is checked.\r\nThe assertion is proved by \"replacing\" the loop by its inductive invariant and adding the negated condition as a constraint after the loop: `y <= x && y >= x => y == x`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/762122118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1590950540",
    "html_url": "https://github.com/ethereum/solidity/issues/10788#issuecomment-1590950540",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/10788",
    "id": 1590950540,
    "node_id": "IC_kwDOAm_5kc5e0_qM",
    "user": {
      "login": "leonardoalt",
      "id": 504195,
      "node_id": "MDQ6VXNlcjUwNDE5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/504195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardoalt",
      "html_url": "https://github.com/leonardoalt",
      "followers_url": "https://api.github.com/users/leonardoalt/followers",
      "following_url": "https://api.github.com/users/leonardoalt/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardoalt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardoalt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardoalt/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardoalt/orgs",
      "repos_url": "https://api.github.com/users/leonardoalt/repos",
      "events_url": "https://api.github.com/users/leonardoalt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardoalt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-14T10:44:41Z",
    "updated_at": "2023-06-14T10:49:29Z",
    "author_association": "MEMBER",
    "body": "Let's wait with this one until we refactor the solvers to use only the smtlib2 interface: https://github.com/ethereum/solidity/issues/14325",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1590950540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
