{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1351",
  "id": 478809403,
  "node_id": "MDU6SXNzdWU0Nzg4MDk0MDM=",
  "number": 1351,
  "title": "Clarification on the initiating client of `Hello`",
  "user": {
    "login": "mhchia",
    "id": 8223657,
    "node_id": "MDQ6VXNlcjgyMjM2NTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8223657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mhchia",
    "html_url": "https://github.com/mhchia",
    "followers_url": "https://api.github.com/users/mhchia/followers",
    "following_url": "https://api.github.com/users/mhchia/following{/other_user}",
    "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions",
    "organizations_url": "https://api.github.com/users/mhchia/orgs",
    "repos_url": "https://api.github.com/users/mhchia/repos",
    "events_url": "https://api.github.com/users/mhchia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mhchia/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 1393665613,
      "node_id": "MDU6TGFiZWwxMzkzNjY1NjEz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:libp2p",
      "name": "scope:libp2p",
      "color": "CA7A2C",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-08-09T05:53:34Z",
  "updated_at": "2019-09-17T17:00:29Z",
  "closed_at": "2019-09-17T17:00:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://github.com/ethereum/eth2.0-specs/blob/499e187382798060b3c880782b5563e4253c0bcf/specs/networking/p2p-interface.md#L338-L345\r\n\r\nJust want to confirm: I'm not sure who should open a new stream `Hello` to another upon connection. It should be great to clarify this. Should both sides do it, or just the client who initiates the connection opens the stream?",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520629765",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1351#issuecomment-520629765",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351",
    "id": 520629765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDYyOTc2NQ==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T23:19:42Z",
    "updated_at": "2019-08-12T23:19:42Z",
    "author_association": "MEMBER",
    "body": "My understanding:\r\n\r\nTo begin, I discover a peer's identity and location yielding a multiaddr with this information (something like `ip/IPV4_ADDR/tcp/PORT/p2p/PEER_ID`). I inject this info to the peer store and then ask my `libp2p` implementation to dial this peer. There is a handshake that is transparent to me (AIUI) that upgrades the connection to one providing security and multiplexing guarantees at the transport level. I, as the initiator, now MUST open a new stream under the `/eth2/beacon_chain/req/hello/1/` protocol and send the only valid message here, `Hello`. I close my end of the connection and wait for the remote peer's response.\r\n\r\nThe peer I connected to will see this incoming message from me and then MUST send its own `Hello` in response. The remote peer closes its end of the connection after sending the response `Hello`. At this point, each side can decide what to do following the spec (aka the peer missing data should start syncing the chain or incompatible peers are disconnected).\r\n\r\nDoes this clarify the initial handshake?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520629765/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520684373",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1351#issuecomment-520684373",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351",
    "id": 520684373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDY4NDM3Mw==",
    "user": {
      "login": "mhchia",
      "id": 8223657,
      "node_id": "MDQ6VXNlcjgyMjM2NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8223657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhchia",
      "html_url": "https://github.com/mhchia",
      "followers_url": "https://api.github.com/users/mhchia/followers",
      "following_url": "https://api.github.com/users/mhchia/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions",
      "organizations_url": "https://api.github.com/users/mhchia/orgs",
      "repos_url": "https://api.github.com/users/mhchia/repos",
      "events_url": "https://api.github.com/users/mhchia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhchia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-13T04:30:29Z",
    "updated_at": "2019-08-13T04:30:42Z",
    "author_association": "MEMBER",
    "body": "@ralexstokes  Thank you for the clarification.\r\n\r\n> I, as the initiator, now MUST open a new stream under the /eth2/beacon_chain/req/hello/1/ protocol and send the only valid message here, Hello. I close my end of the connection and wait for the remote peer's response.\r\n\r\nYeah this is just what I want to confirm: *who* should open the stream `Hello`. If we all agree that the connection initiator should open the stream, probably we can specify it in the spec?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520684373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/532309477",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1351#issuecomment-532309477",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1351",
    "id": 532309477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjMwOTQ3Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T17:00:28Z",
    "updated_at": "2019-09-17T17:00:28Z",
    "author_association": "MEMBER",
    "body": "I think this is clarified in the updates made in `v08x` -- https://github.com/ethereum/eth2.0-specs/blob/v08x/specs/networking/p2p-interface.md#status\r\n\r\n> The dialing client MUST send a Status request upon connection.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/532309477/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
