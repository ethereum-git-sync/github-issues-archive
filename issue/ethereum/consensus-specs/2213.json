{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2213",
  "id": 815393990,
  "node_id": "MDU6SXNzdWU4MTUzOTM5OTA=",
  "number": 2213,
  "title": "Add operation for withdrawal_credentials change operation",
  "user": {
    "login": "zilm13",
    "id": 6196452,
    "node_id": "MDQ6VXNlcjYxOTY0NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zilm13",
    "html_url": "https://github.com/zilm13",
    "followers_url": "https://api.github.com/users/zilm13/followers",
    "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
    "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
    "organizations_url": "https://api.github.com/users/zilm13/orgs",
    "repos_url": "https://api.github.com/users/zilm13/repos",
    "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zilm13/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-24T11:35:04Z",
  "updated_at": "2023-12-26T20:50:53Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### What?\r\n\r\nNew operation and signed message is proposed for Eth2, `BLSSetWithdrawal`, which could permanently change `withdrawal_credentials`:\r\n\r\n\r\n#### `BLSSetWithdrawal`\r\n\r\n```python\r\nclass BLSSetWithdrawal(Container):\r\n    bls_withdrawal_pubkey: Bytes32   # Reveal of withdrawal public key\r\n    withdrawal_credentials: Bytes32  # New withdrawal credentials, shouldn't start with BLS_WITHDRAWAL_PREFIX (0x00)\r\n    validator_index: ValidatorIndex\r\n```\r\nAnd `SignedBLSSetWithdrawal` message:\r\n\r\n#### `SignedBLSSetWithdrawal`\r\n\r\n```python\r\nclass SignedBLSSetWithdrawal(Container):\r\n    message: BLSSetWithdrawal\r\n    signature: BLSSignature  # Signed by withdrawal BLS key\r\n```\r\n\r\n### Why?\r\n\r\nIt's already confirmed that at least one extra withdrawal target option will be supported with merge of PR #2149. While new validators could submit deposits using this option, there were already tons of deposits before this PR was merged and some of their owners could be interested in Eth1 withdrawal. Moreover, for some parties it could be a best flow of withdrawal control during validator lifecycle to start with BLS key `0x00` withdrawal credentials and change it's target to Eth1 address later with `0x01` or another options introduced in future.\r\n\r\n### How?\r\n\r\n- we verify that current validator’s `withdrawal_credentials` is started with `BLS_WITHDRAWAL_PREFIX (0x00)`\r\n- we verify that new credentials are  not started with `BLS_WITHDRAWAL_PREFIX (0x00)`\r\n\r\n\r\nThere are several assessments when choosing such behavior of this operation:\r\n- Why don’t allow change to another BLS public key? There are 2 most obvious usages for `0x00` to another `0x00` swaps: \r\n    + Validator's withdrawal key was compromised. For some validators it would mean the validator signing key could be under attack too and the safest way is to withdraw now. Changing credentials to explicit target works in the safest way in this case\r\n    + Validators could be traded on some market by withdrawal pubkey change. Currently there is no mechanism to change validator's signing key and it's not known whether it will be introduced in future. Also it provides additional load on beacon chain network and block size making this type of message to fight for its place under the sun with `Deposit`, `Attestation` and other more important network message types.\r\n- Whether to check that `withdrawal_credentials` is in the currently supported range. The answer should be “no”, as the deposit contract already doesn’t check it. It’s a kind of risk for the minutest number of user errors, but by changing this we could open a way to a number of bugs that could affect all users. \r\n\r\nDraft implementation:\r\n\r\n```python\r\ndef process_bls_set_withdrawal(state: BeaconState, signed_bls_set_withdrawal: SignedBLSSetWithdrawal) -> None:\r\n    set_withdrawal = signed_bls_set_withdrawal.message\r\n    validator = state.validators[set_withdrawal.validator_index]\r\n    # Verify the validator has BLS pubkey commitment\r\n    assert validator.withdrawal_credentials[:1] == BLS_WITHDRAWAL_PREFIX\r\n    # Verify the validator is active\r\n    assert is_active_validator(validator, get_current_epoch(state))\r\n    # Verify exit has not been initiated\r\n    assert validator.exit_epoch == FAR_FUTURE_EPOCH\r\n    # Verify new withdrawal credentials doesn't start with BLS_WITHDRAWAL_PREFIX\r\n    assert set_withdrawal.withdrawal_credentials[:1] != BLS_WITHDRAWAL_PREFIX\r\n    # Verify BLS pubkey reveal is correct\r\n    assert hash(set_withdrawal.withdrawal_pubkey)[1:] == validator.withdrawal_credentials[1:]\r\n    # Verify signature\r\n    domain = get_domain(state, DOMAIN_BLS_SET_WITHDRAWAL, get_current_epoch(state))\r\n    signing_root = compute_signing_root(set_withdrawal, domain)\r\n    assert bls.Verify(set_withdrawal.withdrawal_pubkey, signing_root, signed_bls_set_withdrawal.signature)\r\n    # Update withdrawal credentials\r\n    validator.withdrawal_credentials = set_withdrawal.withdrawal_credentials\r\n```\r\n\r\n### Some concerns\r\nWe have two options here, and I'm not sure, which way should we go:\r\n- allow change of credentials only for validators that doesn't initiate the exit\r\n- allow change of credentials for exited validators\r\n\r\nSecond option requires extra processing of withdrawals after `withdrawal_credentials` are changed for already exited validators. It’s not straightforward and requires thoughtful implementation to avoid bugs. For example, when we have 2 active withdrawal options, we should verify that one was not processed before `withdrawal_credentials` change, though Eth1 withdrawal is planned to be automatically on validator exit without extra messages on Beacon Chain, while BLS key withdrawal will require new message with processing.\r\n\r\n\r\n### Some important notes\r\n- this approach means once `withdrawal_credentials` are changed from `BLS_WITHDRAWAL_PREFIX (0x00)` to any other, withdrawal target could not be changed anymore. But this is already concreted by PR #2149\r\n- `BLSSetWithdrawal` could be added already, as nothing prevents to submit `withdrawal_credentials` to Deposit Contract today with a prefix other than `BLS_WITHDRAWAL_PREFIX (0x00)`\r\n\r\n\r\n### Links\r\n[Simple eth1 withdrawals (beacon-chain centric)](https://ethresear.ch/t/simple-eth1-withdrawals-beacon-chain-centric/8256) with `BLSSetWithdrawalAddress` proposal by @djrtwo inspiring this issue\r\n\r\n[Eth1 withdrawal credentials (0x01)](https://github.com/ethereum/eth2.0-specs/pull/2149) #2149 by @djrtwo - PR merged in specs\r\n\r\n[Withdrawal credential rotation from BLS to Eth1](https://ethresear.ch/t/withdrawal-credential-rotation-from-bls-to-eth1/8722) - some alternative approaches of withdrawal credentials change \r\n\r\n[Allow withdrawal_credentials to point to an eth1 address](https://github.com/ethereum/eth2.0-specs/issues/2040) #2040 by @dapplion - Issue to add eth1 withdrawal prefix\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213/reactions",
    "total_count": 8,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 5,
    "rocket": 0,
    "eyes": 3
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785024507",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-785024507",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 785024507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTAyNDUwNw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T11:55:11Z",
    "updated_at": "2021-02-24T11:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding your points about not allowing a different set of withdrawal credentials with BLS:\r\n\r\n> Validator's withdrawal key was compromised. For some validators it would mean the validator signing key could be under attack too and the safest way is to withdraw now. Changing credentials to explicit target works in the safest way in this case\r\n\r\nIf the withdrawal key is compromised I think we have to accept that the funds protected by that withdrawal key are likely to be lost.  This is especially the case given that in the vast majority of cases compromise of the withdrawal key implies compromise of the validator key as well.\r\n\r\n> Validators could be traded on some market by withdrawal pubkey change. Currently there is no mechanism to change validator's signing key and it's not known whether it will be introduced in future.\r\n\r\nAs soon as we have the ability to assign an Ethereum 1 address to a validator it creates a market, as it is trivial to target a smart contract that can disburse funds as it sees fit.\r\n\r\n>  Also it provides additional load on beacon chain network and block size making this type of message to fight for its place\r\n\r\nI think that this is the critical item, and the reason why changing withdrawal credentials should be a one-time operation.\r\n\r\n\r\nRegarding the state of the validator to allow this operation, I think that it should only apply while the validator is active.  Otherwise we move in to areas of race conditions / potential impact of censorship of the operation and the like.  And, as you mention, it potentially restricts the exit process with this additional complexity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785024507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785027203",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-785027203",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 785027203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTAyNzIwMw==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T12:00:19Z",
    "updated_at": "2021-02-24T12:00:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the comment\r\n> If the withdrawal key is compromised I think we have to accept that the funds protected by that withdrawal key are likely to be lost. This is especially the case given that in the vast majority of cases compromise of the withdrawal key implies compromise of the validator key as well.\r\n\r\nI mean the case when it was probably compromised, or some hackable keystore gone, and your validator is still under control, but it's under the risk in the near future.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785027203/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785482689",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-785482689",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 785482689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQ4MjY4OQ==",
    "user": {
      "login": "lsankar4033",
      "id": 451947,
      "node_id": "MDQ6VXNlcjQ1MTk0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/451947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsankar4033",
      "html_url": "https://github.com/lsankar4033",
      "followers_url": "https://api.github.com/users/lsankar4033/followers",
      "following_url": "https://api.github.com/users/lsankar4033/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsankar4033/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsankar4033/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsankar4033/subscriptions",
      "organizations_url": "https://api.github.com/users/lsankar4033/orgs",
      "repos_url": "https://api.github.com/users/lsankar4033/repos",
      "events_url": "https://api.github.com/users/lsankar4033/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsankar4033/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T00:21:34Z",
    "updated_at": "2021-02-25T00:21:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on designing withdrawal-credential changes as a one-time operation scoped only to those with `0x00` creds. There aren't obvious use cases for this beyond allowing staking pools that launched prior to `0x01` to switch over so the generality doesn't seem worth the congestion/avenue for DoS vectors.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785482689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785901731",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-785901731",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 785901731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTkwMTczMQ==",
    "user": {
      "login": "vshvsh",
      "id": 3624893,
      "node_id": "MDQ6VXNlcjM2MjQ4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3624893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vshvsh",
      "html_url": "https://github.com/vshvsh",
      "followers_url": "https://api.github.com/users/vshvsh/followers",
      "following_url": "https://api.github.com/users/vshvsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vshvsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vshvsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vshvsh/subscriptions",
      "organizations_url": "https://api.github.com/users/vshvsh/orgs",
      "repos_url": "https://api.github.com/users/vshvsh/repos",
      "events_url": "https://api.github.com/users/vshvsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vshvsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T13:39:52Z",
    "updated_at": "2021-02-25T13:39:52Z",
    "author_association": "NONE",
    "body": "That's a great way to introduce key rotation for staking pools that want to reduce their reliance on custodial or semi-custodial solutions. \r\n\r\nI think that withdrawal credential compromise scenario shouldn't be a factor when evaluating the proposed solution. If it helps, it's a good side effect, but the setting where it matters is pretty convoluted IMO.\r\n\r\nRe: allow change of credentials for exited validators, I think that if it's not too much work it should be implemented (mainly to the benefit of slashed validators owners), but it's a low-value feature. Only working with active validators is good enough.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785901731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785903909",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-785903909",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 785903909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTkwMzkwOQ==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T13:43:15Z",
    "updated_at": "2021-02-25T13:43:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That's a great way to introduce key rotation for staking pools that want to reduce their reliance on custodial or semi-custodial solutions.\r\n\r\nNote that this proposal does not allow a change of validator key, so wouldn't help much in this situation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/785903909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/786499329",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2213#issuecomment-786499329",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2213",
    "id": 786499329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjQ5OTMyOQ==",
    "user": {
      "login": "vshvsh",
      "id": 3624893,
      "node_id": "MDQ6VXNlcjM2MjQ4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3624893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vshvsh",
      "html_url": "https://github.com/vshvsh",
      "followers_url": "https://api.github.com/users/vshvsh/followers",
      "following_url": "https://api.github.com/users/vshvsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vshvsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vshvsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vshvsh/subscriptions",
      "organizations_url": "https://api.github.com/users/vshvsh/orgs",
      "repos_url": "https://api.github.com/users/vshvsh/repos",
      "events_url": "https://api.github.com/users/vshvsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vshvsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-26T08:42:49Z",
    "updated_at": "2021-02-26T08:44:14Z",
    "author_association": "NONE",
    "body": "> Note that this proposal does not allow a change of validator key, so wouldn't help much in this situation.\r\n\r\nValidators are not custodians though.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/786499329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
