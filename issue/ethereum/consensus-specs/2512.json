{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2512",
  "id": 940064526,
  "node_id": "MDU6SXNzdWU5NDAwNjQ1MjY=",
  "number": 2512,
  "title": "Explicitly specify state advancement in p2p spec",
  "user": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-07-08T17:13:59Z",
  "updated_at": "2023-12-26T20:32:05Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "While implementing Altair's p2p spec into code, we realized that Prysm does not advance beacon state up to the particular slot when the object is referencing that slot. \r\n\r\nFor example, when an Altair block's parent state on phase 0, the node would use that parent state (phase0) to verify the signature, and the signature verification would failed due to fork version miss match. Correct behavior would have been advancing parent state (phase0) up to block's slot then use processed state (altair) to verify block signature. \r\n\r\nJust wanted to share this lesson learned after seeing 3 missed blocks post fork boundary in the devnet this morning. Whether we should explicitly define state advancement in the p2p spec is up for debate and I wonder if anyone has an opinion on this",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/876765934",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2512#issuecomment-876765934",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512",
    "id": 876765934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Njc2NTkzNA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T21:43:46Z",
    "updated_at": "2021-07-08T21:43:46Z",
    "author_association": "MEMBER",
    "body": "Curious -- what slot does the p2p reference state sit at?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/876765934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/876844813",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2512#issuecomment-876844813",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512",
    "id": 876844813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Njg0NDgxMw==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-09T01:22:27Z",
    "updated_at": "2021-07-09T01:22:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Curious -- what slot does the p2p reference state sit at?\r\n\r\nWe were using the parent state to verify block signature. In the failure case, parent state slot would be `< ALTAIR_FORK_SLOT` and the block slot would be `>= ALTAIR_FORK_SLOT`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/876844813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/880201014",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2512#issuecomment-880201014",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2512",
    "id": 880201014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDIwMTAxNA==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-14T20:51:50Z",
    "updated_at": "2021-07-14T20:51:50Z",
    "author_association": "MEMBER",
    "body": "in the interest of reducing verbosity in the spec, i'd suggest leaning towards the current style used in the networking specs which implies the state object (rather than say the state transition spec where it is arguably more valuable to be super explicit) -- there is obviously a trade-off here b/t how much the spec spells out and how much content there is to maintain/digest when working w/ client implementations.\r\n\r\nwould love to hear any other implementer's feedback and happy to make a pass on clarifying anything that has broad support amongst client teams :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/880201014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
