{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1877",
  "id": 634410009,
  "node_id": "MDU6SXNzdWU2MzQ0MTAwMDk=",
  "number": 1877,
  "title": "Initial shard slot number",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-06-08T09:08:03Z",
  "updated_at": "2020-07-28T16:12:02Z",
  "closed_at": "2020-07-28T16:12:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Issue\r\nCurrently, the initial shard state slot is set to `PHASE_1_GENESIS_SLOT` by [setting shard_state.slot = pre.slot](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase1/phase1-fork.md#upgrading-the-state)\r\n\r\nFor example, if `PHASE_1_GENESIS_SLOT` is 32:\r\n![image](https://user-images.githubusercontent.com/9263930/84011362-90f81a00-a9a8-11ea-968b-6975e1f0ae38.png)\r\n\r\nThe shard block 32 cannot exist and both B_32 and B_33 point to initial shard state.\r\n\r\n### How to fix it\r\n\r\nIMO the scenario would be neater if we set initial shard slot to `compute_previous_slot(pre.slot)`.\r\n![image](https://user-images.githubusercontent.com/9263930/84011411-a66d4400-a9a8-11ea-93c7-f17caccf8ac5.png)\r\n\r\n\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/641373212",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1877#issuecomment-641373212",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877",
    "id": 641373212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTM3MzIxMg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T15:26:01Z",
    "updated_at": "2020-06-09T15:26:01Z",
    "author_association": "MEMBER",
    "body": "/cc @djrtwo @protolambda ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/641373212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648188057",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1877#issuecomment-648188057",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877",
    "id": 648188057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODE4ODA1Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T14:23:47Z",
    "updated_at": "2020-06-23T14:23:47Z",
    "author_association": "MEMBER",
    "body": "This does seem reasonable, but one thing we need to be careful about is that for a system that is started from Phase 1 a `GENESIS_SLOT`, the shard states at B0 would be for slot 0 (because of how `compute_previous_slot` handles `0` input. \r\n\r\nI do expect some systems to want to  start phase 1 from slot 0 so we should at least ensure that nothing is broken here. OR we put some sort of requirement taht `PHASE_1_GENESIS_SLOT` is at least `GENESIS_SLOT + SLOTS_PER_EPOCH`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648188057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/658078745",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1877#issuecomment-658078745",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1877",
    "id": 658078745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODA3ODc0NQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T09:32:47Z",
    "updated_at": "2020-07-14T09:32:47Z",
    "author_association": "MEMBER",
    "body": "> This does seem reasonable, but one thing we need to be careful about is that for a system that is started from Phase 1 a `GENESIS_SLOT`, the shard states at B0 would be for slot 0 (because of how `compute_previous_slot` handles `0` input.\r\n\r\nI have this particular kind of setup (`PHASE_1_GENESIS_SLOT = GENESIS_SLOT = 0`). The following list of patches did help to sort the things out:\r\n- `get_shard_transition` returns empty shard transition if `GENESIS_SLOT`\r\n- `validate_attestation` allows for empty shard transition root if `GENESIS_SLOT`\r\n- `process_shard_transitions` skips crosslink processing if `compute_previous_slot(state.slot) == GENESIS_SLOT`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/658078745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
