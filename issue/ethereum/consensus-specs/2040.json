{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2040",
  "id": 694893053,
  "node_id": "MDU6SXNzdWU2OTQ4OTMwNTM=",
  "number": 2040,
  "title": "Allow withdrawal_credentials to point to an eth1 address",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2020-09-07T09:09:19Z",
  "updated_at": "2021-07-11T15:06:24Z",
  "closed_at": "2021-07-06T18:29:30Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "##### Motivation\r\n\r\nThe lack of liquidness of eth2 deposits posses a serious centralization risk on Ethereum 2.0. Centralized actors will offer artificial liquidity on user's eth2 deposits, so it's important to facilitate similar decentralized solutions. \r\n\r\nAllowing `withdrawal_credentials` to point to an eth1 address could potentially do that.\r\n\r\nSee Vitalik's related tweet https://twitter.com/VitalikButerin/status/1297676370936344576\r\n\r\n> **VitalikButerin**: If needed we could just allow a feature where you can set the withdrawal key to be an eth1 address, so there would be a contract that would have the rights to future ETH coming out of the validator when it withdraws in phase 1.5+. Those rights could then be \"deposited\" today.\r\n\r\n> Allowing staking withdrawals to go to arbitrary smart contracts is actually something that we could potentially enable very easily today (or if we want to respect the spec freeze, in the first hard fork after phase 0). Certainly worth discussing at least.\r\n\r\n##### Proposal\r\n\r\nAllow `withdrawal_credentials` to be prefixed by a different byte.\r\n\r\nNo changes are required code-wise since both the deposit contract and [clients just copy `withdrawal_credentials`](https://github.com/prysmaticlabs/prysm/blob/a81214219dc57caa6a812ef5b656e910c1df37e3/beacon-chain/core/blocks/deposit.go#L175).\r\n\r\n```go\r\n// Prysm\r\nbeaconState.AppendValidator(&ethpb.Validator{\r\n\tWithdrawalCredentials:      deposit.Data.WithdrawalCredentials,\r\n\t...\r\n})\r\n```\r\n\r\nThe community should just agree that this feature would be supported in the future with a minimal guarantee that it's technically feasible.",
  "closed_by": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040/reactions",
    "total_count": 47,
    "+1": 23,
    "-1": 0,
    "laugh": 0,
    "hooray": 9,
    "confused": 0,
    "heart": 9,
    "rocket": 6,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688219905",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-688219905",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 688219905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODIxOTkwNQ==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T10:06:15Z",
    "updated_at": "2020-09-07T10:06:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "For this to be useful there needs to be a contract at the specified address.  For the contract to be operational there needs to be a defined method that the contract understands to either receive or request withdrawal of withdrawable Ethereum 2 funds.\r\n\r\n(It _could_ be possible for Ethereum 2 to automatically dump any withdrawable balance in the Ethereum 1 address without notification, but this is unlikely to meet the requirements for a decentralized staking pool as it will have no information on the provenance of the funds.)\r\n\r\nI'd like to see a decision on if the transfer should be \"push\" (ETH2-initiated) or \"pull\" (ETH1-initiated), and a definition of the method signature(s) an Ethereum 1 contract would need to support to handle this.  There is a channel on the Ethereum 2 R&D discord (#withdrawal-methods) where there is an on-going discussion about these areas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688219905/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688236401",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-688236401",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 688236401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODIzNjQwMQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T10:36:14Z",
    "updated_at": "2020-09-07T10:36:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mcdee Thanks for the insight, jumping on the #withdrawal-methods channel",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688236401/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713037071",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-713037071",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 713037071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzAzNzA3MQ==",
    "user": {
      "login": "vshvsh",
      "id": 3624893,
      "node_id": "MDQ6VXNlcjM2MjQ4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3624893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vshvsh",
      "html_url": "https://github.com/vshvsh",
      "followers_url": "https://api.github.com/users/vshvsh/followers",
      "following_url": "https://api.github.com/users/vshvsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vshvsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vshvsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vshvsh/subscriptions",
      "organizations_url": "https://api.github.com/users/vshvsh/orgs",
      "repos_url": "https://api.github.com/users/vshvsh/repos",
      "events_url": "https://api.github.com/users/vshvsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vshvsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T17:58:06Z",
    "updated_at": "2020-10-20T17:58:06Z",
    "author_association": "NONE",
    "body": "We at Lido believe that eth1 withdrawal addresses are crucial for eth2; without them, the network has a chance to centralize significantly in phases 0 and 1 and stay this way later due to the market's inertia; and good thing it's almost a non-issue development-wise. Therefore we propose to adopt it at the earliest point in time it's possible to do so (we believe this time is now).\r\n\r\nLet us explain the reasons:\r\n\r\n1. Eth2 staking is illiquid in Phases 0 and 1, meaning significant inventory risk for stakers. Stakers will have to lock up funds for a significant amount of time. \r\n2. Eth2 staking rewards are fairly low: yields in defi protocols are bigger (see \"[Why stake when you can borrow](https://arxiv.org/abs/2006.11156)\"). \r\n3. Eth2 staking is moderately complex and risky (remember Medalla debacles, and [Chase Wright's thorough Twitter thread on eth2](https://twitter.com/mysticryuujin/status/1308573304484245504)), and works best with 24/7 support, backup nodes, etc - all features of a professional stakers.\r\n4. There's no native delegation mechanism protocol for people to work with professional stakers seamlessly - there have to be legal agreements, kycs, etc. Staking with staking providers is cumbersome (complex legal agreements, KYC, waiting until after Phase 1 for rewards), or custodial, or both.\r\n5. These things taken together mean that eth2 staking in Phases 0 and 1 compared to defi is lower yield, comparable risk, much worse liquidity, and worse UX.\r\n\r\nApart from enthusiasts, most people won't stake themselves, or even using staking providers. The only staking option that can compete with defi yields is exchange-based liquid staking. Network validation will centralize on exchanges: even in networks where staking has better yields, no competing defi, and no year-long locks, exchanges take tens of percent of the total stake. In ethereum, early phases regular staking is so much worse than liquid exchange staking product-wise that we expect the numbers to be way higher.\r\n\r\nOn-chain staking derivatives are the only way to reasonably compete with custodial, exchange-based liquid staking and custodial staking. They can bring comparable UX, liquidity, security, and add permissionlessness, and defi compatibility, and, possibly, lack of custody. This is something people can and do build already - pioneered by RocketPool, and we at Lido are taking a shot at this too. \r\n\r\nThe biggest weakness of possible staking derivatives is withdrawal credentials. In current spec, those are EOAs, controlled by private keys. It can be improved by using threshold signatures to make it distributed (we're making software for this) but the better solution is to have something smart on the receiving end of the withdrawal. That way staking derivatives can become non-custodial, and remove big security hole along with a legal weakness.\r\n\r\nIt can be done by allowing `withdrawal_credentials` to point to an eth1 address as proposed here. The good news is that it doesn't require any changes in deposit contract, or eth2 clients (we checked Prysm and Lighthouse - they should work as is). It's purely a community consensus thing to agree on \"in the future, in Phase 1.5 or Phase 2 we will allow withdrawals on eth1 address\". ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713037071/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713176311",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-713176311",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 713176311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzE3NjMxMQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T22:28:11Z",
    "updated_at": "2020-10-20T22:28:11Z",
    "author_association": "MEMBER",
    "body": ">     2\\. yields in defi protocols are bigger\r\n\r\nI doubt that long term risk free returns on ETH in DeFi will exceed staking. Where should these yields come from? That would be counter all market logic. From what I can see right now, they are already lower than what is expected in staking (though I do not have a good market overview).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713176311/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713689154",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-713689154",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 713689154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzY4OTE1NA==",
    "user": {
      "login": "vshvsh",
      "id": 3624893,
      "node_id": "MDQ6VXNlcjM2MjQ4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3624893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vshvsh",
      "html_url": "https://github.com/vshvsh",
      "followers_url": "https://api.github.com/users/vshvsh/followers",
      "following_url": "https://api.github.com/users/vshvsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vshvsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vshvsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vshvsh/subscriptions",
      "organizations_url": "https://api.github.com/users/vshvsh/orgs",
      "repos_url": "https://api.github.com/users/vshvsh/repos",
      "events_url": "https://api.github.com/users/vshvsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vshvsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-21T16:12:11Z",
    "updated_at": "2020-10-21T16:12:11Z",
    "author_association": "NONE",
    "body": "For long-term yields in DeFi we have a pretty good historical example: Bitfinex funding rate. It's been floating around 10-20% APR on USD for a long time, just from organic demand from margin trading. Ergo, 10-20% rates can be sustainable for years. Not saying they will definitely stay in that range but that's a possibility. \r\n\r\nCurrent \"sustainable\" (not farming-related) lending rates are way lower in defi but I'd argue it's a second order effect of yield farming: supply and demand are in large part driven by protocol rewards these days, not just the ebb and flow of margin trades.\r\n\r\nDefi rates are not risk free, but neither is staking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/713689154/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/714274302",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-714274302",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 714274302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDI3NDMwMg==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T06:54:04Z",
    "updated_at": "2020-10-22T06:54:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't seen opposition to setting an eth1 contract address as withdrawal credentials. However, the withdrawal mechanism should be at least somewhat defined before that, and there are still many unknowns for it. Interested stakeholders (including me) are working into a draft proposal for the withdrawal mechanism which should be discussed in the Ethereum 2 R&D discord (#withdrawal-methods) channel",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/714274302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/714525818",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-714525818",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 714525818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDUyNTgxOA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T14:16:48Z",
    "updated_at": "2020-10-22T14:16:48Z",
    "author_association": "MEMBER",
    "body": "I see the main danger here that absent a bridge, and not knowing how a future bridge might actually work. So the only real specification we can write is withdrawing all the money using the contracts normal receive functionality, and any other functionalities that may be very desirable (initiating exit/withdrawal, fox example) couldn't really be specced without knowing more.\r\n\r\nThere's also a big danger in implementing this social convention without really having any end to end testing opportunity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/714525818/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/773668033",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-773668033",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 773668033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzY2ODAzMw==",
    "user": {
      "login": "leckylao",
      "id": 148800,
      "node_id": "MDQ6VXNlcjE0ODgwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/148800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leckylao",
      "html_url": "https://github.com/leckylao",
      "followers_url": "https://api.github.com/users/leckylao/followers",
      "following_url": "https://api.github.com/users/leckylao/following{/other_user}",
      "gists_url": "https://api.github.com/users/leckylao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leckylao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leckylao/subscriptions",
      "organizations_url": "https://api.github.com/users/leckylao/orgs",
      "repos_url": "https://api.github.com/users/leckylao/repos",
      "events_url": "https://api.github.com/users/leckylao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leckylao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T23:20:57Z",
    "updated_at": "2021-02-04T23:20:57Z",
    "author_association": "NONE",
    "body": "I think it's related to https://github.com/ethereum/eth2.0-specs/pull/2149. Feel free to remove if I am wrong",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/773668033/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/874987937",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2040#issuecomment-874987937",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2040",
    "id": 874987937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk4NzkzNw==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T18:29:30Z",
    "updated_at": "2021-07-06T18:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we can close with #2149",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/874987937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
