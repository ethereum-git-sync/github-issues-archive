{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/368",
  "id": 394254848,
  "node_id": "MDU6SXNzdWUzOTQyNTQ4NDg=",
  "number": 368,
  "title": "get_block_root handling of exception case",
  "user": {
    "login": "dangerousfood",
    "id": 4099038,
    "node_id": "MDQ6VXNlcjQwOTkwMzg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4099038?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dangerousfood",
    "html_url": "https://github.com/dangerousfood",
    "followers_url": "https://api.github.com/users/dangerousfood/followers",
    "following_url": "https://api.github.com/users/dangerousfood/following{/other_user}",
    "gists_url": "https://api.github.com/users/dangerousfood/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dangerousfood/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dangerousfood/subscriptions",
    "organizations_url": "https://api.github.com/users/dangerousfood/orgs",
    "repos_url": "https://api.github.com/users/dangerousfood/repos",
    "events_url": "https://api.github.com/users/dangerousfood/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dangerousfood/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-12-26T22:55:59Z",
  "updated_at": "2018-12-27T16:09:59Z",
  "closed_at": "2018-12-27T16:09:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In the [get_block_root](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#get_block_root) method:\r\n\r\n```\r\nget_block_root\r\ndef get_block_root(state: BeaconState,\r\n                   slot: int) -> Hash32:\r\n    \"\"\"\r\n    Returns the block root at a recent ``slot``.\r\n    \"\"\"\r\n    assert state.slot <= slot + LATEST_BLOCK_ROOTS_LENGTH\r\n    assert slot < state.slot\r\n    return state.latest_block_roots[slot % LATEST_BLOCK_ROOTS_LENGTH]\r\n```\r\n\r\nIf the two assertion fails is this an exception case?",
  "closed_by": {
    "login": "dangerousfood",
    "id": 4099038,
    "node_id": "MDQ6VXNlcjQwOTkwMzg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4099038?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dangerousfood",
    "html_url": "https://github.com/dangerousfood",
    "followers_url": "https://api.github.com/users/dangerousfood/followers",
    "following_url": "https://api.github.com/users/dangerousfood/following{/other_user}",
    "gists_url": "https://api.github.com/users/dangerousfood/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dangerousfood/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dangerousfood/subscriptions",
    "organizations_url": "https://api.github.com/users/dangerousfood/orgs",
    "repos_url": "https://api.github.com/users/dangerousfood/repos",
    "events_url": "https://api.github.com/users/dangerousfood/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dangerousfood/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/450041837",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/368#issuecomment-450041837",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/368",
    "id": 450041837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDA0MTgzNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-26T23:41:28Z",
    "updated_at": "2018-12-26T23:41:28Z",
    "author_association": "MEMBER",
    "body": "`assert`s need to be handled as you see fit in your codebase.\r\nIn most of the helpers, the asserts are putting the bounds on what data can be retrieved from state at the current state.\r\n\r\nIf processing a block caused an assert to fail, then the block would be seen as invalid because the state transition can not be processed due to some exceptional data being present. In this case, I might throw something like a `ValidationError` or `ValueError` that would be caught by an outer block processor that then discards the block as invalid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/450041837/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
