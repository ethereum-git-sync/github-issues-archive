{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3113",
  "id": 1454837229,
  "node_id": "I_kwDOCOoGbc5Wtw3t",
  "number": 3113,
  "title": "EIP-4844: blobs / blocks by root edge case",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4163819084,
      "node_id": "LA_kwDOCOoGbc74LtZM",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/eip-4844",
      "name": "eip-4844",
      "color": "A28C37",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-11-18T10:16:43Z",
  "updated_at": "2022-11-22T12:11:09Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "When receiving a block with slot close and after EIP4844_FORK_EPOCH with an unknown parent you don't know if the parent will be pre or post EIP4844_FORK_EPOCH. So, should you:\r\n\r\n- Use `beacon_block_and_blobs_sidecar_by_root`:\r\n  - Parent is pre EIP4844: The responder will either error or return empty, spec is not specified. If empty it's unclear if the responder does not have the block or if the block is pre EIP4844. However if it errors, how to handle a mix case where a request of multiple roots, some are pre EIP4844 and some post? If we use a per response_chunk error code for that case, at least Lodestar's logic aborts the entire response stream on the first status != success \r\n  - Parent is post EIP4844: Ok\r\n- Use `beacon_blocks_by_root`:\r\n  - Parent is pre EIP4844: Ok\r\n  - Parent is post EIP4844: According to the spec `After EIP4844_FORK_EPOCH, BeaconBlocksByRootV2 is replaced by BeaconBlockAndBlobsSidecarByRootV1`. How should the client respond for this case, and in the case of mixed roots per and post EIP4844? Arguments from first case apply here too.\r\n\r\nIn Lodestar implementation we currently race both request with 1 root max per request. However would be good to have a well defined interaction between EIP4844_FORK_EPOCH and finalizing EIP4844_FORK_EPOCH.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1320830806",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3113#issuecomment-1320830806",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113",
    "id": 1320830806,
    "node_id": "IC_kwDOCOoGbc5OukdW",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-19T08:09:58Z",
    "updated_at": "2022-11-19T08:09:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Shouldn't you rename the issue \"... by root edge case\"?\nMy gut says we should allow the coupled request to retrieve pre 4844. Clients should respond with a zero sidecar. But it might create ssz containers issues (a pre 4844 block into a 4844 blockandsidecar container).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1320830806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1323568375",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3113#issuecomment-1323568375",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3113",
    "id": 1323568375,
    "node_id": "IC_kwDOCOoGbc5O5Az3",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-22T12:11:09Z",
    "updated_at": "2022-11-22T12:11:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another option is let `beacon_block_and_blobs_sidecar_by_root` return a SignedBeaconBlock instead of `BlobsAndBlobsSidecar` when block is pre 4844.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1323568375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
