{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/941",
  "id": 433917240,
  "node_id": "MDU6SXNzdWU0MzM5MTcyNDA=",
  "number": 941,
  "title": "get_base_reward in GENESIS_EPOCH is 0, so all rewards are zero",
  "user": {
    "login": "dankrad",
    "id": 6130607,
    "node_id": "MDQ6VXNlcjYxMzA2MDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dankrad",
    "html_url": "https://github.com/dankrad",
    "followers_url": "https://api.github.com/users/dankrad/followers",
    "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
    "organizations_url": "https://api.github.com/users/dankrad/orgs",
    "repos_url": "https://api.github.com/users/dankrad/repos",
    "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dankrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043866,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:bug",
      "name": "general:bug",
      "color": "DD1C1A",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1324751386,
      "node_id": "MDU6TGFiZWwxMzI0NzUxMzg2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:genesis",
      "name": "scope:genesis",
      "color": "EB7A77",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/2",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/2",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/2/labels",
    "id": 4242872,
    "node_id": "MDk6TWlsZXN0b25lNDI0Mjg3Mg==",
    "number": 2,
    "title": "Phase 0 Frozen",
    "description": "Can't hold it back anymore.",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 7,
    "state": "closed",
    "created_at": "2019-04-19T01:16:44Z",
    "updated_at": "2019-07-07T19:36:38Z",
    "due_on": "2019-06-30T07:00:00Z",
    "closed_at": "2019-06-29T22:02:30Z"
  },
  "comments": 9,
  "created_at": "2019-04-16T18:11:51Z",
  "updated_at": "2019-04-24T18:42:12Z",
  "closed_at": "2019-04-24T18:42:12Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "`get_base_reward` uses `get_previous_total_balance`, but this returns 0 during the genesis epoch. So all rewards are zero in the `GENESIS_EPOCH`.\r\n\r\nWhy are we using `get_previous_total_balance` here and not `get_total_balance`? The latter seems to make more sense to me.\r\n\r\nIf there is a good reason why we want to use `get_previous_total_balance`, we can set         `validator.activation_epoch = GENESIS_EPOCH - 1` for validators activated at genesis?",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483842489",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483842489",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483842489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg0MjQ4OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-16T21:03:46Z",
    "updated_at": "2019-04-16T21:03:46Z",
    "author_association": "MEMBER",
    "body": "The key here is that rewards are given for activity during the previous epoch. Because we want to give all attestations an entire epoch to be included on chain, we have to wait until the end of the following epoch to reward attestations from the previous.\r\n\r\nSome of this changes here -- https://github.com/ethereum/eth2.0-specs/pull/896\r\n\r\nRewards are given for activity in the previous epoch so we just skip rewards calculations during the genesis epoch. It is using previous_total_balance to reward based upon your balance during the epoch in which you produced the `attestation`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483842489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483933401",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483933401",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483933401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzkzMzQwMQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T04:34:38Z",
    "updated_at": "2019-04-17T04:34:38Z",
    "author_association": "MEMBER",
    "body": "So ignoring #896, not sure if it has been fixed there, I think this is actually a bug.\r\n\r\nAt the end of GENESIS_EPOCH, we do the per-epoch processing for the GENESIS_EPOCH. So at that time, 64 blocks and the corresponding attestations will have been processed, and should be rewarded. However, get_base_reward will be called, and will always return 0 (you can test this by putting an assert False in the return 0 case, all test cases with epoch transitions will fail). This is because at GENESIS_EPOCH-1, the total balance was actually 0.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483933401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483947322",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483947322",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483947322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk0NzMyMg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T05:54:54Z",
    "updated_at": "2019-04-17T05:54:54Z",
    "author_association": "MEMBER",
    "body": "> At the end of GENESIS_EPOCH, we do the per-epoch processing for the GENESIS_EPOCH.\r\n\r\nThe processing of `GENESIS_EPOCH` attestation rewards happens at the end `GENESIS_EPOCH + 1` (as opposed to `GENESIS_EPOCH`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483947322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483952851",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483952851",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483952851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk1Mjg1MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T06:20:48Z",
    "updated_at": "2019-04-17T06:20:48Z",
    "author_association": "MEMBER",
    "body": "> > At the end of GENESIS_EPOCH, we do the per-epoch processing for the GENESIS_EPOCH.\r\n> \r\n> The processing of `GENESIS_EPOCH` attestation rewards happens at the end `GENESIS_EPOCH + 1` (as opposed to `GENESIS_EPOCH`).\r\n\r\nI see, but then why are we using the current balance for the validator, but the previous epoch balance for the total balance? I don't understand the logic behind this.\r\n\r\nAlso, I would suggest we add more context for logic like this. so that code like this can be understood easily without needing to refer to previous discussion (also goes with #942).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483952851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483961613",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483961613",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483961613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk2MTYxMw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T06:56:32Z",
    "updated_at": "2019-04-17T06:56:32Z",
    "author_association": "MEMBER",
    "body": "> why are we using the current balance for the validator, but the previous epoch balance for the total balance?\r\n\r\nGood question! The reason is that we would need two balances per validator. See the note in the spec:\r\n\r\n> \"Total balances computed for the previous epoch might be marginally different than the actual total balances during the previous epoch transition. Due to the tight bound on validator churn each epoch and small per-epoch rewards/penalties, the potential balance difference is very low and only marginally affects consensus safety.\"\r\n\r\n> I would suggest we add more context for logic like this. so that code like this can be understood easily without needing to refer to previous discussion\r\n\r\nYes, there's still a lot of work on presentation and education. One of the things I intend to do when the spec is finalized is write the Ethereum 2.0 \"transparent paper\" which provides context for various design decisions, in addition to being written with readability as the top priority.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483961613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483979191",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483979191",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483979191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk3OTE5MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T07:57:35Z",
    "updated_at": "2019-04-17T07:57:35Z",
    "author_association": "MEMBER",
    "body": "> Good question! The reason is that we would need two balances per validator. See the note in the spec:\r\n\r\nOK, I understand. Would it not be slightly more logical to just use the current balance for the square root as well, to make it at least consistent in itself? You could well argue that the real balance is just always \"one epoch behind\" and then this would make it consistent (except for top-ups, but they are not handled correctly by the current logic either).\r\n\r\n> Yes, there's still a lot of work on presentation and education. One of the things I intend to do when the spec is finalized is write the Ethereum 2.0 \"transparent paper\" which provides context for various design decisions, in addition to being written with readability as the top priority.\r\n\r\nI understand, but I think it's slightly backward. I think usually the right thing (except for some really nitty gritty stuff) is to have a good mental model, and then code that implements it. Then if the mental model does not fit the code, the code is wrong (or the mental model needs to be adjusted).\r\n\r\nWith the current approach, it is very difficult to find bugs by methods other than writing tests, as when I read it I first need to build my mental model from the code (which is error prone, as we can see in this instance). Technically, if you say that the code is the spec, then there can be no bugs :P",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483979191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483982885",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483982885",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483982885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk4Mjg4NQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T08:08:58Z",
    "updated_at": "2019-04-17T08:08:58Z",
    "author_association": "MEMBER",
    "body": "> the real balance is just always \"one epoch behind\"\r\n\r\nInteresting\r\n\r\n> except for top-ups, but they are not handled correctly by the current logic either\r\n\r\nHow are top-ups currently incorrectly handled?\r\n\r\n> With the current approach, it is very difficult to find bugs by methods other than writing tests\r\n\r\nPlease submit PRs fixing the current approach :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483982885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483998780",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-483998780",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 483998780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk5ODc4MA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T08:57:22Z",
    "updated_at": "2019-04-17T08:57:22Z",
    "author_association": "MEMBER",
    "body": "> How are top-ups currently incorrectly handled?\r\n\r\nBy this I mean that a validator can attest in epoch N, deposit (if we allow that, which it currently looks like) in epoch N+1, and get their rewards as if they had had the new balance already in epoch N.\r\n\r\n> Please submit PRs fixing the current approach :)\r\n\r\nI can do that if I get buy in on #942 :) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/483998780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485405781",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/941#issuecomment-485405781",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/941",
    "id": 485405781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQwNTc4MQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-22T12:25:21Z",
    "updated_at": "2019-04-22T12:25:21Z",
    "author_association": "MEMBER",
    "body": "I think this is addressed by #949. Please close if so :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485405781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
