{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1110",
  "id": 447167486,
  "node_id": "MDU6SXNzdWU0NDcxNjc0ODY=",
  "number": 1110,
  "title": "exposed_derived_secrets dramatically increases hash_tree_root time",
  "user": {
    "login": "CarlBeek",
    "id": 12530043,
    "node_id": "MDQ6VXNlcjEyNTMwMDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CarlBeek",
    "html_url": "https://github.com/CarlBeek",
    "followers_url": "https://api.github.com/users/CarlBeek/followers",
    "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
    "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
    "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
    "repos_url": "https://api.github.com/users/CarlBeek/repos",
    "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-05-22T14:22:48Z",
  "updated_at": "2019-05-28T09:04:10Z",
  "closed_at": "2019-05-28T09:04:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This issue is for visibility purposes. It is not a problem per se as it can be handled with intelligent caches, but its impact on test running-times is so large that I feel it is worth noting. (Also the caches in the tests are not this intelligent yet.)\r\n\r\nIn phase 1, an `exposed_derived_secrets` vector is added to the BeaconState:\r\n`'exposed_derived_secrets': [['uint64'], EARLY_DERIVED_SECRET_PENALTY_MAX_FUTURE_EPOCHS]`, where `EARLY_DERIVED_SECRET_PENALTY_MAX_FUTURE_EPOCHS = 2**14`. \r\n\r\nBasically, this list is huge and pushes tests from ~55 second run time to ~300 seconds. (This can be partially mitigated by reducing `2**14` to `2**12` in the constant_presets, but `exposed_derived_secrets` still takes long to be list-comprehended.)",
  "closed_by": {
    "login": "CarlBeek",
    "id": 12530043,
    "node_id": "MDQ6VXNlcjEyNTMwMDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CarlBeek",
    "html_url": "https://github.com/CarlBeek",
    "followers_url": "https://api.github.com/users/CarlBeek/followers",
    "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
    "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
    "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
    "repos_url": "https://api.github.com/users/CarlBeek/repos",
    "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/494953181",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-494953181",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 494953181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDk1MzE4MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T20:12:48Z",
    "updated_at": "2019-05-22T20:12:48Z",
    "author_association": "MEMBER",
    "body": "Huh. Is this dominated by the hashing time? Would this be fixed by reintroducing the hash cache?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/494953181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/494956085",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-494956085",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 494956085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDk1NjA4NQ==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T20:20:31Z",
    "updated_at": "2019-05-22T20:20:31Z",
    "author_association": "MEMBER",
    "body": "Nope, this is with a hash cache implemented. The majority of the time is spent doing list comprehension in `hash_tree_root`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/494956085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495898939",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-495898939",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 495898939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTg5ODkzOQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-25T09:50:50Z",
    "updated_at": "2019-05-25T09:50:50Z",
    "author_association": "MEMBER",
    "body": "At the danger of introducing a kitchen sink into SSZ, I wonder if it is feasible to have a dict structure at reasonable cost/complexity... that would remove the need for a very long static list to store these values.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495898939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495982076",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-495982076",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 495982076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk4MjA3Ng==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-26T09:02:31Z",
    "updated_at": "2019-05-26T09:02:31Z",
    "author_association": "MEMBER",
    "body": ">At the danger of introducing a kitchen sink into SSZ, I wonder if it is feasible to have a dict structure at reasonable cost/complexity... that would remove the need for a very long static list to store these values.\r\n\r\nHmm, interesting idea. While this would be the perfect use case and I think we could benefit in other places too, the added complexity may not be worth it.\r\n\r\nAdding dicts also means we need to add the cleanup/pruning logic which is currently handled elegantly by circular arrays. \r\n\r\nThis may be a time to revert to design goal 0:\r\n> to minimize complexity, even at the cost of some losses in efficiency\r\n\r\nAlternatively, we could also just rename SSZ to Complex SerialiZe.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495982076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495985336",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-495985336",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 495985336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk4NTMzNg==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-26T09:58:46Z",
    "updated_at": "2019-05-26T09:58:54Z",
    "author_association": "MEMBER",
    "body": ">    to minimize complexity, even at the cost of some losses in efficiency\r\n\r\nI agree. I actually don't know what the most reasonable dict structure in a Merkle tree looks like, was just wondering if someone would contribute it. But yes, the current construction has a very elegent cleanup logic and losing it is probably not worth it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/495985336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/496430480",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1110#issuecomment-496430480",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1110",
    "id": 496430480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjQzMDQ4MA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T09:04:09Z",
    "updated_at": "2019-05-28T09:04:09Z",
    "author_association": "MEMBER",
    "body": "I am closing this issue as I believe it has served its purpose of bringing awareness to this problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/496430480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
