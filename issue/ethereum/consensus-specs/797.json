{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/797",
  "id": 422041441,
  "node_id": "MDU6SXNzdWU0MjIwNDE0NDE=",
  "number": 797,
  "title": "Block header signature issue",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043866,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:bug",
      "name": "general:bug",
      "color": "DD1C1A",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-03-18T05:19:41Z",
  "updated_at": "2019-03-28T23:04:46Z",
  "closed_at": "2019-03-28T23:04:46Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "`state.latest_block_header.signature` is different between producing and processing a block and this is causing block processing to fail because of a mismatch on `block.state_root`.\r\n\r\n### Producing\r\n\r\nWhen calling `per_block_processing`, `state.latest_block_header.signature` is `EMPTY_SIGNATURE`.\r\n\r\nIt's impossible to have the real block signature here as you need the output of `per_block_processing(..)` (the updated state root) before you can produce the `state.latest_block_header.signature` and the value of `state.latest_block_header.signature` changes the state root, which changes the signature, and so on.\r\n\r\n### Processing\r\n\r\nWhen calling `per_block_processing`, `state.latest_block_header.signature` is (hopefully) a real block signature.",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473777431",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-473777431",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 473777431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzc3NzQzMQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T05:43:36Z",
    "updated_at": "2019-03-18T05:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Initially, I thought this could be fixed by ensuring that `get_temporary_block_header(..)` uses `EMPTY_SIGNATURE` instead of `block.signature`.\r\n\r\nHowever, that raises another issue: all the hashes in latest block roots are just hashes of:\r\n\r\n- `slot`\r\n- `previous_block_root`\r\n- `block_body_root`\r\n\r\nWe no longer have `signature`, which represented a ton of information (state root, fork, etc).\r\n\r\nI'm guessing this arose as a desire to remove `previous_block_root` as a parameter to `per_slot_processing`. Thinking about that some more, I'm not sure you can avoid passing the previous block (or its signature) to the next state if you want the block signatures in the state. If the block needs to sign across the state, it's impossible for the state to contain the block signature. Your only solution is to store the block signature and pass it into a state that isn't included in the block signature (the next state).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473777431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473853705",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-473853705",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 473853705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzg1MzcwNQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T10:27:46Z",
    "updated_at": "2019-03-18T10:28:09Z",
    "author_association": "MEMBER",
    "body": "Yeah, you're right there's a circular dependency. If we want the pre-state root of block N+1 to include a commitment to the signature, then the signature can't be over the post-state-root of block N as that's the same as the pre-state root of block N+1.\r\n\r\nI'm inclined to say `get_temporary_block_header` using `EMPTY_SIGNATURE` is a pretty clean solution. But note that this _does_ introduce a slight change to protocol properties: the block signature is no longer part of the block hash. I suppose this is meaningless because at least with the current BLS scheme there's only one possible valid signature for each block hash anyway, but it is something that we'd need to keep in mind in case we change the signature algo in the future (eg. we'd need to guard against DoS issues arising from a proposer issuing 1000 identical blocks with 1000 different but all valid signatures).\r\n\r\n> We no longer have signature, which represented a ton of information (state root, fork, etc).\r\n\r\nI don't think we need to worry about this, because the state root itself _does_ get included in the header (at the start of processing the _next_ block).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473853705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473924620",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-473924620",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 473924620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzkyNDYyMA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T14:08:40Z",
    "updated_at": "2019-03-18T14:08:40Z",
    "author_association": "MEMBER",
    "body": "> there's a circular dependency\r\n\r\nArgh, I messed up!\r\n\r\n> I suppose this is meaningless because at least with the current BLS scheme there's only one possible valid signature for each block hash anyway\r\n\r\nOne of the considerations discussed with @djrtwo is cleanliness around identifier schemes. We probably want to have a consistent \"canonical\" notion of message identifier, if anything for block explorers. If we exclude signatures then we may end up with the two types of identifiers used in the wild. Also, if we exclude signatures from block identifiers we may want to the same thing for attestations, transfers, etc.\r\n\r\nMaybe the best approach is simply to revert to a `(pre_state, previous_block_root, block) -> (post_state, error)` state transition function with \"oracle access\" to `previous_block_root`. How much do you value a `(pre_state, block) -> (post_state, error)` state transition function @vbuterin?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473924620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473925389",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-473925389",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 473925389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzkyNTM4OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T14:10:42Z",
    "updated_at": "2019-03-18T15:51:07Z",
    "author_association": "MEMBER",
    "body": "<s>Another approach would be to add a `previous_block_signature` field to `BeaconBlock`s (and possibly remove `previous_block_root`).</s>",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473925389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474009012",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-474009012",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 474009012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDAwOTAxMg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T17:03:07Z",
    "updated_at": "2019-03-18T17:05:25Z",
    "author_association": "MEMBER",
    "body": "Ok, I think I've found a satisfactory solution (see https://github.com/ethereum/eth2.0-specs/pull/799). Basically we remove `latest_block_header` and instead cache `hash_tree_root(block)` after checking `block.state_root == hash_tree_root(state)`. This \"hack\" allows us to maintain a clean `(pre_state, block) -> (post_state, error)` state transition function. It can also be rephrased as a state transition function with oracle access to `previous_block_root` if people prefer thinking about it this way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474009012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474142109",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-474142109",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 474142109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDE0MjEwOQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T23:36:59Z",
    "updated_at": "2019-03-18T23:42:03Z",
    "author_association": "MEMBER",
    "body": "I'm currently thinking that the cleanest way forward is to use `signed_root(block)` for both signing and prev_block purposes. This allows us to use the current mechanics and avoid any sort of oracle because the relevant block information is cached in the `latest_block_header` except for the `state_root` which cached at the next slot.\r\n\r\n@JustinDrake We can use `signed_root(obj)` for \"canonical\" identifier for anything that is signed and `hash_tree_root` otherwise.\r\n\r\nEDIT: I was wondering why this didn't come up in tests and realized it is essentially what was being done in the tests anyway. I was assuming `latest_block_header` was valid in state and useful and was thus building the chain the using `hash_tree_root(latest_block_header)` as the prev_block. Modifying the `signed_root(block)` would be trivial and do essentially the same thing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474142109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474798527",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-474798527",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 474798527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDc5ODUyNw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T11:55:52Z",
    "updated_at": "2019-03-20T11:55:52Z",
    "author_association": "MEMBER",
    "body": "> Basically we remove latest_block_header and instead cache hash_tree_root(block) after checking block.state_root == hash_tree_root(state).\r\n\r\nThe main challenge with this is that it introduces another point of ugliness which is the distinction between \"signed post-state root\" and \"real post-state root\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474798527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474800192",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-474800192",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 474800192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDgwMDE5Mg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T12:01:21Z",
    "updated_at": "2019-03-20T12:03:12Z",
    "author_association": "MEMBER",
    "body": "Here's what seems to be a complete categorization of alternatives:\r\n\r\n1. Roots that go in the state don't include signatures, and those signatures forever \"disappear\" from the state transition function's knowledge; they never get merkled in anywhere\r\n2. Signatures get added in after calculating post-state roots\r\n3. Signatures get passed as an argument to the next block's state transition function\r\n4. The block gets passed as an argument to the next block's state transition function\r\n5. The next block includes the signature of the _previous_ block. At network layer, blocks have to be bundled with proposer signatures.\r\n\r\n(1) is current status quo, (4) is original status quo. (3) is just a version of (4). (5) seems bad because it means that \"a chain\" does not contain enough information to build on top of the chain (namely, the signature). (2) seems annoying because it creates the distinction between \"signed post-state root\" and \"real post-state root\", unless we change the rule so the state root of a block is the pre-state root, which seems like a bad idea.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474800192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474882642",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-474882642",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 474882642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDg4MjY0Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T15:24:24Z",
    "updated_at": "2019-03-20T15:24:24Z",
    "author_association": "MEMBER",
    "body": "I'm opting for (1) with the modification that we cache block roots as `signed_root(block)` to be very explicit about what the root is and not have to have clients set `block.signature = EMPTY_SIGNATURE` before getting a block root.\r\n\r\nPR here https://github.com/ethereum/eth2.0-specs/pull/816",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/474882642/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/477802665",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/797#issuecomment-477802665",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/797",
    "id": 477802665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzgwMjY2NQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T23:04:46Z",
    "updated_at": "2019-03-28T23:04:46Z",
    "author_association": "MEMBER",
    "body": "This was fixed in 0.5.1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/477802665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
