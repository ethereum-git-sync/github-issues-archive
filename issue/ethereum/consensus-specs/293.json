{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/293",
  "id": 390028705,
  "node_id": "MDU6SXNzdWUzOTAwMjg3MDU=",
  "number": 293,
  "title": "Document error conditions",
  "user": {
    "login": "arnetheduck",
    "id": 1382986,
    "node_id": "MDQ6VXNlcjEzODI5ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arnetheduck",
    "html_url": "https://github.com/arnetheduck",
    "followers_url": "https://api.github.com/users/arnetheduck/followers",
    "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
    "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
    "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
    "repos_url": "https://api.github.com/users/arnetheduck/repos",
    "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-12-12T01:40:05Z",
  "updated_at": "2019-01-31T01:47:05Z",
  "closed_at": "2019-01-31T01:47:05Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In several places, the specification notes that properties should be verified (ie `Verify that block.slot == state.slot`).\r\n\r\nSince these checks are related to new blocks, it seems like simply ignoring the block and doing normal slot processing is the right thing, though this should be made clear in the spec, specially given the new per-slot processing.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448458158",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-448458158",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 448458158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODQ1ODE1OA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T03:34:08Z",
    "updated_at": "2018-12-19T03:34:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another nasty condition: \r\nthe last thing to check after applying a block is the state root - if this verification fails, all changes must be unwinded, and epoch processing must be done anew, without the \"bad\" block",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448458158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448496407",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-448496407",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 448496407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODQ5NjQwNw==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T07:29:49Z",
    "updated_at": "2018-12-19T08:12:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wouldn't we only write the state to the db if `processBlock()` succeeds ?\r\nMy understanding of the spec currently is:\r\n\r\n```py\r\nblockIsProcessed, state = processBlock(block)\r\nif blockIsProcessed:\r\n    WriteStateToDB(state)\r\n```\r\nthat way we dont need to commit changes until we pass all the block processing conditions\r\n\r\nEdit: nvm, ignore the above, I get your point now. Yeah that would be a valid concern, unwinding both slot and epoch transitions would be inefficient as they are both computationally heavy tasks.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448496407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448631756",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-448631756",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 448631756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODYzMTc1Ng==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T15:18:57Z",
    "updated_at": "2018-12-19T15:18:57Z",
    "author_association": "MEMBER",
    "body": "@arnetheduck That could be the most convincing argument for putting per-block processing after per-epoch processing I've seen yet.\r\n\r\n@nisdas you only write after successful processing but you still have to do a bunch of computation if you choose to try to process a block",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448631756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448632610",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-448632610",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 448632610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODYzMjYxMA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T15:21:21Z",
    "updated_at": "2018-12-19T15:21:21Z",
    "author_association": "MEMBER",
    "body": "@arnetheduck As per your original comment. It all depends on your local processing strategy.\r\nThat said, I'm more and more convinced that doing `per-slot` (which includes epoch) and then `per-block` gives us a more flexible configuration for clients to be clever about how they choose to do things locally",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448632610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/449413127",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-449413127",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 449413127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTQxMzEyNw==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T15:11:52Z",
    "updated_at": "2018-12-21T15:11:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@djrtwo what I like most of all about the epoch-first approach is that the block processing then no longer depends on an intermediate state where `state.slot` has been updated, but many of the fields that are linked to it have not - it keeps those related state changes closer to each other.\r\n\r\nthat said, I haven't analyzed the impact it would actually have in terms of simplicity, on the block-processing side of things, in terms of adjusting the various indices, making sure there's enough coverage of randomness etc",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/449413127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/449413347",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-449413347",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 449413347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTQxMzM0Nw==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T15:12:47Z",
    "updated_at": "2018-12-21T15:12:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "ie one obvious downside is that when you do it that way, there's no state ever that has an empty work list - there will always be attestations waiting to be processed in the state..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/449413347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/459182734",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/293#issuecomment-459182734",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/293",
    "id": 459182734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTE4MjczNA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T01:47:05Z",
    "updated_at": "2019-01-31T01:47:05Z",
    "author_association": "MEMBER",
    "body": "Spec notes that unhandled failed asserts in blocks are considered invalid\r\n\r\nhttps://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#notation",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/459182734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
