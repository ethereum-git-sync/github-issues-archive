{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1528",
  "id": 538726770,
  "node_id": "MDU6SXNzdWU1Mzg3MjY3NzA=",
  "number": 1528,
  "title": "[Networking] Gossipsub content-addressed messages",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-12-16T22:59:16Z",
  "updated_at": "2020-01-03T23:55:19Z",
  "closed_at": "2020-01-03T23:55:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Currently, gossipsub uses `source_peer_id + sequence_number` to address the messages sent across the gossipsub network. If a client re-publishes a seen message, this will look like a new message to all other peers. This can lead to duplicate messages on the network, which then needs to be filtered at the application layer. \r\n\r\nRust and go (https://github.com/libp2p/go-libp2p-pubsub/pull/248) now have the ability to customise  the message id of gossipsub messages. I propose we set the gossipsub message id to:\r\n`base64(sha256(data))` where `data` is the gossipsub protobuf `data` field which typically contains our ssz-encoded data or snappy-compressed data. \r\n\r\nThis way, gossipsub will filter out duplicate messages before notifying the application layer. In principle, we then just need to verify the hash at the application layer to ensure duplicates aren't sent/received. ",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566470661",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566470661",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566470661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjQ3MDY2MQ==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T10:00:43Z",
    "updated_at": "2019-12-17T10:00:43Z",
    "author_association": "MEMBER",
    "body": "@AgeManning \r\n> If a client re-publishes a seen message,\r\n\r\nIs it considered to be malicious client behavior? Or you mean some real use case?\r\n\r\nIf this is to protect from malicious clients then I don't understand why it's a problem to filter the stuff on the application layer? The duplicates would be filtered on app layer and would not be propagated. The same way as any other invalid payload (e.g. invalid validator signature or whatever) would be filtered on the app layer and not propagated to the network\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566470661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566510305",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566510305",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566510305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUxMDMwNQ==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T11:55:21Z",
    "updated_at": "2019-12-17T12:04:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a real use case, Prysm for all gossip messages are re-publishing them, which changes the source id and sequence number making old messages look like new ones. As I understand, this is because the API to validate messages in go doesn't simply provide a method for validation then re-propagation. \r\n\r\nCurrently there is nothing in the specification that prevents clients from re-publishing seen messages, so I don't think this is strictly malicious behaviour.  \r\n\r\nFor our use, we don't particularly care about the source of the message, mainly just it's contents, so it makes sense (at least to me) to content-address messages to prevent duplication at the gossip layer.\r\n\r\nIf a client fails to filter at the application layer (for whatever reason) and re-propagates a message to a client that re-publishes the message, I think it's possible to get into propagation loops of the same message which spams the gossip channel. This would be one extra step to prevent such scenarios (even though I agree this could be solved at the application layer). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566510305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566511343",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566511343",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566511343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUxMTM0Mw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T11:58:28Z",
    "updated_at": "2019-12-17T11:58:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a fun side-effect, messages will be a few bytes smaller also :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566511343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566540862",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566540862",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566540862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjU0MDg2Mg==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T13:27:27Z",
    "updated_at": "2019-12-17T13:27:27Z",
    "author_association": "MEMBER",
    "body": "> As I understand, this is because the API to validate messages in go doesn't simply provide a method for validation then re-propagation.\r\n\r\nOh, this sounds rather like a Go implementation issue. \r\nIMHO validating and re-publishing doesn't look like the way the Gossip is intended to be used :( \r\n\r\nOtherwise content-addressing looks ok but we may need to consider hashing computation overhead and possible related DoS attacks ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566540862/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566560862",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566560862",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566560862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjU2MDg2Mg==",
    "user": {
      "login": "vyzo",
      "id": 36426,
      "node_id": "MDQ6VXNlcjM2NDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/36426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vyzo",
      "html_url": "https://github.com/vyzo",
      "followers_url": "https://api.github.com/users/vyzo/followers",
      "following_url": "https://api.github.com/users/vyzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vyzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vyzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vyzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vyzo/orgs",
      "repos_url": "https://api.github.com/users/vyzo/repos",
      "events_url": "https://api.github.com/users/vyzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vyzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T14:20:25Z",
    "updated_at": "2019-12-17T14:20:25Z",
    "author_association": "NONE",
    "body": "This isn't true, the go implementation has validators; messages are only propagated if they pass validation.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566560862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566561557",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566561557",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566561557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjU2MTU1Nw==",
    "user": {
      "login": "vyzo",
      "id": 36426,
      "node_id": "MDQ6VXNlcjM2NDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/36426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vyzo",
      "html_url": "https://github.com/vyzo",
      "followers_url": "https://api.github.com/users/vyzo/followers",
      "following_url": "https://api.github.com/users/vyzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vyzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vyzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vyzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vyzo/orgs",
      "repos_url": "https://api.github.com/users/vyzo/repos",
      "events_url": "https://api.github.com/users/vyzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vyzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T14:21:55Z",
    "updated_at": "2019-12-17T14:22:42Z",
    "author_association": "NONE",
    "body": "Note that the validators don't have to return at once, they can take a while to complete and that's fine.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566561557/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566623492",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566623492",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566623492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjYyMzQ5Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T16:11:21Z",
    "updated_at": "2019-12-17T16:11:21Z",
    "author_association": "MEMBER",
    "body": "I support this and the `base64(sha256(data))` looks good. Want to put together a PR @AgeManning? \r\n\r\nIn the general case, it seems that libp2p pubsub should handle this for us as long as we don't re-publish messages after validation. That said, there are cases in which messages might very well be published by two independent nodes and in that case, it would be advantageous to see them as the same message within pubsub.\r\n\r\nThe example I'm thinking of is one ValidatorClient (VC) connected to multiple BeaconNodes (BN). In this type of setup a VC might simultaneously publish signed messages to more than one BN to add some redundancy and potentially some speed gains in propagation.\r\n\r\nIt should be noted that we still need application layer validation of non-duplicates for the `AggregateAndProof` messages on `beacon_aggregate_and_proof` pubsub topic. Two \"aggregators\" might compute the same aggregate attestation but have a different \"proof\" signature in the wrapper container. A naive `base64(sha256(data))` would not catch the duplicate attestation in this case. This validation is already in the networking spec and should remain there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566623492/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566636977",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-566636977",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 566636977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjYzNjk3Nw==",
    "user": {
      "login": "vyzo",
      "id": 36426,
      "node_id": "MDQ6VXNlcjM2NDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/36426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vyzo",
      "html_url": "https://github.com/vyzo",
      "followers_url": "https://api.github.com/users/vyzo/followers",
      "following_url": "https://api.github.com/users/vyzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vyzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vyzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vyzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vyzo/orgs",
      "repos_url": "https://api.github.com/users/vyzo/repos",
      "events_url": "https://api.github.com/users/vyzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vyzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T16:21:23Z",
    "updated_at": "2019-12-17T16:21:23Z",
    "author_association": "NONE",
    "body": "If you are using the hash as the message ID, then they won't get republished (as long as they are within the time cache window).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566636977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/570733338",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1528#issuecomment-570733338",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1528",
    "id": 570733338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDczMzMzOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-03T23:55:19Z",
    "updated_at": "2020-01-03T23:55:19Z",
    "author_association": "MEMBER",
    "body": "closed via #1538",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/570733338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
