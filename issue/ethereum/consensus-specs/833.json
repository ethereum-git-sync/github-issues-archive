{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/833",
  "id": 424280604,
  "node_id": "MDU6SXNzdWU0MjQyODA2MDQ=",
  "number": 833,
  "title": "Issuance rate parameterization under adversarial conditions",
  "user": {
    "login": "adlerjohn",
    "id": 3290375,
    "node_id": "MDQ6VXNlcjMyOTAzNzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3290375?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adlerjohn",
    "html_url": "https://github.com/adlerjohn",
    "followers_url": "https://api.github.com/users/adlerjohn/followers",
    "following_url": "https://api.github.com/users/adlerjohn/following{/other_user}",
    "gists_url": "https://api.github.com/users/adlerjohn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adlerjohn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adlerjohn/subscriptions",
    "organizations_url": "https://api.github.com/users/adlerjohn/orgs",
    "repos_url": "https://api.github.com/users/adlerjohn/repos",
    "events_url": "https://api.github.com/users/adlerjohn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adlerjohn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1322813572,
      "node_id": "MDU6TGFiZWwxMzIyODEzNTcy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:economics",
      "name": "scope:economics",
      "color": "E8B647",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-03-22T15:56:50Z",
  "updated_at": "2019-06-15T20:52:51Z",
  "closed_at": "2019-06-15T20:52:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Thanks @Mikerah for initial discussions on this.\r\n\r\n#251 provided some initial discussion on issuance _rate_, but does not discuss how to avoid the [two extremes presented in the design rationale](https://notes.ethereum.org/s/rkhCgQteN#Base-rewards), namely:\r\n\r\n> two common models, (i) fixed reward rate, and (ii) fixed total reward\r\n\r\nEach can be solved individually, but let's consider the first case for now:\r\n\r\n>  The main argument against (i) is that it imposes too much uncertainty on the network of two kinds: uncertainty of the total level of issuance, and uncertainty of the total level of deposits (as if a fixed reward rate is set too low then almost no one will participate, threatening the network, and if a rate is set too high then very many validators will participate, leading to unexpectedly high issuance).\r\n\r\nThe solution to the above two extreme cases is a mid-way compromise of inverse-square root issuance based on the total balance. The design rationale states that \"The inverse-square-root approach compromises between the two and avoids the worst consequences of each one,\" but I argue that it does not, continuing discussion from #832 [in this comment](https://github.com/ethereum/eth2.0-specs/issues/832#issuecomment-475628818). In the worst case, an inv-sqrt scaling on rewards _does not solve the problem of having set the parameter too low_. To actually solve it would require an inverse-exponential function, where the rewards increase to infinite with no validators.\r\n\r\nA compromise solves neither problem, and instead leaves the worst case scenario for both intact. How can the rewards be scaled in a way that we have rigorous proofs of how the system performs in adversarial conditions?\r\n\r\nIs there actually a real, provable problem with using a linear scaling reward function, other than the optics that inflation is too high?",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475863037",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/833#issuecomment-475863037",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
    "id": 475863037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTg2MzAzNw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T11:46:02Z",
    "updated_at": "2019-03-23T11:46:02Z",
    "author_association": "MEMBER",
    "body": "> A compromise solves neither problem, and instead leaves the worst case scenario for both intact.\r\n\r\nHuh? That's definitely not true. First of all, `y = 1/sqrt(x)` _is_ unbounded with `y` approaching infinity as `x` approaches zero, so it is the case that if the parameter set is too low it will still reach an equilibrium with a significant number of validators. Second, as my [paper on discouragement attacks](https://github.com/ethereum/research/blob/master/papers/discouragement/discouragement.pdf) shows, using a square root formula instead of a simple `y = 1/x` _does_ make discouragement attacks 2x weaker, to the point where it does possibly solve the issue (see \"this implies we need `p < 1/2` for epsilon attacks to be unprofitable\" on page 6).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475863037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475907243",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/833#issuecomment-475907243",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
    "id": 475907243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTkwNzI0Mw==",
    "user": {
      "login": "adlerjohn",
      "id": 3290375,
      "node_id": "MDQ6VXNlcjMyOTAzNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3290375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adlerjohn",
      "html_url": "https://github.com/adlerjohn",
      "followers_url": "https://api.github.com/users/adlerjohn/followers",
      "following_url": "https://api.github.com/users/adlerjohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/adlerjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adlerjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adlerjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/adlerjohn/orgs",
      "repos_url": "https://api.github.com/users/adlerjohn/repos",
      "events_url": "https://api.github.com/users/adlerjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adlerjohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T21:44:14Z",
    "updated_at": "2019-03-25T12:54:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm. Sorry for jumping the gun on a proposed solution. I'll try to articulate my thoughts here, please correct if they're wrong.\r\n\r\nThere are two problems we have to consider:\r\n(i) What if we set our parameters too low? Then no one will validate.\r\n(ii) Is our system vulnerable to discouragement attacks?\r\n\r\nThe first suggestion for a reward rate is constant, independent of the total validating stake, i.e., `B = k * Di`. The problem with this is that it does not solve (i), since we may have set our parameter `k` too low. Let's consider the case of the inv-sqrt rewards, i.e., `B = k * Di / sqrt(Dtotal)`.\r\n\r\nYes the inv-sqrt goes to infinity when `Dtotal = 0`, but I'll argue that this is not what should be looked at. When a validator is looking to enter the system, and they check what rate they are going to get, we need to consider the rewards they would get _after_ they enter the system. In other words, we only care about the value of `B` _after_ `Dtotal = 1` (if we normalize deposits to units) or `Dtotal = 32` (if we don't normalize and instead take raw rewards). When `Dtotal > 0`, `B` with inv-sqrt is a finite number, a function of the parameter `k`. What if we set _this_ `k` too low? Then no one will validate. Therefore the inv-sqrt does not _solve_ the problem of having set parameters too low. An equilibrium exists where no one validates because rewards are too low.\r\n\r\nNow, I argue if we can _solve_ (i). Based on the above, if the reward for `Dtotal = 1` is infinite, then we're sure we haven't set our constants too low. There's no way we can be sure any finite value isn't too low. We can apply this argument iteratively for all values of `Dtotal`. The only way to be sure we haven't set the parameters too low is to have infinite rewards always. Of course this isn't a useful solution, but shows that this problem is impossible to solve usefully.\r\n\r\nTo address whether the inv-sqrt solves discouragement attacks, I'm not convinced that the linked paper proves a tight upper bound on `p` of `1/2`, but rather only shows that discouragement attacks are profitable (?) when `p > 1/2`. As mentioned, setting `p = 1/2` (i.e., inv-sqrt) _probably_ solves discouragement, but we're not sure of this and it's optimistic to assume this paper covers all forms of discouragement attacks.\r\n\r\nBy the above, we can't solve the problem of having set the parameters too low, and inv-sqrt isn't guaranteed to solve the discouragement attacks. Constant rewards (i.e., set `B = k * Di`) do not solve the problem of having set parameters too low (same as with inv-sqrt), but _do_ trivially make discouragement attacks non-profitable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475907243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475907390",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/833#issuecomment-475907390",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
    "id": 475907390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTkwNzM5MA==",
    "user": {
      "login": "adlerjohn",
      "id": 3290375,
      "node_id": "MDQ6VXNlcjMyOTAzNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3290375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adlerjohn",
      "html_url": "https://github.com/adlerjohn",
      "followers_url": "https://api.github.com/users/adlerjohn/followers",
      "following_url": "https://api.github.com/users/adlerjohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/adlerjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adlerjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adlerjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/adlerjohn/orgs",
      "repos_url": "https://api.github.com/users/adlerjohn/repos",
      "events_url": "https://api.github.com/users/adlerjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adlerjohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T21:46:08Z",
    "updated_at": "2019-03-23T21:46:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm also not sure there's any justification for an issuance rate that's \"too high.\" What is \"too high\"? 10%? 1%? It would be nice to have some justification on that end as well. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475907390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484298422",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/833#issuecomment-484298422",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
    "id": 484298422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDI5ODQyMg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T23:27:31Z",
    "updated_at": "2019-04-17T23:27:31Z",
    "author_association": "MEMBER",
    "body": "Probably the max \"too high\" would be the current inflation on the eth1 chain. Given that PoS validation is more efficient wrt security per unit issued than PoW, the max inflation should arguable less than the current eth1 chain",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484298422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/502398640",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/833#issuecomment-502398640",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/833",
    "id": 502398640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjM5ODY0MA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-15T20:52:50Z",
    "updated_at": "2019-06-15T20:52:50Z",
    "author_association": "MEMBER",
    "body": "> (i) What if we set our parameters too low? Then no one will validate.\r\n\r\nThere seems to be broad consensus that targeting a max of 2^21 ETH annual issuance when the total effective balance is 2^17 ETH is a reasonable first shot. This is implemented [here](https://github.com/ethereum/eth2.0-specs/pull/1159). If issuance is too low (e.g. we don't reach the 2M ETH as fast as we'd like) we can always review it upwards.\r\n\r\n> (ii) Is our system vulnerable to discouragement attacks?\r\n\r\nI think this boils down to what @djrtwo said: [\"general approach is large enough initial v-set, honest assumption, and forced deposits\"](https://github.com/ethereum/eth2.0-specs/issues/832#issuecomment-484297868). If there are discouragement attacks then the honesty assumption is flawed and we're in much deeper trouble.\r\n\r\nFeel free to reopen an issue or PR if you feel strongly :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/502398640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
