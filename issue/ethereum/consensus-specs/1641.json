{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1641",
  "id": 577410332,
  "node_id": "MDU6SXNzdWU1Nzc0MTAzMzI=",
  "number": 1641,
  "title": "Storage of SignedBeaconBlock",
  "user": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-03-07T22:28:56Z",
  "updated_at": "2020-03-11T14:56:35Z",
  "closed_at": "2020-03-11T14:56:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The P2P specification lists validations before forwarding signed_beacon_block, which implies you will forward it, but doesn't have a requirement to. \r\n\r\nSimilarly, the request/response section implies nodes should record signed_beacon_block in order to respond with it, \"if they have it\". \r\n\r\nHowever, in phase 0 fork choice on_block only signed_block.message, the BeaconBlock is stored. \r\n\r\nNote: In the current dev branch, the definition of Store has been changed to store BeaconBlockHeader, instead of BeaconBlock, although the change has not yet been propagated to all functions.\r\n\r\nThe specification does talk about messages without parents or in the future being delayed, again implying storage. \r\n\r\nShould there be an explicit mention, even if just something like \"clients SHOULD keep a record of messages received, including signature\", if not something formal like Store?\r\n\r\n**EDIT** for clarity.\r\n\r\nThe relevant requirements in the 0.10.1 spec are:\r\n\r\n> Clients MUST support requesting blocks since the start of the weak subjectivity period and up to the given head_block_root.\r\n> Clients MUST support head_block_root values since the latest finalized epoch.\r\n> Clients MUST respond with at least one block, if they have it and it exists in the range. Clients MAY limit the number of blocks in the response.\r\n\r\nThe current dev spec removes the duplication:\r\n\r\n> Clients MUST support requesting blocks since the start of the weak subjectivity period and up to the given head_block_root.\r\n> Clients MUST respond with at least one block, if they have it and it exists in the range. Clients MAY limit the number of blocks in the response.\r\n\r\nIn spec 0.9.2 and earlier, the signature was in BeaconBlock, and fork choice Store kept a record of all BeaconBlocks. This means the \"if they have it\" criteria would apply for all blocks you have in Store.\r\n\r\nHowever, from 0.9.3 onwards, SignedBeaconBlock was introduced, and not explicitly stored, so clients would support the request, but simply send an empty response (they have no signed blocks stored anywhere).",
  "closed_by": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/596834811",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-596834811",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 596834811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjgzNDgxMQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-09T23:59:10Z",
    "updated_at": "2020-03-09T23:59:10Z",
    "author_association": "MEMBER",
    "body": "The requirement of the fork choice is only validated the blocks/headers so that's why the naive spec stores them there, whereas the network spec needs signed blocks to be passed around for others to validate.\r\n\r\nThere are statements like\r\n```\r\nClients MUST support requesting blocks since the latest finalized epoch.\r\n```\r\n\r\nI suppose we can change this to \"signed blocks\" to be more explicit",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/596834811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597008122",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597008122",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597008122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzAwODEyMg==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T10:16:58Z",
    "updated_at": "2020-03-10T10:16:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's probably fair enough; I was concentrating on the \"if they have it and it exists in the range\" exception, and interpreting the \"MUST support requesting\" as simply sure, I'll accept your request, but because I never stored any blocks I don't have them and so support your request by responding with nothing. (Before the signing root change, the Store contained full blocks, including signatures, so the clients would have the blocks.)\r\n\r\nBut re-reading the criteria of \"up to the given head_block_root\", it is referring to your own head, which is basically the same thing, i.e. you must have seen blocks up you your head.\r\n\r\nChanging it to explicit statement like \"Clients MUST keep a record of signed blocks seen since the weak subjectivity period and MUST support requests for them up to the given head_block_root.\" would remove any ambiguity about the \"if they have it\" as an escape clause.\r\n\r\nBut not keeping blocks would probably be a silly thing to do anyway, so probably doesn't matter if you just want to close the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597008122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597009864",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597009864",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597009864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzAwOTg2NA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T10:21:04Z",
    "updated_at": "2020-03-10T10:21:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "The latter part of \"Clients MUST keep a record of signed blocks seen since the weak subjectivity period and MUST support requests for them up to the given head_block_root.\" is not desirable (assuming you mean \"serve\" for \"support\") as it opens the way for bad implementations (or just greedy peers) to be able to continually request blocks from you and you be obliged to return them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597009864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597017343",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597017343",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597017343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzAxNzM0Mw==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T10:38:03Z",
    "updated_at": "2020-03-10T10:38:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> to be able to continually request blocks from you and you be obliged to return them\r\n\r\nI should probably update the issue with the full text, so there is no confusion.\r\n\r\nThe current spec already says \"MUST support requests\", so that part hasn't changed.\r\n\r\nThe next line is \"Clients MUST respond with at least one block, if they have it and it exists in the range. Clients MAY limit the number of blocks in the response.\"\r\n\r\nPrior to the hash_signing_root change, the full messages were recorded in Store, so if a node had seen blocks, they would \"have it\" and must respond, with at least one block.\r\n\r\nSince the change, only beacon_block is stored (not signed_beacon_block), and the upcoming dev changes cut this down to beacon_block_header.\r\n\r\nTherefore, a client could throw away all blocks, and rely in the \"if they have it\" as an escape clause to respond with nothing, instead of a minimum of one block.\r\n\r\nAdding in the \"MUST keep a record of signed blocks\" is simply re-instating the requirement to record them (as they are no longer in Store), which from the other discussions sounds like what the intention is.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597017343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597041774",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597041774",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597041774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzA0MTc3NA==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T11:40:53Z",
    "updated_at": "2020-03-10T11:40:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I put up a pull request for consideration, especially seeing as @mcdee seems to be worried about the requirement that clients MUST store and respond with blocks, when I think that was what the intention is (and is what the spec required in 0.9.2 and earlier),",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597041774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597190783",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597190783",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597190783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzE5MDc4Mw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T16:45:21Z",
    "updated_at": "2020-03-10T16:47:21Z",
    "author_association": "MEMBER",
    "body": ">  as it opens the way for bad implementations (or just greedy peers) to be able to continually request blocks from you and you be obliged to return them.\r\n\r\n\"Support\" here means that you have the ability to serve. A client is never required to \"serve\" tons of blocks due to local bandwidth constraints, peer abuse, etc. A client that connects to a peer that won't serve them should drop and find better peers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597190783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597193217",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597193217",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597193217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzE5MzIxNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T16:50:04Z",
    "updated_at": "2020-03-10T16:50:04Z",
    "author_association": "MEMBER",
    "body": "> Prior to the hash_signing_root change, the full messages were recorded in Store, so if a node had seen blocks, they would \"have it\" and must respond, with at least one block.\r\n\r\nThe \"Store\" is just an example of how the functionality of the fork choice _can_ be incredibly naively implemented. The \"Store\" is not prescriptive. The validation conditions on `on_block`, `on_attestation`, and the results of `get_head` are prescriptive.\r\n\r\nI wouldn't get too hung up on the mechanics here in fork choice\r\n\r\n> Clients MUST support requesting blocks since the start of the weak subjectivity period and up to the given `head_block_root`.\r\n\r\nThis statement dictates that a client must have access to SignedBeaconBlocks since weak subjectivity. I'm not certain we need to state explicitly to store them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597193217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597682500",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1641#issuecomment-597682500",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1641",
    "id": 597682500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY4MjUwMA==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T14:56:35Z",
    "updated_at": "2020-03-11T14:56:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Clarification merged, so closing issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597682500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
