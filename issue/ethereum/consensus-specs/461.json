{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/461",
  "id": 400362493,
  "node_id": "MDU6SXNzdWU0MDAzNjI0OTM=",
  "number": 461,
  "title": "`MAX_CASPER_VOTES` clarification",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-01-17T16:37:59Z",
  "updated_at": "2019-01-28T20:44:28Z",
  "closed_at": "2019-01-28T20:44:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Issue\r\n`MAX_CASPER_VOTES` is a constant in an attempt to put a limit on the load of processing attestations within the context of checking slashing conditions. Right now there is a limit that the sum of the number of indices across the two slashable messages cannot exceed `MAX_CASPER_VOTES`.\r\n\r\nTo clarify -- This is not some sort of in protocol limit on the size of committees, but instead a limit on the size of the bulk slashing that can be performed in one message. If for example 1200 people signed the same slashable messages, multiple `CASPER_SLASHING` messages would have to be submit utilizing different subsets (and thus different aggregate signatures).\r\n\r\nThis is a bit unclear in the current spec and with the current names. I suggested we\r\n* Change `MAX_CASPER_VOTES` to `MAX_INDICES_IN_CASPER_SLASHING` (a bit verbose but something more descriptive)\r\n* Add a note to the validator guide on how to handle this case",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455240252",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455240252",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455240252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI0MDI1Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:38:15Z",
    "updated_at": "2019-01-17T16:38:15Z",
    "author_association": "MEMBER",
    "body": "cc: @JustinDrake  to ensure I have the purpose of this constant correct",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455240252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455244199",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455244199",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455244199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI0NDE5OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:48:50Z",
    "updated_at": "2019-01-17T16:48:50Z",
    "author_association": "MEMBER",
    "body": "I think this is related to #271",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455244199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455264885",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455264885",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455264885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI2NDg4NQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:48:25Z",
    "updated_at": "2019-01-17T17:48:25Z",
    "author_association": "MEMBER",
    "body": "Yep, related to #271. Having a constant is possibly bad. Aggregated signatures that are exposed onchain cannot be unaggregated so with large committees the slashing would rely on more fine-grained aggregation to be cached offchain. One possibility is to cap the number of constituent signatures in the aggregated signatures that go onchain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455264885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455265683",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455265683",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455265683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI2NTY4Mw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:50:55Z",
    "updated_at": "2019-01-17T17:50:55Z",
    "author_association": "MEMBER",
    "body": "Which would force splitting committee sigs across multiple attestations (on chain) when committee size (`total_val / SHARD_COUNT`) exceeds this constant.\r\n\r\nhmm",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455265683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455826197",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455826197",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455826197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgyNjE5Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-20T00:15:55Z",
    "updated_at": "2019-01-20T00:16:42Z",
    "author_association": "MEMBER",
    "body": "We can always set the constant to be >= 4096 (the top validator count we're aiming for / SHARD_COUNT) so that it's always possible to slash a single committee. Anything wrong with that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455826197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455902846",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455902846",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455902846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTkwMjg0Ng==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-20T21:12:06Z",
    "updated_at": "2019-01-20T21:19:17Z",
    "author_association": "MEMBER",
    "body": "> We can always set the constant to be >= 4096\r\n\r\n`MAX_CASPER_VOTES = 4096` is definitely simple. The worry would be \"vote stuffing\" DoS attacks where bogus validator indices are included in Casper slashing transactions. In the worst case:\r\n\r\n* **CPU**: `MAX_CASPER_SLASHINGS * MAX_CASPER_VOTES` pubkeys need to be retrieved from memory and added. One benchmark suggests the overhead per addition is about 1,350ns so the ballpark is ~100ms.\r\n* **Data**: Each validator index is 3 bytes so an attacker can create a beacon block with ~197kB of validator indices.\r\n\r\n(Side note: One reason to keep pubkeys in the registry after withdrawals is to allow for Casper slashing transactions with old aggregated pubkeys to be processable, especially in times of congestions. On the flip side, this creates an essentially-zero-cost-of-capital opportunity to do vote stuffing by repeatedly re-registering and de-registering sufficiently many times.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455902846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455923062",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-455923062",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 455923062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTkyMzA2Mg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T01:33:21Z",
    "updated_at": "2019-01-21T01:34:50Z",
    "author_association": "MEMBER",
    "body": "> Each validator index is 3 bytes so an attacker can create a beacon block with ~197kB of validator indices.\r\n\r\nNot sure where this comes from. Shouldn't it be 24576 bytes (4096 * 3 * 2 for two votes)? Or are you referring to the status quo?\r\n\r\n>  One reason to keep pubkeys in the registry after withdrawals is to allow for Casper slashing transactions with old aggregated pubkeys to be processable\r\n\r\nRight, this is exactly why I had the one-year post-withdrawal delay originally.\r\n\r\nAlso, I'm not sure what the vote stuffing attack is. Ultimately it's the block proposer that decides what goes into the block, and their incentive is to maximize their revenue from slashing rewards under the constraint of either max 8 votes or max 4096 indices. So they have no incentive to stuff junk into their blocks...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455923062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/456068079",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-456068079",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 456068079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjA2ODA3OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T13:07:31Z",
    "updated_at": "2019-01-21T13:07:31Z",
    "author_association": "MEMBER",
    "body": "> Shouldn't it be 24576 bytes (4096 * 3 * 2 for two votes)?\r\n\r\nRight, I missed a factor of 2x. So the worst case overhead assuming we set `MAX_CASPER_VOTES = 4096` (and otherwise stick with the current spec) is `MAX_CASPER_SLASHINGS * MAX_CASPER_VOTES * 3b * 2 = 16 * 4096 * 3b * 2 = 393kB`.\r\n\r\n> under the constraint of either max 8 votes or max 4096 indices\r\n\r\nOh I see. You're advocating to be able to slash one committee per `BeaconBlock`, not necessarily one committee per `CasperSlashing`. It's somewhat dissatisfying that the number of slashings per `BeaconBlock` decreases as committee sizes increase (we want it to increase, or at least stay constant).\r\n\r\n> max 8 votes\r\n\r\n(nitpick) `MAX_CASPER_SLASHINGS` is currently set to 16\r\n\r\n> max 4096 indices\r\n\r\n(nitpick) Is this max 4096 indices over all `SlashableVoteData` in all the `CasperSlashing` in a given `BeaconBlock`? In the extreme case where every individual `SlashableVoteData` consumes 4096 indices then slashing a single committee would not be possible. Max 8192 indices would account for the two `SlashableVoteData` per `CasperSlashing`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/456068079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/457093634",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-457093634",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 457093634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzA5MzYzNA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T07:22:17Z",
    "updated_at": "2019-01-24T07:22:17Z",
    "author_association": "MEMBER",
    "body": "> Oh I see. You're advocating to be able to slash one committee per BeaconBlock, not necessarily one committee per CasperSlashing. It's somewhat dissatisfying that the number of slashings per BeaconBlock decreases as committee sizes increase (we want it to increase, or at least stay constant).\r\n\r\nOK thought about it for a bit; I would favor a limit of (i) one slashing per block, and (ii) 8192 indices per slashing. The withdrawal limit is 4 validators per epoch, so one per block (ie. 64 per epoch) is plenty of space to ensure that everyone gets slashed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/457093634/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/458294047",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/461#issuecomment-458294047",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/461",
    "id": 458294047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI5NDA0Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T20:44:28Z",
    "updated_at": "2019-01-28T20:44:28Z",
    "author_association": "MEMBER",
    "body": "closed via #488",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/458294047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
