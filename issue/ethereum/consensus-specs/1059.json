{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1059",
  "id": 441068371,
  "node_id": "MDU6SXNzdWU0NDEwNjgzNzE=",
  "number": 1059,
  "title": "Avoid side effect in state transition with mutable object",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2019-05-07T06:52:34Z",
  "updated_at": "2019-06-30T14:55:05Z",
  "closed_at": "2019-06-30T14:55:05Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Issue\r\nAll the SSZ objects in pyspec are [Pythonic-mutable](https://www.geeksforgeeks.org/mutable-vs-immutable-objects-in-python/).\r\n* Pros: allowing us to update state easily\r\n* Cons: sometimes it causes an unexpected or undesirable effect\r\n\r\nFor example, if there is a fuzzing test case with two blocks: the first block is invalid and the second block is valid. Although during the first block state transition it raises `Exception`, the mutable `state` might be updated.\r\n\r\n### How to reduce the side effect:\r\n#### Option 1: Add protection in the `state_transition` function:\r\nIn #1018, the `state_transition` function is updated to:\r\n\r\nhttps://github.com/ethereum/eth2.0-specs/blob/4c1073fa2f898de7ffe26fd8aa197d38c25a8f35/specs/core/0_beacon-chain.md#beacon-chain-state-transition-function\r\n\r\n```python\r\ndef state_transition(state: BeaconState, block: BeaconBlock) -> BeaconState:\r\n    # Process slots (including those with no blocks) since block\r\n    process_slots(state, block.slot)\r\n    # Process block\r\n    process_block(state, block)\r\n    # Return post-state\r\n    return state\r\n```\r\n\r\nWe can change it to:\r\n```python\r\ndef state_transition(state: BeaconState, block: BeaconBlock) -> BeaconState:\r\n    pre_state = copy.deepcopy(state)\r\n    try:\r\n        # Process slots (including those with no blocks) since block\r\n        process_slots(state, block.slot)\r\n        # Process block\r\n        process_block(state, block)\r\n        # Return post-state\r\n    except Exception:\r\n        return pre_state\r\n    else:\r\n        return state\r\n```\r\n\r\n* Pros: easiest way to hack this case\r\n* Cons: probably other cases may happen in the test suite that we don't know yet\r\n\r\n\r\n#### Option 2: Make all helper functions to be pure functions\r\nAdd `copy.deepcopy(state)` + return `state` in every helper function (maybe with decorator).\r\n\r\n* Pros: pure functions yay!\r\n* Cons: verbosity; it's possible that someone will forget to add it and cause other bugs\r\n\r\n#### Option 3: Immutable everything\r\nGenerally, that's what Trinity is doing.\r\n* Pros: it kills all side effect\r\n* Cons: verbosity\r\n\r\n---\r\n\r\nAlthough Option 1 might be good enough, I raise the possibility of other options here before the Frozen‚Ñ¢Ô∏è. üòÑ",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/489996326",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-489996326",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 489996326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTk5NjMyNg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T08:58:56Z",
    "updated_at": "2019-05-07T08:58:56Z",
    "author_association": "MEMBER",
    "body": "I like option 1 because it formalises the English-text comment \"State transitions that trigger an unhandled exception (e.g. a failed assert or an out-of-range list access) are considered invalid.\" into code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/489996326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490155236",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-490155236",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 490155236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE1NTIzNg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T16:35:02Z",
    "updated_at": "2019-05-07T16:35:02Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I'm a fan of option 1. It (1) brings in `deepcopy` which is pretty pythonic machinery into the spec, and (2) obfuscates the success or failure of the state transition. Returning an unmodified object is a pretty unexpected flag for an invalid block.\r\n\r\nI would argue to either leave as is and require the caller to store whatever pre-state that wanted to remember _or_ to add the deepcopy at the start of `state_transition` to no mutate the argument, but still allow any failed assertion to bubble up uncaught.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490155236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490162991",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-490162991",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 490162991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE2Mjk5MQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T16:56:38Z",
    "updated_at": "2019-05-07T16:56:38Z",
    "author_association": "MEMBER",
    "body": "There is an appeal to avoid introducing \"heavy machinery\" (`deepcopy`, `try`, `except`, ...) just for `state_transition`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490162991/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490260288",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-490260288",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 490260288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDI2MDI4OA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T21:22:26Z",
    "updated_at": "2019-05-07T21:22:26Z",
    "author_association": "MEMBER",
    "body": "I have also been kind of bothered by all those functions that operate on state. But I agree that deepcopy would be a machinery that I wouldn't like to see in the spec.\r\n\r\nI'm not sure if this is what Option 3 in @hwwhww's list refers to, but I think the cleanest options would be for the state transition functions to issue a number of \"state updates\" (basically state tree nodes with new value), which are to be all applied when all state transition functions returned without error. That way you avoid the \"pure function\" mess of having to copy everything that's in the state but still get (another) kind of pure function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490260288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490438345",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-490438345",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 490438345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDQzODM0NQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T10:42:26Z",
    "updated_at": "2019-05-08T10:42:26Z",
    "author_association": "MEMBER",
    "body": "Oh good points!\r\n\r\nWe need to find a balance between clearly execute pyspec and clean spec. I think we should revert option 1 from #1018 in case it‚Äôs blocking.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/490438345/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491430602",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491430602",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491430602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTQzMDYwMg==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-10T21:08:03Z",
    "updated_at": "2019-05-11T11:33:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think a strong suggestion in the spec to have a way to apply changes only if they will be successful is enough (like commit-rollback for databases).\r\n\r\nStill, the more can be done side-effect free the easier it is to test in isolation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491430602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491501031",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491501031",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491501031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTUwMTAzMQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-11T10:55:12Z",
    "updated_at": "2019-05-11T10:55:12Z",
    "author_association": "MEMBER",
    "body": "I'd say putting the deepcopy in the test files is cleaner than putting the deepcopy in the spec.\r\n\r\nI definitely think rewriting the spec to be in pure functions will harm readability far too much to be a good idea.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491501031/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491506550",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491506550",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491506550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTUwNjU1MA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-11T12:21:40Z",
    "updated_at": "2019-05-11T12:21:40Z",
    "author_association": "MEMBER",
    "body": "> I definitely think rewriting the spec to be in pure functions will harm readability far too much to be a good idea.\r\n\r\nThis is probably true.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491506550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491583091",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491583091",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491583091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTU4MzA5MQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T10:22:38Z",
    "updated_at": "2019-05-12T10:22:38Z",
    "author_association": "MEMBER",
    "body": "Option 3b: Immutable everything, but with the help of a library such as [pyrsistent](https://github.com/tobgu/pyrsistent) to improve readability. Probably counts as \"heavy machinery\" too though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491583091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491585519",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491585519",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491585519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTU4NTUxOQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T11:03:05Z",
    "updated_at": "2019-05-12T11:03:05Z",
    "author_association": "MEMBER",
    "body": "Even that doesn't improve readability nearly enough.\r\n\r\nCompare:\r\n\r\n```\r\nstate.latest_state_roots[x] = y\r\n```\r\n\r\nAnd:\r\n\r\n```\r\nstate = state.set(\"latest_state_roots\", state.latest_state_roots.set(x, y))\r\n```\r\n\r\nAnd it gets worse for more deeply nested structures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491585519/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491587461",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491587461",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491587461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTU4NzQ2MQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T11:30:10Z",
    "updated_at": "2019-05-12T11:30:10Z",
    "author_association": "MEMBER",
    "body": "For nested structures there's `transform`:\r\n\r\n```\r\nstate = state.transform([\"latest_state_roots\", x], y)\r\n```\r\n\r\nwhich is only a little harder to read and it doesn't get worse with additional nesting levels.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491587461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491641917",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-491641917",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 491641917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTY0MTkxNw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T00:25:57Z",
    "updated_at": "2019-05-13T00:25:57Z",
    "author_association": "MEMBER",
    "body": "What about https://github.com/tobgu/pyrthon/?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/491641917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/507042830",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1059#issuecomment-507042830",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1059",
    "id": 507042830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzA0MjgzMA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-30T14:55:05Z",
    "updated_at": "2019-06-30T14:55:05Z",
    "author_association": "MEMBER",
    "body": "It looks like there's rough consensus for the status quo, at least for spec freeze.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/507042830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
