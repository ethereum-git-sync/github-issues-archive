{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/264",
  "id": 388899551,
  "node_id": "MDU6SXNzdWUzODg4OTk1NTE=",
  "number": 264,
  "title": "Yet another possible alternative to current header/body separation",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-12-08T08:17:18Z",
  "updated_at": "2019-01-17T15:46:33Z",
  "closed_at": "2019-01-17T15:46:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\nBeaconBlock: {\r\n    \"parent_hash\": 'hash32',\r\n    \"body\": BeaconBlockBody\r\n}\r\n```\r\n\r\n```\r\nBeaconBlockBody: {\r\n    'ancestor_hashes': ['hash32'],\r\n    'state_root': 'hash32',\r\n    'randao_reveal': 'hash32',\r\n    'candidate_pow_receipt_root': 'hash32',\r\n    'signature': ['uint384'],\r\n    'attestations': [Attestation],\r\n    'proposer_slashings': [ProposerSlashing],\r\n    'casper_slashings': [CasperSlashing],\r\n    'deposits': [Deposit],\r\n    'exits': [Exit],\r\n}\r\n```\r\n\r\nRationale: now you can download an entire mini-chain with just 32 bytes per block.\r\n\r\nI'm not sure whether or not I agree with doing this BTW, just wanted to raise it for discussion.",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/445446760",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-445446760",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 445446760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ0Njc2MA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T09:48:30Z",
    "updated_at": "2018-12-08T09:48:30Z",
    "author_association": "MEMBER",
    "body": "IMO chain of headers (or however it's called) would be useful if it would be feasible to check whether it's valid or not. Otherwise, it becomes unreliable. One of the applications of this _mini-chain_ could be in fork handling which seems not so useful without reliability. \r\n\r\nI am starting to think that chain of headers is not a valuable thing for the beacon chain. For example, it could not be verified without knowing all `shard_committees_at_slots` and `validator_registry` samples that were used to build this chain. Which looks pretty inefficient.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/445446760/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446038437",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-446038437",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 446038437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjAzODQzNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T01:28:54Z",
    "updated_at": "2018-12-11T01:28:54Z",
    "author_association": "MEMBER",
    "body": "Considering most syncs will be from a known finalized slot, I'm not sure the 184 byte vs 32 byte for headers will make much difference.\r\n\r\nAre there any concrete use cases for the mini-chain?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446038437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446103374",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-446103374",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 446103374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjEwMzM3NA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T07:45:32Z",
    "updated_at": "2018-12-11T07:45:32Z",
    "author_association": "MEMBER",
    "body": "> Considering most syncs will be from a known finalized slot\r\n\r\nThis assumption might require a separate discussion. The main question is how to prove that given finalized slot is a product of a sequence of valid state transitions originated from a certain `initial_state`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446103374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446109230",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-446109230",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 446109230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjEwOTIzMA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T08:10:06Z",
    "updated_at": "2018-12-11T08:10:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkalinin  As far as I can see the only way we could verify would be to download all the blocks from genesis till the last finalized slot in order to determine that the state transitions were all valid.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446109230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446141810",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-446141810",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 446141810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjE0MTgxMA==",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T09:58:28Z",
    "updated_at": "2018-12-11T10:00:44Z",
    "author_association": "NONE",
    "body": "I've described one possible efficient syncing scheme here:\r\nhttps://notes.ethereum.org/s/BJPBa42TQ#Beacon-chain-sync\r\n\r\nThe general idea is that you'll be syncing primarily the changes in the validator set by obtaining a very sparse set of blocks where a super-majority of the validators known to you have signed a new `validator_registry_delta_chain_tip` hash. Once you know the latest validators, it's enough to obtain only the latest block, because through the slashing rules the timestamp of the block (its slot number) and the signatures of the validators are enough to authenticate it.\r\n\r\nWe hope to run an experiment with a proof-of-concept implementation of this scheme in the December release of Nimbus.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446141810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446558472",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-446558472",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 446558472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU1ODQ3Mg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T11:40:44Z",
    "updated_at": "2018-12-12T11:40:44Z",
    "author_association": "MEMBER",
    "body": "Thanks @zah for sharing this scheme! Indeed, it looks pretty efficient, at least for light clients. \r\n\r\nFor those who don't want to stick with weak subjectivity, this scheme could be featured with additional accumulator for `next_seed`, e.g. `seed_update_root`, which is similar thing as `validator_registry_delta_chain_tip`. Then by downloading a chain of headers and requesting tips on validator set changes and seed updates (upon they are detected) it would be possible to get a consensus proof of validity of state that corresponds to the finalized slot.\r\n\r\nThis approach would require to store historical data like headers and tips, though. Not that big as a history of block bodies but still something that will be constantly growing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446558472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448717892",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-448717892",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 448717892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODcxNzg5Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T19:35:55Z",
    "updated_at": "2018-12-19T19:35:55Z",
    "author_association": "MEMBER",
    "body": "@vbuterin Do you still want to make a case for this format?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/448717892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455219792",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/264#issuecomment-455219792",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/264",
    "id": 455219792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxOTc5Mg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:46:33Z",
    "updated_at": "2019-01-17T15:46:33Z",
    "author_association": "MEMBER",
    "body": "I think we're sticking with what we have now :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455219792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
