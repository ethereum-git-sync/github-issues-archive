{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2081",
  "id": 710072036,
  "node_id": "MDU6SXNzdWU3MTAwNzIwMzY=",
  "number": 2081,
  "title": "Deposit contract should reject invalid signatures",
  "user": {
    "login": "q9f",
    "id": 58883403,
    "node_id": "MDQ6VXNlcjU4ODgzNDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/q9f",
    "html_url": "https://github.com/q9f",
    "followers_url": "https://api.github.com/users/q9f/followers",
    "following_url": "https://api.github.com/users/q9f/following{/other_user}",
    "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
    "organizations_url": "https://api.github.com/users/q9f/orgs",
    "repos_url": "https://api.github.com/users/q9f/repos",
    "events_url": "https://api.github.com/users/q9f/events{/privacy}",
    "received_events_url": "https://api.github.com/users/q9f/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324892187,
      "node_id": "MDU6TGFiZWwxMzI0ODkyMTg3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:deposit%20contract",
      "name": "scope:deposit contract",
      "color": "005CAF",
      "default": false,
      "description": ""
    },
    {
      "id": 1534063048,
      "node_id": "MDU6TGFiZWwxNTM0MDYzMDQ4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:BLS",
      "name": "scope:BLS",
      "color": "fef2c0",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-28T08:48:18Z",
  "updated_at": "2020-10-08T23:57:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Deposits are effectively lost if they are formatted properly but contain an invalid signature. \r\n\r\n* Example: https://ethereum.stackexchange.com/questions/87116/why-did-an-event-fire-even-though-etherscan-suggests-it-failed\r\n* Example: https://goerli.etherscan.io/tx/0x342d3551439a13555c62f95d27b2fbabc816e4c23a6e58c28e69af6fae6d0159\r\n* Example: #2071\r\n\r\nThe deposit contract can not determine between valid and invalid signatures if the deposit \"looks good\" otherwise. For testnets we never really bothered but for mainnet that would effectively burn the funds.\r\n\r\nWe should track implementation of [EIP-2357](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2537.md) on Ethereum 1.x and adapt the deposit contract accordingly once BLS precompiles are available for signature verification.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081/reactions",
    "total_count": 4,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705327368",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2081#issuecomment-705327368",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081",
    "id": 705327368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTMyNzM2OA==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T04:49:53Z",
    "updated_at": "2020-10-08T04:49:53Z",
    "author_association": "MEMBER",
    "body": "for reference, i started a \"deposit verifier\" contract using the EIP-2537 precompiles: https://github.com/ralexstokes/deposit-verifier/blob/master/deposit_verifier.sol\r\n\r\ni have heard a range of opinions on how much of a problem people actually view this being -- for example, we could argue signature checks should happen before the data goes on-chain. i agree that having (at the least) the option to verify a deposit before funds are moved would be very beneficial to validators",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705327368/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705386587",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2081#issuecomment-705386587",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081",
    "id": 705386587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM4NjU4Nw==",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T07:28:31Z",
    "updated_at": "2020-10-08T07:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "While acknowledging the low probability that we see this implemented for phase 0 launch, I would always encourage a conservative approach to security: if it's possible to submit invalid signatures, users will find a way to do so.\r\n\r\nA data point from the testnets: every deposit contract we used thus far had seen invalid deposits. For mainnet, we need to tripple check all clients and tooling.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705386587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705888426",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2081#issuecomment-705888426",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2081",
    "id": 705888426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTg4ODQyNg==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T23:56:27Z",
    "updated_at": "2020-10-08T23:57:17Z",
    "author_association": "MEMBER",
    "body": "yep, fully agreed :) \r\n\r\nwe _are_ triple-checking everything and bad deposits still get through...\r\n\r\nunfortunately this entire line of work is blocked on deploying the precompiles on eth1 which i don't think will happen in time for eth2 mainnet like you point out... we can definitely have this at the ready when the precompiles go online at which point we can introduce to the deposit tooling for enhanced safety!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705888426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
