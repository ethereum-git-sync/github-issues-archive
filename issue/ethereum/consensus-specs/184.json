{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/184",
  "id": 385280484,
  "node_id": "MDU6SXNzdWUzODUyODA0ODQ=",
  "number": 184,
  "title": "BLS12-381: Clarification between G1/G2 and serialisation",
  "user": {
    "login": "mratsim",
    "id": 22738317,
    "node_id": "MDQ6VXNlcjIyNzM4MzE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mratsim",
    "html_url": "https://github.com/mratsim",
    "followers_url": "https://api.github.com/users/mratsim/followers",
    "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
    "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
    "organizations_url": "https://api.github.com/users/mratsim/orgs",
    "repos_url": "https://api.github.com/users/mratsim/repos",
    "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mratsim/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043872,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODcy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:question",
      "name": "general:question",
      "color": "FAD689",
      "default": false,
      "description": "Further information is requested"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-11-28T13:59:04Z",
  "updated_at": "2018-12-12T17:16:28Z",
  "closed_at": "2018-12-12T17:16:28Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "@vbuterin @JustinDrake thank you for the new spec regarding BLS12-381.\r\n\r\n## Comparison with ethresear.ch post\r\n\r\nI've compared it with the mini-spec from https://ethresear.ch/t/pragmatic-signature-aggregation-with-bls/2105/31.\r\n\r\nI noticed the following differences:\r\n\r\n![2018-11-28_14-20-03](https://user-images.githubusercontent.com/22738317/49154745-8ec7f080-f319-11e8-802c-e8e4e815057c.png)\r\n\r\nAs of [this version](https://github.com/ethereum/eth2.0-specs/blob/2c34a9734118cca2e0be6c727252c82b4ae82028/specs/bls_verify.md) of the specs we have G1 48 bytes and G2 96 bytes (like Zcash) while the ethresear.ch post (and Chia Network) is using the G1 96 bytes and G2 48 bytes.\r\n\r\nI.e. Are the changes intentional?\r\n\r\n## Serialization\r\n\r\nInternally many libraries are using a custom binary representation for bigint for crypto to avoid dealing with carry, [for example in Milagro](http://docs.milagro.io/en/amcl/milagro-crypto-library-white-paper.html)\r\n\r\n> 4 Handling BIG Numbers\r\n> 4.1 Representation\r\n> One of the major design decisions is how to represent the 256-bit field elements required for the elliptic curve and pairing-based cryptography. Here there are two different approaches.\r\n>\r\n> One is to pack the bits as tightly as possible into computer words. For example on a 64-bit computer 256-bit numbers can be stored in just 4 words. However to manipulate numbers in this form, even for simple addition, requires handling of carry bits if overflow is to be avoided, and a high-level language does not have direct access to carry flags. It is possible to emulate the flags, but this would be inefficient. In fact this approach is only really suitable for an assembly language implementation.\r\n>\r\n> The alternative idea is to use extra words for the representation, and then try to offset the additional cost by taking full advantage of the \"spare\" bits in every word. This idea follows a \"corner of the literature\" which has been promoted by Bernstein and his collaborators in several publications.\r\n\r\nor [BearSSL](https://www.bearssl.org/constanttime.html) is using i15/i31 limbs (int16 and int32 with spare bits):\r\n\r\n> Elliptic Curves\r\n> BearSSL includes several implementations of elliptic curves. Some use the same generic big integer functions as RSA **(“i15” and “i31” code)**, and thus inherit their constant-time characteristics; other include specialised code which is made faster by exploiting the special format of the involved field modulus.\r\n> \r\n> Some points are worth mentioning, for the implementations of NIST curves:\r\n> \r\n> - ...\r\n> \r\n> - ECDSA signature verification entails computing aG+bQ where a and b are two integers (modulo the curve order), G is the conventional generator, and Q is the public key. Classic implementations mutualise the doublings in the two double-and-add instances; however, this implies a larger table for window optimisation: if using 2-bit windows, then the aggregate table must have all combinations of G and Q with multipliers up to 3, so we are in for at least 13 extra values (apart from G and Q themselves). Each such point uses 216 bytes (three coordinates large enough for the P-521 curve, over **31-bit words with an extra “bit length” word**) so such a window would use up almost 3 kB of stack space. We cannot afford that within BearSSL goals.\r\n\r\nSo we need to define a canonical serialisation that is used during communication.\r\n\r\nIf understood correctly the serialisation format is defined by\r\n\r\n```\r\nSpecifically, a point in G1 as a 384-bit integer z, which we decompose into:\r\n\r\n- x = z % 2**381\r\n- highflag = z // 2**382\r\n- lowflag = (z % 2**382) // 2**381\r\n```\r\n\r\nwhich is just the natural way to extend uint32 / uint64 to uint384.\r\n\r\nIs the following visualisation correct? I assume big endian, so most significant bit on the left.\r\n\r\n```\r\n 384     381            192              0\r\n  +-------+--------------+---------------+\r\n  | 0 0 0 |    high      |      low      |\r\n  +-------+--------------+---------------+\r\n\r\n   unused <--------------x--------------->\r\n```",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/442470622",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/184#issuecomment-442470622",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184",
    "id": 442470622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjQ3MDYyMg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T14:42:59Z",
    "updated_at": "2018-11-28T14:42:59Z",
    "author_association": "MEMBER",
    "body": "Please ignore the notation I used in the ethresear.ch post :) The spec is the reference. Having said that, it is intentional to have 48-byte pubkeys and 96-byte signatures. The reason is that the performance of signature verification is improved when adding pubkeys (to form the aggregated pubkey) is fast, i.e. happens on the \"small-and-fast\" curve.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/442470622/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444032795",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/184#issuecomment-444032795",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184",
    "id": 444032795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDAzMjc5NQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T09:33:31Z",
    "updated_at": "2018-12-04T09:33:31Z",
    "author_association": "MEMBER",
    "body": "@mratsim can we close this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444032795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444033774",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/184#issuecomment-444033774",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184",
    "id": 444033774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDAzMzc3NA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T09:36:43Z",
    "updated_at": "2018-12-04T09:36:43Z",
    "author_association": "MEMBER",
    "body": "FWIW, I believe that Chia also has pubkeys on the small-and-fast curve (unlike Zcash).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444033774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446668378",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/184#issuecomment-446668378",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/184",
    "id": 446668378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjY2ODM3OA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T17:16:28Z",
    "updated_at": "2018-12-12T17:16:28Z",
    "author_association": "MEMBER",
    "body": "Please reopen if you still have questions @mratsim :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446668378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
