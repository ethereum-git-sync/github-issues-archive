{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1387",
  "id": 486861928,
  "node_id": "MDU6SXNzdWU0ODY4NjE5Mjg=",
  "number": 1387,
  "title": "Unified slashing condition for equivocations",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    },
    {
      "id": 1437528763,
      "node_id": "MDU6TGFiZWwxNDM3NTI4NzYz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/post-freeze%20(substantive)",
      "name": "post-freeze (substantive)",
      "color": "991a40",
      "default": false,
      "description": "Substantive consensus change non-critical for long-lived cross-client testnets"
    },
    {
      "id": 1534063048,
      "node_id": "MDU6TGFiZWwxNTM0MDYzMDQ4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:BLS",
      "name": "scope:BLS",
      "color": "fef2c0",
      "default": false,
      "description": ""
    },
    {
      "id": 1725628406,
      "node_id": "MDU6TGFiZWwxNzI1NjI4NDA2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase0",
      "name": "phase0",
      "color": "c2e0c6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2019-08-29T10:02:48Z",
  "updated_at": "2020-04-27T16:12:03Z",
  "closed_at": "2020-04-27T16:12:03Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "In phase 1 we want three equivocation slashing conditions for 1) beacon blocks, 2) shard blocks, and 3) shard attestations. To reduce complexity those can be rolled into a single slashing condition. The idea (from @vbuterin) is to introduce a \"uniqueness root\" at the signature level.\r\n\r\nFor example, given a message `m`, the signature could be over `H(H(m), domain, uniqueness_root)`. Messages without equivocation protection would by default set `uniqueness_root = Bytes()`. Messages with equivocation protection would set `uniqueness_root = hash_tree_root(uniqueness_data))`.\r\n\r\nFor beacon blocks, shard blocks and shard attestations we can have `uniqueness_data` be of type `Container(Domain: domain, Slot: slot)`. This substantive change to phase 0 can be part of the upcoming BLS signature revamp.\r\n\r\nBeyond the complexity reductions, this also bring efficiency gains. Indeed, only the message hashes `H(m)` (as opposed to the full `m`) need to be included on-chain.",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526696738",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526696738",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526696738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjY5NjczOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-30T18:09:15Z",
    "updated_at": "2019-08-30T18:09:15Z",
    "author_association": "MEMBER",
    "body": "Not 100% sure I see the value here. Seems like it complicates the scheme.\r\n\r\n> For example, given a message m, the signature could be over H(H(m), domain_type, uniqueness_root)\r\n\r\nDo you mean `domain` instead of `domain_type` here?\r\n\r\n> Beyond the complexity reductions, this also bring efficiency gains. Indeed, only the message hashes H(m) (as opposed to the full m) need to be included on-chain.\r\n\r\nDo you mean an efficiency gain for the slashing proofs?\r\n\r\n--------\r\n\r\nstill chewing on it",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526696738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526700626",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526700626",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526700626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjcwMDYyNg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-30T18:21:35Z",
    "updated_at": "2019-08-30T18:21:35Z",
    "author_association": "MEMBER",
    "body": "^ unsure of my assessment. Thinking on it some more :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526700626/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526702744",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526702744",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526702744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjcwMjc0NA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-30T18:27:34Z",
    "updated_at": "2019-08-30T18:27:34Z",
    "author_association": "MEMBER",
    "body": "> Do you mean `domain` instead of `domain_type` here?\r\n\r\nFixed, thank you :)\r\n\r\n> Do you mean an efficiency gain for the slashing proofs?\r\n\r\nYes. Smaller (less data) slashing proofs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526702744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526806295",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526806295",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526806295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjgwNjI5NQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T06:48:09Z",
    "updated_at": "2019-08-31T07:30:04Z",
    "author_association": "MEMBER",
    "body": "> Seems like it complicates the scheme.\r\n\r\nThe simplifity benefit comes from the fact that we can use one slashing condition to cover (i) beacon block proposer slashings, (ii) shard block proposer slashings, (iii) shard block attester slashings, and that slashing condition doesn't need to understand any data structures, it can just see a hash and a signature and a validator index.\r\n\r\n> For example, given a message m, the signature could be over H(H(m), domain, uniqueness_root). Messages without equivocation protection would by default set uniqueness_root = Bytes(). Messages with equivocation protection would set uniqueness_root = hash_tree_root(uniqueness_data)). For beacon blocks, shard blocks and shard attestations we can have uniqueness_data be of type Container(Domain: domain, Slot: slot).\r\n\r\nWhy two different domains? It seems to me that in any case where we have different domains of the latter type we can make domains of the former type different too. If we go down to one domain, a lot of complexity goes down (specifically, no need for a container type).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526806295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526814177",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526814177",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526814177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjgxNDE3Nw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T09:01:30Z",
    "updated_at": "2019-08-31T09:01:30Z",
    "author_association": "MEMBER",
    "body": "> no need for a container type\r\n\r\nWe may want to introduce a container to handle domains as part of the BLS refactor. Right now we are mixing layers with `hash(message_hash + domain` at the [BLS layer](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/bls_signature.md#hash_to_g2). IMO the signature API should only accept `Bytes32` (no domain)—domains and uniqueness is logic specific to Eth2 consensus.\r\n\r\n> If we go down to one domain\r\n\r\nWhat about\r\n\r\n```python\r\nclass Wrapper(Container):\r\n    message_root: Hash\r\n    domain: Domain\r\n    slot: Slot\r\n```\r\n\r\nwhere the equivocation slashing condition checks\r\n\r\n```python\r\nw_1.message_root != w_2.message_root and\r\nw_1.domain == w_2.domain and\r\nw_1.domain in (DOMAIN_BEACON_PROPOSER, DOMAIN_SHARD_PROPOSER, DOMAIN_SHARD_ATTESTER) and\r\nw_1.slot == w_2.slot\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526814177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526837276",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526837276",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526837276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjgzNzI3Ng==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T15:00:20Z",
    "updated_at": "2019-08-31T15:00:20Z",
    "author_association": "MEMBER",
    "body": "We are going to need domains for things that aren't subject to equivocation slashing and things that don't have slots attached to them (eg. even shard blocks would be `ShardSlot` and not `Slot`). Maybe this?\r\n\r\n```python\r\nclass Wrapper(Container):\r\n    message_root: Hash\r\n    domain: Domain\r\n    unique: bool\r\n    uniqueness_tag: Hash\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526837276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526848605",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526848605",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526848605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjg0ODYwNQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T17:11:31Z",
    "updated_at": "2019-08-31T17:11:31Z",
    "author_association": "MEMBER",
    "body": "We can use `domain in (DOMAIN_BEACON_PROPOSER, DOMAIN_SHARD_PROPOSER, DOMAIN_SHARD_ATTESTER)` instead of `unique` (it's also safer for validators if consensus checks the `domain` rather than trusting `unique`). What about:\r\n\r\n```python\r\nclass Wrapper(Container):\r\n    message_root: Hash\r\n    domain: Domain\r\n    uniqueness_root: Hash\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526848605/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526865616",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-526865616",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 526865616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjg2NTYxNg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-31T21:13:25Z",
    "updated_at": "2019-08-31T21:13:25Z",
    "author_association": "MEMBER",
    "body": "Sure, sounds good to me. Another possible approach to avoid hardcoding domain checking is to set `uniqueness_root = message_root` in cases where you don't care about uniqueness.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526865616/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/616683519",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-616683519",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 616683519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjY4MzUxOQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-20T16:58:32Z",
    "updated_at": "2020-04-20T16:58:32Z",
    "author_association": "MEMBER",
    "body": "@JustinDrake has this issue been solved by #1532?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/616683519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/616821479",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-616821479",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 616821479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjgyMTQ3OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-20T21:32:42Z",
    "updated_at": "2020-04-20T21:32:42Z",
    "author_association": "MEMBER",
    "body": "Oh shoot! I think @djrtwo suggested that the phase 0 change be handled in a PR separate to #1532 to keep things simple, and then I forgot about this 🤦. Will create a draft PR tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/616821479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620084243",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1387#issuecomment-620084243",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1387",
    "id": 620084243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDA4NDI0Mw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T16:12:03Z",
    "updated_at": "2020-04-27T16:12:03Z",
    "author_association": "MEMBER",
    "body": "Closing in favour of https://github.com/ethereum/eth2.0-specs/pull/1758",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620084243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
