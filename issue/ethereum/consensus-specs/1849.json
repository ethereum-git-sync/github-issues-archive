{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1849",
  "id": 625949821,
  "node_id": "MDU6SXNzdWU2MjU5NDk4MjE=",
  "number": 1849,
  "title": "Tunable genesis time",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324751386,
      "node_id": "MDU6TGFiZWwxMzI0NzUxMzg2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:genesis",
      "name": "scope:genesis",
      "color": "EB7A77",
      "default": false,
      "description": ""
    },
    {
      "id": 1725628406,
      "node_id": "MDU6TGFiZWwxNzI1NjI4NDA2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase0",
      "name": "phase0",
      "color": "c2e0c6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-05-27T18:59:16Z",
  "updated_at": "2020-06-02T20:19:14Z",
  "closed_at": "2020-06-02T20:19:14Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently the genesis time is not very tune-able and is instead always at a timestamp where `genesis_time % MIN_GENESIS_DELAY == 0`. Due to the desire to generally configure testnets at \"mainnet\" config, `MIN_GENESIS_DELAY == 24hrs` and thus genesis_time is always at midnight UTC for mainnet configuration.\r\n\r\nDepending on who is working on the testnet (e.g. @q9f), this can lead undesirable late nights.\r\n\r\n## Background\r\n\r\nThe genesis time is computed such that regardless of when `MIN_GENESIS_ACTIVE_VALIDATOR_COUNT` is hit, `genesis_time` is always at the exact same time of day.\r\n\r\n```python\r\ngenesis_time=eth1_timestamp - eth1_timestamp % MIN_GENESIS_DELAY + 2 * MIN_GENESIS_DELAY\r\n```\r\n\r\nThis is so even if the exact day is known the exact time of some day is known so the teams can plan accordingly. (this being a very important feature is probably debatable).\r\n\r\n## Option 0\r\n\r\nDon't change anything and just deal with it.\r\n\r\nIf @q9f does weekly testnet restarts (under discussion), this will suck for him but be great for our friends in Australia.\r\n\r\n## Option 1\r\n\r\nThis option preserves the notion of knowing exactly what time of day genesis will be, but instead allows us to tune that time. It is backwards compatible for networks that use the default configuration values. \r\n\r\nIt simply takes the previous calculation and adds ` GENESIS_TIME_OFFSET` to the result to tune the precise time of day. A `GENESIS_TIME_OFFSET` of `0` would result in the same genesis time as in current specs.\r\n\r\n```python\r\ngenesis_time=(\r\n    eth1_timestamp\r\n    - eth1_timestamp % MIN_GENESIS_DELAY\r\n    + 2 * MIN_GENESIS_DELAY\r\n    + GENESIS_TIME_OFFSET\r\n)\r\n```\r\n\r\nFor example, if we use `MIN_GENESIS_DELAY = 86400` and `GENESIS_TIME_OFFSET = 21600` (6hrs), then genesis time will be at 6am UTC.\r\n\r\n## Option 2\r\n\r\nThis option does _not_ preserve knowing exactly what time of day genesis will happen. This instead just uses a fixed offset from the initial eth1 block timestamp at which point genesis conditions were first met.\r\n\r\n```python\r\ngenesis_time=eth1_timestamp + GENESIS_DELAY\r\n```\r\n\r\nIn cases in which `MIN_GENESIS_ACTIVE_VALIDATOR_COUNT` is hit prior to `MIN_GENESIS_TIME - GENESIS_DELAY`,  genesis will be approximately at `MIN_GENESIS_TIME` (thus highly predictable on most smaller test/devnet scenarios). The time becomes much less predictable in larger testnets and/or mainnet where the `MIN_GENESIS_ACTIVE_VALIDATOR_COUNT` is not guaranteed to happen at a certain time.\r\n\r\n",
  "closed_by": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/635902385",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1849#issuecomment-635902385",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849",
    "id": 635902385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTkwMjM4NQ==",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T10:36:32Z",
    "updated_at": "2020-05-29T10:42:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, my personal opinion on this as I brought this up. This is low priority and just a cosmetic change.\r\n* :shrug: If we stick to Option **0**, we'll be probably fine.\r\n* :heavy_multiplication_x: Option **1** is just unnecessarily adding another constant.\r\n* :heavy_check_mark: I'm personally in favor of Option **2**.\r\n  * :memo: It's not much of a difficult change, requires a minor spec version bump though.\r\n  * :partying_face: It introduces some randomness and makes launching chains so much more fun.\r\n  * :hourglass_flowing_sand: It's still very predictable especially when launching testnets.\r\n  * :baby: It significantly reduces complexity of the `genesis_time` formula.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/635902385/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/636567310",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1849#issuecomment-636567310",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1849",
    "id": 636567310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjU2NzMxMA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T01:26:40Z",
    "updated_at": "2020-06-01T01:26:40Z",
    "author_association": "MEMBER",
    "body": "I don't feel strongly, but would lean towards option 2. If we do this, I would suggest doubling `MIN_GENESIS_TIME` to 48 hrs for mainnet.\r\n\r\nPerhaps this is tangential, but I would even advocate for making `MIN_GENESIS_TIME` a few days to give us plenty of time to test the genesis state and distribute it in binaries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/636567310/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
