{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1777",
  "id": 610356192,
  "node_id": "MDU6SXNzdWU2MTAzNTYxOTI=",
  "number": 1777,
  "title": "ATTESTATION_SUBNET_COUNT should be dynamic",
  "user": {
    "login": "jrhea",
    "id": 5555162,
    "node_id": "MDQ6VXNlcjU1NTUxNjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhea",
    "html_url": "https://github.com/jrhea",
    "followers_url": "https://api.github.com/users/jrhea/followers",
    "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhea/orgs",
    "repos_url": "https://api.github.com/users/jrhea/repos",
    "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhea/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-04-30T20:13:31Z",
  "updated_at": "2020-05-14T20:29:21Z",
  "closed_at": "2020-05-14T20:29:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "`ATTESTATION_SUBNET_COUNT` is currently a spec constant that defines the valid range of subnets persistent committees should randomly subscribe to (this value is currently set to 64).  When the network has a smaller number of validators, this results in nodes joining subnets with committee counts of 0.  Spreading persistent committee members across unused subnets could significantly inhibit our ability to find subnets in a timely fashion.  \r\n\r\nThe following table compares active validators to resulting committee counts:\r\n\r\n| ACTIVE VALIDATORS | COMMITTEE COUNT |\r\n|----------------------|-----------------------|\r\n|   16384 |  4|\r\n| 32768 | 8 |\r\n| ...|...|\r\n|262144| 64|\r\n\r\nIn other words,  we don't need 64 attestation subnets until we reach 262,144 active validators.  \r\n\r\nTo fix this, I suggest that we replace  `ATTESTATION_SUBNET_COUNT` with a method that calculates it based on the committee count.  Consider something like this to start:\r\n\r\n```python\r\ndef get_attestation_subnet_count_at_slot(state: BeaconState, slot: Slot) -> uint64:  \r\n    return min(get_committee_count_at_slot(state,slot), 64)\r\n```\r\nthat seems fine if we assume a static validator set, but we really should consider how many validators could exit or activate within a `PERSISTENT_COMMITTEE_PERIOD` to ensure we create enough attestation subnets.  To do that, we should take a look at worst case validator churn limits.  From the spec, `get_validator_churn_limit()` is defined as follows:\r\n\r\n```python\r\ndef get_validator_churn_limit(state: BeaconState) -> uint64:\r\n    \"\"\"\r\n    Return the validator churn limit for the current epoch.\r\n    \"\"\"\r\n    active_validator_indices = get_active_validator_indices(state, get_current_epoch(state))\r\n    return max(MIN_PER_EPOCH_CHURN_LIMIT, len(active_validator_indices) // CHURN_LIMIT_QUOTIENT)\r\n```\r\n\r\nIn order to have a churn limit > 4 , this would have to be true:\r\n\r\n```len(active_validator_indices)  > 4 * CHURN_LIMIT_QUOTIENT```\r\n\r\nIn other words, we would need 262,144 active validators.  From the table above, we know this is the exact amount needed to reach a committee count of 64.  This means that we can calculate the max increase/decrease in committee counts within a `PERSISTEN_COMMITTEE_PERIOD` as follows:\r\n\r\n```\r\nChange in num active validators = 4*PERSISTEN_COMMITTEE_PERIOD = +/- 8,192 validators\r\nChange in committee count = 8,192/SLOTS_PER_EPOCH/TARGET_COMMITTEE_SIZE = +/- 2\r\n```\r\n\r\nIt's probably safe to only consider the max increase in committee count (worst, worst case we have 2 additional attestation subnets).  As a result, we can modify our new method `get_attestation_subnet_count_at_slot()` from above to account for the worst case scenario where 2 additional committees could be added within a `PERSISTENT_COMMITTEE_PERIOD`:\r\n\r\n```python\r\ndef get_attestation_subnet_count_at_slot(state: BeaconState, slot: Slot) -> uint64:  \r\n    max_additional_committees = MIN_PER_EPOCH_CHURN_LIMIT*PERSISTEN_COMMITTEE_PERIOD//SLOTS_PER_EPOCH//TARGET_COMMITTEE_SIZE\r\n    return min(get_committee_count_at_slot(state,slot) + max_additional_committees, 64)\r\n```\r\n\r\nIf we want to retain the ability to control the committee to attestation subnets ratio, we could add a configurable spec constant called `COMMITTEES_PER_SUBNET` that can be set to 1 and `get_attestation_subnet_count_at_slot` could be modified as follows:\r\n\r\n```python\r\ndef get_attestation_subnet_count_at_slot(state: BeaconState, slot: Slot) -> uint64:  \r\n    max_additional_committees = MIN_PER_EPOCH_CHURN_LIMIT*PERSISTEN_COMMITTEE_PERIOD//SLOTS_PER_EPOCH//TARGET_COMMITTEE_SIZE\r\n    return min(get_committee_count_at_slot(state,slot) + max_additional_committees, 64) // COMMITTEES_PER_SUBNET\r\n```\r\n\r\nCredit/blame to @mkalinin for talking this out with me and @djrtwo for pointing out that low validator counts could result in persistent committee members joining unused subnets.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622282969",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-622282969",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 622282969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjI4Mjk2OQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T07:27:54Z",
    "updated_at": "2020-05-01T07:27:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also we need `EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2` (54 hours) warm-up period when validators are required to join randomly to new subnet, but it's not involved in any attestation/block duties. Otherwise we have 0 nodes skeleton when new subnet is added. It couldn't be discovered.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622282969/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622459227",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-622459227",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 622459227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjQ1OTIyNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T16:30:07Z",
    "updated_at": "2020-05-01T16:30:07Z",
    "author_association": "MEMBER",
    "body": "Thanks @jrhea! I had similar thoughts as we were discussing the attnets debugging work you've been doing. \r\n\r\nI think that predicting the validator set size in some future epoch and accounting for how many committees _will be_ is not worth the added complexity here (especially re: @zilm13's comment about the warm-up).\r\n\r\nAnother couple of notes:\r\n* Phase 1 won't have a notion of unused subnets due to the actual assignment of shards to each so replicating full subnets (and the size of persistent vals on the used subnets) to some extent seems reasonable here \r\n* Having more validators on persistent subnets has diminishing returns in terms of increased bandwidth to each node.\r\n\r\nThe biggest arguments might lie in being able to find peers more easily in the dht but this might not be a realistic approximation of what comes in phase 1.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622459227/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622470281",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-622470281",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 622470281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjQ3MDI4MQ==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T16:58:00Z",
    "updated_at": "2020-05-01T17:02:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> especially re: @zilm13's comment about the warm-up\r\n\r\nI don't see his comment as really being an issue.  The warmup is accounted for in the `PERSISTENT_COMMITTEE_PERIOD` of 9 days.  If that constant is going away, we simple use `EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2` instead.  We are just looking for a worst case here to apply as a lead.  With a 9 day lead...we are looking at an additional 2 committees.\r\n\r\n> Phase 1 won't have a notion of unused subnets due to the actual assignment of shards to each so replicating full subnets (and the size of persistent vals on the used subnets) to some extent seems reasonable here\r\n\r\nMy understanding was that we would be using topic discovery in phase 1. \r\n\r\n> Having more validators on persistent subnets has diminishing returns in terms of increased bandwidth to each node.\r\n\r\nI believe this can be addressed, but it is part of a solution to another concern i have. \r\n\r\n> The biggest arguments might lie in being able to find peers more easily in the dht but this might not be a realistic approximation of what comes in phase 1.\r\n\r\nAgain, i thought we plan on implementing topic discovery for phase 1. if not, i see your point.  If we are, then i would consider this argument less compelling.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622470281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622474985",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-622474985",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 622474985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjQ3NDk4NQ==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T17:09:49Z",
    "updated_at": "2020-05-01T17:09:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think that predicting the validator set size in some future epoch and accounting for how many committees will be is not worth the added complexity here\r\n\r\nI forgot to comment on this.  Ya, I figured you might say that and you would be a better judge of the ramifications of this.  Your call boss",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622474985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622663771",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-622663771",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 622663771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjY2Mzc3MQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-02T03:50:49Z",
    "updated_at": "2020-05-02T04:41:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would make sense to use the first option\r\n```py\r\ndef get_attestation_subnet_count_at_slot(state: BeaconState, slot: Slot) -> uint64:  \r\n    return min(get_committee_count_at_slot(state,slot), 64)\r\n```\r\nUsing the current active validator set seems like a good gauge as any for determining the amount of subnets. \r\n\r\nAlthough there might be a possibility of newly added validators biasing the subnets through this period `EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2`. although I dont think it is something we should worry about.\r\n\r\n\r\n> The biggest arguments might lie in being able to find peers more easily in the dht but this might not be a realistic approximation of what comes in phase 1.\r\n\r\nWhile that maybe true, the initial genesis validator set would only have 4 committees. Having validators subscribe to the other 60 empty subnets seems a bit pointless. You would have 94% of your validators not participating in a functioning subnet. \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/622663771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/623519167",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-623519167",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 623519167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzUxOTE2Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T15:05:24Z",
    "updated_at": "2020-05-04T15:05:24Z",
    "author_association": "MEMBER",
    "body": "> You would have 94% of your validators not participating in a functioning subnet.\r\n\r\nWhich is totally fine. If we move to phase 1 with similar number of validators (this is feasible though unlikely), all persistent subnets would then be used, but they would also be the same size as those today. The size of the persistent subnet approximates the phase 1 behaviour more than all of the validators being assigned to subnets that are actually used.\r\n\r\n> Using the current active validator set seems like a good gauge as any for determining the amount of subnets.\r\n\r\nBut this does not adequately capture the moment in which the subnet count would jump up and as @zilm13 noted, the subnet would be under-provisioned in number of validators.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/623519167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/623541026",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-623541026",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 623541026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzU0MTAyNg==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T15:42:17Z",
    "updated_at": "2020-05-04T15:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But this does not adequately capture the moment in which the subnet count would jump up and as @zilm13 noted, the subnet would be under-provisioned in number of validators.\r\n\r\nThat's why I suggested adding a calculation that gives the worst case possible number of new committees.\r\n```python\r\ndef get_attestation_subnet_count_at_slot(state: BeaconState, slot: Slot) -> uint64:  \r\n    max_additional_committees = MIN_PER_EPOCH_CHURN_LIMIT*PERSISTENT_COMMITTEE_PERIOD//SLOTS_PER_EPOCH//TARGET_COMMITTEE_SIZE\r\n    return min(get_committee_count_at_slot(state,slot) + max_additional_committees, 64) // COMMITTEES_PER_SUBNET\r\n```\r\n\r\nGranted that `PERSISTENT_COMMITTEE_PERIOD`  should be changed to `EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2`, but considering that `PERSISTENT_COMMITTEE_PERIOD = 2048 epochs` and only results in an additional 2 committees....i think switching to `EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2 = 512 epochs` is even easier.\r\n\r\nWe change:\r\n\r\n    max_additional_committees = MIN_PER_EPOCH_CHURN_LIMIT*PERSISTENT_COMMITTEE_PERIOD//SLOTS_PER_EPOCH//TARGET_COMMITTEE_SIZE = 2 committees\r\n\r\nto \r\n\r\n    max_additional_committees = MIN_PER_EPOCH_CHURN_LIMIT*EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION * 2//SLOTS_PER_EPOCH//TARGET_COMMITTEE_SIZE = 0.5 (round up to 1) committees\r\n\r\nWhat am i missing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/623541026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626235833",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-626235833",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 626235833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjIzNTgzMw==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-09T21:10:48Z",
    "updated_at": "2020-05-09T21:11:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@djrtwo if I remember correctly, one of the possibilities we discussed in the networking call was reverting back to using all 64 committees so that our network is more similar to how it will be in phase 1.  Is that still on the table?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626235833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626785538",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-626785538",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 626785538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjc4NTUzOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T15:45:46Z",
    "updated_at": "2020-05-11T15:53:06Z",
    "author_association": "MEMBER",
    "body": "working on that now\r\nOn the table, but not certain worth the complexity/change at this point",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626785538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/628870242",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1777#issuecomment-628870242",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1777",
    "id": 628870242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODg3MDI0Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T20:29:20Z",
    "updated_at": "2020-05-14T20:29:20Z",
    "author_association": "MEMBER",
    "body": "fix merged! thanks @jrhea !",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/628870242/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
