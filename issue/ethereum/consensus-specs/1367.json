{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1367",
  "id": 481793098,
  "node_id": "MDU6SXNzdWU0ODE3OTMwOTg=",
  "number": 1367,
  "title": "Minimum number of validators to progress the chain",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043872,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODcy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:question",
      "name": "general:question",
      "color": "FAD689",
      "default": false,
      "description": "Further information is requested"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-08-16T21:29:37Z",
  "updated_at": "2019-08-20T11:33:54Z",
  "closed_at": "2019-08-20T11:33:53Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "What is the minimum number of validators to progress the chain, and why?\r\n\r\nI assumed it was 1 until @djrtwo suggested it was 64 and [SigmaPrime specifies 64](https://github.com/sigp/lighthouse/blob/468015f9bbc1d74522f041cc278740026d4e1893/eth2/types/src/beacon_state/beacon_state_types.rs#L92). (The design *intent* was for the beacon chain to have minimal liveness requirements, where a single validator is sufficient. Being able to run the beacon chain with, say, 3 validators may also be useful for testing and fuzzing. If it's an easy fix we may want to address the design flaw.)",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522265165",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522265165",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522265165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI2NTE2NQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-17T19:41:12Z",
    "updated_at": "2019-08-17T19:41:12Z",
    "author_association": "MEMBER",
    "body": "Currently `get_beacon_proposer_index` will fail if the number of validators is less than 64, as then some committees will be empty and so `candidate_index = first_committee[(epoch + i) % len(first_committee)]` will fail. We could edit the code to return None in that case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522265165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522270178",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522270178",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522270178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI3MDE3OA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-17T20:59:05Z",
    "updated_at": "2019-08-17T20:59:05Z",
    "author_association": "MEMBER",
    "body": "I see. Another (possibly more natural) possibility is to not restrict oneself to the first committee and instead continue to the following committees. One advantage of this approach is (marginally) more fairness. Indeed, consider a scenario where there's exactly one validator per committee. Then every validator is equally likely to be selected as a proposer, regardless of their effective balance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522270178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522290576",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522290576",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522290576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI5MDU3Ng==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-18T04:38:19Z",
    "updated_at": "2019-08-18T04:38:19Z",
    "author_association": "MEMBER",
    "body": "I'd say that's too much complexity to marginally improve a very marginal case :smile:",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522290576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522305106",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522305106",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522305106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMwNTEwNg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-18T09:15:43Z",
    "updated_at": "2019-08-18T09:15:43Z",
    "author_association": "MEMBER",
    "body": "What about:\r\n\r\n```python\r\nepoch = get_current_epoch(state)\r\nindices = get_active_validator_indices(state, epoch)\r\nseed = get_seed(state, epoch)\r\nMAX_RANDOM_BYTE = 2**8 - 1\r\nslot_counter = 0\r\ni = 0\r\nwhile True:\r\n    candidate_index = indices[compute_shuffled_index(ValidatorIndex(i % len(indices)), len(indices), seed)]\r\n    effective_balance = state.validators[candidate_index].effective_balance\r\n    random_byte = hash(seed + int_to_bytes(i // 32, length=8))[i % 32]\r\n    if effective_balance * MAX_RANDOM_BYTE >= MAX_EFFECTIVE_BALANCE * random_byte:\r\n        if slot_counter == state.slot % SLOTS_PER_EPOCH:\r\n            return ValidatorIndex(candidate_index)\r\n        slot_counter += 1\r\n    i += 1\r\n```\r\n\r\nAdvantages beyond better liveness:\r\n\r\n1) simpler (no `get_start_shard`, `get_committee_count`, or `get_crosslink_committee`)\r\n2) more fairness\r\n3) encourage implementers to \"stream\" candidate indices without computing a full committee",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522305106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522305954",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522305954",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522305954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMwNTk1NA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-18T09:29:51Z",
    "updated_at": "2019-08-18T09:32:15Z",
    "author_association": "MEMBER",
    "body": "Another possibility (cleaner):\r\n\r\n```python\r\nepoch = get_current_epoch(state)\r\nindices = get_active_validator_indices(state, epoch)\r\nseed = xor(get_seed(state, epoch), state.slot)\r\nMAX_RANDOM_BYTE = 2**8 - 1\r\ni = 0\r\nwhile True:\r\n    candidate_index = indices[compute_shuffled_index(ValidatorIndex(i % len(indices)), len(indices), seed)]\r\n    effective_balance = state.validators[candidate_index].effective_balance\r\n    random_byte = hash(seed + int_to_bytes(i // 32, length=8))[i % 32]\r\n    if effective_balance * MAX_RANDOM_BYTE >= MAX_EFFECTIVE_BALANCE * random_byte:\r\n        return ValidatorIndex(candidate_index)\r\n    i += 1\r\n```\r\n\r\n> We could edit the code to return None in that case\r\n\r\nThat's not great for testing/fuzzing. If there's only 3 validators we still want the chain to be able to progress every slot (as opposed to just 3 out of 64 slots).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522305954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522675683",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522675683",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522675683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjY3NTY4Mw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T17:27:22Z",
    "updated_at": "2019-08-19T17:27:22Z",
    "author_association": "MEMBER",
    "body": "I think there might be another component that fails at less than `SLOTS_PER_EPOCH` validators. I'll take a look and report back.\r\n\r\n@JustinDrake I think `SLOTS_PER_EPOCH` validators is a very reasonable lower bound on min-validators and I'm not necessarily in favor of adding complexity to reduce it lower.\r\n\r\n>  If there's only 3 validators we still want the chain to be able to progress every slot (as opposed to just 3 out of 64 slots).\r\n\r\nGiven the slashing conditions, this wouldn't be possible. Bare minimum wrt to slashing conditions is that the number of blocks possible per epoch is `min(SLOTS_PER_EPOCH, len(validators)`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522675683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522691259",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522691259",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522691259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjY5MTI1OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T18:07:46Z",
    "updated_at": "2019-08-19T18:07:46Z",
    "author_association": "MEMBER",
    "body": "> I'm not necessarily in favor of adding complexity\r\n\r\nRight. So I think we can actually *reduce* complexity. (See two proposals above.)\r\n\r\n> Bare minimum wrt to slashing conditions is that the number of blocks possible per epoch is `min(SLOTS_PER_EPOCH, len(validators))`\r\n\r\nNot sure I understand:\r\n\r\n1) What is the relationship between slashing conditions and number of block possible per epoch?\r\n2) Why would my proposals not yield at least `min(SLOTS_PER_EPOCH, len(validators))` possible blocks per epoch? (I believe they yield `SLOTS_PER_EPOCH`, i.e. every slot has a proposer.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522691259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522832233",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522832233",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522832233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjgzMjIzMw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-20T02:57:11Z",
    "updated_at": "2019-08-20T02:57:11Z",
    "author_association": "MEMBER",
    "body": "A proposer slashing is assessed on a per-epoch basis. If `len(active_validators) < SLOTS_PER_EPOCH` and `blocks_per_epoch == SLOTS_PER_EPOCH`, then some validators must be assigned to propose multiple times in an epoch. As the current proposer slashing condition is written, fulfilling multiple proposal duties would result in a slashable offense ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522832233/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522972917",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1367#issuecomment-522972917",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1367",
    "id": 522972917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjk3MjkxNw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-20T11:33:53Z",
    "updated_at": "2019-08-20T11:33:53Z",
    "author_association": "MEMBER",
    "body": "Closing in favour of #1371",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522972917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
