{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/730",
  "id": 418423259,
  "node_id": "MDU6SXNzdWU0MTg0MjMyNTk=",
  "number": 730,
  "title": "Enabling compounding growth for validators' stakes",
  "user": {
    "login": "CarlBeek",
    "id": 12530043,
    "node_id": "MDQ6VXNlcjEyNTMwMDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CarlBeek",
    "html_url": "https://github.com/CarlBeek",
    "followers_url": "https://api.github.com/users/CarlBeek/followers",
    "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
    "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
    "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
    "repos_url": "https://api.github.com/users/CarlBeek/repos",
    "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-03-07T17:16:34Z",
  "updated_at": "2019-04-17T23:19:02Z",
  "closed_at": "2019-04-17T23:19:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Receiving compounding returns on one's stake is something I deem to be vital in a system that should be competitive as an investment instrument (something I argue is essential for drawing in as much staking capital as possible). \r\n\r\nIn the current spec, the incentives could be deemed as unfair as `get_effecitve_balance` gives compounding returns to those who have less than 32 Eth (who have been mediocre validators at best) while giving constant (as a function of your balance) returns for those with more than 32 (those who are great validators).\r\n\r\nA lack of compounding returns means that there is some point where it is worthwhile for a validator to logout and transfer their excess balance (their balance over 32 Eth) and then become a new active validator again. This will naturally increase the number of transactions in the beacon chain. Precisely where this point is depends on: the length of the exit queue, the fungibility of BETH, and the transfer fee market. \r\n\r\nValidators with smaller holdings (say only 32 Eth) are encouraged to withdraw their excess Eth periodically and either send it to a staking pool or some other open-finance alternative. Validators with large stakes, say 32x 32Eth, would be behaving economically irrationally if they do not withdraw all of their stakes when they reach 33 Eth each and launch 33 validator instances of 32 Eth again.\r\n\r\nOne possible solution would be to change `get_effective_balance` to clip your balance into [16,64]. By raising the maximum to 64 Eth, honest validators can keep staking until each validator has sufficient rewards to spilt their validator instance into 2 separate instances. This would reduce the number of transfers (and thus size and processing) in the beacon chain whilst making staking a more attractive use of capital.\r\n\r\nWhen implementing this proposal, it would also be sensible to revert transfers to accounts with >32 Eth. Otherwise, validators could consolidate their ether into fewer instances which is accentuates the issue described below:\r\n\r\nThe downside of this proposal is that validators with more that 32 Eth have to do less work than they are payed for (for as block proposers etc) but they are payed appropriately for the security that they provide.\r\n\r\nAnother issue is that honest validators (with large accrued stakes) will be shuffled to a single shard (instead of multiple shards as per the economically rational behaviour described above). This means that the minimum number of validators per shard will need to increase.\r\n\r\n\r\n**TLDR:**\r\nCurrently validator balances over 32 Eth are not rewarded which represents capital inefficiency. Due to the design of the system, the better a validator's behaviour, the greater the burden of this capital inefficiency they occur. I propose providing rewards all the way up to 64 Eth. This does have some downsides though.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484296705",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/730#issuecomment-484296705",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/730",
    "id": 484296705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDI5NjcwNQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T23:18:57Z",
    "updated_at": "2019-04-17T23:18:57Z",
    "author_association": "MEMBER",
    "body": "I believe we decided to enable transfers for balances beyond `MAX_EFFECTIVE_BALANCE` rather than to enable compounding.\r\n\r\nImportant to note that we had previously discussed removing transfers at phase 2, but this would imply we want to keep them in.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484296705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
