{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2138",
  "id": 748164027,
  "node_id": "MDU6SXNzdWU3NDgxNjQwMjc=",
  "number": 2138,
  "title": "SSZ implementations list",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170174610,
      "node_id": "MDU6TGFiZWwxMTcwMTc0NjEw",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:SSZ",
      "name": "scope:SSZ",
      "color": "77428D",
      "default": false,
      "description": "Simple Serialize"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-11-22T04:02:02Z",
  "updated_at": "2023-07-03T04:32:56Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "A non-exhaustive list of SSZ implementations. Not officially endorsed, but maintained by client teams and other members of the ethereum community. **Comment** in this issue if you like to add/update an entry.\r\n\r\n*Maintained here to avoid continuous changes to the spec (and not delay table updates till spec release).*\r\n\r\n| Language    | Project           | Maintainer                        | License            | Status             | Features / Notes                | Implementation |\r\n|-------------|-------------------|-----------------------------------|--------------------|--------------------|---------------------------------|----------------|\r\n| C++         | Mammon            | Potuz                             | GPL-3.0            | Active             | Optimized hash function         | [`potuz/mammon`](https://github.com/potuz/mammon/tree/main/ssz) |\r\n| Dafny       | Eth2 spec/verif. with Dafny | ConsenSys Software And Ethereum Foundation (grant) | Apache-2.0 | Active | Formal spec., correctness proofs | [`ConsenSys/eth2.0-dafny`](https://github.com/ConsenSys/eth2.0-dafny) |\r\n| Go          | ZRNT              | Diederik Loerakker (@protolambda) | MIT                | Active             | Generic, caching, datasharing   |[`protolambda/ztyp`](https://github.com/protolambda/ztyp) |\r\n| Go          | Prysm             | Ferran Borreguero (@ferranbt)     | MIT                | Active             | Code-gen, fast                  |[`ferranbt/fastssz`](https://github.com/ferranbt/fastssz/) |\r\n| Java        | Teku              | Consensys/PegaSys Eng.            | Apache-2.0         | Active             | Caching, datasharing            |[`PegaSysEng/teku/ssz`](https://github.com/PegaSysEng/teku/tree/master/ssz/src/main/java/tech/pegasys/teku/ssz) |\r\n| Nim         | Nimbus            | Status                            | MIT and Apache-2.0 | Active             | In-place decode, Caching        |[`status-im/nim-beacon-chain/ssz.nim`](https://github.com/status-im/nim-beacon-chain/blob/master/beacon_chain/ssz.nim) |\r\n| Python      | Trinity           | Ethereum Foundation               | MIT                | Active             | Pyrsistent, partial caching     |[`ethereum/py-ssz`](https://github.com/ethereum/py-ssz) |\r\n| Python      | Pyspec / Eth2.py  | Diederik Loerakker (@protolambda) | MIT                | Active             | Datasharing, caching, streaming |[`protolambda/remerkleable`](https://github.com/protolambda/remerkleable) |\r\n| Rust | - | Alex Stokes (@ralexstokes) | MIT | Active | Built for light-client usage | [`ralexstokes/ssz_rs`](https://github.com/ralexstokes/ssz_rs) |\r\n| Rust        | Lighthouse        | Sigma Prime                       | Apache-2.0         | Active             | Partial caching, fast           | [https://github.com/sigp/lighthouse/tree/master/consensus/ssz](https://github.com/sigp/lighthouse/tree/master/consensus/ssz) |\r\n| Typescript  | Lodestar          | Chainsafe Systems                 | LGPL-v3.0          | Active             | Both Tree & structural, caching |[`ChainSafe/lodestar/ssz`](https://github.com/ChainSafe/lodestar/tree/master/packages/ssz) |\r\n| Zig | - | Guillaume Ballet (@gballet) | Unlicense | Active | No merkleization (yet) | [`gballet/ssz.zig`](https://github.com/gballet/ssz.zig) |\r\n| C# | - | @hexafluoride | MIT | Active | Experimental, serialization only | [`hexafluoride/SszSharp`](https://github.com/hexafluoride/SszSharp) |\r\n| Go          | Prysm             | Prysmatic Labs                    | MIT                | Deprecated         | Generic, reflection, known bugs |[`prysmaticlabs/go-ssz`](https://github.com/prysmaticlabs/go-ssz) |\r\n| Go          | ZRNT              | Diederik Loerakker (@protolambda) | MIT                | Deprecated             | Unsafe Go, fast, streaming      |[`protolambda/zssz`](https://github.com/protolambda/zssz) |\r\n| Java        | Harmony           | Harmony                           | Apache-2.0         | Deprecated         | Partially merged into Teku      |[`harmony-dev/beacon-chain-java/ssz`](https://github.com/harmony-dev/beacon-chain-java/tree/develop/ssz) |\r\n| TypeScript  | Lodestar          | ChainSafe Systems                 | Apache-2.0         | Archived           | See new Lodestar SSZ            |[`ChainSafe/ssz-js`](https://github.com/ChainSafe/ssz-js) |\r\n| C#          | Cortex            | Sly Gryphon (@sgryphon)           | LGPL-v3.0          | Discontinued | Experimental                    |[`sgryphon/cortex-ssz`](https://github.com/sgryphon/cortex-ssz) |\r\n| Rust        | Shasper           | ParityTech                        | GPL-3.0            | Discontinued       | No updates                      |[`paritytech/shasper/ssz`](https://github.com/paritytech/shasper/tree/master/utils/ssz) |\r\n| Swift       | Yeeth             | Dean Eigenmann (@decanus, @yeeth) | MIT                | Discontinued       | Incomplete                      |[`yeeth/SimpleSerialize.swift`](https://github.com/yeeth/SimpleSerialize.swift) |\r\n| Java        | Cava              | ConsenSys                         | Apache-2.0         | Discontinued       | Outdated, incomplete            |[`ConsenSys/cava/ssz`](https://www.github.com/ConsenSys/cava/tree/master/ssz) |\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/731856857",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-731856857",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 731856857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg1Njg1Nw==",
    "user": {
      "login": "franck44",
      "id": 14901362,
      "node_id": "MDQ6VXNlcjE0OTAxMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franck44",
      "html_url": "https://github.com/franck44",
      "followers_url": "https://api.github.com/users/franck44/followers",
      "following_url": "https://api.github.com/users/franck44/following{/other_user}",
      "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
      "organizations_url": "https://api.github.com/users/franck44/orgs",
      "repos_url": "https://api.github.com/users/franck44/repos",
      "events_url": "https://api.github.com/users/franck44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franck44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T22:22:16Z",
    "updated_at": "2020-11-22T22:22:16Z",
    "author_association": "NONE",
    "body": "@protolambda \r\nThanks for starting this list. BTW what is the order chosen for the list? It does not seem be sorted against languages, or alphabetical ... or license. And what is the difference between archived/deprecated/discontinued?\r\n\r\nThere is a formal specification and implementations of the SSZ functions in Dafny [here](https://github.com/ConsenSys/eth2.0-dafny/tree/master/src/dafny/ssz).\r\nThe functional style of the implementations does not prescribe any particular language, but rather identifies the **pre/post-condutions** of each function.\r\nThe Dafny implementations are executable, can be translated into C#, Go, Java.\r\nMore importantly the code is proved correct against some desirable properties, e.g., `deserialise(serialise(x)) == x` (proof [here](https://github.com/ConsenSys/eth2.0-dafny/blob/81e73457bde0fef2e99cbd813ea5734a2f7f9d8d/src/dafny/ssz/Serialise.dfy#L288)) and  `injectiveness` of `serialise` (proof [here](https://github.com/ConsenSys/eth2.0-dafny/blob/81e73457bde0fef2e99cbd813ea5734a2f7f9d8d/src/dafny/ssz/Serialise.dfy#L323)).\r\n\r\nThere is also an [SSZ wiki](https://github.com/ConsenSys/eth2.0-dafny/blob/master/wiki/ssz-notes.md). (WIP)\r\n\r\n**Entry proposal:**\r\nLanguage: Dafny\r\nProject: Specification and Verification of Eth2.0 in Dafny \r\nMaintainer: ConsenSys Software And Ethereum Foundation (grant)\r\nLicense: Apache-2.0\r\nStatus: Active\r\nFeatures: Formal specification of each function with pre-post-conditions, correctness proofs\r\nLink: [link to repo](https://github.com/ConsenSys/eth2.0-dafny) \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/731856857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/731862144",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-731862144",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 731862144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg2MjE0NA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T23:02:22Z",
    "updated_at": "2020-11-22T23:02:22Z",
    "author_association": "MEMBER",
    "body": "@franck44 no particular order, but roughly ordered by \"status\" (active being the highest ranking), then grouped by \"language\" (alphabetical), and then any order how I happened to build the list. The deprecated/discontinued etc. libraries are at the bottom so they are not as noisy. Happy to re-order if you've a suggestion.\r\n\r\nMy interpretation here:\r\narchived: not maintained, only there to keep the code public. Not recommended to use. May be replaced with something else. GitHub has a nice archive function, which makes a repo read-only.\r\ndeprecated: code that mostly works, but is considered legacy and not recommended for production.\r\ndiscontinued: code that mostly works, but end-of-life without replacement, nor any archival guaranteed.\r\n\r\nIn the end most users should just pick an active implementation, of which there are plenty options.\r\n\r\nDafny entry proposal sounds good, will add it. Will need to summarize the \"Features\" to fit in the table though. Hope I don't butcher it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/731862144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/752682571",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-752682571",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 752682571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjY4MjU3MQ==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T16:32:05Z",
    "updated_at": "2020-12-30T16:32:05Z",
    "author_association": "MEMBER",
    "body": "@protolambda could you please add gballet/ssz.zig, the ziglang implementation that I am maintaining? No project in particular (or \"geth\" if you must have one) and the license is \"The Unlicense\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/752682571/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1276978984",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-1276978984",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 1276978984,
    "node_id": "IC_kwDOCOoGbc5MHSco",
    "user": {
      "login": "hexafluoride",
      "id": 5571189,
      "node_id": "MDQ6VXNlcjU1NzExODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5571189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexafluoride",
      "html_url": "https://github.com/hexafluoride",
      "followers_url": "https://api.github.com/users/hexafluoride/followers",
      "following_url": "https://api.github.com/users/hexafluoride/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexafluoride/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexafluoride/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexafluoride/subscriptions",
      "organizations_url": "https://api.github.com/users/hexafluoride/orgs",
      "repos_url": "https://api.github.com/users/hexafluoride/repos",
      "events_url": "https://api.github.com/users/hexafluoride/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexafluoride/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-13T03:29:10Z",
    "updated_at": "2022-10-13T03:29:10Z",
    "author_association": "NONE",
    "body": "Proposing [SszSharp](https://github.com/hexafluoride/SszSharp) be added to this list, as the other C# implementations are quite incomplete compared to mine.\r\nCurrently, serialization and deserialization is supported well enough that it can roundtrip a BeaconState, and merkleization support is planned. Licensed under MIT.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1276978984/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1293359944",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-1293359944",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 1293359944,
    "node_id": "IC_kwDOCOoGbc5NFxtI",
    "user": {
      "login": "amirkhan7javi",
      "id": 99166918,
      "node_id": "U_kgDOBekqxg",
      "avatar_url": "https://avatars.githubusercontent.com/u/99166918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amirkhan7javi",
      "html_url": "https://github.com/amirkhan7javi",
      "followers_url": "https://api.github.com/users/amirkhan7javi/followers",
      "following_url": "https://api.github.com/users/amirkhan7javi/following{/other_user}",
      "gists_url": "https://api.github.com/users/amirkhan7javi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amirkhan7javi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amirkhan7javi/subscriptions",
      "organizations_url": "https://api.github.com/users/amirkhan7javi/orgs",
      "repos_url": "https://api.github.com/users/amirkhan7javi/repos",
      "events_url": "https://api.github.com/users/amirkhan7javi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amirkhan7javi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-27T11:05:29Z",
    "updated_at": "2022-10-27T11:05:29Z",
    "author_association": "NONE",
    "body": "Thanks for the cooperation",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1293359944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1617276035",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2138#issuecomment-1617276035",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2138",
    "id": 1617276035,
    "node_id": "IC_kwDOCOoGbc5gZayD",
    "user": {
      "login": "matthewkeil",
      "id": 18608739,
      "node_id": "MDQ6VXNlcjE4NjA4NzM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18608739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewkeil",
      "html_url": "https://github.com/matthewkeil",
      "followers_url": "https://api.github.com/users/matthewkeil/followers",
      "following_url": "https://api.github.com/users/matthewkeil/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewkeil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewkeil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewkeil/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewkeil/orgs",
      "repos_url": "https://api.github.com/users/matthewkeil/repos",
      "events_url": "https://api.github.com/users/matthewkeil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewkeil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-03T04:32:56Z",
    "updated_at": "2023-07-03T04:32:56Z",
    "author_association": "MEMBER",
    "body": "Hi @protolambda I stumbled across this and noticed the JS/TS repos have been updated since this was posted.  You can find the new location at [`Chainsafe/ssz`](https://github.com/ChainSafe/ssz).  Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1617276035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
