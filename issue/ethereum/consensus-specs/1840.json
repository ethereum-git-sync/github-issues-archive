{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1840",
  "id": 623217336,
  "node_id": "MDU6SXNzdWU2MjMyMTczMzY=",
  "number": 1840,
  "title": "Is the BLS test `aggregate_na_pubkeys` correct?",
  "user": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1534063048,
      "node_id": "MDU6TGFiZWwxNTM0MDYzMDQ4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:BLS",
      "name": "scope:BLS",
      "color": "fef2c0",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-05-22T13:47:26Z",
  "updated_at": "2020-12-22T10:20:40Z",
  "closed_at": "2020-12-22T10:20:40Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "There is a new BLS test [aggregate_na_pubkeys](https://media.githubusercontent.com/media/ethereum/eth2.0-spec-tests/master/tests/general/phase0/bls/aggregate/small/aggregate_na_pubkeys/data.yaml) with these contents:\r\n\r\n```\r\ninput: []\r\noutput:\r\n```\r\n\r\nThere seem to be two issues here:\r\n  1. Naming. We don't have a function to aggregate public keys in the spec, only signatures. The other tests in this directory aggregate signatures. So the name should be something like `aggregate_na_signatures`, right? Or `aggregate_for_na_pubkeys` maybe.\r\n  2. More significantly, the output. If I correctly followed the discussions below, and assuming this is about signatures rather than pubkeys, then the output ought to be `0x0000...0000` (96 bytes), right?\r\n\r\nI'm happy to do a PR to fix this, but just want to confirm I'm not missing something.\r\n\r\nI am aware of the conversations [here](https://github.com/ethereum/eth2.0-specs/issues/1713), [here](https://github.com/ethereum/eth2.0-specs/pull/1813), and [here](https://github.com/ethereum/eth2.0-specs/pull/1799).",
  "closed_by": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632860682",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-632860682",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 632860682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjg2MDY4Mg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T19:00:19Z",
    "updated_at": "2020-05-22T19:15:49Z",
    "author_association": "MEMBER",
    "body": "@benjaminion \r\n\r\n> 1. Naming\r\n\r\nYes! Agreed with `aggregate_na_signatures`. Also need to fix the comment to signature instead of pubkey. 👍\r\n\r\n> 2. More significantly, the output. If I correctly followed the discussions below, and assuming this is about signatures rather than pubkeys, then the output ought to be `0x0000...0000` (96 bytes), right?\r\n\r\nThe reasons for using `None` as the output:\r\n- IETF spec defines [`Precondition: n >= 1, otherwise return INVALID`](https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-02#section-2.8) for `Aggregate` as well, not only for pubkeys. So the issue is how to represent the `INVALID` in our test suite. It's as invalid as other invalid signature input, e.g., if the input is `[0x00..00]` then it can't be aggregated. We throw an exception in Python.\r\n- In PySpec, if we invoke this case in consensus code in the future, it will throw an exception to signal validation error.\r\n- We already use `None` to represent invalid state transition cases in the test vector, so following this pattern, we [use `None` for this invalid BLS calls as well](https://github.com/ethereum/eth2.0-specs/blob/dev/tests/formats/bls/aggregate.md#test-format-bls-signature-aggregation).\r\n\r\nDo you think it makes sense? It does look a bit weird in YAML format though.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632860682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632883645",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-632883645",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 632883645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjg4MzY0NQ==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T19:39:44Z",
    "updated_at": "2020-05-22T19:39:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can't we just use \"Invalid\" spelled out?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632883645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632884873",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-632884873",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 632884873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjg4NDg3Mw==",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T19:43:18Z",
    "updated_at": "2020-05-22T21:27:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought we'd agreed to use 0x00...00 to represent the invalid signature 🤷‍♂️. But, no matter, we can manage as long as it's clear.\r\n\r\n**Update**: I've read through everything more closely, and am now throwing an exception when trying to aggregate an empty list of signatures, which seems to be the final conclusion of the discussion. It's either that or return `null`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632884873/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632973166",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-632973166",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 632973166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk3MzE2Ng==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T02:37:00Z",
    "updated_at": "2020-05-23T02:37:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to clarify, if the output is None then we are supposed to test that there was an exception or error? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632973166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632986915",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-632986915",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 632986915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk4NjkxNQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T05:11:39Z",
    "updated_at": "2020-05-23T05:11:39Z",
    "author_association": "MEMBER",
    "body": "@benjaminion \r\n> 0x00...00 to represent the invalid signature\r\n\r\nIMO 96-byte output for the invalid cases might be confusing. That means we have to do `assert aggregate_signature != NO_SIGNATURE` after we called it.\r\n\r\n> now throwing an exception when trying to aggregate an empty list of signatures\r\n\r\nThanks! I think for your implementation, it's similar to how you show it as other invalid cases you've handled already.\r\n\r\n@mratsim \r\n> Can't we just use \"Invalid\" spelled out?\r\n\r\nGood question! I'm not against it. /cc @protolambda \r\n\r\n@prestonvanloon \r\n> Just to clarify, if the output is None then we are supposed to test that there was an exception or error? \r\n\r\nCorrect. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/632986915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749466797",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1840#issuecomment-749466797",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1840",
    "id": 749466797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQ2Njc5Nw==",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T10:20:40Z",
    "updated_at": "2020-12-22T10:20:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems to be sorted.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749466797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
