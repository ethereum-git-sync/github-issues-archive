{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1486",
  "id": 524678857,
  "node_id": "MDU6SXNzdWU1MjQ2Nzg4NTc=",
  "number": 1486,
  "title": "Test coverage: attester slashings with duplicated attesting indices",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-11-18T23:23:29Z",
  "updated_at": "2019-12-12T16:43:21Z",
  "closed_at": "2019-12-12T16:43:21Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "While updating to v0.9.1 I noticed that the spec allows validator indices to be duplicated in `IndexedAttestation`s. In Lighthouse our function to check the sorting of the indices was also (incorrectly) checking for duplicates, which wasn't picked up by any of our tests or the spec tests. I think it would be good to have a test vector with an attester slashing containing duplicated indices, if that is indeed the intended behaviour. For the signature, it's sufficient to add the signatures of the duplicated validators to the aggregate multiple times. Concretely, this attester slashing passes validation (pardon the Rust):\r\n\r\n```rust\r\nlet sig1 = Signature::new(&data1.tree_hash_root(), domain, &keypairs[0].sk);\r\nlet sig2 = Signature::new(&data2.tree_hash_root(), domain, &keypairs[0].sk);\r\n\r\nlet mut agg1 = AggregateSignature::new();\r\nagg1.add(&sig1);\r\nagg1.add(&sig1);\r\n\r\nlet mut agg2 = AggregateSignature::new();\r\nagg2.add(&sig2);\r\nagg2.add(&sig2);\r\n\r\nlet attestation_1 = IndexedAttestation {\r\n    attesting_indices: vec![0, 0].into(),\r\n    data: data1,\r\n    signature: agg1,\r\n};\r\n\r\nlet attestation_2 = IndexedAttestation {\r\n    attesting_indices: vec![0, 0].into(),\r\n    data: data2,\r\n    signature: agg2,\r\n};\r\n\r\nlet attester_slashing = AttesterSlashing {\r\n    attestation_1,\r\n    attestation_2,\r\n};\r\n```",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/564786571",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1486#issuecomment-564786571",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486",
    "id": 564786571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDc4NjU3MQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-11T23:57:04Z",
    "updated_at": "2019-12-11T23:57:04Z",
    "author_association": "MEMBER",
    "body": "Hey, sorry for getting to this a little bit late, we have been prioritizing phase1 and more immediate phase0 work.\r\n\r\nThe duplicate indices case is interesting, and if valid as indexed attestation it may very well be slashable too, but a real attestation with bitfield does not have this same problem.\r\n\r\nSo given that it wouldn't be derived from a valid attestation, I think it's better to explicitly disallow duplicate indices in the index attestation / slashings, and not run into danger of this easily unaccounted for case on mainnet. The Python `sorted` is not enough to filter out duplicates, but I will propose a change to enforce it.\r\nAnd I wonder how I missed this, as we do have tests for replacing and adding/removing indices :sweat: \r\n\r\nAnd although a slight phase0 change, it shouldn't be breaking any client from interop unless they produce slashings with duplicate indices already, so I think we can go ahead and get it into the `v09x` branch.\r\nThanks @michaelsproul !\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/564786571/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/564792613",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1486#issuecomment-564792613",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486",
    "id": 564792613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDc5MjYxMw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T00:19:59Z",
    "updated_at": "2019-12-12T00:19:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds like a good resolution to me!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/564792613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565086819",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1486#issuecomment-565086819",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1486",
    "id": 565086819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTA4NjgxOQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T16:43:21Z",
    "updated_at": "2019-12-12T16:43:21Z",
    "author_association": "MEMBER",
    "body": "addressed via #1516 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565086819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
