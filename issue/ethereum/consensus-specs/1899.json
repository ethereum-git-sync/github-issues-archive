{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1899",
  "id": 639786544,
  "node_id": "MDU6SXNzdWU2Mzk3ODY1NDQ=",
  "number": 1899,
  "title": "Gold coin approach to encourage policing of custody",
  "user": {
    "login": "dankrad",
    "id": 6130607,
    "node_id": "MDQ6VXNlcjYxMzA2MDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dankrad",
    "html_url": "https://github.com/dankrad",
    "followers_url": "https://api.github.com/users/dankrad/followers",
    "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
    "organizations_url": "https://api.github.com/users/dankrad/orgs",
    "repos_url": "https://api.github.com/users/dankrad/repos",
    "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dankrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    },
    {
      "id": 2000873822,
      "node_id": "MDU6TGFiZWwyMDAwODczODIy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:custody",
      "name": "scope:custody",
      "color": "E98B2A",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-06-16T15:56:48Z",
  "updated_at": "2021-07-05T15:04:35Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I estimate that computing a custody bit comes at a CPU cost of ca. 1-5ms: The main computation is just to compute a Universal Hash Function, which is just evaluating three polynomials of degree 2^13 with coefficients in a 256-bit prime field. (Additionally 10 Legendre bits have to be computed at a cost of a few microseconds each, that part should be much cheaper). This is probably fairly trivial compared to loading the actual data required to do this from disk.\r\n\r\nIf you police all past committees you were a member of, then this would mean instead of computing one custody bit, you would compute (committee size) custody bits every epoch, on average. So the overhead is on the order of a few seconds of CPU time, per epoch.\r\n\r\nOne approach to encourage this would be to bury some \"gold coins\": some attestations are valid custody slashings, but they don't lead to the \"offender\" getting slashed, only the whistleblower will be rewarded. In these special gold coin custodies, the secret of the whistleblower would be mixed into the custody as well, so the gold coin is individual to the whistleblower and can't be redeemed by someone else.\r\n\r\nEffort: Quite moderate:\r\n * Modify the custody secret computation to allow for variable probability (probability of gold coins is much lower than custody) and mixing in the whistleblower secret\r\n * Modify the slash_validator method to allow a \"reward only\" slashing without actually punishing anyone.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648345422",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1899#issuecomment-648345422",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899",
    "id": 648345422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODM0NTQyMg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T18:42:31Z",
    "updated_at": "2020-06-23T18:42:31Z",
    "author_association": "MEMBER",
    "body": "Making these specific to a whisteblower is clever. I was thinking about doing this type of thing for FFG slashings before but couldn't see a good way for validators to not just horde and report their own \"gold coins\".\r\n\r\nHow is the the whistleblower that is mixed in determined? It needs to be deterministic or else the validator will just mix a validator that they control",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648345422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648352533",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1899#issuecomment-648352533",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899",
    "id": 648352533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODM1MjUzMw==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T18:56:09Z",
    "updated_at": "2020-06-23T18:56:09Z",
    "author_association": "MEMBER",
    "body": "Aha, my assumption was that all whistleblowers in the same committees are always mixed in, and we just adjust the probabilities low enough that it would lead to an appropriate payout. So it could go to any whistleblower.\r\n\r\nI just noticed that you could manipulate the shard block bodies so that the payouts would go to your own validators. One way to stop this is to add some unbiasable or hard-to-bias entropy from some future epoch to the mix. However, that seems likely overengineering and not worth the effort.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/648352533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/651369865",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1899#issuecomment-651369865",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899",
    "id": 651369865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTM2OTg2NQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T21:13:19Z",
    "updated_at": "2020-06-29T21:13:19Z",
    "author_association": "MEMBER",
    "body": "Is that over-engineering? What's difficult about just using a seed from a day after the block got included on-chain?\r\n\r\nOne class of issues to be worried about here is quadratic economies of scale: if you are 2x wealthier, does that give you an opportunity to scan through 2x more blocks with 2x more validator keys, and thereby be 4x more likely to find a gold coin?\r\n\r\nIt seems like the only way to resolve this is to define a specific set of (data, key) pairs that we expect each validator to scan through, and set up the incentives so that the validators will scan *all* of that data with *all* of those keys. Is that the goal? If so, the total data set size would need to be reasonable; perhaps instead of requiring each validator to check the entire committee, assign each validator to _one_ other \"incentivized whistleblower\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/651369865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/652514638",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1899#issuecomment-652514638",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1899",
    "id": 652514638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjUxNDYzOA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T16:16:16Z",
    "updated_at": "2020-07-01T16:16:16Z",
    "author_association": "MEMBER",
    "body": "> Is that over-engineering? What's difficult about just using a seed from a day after the block got included on-chain?\r\n\r\nActually, I realized that we keep RANDAO seeds around for a long time anyway. So since this is easy to access directly from the state, it is actually very easy to add.\r\n\r\n> One class of issues to be worried about here is quadratic economies of scale: if you are 2x wealthier, does that give you an opportunity to scan through 2x more blocks with 2x more validator keys, and thereby be 4x more likely to find a gold coin?\r\n\r\nIsn't this exactly what gold coins are there to remedy? Shouldn't the reward+likelihood of gold coins be adjusted so that it is worthwhile to do this computation?\r\n\r\nUnder the worst case assumption of 5 ms per PoC check at 1500 validators per committee, I get 7.5s to check all the PoCs. Average case work is expected to be <1s (I think we can get it to 1ms for 256 kB blocks and typical committee sizes will be much less than 1000). So that seems to be a manageable amount of CPU work per custody period even if checking all other validators in the committee. Since you can't batch them very well (validators reveal their custody secrets staggered after all), the dominant factor is probably loading it from disks. That would need (committee size) disk accesses per custody period, which probably does add to load. We could change the custody reveal schedule in such a way that batched verification becomes possible (it's probably ok to make all validators reveal in one week, so have a \"less staggered\" custody period). However, the better/easier solution seems indeed to only have gold goins apply to a fixed number of validators in the committee -- say 10 other validators.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/652514638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
