{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/191",
  "id": 385848776,
  "node_id": "MDU6SXNzdWUzODU4NDg3NzY=",
  "number": 191,
  "title": "RFC: drop shard_and_committee_for_slots from state",
  "user": {
    "login": "arnetheduck",
    "id": 1382986,
    "node_id": "MDQ6VXNlcjEzODI5ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arnetheduck",
    "html_url": "https://github.com/arnetheduck",
    "followers_url": "https://api.github.com/users/arnetheduck/followers",
    "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
    "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
    "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
    "repos_url": "https://api.github.com/users/arnetheduck/repos",
    "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-11-29T17:36:47Z",
  "updated_at": "2019-01-17T15:42:12Z",
  "closed_at": "2019-01-17T15:42:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "A PR to explore dropping `shard_and_committee_for_slots` from `BeaconState`. \r\n\r\nPros:\r\n* simplicity\r\n  * clarifies functional origin and nature of data\r\n  * less duplicated state\r\n  * fewer mandatory state changes to keep track of\r\n  * easier to test / verify in isolation\r\n* smaller state - this field holds a little bit over `2 * len(validators)` entries\r\n  * less hashing for state root\r\n  * smaller transmit size\r\n\r\nCons:\r\n* extra step for consumers of state\r\n* \"downloaded\" state incomplete\r\n\r\npracticalities:\r\n* might need to consider an alternate approach for keeping useful `next_shuffling_seed` / `randao_seed` versions around\r\n* #92 is related\r\n\r\n",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443102187",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/191#issuecomment-443102187",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191",
    "id": 443102187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzEwMjE4Nw==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T06:10:22Z",
    "updated_at": "2018-11-30T06:10:22Z",
    "author_association": "MEMBER",
    "body": "What do you think about @djrtwo's proposal to keep `shard_and_committee_for_slots` in a separate structure with its own source and use its hash as a reference in `BeaconState`? This solution doesn't require changes in consensus and can be a part of client optimization process.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443102187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443953860",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/191#issuecomment-443953860",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191",
    "id": 443953860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzk1Mzg2MA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T03:07:23Z",
    "updated_at": "2018-12-04T03:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkalinin I think I'm missing something - why are consensus changes needed if this field is dropped from `BeaconState`?\r\n\r\nI'd think the other way around is more useful - that the `BeaconState` contains all seed hashes needed, such that the client can calculate the committee on the fly (basically `next_seed` and previous `next_seed` and possibly one more integer, for the round-robin index - as seen in the committee update description).\r\n\r\nThere are two reasons to do this change:\r\n\r\n* less duplicated state in `BeaconState`\r\n* fewer hash operations\r\n\r\nNeither is satisfied if the hash of the committees has to end up in the `BeaconState`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443953860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444816003",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/191#issuecomment-444816003",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191",
    "id": 444816003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDgxNjAwMw==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T09:59:56Z",
    "updated_at": "2018-12-06T09:59:56Z",
    "author_association": "MEMBER",
    "body": "@arnetheduck _changes in consensus_ means that this proposal affects state root calculation. But since beacon chain is not yet in production this change is obviously negligible and shouldn't be taken in account.\r\n\r\n> Neither is satisfied if the hash of the committees has to end up in the `BeaconState`.\r\n\r\nThat's not true. \r\nComparing to on the fly calculation hash of committees held by `BeaconState` has only _few_ extras:\r\n- a hash operation or even nothing, https://github.com/ethereum/eth2.0-specs/issues/231#issuecomment-444796113\r\n- 32 bytes per each state sample; actually, this is extra `1.5GB` each 10 years with 6 seconds per slot; wondering how big this number is comparing with the others\r\n- probably, a hash round, if size of hash function block is exceeded due to these extra bytes\r\n\r\nThere is one more thing to add here. Committees calculation has a form of `c = f(v, seed)` where `v` is a sample of validator set. And formally to perform the calculation client will have to use same sample of validator set as was used in a cycle transition that happened prior to current slot. Fortunately, according to current spec validator set is immutable between cycle transitions and sample from downloaded state could be used. This is not that bad in practice but may affect formal verification which this is out of my expertise, so, I can't judge on that.\r\n\r\nFast sync wise (the case when state downloading is needed). In my opinion the best option for the fast sync would be sticking with a state of last finalized slot and importing following beacon blocks approaching the head. That case calculation of committees from the state looks straightforward. What about light clients though?\r\n\r\nIn general, with regard to storing the hash, on the fly calculation looks like an over optimization to me. As for me there are no strong arguments in favor of any of these two solutions. And the question stays pretty much open.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444816003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455217881",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/191#issuecomment-455217881",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/191",
    "id": 455217881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxNzg4MQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:42:12Z",
    "updated_at": "2019-01-17T15:42:12Z",
    "author_association": "MEMBER",
    "body": "`shard_and_committee_for_slots` has been dropped :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455217881/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
