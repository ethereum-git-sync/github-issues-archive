{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3460",
  "id": 1812298227,
  "node_id": "I_kwDOCOoGbc5sBXnz",
  "number": 3460,
  "title": "Consider increasing number of attnets",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-19T16:28:52Z",
  "updated_at": "2023-07-19T16:28:52Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "One strategy to help mitigate the load of attestations on nodes is to actually split committees across multiple subnets.\r\n\r\nFor example -- split each committee across two subnets, thus doubling the total subnets from 64 to 128 in which the lower half of the committee is assigned to a different subnet than the upper half of the committee (ensuring aggregatability of each half). In such a design, you'd still need to assign the same number of target aggregators per subnet (rather than per committee), so the total load on the global aggregate attestation subnet would be 2x. Given that attnets load increases linearly with size of validator set while aggregate subnet has remained stable, the trade-off to put more load on the aggregate subnet is likely acceptable.\r\n\r\nNote, the above is just an example parametrization, you could even do a partial overlap, where you do 1.5x subnets per committee where some are split and some are not (evening out the disjoint load over many repeated epochs).\r\n\r\nThe obvious issue/downside with such a design is that without sufficient nodes on the network, you might either reduce the number of nodes per subnet to dangerous levels *or* you need to increase the attnets backbone subscription count to counteract it, which would still put a similar load on nodes albeit potentially helping by creating different meshes/paths.\r\n\r\nIf we had 10x the number of nodes on the network, I think such a strategy would be a no-brainer. Given our current node counts, it's unclear if this is a worthwhile path. That said, I've been sitting on this idea for a while and wanted to make sure others were aware given all of the validator-load discussions.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3460/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
