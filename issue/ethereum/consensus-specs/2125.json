{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2125",
  "id": 737768917,
  "node_id": "MDU6SXNzdWU3Mzc3Njg5MTc=",
  "number": 2125,
  "title": "Make inactivity leak quadratic per validator",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-11-06T13:46:14Z",
  "updated_at": "2021-07-05T14:59:35Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Status quo and problem\r\n\r\nCurrently, the inactivity leak is computed as follows: in a given epoch, if there has not been finality for `d` epochs, any validator who is offline during that epoch is penalized `d / INACTIVITY_PENALTY_QUOTIENT` of their balance.\r\n\r\nA major problem with this scheme is that it heavily penalizes honest validators who are online imperfectly: if fully online validators get leaked and lose 40% of their balance, someone who has been trying hard to stay online and succeeds at 90% of their duties would still lose 4% of their balance (approximately; ignoring compounding here for simplicity). Arguably this is unfair.\r\n\r\n### Proposed fix\r\n\r\nChange the inactivity leak rule to the following. For every validator, we maintain a counter `epochs_offline_since_finality`. When the chain finalizes, this counter is reset to zero; if the chain fails to finalize, and during that epoch the validator is absent, then (i) the validator is penalized `epochs_offline_since_finality / INACTIVITY_PENALTY_QUOTIENT` of their balance, and (ii) `epochs_offline_since_finality` increments by 1.\r\n\r\nThis means that during a leak, each individual validator's penalty is proportional to the square of the number of epochs that they personally have missed. Hence, if a validator who has been fully offline loses 40%, a validator who is online 90% of the time during that same period would only lose 0.4% of their balance, a much smaller amount that they could earn back within weeks of validating after the leak ends.\r\n\r\nIf validators have multiple duties, then we can rename `epochs_offline_since_finality` to `missed_duties_since_finality` and increment it by 1 for each missed duty, and adjust `INACTIVITY_PENALTY_QUOTIENT` appropriately to ensure the same total burn as today for fully offline validators.\r\n\r\n### Effects on efficiency\r\n\r\n`epochs_offline_since_finality` can be stored in a separate array, similar to validator balances, for efficiency. During normal (finalizing) periods, this array would not change, so costs would not increase at all. During non-finality, an additional ~8 bytes of hashing per validator would be required (or we could avoid this entirely by mashing together balance and `epochs_offline_since_finality` into a single variable).\r\n\r\nIf done in combination with https://github.com/ethereum/eth2.0-specs/issues/1340, efficiency can be maintained because we can still calculate the correct penalty for each validator if they had a previous `epochs_offline_since_finality` and were offline for `N` epochs: `log(balance) -= (epochs_offline_since_finality + (N-1)/2) * N / INACTIVITY_PENALTY_QUOTIENT` (any desired accuracy can be achieved with Taylor approximations of log/exp).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125/reactions",
    "total_count": 10,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/723094207",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2125#issuecomment-723094207",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2125",
    "id": 723094207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzA5NDIwNw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T13:57:28Z",
    "updated_at": "2020-11-06T13:57:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Related: #2098 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/723094207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
