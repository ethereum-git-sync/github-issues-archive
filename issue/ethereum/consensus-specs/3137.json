{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3137",
  "id": 1467893279,
  "node_id": "I_kwDOCOoGbc5XfkYf",
  "number": 3137,
  "title": "EIP4844: Remove redundant cryptography point in networking specs",
  "user": {
    "login": "kevaundray",
    "id": 37423678,
    "node_id": "MDQ6VXNlcjM3NDIzNjc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/37423678?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kevaundray",
    "html_url": "https://github.com/kevaundray",
    "followers_url": "https://api.github.com/users/kevaundray/followers",
    "following_url": "https://api.github.com/users/kevaundray/following{/other_user}",
    "gists_url": "https://api.github.com/users/kevaundray/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kevaundray/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kevaundray/subscriptions",
    "organizations_url": "https://api.github.com/users/kevaundray/orgs",
    "repos_url": "https://api.github.com/users/kevaundray/repos",
    "events_url": "https://api.github.com/users/kevaundray/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kevaundray/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-29T11:22:58Z",
  "updated_at": "2022-11-29T11:22:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Motivation**\r\n\r\nAfter changing the cryptography to be more higher level, certain parts of the spec now are no longer concerned with particular cryptographic invariants, since they are encapsulated inside of the cryptography module.\r\n\r\nIt seems that some parts of the spec were not updated to reflect this. In particular in [networking](https://github.com/ethereum/consensus-specs/blob/a1e46d1ae47dd9d097725801575b46907c12a1f8/specs/eip4844/p2p-interface.md#beacon_block_and_blobs_sidecar):\r\n\r\n\r\n- [REJECT] the sidecar.blobs are all well formatted, i.e. the BLSFieldElement in valid range (x < BLS_MODULUS).\r\n\r\n- [REJECT] The KZG proof is a correctly encoded compressed BLS G1 Point -- i.e. bls.KeyValidate(blobs_sidecar.kzg_aggregated_proof)\r\n\r\n**Suggestion**\r\n\r\nSince:\r\n\r\n- [REJECT] The KZG commitments in the block are valid against the provided blobs sidecar. -- i.e. validate_blobs_sidecar(block.slot, hash_tree_root(block), block.body.blob_kzg_commitments, sidecar)\r\n\r\nWill only pass if the blobs are all well formatted ie canonical and the proof point is correctly encoded, those two points now seem to be redundant.\r\n\r\n**Notes**\r\n\r\nIf the above is accepted, then I would also question if the networking layer needs this point:\r\n\r\n- [REJECT] The KZG commitments of the blobs are all correctly encoded compressed BLS G1 Points. -- i.e. all(bls.KeyValidate(commitment) for commitment in block.body.blob_kzg_commitments)\r\n\r\nIn order to remove it, I think we would need to add it inside of `verify_kzg_commitments_against_transactions` . If we always validate the commitments before calling `verify_kzg_commitments_against_transactions` then I think it would be reasonable to move the point validation function inside of `verify_kzg_commitments_against_transactions`.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3137/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
