{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3547",
  "id": 1987794133,
  "node_id": "I_kwDOCOoGbc52e1TV",
  "number": 3547,
  "title": "Serving blocks and blob_sidecars in RPC byRoot right after they passed gossip validation",
  "user": {
    "login": "tbenr",
    "id": 15999009,
    "node_id": "MDQ6VXNlcjE1OTk5MDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tbenr",
    "html_url": "https://github.com/tbenr",
    "followers_url": "https://api.github.com/users/tbenr/followers",
    "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
    "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
    "organizations_url": "https://api.github.com/users/tbenr/orgs",
    "repos_url": "https://api.github.com/users/tbenr/repos",
    "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tbenr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-10T15:01:24Z",
  "updated_at": "2023-11-10T15:01:24Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Assuming a node has not received via gossip a block that has been imported by the majority of the network.\r\n\r\nBefore Deneb, a node can be aware of that block's root when:\r\n\r\n- it sees an attestation voting for it\r\n- it sees the next block building on top of it\r\n\r\nIn both cases it is likely that the node can lookup the block byRoot since both events signals that the block has been imported (probably) by the majority of the network.\r\n\r\nAfter Deneb, there will be a third condition:\r\n\r\n- it sees a valid blob_sidecar carrying the block header.\r\n\r\nThis third event happens way before the the other two, probably before most of the nodes has successfully imported the block.\r\nAnd this applies to blob_sidecars too.\r\n\r\nThus, while pre-Deneb, serving only fully imported blocks seems good enough for client missing them, in Deneb seems not be the case anymore.\r\n\r\nShould we let clients serve byRoot requests for blocks and blob_sidecars that have passed gossip but has not yet fully imported to allow early byRoot recovery?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3547/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
