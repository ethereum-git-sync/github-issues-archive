{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/218",
  "id": 386904456,
  "node_id": "MDU6SXNzdWUzODY5MDQ0NTY=",
  "number": 218,
  "title": "Miscellaneous beacon chain changesâ€”take 2",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-12-03T16:42:04Z",
  "updated_at": "2018-12-12T15:51:17Z",
  "closed_at": "2018-12-12T15:51:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "(See https://github.com/ethereum/eth2.0-specs/issues/128 for take 1.)\r\n\r\n- [x] 1. **Slot-based state transition function**: Add `slot` to the state. See https://github.com/ethereum/eth2.0-specs/issues/212.\r\n- [x] 2. **Merge attestations and specials**: Make attestations a kind of special. Simplifies data structures and logic. (For example, the `MAX_ATTESTATIONS_PER_BLOCK` logic can be encapsulated in the per-kind caps.) Also cleanly separates beacon block \"headers\" and \"bodies\".\r\n- [x] 3. **Preserve deposit ordering**: Require that deposits on Ethereum 2.0 be consumed in the order they were created in Ethereum 1.0. Addresses various attacks (double-spend, censorship, prioritisation).\r\n- [x] 4. **Remove ancestor hashes from blocks**: The `ancestor_hashes` is 1kB and consists of redundant data that clients can build for themselves. Smaller blocks, simpler consensus logic. Potentially put `ancestor_hashes` in the state. Add `parent_root` to blocks in its place.\r\n- [x] 5. **Historical block accumulator**: Add a double-batched Merkle accumulator for beacon blocks. More light-client-friendly infrastructure.\r\n- [x] 6. **Stick with SHA3**: The performance benefits of Blake cannot be relied upon because STARK/SNARK-friendly hashes will likely be no faster than SHA3. Also fixes https://github.com/ethereum/eth2.0-specs/issues/151 and makes it easier for Ethereum 1.0 to be a light client for Ethereum 2.0.\r\n- [x] 7. **Use tree hashing everywhere**: Use `SSZTreeHash` for everything. For objects it's much cleaner. For one-level-deep fixed size objects it's equivalent to `hash`.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443784842",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-443784842",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 443784842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc4NDg0Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T16:59:53Z",
    "updated_at": "2018-12-03T16:59:53Z",
    "author_association": "MEMBER",
    "body": "I'm not certain [2] is as clean a simplification has advertised. Attestations still need to be added to `state.latest_attestations`  to be processed at the turn of an EPOCH. This data is slightly different than the data within the block so we'd still need a distinct data structure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443784842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443785916",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-443785916",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 443785916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc4NTkxNg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T17:02:37Z",
    "updated_at": "2018-12-03T17:02:37Z",
    "author_association": "MEMBER",
    "body": "> Attestations still need to be added to state.latest_attestations to be processed at the turn of an EPOCH.\r\n\r\nRight. The merging is purely in the beacon blocks. `state.latest_attestations` stays as is.\r\n\r\n> Was the purpose of `ancestor_hashes` not to be able to serve light clients information about past blocks?\r\n\r\nThat's one reason, and [5] addresses that in a better way (IMO).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443785916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443787814",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-443787814",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 443787814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc4NzgxNA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T17:07:43Z",
    "updated_at": "2018-12-03T17:07:43Z",
    "author_association": "MEMBER",
    "body": "> I'm not certain [2] is as clean a simplification has advertised. Attestations still need to be added to state.latest_attestations to be processed at the turn of an EPOCH. This data is slightly different than the data within the block so we'd still need a distinct data structure.\r\n\r\nI would say the right implementation of [2] would be to remove the concept of \"specials\" entirely, and instead explicitly have lists of attestations, deposits, voluntary exits, attester slashing messages, etc etc.\r\n\r\nThis would also remove the weird de-facto dynamic typing of the list :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443787814/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443791778",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-443791778",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 443791778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc5MTc3OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T17:19:06Z",
    "updated_at": "2018-12-03T17:19:06Z",
    "author_association": "MEMBER",
    "body": "Generally agreed @vbuterin.\r\nOne downside of having explicit lists is that we might have to add a list in phase 2 or something that we didn't expect, thus changing the `BeaconState` datastructure. Think this is worth it though",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443791778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443952881",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-443952881",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 443952881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzk1Mjg4MQ==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T03:01:24Z",
    "updated_at": "2018-12-04T03:01:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One downside of having explicit lists is that we might have to add a list\r\n\r\nthis is for upgrades outside of forks? for forks, the fork versioning should be enough, but if we want to do this generally, it would be nice to do more generally than just `specials`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/443952881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444130822",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-444130822",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 444130822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDEzMDgyMg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T15:02:01Z",
    "updated_at": "2018-12-04T15:03:29Z",
    "author_association": "MEMBER",
    "body": "Here's an explicit proposal for the ancestor hashes / accumulator @JustinDrake.\r\n\r\nAdd two lists into the state:\r\n\r\n* `power_of_2_ancestor_hashes[16]`, where `power_of_2_ancestor_hashes[i]` is the hash of the block at the most recent slot whose height is a multiple of `2**i\r\n* `old_ancestor_hashes[]`, where `old_ancestor_hashes[i]` is the hash of the block at slot `2**16 * i`\r\n\r\nQuestion: how is this concretely different from a DBMA? Is the difference that we should be building up a plain binary Merkle tree of hashes rather than power-of-2 hashes in the state, to make the witnesses at that point 32 bytes per tree level?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444130822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444230825",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-444230825",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 444230825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDIzMDgyNQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T19:40:43Z",
    "updated_at": "2018-12-04T19:40:43Z",
    "author_association": "MEMBER",
    "body": "> how is this concretely different from a DBMA?\r\n\r\nTwo differences:\r\n\r\n1) `power_of_2_ancestor_hashes[16]` is replaced by `recent_ancestor_hashes[2**13]`, where `recent_ancestor_hashes[i]` is the block hash of the `i`th most recent ancestor\r\n2) `old_ancestor_hashes` is replaced by `old_ancestor_roots`, where `old_ancestor_roots[i]` is the Merkleisation of the block hashes at slots `[2**13 * i, 2**13 * (i +1) - 1]`.\r\n\r\n(With 6-second slots, and after 32 years, `recent_ancestor_hashes` and `old_ancestor_roots` combined will consume `2**13*32b + 32*365.25*24*60*60/6/2**13*32b = 920kB` of storage.)\r\n\r\nTwo advantages of DBMAs:\r\n\r\n1) The witnesses are fixed-size. As specified above they are 392 bytes: one `uint64` to specify the root (the `i` above) plus 12 hashes for the intermediate Merkle path nodes.\r\n2) The witnesses are permanent.\r\n\r\nOne disadvantage with DBMAs is that the permanent witness takes `2**13` slots (~14 minutes) to generate in the worst case. The good news is that within `2**13` slots you don't need the permanent witness as you can simply perform a lookup in `recent_ancestor_hashes`, i.e. the block hash is itself the witness.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/444230825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446636340",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/218#issuecomment-446636340",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/218",
    "id": 446636340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjYzNjM0MA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T15:51:17Z",
    "updated_at": "2018-12-12T15:51:17Z",
    "author_association": "MEMBER",
    "body": "checked off number 7 in favor of #286\r\n\r\nclosing.. great work!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446636340/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
