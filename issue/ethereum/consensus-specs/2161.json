{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2161",
  "id": 772311427,
  "node_id": "MDU6SXNzdWU3NzIzMTE0Mjc=",
  "number": 2161,
  "title": "Midpoint slashing amount calculation truncates < 1 ETH penalties",
  "user": {
    "login": "pietjepuk2",
    "id": 75548277,
    "node_id": "MDQ6VXNlcjc1NTQ4Mjc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/75548277?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pietjepuk2",
    "html_url": "https://github.com/pietjepuk2",
    "followers_url": "https://api.github.com/users/pietjepuk2/followers",
    "following_url": "https://api.github.com/users/pietjepuk2/following{/other_user}",
    "gists_url": "https://api.github.com/users/pietjepuk2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pietjepuk2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pietjepuk2/subscriptions",
    "organizations_url": "https://api.github.com/users/pietjepuk2/orgs",
    "repos_url": "https://api.github.com/users/pietjepuk2/repos",
    "events_url": "https://api.github.com/users/pietjepuk2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pietjepuk2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-12-21T16:51:34Z",
  "updated_at": "2021-07-05T14:58:42Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### What happened\r\nThe first validator to be slashed on mainnet (validator 20075) reached the point where it was supposed to be getting an additional penalty at epoch 4304. Looking at the decrease of balance over time however, there was no significant deviation visible.\r\n\r\nLooking into a bit further, it seems that the current calculation for the midpoint slashing penalty only results in integer increments of ETH (or Gwei multiples of 1E9). So the penalty for validator 20075 turned out to be 0.\r\n\r\nI think this was (unintentionally) caused by #1286 . Although there have been a few restructurings in that piece of code since.\r\n\r\n### Example\r\nTo illustrate with the example on mainnet for validator 20075:\r\n- There were about 15 validators slashed at the time of epoch 4304 so let's say `adjusted_total_slashing_balance = 15 * 32E9` (maybe some had 31 ETH effective balance, but that does not matter for this example).\r\n- About 1.2M ETH staked, so `total_balance = 1.2E6 * 1E9`\r\n\r\nBefore #1286  the calculation was (paraphrased, because of other changes since):\r\n```Python\r\npenalty = validator.effective_balance * adjusted_total_slashing_balance // total_balance\r\n# penalty = 12400000.0\r\n```\r\n\r\nCurrently the calculation is:\r\n```Python\r\nincrement = EFFECTIVE_BALANCE_INCREMENT  # Factored out from penalty numerator to avoid uint64 overflow\r\npenalty_numerator = validator.effective_balance // increment * adjusted_total_slashing_balance\r\npenalty = penalty_numerator // total_balance * increment\r\n# penalty = 0\r\n```\r\n\r\n### Proposed fix\r\nI would suggest to instead do `penalty_numerator // (total_balance // increment)` (i.e. change the order of operations)\r\n\r\n```Python\r\nincrement = EFFECTIVE_BALANCE_INCREMENT  # Factored out from penalty numerator to avoid uint64 overflow\r\npenalty_numerator = validator.effective_balance // increment * adjusted_total_slashing_balance\r\npenalty = penalty_numerator // (total_balance // increment)\r\n# penalty = 12400000.0\r\n```\r\n\r\nor to make order of operations a bit clearer without the use of parentheses (e.g. for implementations using \"safe divide\" type of constructs):\r\n\r\n```Python\r\nincrement = EFFECTIVE_BALANCE_INCREMENT  # Factored out from penalty numerator to avoid uint64 overflow\r\npenalty_numerator = validator.effective_balance // increment * adjusted_total_slashing_balance\r\npenalty_denominator = total_balance // increment\r\npenalty = penalty_numerator // penalty_denominator\r\n# penalty = 12400000.0\r\n```\r\n\r\nSide note: Penalties were supposed to be lower in the first few months anyway, so I guess this is an unexpected benefit for those slashed.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749127101",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2161#issuecomment-749127101",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161",
    "id": 749127101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTEyNzEwMQ==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T18:31:29Z",
    "updated_at": "2020-12-21T18:31:29Z",
    "author_association": "MEMBER",
    "body": "One thing to consider here is that this mechanism implements the \"collective slashing penalty\" function with the higher-level goal to discourage large-scale slashable behavior occurring across (many) validators contemporaneously. \r\n\r\nIf we mainly care about discourage large-scale attacks here, then it is ok to lose sub-ETH resolution in the penalty amount (because attacks of sufficient scale will not have sub-ETH penalties so the issue does not apply). We still have individual slashing penalties that are strong disincentives for a single validator to attack in the first place so we aren't really losing any protocol security.\r\n\r\nMoreover, we make it easier to achieve consensus across clients via reduction of possibility of overflow (a la #1286). So while we do lose some fidelity in penalties, the trade-off to make it easier to reach consensus is worthwhile and we have penalties in other parts of the protocol so we aren't leaving an attack vector wide open.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749127101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749183453",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2161#issuecomment-749183453",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161",
    "id": 749183453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTE4MzQ1Mw==",
    "user": {
      "login": "pietjepuk2",
      "id": 75548277,
      "node_id": "MDQ6VXNlcjc1NTQ4Mjc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/75548277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pietjepuk2",
      "html_url": "https://github.com/pietjepuk2",
      "followers_url": "https://api.github.com/users/pietjepuk2/followers",
      "following_url": "https://api.github.com/users/pietjepuk2/following{/other_user}",
      "gists_url": "https://api.github.com/users/pietjepuk2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pietjepuk2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pietjepuk2/subscriptions",
      "organizations_url": "https://api.github.com/users/pietjepuk2/orgs",
      "repos_url": "https://api.github.com/users/pietjepuk2/repos",
      "events_url": "https://api.github.com/users/pietjepuk2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pietjepuk2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T20:34:17Z",
    "updated_at": "2020-12-21T20:34:17Z",
    "author_association": "NONE",
    "body": "I agree that for large scale slashing penalties it would not matter much. The reason I opened this issue is that I could not find any reasoning on making this midpoint penalty integer-only (in ETH), and that upon closer inspection it looks like it's the unintended result of a PR fixing the possible overflow.\r\n\r\nAs far as consensus is concerned, I don't think that changing the order of operations has any impact there (the risk of overflow that is). Any change to the spec does inherently come with consensus risks of course.\r\n\r\nEither way, if this behavior is the way we want it to be, then so be it (although the `process_slashing` function could do with a comment stating as such). That said, I personally dislike discontinuous behavior where it can be avoided. With that I mean that right now ~1200 slashed validators (in a 36 day window) would not result in any penalization, but 1201 slashed validators would \"all of a sudden\" result in each receiving a 1 ETH penalty.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/749183453/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/750488344",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2161#issuecomment-750488344",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161",
    "id": 750488344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDQ4ODM0NA==",
    "user": {
      "login": "Neurone",
      "id": 562943,
      "node_id": "MDQ6VXNlcjU2Mjk0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Neurone",
      "html_url": "https://github.com/Neurone",
      "followers_url": "https://api.github.com/users/Neurone/followers",
      "following_url": "https://api.github.com/users/Neurone/following{/other_user}",
      "gists_url": "https://api.github.com/users/Neurone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Neurone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Neurone/subscriptions",
      "organizations_url": "https://api.github.com/users/Neurone/orgs",
      "repos_url": "https://api.github.com/users/Neurone/repos",
      "events_url": "https://api.github.com/users/Neurone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Neurone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-23T21:56:01Z",
    "updated_at": "2020-12-23T21:56:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @pietjepuk2 and because we already use other _lower then 1 ETH_ penalties (i.e. the epoch leaking) it seems to me a good choice to reduce that 1 ETH increment, if not now at least in the next phase.\r\n\r\nThis issue was opened more than one year ago here #1322 just by @ralexstokes and also @vbuterin had thought about a reduction to 0.01 ETH.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/750488344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/820916447",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2161#issuecomment-820916447",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2161",
    "id": 820916447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDkxNjQ0Nw==",
    "user": {
      "login": "metatron1973",
      "id": 80199202,
      "node_id": "MDQ6VXNlcjgwMTk5MjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/80199202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metatron1973",
      "html_url": "https://github.com/metatron1973",
      "followers_url": "https://api.github.com/users/metatron1973/followers",
      "following_url": "https://api.github.com/users/metatron1973/following{/other_user}",
      "gists_url": "https://api.github.com/users/metatron1973/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metatron1973/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metatron1973/subscriptions",
      "organizations_url": "https://api.github.com/users/metatron1973/orgs",
      "repos_url": "https://api.github.com/users/metatron1973/repos",
      "events_url": "https://api.github.com/users/metatron1973/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metatron1973/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-16T05:29:18Z",
    "updated_at": "2021-04-16T05:29:18Z",
    "author_association": "NONE",
    "body": "Ok cool dual shields honest OATH2 key to success of ETH2 is honesty good post thanks . ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/820916447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
