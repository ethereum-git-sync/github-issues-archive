{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2200",
  "id": 808897747,
  "node_id": "MDU6SXNzdWU4MDg4OTc3NDc=",
  "number": 2200,
  "title": "Correctness & Mechanised proof of the incremental tree algorithm",
  "user": {
    "login": "franck44",
    "id": 14901362,
    "node_id": "MDQ6VXNlcjE0OTAxMzYy",
    "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/franck44",
    "html_url": "https://github.com/franck44",
    "followers_url": "https://api.github.com/users/franck44/followers",
    "following_url": "https://api.github.com/users/franck44/following{/other_user}",
    "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
    "organizations_url": "https://api.github.com/users/franck44/orgs",
    "repos_url": "https://api.github.com/users/franck44/repos",
    "events_url": "https://api.github.com/users/franck44/events{/privacy}",
    "received_events_url": "https://api.github.com/users/franck44/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-16T00:34:45Z",
  "updated_at": "2021-03-16T21:52:21Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi,\r\n\r\nthere is a [comment](https://github.com/ethereum/eth2.0-specs/blob/7d715220bb7128ea98597deedab3ae82ca5cc854/solidity_deposit_contract/deposit_contract.sol#L158) in the Solidity code of the smart contract (with the `assert(false)`) that seems to indicate that there is some uncertainty about the correctness of the code. \r\n\r\nIn [this repo](https://github.com/ConsenSys/deposit-sc-dafny) there is a formal and mechanised proof (in Dafny) that the `deposit()` function his correct, and indeed that the `assert(false)` will never trigger. (there is also a simplification of the algorithm that is proved correct).\r\n\r\nIn the REAME for the deposit SC there is a reference to a (non-mechanised) correctness proof (RV).\r\nOur [repo](https://github.com/ConsenSys/deposit-sc-dafny) provides the first fully mechanised proof (including correctness, termination, memory safety, initialisation) of the DSC (excluding the byte-code) and could probably be referenced there too.\r\n\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/779675078",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-779675078",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 779675078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTY3NTA3OA==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T08:34:28Z",
    "updated_at": "2021-02-16T08:34:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "How much is the gas cost using your minimal proven formally verified contract compared to the one deployed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/779675078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780232359",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-780232359",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 780232359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDIzMjM1OQ==",
    "user": {
      "login": "franck44",
      "id": 14901362,
      "node_id": "MDQ6VXNlcjE0OTAxMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franck44",
      "html_url": "https://github.com/franck44",
      "followers_url": "https://api.github.com/users/franck44/followers",
      "following_url": "https://api.github.com/users/franck44/following{/other_user}",
      "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
      "organizations_url": "https://api.github.com/users/franck44/orgs",
      "repos_url": "https://api.github.com/users/franck44/repos",
      "events_url": "https://api.github.com/users/franck44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franck44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T01:30:50Z",
    "updated_at": "2021-02-17T01:31:30Z",
    "author_association": "NONE",
    "body": "I have not verified the bytecode. The simplified version of the `deposit()` function in the contract is:\r\n```dafny\r\nmethod deposit(v : int) \r\n    requires deposit_count < power2(TREE_HEIGHT) - 1 \r\n{   \r\n    var root := v;\r\n    var size : nat := deposit_count;\r\n    var i : nat := 0;\r\n    \r\n    while size % 2 == 1 {\r\n        root := hash(branch[i], root);\r\n        size := size / 2;\r\n        i := i + 1;\r\n    } \r\n    //  i is guaranteed to satisfy 0 <= i < TREE_HEIGHT \r\n    //  This ensures the absence of out of bounds error in the following update \r\n    branch[i] := root;\r\n    deposit_count := deposit_count + 1;\r\n}\r\n```\r\nIt does not check the (while loop) test `i < TREE_HEIGHT` in an enclosing `while` because this test  always evaluates to `true`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780232359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780365857",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-780365857",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 780365857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDM2NTg1Nw==",
    "user": {
      "login": "franck44",
      "id": 14901362,
      "node_id": "MDQ6VXNlcjE0OTAxMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franck44",
      "html_url": "https://github.com/franck44",
      "followers_url": "https://api.github.com/users/franck44/followers",
      "following_url": "https://api.github.com/users/franck44/following{/other_user}",
      "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
      "organizations_url": "https://api.github.com/users/franck44/orgs",
      "repos_url": "https://api.github.com/users/franck44/repos",
      "events_url": "https://api.github.com/users/franck44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franck44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T07:33:28Z",
    "updated_at": "2021-02-17T07:33:28Z",
    "author_association": "NONE",
    "body": "@mratsim I have tried to get an estimate of the Gas cost with the online compiler at [http://remix.ethereum.org/](http://remix.ethereum.org/) but the details of the compilation returns \"infinite\" for the `deposit()` function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780365857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780451811",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-780451811",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 780451811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDQ1MTgxMQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T10:15:45Z",
    "updated_at": "2021-02-17T10:15:45Z",
    "author_association": "MEMBER",
    "body": "The assertion in the code isn't an indication of any uncertainty. It is simply put there for demonstrative purposes, to document the fact that the code is unreachable and to serve as a \"real world\" target for providing tools. Since the code is actually unreachable, the assertion does not incur any additional gas costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780451811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780874131",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-780874131",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 780874131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDg3NDEzMQ==",
    "user": {
      "login": "franck44",
      "id": 14901362,
      "node_id": "MDQ6VXNlcjE0OTAxMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franck44",
      "html_url": "https://github.com/franck44",
      "followers_url": "https://api.github.com/users/franck44/followers",
      "following_url": "https://api.github.com/users/franck44/following{/other_user}",
      "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
      "organizations_url": "https://api.github.com/users/franck44/orgs",
      "repos_url": "https://api.github.com/users/franck44/repos",
      "events_url": "https://api.github.com/users/franck44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franck44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T21:43:30Z",
    "updated_at": "2021-02-17T23:13:40Z",
    "author_association": "NONE",
    "body": "@MrChico \r\nThe solidity code (below) reads `this code should be unreachable`\r\n\r\nThe fact that the code is unreachable is not trivial to prove ... and that's what I did in [this repo](https://github.com/ConsenSys/deposit-sc-dafny). As far as I know this is the first complete formal mechanised proof of correctness of the DSC. \r\n\r\nApart from that, the current `deposit` code has an external `for loop` and an internal `return` that can end the loop: \r\n```solidity\r\n...\r\nbytes32 node = sha256(abi.encodePacked(\r\n            sha256(abi.encodePacked(pubkey_root, withdrawal_credentials)),\r\n            sha256(abi.encodePacked(amount, bytes24(0), signature_root))\r\n        ));\r\nuint size = deposit_count;\r\nfor (uint height = 0; height < DEPOSIT_CONTRACT_TREE_DEPTH; height++) {\r\n    if ((size & 1) == 1) {\r\n        branch[height] = node;\r\n            return;\r\n     }\r\n     node = sha256(abi.encodePacked(branch[height], node));\r\n     size /= 2;\r\n}\r\n// As the loop should always end prematurely with the `return` statement,\r\n// this code should be unreachable. We assert `false` just to be safe.\r\nassert(false);\r\n```\r\nwith a test `height < DEPOSIT_CONTRACT_TREE_DEPTH`. This test always evaluates to `true` and is unnecessary (the formal mechanised proof is in the Dafny repo I mentioned above). This test may incur some gas cost and can be safely omitted.\r\n\r\nThe simplified version is :\r\n```solidity\r\n...\r\nbytes32 node = sha256(abi.encodePacked(\r\n            sha256(abi.encodePacked(pubkey_root, withdrawal_credentials)),\r\n            sha256(abi.encodePacked(amount, bytes24(0), signature_root))\r\n        ));\r\n// deposit_count can be increment here instead and in that case the while loop test is size % 2 == 0\r\nuint size = deposit_count;\r\nuint height = 0;\r\nwhile (size % 2 == 1)   {\r\n   node = sha256(abi.encodePacked(branch[height], node));\r\n   size /= 2;\r\n   height += 1;   \r\n}\r\n// height is guaranteed to satisfy 0 <= height < branch.length\r\nbranch[height] = node;\r\ndeposit_count += 1;\r\n```\r\nand the following proofs have been mechanised (in Dafny):\r\n1. no array-out-of-bounds: `height` is always in the range of `branch` indices and\r\n2. termination is guaranteed if `deposit_count < MAX_DEPOSIT_COUNT = 2**DEPOSIT_CONTRACT_TREE_DEPTH - 1` \r\n\r\nThe total correctness of both algorithms (`deposit()` and `get_deposit_root()`) with respect to a Merkle tree specification is also part of the proof code (e.g. `get_deposit_root()` always returns what would be returned if we build a Merkle tree).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/780874131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/800636708",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2200#issuecomment-800636708",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2200",
    "id": 800636708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDYzNjcwOA==",
    "user": {
      "login": "franck44",
      "id": 14901362,
      "node_id": "MDQ6VXNlcjE0OTAxMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14901362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franck44",
      "html_url": "https://github.com/franck44",
      "followers_url": "https://api.github.com/users/franck44/followers",
      "following_url": "https://api.github.com/users/franck44/following{/other_user}",
      "gists_url": "https://api.github.com/users/franck44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franck44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franck44/subscriptions",
      "organizations_url": "https://api.github.com/users/franck44/orgs",
      "repos_url": "https://api.github.com/users/franck44/repos",
      "events_url": "https://api.github.com/users/franck44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franck44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T21:52:21Z",
    "updated_at": "2021-03-16T21:52:21Z",
    "author_association": "NONE",
    "body": "@mratsim @MrChico There seems to be medium interest and activity in this thread, so feel free to close this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/800636708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
