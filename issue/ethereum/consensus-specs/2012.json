{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2012",
  "id": 674645486,
  "node_id": "MDU6SXNzdWU2NzQ2NDU0ODY=",
  "number": 2012,
  "title": "Won't honest validators update ETH1 data every two voting periods?",
  "user": {
    "login": "rkapka",
    "id": 28876818,
    "node_id": "MDQ6VXNlcjI4ODc2ODE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkapka",
    "html_url": "https://github.com/rkapka",
    "followers_url": "https://api.github.com/users/rkapka/followers",
    "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
    "organizations_url": "https://api.github.com/users/rkapka/orgs",
    "repos_url": "https://api.github.com/users/rkapka/repos",
    "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkapka/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-08-06T22:52:30Z",
  "updated_at": "2020-08-24T14:45:52Z",
  "closed_at": "2020-08-20T23:39:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "[This issue](https://github.com/ethereum/eth2.0-specs/pull/1757) was raised because it was possible to vote for the same block in two successful voting periods because of block overlapping. The solution was to add the following condition: `get_eth1_data(block).deposit_count >= state.eth1data.deposit_count` (https://github.com/ethereum/eth2.0-specs/pull/1836)\r\n\r\nI think that the current implementation of Honest Validator's `get_eth1_vote`, where the validator follows the majority's vote, will result in eth1data being oftentimes updated every two voting periods instead of every period. This is assuming that most validators have a reasonably up-to-date view of the Ethereum 1 chain.\r\n\r\nPerhaps a visual representation will make it easier to understand.\r\n\r\n![table](https://user-images.githubusercontent.com/28876818/89659514-4889a980-d8d0-11ea-891b-2950113a6852.png)\r\n\r\nAdditional explanation:\r\n- We assume that each voting period is 4 slots.\r\n- Valid ranges overlap as explained in https://github.com/ethereum/eth2.0-specs/pull/1757.\r\n- Block `0x1` is valid during `P2` because its timestamp is within the valid range (`2 090 000 < 2 099 000 < 2 190 000`).\r\n- `P2/S2`'s proposer sees only the vote from `P2/S1`. This is because in order to obtain the correct state for proposals (which is the state at `P2/S1`), the state transition function had to transition from `P1/S4` to `P2/S1` which cleared all votes from `P1`.\r\n- Same thing will happen with `P3` and `P4`, `P5` and `P6` etc.\r\n\r\nA possible solution would be to check if the vote is cast in the first slot of a voting period. If yes, ignore the majority vote and propose a new block.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/676503230",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2012#issuecomment-676503230",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012",
    "id": 676503230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjUwMzIzMA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T15:40:35Z",
    "updated_at": "2020-08-19T15:40:35Z",
    "author_association": "MEMBER",
    "body": "So the issue here is the definition of `state` to use when running `get_eth1_vote`. It is assumed throughout the instructions for block  that `state` is for the _slot of the block being created_. This requires a state transition of `process_slots` on the state from the previous slot. In doing so, the `eth1data_votes` would be cleared out in your example, not resulting in the double initial vote as you described.\r\n\r\nAlthough this transition to the next slot is described explicitly in attestation production, it is just assumed in the block production.\r\n\r\nI'll make the update to ensure it is explicit, although clients must already be using this logic otherwise they would be producing malformed blocks!\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/676503230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/677909187",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2012#issuecomment-677909187",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012",
    "id": 677909187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzkwOTE4Nw==",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T21:15:27Z",
    "updated_at": "2020-08-20T21:15:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for responding.\r\n\r\nI think there is an unwanted edge-case/side-effect of the proposed solution. `eth1data_votes` are used to advance the `eth1data` in case the threshold of >50% is reached. If the threshold was reached in the last slot of the previous epoch, then clearing votes before the proposal will not advance `eth1data`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/677909187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679170802",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2012#issuecomment-679170802",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2012",
    "id": 679170802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE3MDgwMg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T14:45:51Z",
    "updated_at": "2020-08-24T14:45:51Z",
    "author_association": "MEMBER",
    "body": "So the clearing of votes happens on the transition between two epochs.\r\n\r\nBetween the slot where `(EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH) % SLOTS_PER_EPOCH` equals `EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH - 1` and `0`. So at the start of slot `0`, it is cleared out. \r\n\r\nBecause we use the state at the slot we are trying to prepare a block for, then  for the 0th slot in the period, we'll see no votes in the state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679170802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
