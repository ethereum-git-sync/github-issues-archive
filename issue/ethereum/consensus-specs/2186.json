{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2186",
  "id": 789003113,
  "node_id": "MDU6SXNzdWU3ODkwMDMxMTM=",
  "number": 2186,
  "title": "Spec-tests format changes [discussion]",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    },
    {
      "id": 1137720193,
      "node_id": "MDU6TGFiZWwxMTM3NzIwMTkz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:discussion",
      "name": "general:discussion",
      "color": "F17C67",
      "default": false,
      "description": ""
    },
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-01-19T13:00:46Z",
  "updated_at": "2023-12-26T23:43:41Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Various client v1.1 releases were made, and before we get deep into HF1, I think it may be worth it to upgrade the spec-tests format.\r\nThis way we can sustainably keep adding more tests, without it filling too much disk space with test states. There are various ways of going about this; \r\n- **compression**: Beacon states, especially mainnet states, contain long lists of data, which can be compressed to greatly reduce size\r\n- **diffs**: Tests focus on edge cases, and these are *variants* of the same general thing. These slight modifications result in a ton of extra data, while the differences are subtle. Diffs reduce that.\r\n- **removal of legacy YAML**: The legacy YAML was kept around for readability, and everyone moved on to read test data from the SSZ files I believe (except for the small metadata files which just use YAML). The API uses JSON, so the YAML support of datatypes can be dropped (if you have not already). If we drop it, we can provide some alternative to make the SSZ files more readable (in the form of a spec-tests website, or a tool of some kind)\r\n- **deduplication**: Maybe inferior to diffs, deduplication of files as a whole can still potentially help. This would mean test files go into some big DB/directory/collection of some kind, and tests reference these.\r\n- **zip it**: Similar to compression, but naive: the current `.tar.gz` doesn't allow random access to tests, but does compress it all down to < 300 MB. If test runners could read directly from such format, it might work.\r\n- Other? Suggestions welcome!\r\n\r\nThere is PR #2097 up already (just to give you an idea) to reduce it from 11 GB to 0.5 GB (at the time of writing the PR) with compression and removal of YAML. But I think we can do better, and for that I need your feedback as implementers. **Do you have suggestions, specific needs, feedback on the current format, or ideas for compatibility with tests of new features?**\r\n\r\n*Marking this as discussion/RFC, we really need feedback from implementers, tests should not continue to grow to absurd disk space.*",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762848927",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-762848927",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 762848927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mjg0ODkyNw==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T13:46:47Z",
    "updated_at": "2021-01-19T13:46:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Compression and zip it seem redundant, was it intended?\r\n\r\nRegarding the zipping format, I think it's important that decompression speed is fast. As tests multiply, CI time is growing and we're already not sure how to handle all the hard forks and phases that will need testing as well to keep a healthy feedback loop on our PRs.\r\n\r\nIn terms of format we have:\r\n- Snappy: everyone supports snappy due to networking requirement. It's very fast for compression/decompression but compression ratio is low. That said all cryptographic data like root hashes, keys and signatures are incompressible so it might not be that big of a blocker\r\n- Zip: supported by default on all OS (albeit Mac does strange thing with it), support streaming so we can read directly without full decompression/temporaries\r\n- RAR: proprietary\r\n- tar.gz: Allows streaming implementation so we can read directly without full decompression/temporaries\r\n- Zstd: Likely the fast decompression speed and compression ratio. Now growing in popularity\r\n- XZ: very slow to compress, high compression ratio, decent to decompress\r\n- Brotli: similar goals as Zstd, less popular, less compression ratio/decompression speed\r\n- lzma/7z/lzip: high compression ratio, popular, slow to compress\r\n- lzo: similar goals to Snappy, focus on decompression speed\r\n- lz4: similar goals to Snappy, focus on decompression speed\r\n\r\nI would pick the format between Snappy, tar.gz and Zstd. Quick Google-Fu suggests that all support streaming so we can decompress without intermediate files.\r\n\r\nDiffs: If we have compression, this is taken care of. No need to implement that ourselves. It makes it easier to feed one specific file when debugging.\r\nRemoval of YAML: OK\r\nDeduplication: If we have compression this is taken care of as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762848927/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762855040",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-762855040",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 762855040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mjg1NTA0MA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T13:57:32Z",
    "updated_at": "2021-01-19T13:57:32Z",
    "author_association": "MEMBER",
    "body": "@mratsim \r\n\r\n> Compression and zip it seem redundant, was it intended?\r\n\r\nThe difference is compressing individual files, vs. compressing a directory of files",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762855040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762890485",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-762890485",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 762890485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mjg5MDQ4NQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T14:50:44Z",
    "updated_at": "2021-01-19T14:50:44Z",
    "author_association": "MEMBER",
    "body": "Another important thing to consider: it would be nice if we can avoid causing big test-size increases with every fork. Currently, phase1 repeats all phase0 tests, but with phase1 types, to make sure that all still works. But if we keep adding forks, every fork effectively repeats the whole test collection with subtle changes, doubling the size. I am starting to think that we need more powerful diffing than just compression.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/762890485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763008086",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763008086",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763008086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzAwODA4Ng==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T17:45:03Z",
    "updated_at": "2021-01-19T17:45:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "For Prysm, we are quite happy with the format. We read the tar.gz files from each tagged release.\r\nAs far as I know, we prefer ssz over any yaml definition so removing yaml files would be welcomed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763008086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763147457",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763147457",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763147457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzE0NzQ1Nw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T21:17:58Z",
    "updated_at": "2021-01-19T21:17:58Z",
    "author_association": "MEMBER",
    "body": "I can chime in, however @michaelsproul has also had a lot of experience in this area.\r\n\r\nI'm happy to see the YAML files go. Just to be clear, I checked the PR and it seems we're dropping YAML where there's already an equivalent SSZ (plus a few extra cases), but we're keeping it for other metadata stuff (spec constants, etc). Can you please confirm @protolambda?\r\n\r\nFrom #2097:\r\n\r\n> The result is that the test generation outputs go from ~11 GB to ~0.5 GB. Generation time is also faster, since it reduces disk IO by a lot.\r\n\r\nIs this reduction primarily from dropping YAML? Also, is 0.5 GB the uncompressed size? (I assume so, my uncompressed specs dir is ~5GB.)\r\n\r\nI'm going assume we can achieve 0.5GB uncompressed. My suggestion is that we remove YAML but stick with the status quo of `.tar.gz` archives instead of snappy.\r\n\r\nThe current size of the test files is not a concern to me; Github Actions (CI) is fine with it and they fit easily on my computers. If we've dropped that size by 95%, then I think we've made a great gain and there's no outstanding need for a partial compression scheme (e.g. individually compressed files).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763147457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763162791",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763162791",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763162791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzE2Mjc5MQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T21:47:52Z",
    "updated_at": "2021-01-19T21:47:52Z",
    "author_association": "MEMBER",
    "body": "@paulhauner \r\n\r\n> Can you please confirm @protolambda?\r\n\r\nExactly. We keep it for the configs (totally unrelated here really) and for test `meta` files (e.g. the root of something, a count of something, etc.)\r\n\r\n> Is this reduction primarily from dropping YAML? Also, is 0.5 GB the uncompressed size? (I assume so, my uncompressed specs dir is ~5GB.)\r\n\r\nThis is after dropping YAML, as well as snappy-compression (like in gossip, non-framing) on each individual SSZ file.\r\n\r\nIf you compress everything as a whole (the tar file) you get some more deduplication: the combined size of `.tar.gz` files for mainnet/minimal/general dirs is ~230 MB. But no random access to tests.\r\n\r\n> I'm going assume we can achieve 0.5GB uncompressed\r\n\r\nHow, did I miss something? If not compressed, how do you get 5GB down to 0.5GB? That 0.5 GB I mentioned was the size required for the Snappy+NoYaml approach.\r\n\r\nIf you just remove YAML, you go from 6.1 GB to 2 GB. Nice improvement, but not good enough long-term in my opinion.\r\n\r\n> My suggestion is that we remove YAML but stick with the status quo of .tar.gz archives instead of snappy.\r\n\r\nDirectly using `.tar.gz` would mean that to read a single test, you would need to decompress the whole thing, and search for the file in the tar archive (I think there are no offsets, just a concatenation of headers and file bodies afaik, correct me if I'm wrong).\r\nCompressing individual files with snappy has the benefit of the client being able to decompress them during test running, while still fetching the exact files to run: random-access to test resources.\r\n\r\n> The current size of the test files is not a concern to me; Github Actions (CI) is fine with it \r\n\r\nWith HF1 we repeat all phase 0 tests. So the size (6GB or so) doubles (that 11 GB included some phase1 tests iirc, but mostly phase1 variants of tests), and then we add the HF1 tests. Then the next fork we add more tests again, and repeat phase0 and HF1 tests with new types. I think we should prepare for 3x-5x the current size in tests if we keep the old approach, and have to dump uncompressed files somewhere on disk.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763162791/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763169765",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763169765",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763169765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzE2OTc2NQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T22:01:37Z",
    "updated_at": "2021-01-19T22:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Compressing individual files with snappy has the benefit of the client being able to decompress them during test running, while still fetching the exact files to run: random-access to test resources.\r\n\r\nThis wouldn't be a benefit in Prysm, it would make tests slower. We unpack the whole tar.gz and all tests read from the same directory.\r\n\r\nEdit: I haven't tried it, but I assume it is more work in the test and therefore making it slower.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763169765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763208366",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763208366",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763208366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIwODM2Ng==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T23:25:57Z",
    "updated_at": "2021-01-19T23:25:57Z",
    "author_association": "MEMBER",
    "body": "> If you just remove YAML, you go from 6.1 GB to 2 GB. Nice improvement, but not good enough long-term in my opinion.\r\n\r\nOh, yeah. So 0.5gb is still compressed with snappy on individual files.\r\n\r\n> I think we should prepare for 3x-5x the current size in tests if we keep the old approach, and have to dump uncompressed files somewhere on disk.\r\n\r\nPersonally, I'm not concerned about a 5x2gb = 10gb test suite. That's not going to break our CI and I can handle 10gb on all of my computers quite easily. Lighthouse is structured so you can opt in/out of running the spec tests; only developers who really want to do spec stuff need to download those tests. It's generally only our core-devs working on consensus logic who need these tests, everyone else just sees them pass on CI.\r\n\r\nI also don't really mind if we get a bit of a slow-down for snappy, I doubt it'll be very significant. Updating our CI and testing stuff would be an annoyance, but manageable.\r\n\r\nFrom my perspective, individual snappy compression is solving a problem that I don't have. But perhaps there's other users out there which are more affected by the large size and I'm OK with doing some work on my end to make their lives easier.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763208366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763209869",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2186#issuecomment-763209869",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2186",
    "id": 763209869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIwOTg2OQ==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T23:29:57Z",
    "updated_at": "2021-01-19T23:29:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Teku doesn't use the YAML either so getting rid of that is an easy win.\r\n\r\nWe use the caching functionality in CircleCI to cache the expanded contents of the current `.tar.gz` (and similarly just expand it once on dev machines).  That cache is currently 222MiB according to CircleCI so I'm guessing its compressing them really well already when storing and restoring.  But it takes nearly a minute to restore that cache which hurts a fair bit - would be interesting to see what the impact of snappy compression on individual files does to that time.  Actually running the tests we can easily parallelise in CI so the cost of decompressing snappy doesn't matter too much there.\r\n\r\nImplementing support for snappy decompression of the ssz files is pretty simple for us. It would probably make life better for individual devs so they don't use so much disk space.  But like Lighthouse, you don't have to download these tests for Teku - mostly we just let CI run them because its so much faster so I don't see it as a problem. If it does become a problem I'd probably just add an option to only expand out the tests for specific hard forks or possibly specific categories of tests since most of the time when running locally you want to manually run a small set of tests to see why they failed in CI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/763209869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
