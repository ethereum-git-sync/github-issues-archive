{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/836",
  "id": 424598271,
  "node_id": "MDU6SXNzdWU0MjQ1OTgyNzE=",
  "number": 836,
  "title": "Proposal for restructure to support CI tests, pyspec, and better test generation flow.",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-03-24T10:39:07Z",
  "updated_at": "2019-04-17T23:25:33Z",
  "closed_at": "2019-04-17T23:25:32Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Proposal to have clean CI integration, with testing, test-generation, and pythonized-spec.\r\n\r\nIt would look a little bit like a mono-repo, but well-structured, and enabling us to:\r\n- write pytests for CI info during PR, mostly sanity tests, based on pythonized spec.\r\n- have generators use the pythonized spec easily (ramp up amount of yaml tests)\r\n- easily write generators (thanks to base generator from PR 31)\r\n- make yaml test repo builds directly hooked to spec releases, as it should when they are based on the spec. (i.e. BLS/SSZ/state-transition generators can all use existing spec/util code, and do not duplicate it to a generators repo)\r\n- Clean up current CI. It is great to have, but I hate seeing a requirements.txt in the root of a project that is meant to be a specification. Separating into directories and preserving the specs directory to be markdown-only feels like the best I can do to both support \"specification\", and strong CI + tests generation.\r\n\r\n```\r\n├── LICENSE\r\n├── Makefile   <--- see description below.\r\n├── README.md\r\n├── scripts\r\n│   ├── requirements.txt\r\n│   └── phase0\r\n│       ├── build_spec.py\r\n│       ├── function_puller.py\r\n│       └── __init__.py\r\n├── specs\r\n│   ├── bls_signature.md\r\n│   ├── core\r\n│   │   ├── 0_beacon-chain.md\r\n│   │   └── 1_shard-data-chains.md\r\n│   ├── light_client\r\n│   │   ├── merkle_proofs.md\r\n│   │   └── sync_protocol.md\r\n│   ├── simple-serialize.md\r\n│   ├── test-format.md\r\n│   └── validator\r\n│       └── 0_beacon-chain-validator.md\r\n├── test_generators\r\n│   ├── bls\r\n│   ├── ... more ...\r\n│   ├── shuffling\r\n│   └── ssz\r\n├── test_libs\r\n│   ├── gen_helpers\r\n│   │   ├── gen_base <-- package that generators use as base (test gen PR 31)\r\n│   │   │   └── ....\r\n│   │   ├── README.md\r\n│   │   ├── requirements.txt\r\n│   │   └── setup.py\r\n│   └── pyspec\r\n│       ├── requirements.txt\r\n│       ├── README.md\r\n│       ├── setup.py <--- defines the pyspec module. To local-require in generators\r\n│       ├── phase0 <--- package, generated using spec builder script, by makefile\r\n│       ├── phase1,2,etc. <--- later phase packages\r\n│       └── utils <--- shared between phase packages.\r\n│           ├── __init__.py\r\n│           └── phase0 <--- utilities for phase 0,\r\n│                           we may want to generalize utils between phases as well.\r\n├── py_tests  <--- existing py-tests, but not confused with yaml tests\r\n│   ├── requirements.txt\r\n│   ├── README.md\r\n│   └── phase0\r\n│       ├── __init__.py\r\n│       ├── block_processing\r\n│       │   ├── test_process_block_header.py\r\n│       │   ├── test_process_deposit.py\r\n│       │   ├── test_process_proposer_slashing.py\r\n│       │   └── test_voluntary_exit.py\r\n│       ├── conftest.py\r\n│       ├── helpers.py\r\n│       └── test_sanity.py\r\n└── yaml_tests <---- NOT included in git, build output from test generators.\r\n    │                 Output by CI to eth2.0-tests repo.\r\n    ├── bls\r\n    ├── ... more ...\r\n    ├── shuffling\r\n    └── ssz\r\n\r\n```\r\n\r\nMakefile:\r\n- defines a target for `./test_libs/pyspec/phase0/`. The `./scripts/phase0/build_spec.py` should be called.\r\n- defines a target for `./test_libs/pyspec/`. This calls all pyspec targets.\r\n- defines yaml_test make targets, i.e. test-gen runners. Use new makefile code from [test-gen PR 31](https://github.com/ethereum/eth2.0-test-generators/pull/31). This automatically creates targets for each generator. These targets should have `./test_libs/pyspec/` as dependency.\r\n- defines a `test` target to build and run `py_tests`. This target should define `./test_libs/pyspec/` as dependency.\r\n\r\n",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475961236",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-475961236",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 475961236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk2MTIzNg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T13:49:02Z",
    "updated_at": "2019-03-24T13:49:02Z",
    "author_association": "MEMBER",
    "body": "My gut is that this is cleaner and going to provide a simpler experience writing and testing the spec. The more repos we have with inter-dependencies, the more complex doing any one of these tasks is going to be.\r\n\r\nThe separate test generator repo made more sense when we did not yet have an executable spec and were pulling in dependencies from various repos. At this point the executable spec as the entire spec functionality, the shuffling alg, and a minimal ssz/hash-tree-root. We can also use the internal fork choice function with a test_case to `BeaconBlock` converter to generate fork choice tests. The only external dependency required for testing at this point is bls.\r\n\r\nI am in favor of this. Curious to hear the thoughts of some of the other people that have been working on testing. cc: @jannikluhn @ChihChengLiang @mratsim @paulhauner ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475961236/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475974642",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-475974642",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 475974642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk3NDY0Mg==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T16:25:07Z",
    "updated_at": "2019-03-24T16:25:07Z",
    "author_association": "MEMBER",
    "body": "One downside is the test generator related issues and PRs are coming to this repo too, not sure how these affect the spec contributors. Otherwise, with the executable spec, the restructure looks beautiful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/475974642/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476103206",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-476103206",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 476103206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjEwMzIwNg==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T08:45:06Z",
    "updated_at": "2019-03-25T08:45:06Z",
    "author_association": "MEMBER",
    "body": "I'm a bit hesitant on this. It would tie releases of test generators to releases of the spec even though we'll probably want to have them independent (hopefully more frequent test releases than spec releases in the future). Right now we build the tests on every release of the generators (which I quite like, it's simple, quick, and transparent), so we would need to find another way for this, in the worst case clicking some button hidden in the CircleCI UI.\r\n\r\nI don't really see an advantage of the proposed approach compared to putting the state test generators in the generators repo. We can configure CI in such a way that it pulls the latest spec release whenever building the tests. Then generator could use any spec code they like as well and we're sure that newly generated tests are always up to date.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476103206/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476205078",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-476205078",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 476205078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjIwNTA3OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T13:49:22Z",
    "updated_at": "2019-03-25T13:49:22Z",
    "author_association": "MEMBER",
    "body": "> I don't really see an advantage of the proposed approach compared to putting the state test generators in the generators repo.\r\n\r\nThat main benefit is to have the py-tests live alongside the spec to be able to run CI testing on the spec when writing and updating. If the test generators live in a separate repo, then it is much more complex to get the py-tests we are using on the spec to be cleanly integrated into the generators.  The more we separate the two, the more complex the link, dependencies, and general dev flow has to be, _or_ the py-tests just remain independent of test generation and we have to duplicate testing work to test these common flows.\r\n\r\nAttaching a `t0` to spec releases (`v0.5.0-t0`) and incrementing the `t` appendage upon testing updates (with no substantive spec updates) is one way we can hang onto the same release build option. \r\n\r\n> One downside is the test generator related issues and PRs are coming to this repo too, not sure how these affect the spec contributors.\r\n\r\nWe could have testing related issues live in `eth2.0-tests` to keep a clean separation.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476205078/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476769990",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-476769990",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 476769990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc2OTk5MA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T17:48:52Z",
    "updated_at": "2019-03-26T17:48:52Z",
    "author_association": "MEMBER",
    "body": "We're going to move forward with this proposal",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476769990/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476786872",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-476786872",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 476786872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc4Njg3Mg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T18:27:15Z",
    "updated_at": "2019-03-26T18:27:15Z",
    "author_association": "MEMBER",
    "body": "I'll start implementing this proposal tomorrow, can't wait to see the spec function as a direct base for test suites",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/476786872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484297990",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/836#issuecomment-484297990",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/836",
    "id": 484297990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDI5Nzk5MA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T23:25:32Z",
    "updated_at": "2019-04-17T23:25:32Z",
    "author_association": "MEMBER",
    "body": "closed via #851 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484297990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
