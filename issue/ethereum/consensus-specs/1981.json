{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1981",
  "id": 664568207,
  "node_id": "MDU6SXNzdWU2NjQ1NjgyMDc=",
  "number": 1981,
  "title": "GossipSub: disabling unused From/Seqno/Signature",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 1393665613,
      "node_id": "MDU6TGFiZWwxMzkzNjY1NjEz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:libp2p",
      "name": "scope:libp2p",
      "color": "CA7A2C",
      "default": false,
      "description": ""
    },
    {
      "id": 2342396575,
      "node_id": "MDU6TGFiZWwyMzQyMzk2NTc1",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:privacy",
      "name": "scope:privacy",
      "color": "FCFAF2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/6",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6/labels",
    "id": 5797403,
    "node_id": "MDk6TWlsZXN0b25lNTc5NzQwMw==",
    "number": 6,
    "title": "🔵 v1.0.0 candidates",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 12,
    "closed_issues": 5,
    "state": "closed",
    "created_at": "2020-08-21T16:23:12Z",
    "updated_at": "2021-06-07T15:09:56Z",
    "due_on": null,
    "closed_at": "2021-05-04T14:59:24Z"
  },
  "comments": 23,
  "created_at": "2020-07-23T15:23:07Z",
  "updated_at": "2021-04-06T15:38:33Z",
  "closed_at": "2021-04-06T15:38:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "For initial introduction of options in GossipSub, please have a look at: https://github.com/libp2p/go-libp2p-pubsub/pull/359\r\n\r\nThe TLDR:\r\n- fields in the Message protobuf in gossipsub are optional\r\n- some clients use it, some randomize it, some verify it\r\n- it's a privacy issue\r\n- with enough effort, you can cause a little peer-scoring chaos in the network by crafting bad messages\r\n\r\nWhat now?\r\n- Not part of the planned spec release. No immediate breaking changes.\r\n- Need to coordinate to disable verification of From/Seqno/Signature/Key (we don't use it, message-ID is content-based, it only uses Data), and accept it if the data is omitted from any message (already `optional` in protobuf definition)\r\n- Proposal: Give it a week or two for every Medalla node to update into no-verification mode, where these fields can be nil\r\n- Then later move into strict mode, where messages that use any of the fields are not accepted anymore.\r\n- Result: avoid privacy and verification issues of fields that are not used in Eth2.\r\n\r\ncc @jrhea @AgeManning @raulk ",
  "closed_by": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981/reactions",
    "total_count": 4,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663079721",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663079721",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663079721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzA3OTcyMQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T15:41:20Z",
    "updated_at": "2020-08-24T20:57:32Z",
    "author_association": "MEMBER",
    "body": "In case of the golang implementation, this would look like:\r\n- Start using the `WithMessageSignaturePolicy(LaxNoSign)` option, instead of `WithStrictSignatureVerification(false)`, `WithMessageSigning(false)`\r\n  - From and Seqno will still be put in messages (`pubsub.signID` is not nil), but Signature is not (message signing is not enabled, like now)\r\n- A week or two later, when the network is ready: use `WithMessageSignaturePolicy(StrictNoSign)`, and `WithNoAuthor()`.\r\n  - From, Seqno, Signature will all be nil (i.e. optional protobuf field is omitted).\r\n  - Messages of clients that did not update, and are still producing Seqno and From, will be dropped.\r\n\r\nThis can be done without changing consensus itself, but still affects the network enough to take extra care, enough time to update, and iterate on the plan before committing to it. It's just an unused option in golang pubsub for now, after some initial feedback.\r\n\r\nClients can help by:\r\n- share their current behavior (quick yes/no answers):\r\n  - Is Signature required to be present?\r\n  - Is Signature verified, if present?\r\n  - Is Seqno required to be present?\r\n  - Is From required to be present?\r\n  - Do you set the From field?\r\n  - Do you randomize/zero the From field?\r\n  - Do you set the Seqno field?\r\n  - Do you randomize the Seqno field?\r\n  - Do you modify From/Seqno data upon propagation?\r\n\r\n- share your thoughts about updating\r\n\r\nTracking table:\r\n\r\n| Q | Lighthouse | Prysm | Teku | Nimbus | Lodestar |\r\n|---|------------|-------|------|--------|----------|\r\n| Is Signature required to be present?            | N  | N  | N  | N  | N  |\r\n| Is Signature verified, if present?               | N  | Y  | N  | N  | Y  |\r\n| Is Seqno required to be present?                  | N  | N  | N  | N  | N  |\r\n| Is From required to be present?                   | N  | N  | N  | N  | N  |\r\n| Do you set the From field?                        | Y  | Y  | Y  | Y  | Y  |\r\n| Do you randomize/zero the From field?             | N  | N  | N  | N  | N  |\r\n| Do you set the Seqno field?                       | Y  | Y  | Y  | Y  | Y  |\r\n| Do you randomize the Seqno field?`*`                 | Y`**`   | N  | N  | N  | Y  |\r\n| Do you modify From/Seqno data upon propagation?   | N  | N  | N  | N  | N  |\r\n\r\n`*`: Prysm inits with nano-second time, Jvm inits randomly. They increment by 1 (causes various minor privacy issues). (answered Yes is more like a No in that regard)\r\n`**`: Lighthouse zeroes From/Seqno when authoring a message",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663079721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663098323",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663098323",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663098323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzA5ODMyMw==",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "node_id": "MDQ6VXNlcjEwOTQzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dryajov",
      "html_url": "https://github.com/dryajov",
      "followers_url": "https://api.github.com/users/dryajov/followers",
      "following_url": "https://api.github.com/users/dryajov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dryajov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dryajov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dryajov/subscriptions",
      "organizations_url": "https://api.github.com/users/dryajov/orgs",
      "repos_url": "https://api.github.com/users/dryajov/repos",
      "events_url": "https://api.github.com/users/dryajov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T16:15:36Z",
    "updated_at": "2020-07-23T16:15:36Z",
    "author_association": "NONE",
    "body": "Here's Nimbus (nim-libp2p) current behavior:\r\n\r\n- Is a signature required to be present? - No\r\n  - optional, disabled for eth2\r\n- Are signature verified, if present? - No\r\n  - optional, disabled for eth2\r\n- Is Seqno required to be present? - No\r\n- Is From required to be present? - No\r\n- Do you set the From field? - Yes\r\n- Do you randomize/zero the From field? - No\r\n- Do you set the Seqno field? - Yes\r\n- Do you randomize the Seqno field? - No\r\n- Do you modify From/Seqno data upon propagation? - No",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663098323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663100099",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663100099",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663100099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzEwMDA5OQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T16:19:04Z",
    "updated_at": "2020-07-23T16:19:04Z",
    "author_association": "MEMBER",
    "body": "@dryajov, sorry,  maybe I should have added more questions. When you say \"optional, disabled for eth2\" for the signature, does that mean you reject messages with a signature, or just ignore the signature?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663100099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663104318",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663104318",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663104318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzEwNDMxOA==",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "node_id": "MDQ6VXNlcjEwOTQzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dryajov",
      "html_url": "https://github.com/dryajov",
      "followers_url": "https://api.github.com/users/dryajov/followers",
      "following_url": "https://api.github.com/users/dryajov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dryajov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dryajov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dryajov/subscriptions",
      "organizations_url": "https://api.github.com/users/dryajov/orgs",
      "repos_url": "https://api.github.com/users/dryajov/repos",
      "events_url": "https://api.github.com/users/dryajov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T16:27:34Z",
    "updated_at": "2020-07-23T16:27:34Z",
    "author_association": "NONE",
    "body": "It means that we don't require the signature to be present and if it is present we do not verify it for eth2. However, nim-libp2p allows to configure this, so one can enable it if desired.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663104318/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663119464",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663119464",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663119464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzExOTQ2NA==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T16:58:19Z",
    "updated_at": "2020-07-23T16:58:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "js-libp2p-gossipsub+lodestar behavior:\r\n\r\n- Is a signature required to be present? - N\r\n- Are signature verified, if present? - Y\r\n- Is Seqno required to be present? - N\r\n- Is From required to be present? - N\r\n- Do you set the From field? - Y\r\n- Do you randomize/zero the From field? - N\r\n- Do you set the Seqno field? - Y\r\n- Do you randomize the Seqno field? - Y\r\n- Do you modify From/Seqno data upon propagation? - N",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663119464/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663147980",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663147980",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663147980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzE0Nzk4MA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T17:56:17Z",
    "updated_at": "2020-07-23T17:56:17Z",
    "author_association": "MEMBER",
    "body": "Teku: \r\n- Is a signature required to be present? - N\r\n- Are signature verified, if present? - N\r\n- Is Seqno required to be present? - Y\r\n- Is From required to be present? - N\r\n- Do you set the From field? - Y\r\n- Do you randomize/zero the From field? - N\r\n- Do you set the Seqno field? - Y\r\n- Do you randomize the Seqno field? - Y*\r\n- Do you modify From/Seqno data upon propagation? - N\r\n(*) Randomize on startup, then increment",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663147980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663281061",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663281061",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663281061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzI4MTA2MQ==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T23:28:16Z",
    "updated_at": "2020-07-23T23:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Based on the answers, it looks like none of the implementations modify seqno on propagation; however, I have seen it happen on Altona.  Strange...\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88348125-2f9ac900-cd12-11ea-9eb2-76c4e2f5f55a.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663281061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663284157",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663284157",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663284157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzI4NDE1Nw==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T23:39:53Z",
    "updated_at": "2020-07-23T23:39:53Z",
    "author_association": "MEMBER",
    "body": "@jrhea thanks for looking into the data! Those may be from the validators that got slashed, and were publishing double attestations. There's a chance you produce the same vote (not slashable, by luck) when running duplicate nodes, resulting in two messages with same contents, but different seqno.\r\n\r\nCan you show the distribution of seqno for those messages? We can narrow down which clients are affected based on the seqno range (prysm uses initial nanosecond time, teku inits with random and keeps incrementing, others always random)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663284157/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663286731",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663286731",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663286731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzI4NjczMQ==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T23:50:13Z",
    "updated_at": "2020-07-23T23:50:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Most of ours looks correct. On altona we set a 0 multihash/PeerId as the author rather than randomizing it. We dont modify the sequence number when propagating.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663286731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663293585",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663293585",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663293585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzI5MzU4NQ==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T00:16:52Z",
    "updated_at": "2020-07-24T00:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Those may be from the validators that got slashed, and were publishing double attestations. There's a chance you produce the same vote (not slashable, by luck) when running duplicate nodes, resulting in two messages with same contents, but different seqno.\r\n\r\nThis dataset only contains blocks\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88350472-d97d5400-cd18-11ea-90b9-0e7baf8d94a5.png)\r\n\r\n> Can you show the distribution of seqno for those messages? We can narrow down which clients are affected based on the seqno range (prysm uses initial nanosecond time, teku inits with random and keeps incrementing, others always random)\r\n\r\nSure can...I had something like that in the works, but didn't get a chance to circle back to it today.  Will take a look tonight.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663293585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663300478",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663300478",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663300478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzMwMDQ3OA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T00:46:03Z",
    "updated_at": "2020-07-24T00:46:03Z",
    "author_association": "MEMBER",
    "body": "> This dataset only contains blocks\r\n\r\nWhoops, my bad. The same can still happen with double block proposals though.\r\n\r\n>  Will take a look \r\n\r\nAwesome, thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663300478/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663362888",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663362888",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663362888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM2Mjg4OA==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T06:08:26Z",
    "updated_at": "2020-07-24T06:11:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Creating a compelling visual to provide the distribution of seqnos by client was non-trival (or i am just too tired).  Instead, I have a visual of the distribution of message id's with multiple seqnos by client.  btw, I have issues staying connected with Teku 😶 that's why it is not in the data.\r\n\r\nTo orient you, this is what the data looks like in a table after some massaging:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88363211-da2bdf80-cd44-11ea-9448-8b7d963444e5.png)\r\n\r\nHere is the same data visualized with a heatmap:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88363107-80c3b080-cd44-11ea-867f-88d53cada228.png)\r\n\r\nAt first, it looks like Lighthouse is the main culprit, but let's see what fraction of total messages were received by each client:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88363555-0f84fd00-cd46-11ea-9c29-b1b915a2cef7.png)\r\n\r\nThe distribution isn't exactly uniform so I normalize it and attempt the heatmap visualization again:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/88363755-ae115e00-cd46-11ea-84f5-26c69d30bd13.png)\r\n\r\nThis normalized view of the data doesn't provide overwhelming evidence of anything, but it does indicate that Nimbus **might** be the culprit (I wouldn't exactly bet my life on it though).  One more interesting fact, there isn't a single message-id with multiple sequence numbers that wasn't delivered by Nimbus at least one time.  Remember the table I posted at the beginning of this comment?  None of the rows have a 0 in the Nimbus column 🤷‍♂️.  \r\n\r\nOtoh, these modified message-ids with modified seqno's only make up ~ 3% of the messages received from nimbus so I don't know how compelling this really is.  That being said, it is all i have right now and maybe @dryajov wouldn't mind double checking the nimbus logic to see if it possibly is modifying seqno. In the meantime, I will be in a straight jacket in a padded room.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663362888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663389805",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663389805",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663389805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM4OTgwNQ==",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "node_id": "MDQ6VXNlcjEwOTQzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dryajov",
      "html_url": "https://github.com/dryajov",
      "followers_url": "https://api.github.com/users/dryajov/followers",
      "following_url": "https://api.github.com/users/dryajov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dryajov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dryajov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dryajov/subscriptions",
      "organizations_url": "https://api.github.com/users/dryajov/orgs",
      "repos_url": "https://api.github.com/users/dryajov/repos",
      "events_url": "https://api.github.com/users/dryajov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T07:39:56Z",
    "updated_at": "2020-07-24T07:39:56Z",
    "author_association": "NONE",
    "body": "@jrhea, any way we can check the timestamp of the message? \r\n\r\nWe only recently (~2w ago)  added proper message id generation, before it used to be the default `seqno+peerid`, so we might have been forwarding/generating duplicate messages.  There was also another (~1w ago) recent change, which reverted our `seqno` to a simple counter that restarts on each run, before it used to be a randomly generated number.\r\n\r\nSorry for the vague dates and I'll try to get to the bottom of this in the morning, but I suspect that any or both of this changes might have had something to do with it. Thanks for the heads up 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663389805/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663582542",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-663582542",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 663582542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzU4MjU0Mg==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T15:01:39Z",
    "updated_at": "2020-07-24T15:01:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jrhea, any way we can check the timestamp of the message?\r\n\r\nSure thing!  Here are the min and max timestamps for nimbus messages that I collected\r\n\r\nmin: Saturday, July 18, 2020 11:52:42.804 AM\r\nmax: Monday, July 20, 2020 10:58:31.662 AM\r\n\r\nNot sure if that lines up or if the changes made it to Altona nodes.  Lmk if you need more info about the nodes.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/663582542/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/678960137",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-678960137",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 678960137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODk2MDEzNw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T07:31:42Z",
    "updated_at": "2020-08-24T07:31:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Forgot to update lighthouse's side: \r\n\r\n- Is Signature required to be present?:  N (at some point we can reject messages that have signatures)\r\n- Is Signature verified, if present?:  N \r\n- Is Seqno required to be present?: N (at some point we can reject messages that have seq no)\r\n- Is From required to be present?: N (at some point we can reject messages that have from )\r\n- Do you set the From field?: Y (we use an identity peer_id - but will remove this as other clients appear to support no from field)\r\n- Do you randomize/zero the From field?: N\r\n- Do you set the Seqno field?: Y (we use a random number, but will remove this, once supported by Teku)\r\n- Do you randomize the Seqno field?:  Y\r\n- Do you modify From/Seqno data upon propagation?: N\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/678960137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679152075",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-679152075",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 679152075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE1MjA3NQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T14:13:08Z",
    "updated_at": "2020-08-24T14:13:08Z",
    "author_association": "MEMBER",
    "body": "@AgeManning Thanks, updated the table\r\n\r\nTeku is now the only one in the table still requiring one of the fields: the seqno is still required to be present. @Nashatyrev is this still the case? Can you check if the table matches Teku?\r\n\r\nOnce Teku allows the seqno to be missing, all clients do not require the fields anymore, and we can plan a grace period: we give users time to update their nodes, and then start leaving out the fields of the messages after the period is over. During this grace period we can do some testing on a devnet (maybe reuse https://github.com/protolambda/fafafa) to see if the new behavior works as expected.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679152075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/681032656",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-681032656",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 681032656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTAzMjY1Ng==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-26T17:56:02Z",
    "updated_at": "2020-08-26T17:56:02Z",
    "author_association": "MEMBER",
    "body": "@protolambda \r\nUpdate from Teku: \r\n\r\nTeku: \r\n- Is Seqno required to be present? - N\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/681032656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/686501950",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-686501950",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 686501950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUwMTk1MA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T13:44:11Z",
    "updated_at": "2020-09-03T13:47:33Z",
    "author_association": "MEMBER",
    "body": "@Nashatyrev is there an option to omit the seqno yet? It looks like it is still setting it (a new one is generated if you ask it to not have a seqno): https://github.com/libp2p/jvm-libp2p/blob/c0cfb97e68f83f363063c15ca7614df95aa4ce55/src/main/kotlin/io/libp2p/pubsub/PubsubApiImpl.kt#L46\r\n\r\nIn the near future messages with seqno will be invalid, so it is important to coordinate the changes and current behavior of clients here. With testing soon hopefully as well, working on that.\r\n\r\nEdit: also, upon propagation, these fields should be omitted (completely, i.e. exclude the optional protobuf key-value completely, not just an empty value)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/686501950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688316574",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-688316574",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 688316574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODMxNjU3NA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T13:11:33Z",
    "updated_at": "2020-09-07T13:11:33Z",
    "author_association": "MEMBER",
    "body": "Hey @protolambda, no Teku doesn't have this option yet. To make a PR I'd like to clarify a couple of questions below: \r\n> In the near future messages with seqno will be invalid\r\n\r\nDoes the same apply to `From` and `Signature` ?\r\n> Edit: also, upon propagation, these fields should be omitted\r\n\r\nI see 2 options with this regard: \r\n1. If `From`, `Sig` or `SeqNo` field is not `nil` then the message assumed invalid (and correspondingly not propagated) \r\n2. Nullify `From`, `Sig` and `SeqNo` fields of inbound message and then propagate it. (message is not assumed invalid) \r\n\r\nI thought we were going to stick to the option `(1)`. Am I missing something? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688316574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688520952",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-688520952",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 688520952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODUyMDk1Mg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T21:53:29Z",
    "updated_at": "2020-09-07T21:53:29Z",
    "author_association": "MEMBER",
    "body": "@Nashatyrev \r\n\r\n> Does the same apply to From and Signature ?\r\n\r\nYes, the intention is to omit all unused (w.r.t. eth2) optional (w.r.t. gossipsub) fields.\r\n\r\n> I see 2 options with this regard:\r\n\r\nIntention is indeed option `(1)`. We could do option `(2)` without breaking anything, but if nobody adds these fields to begin with, that is much cleaner (no extra data that is known to be unused for good reasons).\r\n\r\nWhat I meant with \"upon propagation\" is that even if you didn't create the message, and are propagating it, that the fields should not be added to the message (assuming the message was valid, and didn't contain the fields to begin with).\r\n\r\nAlso, to clarify just in case, there is a difference between an empty value, and a nil value: the gossip message fields are `optional` and we should be able to completely omit the key-value pair. [In go it's a difference](https://github.com/libp2p/go-libp2p-pubsub/blob/a3445b756fdb68f372dadd45de65a723d0237ac8/pb/rpc.pb.go#L2174) between `[]byte` (empty value, present key) and `nil` (fully omitted) as value. I'm not sure how it works in Java, maybe a similar pattern with `null` or `Optional` works.\r\n\r\n---\r\n\r\nOne point of concern though is that if fields are unrecognized (i.e. a gossipsub implementation using a protobuf definition that does not include these optional fields), and if the fields are still passed along, then we have an issue when it comes to peer-scoring: a peer may unknowingly propagate messages with unasked for fields. This may be the case with Nimbus.\r\n\r\nAlso, now I wonder what happens if other unknown indices are used as keys for protobuf entries, and happen to be propagated (I think in Go this would happen through the `XXX_unrecognized` field that holds the unrecognized data). These could function like \"trackers\" attached to messages, and with some malicious intent, help identify the peer relations between external nodes.\r\n\r\nI'll raise this during the networking call, some thought and questions from others definitely helps (thanks @Nashatyrev). And I am personally not a fan of protobuf for protocols like this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688520952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/689010420",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-689010420",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 689010420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTAxMDQyMA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T16:57:55Z",
    "updated_at": "2020-09-08T16:57:55Z",
    "author_association": "MEMBER",
    "body": "@protolambda just merged the Teku PR above. \r\nTeku now doesn't set `From`, `Sig` and `SeqNo` fields. \r\nHowever it still doesn't deny messages with fields and propagating them 'as is'. This is a temporary solution and we will change Teku to drop such messages as soon as all clients update. Patching inbound messages (nullify their fields) for further propagation would require some extra effort on Libp2p and Teku side so we'd better wait for other clients to update.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/689010420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/692330621",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-692330621",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 692330621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjMzMDYyMQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T21:44:20Z",
    "updated_at": "2020-09-14T21:44:20Z",
    "author_association": "MEMBER",
    "body": "Opened a libp2p specs PR to standardize the policies around these fields and signature checking: https://github.com/libp2p/specs/pull/294",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/692330621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/814220652",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1981#issuecomment-814220652",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1981",
    "id": 814220652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDIyMDY1Mg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-06T15:38:33Z",
    "updated_at": "2021-04-06T15:38:33Z",
    "author_association": "MEMBER",
    "body": "This was implemented in all clients, as option in libp2p, and included in the libp2p pubsub spec. Closing this old issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/814220652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
