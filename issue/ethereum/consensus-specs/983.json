{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/983",
  "id": 436138961,
  "node_id": "MDU6SXNzdWU0MzYxMzg5NjE=",
  "number": 983,
  "title": "Access Client Interface",
  "user": {
    "login": "nivida",
    "id": 1699173,
    "node_id": "MDQ6VXNlcjE2OTkxNzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1699173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nivida",
    "html_url": "https://github.com/nivida",
    "followers_url": "https://api.github.com/users/nivida/followers",
    "following_url": "https://api.github.com/users/nivida/following{/other_user}",
    "gists_url": "https://api.github.com/users/nivida/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nivida/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nivida/subscriptions",
    "organizations_url": "https://api.github.com/users/nivida/orgs",
    "repos_url": "https://api.github.com/users/nivida/repos",
    "events_url": "https://api.github.com/users/nivida/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nivida/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-04-23T11:33:32Z",
  "updated_at": "2019-04-27T17:18:06Z",
  "closed_at": "2019-04-27T17:17:20Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Questions \r\n\r\n- Is there an idea around to add a method which is returning the node information? \r\n- Is it planned to have the possibility to create for example an in-browser peer which is just sending transactions to the network? (I think it would be great to send transactions in a decentralized manner) \r\n\r\n### Idea - Access Client Interface\r\n\r\nThe idea is to create an in-browser/client peer for discovering full and light nodes. The discovered full and light nodes should be used to get data from the chain history. Subscriptions and sending of transactions should be done directly by the in-browser/client peer. \r\n\r\nI think we should move as much as possible from the nodes to the client.\r\n\r\n\r\n### RPC Interface\r\n\r\nThe RPC interface would have to be extended with the possibility to return the latest Block of a discovered peer. \r\n\r\n**NodeInfo**\r\n\r\nMethod:\r\n```javascript\r\n{\r\n  id: 0;\r\n  method_id: 14;\r\n  body: {};\r\n}\r\n```\r\n\r\n\r\nResponse:\r\n\r\n```javascript\r\nNodeInfo {\r\n  latestBlock: Block;\r\n}\r\n```\r\n\r\n**Account**\r\n\r\nThe accounts handling can't be specified until we have this [discussion](https://ethereum-magicians.org/t/brainstorming-the-token-standard-in-eth2/3135/6) finalized.\r\n\r\n- getBalance\r\n\r\n\r\n**History**\r\n\r\nWe can use the existing [rpc-interface](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/networking/rpc-interface.md) methods and probably extend the list with some aliases for having a simpler API.\r\n\r\n\r\n\r\n\r\n### GossipSub\r\n\r\n- [gossipsub-js](https://github.com/ChainSafe/gossipsub-js/tree/gossip_implementation)\r\n\r\nThe idea is to subscribe directly to the \"block stream\" and to filter for the desired blocks. \r\nA possible filter mechanism could be implemented in JS or with WASM if there are any performance issues. \r\n\r\n**Transaction**\r\n\r\nA transaction should get broadcasted to the correct mesh of peers and we will listen with the locally generated transaction hash if the transaction will appear in one of the next blocks. \r\n\r\n[devp2p Transaction](https://github.com/ethereum/devp2p/blob/master/caps/eth.md#transactions-0x02)\r\n",
  "closed_by": {
    "login": "nivida",
    "id": 1699173,
    "node_id": "MDQ6VXNlcjE2OTkxNzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1699173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nivida",
    "html_url": "https://github.com/nivida",
    "followers_url": "https://api.github.com/users/nivida/followers",
    "following_url": "https://api.github.com/users/nivida/following{/other_user}",
    "gists_url": "https://api.github.com/users/nivida/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nivida/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nivida/subscriptions",
    "organizations_url": "https://api.github.com/users/nivida/orgs",
    "repos_url": "https://api.github.com/users/nivida/repos",
    "events_url": "https://api.github.com/users/nivida/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nivida/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485842998",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/983#issuecomment-485842998",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983",
    "id": 485842998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTg0Mjk5OA==",
    "user": {
      "login": "oscar-fonseca",
      "id": 49163324,
      "node_id": "MDQ6VXNlcjQ5MTYzMzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/49163324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oscar-fonseca",
      "html_url": "https://github.com/oscar-fonseca",
      "followers_url": "https://api.github.com/users/oscar-fonseca/followers",
      "following_url": "https://api.github.com/users/oscar-fonseca/following{/other_user}",
      "gists_url": "https://api.github.com/users/oscar-fonseca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oscar-fonseca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oscar-fonseca/subscriptions",
      "organizations_url": "https://api.github.com/users/oscar-fonseca/orgs",
      "repos_url": "https://api.github.com/users/oscar-fonseca/repos",
      "events_url": "https://api.github.com/users/oscar-fonseca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oscar-fonseca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-23T15:04:59Z",
    "updated_at": "2019-04-23T15:04:59Z",
    "author_association": "NONE",
    "body": "I think that moving the relayer networks into clients, even as optional, would be a great decision moving forward. There are metatransaction relayers of different kinds, such as Griffith's, 0x Relayers, or TXCast. These are also cryptographically secure, we but have to add extra steps to make this happen. We could take these, which are already WIP, and adapt them for native ETH2.0 transactions. There is an EIP that would benefit from this, addressing \"headless transaction\" i.e. one payload signer, one transaction fee payer signer.\r\n\r\nPeople directly working on ETH2.0 clients will know if adapting relayer networking into native clients is nonsense, but it would be a great addition, since it would enable many services, less relying on Infura, and a standard for off-chain interfaces.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485842998/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487273700",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/983#issuecomment-487273700",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983",
    "id": 487273700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzI3MzcwMA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-27T10:18:20Z",
    "updated_at": "2019-04-27T10:18:20Z",
    "author_association": "MEMBER",
    "body": "Can you explain the advantages this has over running a light client directly in the browser?\r\n\r\nHow would clients in this P2P network validate the data they are receiving?  What protects them from malicious peers giving them faulty information?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487273700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487274260",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/983#issuecomment-487274260",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983",
    "id": 487274260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzI3NDI2MA==",
    "user": {
      "login": "nivida",
      "id": 1699173,
      "node_id": "MDQ6VXNlcjE2OTkxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1699173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nivida",
      "html_url": "https://github.com/nivida",
      "followers_url": "https://api.github.com/users/nivida/followers",
      "following_url": "https://api.github.com/users/nivida/following{/other_user}",
      "gists_url": "https://api.github.com/users/nivida/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nivida/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nivida/subscriptions",
      "organizations_url": "https://api.github.com/users/nivida/orgs",
      "repos_url": "https://api.github.com/users/nivida/repos",
      "events_url": "https://api.github.com/users/nivida/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nivida/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-27T10:27:26Z",
    "updated_at": "2019-04-27T10:28:40Z",
    "author_association": "MEMBER",
    "body": "> Can you explain the advantages this has over running a light client directly in the browser?\r\n\r\nIt uses not the same amount of resources as a light node which is important for older devices or low-end devices. \r\n\r\n> How would clients in this P2P network validate the data they are receiving? What protects them from malicious peers giving them faulty information?\r\n\r\nIt will be possible to define a trusted peer if you don't trust the discovered peers. \r\n\r\nEdit: \r\n[``libp2p.dial(peer, callback)``](https://github.com/libp2p/js-libp2p#libp2pdialpeer-callback)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487274260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487304068",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/983#issuecomment-487304068",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/983",
    "id": 487304068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzMwNDA2OA==",
    "user": {
      "login": "nivida",
      "id": 1699173,
      "node_id": "MDQ6VXNlcjE2OTkxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1699173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nivida",
      "html_url": "https://github.com/nivida",
      "followers_url": "https://api.github.com/users/nivida/followers",
      "following_url": "https://api.github.com/users/nivida/following{/other_user}",
      "gists_url": "https://api.github.com/users/nivida/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nivida/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nivida/subscriptions",
      "organizations_url": "https://api.github.com/users/nivida/orgs",
      "repos_url": "https://api.github.com/users/nivida/repos",
      "events_url": "https://api.github.com/users/nivida/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nivida/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-27T17:17:20Z",
    "updated_at": "2019-04-27T17:18:06Z",
    "author_association": "MEMBER",
    "body": "This idea isn't possible because I can't trust the discovered peers and their data. I would always have to verify the data I've got which will end up in a light client. The only possible thing is to send a transaction from a local peer. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/487304068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
