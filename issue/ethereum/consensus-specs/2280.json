{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2280",
  "id": 842272899,
  "node_id": "MDU6SXNzdWU4NDIyNzI4OTk=",
  "number": 2280,
  "title": "Merge discussion and todos from #2257",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2812431987,
      "node_id": "MDU6TGFiZWwyODEyNDMxOTg3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Bellatrix",
      "name": "Bellatrix",
      "color": "1D36aa",
      "default": false,
      "description": "CL+EL Merge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-03-26T20:23:14Z",
  "updated_at": "2023-05-24T03:40:17Z",
  "closed_at": "2023-05-24T03:40:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#2257 got the basic merge spec to a solid footing. The following are the list of discussion points and todos that were *not* completed within the context of that PR. These are left for future work and discussion.\r\n\r\n*Note*: This is not an exhaustive merge todo list but is instead only open points from #2257\r\n\r\n- [x] [Debates](https://github.com/ethereum/eth2.0-specs/pull/2257#discussion_r599021130) around `application_state_transition` (should the spec know about the `ApplicationState` or just about its root hash) \r\n- [ ] [Consider eliminating](https://github.com/ethereum/eth2.0-specs/pull/2257/files#r598997175) `uint256` requirement on beacon-chain side in `PoWBlock` and TD comparison \r\n- [ ] Consider max block size in relation to `ApplicationPayload` and where should such validation happen. At gossip, inside beacon chain, or just in application gas limit. Max TX size times max txs is 16GB!\r\n- [X] [Consider `Union` type](https://github.com/ethereum/eth2.0-specs/pull/2257#issuecomment-807505782) for transaction list with a single `OPAQUE_SELECTOR` for first merge fork. More specific, structured selectors for each TX type to follow\r\n- [x] [Post-London](https://github.com/ethereum/eth2.0-specs/pull/2257#discussion_r599048199) add `base_fee` to `ApplicationPayload` \r\n- [x] Add `Hash32` type to provide more specificity than `Bytes32` and to further disambiguate from `Root`\r\n- [ ] Modularize components of fork choice in phase 0 to better facilitate code reuse https://github.com/ethereum/eth2.0-specs/pull/2257#discussion_r599015500\r\n- [ ] [Potentially rename]( https://github.com/ethereum/eth2.0-specs/pull/2257#discussion_r599049800) `Eth1Data` -- `DepostContractData`\r\n- [x] [Consider adding fields to block](https://github.com/ethereum/eth2.0-specs/issues/2280#issuecomment-808493936) to ensure there is a clean one-way map from `ApplicationPayload` to RLP block",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280/reactions",
    "total_count": 4,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/808493936",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-808493936",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 808493936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQ5MzkzNg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T20:34:27Z",
    "updated_at": "2021-03-26T20:35:14Z",
    "author_association": "MEMBER",
    "body": "I would also say consider adding some fields back in despite the redundancy. Particularly, adding the block prevhash back in to the `ApplicationPayload` seems like it could easily do more good than harm around the transition and generally.\r\n\r\nIt feels like there's important simplifications that can come from making sure that there is a clean pure one-way map from `ApplicationPayload` to an RLP block.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/808493936/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/810963013",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-810963013",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 810963013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDk2MzAxMw==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-31T10:36:22Z",
    "updated_at": "2021-03-31T10:36:22Z",
    "author_association": "MEMBER",
    "body": "PR addressing additional fields in `ApplicationPayload`, https://github.com/ethereum/eth2.0-specs/pull/2295",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/810963013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863027987",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-863027987",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 863027987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzAyNzk4Nw==",
    "user": {
      "login": "vshvsh",
      "id": 3624893,
      "node_id": "MDQ6VXNlcjM2MjQ4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3624893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vshvsh",
      "html_url": "https://github.com/vshvsh",
      "followers_url": "https://api.github.com/users/vshvsh/followers",
      "following_url": "https://api.github.com/users/vshvsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vshvsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vshvsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vshvsh/subscriptions",
      "organizations_url": "https://api.github.com/users/vshvsh/orgs",
      "repos_url": "https://api.github.com/users/vshvsh/repos",
      "events_url": "https://api.github.com/users/vshvsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vshvsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T08:09:32Z",
    "updated_at": "2021-06-17T08:09:32Z",
    "author_association": "NONE",
    "body": "Can we pipe becon chain block roots to eth1x as well? Would be very useful for applications that depend on beacon chain, like staking pools, which are forced to use oracle these days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863027987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863032472",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-863032472",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 863032472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzAzMjQ3Mg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T08:15:34Z",
    "updated_at": "2021-06-17T08:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can we pipe becon chain block roots to eth1x as well? Would be very useful for applications that depend on beacon chain, like staking pools, which are forced to use oracle these days.\r\n\r\nThe beacon _state_ root would be a useful addition, not sure that individual block roots would gain anything.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863032472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863077645",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-863077645",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 863077645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzA3NzY0NQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T09:18:33Z",
    "updated_at": "2021-06-17T09:18:33Z",
    "author_association": "MEMBER",
    "body": "There is a plan to introduce `BEACONBLOCKROOT` opcode after the Merge. Exposing block roots allows for reading data from either a block or a state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/863077645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/872110371",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2280#issuecomment-872110371",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2280",
    "id": 872110371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjExMDM3MQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T10:09:11Z",
    "updated_at": "2021-07-01T10:09:11Z",
    "author_association": "MEMBER",
    "body": "(4) Addressed in https://github.com/ethereum/eth2.0-specs/pull/2472",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/872110371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
