{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3395",
  "id": 1734101525,
  "node_id": "I_kwDOCOoGbc5nXEoV",
  "number": 3395,
  "title": "Consider dockerizing spec tests for reproducible builds",
  "user": {
    "login": "michaelneuder",
    "id": 24661810,
    "node_id": "MDQ6VXNlcjI0NjYxODEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelneuder",
    "html_url": "https://github.com/michaelneuder",
    "followers_url": "https://api.github.com/users/michaelneuder/followers",
    "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
    "repos_url": "https://api.github.com/users/michaelneuder/repos",
    "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-31T12:21:35Z",
  "updated_at": "2023-07-30T15:44:56Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I spent a good chunk of time just battling different python3, pip, and venv verioning issues to try to get the spec tests running locally. Eventually I had to run https://github.com/ethereum/consensus-specs/issues/3304 to deal with a Py03 module error. \r\n\r\nThis made me wonder if dockerizing the spec tests could make them easier to interact with. Each version could be a container that you pull and run locally, which would have a specific python version and the respective packages that we know work. Just an idea, but if there is value here I would be happy to explore :-)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1657185219",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3395#issuecomment-1657185219",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3395",
    "id": 1657185219,
    "node_id": "IC_kwDOCOoGbc5ixqPD",
    "user": {
      "login": "wenceslas-sanchez",
      "id": 85337624,
      "node_id": "MDQ6VXNlcjg1MzM3NjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/85337624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wenceslas-sanchez",
      "html_url": "https://github.com/wenceslas-sanchez",
      "followers_url": "https://api.github.com/users/wenceslas-sanchez/followers",
      "following_url": "https://api.github.com/users/wenceslas-sanchez/following{/other_user}",
      "gists_url": "https://api.github.com/users/wenceslas-sanchez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wenceslas-sanchez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wenceslas-sanchez/subscriptions",
      "organizations_url": "https://api.github.com/users/wenceslas-sanchez/orgs",
      "repos_url": "https://api.github.com/users/wenceslas-sanchez/repos",
      "events_url": "https://api.github.com/users/wenceslas-sanchez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wenceslas-sanchez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-30T14:15:19Z",
    "updated_at": "2023-07-30T15:44:56Z",
    "author_association": "NONE",
    "body": "Hi @michaelneuder and @hwwhww,\r\n\r\nI also faced issues to run the project, and I did the following:\r\n- a `Dockerfile` to build an image that store the project + all dependencies.\r\n- scripts to replace make command.\r\n\r\nThe `Dockerfile` is stored at `consensus-specs/docker`:\r\n```dockerfile\r\nFROM python:3.11.0-slim-bullseye as base\r\n\r\nRUN mkdir /consensus-specs\r\nWORKDIR /consensus-specs\r\n\r\nFROM base as builder\r\nENV DEBIAN_FRONTEND=noninteractive\r\nRUN apt update && apt install -y git\r\nRUN python -m pip install --upgrade pip\r\n\r\nCOPY . .\r\n\r\nRUN pip install -r requirements-dev.txt -r requirements_preinstallation.txt\r\nRUN python setup.py pyspecdev\r\n```\r\n\r\nA `requirements-dev.txt` is stored at the root:\r\n```txt\r\npytest==7.4.0\r\npytest-cov==4.1.0\r\npytest-xdist==3.3.1\r\nlru-dict==1.2.0\r\nremerkleable==0.1.27\r\npy_ecc==6.0.0\r\npy_arkworks_bls12381==0.3.4\r\nmilagro_bls_binding==1.9.0\r\ntrie==2.0.2\r\neth-hash==0.5.2\r\npycryptodome==3.15.0\r\n```\r\n\r\nA script named `run_tests.sh` is stored in `consensus-specs/scripts` to replace `make test`:\r\n```shell\r\n# /bin/sh\r\n\r\n# constants\r\nALL_EXECUTABLE_SPECS=(\"phase0\" \"altair\" \"bellatrix\" \"capella\" \"deneb\" \"eip6110\" \"whisk\")\r\nTEST_PRESET_TYPE=minimal\r\nWORKDIR=\"//consensus-specs//tests//core//pyspec\"\r\n\r\nCOV_HTML_OUT=.htmlcov\r\n\r\n# default flag value\r\nversion=latest\r\nnumber_of_core=4\r\n\r\n# generate coverage scope\r\nname=\"eth2spec\"\r\ncoverage_scope=()\r\nfor spec in \"${ALL_EXECUTABLE_SPECS[@]}\"\r\ndo\r\n    coverage_scope+=(\"--cov=${name}.${spec}.${TEST_PRESET_TYPE}\")\r\ndone\r\n\r\n# Parse flags\r\nwhile getopts v:n: flag\r\ndo\r\n    case \"${flag}\" in\r\n        v) version=${OPTARG};;\r\n        n) number_of_core=${OPTARG};;\r\n        \\?) echo \"not valid -$OPTARG:${OPTARG}\";;\r\n    esac\r\ndone\r\n\r\n# Get IDs of containers that run the image `consensus-specs:$version`.\r\nget_container_name() {\r\n  echo $(docker ps -a -q --filter ancestor=\"consensus-specs:$version\" --format=\"{{.ID}}\")\r\n}\r\n\r\n# Stop and remove all container that use the `consensus-specs:$version` image\r\ncleanup() {\r\n  echo \"Stop and remove current container\"\r\n  docker rm $(docker stop $(get_container_name))\r\n}\r\n\r\ncopy_coverage_report() {\r\n  docker cp $(get_container_name):$WORKDIR/$COV_HTML_OUT ./$COV_HTML_OUT\r\n}\r\n\r\n# Equivalent to `make test`\r\ndocker run -w $WORKDIR consensus-specs:$version \\\r\n    pytest -n $number_of_core --disable-bls $coverage_scope --cov-report=\"html:${COV_HTML_OUT}\" --cov-branch eth2spec\r\n\r\n# Get coverage report form container instance\r\n$(copy_coverage_report)\r\n\r\n# Stop and remove all containers that use the `consensus-specs:$version` image when exiting\r\n#  the script. It helps user to limit container instances.\r\ntrap cleanup EXIT\r\n\r\n# for testing purpose\r\n$SHELL\r\n```\r\n\r\nThen we can run the following at the root of the repo:\r\n\r\n1. `docker build -f ./docker/Dockerfile -t consensus-specs:0.0.0 .`\r\n2. `run_tests.sh -v 0.0.0 -n 4` if you are located to `consensus-specs/scripts` or if you are at the root of the project `pushd && cd ./scripts && run_tests.sh -v 0.0.0 -n 4 && popd`\r\n\r\nThe coverage report is available at the root.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1657185219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
