{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1644",
  "id": 577410464,
  "node_id": "MDU6SXNzdWU1Nzc0MTA0NjQ=",
  "number": 1644,
  "title": "Inconsistency in BeaconBlockHeader.StateRoot for skipped slots vs block slots",
  "user": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-03-07T22:30:15Z",
  "updated_at": "2020-04-21T08:16:20Z",
  "closed_at": "2020-04-21T08:16:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "BeaconState includes latest_block_header, which includes a recursive state_root.\r\n\r\nNormally the recursive field has to be zeroed, to calculate the state_root. During block processing the value is temporarily inserted, to calculate block_root, but is then zeroed again during block processing.\r\n\r\nHowever, where there is skipped slot (no block), the temporarily inserted value is not so temporary, as there is no block to zero it out, and it ends up in the calculated hash, e.g.\r\n\r\n* State { slot=5 header={ slot=5 parent=0xa4a4 state=0x0000 body=0xb5b5 }} => state_root 0xc5c5 => Block { slot=5 parent=parent=0xa4a4 state=0xc5c5 body=0xb5b5 } => block_root 0xa5a5\r\n* State { slot=6 header={ slot=6 parent=0xa5a5 state=0x0000 body=0xb6b6 }} => state_root 0xc6c6 => Block { slot=5 parent=parent=0xa5a5 state=0xc6c6 body=0xb6b6 } => block_root 0xa6a6\r\n* State { slot=7 header={ slot=6 parent=0xa5a5 state=0xc6c6 body=0xb6b6 }} => state_root 0x1234, skipped block, but calculated state_root goes into history\r\n* State { slot=8 header={ slot=6 parent=0xa5a5 state=0xc6c6 body=0xb6b6 }} => state_root 0x5678, second skipped block\r\n* State { slot=9 header={ slot=9 parent=0xa6a6 state=0x0000 body=0xb9b9 }} => state_root 0xc9c9 => Block { slot=9 parent=parent=0xa6a6 state=0xc9c9 body=0xb9b9 } => block_root 0xa9a9\r\n\r\nNote that for skipped slots state.slot increases, but latest_block_header.slot remains (correctly) at the previous block, as does body.\r\n\r\nSlots 7, 8, and 9 are all processed at the same time, when block 9 is received.\r\n\r\nAt slot 7, the state_root is temporarily calculated and cached in the latest block header, and the values inserted into the history for state roots and block roots, but because there is no block for 7 or 8 the value is not cleared, so that means when processing the rest of the slots the header now contains the value.\r\n\r\nThis is inconsistent as the header for slots with a block has zeros, but for skipped slots has a value.\r\n\r\nI suggest keeping the header consistent, which means not caching the previous state root in the state header (although you still need to calculate it for verification). (This removes the need for the field; see my other suggestion)\r\n\r\nNote that when calculating previous block root for slot 8, and 9, you still need to hash the root of state 6, i.e. inside the loop would need a lookup of the past state corresponding to latest_block_slot. Rather than a lookup, this could be calculated before the slot processing loop and passed in as a parameter, a similar outcome to caching semi-temporarily it in the header.\r\n",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597209020",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1644#issuecomment-597209020",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644",
    "id": 597209020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzIwOTAyMA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T17:19:55Z",
    "updated_at": "2020-03-10T17:19:55Z",
    "author_association": "MEMBER",
    "body": "This is purposeful. A slot, when processing, should have access to the latest block header in the chain prior to the slot in question. Embedding the state root here gives us access to this latest header for arbitrary skip slots in the future.\r\n\r\nThis also gives maximal simplicity to using components of the state transition in isolated ways (e.g. transitioning skipped slots when there is no new block to process) and keeps the function signature dependent only on the pre-state (and potentially a new block).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597209020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597689511",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1644#issuecomment-597689511",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644",
    "id": 597689511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY4OTUxMQ==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T15:09:17Z",
    "updated_at": "2020-03-11T15:09:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that state for slot 7 and 8, the skipped states, aren't actually stored anywhere, in the spec. (Store only contains states that correspond to blocks / block roots).\r\n\r\nThey are only referenced inside the ProcessSlots loop, although they do have an impact -- their hashes go into state_roots history.\r\n\r\nI don't think it would be an issue to simply calculate pre-state, before the loop and pass as a parameter afterwards, but it's not going to make much difference anyway, just a little quirk to be aware of.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597689511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617028173",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1644#issuecomment-617028173",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1644",
    "id": 617028173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzAyODE3Mw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T08:16:20Z",
    "updated_at": "2020-04-21T08:16:20Z",
    "author_association": "MEMBER",
    "body": "@sgryphon I'm assuming @djrtwo addressed this issue. Please reopen if you feel otherwise :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617028173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
