{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3166",
  "id": 1500868882,
  "node_id": "I_kwDOCOoGbc5ZdXES",
  "number": 3166,
  "title": "capella loop limit when exceeds validator length",
  "user": {
    "login": "rolfyone",
    "id": 2967240,
    "node_id": "MDQ6VXNlcjI5NjcyNDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rolfyone",
    "html_url": "https://github.com/rolfyone",
    "followers_url": "https://api.github.com/users/rolfyone/followers",
    "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
    "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
    "organizations_url": "https://api.github.com/users/rolfyone/orgs",
    "repos_url": "https://api.github.com/users/rolfyone/repos",
    "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rolfyone/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-12-16T21:10:53Z",
  "updated_at": "2023-03-28T05:15:45Z",
  "closed_at": "2023-03-28T05:15:45Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Potentially a case that could be a reftest:\r\n\r\n - network config has 16k validators\r\n - validator minimum is 5k (or importantly anything less than the bound for withdrawals scan)\r\n\r\nWhen the scan for withdrawals happens, the limit is actually a min of the length of validators vs. the sweep length, and importantly, the ending validator key is going to determine if there's a chain split (if a client stops once its scanned the list once, and only increments by that length, their next withdrawal index will be too low)\r\n\r\nIf there's less than a set of withdrawals, this gets fun, because your next validator key will be still incremented by the sweep length...\r\n\r\nSo (0 + 16k) % 5k = 1000 as next_withdrawal_validator_index...\r\n\r\nThis is covered in the spec, code, but it'd probably be nice to capture that case as a test.",
  "closed_by": {
    "login": "ralexstokes",
    "id": 3113781,
    "node_id": "MDQ6VXNlcjMxMTM3ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ralexstokes",
    "html_url": "https://github.com/ralexstokes",
    "followers_url": "https://api.github.com/users/ralexstokes/followers",
    "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
    "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
    "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
    "repos_url": "https://api.github.com/users/ralexstokes/repos",
    "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1372974731",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1372974731",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1372974731,
    "node_id": "IC_kwDOCOoGbc5R1e6L",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-06T00:30:51Z",
    "updated_at": "2023-01-06T00:30:51Z",
    "author_association": "MEMBER",
    "body": "I don't exactly understand what you are referring to here...\r\n\r\n> network config has 16k validators\r\n> validator minimum is 5k\r\n\r\ncan you elaborate?\r\n\r\nthe two cases I see are:\r\n1) validator set is smaller than (or equal to) the sweep length\r\n2) validator set is larger than the sweep length\r\n\r\nand both cases are covered here w/ the `minimal` and `mainnet` testing presets e.g. these two tests:\r\n\r\nhttps://github.com/ethereum/consensus-specs/blob/dev/tests/core/pyspec/eth2spec/test/capella/block_processing/test_process_withdrawals.py#L169\r\n\r\nhttps://github.com/ethereum/consensus-specs/blob/dev/tests/core/pyspec/eth2spec/test/capella/block_processing/test_process_withdrawals.py#L188",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1372974731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1375221783",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1375221783",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1375221783,
    "node_id": "IC_kwDOCOoGbc5R-DgX",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-09T07:54:33Z",
    "updated_at": "2023-01-09T07:54:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Specifically where the validator is smaller than the sweep length and ensuring the next validator index is correctly set when we don't find enough validators...\r\n\r\nif there's 100 validators total, and the withdrawal scan length is 120, and we start at index 1 with insufficient withdrawals to process, then the next withdrawal index in the post state needs to be `(1+120) % 100`, and if it's not calculated correctly, the state root will not match...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1375221783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1377719492",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1377719492",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1377719492,
    "node_id": "IC_kwDOCOoGbc5SHlTE",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-10T19:05:51Z",
    "updated_at": "2023-01-10T19:05:51Z",
    "author_association": "MEMBER",
    "body": "the general pattern of \"is `next_withdrawal_validator_index` set correctly?\" is checked in all of the spec tests generated from the withdrawal tests in this repo\r\n\r\nwe have the test case for the specific scenario where the validator set is smaller than the sweep length that I linked to above\r\n\r\nthe question you are raising now is: can we test for the even more specific scenario where the validator set size is smaller than the sweep length *and also* we have fewer than `MAX_WITHDRAWALS_PER_PAYLOAD` in a block?\r\n\r\nand I'd say this doesn't increase the test coverage because:\r\n\r\n1. regardless of how many withdrawals end up in a block, we will always be checking that the \"next index\" is set correctly\r\n2. the `MAX_WITHDRAWALS_PER_PAYLOAD` bound is separate from the sweeping mechanic and we have plenty of other tests to ensure this bound holds\r\n\r\ndo you think I'm missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1377719492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1378192740",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1378192740",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1378192740,
    "node_id": "IC_kwDOCOoGbc5SJY1k",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T03:19:34Z",
    "updated_at": "2023-01-11T03:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "The scenario where there's insufficient validators to match for a payload, and the loop limit is larger than the validator set is specifically interesting because the `next_withdrawal_validator_index` increments by a large amount potentially, and it being incorrect would be supremely bad...\r\n\r\nPreviously the next index could potentially stay consistent if the loop limit (which was validator size) was reached.  If this code is still in any clients, they may not be aware until this edge case is exercised, which is why i raised the ticket.  The test condition which it exercises I believe is pretty important, because if that `next_withdrawal_validator_index` is not consistent across the board (which in this case involves mod validators.size) then we're in a sticky situation which is not easy to recover from.\r\n\r\nso if i have 0 withdrawable validators and 10 total validators, and a loop limit of 13, then you'll end up with this wierd pattern of \r\n`next_withdrawal_validator_index: 4`\r\n`next_withdrawal_validator_index: 7`\r\n`next_withdrawal_validator_index: 0`\r\n`next_withdrawal_validator_index: 3`\r\n\r\na natural client implementation would be to limit by the min of the validators size OR the loop limit, and it'll just depend how they reconcile the `next_withdrawal_validator_index` at the end, but if they get it wrong this is a scenario that we won't see in current tests I'm pretty sure...\r\n\r\nIf we feel comfortable that this is enough of an edge case that we need not have a test, then it's not a hill I'm willing to die on, but given it's a chain split if it happens, I figured I'd at least flag it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1378192740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1470966268",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1470966268",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1470966268,
    "node_id": "IC_kwDOCOoGbc5XrSn8",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T23:15:53Z",
    "updated_at": "2023-03-15T23:15:53Z",
    "author_association": "MEMBER",
    "body": "in this test: https://github.com/ethereum/consensus-specs/blob/dev/tests/core/pyspec/eth2spec/test/capella/block_processing/test_process_withdrawals.py#L169\r\n\r\nwe have the condition that the size of the validator set is smaller than the sweep limit\r\n\r\nand if the concern is correctly setting the `next_withdrawal_validator_index` then I think we would see any bugs if the set of withdrawals is any value between `[0, MAX_WITHDRAWALS_PER_PAYLOAD]` as any deviation will drive a client away from whatever the test computes\r\n\r\nso because of that I don't see the value in explicitly testing the scenario where there are 0 withdrawals as any number (which we already have in the linked test) should catch the bug you are describing",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1470966268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1471003270",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3166#issuecomment-1471003270",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3166",
    "id": 1471003270,
    "node_id": "IC_kwDOCOoGbc5XrbqG",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-16T00:02:02Z",
    "updated_at": "2023-03-16T00:02:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok that sounds fair, I've had a quick look and it does seem to test the same kind of scenario, shall i just close this? I think we've also had good test cases on the various network rollouts to show things are functioning correctly now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1471003270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
