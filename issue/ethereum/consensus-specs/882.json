{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/882",
  "id": 430059422,
  "node_id": "MDU6SXNzdWU0MzAwNTk0MjI=",
  "number": 882,
  "title": "Questions about get_justification_and_finalization_deltas",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043872,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODcy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:question",
      "name": "general:question",
      "color": "FAD689",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1065467474,
      "node_id": "MDU6TGFiZWwxMDY1NDY3NDc0",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:proofread",
      "name": "general:proofread",
      "color": "81dd5f",
      "default": false,
      "description": "spelling, grammar, accuracy"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-04-06T17:55:11Z",
  "updated_at": "2019-04-18T07:59:36Z",
  "closed_at": "2019-04-18T07:59:36Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "1) What is the `// 2` quotient in `INACTIVITY_PENALTY_QUOTIENT // 2` (as part of `get_inactivity_penalty`)?\r\n2) Should `adjusted_quotient // 5` be `adjusted_quotient // 4`?\r\n3) Can I confirm the above quotient is the max number of base rewards that every validator is entitled? (Those base rewards being a) expected FFG source b) expected FFG source c) expected head d) inclusion speed bonus.) Should we create a `MAX_BASE_REWARDS_PER_EPOCH` constant?\r\n4) Can I confirm that 4 in `epochs_since_finality > 4` corresponds to the maximum age of a source epoch that can be used for finality? (Specifically, the finality condition being \"The 2nd/3rd/4th most recent epochs are all justified, the 2nd using the 4th as source\".) Should we create a `MAX_SOURCE_EPOCH_AGE_FOR_FINALITY` (or better named) constant?\r\n5) In the context of https://github.com/ethereum/eth2.0-specs/pull/850, can we simplify `eligible_validators`? Specifically, can we remove the `validator.slashed and current_epoch < validator.withdrawable_epoch` condition and use `get_active_validator_indices` instead? (See also https://github.com/ethereum/eth2.0-specs/issues/857.)\r\n6) Most helper variables in `get_justification_and_finalization_deltas` are relative to the previous epoch. (This includes `boundary_attestations`, `boundary_attesting_balance`, `total_balance`, `total_attesting_balance`, `matching_head_attestations`, etc.) The only exception is `eligible_validators` which is defined relative to `current_epoch`. Is this mismatch necessary?\r\n7) \"Take away max rewards if the beacon chain is not finalizing\" => Why are the penalties from `get_inactivity_penalty` not sufficient?\r\n8) Why is there a `+ 1` (as opposed to `+ 0` or `- 1`) in `epochs_since_finality`?\r\n9) What is the status of https://github.com/ethereum/eth2.0-specs/issues/335?",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480582038",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-480582038",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 480582038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDU4MjAzOA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-07T11:33:04Z",
    "updated_at": "2019-04-07T11:33:04Z",
    "author_association": "MEMBER",
    "body": "> In the context of #850, can we simplify eligible_validators? Specifically, can we remove the validator.slashed and current_epoch < validator.withdrawable_epoch condition and use get_active_validator_indices instead? (See also #857.)\r\n\r\nThere was an explicit intention that validators that are inactive but have been slashed are \"eligible\" to receive penalties. I suppose the idea is that we can remove that condition because we've replaced the withdrawal queue with an exit queue? If so, I would disagree, because being slashed also means you are put into a waiting period for 36 days, during which the intent is that you suffer offline penalties and additionally in the middle of this period suffer a penalty proportional to the number of other validators that have been slashed within 18 days of yourself in either direction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480582038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480582463",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-480582463",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 480582463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDU4MjQ2Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-07T11:39:06Z",
    "updated_at": "2019-04-07T11:39:06Z",
    "author_association": "MEMBER",
    "body": "> \"Take away max rewards if the beacon chain is not finalizing\" => Why are the penalties from get_inactivity_penalty not sufficient?\r\n\r\nThe goal here is that if a majority coalition is censoring more than 1/3, its chance to earn any validator profits is taken away in order to penalize it.\r\n\r\n> The only exception is eligible_validators which is defined relative to current_epoch. Is this mismatch necessary?\r\n\r\nDoing it based on previous epoch does seem correct; can change.\r\n\r\n> What is the // 2 quotient in INACTIVITY_PENALTY_QUOTIENT // 2 (as part of get_inactivity_penalty)?\r\n\r\nNow that I think about it this may be worth removing; we can just adjust the inactivity penalty quotient as needed later.\r\n\r\n> Why is there a + 1 (as opposed to + 0 or - 1) in epochs_since_finality?\r\n\r\nThis seems weird; I think +0 is fine.\r\n\r\n> Should adjusted_quotient // 5 be adjusted_quotient // 4?\r\n\r\nLet's rethink the reward coefficients after we nail down the beacon slot / shard slot / min attestation inclusion relationship? We also need to think about crosslink rewards.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480582463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480614643",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-480614643",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 480614643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDYxNDY0Mw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-07T17:58:56Z",
    "updated_at": "2019-04-07T17:58:56Z",
    "author_association": "MEMBER",
    "body": "> being slashed also means you are put into a waiting period for 36 days, during which the intent is that you suffer offline penalties and additionally in the middle of this period suffer a penalty proportional to the number of other validators that have been slashed within 18 days of yourself in either direction\r\n\r\nTo recap, there are the slashing-specific penalties:\r\n\r\n1) The whistleblowing reward which is immediately taken in `slash_validator`.\r\n2) The inactivity penalty during the exit queue (which is forced because `get_unslashed_attesting_indices` filters slashed validators).\r\n3) The partial slashing based on 18 days in either direction.\r\n4) The inactivity penalty during the withdrawal queue.\r\n\r\nMy gut feel is that 1), 2), 3) combined is sufficiently harsh. (And as you say, 4) is partially covered by 3).)\r\n\r\nFor simplicity, removing 4) also allows us to replace the following 7 lines of code with just 1. (It also removes the mismatch between `eligible_validators` and things like `total_balance`.)\r\n\r\n```\r\n    eligible_validators = [\r\n        index for index, validator in enumerate(state.validator_registry)\r\n        if (\r\n            is_active_validator(validator, current_epoch) or\r\n            (validator.slashed and current_epoch < validator.withdrawable_epoch)\r\n        )\r\n    ]\r\n```\r\n\r\n> its chance to earn any validator profits is taken away in order to penalize it\r\n\r\nWhat about `rewards[index] = 0` (as opposed to `penalties[index] += base_reward * 4`)?\r\n\r\n> Let's rethink the reward coefficients after we nail down the beacon slot / shard slot / min attestation inclusion relationship?\r\n\r\n:+1:",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480614643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480670953",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-480670953",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 480670953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDY3MDk1Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T03:28:41Z",
    "updated_at": "2019-04-08T03:28:41Z",
    "author_association": "MEMBER",
    "body": "> My gut feel is that 1), 2), 3) combined is sufficiently harsh. (And as you say, 4) is partially covered by 3).)\r\n\r\nThe goal is to prevent self-slashing from being a way to escape if you are being censored. If you do that, and you do that before everyone else, then (2) is tiny and (3) is tiny, so we need (4).\r\n\r\nIn the normal case, 36 days of inactivity penalty is only ~0.5% of your balance; it's not a very large penalty.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480670953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480671197",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-480671197",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 480671197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDY3MTE5Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T03:30:24Z",
    "updated_at": "2019-04-08T03:30:24Z",
    "author_association": "MEMBER",
    "body": "> What about rewards[index] = 0 (as opposed to penalties[index] += base_reward * 4)?\r\n\r\nThe problem with that approach is that it takes away the _incentive_ to perform well. The effect of the current code is that your net reward is exactly 0 if you do everything perfectly, and goes negative otherwise. If we just do `rewards[index] = 0` then the incentive to get messages included on time etc also disappears.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480671197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484287800",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-484287800",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 484287800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDI4NzgwMA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T22:40:05Z",
    "updated_at": "2019-04-17T22:40:05Z",
    "author_association": "MEMBER",
    "body": "> Can I confirm that 4 in epochs_since_finality > 4 corresponds to the maximum age of a source epoch that can be used for finality? (Specifically, the finality condition being \"The 2nd/3rd/4th most recent epochs are all justified, the 2nd using the 4th as source\".) Should we create a MAX_SOURCE_EPOCH_AGE_FOR_FINALITY (or better named) constant?\r\n\r\nAlthough these numbers are the same, I don't think the numbers actually should be coupled. You can tune the `> 4` to be more or less strict on when inactivity penalty begins and it has nothing to do with `MAX_SOURCE_EPOCH_AGE_FOR_FINALITY`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484287800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484288428",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-484288428",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 484288428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDI4ODQyOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T22:42:31Z",
    "updated_at": "2019-04-17T22:42:31Z",
    "author_association": "MEMBER",
    "body": "> \"Take away max rewards if the beacon chain is not finalizing\" => Why are the penalties from get_inactivity_penalty not sufficient?\r\n\r\nThe idea here is that during an inactivity penalty leak, if you are performing optimally, you do not make or lose any money.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484288428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484396920",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/882#issuecomment-484396920",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/882",
    "id": 484396920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDM5NjkyMA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-18T07:59:36Z",
    "updated_at": "2019-04-18T07:59:36Z",
    "author_association": "MEMBER",
    "body": "Closing in favour of #949 :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/484396920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
