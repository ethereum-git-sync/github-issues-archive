{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2106",
  "id": 724783049,
  "node_id": "MDU6SXNzdWU3MjQ3ODMwNDk=",
  "number": 2106,
  "title": "Deal with non-finalization that spans more than one weak subjectivity period",
  "user": {
    "login": "dankrad",
    "id": 6130607,
    "node_id": "MDQ6VXNlcjYxMzA2MDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dankrad",
    "html_url": "https://github.com/dankrad",
    "followers_url": "https://api.github.com/users/dankrad/followers",
    "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
    "organizations_url": "https://api.github.com/users/dankrad/orgs",
    "repos_url": "https://api.github.com/users/dankrad/repos",
    "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dankrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-10-19T16:32:48Z",
  "updated_at": "2020-10-30T11:31:22Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The weak subjectivity spec currently does not really define this behaviour, leading to client implementations potentially being inconsistent and dangerous . For example, my teku client simply went offline because there was an extended non-finality period: https://github.com/PegaSysEng/teku/issues/3005\r\n\r\nAs far as I can see, there are two possible behaviours we can specify:\r\n1. Fully observe WS during non-finality. This would mean that during non-finality, clients should store the epoch ```current_epoch - compute_weak_subjectivity_period(state)``` as their WS checkpoint every epoch, and never revert beyond this even if the fork choice rule gives a different result. This should probably also be noted in the fork choice rule.\r\n\r\nThen we would need to clarify that more generally, a WS checkpoint is not necessarily (but preferably) a finalized epoch in the WS spec (it currently does not mention it, but I think it is assumed by many to be a finalized epoch).\r\n\r\n2. Do not observe WS during non-finalization. Clarify that a WS checkpoint is always a finalized epoch, and after the WS checkpoint, the fork choice should prevail, even if it means a reversion longer than the WS period.\r\n\r\nI would prefer option 2, because:\r\n * Weak subjectivity periods are less meaningful when the chain is not finalizing -- in particular, no new validators that haven't already been committed to can be added\r\n * It allows better automatic resolution of chain splits (e.g. geographical) spanning longer periods.\r\n\r\nFrom what I can see, there is only one case where this leads to undesirable behaviour: If 51%+ of validators go offline for a long time, they may then decide they do not like the resulting chain of 49%- of the validators building a chain with their deposits highly diluted, and attack this chain. I consider this situation much less likely than the case of two chains being built during a geographic split.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/712547790",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2106#issuecomment-712547790",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
    "id": 712547790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjU0Nzc5MA==",
    "user": {
      "login": "adiasg",
      "id": 25324105,
      "node_id": "MDQ6VXNlcjI1MzI0MTA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25324105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adiasg",
      "html_url": "https://github.com/adiasg",
      "followers_url": "https://api.github.com/users/adiasg/followers",
      "following_url": "https://api.github.com/users/adiasg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adiasg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adiasg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adiasg/subscriptions",
      "organizations_url": "https://api.github.com/users/adiasg/orgs",
      "repos_url": "https://api.github.com/users/adiasg/repos",
      "events_url": "https://api.github.com/users/adiasg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adiasg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T02:27:25Z",
    "updated_at": "2020-10-20T02:27:25Z",
    "author_association": "MEMBER",
    "body": "> 2. Do not observe WS during non-finalization. Clarify that a WS checkpoint is always a finalized epoch, and after the WS checkpoint, the fork choice should prevail, even if it means a reversion longer than the WS period.\r\n\r\nI agree with this option. This is the expected behavior as per the current [WS spec](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/weak-subjectivity.md).\r\n\r\nClients teams should note that the current WS sync only concerns itself with [WS sync](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/weak-subjectivity.md#weak-subjectivity-sync) when the client is started. Unless explicitly mentioned in the spec, do not implement any additional WS behavior, as this may lead to fork choice deadlocks, client sync failures, or other misc. issues.\r\n\r\nAdvanced WS behavior is a topic of discussion and will be included in the WS spec when finalized.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/712547790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/712686313",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2106#issuecomment-712686313",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
    "id": 712686313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjY4NjMxMw==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T08:29:49Z",
    "updated_at": "2020-10-20T08:29:49Z",
    "author_association": "MEMBER",
    "body": "I think this would need some clarification. I'm happy to create a PR of what's needed in my opinion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/712686313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/716750435",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2106#issuecomment-716750435",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
    "id": 716750435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjc1MDQzNQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-26T18:45:11Z",
    "updated_at": "2020-10-26T18:45:11Z",
    "author_association": "MEMBER",
    "body": "> Clarify that a WS checkpoint is always a finalized epoch, and after the WS checkpoint, the fork choice should prevail, even if it means a reversion longer than the WS period.\r\n\r\nThis is unsafe due to the same reasons it's unsafe to sync from outside of the WS period. If non-finality is longer than WS period, then a minority attacker can construct an alternate chain where they have become the majority and begin to finalize. If you can re-org deeper than WS period during non-finality, then you could reorg to such a chain that an attacker constructed for \"free\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/716750435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/717573841",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2106#issuecomment-717573841",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
    "id": 717573841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU3Mzg0MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T22:18:38Z",
    "updated_at": "2020-10-27T22:18:38Z",
    "author_association": "MEMBER",
    "body": "> This is unsafe due to the same reasons it's unsafe to sync from outside of the WS period.\r\n\r\nWell, I argue it's not unsafe because there are no safety guarantees while chains aren't finalized.\r\n\r\nBut if you want to make the \"safe\" behaviour what you're suggesting, then to be fully consistent you should be in favour of option 1., which means even clients that are online for the whole period will make WS fallback checkpoints beyond which they would not revert?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/717573841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/719500330",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2106#issuecomment-719500330",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2106",
    "id": 719500330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTUwMDMzMA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T11:31:22Z",
    "updated_at": "2020-10-30T11:31:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Clarify that a WS checkpoint is always a finalized epoch\r\n\r\none difficulty with this approach is that it basically invalidates the `finalized_checkpoint` field in the state object - if I'm looking a head, I now can no longer trust that the state contains canonical information about what the finalized checkpoint is, and I need to go out-of-band to fetch it - in the case where the user supplied one, this is feasible, but we start automatically checkpointing weak subjectivity, it will create communication difficulties between clients, explorers etc - the way to move forward with option 1 would be to modify the state transition function to update finalized checkpoint, rather than an \"implementers recomendation\".\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/719500330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
