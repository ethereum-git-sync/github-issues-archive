{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/753",
  "id": 419238475,
  "node_id": "MDU6SXNzdWU0MTkyMzg0NzU=",
  "number": 753,
  "title": "Simplify per-block attestation processing",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1244734333,
      "node_id": "MDU6TGFiZWwxMjQ0NzM0MzMz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:presentation",
      "name": "general:presentation",
      "color": "2EA9DF",
      "default": false,
      "description": "Presentation (as opposed to content)"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-03-10T22:00:35Z",
  "updated_at": "2019-03-19T18:19:07Z",
  "closed_at": "2019-03-19T18:19:07Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Below is a simplified version of `process_attestation` (the only hard-to-read transaction processing function). It incorporates #698 and #752. It has miscellaneous cleanups and simplifications. It also avoids untriggerable `assert`s (which goes against the goal of 100% coverage in the executable spec) such as `assert get_bitfield_bit(attestation.custody_bitfield, i) == 0b0`. I did this mostly for myself but happy to create a PR if people like it. \r\n\r\n```python\r\ndef process_attestation(state: BeaconState, attestation: Attestation) -> None:\r\n    \"\"\"\r\n    Process ``Attestation`` transaction.\r\n    Note that this function mutates ``state``.\r\n    \"\"\"\r\n    assert max(GENESIS_SLOT, state.slot - SLOTS_PER_EPOCH) <= attestation.data.slot\r\n    assert attestation.data.slot <= state.slot - MIN_ATTESTATION_INCLUSION_DELAY\r\n\r\n    # Check source epoch and root\r\n    assert (slot_to_epoch(attestation.data.slot), attestation.data.source_epoch) in {\r\n        (get_current_epoch(state), state.current_justified_epoch),   # Case 1: current epoch attestation\r\n        (get_previous_epoch(state), state.previous_justified_epoch)  # Case 2: previous epoch attestation\r\n    }\r\n    assert attestation.data.source_root == get_block_root(state, get_epoch_start_slot(attestation.data.source_epoch))\r\n\r\n    # Check crosslink data\r\n    assert attestation.data.crosslink_data_root == ZERO_HASH  # [to be removed in phase 1]\r\n    assert state.latest_crosslinks[attestation.data.shard] in {\r\n        attestation.data.previous_crosslink,  # Case 1: crosslink in state matches previous crosslink\r\n        Crosslink(                            # Case 2: crosslink in state matches current crosslink\r\n            crosslink_data_root=attestation.data.crosslink_data_root,\r\n            epoch=slot_to_epoch(attestation.data.slot)\r\n        )\r\n    }\r\n\r\n    # Check custody bits [to be generalised in phase 1]\r\n    assert attestation.custody_bitfield == b'\\x00' * len(attestation.custody_bitfield)\r\n\r\n    # Check aggregate signature [to be generalised in phase 1]\r\n    participants = get_attestation_participants(state, attestation.data, attestation.aggregation_bitfield)\r\n    assert len(participants) != 0\r\n    assert bls_verify(\r\n        pubkey=bls_aggregate_pubkeys([state.validator_registry[i].pubkey for i in participants]),\r\n        message_hash=hash_tree_root(AttestationDataAndCustodyBit(data=attestation.data, custody_bit=0b0)),\r\n        signature=attestation.aggregate_signature,\r\n        domain=get_domain(state.fork, slot_to_epoch(attestation.data.slot), DOMAIN_ATTESTATION),\r\n    )\r\n\r\n    # Cache pending attestation\r\n    pending_attestation = PendingAttestation(\r\n        data=attestation.data,\r\n        aggregation_bitfield=attestation.aggregation_bitfield,\r\n        custody_bitfield=attestation.custody_bitfield,\r\n        inclusion_slot=state.slot\r\n    )\r\n    if slot_to_epoch(attestation.data.slot) == get_current_epoch(state):\r\n        state.current_epoch_attestations.append(pending_attestation)\r\n    else:\r\n        state.previous_epoch_attestations.append(pending_attestation)\r\n```",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471996405",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/753#issuecomment-471996405",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753",
    "id": 471996405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTk5NjQwNQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T13:18:33Z",
    "updated_at": "2019-03-12T13:18:33Z",
    "author_association": "MEMBER",
    "body": "Definitely looks like an improvement to me!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471996405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473103923",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/753#issuecomment-473103923",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/753",
    "id": 473103923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzEwMzkyMw==",
    "user": {
      "login": "cemozerr",
      "id": 16581242,
      "node_id": "MDQ6VXNlcjE2NTgxMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16581242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cemozerr",
      "html_url": "https://github.com/cemozerr",
      "followers_url": "https://api.github.com/users/cemozerr/followers",
      "following_url": "https://api.github.com/users/cemozerr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cemozerr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cemozerr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cemozerr/subscriptions",
      "organizations_url": "https://api.github.com/users/cemozerr/orgs",
      "repos_url": "https://api.github.com/users/cemozerr/repos",
      "events_url": "https://api.github.com/users/cemozerr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cemozerr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T23:30:24Z",
    "updated_at": "2019-03-14T23:30:24Z",
    "author_association": "NONE",
    "body": "This also seems to fix the issue I just mentioned in #775 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473103923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
