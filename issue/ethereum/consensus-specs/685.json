{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/685",
  "id": 414041799,
  "node_id": "MDU6SXNzdWU0MTQwNDE3OTk=",
  "number": 685,
  "title": "A possible change to how validator balances are stored",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-02-25T10:44:29Z",
  "updated_at": "2019-03-26T14:15:29Z",
  "closed_at": "2019-03-26T14:15:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Add to the validator registry a value `rounded_balance`, and reduce the `uint64` in `validator_balances` to `unit32`, renaming the array `validator_fractional_balances`.\r\n\r\nRedefine `validator_balances[i]` with the following function:\r\n\r\n```python\r\ndef get_balance(state: BeaconState, index: int) -> int:\r\n    return (\r\n        state.validator_registry[index].rounded_balance * 10**9 + \r\n        state.validator_fractional_balances[index]\r\n    )\r\n```\r\n\r\nReplace `validator_balances[i] = x` (or `+= x`) with the following function:\r\n\r\n```python\r\ndef set_balance(state: BeaconState, index: int, new_balance: int):\r\n    validator = state.validator_registry[index]\r\n    if (\r\n        validator.rounded_balance * 10**9 > new_balance or\r\n        validator.rounded_balance * 10**9 + (15 * 10**8) < new_balance\r\n    ):\r\n        validator.rounded_balance = new_balance // 10**9\r\n    state.validator_fractional_balances[index] = (\r\n        new_balance - validator.rounded_balance * 10**9\r\n    )\r\n```\r\n\r\n### Motivation\r\n\r\nThe goal is to split the balance into two components, one an integer number of ETH and the other a fractional part. This accomplishes three functions:\r\n\r\n* Reduces the per-epoch re-hashing cost of `validator_balances` by 50%\r\n* Maintains an \"approximate balance\" that can be used by light clients in the `validator_registry`, reducing the number of Merkle branches per validator they need to download from 3 to 2 (actually often from ~2.01 to ~1.01, because when fetching a committee the Merkle branches in `active_index_roots` are mostly shared), achieving a very significant decrease in light client bandwidth costs\r\n* Maintains an \"approximate balance\" that can be used in the fork choice rule (this does not technically need to be done in the state, but if it's done here it doesn't need to be done elsewhere...)\r\n\r\nThe \"slack mechanism\" (the rounded balance is adjusted down when the balance falls below x, but is adjusted up when it goes above x + 1.5) ensures that a full 0.5 ETH of balance adjustment is required to cause the rounded balance to change. This prevents \"on-the-edge attacks\" where an attacker maintains a large set of validators whose balances oscillate between x+0.000001 and x-0.000001 for some integer x, causing very frequent changes of the rounded balance and hence very frequent (i) relatively expensive validator registry re-hashings, and (ii) relatively expensive fork choice metadata adjustments.",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467025467",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467025467",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467025467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzAyNTQ2Nw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T14:12:50Z",
    "updated_at": "2019-02-25T14:21:24Z",
    "author_association": "MEMBER",
    "body": "Minor suggestions:\r\n\r\n1) Stick with the `Gwei` type for consistency. (Also simplifies code.)\r\n2) Rename to `validator.high_balance` and `state.low_balances`.\r\n3) Minor code cleanups.\r\n\r\n```python\r\ndef get_balance(state: BeaconState, index: ValidatorIndex) -> Gwei:\r\n    return state.validator_registry[index].high_balance + state.low_balances[index]\r\n```\r\n\r\n```python\r\ndef set_balance(state: BeaconState, index: ValidatorIndex, balance: Gwei) -> None:\r\n    validator = state.validator_registry[index]\r\n    if validator.high_balance > balance or validator.high_balance + 15 * 10**8 < balance:\r\n        validator.high_balance = balance - balance % 10**9\r\n    state.low_balances[index] = balance - validator.high_balance\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467025467/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467045065",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467045065",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467045065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzA0NTA2NQ==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T15:04:55Z",
    "updated_at": "2019-02-25T15:04:55Z",
    "author_association": "MEMBER",
    "body": "My understanding is that light clients and the fork choice rule will follow the `high_balance`. If so, I have two issues relating to this but both stem from the bias of using `high_balance` estimator.\r\n\r\n1. A floor function as the basis of the estimator, introduces a constant negative bias. Assuming the low `low_balance`s are uniformly distributed across the range, then this is no issue, but it does encourage an attacker to keep all their `low_balance`s as small as possible. (Thereby making the weight of their votes for the fork-choice more efficient than an honest participant's.\r\n\r\n1. The hysteresis adds further bias:\r\n    1. Assuming validators move upwards and downwards with a symmetric probability distribution, on average, a validator's `high_balance` shifts when it crosses `high_balance` + 1.25. This positive bias partially counteracts the negative bias of the floor function, but the result is still net-negative.\r\n    1. The bias is not symmetric between those whose balances are on average increasing and those who are decreasing. On average, those whose balances decrease have a positive bias from the hysteresis estimator whilst the opposite is true for those who behave honestly. That is to say, that the hysteresis component of this estimator favors those who are being leaked/slashed whilst decreasing the weight of votes from honest participants (assumed to have increasing balances).\r\n\r\nThis second issue can be addressed by shifting the hysteresis down by 0.25. (ie. x+0.75 and x+1.25) whilst still preserving the 0.5 ETH separation for the \"on-edge attacks\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467045065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467183441",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467183441",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467183441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE4MzQ0MQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T21:07:44Z",
    "updated_at": "2019-02-25T21:07:44Z",
    "author_association": "MEMBER",
    "body": "That's doable though would require negative low balances which seems like it would add more complication.\r\n\r\nIn general this would be at most a ~1-3% benefit to the attacker so it's not close to a critical security issue; the fact that attackers with 16 ETH balances can be proposers as often as validators with 32 ETH may be more significant.\r\n\r\nThe reason *neither* of these issues are a big deal is that ultimately keeping your balance close to an integer, or pushing your balance down to 16 ETH, requires sacrificing revenue or deliberately incurring penalties, so in practice it's like slashing yourself by the amount by which you're gaining an unfair advantage.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467183441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467188337",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467188337",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467188337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE4ODMzNw==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T21:22:10Z",
    "updated_at": "2019-02-25T21:22:10Z",
    "author_association": "MEMBER",
    "body": "I wholeheartedly agree that none of these issues propose a serious threat it was more a comment on how it well be cool if we could design around it. \r\n\r\nI didn't think of the negative low balances, I agree it's not pretty.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467188337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467196568",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467196568",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467196568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE5NjU2OA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T21:47:21Z",
    "updated_at": "2019-02-25T21:48:34Z",
    "author_association": "MEMBER",
    "body": "> keeping your balance close to an integer [...] requires sacrificing revenue or deliberately incurring penalties\r\n\r\nIn theory an attacker could use deposits and transfers to make their balances close to integers prior to launching an attack. This may be a (small) argument for having `ACTIVATION_EXIT_DELAY` apply to transfers (deposits already have a delay thanks to `EPOCHS_PER_ETH1_VOTING_PERIOD`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467196568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467358268",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/685#issuecomment-467358268",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/685",
    "id": 467358268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM1ODI2OA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T09:11:32Z",
    "updated_at": "2019-02-26T09:16:06Z",
    "author_association": "MEMBER",
    "body": "> In theory an attacker could use deposits and transfers to make their balances close to integers prior to launching an attack\r\n\r\nTrue, though that would only allow one deliberate change per deposit -> exit cycle, so minimum ~once per ~520 epochs. And a deposit/exit cycle would require two fork choice metadata updates and four branch updates anyway. Perhaps this is a rationale for a minimum deposit period equal to one custody period before exiting is allowed (didn't we have this in an earlier version anyway, to ensure shard proposal committee grinding resistance?), to bump that up to minimum once per ~2568 epochs. Would be a one-line change to implement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/467358268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
