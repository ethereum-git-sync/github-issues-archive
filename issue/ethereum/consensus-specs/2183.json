{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2183",
  "id": 785650632,
  "node_id": "MDU6SXNzdWU3ODU2NTA2MzI=",
  "number": 2183,
  "title": "Propagate seen aggregate attestations",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 1486925112,
      "node_id": "MDU6TGFiZWwxNDg2OTI1MTEy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:attestation-management",
      "name": "scope:attestation-management",
      "color": "D9CD90",
      "default": false,
      "description": ""
    },
    {
      "id": 2789549886,
      "node_id": "MDU6TGFiZWwyNzg5NTQ5ODg2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Altair",
      "name": "Altair",
      "color": "FB966E",
      "default": false,
      "description": "aka HF1"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2021-01-14T04:56:17Z",
  "updated_at": "2021-11-30T00:45:34Z",
  "closed_at": "2021-10-26T20:43:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Currently, the gossipsub validation rules for the `beacon_aggregate_and_proof` topic specify that a client should `IGNORE` messages that contain an aggregate that has previously been seen. \r\n\r\n> [IGNORE] The valid aggregate attestation defined by hash_tree_root(aggregate) has not already been seen (via aggregate gossip, within a verified block, or through the creation of an equivalent aggregate locally).\r\n\r\nThis gives rise to a few issues within the gossipsub protocol. \r\n\r\nThere are on average, `TARGET_AGGREGATORS_PER_COMMITTEE` (16 for mainnet) aggregators per committee. These aggregators will often agree on the same aggregate attestation and submit individual `SignedAggregateAndProof` objects to the `beacon_aggregate_and_proof` topic. These messages are unique (as the aggregators and hence their signatures are unique) and therefore have their own unique gossipsub message-ids.\r\n\r\nTherefore the standard operation of a node is to receive one valid aggregate and then `IGNORE` (aka not forward, but still gossip about) any remaining duplicate aggregate attestations as specified by the topic rule mentioned above. Different nodes on the network may receive different aggregates as their first and `IGNORE` others. The gossipsub protocol will then gossip about the extra message-ids that were not forwarded. Other nodes will then notice they didn't receive these extra aggregates (gossipsub message ids) and request the unknown gossip-ids via gossipsub IWANT messages from their peers. Eventually all the aggregates should still propagate to all nodes in the network, albeit inefficiently. \r\n\r\nBesides the inefficient propagation of duplicate aggregate attestations, peers may also get penalized for not propagating all the messages on the topic (i.e it appears some nodes are censoring some message-ids as they don't forward them). \r\n\r\nAn easy solution to handling the scoring issue and inefficiencies of propagating via IHAVE/IWANT gossip, is to relax the topic requirement such that all nodes still forward duplicate aggregate attestations, provided the signed aggregate has not been seen before. This will make the propagation more efficient and reduce the messages being sent and received via IHAVE/IWANT. \r\nPotentially in the future, we may want to think about a way to filter out the duplicate aggregate attestations to save bandwidth, but this may involve complicated changes to the message-id function and is something we can address in the future.\r\n\r\n \r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/791129737",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-791129737",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 791129737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTEyOTczNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-05T03:43:16Z",
    "updated_at": "2021-03-05T03:43:41Z",
    "author_association": "MEMBER",
    "body": "Adding this to HF1\r\n\r\nEDIT: Altair***",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/791129737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/796334138",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-796334138",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 796334138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjMzNDEzOA==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T00:52:35Z",
    "updated_at": "2021-03-11T00:52:35Z",
    "author_association": "MEMBER",
    "body": "Making a note the outcome here may be relevant for the sync committee aggregation scheme we are working on in https://github.com/ethereum/eth2.0-specs/pull/2201",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/796334138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/952310391",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-952310391",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 952310391,
    "node_id": "IC_kwDOCOoGbc44wxp3",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T20:43:50Z",
    "updated_at": "2021-10-26T20:43:50Z",
    "author_association": "MEMBER",
    "body": "addressed in #2225",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/952310391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981232838",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-981232838",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 981232838,
    "node_id": "IC_kwDOCOoGbc46fGzG",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T02:17:50Z",
    "updated_at": "2021-11-29T02:36:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may require further discussion/modification after analysing the impact of the proposed change here. \r\n\r\nThis issue was originally created from the perspective of making our gossipsub layer as efficient as we can, but the assumption here is that we want all messages that we publish on a topic to be propagated to all peers subscribed to the topic (how gossipsub is designed to function). It seems there may be an exception for the `beacon_aggregate_and_proof` topic. \r\n\r\nIn the specs, we choose an average of 16 aggregators to send aggregated attestations on the `beacon_aggregate_and_proof` topic. If the aggregates are identical, then we have about a 15x message redundancy. Before this issue, clients would `IGNORE` (in the gossipsub validation sense) duplicates. This would be a race condition as to which aggregate was sent to a node first. If one aggregate made it to all nodes in the network first, then all other published aggregates would be ignored by their recpient peers and not propagate through the network. If there is a mix, i.e some nodes recieved one aggregate first then another second, both would propagate slowly and not fully via IHAVE/IWANT from some nodes that consider one aggregate valid over another (based on the time they received them). The end result is we were reducing redundancy (the amount of which is based on timing) in the aggregate attestations that are published and propagated through the network.\r\n\r\nAs can be seen from https://github.com/sigp/lighthouse/pull/2750 and https://github.com/prysmaticlabs/prysm/issues/9935 the changes orginially suggested in this issue, now fully propagate the redundant messages which appear to increase bandwidth and also increase CPU-time as we have to still verify the redundant aggregate signatures. \r\n\r\nAlthough our previous approach does reduce the redundancy, somewhat ad-hoc (based on propagation timing etc), the way we are doing it is probably not the best way as gossipsub was not desigend for this partial propagation and we still have some wasted messages in IHAVE/IWANT depending on the timing and propagation of published attestations.\r\n\r\nA few things we could do (from easy to hard):\r\n- Leave this as it was and don't make the modifications (i.e revert the PR made becase of this issue)\r\n- Set validators to not publish an aggregate if they have already seen an identical aggregate (may help a little, maybe even somehow order/randomize aggregator publishing time)\r\n-  ~~Make the message-id of the `beacon_aggregate_and_proof` topic such that identical aggregates (although from different aggregators) are identical. (This is  would leverage gossipsub internals to handle the duplicates for us before reaching the application. At the network level, this would make aggregates from different validators interchangeable (or look identical), which I dont see would be an immediate issue. The problem here is that we all have to modify gossipsub to allow for a message-id per topic, and potentially the bandwidth saving is not worth the engineering effort.~~  Would need to filter out bad aggregator sigs, so not a valid option\r\n- Some other spec-level modification to reduce duplication.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981232838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981542380",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-981542380",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 981542380,
    "node_id": "IC_kwDOCOoGbc46gSXs",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T11:21:28Z",
    "updated_at": "2021-11-29T11:21:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I dont see any easy way to make `gossipsub` aware of the intricacies of how `attestation_aggregates` work in practice as there doesn't seem to be an easy way to handle partial propagation.  We might have to accept the inefficiency that comes with the excessive `IWANT` requests.\r\n\r\n> Set validators to not publish an aggregate if they have already seen an identical aggregate (may help a little, maybe even somehow order/randomize aggregator publishing time)\r\n\r\nThis would be very tight, assuming all validators in the network are synced within 500ms of each other, packing in the aggregates and broadcasting them would take potentially 500ms - 1000ms. Relying on a node to receive an aggregate before broadcasting its own would have a limited impact on duplicates being propagated.\r\n\r\n> Leave this as it was and don't make the modifications (i.e revert the PR made becase of this issue)\r\n\r\nI think this would be the best course of action for now. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981542380/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981847673",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-981847673",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 981847673,
    "node_id": "IC_kwDOCOoGbc46hc55",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T17:21:51Z",
    "updated_at": "2021-11-29T17:21:51Z",
    "author_association": "MEMBER",
    "body": "The timing delay mechanism is a nice exploration that we can/should simulate, but I do agree with @nisdas that a reversion might be the most reasonable course of action in the immediate term",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981847673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981905919",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-981905919",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 981905919,
    "node_id": "IC_kwDOCOoGbc46hrH_",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T18:35:37Z",
    "updated_at": "2021-11-29T18:35:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is a great opportunity to do a post mortem for this incident to clearly define and structure the research and experimentation required before merging changes to the spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981905919/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981922371",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-981922371",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 981922371,
    "node_id": "IC_kwDOCOoGbc46hvJD",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T18:58:21Z",
    "updated_at": "2021-11-29T18:58:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think this is a great opportunity to do a post mortem for this incident to clearly define and structure the research and experimentation required before merging changes to the spec.\r\n\r\nSpecially because the issue at hand has an explicit comment from Proto regarding a tradeoff with bandwidth, so this wasn't actually quantified before it was merged: \r\n<https://github.com/ethereum/consensus-specs/pull/2225#pullrequestreview-611747244>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/981922371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/982135224",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-982135224",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 982135224,
    "node_id": "IC_kwDOCOoGbc46ijG4",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T23:44:16Z",
    "updated_at": "2021-11-29T23:44:16Z",
    "author_association": "MEMBER",
    "body": "Not to mention -- the original mechanism did *not* work as we intended (strictly dropping dupes) and was short-circuited  by IWANT/IHAVE. So it kind of worked in practice but by accident. So this was an attempt to fix an issue, not to optimize, but any change in network stack should likely have a resource consumption analysis at this point because it can greatly affect end users",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/982135224/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/982173943",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2183#issuecomment-982173943",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2183",
    "id": 982173943,
    "node_id": "IC_kwDOCOoGbc46isj3",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T00:45:34Z",
    "updated_at": "2021-11-30T00:45:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep this wasn't supposed to be strictly an optimization. It was correcting the spec to function as we intended (every message gets propagated to everyone on a topic). Turns out the way we were doing it before, has some positives with resource usage. The downside still is that messages published on the `beacon_aggreate_and_proof` topic can be partially propagated. So some nodes on the network can receive different messages than others even though they are subscribed to the same topic. It turns out this doesn't seem to harm anything and costs us less resources.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/982173943/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
