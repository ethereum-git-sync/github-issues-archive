{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1642",
  "id": 577410354,
  "node_id": "MDU6SXNzdWU1Nzc0MTAzNTQ=",
  "number": 1642,
  "title": "Latest Dev branch - partial change of Store to BeaconBlockHeader",
  "user": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-03-07T22:29:13Z",
  "updated_at": "2020-03-11T14:55:17Z",
  "closed_at": "2020-03-11T14:55:17Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In the latest Dev branch, there is a change from 0.10.1, in Store to keep BeaconBlockHeader instead of BeaconBlock, which is used in get_forkchoice_store, however not all references have been updated.\r\n\r\nFirst, I suggest changing the field name to block_headers, to be consistent with the data type, and make it easier to spot errors (when storing or retrieving a value).\r\n\r\nSome of the reference that have not been updated yet include:\r\n\r\n* filter_block_tree / get_filtered_block_tree, the logic works, but it is now retrieving Dict[Root, BeaconBlockHeader]; also update variable names to block_header\r\n\r\n* on_block, attempts to store the block, but should instead calculate hash_tree_root of the body and store the header\r\n\r\n* also, in general update names in routines such as get_ancestor, e.g. change first line to block_header = store.block_headers[root]\r\n",
  "closed_by": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/596836859",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1642#issuecomment-596836859",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
    "id": 596836859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjgzNjg1OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T00:06:52Z",
    "updated_at": "2020-03-10T00:06:52Z",
    "author_association": "MEMBER",
    "body": "In practice, a client needs access to the blocks. A header and block map to the same id (root) so in practice a client can use headers in some cases, or just roots, or full blocks.\r\n\r\n@protolambda made the change here in fork choice, I'm not 100% sure why. Probably because the full block was not needed so he wanted to reduce testing overhead. Maybe he can give some insight. \r\n\r\nAgreed names should be changed if we keep header around. My intuition is to just keep it as `BeaconBlock`.\r\n\r\n> on_block, attempts to store the block, but should instead calculate hash_tree_root of the body and store the header\r\n\r\nNote that `hash_tree_root(block) == hash_tree_root(block_header)` so this storage lookup is actually fine (although naming is off).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/596836859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597012294",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1642#issuecomment-597012294",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
    "id": 597012294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzAxMjI5NA==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T10:26:31Z",
    "updated_at": "2020-03-10T10:26:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > on_block, attempts to store the block, but should instead calculate hash_tree_root of the body and store the header\r\n> \r\n> Note that `hash_tree_root(block) == hash_tree_root(block_header)` so this storage lookup is actually fine (although naming is off).\r\n\r\nI was more talking about the discrepancy between:\r\n\r\n```\r\nclass Store(object):\r\n    blocks: Dict[Root, BeaconBlockHeader] \r\n```\r\n\r\nand:\r\n\r\n```\r\ndef on_block(store: Store, signed_block: SignedBeaconBlock) -> None:\r\n    block = signed_block.message\r\n    store.blocks[hash_tree_root(block)] = block\r\n```\r\n\r\nThe hash_tree_root(block) would be correct, but in a strongly typed language trying to stick a BeaconBlock in a dictionary of BeaconBlockHeader isn't going to work.\r\n\r\nSo, hash the body first, to create the header, then insert.\r\n\r\n```\r\n    block = signed_block.message\r\n    header = BeaconBlockHeader(slot=block.slot, parent_root=block.parent_root, state_root=block.state_root, body_root=hash_tree_root(block.body))\r\n    store.blocks[hash_tree_root(block)] = header\r\n```\r\n\r\nAnd yes, for the insert hash_tree_root(block) and hash_tree_root(header) would be the same.\r\n\r\nThis probably isn't an issue for a weakly typed language, as the hash will always calculate the same, and I don't think we ever access anything in the body from the store (probably why it was removed).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597012294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597195116",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1642#issuecomment-597195116",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
    "id": 597195116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzE5NTExNg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T16:53:27Z",
    "updated_at": "2020-03-10T16:53:27Z",
    "author_association": "MEMBER",
    "body": "The movement to `BeaconBlockHeader` might have been in error, and if it wasn't, agreed that all references, assignments, names, etc should be changed to reflect `header`. \r\n\r\nThat said, in the spirit of keeping changes minimal as we approach Phase 0 mainnet, I suggest we change it back to `BeaconBlock`.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597195116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597207369",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1642#issuecomment-597207369",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
    "id": 597207369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzIwNzM2OQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-10T17:16:37Z",
    "updated_at": "2020-03-10T17:16:37Z",
    "author_association": "MEMBER",
    "body": "The goal with fork-choice was to encapsulate it, and hide other spec components from it as much as possible. So signatures outside of fork-choice, and block contents as well. But that said, right now I think it is preferable to minimize changes for clients, and reverting sounds ok.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597207369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597681800",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1642#issuecomment-597681800",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1642",
    "id": 597681800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY4MTgwMA==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T14:55:17Z",
    "updated_at": "2020-03-11T14:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Keep the spec stable sounds reasonable.\r\n\r\nIn practice, an implementation could always see that the spec never users anything outside the header, and so only load the header part for processing (caching the body root, or lazy loading it, or whatever). \r\n\r\nThere are lots of places where the spec (defining the required logic) does things inefficiently, and an implementation may optimise; so long as the eventual logic is the same that's fine.\r\n\r\nClosing the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/597681800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
