{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1091",
  "id": 445258551,
  "node_id": "MDU6SXNzdWU0NDUyNTg1NTE=",
  "number": 1091,
  "title": "Explicit unhandled exceptions",
  "user": {
    "login": "sorpaas",
    "id": 6277322,
    "node_id": "MDQ6VXNlcjYyNzczMjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6277322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sorpaas",
    "html_url": "https://github.com/sorpaas",
    "followers_url": "https://api.github.com/users/sorpaas/followers",
    "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
    "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
    "organizations_url": "https://api.github.com/users/sorpaas/orgs",
    "repos_url": "https://api.github.com/users/sorpaas/repos",
    "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sorpaas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1244734333,
      "node_id": "MDU6TGFiZWwxMjQ0NzM0MzMz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:presentation",
      "name": "general:presentation",
      "color": "2EA9DF",
      "default": false,
      "description": "Presentation (as opposed to content)"
    },
    {
      "id": 1295439957,
      "node_id": "MDU6TGFiZWwxMjk1NDM5OTU3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:CI/tests/pyspec",
      "name": "scope:CI/tests/pyspec",
      "color": "BDC0BA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-05-17T04:23:21Z",
  "updated_at": "2019-12-12T16:17:27Z",
  "closed_at": "2019-12-12T16:17:27Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The spec specifies that if the runtime \"panics\", the block is considered invalid. However, in real life, we need to properly return errors. In the specs, `assert` can be easily turned into errors. However, there're several cases where addition/subtraction can overflow (such as deposit counting), and array access can be out of bound (such as merkle proof validation) for invalid states/blocks. It would be great to add additional `assert` in the spec to clearly document them.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/493419338",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1091#issuecomment-493419338",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091",
    "id": 493419338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzQxOTMzOA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-17T11:22:32Z",
    "updated_at": "2019-05-17T11:22:32Z",
    "author_association": "MEMBER",
    "body": "I wouldn't be opposed to *all* unhandled exceptions being thrown by an explicit `assert` :) Fuzz testing can help detect lingering implicit exceptions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/493419338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/502488556",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1091#issuecomment-502488556",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091",
    "id": 502488556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ4ODU1Ng==",
    "user": {
      "login": "guidovranken",
      "id": 6846644,
      "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guidovranken",
      "html_url": "https://github.com/guidovranken",
      "followers_url": "https://api.github.com/users/guidovranken/followers",
      "following_url": "https://api.github.com/users/guidovranken/following{/other_user}",
      "gists_url": "https://api.github.com/users/guidovranken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
      "organizations_url": "https://api.github.com/users/guidovranken/orgs",
      "repos_url": "https://api.github.com/users/guidovranken/repos",
      "events_url": "https://api.github.com/users/guidovranken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guidovranken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-16T21:48:27Z",
    "updated_at": "2019-06-16T21:57:56Z",
    "author_association": "MEMBER",
    "body": "I'll list IndexError exceptions found by my fuzzer here:\r\n\r\n```process_proposer_slashing```:\r\n\r\n```python\r\nproposer = state.validator_registry[proposer_slashing.proposer_index]\r\n```\r\n\r\n```process_voluntary_exit```:\r\n\r\n```python\r\nvalidator = state.validator_registry[exit.validator_index]\r\n```\r\n\r\n```process_attestation```:\r\n\r\n```\r\n  File \"/home/jhg/eth-2019/x/eth2.0-fuzzing/files/fuzzers/block/pythonlib/eth2spec/phase0/spec.py\", line 1211, in process_attestation\r\n    parent_crosslink = state.current_crosslinks[data.crosslink.shard]\r\n  File \"/home/jhg/eth-2019/x/eth2.0-fuzzing/files/fuzzers/block/pythonlib/eth2spec/utils/ssz/ssz_typing.py\", line 269, in __getitem__\r\n    return self.items[key]\r\nIndexError: cannot fit 'int' into an index-sized integer\r\n```\r\n\r\n```validate_indexed_attestation```:\r\n\r\n```python\r\n  File \"/home/jhg/eth-2019/x/eth2.0-fuzzing/files/fuzzers/block/pythonlib/eth2spec/phase0/spec.py\", line 644, in validate_indexed_attestation\r\n    bls_aggregate_pubkeys([state.validator_registry[i].pubkey for i in bit_0_indices]),\r\n  File \"/home/jhg/eth-2019/x/eth2.0-fuzzing/files/fuzzers/block/pythonlib/eth2spec/phase0/spec.py\", line 644, in <listcomp>\r\n    bls_aggregate_pubkeys([state.validator_registry[i].pubkey for i in bit_0_indices]),\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/502488556/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565076057",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1091#issuecomment-565076057",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1091",
    "id": 565076057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTA3NjA1Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T16:17:27Z",
    "updated_at": "2019-12-12T16:17:27Z",
    "author_association": "MEMBER",
    "body": "Closing. These additional asserts won't make it into the near-frozen spec.\r\n\r\npyspec/SSZ-typing do throw for under and overflows so at least this isn't blindly happening in the spec anymore",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565076057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
