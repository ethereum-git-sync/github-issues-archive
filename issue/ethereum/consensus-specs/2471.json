{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2471",
  "id": 914087613,
  "node_id": "MDU6SXNzdWU5MTQwODc2MTM=",
  "number": 2471,
  "title": "Can't publish SyncCommitteeSignature to multiple subnets",
  "user": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 2789549886,
      "node_id": "MDU6TGFiZWwyNzg5NTQ5ODg2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Altair",
      "name": "Altair",
      "color": "FB966E",
      "default": false,
      "description": "aka HF1"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-06-08T00:32:24Z",
  "updated_at": "2021-06-08T19:47:06Z",
  "closed_at": "2021-06-08T19:47:06Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We’re hitting some interesting problems with publishing sync committee signatures when they have to be sent to multiple gossip topics (the validator is included in the sync committee multiple times, in different subnets).  This is extremely unlikely to happen on MainNet or the public testnets but very common on small scale test networks used during development or in automated tests.\r\n\r\nFirstly, jvm-libp2p is tracking seen messages globally, not per topic so just ignores the request to publish to the additional topics because it’s already been sent once. Apparently the rust implementation applies the same restriction.  This makes it impossible to implement the validator spec correctly since the same signature can't be published to multiple subnets.\r\n\r\nSecondly, the eth2 p2p-networking spec, explicitly has:\r\n```\r\n•\t[IGNORE] There has been no other valid sync committee signature for the declared slot for the validator referenced by sync_committee_message.validator_index.\r\n```\r\nI believe this is meant to be per-subnet but we should make that clearer.",
  "closed_by": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856352868",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2471#issuecomment-856352868",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471",
    "id": 856352868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjM1Mjg2OA==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T00:37:00Z",
    "updated_at": "2021-06-08T00:44:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "One option would be to change the `SyncCommitteeMessage` to include the subnet ID:\r\n```python\r\nclass SyncCommitteeMessage(Container):\r\n    # Slot to which this contribution pertains\r\n    slot: Slot\r\n    # Subcommittee index \r\n    subcommittee_index: uint64 # or maybe smaller\r\n    # Block root for this signature\r\n    beacon_block_root: Root\r\n    # Index of the validator that produced this signature\r\n    validator_index: ValidatorIndex\r\n    # Signature by the validator over the block root of `slot`\r\n    signature: BLSSignature\r\n```\r\n\r\nSince the BLS signature is only over the `beacon_block_root` a single BLS signing operation can be performed and only the `subcommittee_index` needs to be changed when publishing to different subnets.\r\n\r\nIn terms of the standard validator API however, it would be ideal if the validator client didn't need to care at all about the subnet and the beacon node just adds it in when publishing.  Currently the API for create and publish `SyncCommitteeMessage` returns/posts a `SyncCommitteeMessage` but it would now be missing this new field. That's not unreasonable but wouldn't be an issue if a wrapper type was used instead:\r\n\r\n```python\r\nclass SyncCommitteeMessageWrapper(Container):\r\n    # Slot to which this contribution pertains\r\n    message: SyncCommitteeMessage\r\n    # Subcommittee index \r\n    subcommittee_index: uint64 # or maybe smaller\r\n```\r\n\r\nNaming probably needs some work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856352868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856526507",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2471#issuecomment-856526507",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471",
    "id": 856526507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjUyNjUwNw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T07:25:24Z",
    "updated_at": "2021-06-08T07:25:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "We had the same validation issue in Lighthouse, and will fix it in advance of any changes to the types themselves.\r\n\r\nAn alternative to the wrapper type would be to keep both representations, using the one with `subcommittee_index` in consensus (and everywhere except the API). The API could then define its own type equivalent to the current `SyncCommitteeMessage` called something like `FreeSyncCommitteeMessage`.\r\n\r\n```python\r\nclass FreeSyncCommitteeMessage(Container):\r\n    # Slot to which this contribution pertains\r\n    slot: Slot\r\n    # Block root for this signature\r\n    beacon_block_root: Root\r\n    # Index of the validator that produced this signature\r\n    validator_index: ValidatorIndex\r\n    # Signature by the validator over the block root of `slot`\r\n    signature: BLSSignature\r\n```\r\n\r\nI'm also not sure of the name :sweat_smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856526507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856658281",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2471#issuecomment-856658281",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471",
    "id": 856658281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjY1ODI4MQ==",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T10:46:46Z",
    "updated_at": "2021-06-08T10:46:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do we even need the subcommittees? It might be too late to make this kind of change, but it seems like a lot of nuance for reducing the messages we might get by a couple of hundred... I assume it's to reduce the load on light clients...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856658281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856963669",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2471#issuecomment-856963669",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2471",
    "id": 856963669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Njk2MzY2OQ==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T17:39:25Z",
    "updated_at": "2021-06-08T17:39:25Z",
    "author_association": "MEMBER",
    "body": "> Do we even need the subcommittees? It might be too late to make this kind of change, but it seems like a lot of nuance for reducing the messages we might get by a couple of hundred... I assume it's to reduce the load on light clients...\r\n\r\naggregation is used here to bound the additional load on the entire validator set required to support the sync committees in the first place -- we currently have no lookahead on the proposer duty which means validators should always be listening to the global channel `sync_committee_contribution_and_proof` in order to be able to collect the sync committee proposer rewards (the underlying assumption is that proposers will not be able to find peers and gather the right gossip in time if they wait until the epoch they discover they should propose in). \r\n\r\nwithout aggregation, all validators would need to listen to traffic from an additional `SYNC_COMMITTEE_SIZE` validators each slot. with aggregation, that load is reduced by a factor of `SYNC_COMMITTEE_SUBNET_COUNT` and with the current parameters works out to something on the order of an additional attestation committee (~128 validators).\r\n\r\ni don't see an immediate reason light clients would want to follow the gossip at this stage of the process; more likely they will want updates on a separate network once signatures actually make it on-chain, get finalized, etc.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/856963669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
