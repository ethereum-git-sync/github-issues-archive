{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/747",
  "id": 418981361,
  "node_id": "MDU6SXNzdWU0MTg5ODEzNjE=",
  "number": 747,
  "title": "Change shuffling to facilitate more optimizations [experimental idea]",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-03-08T22:25:05Z",
  "updated_at": "2019-03-15T16:21:58Z",
  "closed_at": "2019-03-15T16:20:19Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "So I thought of some more optimizations for shuffling, other than hashing. After pushing the possible hash-performance with Justin, Carl and Dankrad during EthCC, I was looking for other bottlenecks. A hash does not have to be the only bottleneck currently.\r\n\r\nWriting many times in arbitrary non-cached RAM could also be bad. (Tested with Justin, but benchmarks of shuffling without the code line that swaps seemed to return funny results, so I'm not making claims on this yet). If we change the sourcing of the bits to a different way (while still being permute-index and unshuffle compatible), we could achieve large optimizations here.\r\n\r\nI've written up my ideas in the README.md of a new shuffling repo (as opposed to my previous optimized eth2 shuffling), link here: https://github.com/protolambda/eth2-shuffle-experiment\r\n\r\nSuggestions welcome!\r\n\r\nFYI: continuing work on executable Go spec starting from tomorrow (at ETHParis hackathon). Will work on shuffling later at some point. This is very much just an experimental sleep-deprived idea during this ETH week in Paris, but possibly very effective changes (hope to get > 2x speed up, > 10x with parallelization). :sweat_smile: \r\n\r\n",
  "closed_by": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471173758",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/747#issuecomment-471173758",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747",
    "id": 471173758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE3Mzc1OA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T12:41:23Z",
    "updated_at": "2019-03-09T12:41:23Z",
    "author_association": "MEMBER",
    "body": "To be clear this is a different implementation of the same spec, so the results line up with the naive implementation exactly, correct?\r\n\r\nOr are there spec changes that you are recommending too?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471173758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471182977",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/747#issuecomment-471182977",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747",
    "id": 471182977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE4Mjk3Nw==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T14:35:10Z",
    "updated_at": "2019-03-09T14:36:05Z",
    "author_association": "MEMBER",
    "body": "Like the title says: these are changes to the spec. However, it's still swap-or-not (conceptually). The only thing that would change is the way pivots and swap-or-not bits (`bitV`) are determined. For the former, it's just an optimization for permute-index, since we're only using 8 bytes per pivot hash (32 bytes). For the latter, you could think of it as transposing the randomness bitfield we currently use. We still get the same desired behavioral properties; the described idea supports \"permute-index\" and both list-wise and permute-index can be reversed (in pretty much the same way as now, i.e. reverse round order)\r\n\r\nThe thing is, besides possibly some more optimizations in hashing, the current shuffling algorithm can't be optimized much better. It has a lower optimization ceiling. By this \"transposing\" of the randomness, we can go further with optimizations, and hopefully win a 2x, if not more (less writes + parallelization + CPU data cache fitting)\r\n\r\nJust an idea, I'm not prioritizing it over my executable spec work, but even faster shuffling would be nice.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/471182977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473350592",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/747#issuecomment-473350592",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/747",
    "id": 473350592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzM1MDU5Mg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T16:20:19Z",
    "updated_at": "2019-03-15T16:21:58Z",
    "author_association": "MEMBER",
    "body": "Closing this. Turns out that although you can reduce writes pretty well with a little bit more hashing, you are still reading from a big chunk of memory, making it run slow.\r\n\r\nHow to improve shuffling from here, untested:\r\n\r\n- implement simple pivot improvement for permute-index (4->1 hash reduction)\r\n- split up your shuffling function in layers (ranges of round), and parallelize. Combine results.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/473350592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
