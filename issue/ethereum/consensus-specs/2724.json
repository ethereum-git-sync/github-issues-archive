{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2724",
  "id": 1054978617,
  "node_id": "I_kwDOCOoGbc4-4bI5",
  "number": 2724,
  "title": "EL clients require TTD to be known in advance",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2812431987,
      "node_id": "MDU6TGFiZWwyODEyNDMxOTg3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Bellatrix",
      "name": "Bellatrix",
      "color": "1D36aa",
      "default": false,
      "description": "CL+EL Merge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-11-16T14:57:32Z",
  "updated_at": "2023-05-24T03:40:20Z",
  "closed_at": "2023-05-24T03:40:20Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Original discussion happened in Discord: https://discord.com/channels/595666850260713488/692062809701482577/910086648346329099\r\nRelated to https://github.com/ethereum/consensus-specs/issues/2643\r\n\r\nThe essence of the discussion -- TTD should be known in advance and should be the only trigger of consensus upgrade on EL side, details and implications:\r\n* EL client must know TTD in advance to have a clear boundary at which the consensus upgrade happens. Handling the case when sister blocks have different consensus rules adds a lot of complexity to the fork machinery of EL clients.\r\n* TTD must be the only trigger of the consensus upgrade because adding another brings the same complexity issue as the previous case. It means that `TERMINAL_BLOCK_HASH` can't be used as a trigger for consensus upgrade on EL side. It means that TBH functionality may only be implemented by block whitelisting via its hash value + TTD override. EL clients currently support the whitelisting feature.\r\n\r\n### Option 1\r\nRemove TTD and TBH overrides and rely on \"release/update\" procedure in case if there is a hashpower migration that significantly delays the Merge (the TTD override case) and in case of 51% attacks (the TBH case). Cons: delays the emergency reaction by X hours -- hours required for the network to upgrade their clients.\r\n\r\n### Option 2\r\nHave override settings in CL and EL clients. Cons: bricks the client in case when user restarts only CL or EL client with a new setting, i.e. overrides go inconsistent. Potentially, EL may respond with specific errors to `executePayload` and `forkchoiceUpdated` if they reference a block that isn't a valid terminal block. It would aid figuring out the issue and restarting a node with correct settings.\r\n\r\n### Option 3\r\nHave EL responsible for handling terminal block functionality and have override settings on EL only. TBH functionality can't be handled entirely by EL as TBH also comes with an epoch number which coordinates the transition on CL side. So, this option seems not viable as it lefts an issue with consistency of overrides between the layers.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971346284",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-971346284",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 971346284,
    "node_id": "IC_kwDOCOoGbc455ZFs",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T08:28:30Z",
    "updated_at": "2021-11-17T08:28:30Z",
    "author_association": "MEMBER",
    "body": "With the assumption that upgrading binary distributions takes near the same time as restarting clients with additional CLI arguments, I am inclined to have the following approach:\r\n* Remove overrides via CLI args entirely and rely on overrides via releasing/upgrading binary distributions\r\n* Add the corresponding errors to Engine API, i.e. respond with error if `executePayload` or `forkchoiceUpdated` deviates from TTD hardcoded on EL side\r\n\r\nDepending on the case, with this approach the Merge acceleration process will look as follows:\r\n* Hashpower reduction causing significant Merge delay\r\n    * Release CL and EL binaries with the new `TTD` value that is lower than the previous one\r\n* Attacks on the network\r\n    * Release CL binaries with the new `TTD` + `TBH_ACTIVATION_EPOCH`\r\n    * Release EL binaries with the new `TTD` + `TBH` (whitelisted block hash)\r\n\r\nThe aforementioned assumption may not held and worth checking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971346284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971554167",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-971554167",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 971554167,
    "node_id": "IC_kwDOCOoGbc456L13",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T12:57:30Z",
    "updated_at": "2021-11-17T12:57:30Z",
    "author_association": "MEMBER",
    "body": "> With the assumption that upgrading binary distributions takes near the same time as restarting clients with additional CLI arguments\r\n\r\nI don think this is true. Pushing the code is one thing, but that needs to go through the pipeline. Go is super fast at building and even for us it takes 1-2h until all the binaries are published everywhere.\r\n\r\nBut I don't understand why you're so against that CLI flag. Let the option remain and users will do whatever is best for them. I don't see any advantage in trying to force CL clients to handle this in one specific way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971554167/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971554625",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-971554625",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 971554625,
    "node_id": "IC_kwDOCOoGbc456L9B",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T12:58:04Z",
    "updated_at": "2021-11-17T12:58:04Z",
    "author_association": "MEMBER",
    "body": "We've had hard forks before, we had to delay hard forks before. The current mechanisms work. No need to reinvent it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971554625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971571604",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-971571604",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 971571604,
    "node_id": "IC_kwDOCOoGbc456QGU",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T13:15:56Z",
    "updated_at": "2021-11-17T13:15:56Z",
    "author_association": "MEMBER",
    "body": "> But I don't understand why you're so against that CLI flag. Let the option remain and users will do whatever is best for them.\r\n\r\nIt neglects the original idea behind CLI flags because then we will have to take in account users that prefer to download binaries and have the Merge delayed with enough time for them doing so. In this case CLI flags will just contribute to UX. Though, I am not opposed to this it probably doesn't worth the complexity. I'm fine with emergency Merge strategy relying on binary releases and distribution but wondering can and should we do better or not. Better means less chaostime in the network in case of attacks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971571604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971630977",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-971630977",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 971630977,
    "node_id": "IC_kwDOCOoGbc456emB",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T14:25:05Z",
    "updated_at": "2021-11-17T14:25:05Z",
    "author_association": "MEMBER",
    "body": "I completely agree with cutting new releases, just saying that there's no particular reason to disable the other protective measures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/971630977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/974230490",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2724#issuecomment-974230490",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2724",
    "id": 974230490,
    "node_id": "IC_kwDOCOoGbc46EZPa",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-19T16:42:34Z",
    "updated_at": "2021-11-19T16:42:34Z",
    "author_association": "MEMBER",
    "body": "I'm not certain that having the flag overrides buys us much time in practice given that (1) clients will cut releases almost certainly anyway (thus we prbably assume the worst case that people rely on these) and (2) I don't suspect we could coordinate faster than 24 hours no matter what and this is more like a 48 coordination time at best, at which point the 12 hour boost (at best) from flags isn't making a tangible impact.\r\n\r\nFlag overrides are okay but given the above, just introduce complexity. I suppose the main positive for flag overrides is that it will ensure that clients know how to handle TBH elegantly before needing to use it in an emergency. So specifying it here would force their hand in a sense.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/974230490/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
