{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1277",
  "id": 464841978,
  "node_id": "MDU6SXNzdWU0NjQ4NDE5Nzg=",
  "number": 1277,
  "title": "Edge case: crosslinks de-finalizing",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043866,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:bug",
      "name": "general:bug",
      "color": "DD1C1A",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1437528763,
      "node_id": "MDU6TGFiZWwxNDM3NTI4NzYz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/post-freeze%20(substantive)",
      "name": "post-freeze (substantive)",
      "color": "991a40",
      "default": false,
      "description": "Substantive consensus change non-critical for long-lived cross-client testnets"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-07-06T10:43:17Z",
  "updated_at": "2019-12-12T15:45:56Z",
  "closed_at": "2019-12-12T15:45:56Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Here's an edge case that we haven't thought about:\r\n\r\n* In block B, 2/3 + epsilon of validators in the crosslink committee for some shard crosslink H\r\n* H is now a dependency of B\r\n* In the next block B', one of those validators gets slashed, and so the fraction voting for the crosslink drops to below 2/3\r\n* H does not appear to be a dependency of B', and when the epoch ends, B never gets included\r\n\r\nThis creates a strange scenario where, if H is detected as being invalid or unavailable, B is not an acceptable block and should not be accepted or built on, but B', a child of B, should be. This is technically not fatal, but it is still very weird....\r\n\r\nEdit: it's a little more subtle because _effective_ balances don't change intra-epoch, only at the end of the epoch, after crosslink processing takes place. But the above logic still applies with respect to slashings that are \"destined\" to process at the _end_ of the next epoch: consider the case where H gets included by 2/3 - epsilon validators, and then a slashing from a non-signer is included, pushing the fraction to 2/3 + epsilon - not for the current epoch, during which the slashing would not count, but for the next epoch. Such a chain should not be built upon because it's theoretically \"not viable\"; unless someone is slashed (unlikely) there's no way it can legally continue past the end of the next epoch, at which point it will have inducted a bad crosslink. But then if someone _does_ get slashed, the chain becomes viable again.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/508916614",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-508916614",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 508916614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODkxNjYxNA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-06T10:53:34Z",
    "updated_at": "2019-07-06T10:53:58Z",
    "author_association": "MEMBER",
    "body": "Honestly all of this complexity about reasoning cross-epoch is making in in favor of just throwing out all the machinery involving cross-epoch transitions (so a crosslink initiated during epoch N can only be included at the end of epoch N); this would also be a substantial simplification of the spec. That would be a one-line change; negative impacts to crosslinking latency can be remedied in a later patch (phase 1?) that would make the last 8 slots of an epoch do nothing crosslink-wise. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/508916614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/509733438",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-509733438",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 509733438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTczMzQzOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-09T17:28:07Z",
    "updated_at": "2019-07-09T17:28:07Z",
    "author_association": "MEMBER",
    "body": "I see, this is more of the issues where work done in the next epoch might never be able to be included due to what might happen with the prior epoch crosslinks during the next epoch. By \"not viable\" this is what you mean, right? That a committee for a given epoch does not have the chance of successfully creating a crosslink?\r\n\r\nAgreed that simplifying here is our current best solution. Are you proposing that we only allow crosslinks to be formed from attestation in the current epoch?\r\n\r\n> the last 8 slots of an epoch do nothing crosslink-wise.\r\n\r\nIf this is the case, we would never be able to crosslink _all_ shards in a single epoch. Not a terrible tradeoff for simplicity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/509733438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/510023452",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-510023452",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 510023452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAyMzQ1Mg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-10T11:31:29Z",
    "updated_at": "2019-07-10T11:34:27Z",
    "author_association": "MEMBER",
    "body": "By \"not viable\" I mean \"any chain that is a sufficiently deep descendant of this chain will be invalid because the chain has a crosslink-in-progress to bad data\". The idea being that this happens because you have a crosslink to bad data with 2/3-epsilon votes, which is destined to flip over to 2/3+epsilon in the _next_epoch because one of the nonvoters got slashed.\r\n\r\n> Are you proposing that we only allow crosslinks to be formed from attestation in the current epoch?\r\n\r\nYep!\r\n\r\n> If this is the case, we would never be able to crosslink all shards in a single epoch. Not a terrible tradeoff for simplicity.\r\n\r\nYou can get around this by increasing the max shard count per slot and having the last few attestations correspond to no shard in particular. But this might be too hard to implement at this point; the simpler thing is definitely to just let a few attestations fail to get included on time at the end and make sure to cycle through shards well so every shard gets a chance to be at the front of an epoch.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/510023452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/510215660",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-510215660",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 510215660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDIxNTY2MA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-10T20:26:30Z",
    "updated_at": "2019-07-10T20:26:30Z",
    "author_association": "MEMBER",
    "body": "I missed \"if H is detected as being invalid or unavailable\" when I read it the first time... got it!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/510215660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513556394",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-513556394",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 513556394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU1NjM5NA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-21T13:52:06Z",
    "updated_at": "2019-07-21T13:52:06Z",
    "author_association": "MEMBER",
    "body": "I just realized that there is another edge case here. Suppose that there are two crosslinks for a particular shard that both get 2/3 within the same epoch (yes, a few people get slashed here). At the beginning, crosslink A is winning with 68%, but then crosslink B pulls ahead with 70%.\r\n\r\nI think if we want to fix this, the simplest/most robust way to do it might be to make a data structure `List[Tuple[Crosslink, uint64]]` where for each crosslink we store the _percentage_ of validators that voted for it. We then automatically add any crosslink if it hits 2/3. We run a loop at the end of every epoch that cleans out any crosslinks whose parents no longer match the latest crosslinks in the state or any crosslinks that are more than 2 epochs old.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513556394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522308468",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-522308468",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 522308468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMwODQ2OA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-18T10:10:58Z",
    "updated_at": "2019-08-18T10:10:58Z",
    "author_association": "MEMBER",
    "body": "A few questions/comments:\r\n\r\n1) Are you suggesting two separate fixes for two separate edge cases?\r\n2) I'm inclined to say the first edge case is not a high-priority fix. As you write, it's a bit weird but as I understand nothing is broken.\r\n3) \"throwing out all the machinery involving cross-epoch transitions\" => The main think I want to avoid is not all shards being able to crosslink once per epoch. I'm inclined to either keep cross-epoch machinery, or say that a crosslink initiated during epoch N can only be included at the end of epoch N+1 (i.e. add one epoch of latency for all shards).\r\n4) Could we fix the first edge case by removing `get_unslashed_attesting_indices` (i.e. count both unslashed and slashed indices)?\r\n5) \"At the beginning, crosslink A is winning with 68%, but then crosslink B pulls ahead with 70%.\" => To confirm, do you mean that at the end of epoch `e` A is winning with 68%, and at the end of epoch `e+1` B is winning with 70%? And if so, why is this problem?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/522308468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565062669",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1277#issuecomment-565062669",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1277",
    "id": 565062669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTA2MjY2OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T15:45:56Z",
    "updated_at": "2019-12-12T15:45:56Z",
    "author_association": "MEMBER",
    "body": "Crosslinks don't exist in phase 0 and the structure has majjorly been overhauled in Phase 1.\r\nClosing this issue",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/565062669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
