{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2033",
  "id": 689940508,
  "node_id": "MDU6SXNzdWU2ODk5NDA1MDg=",
  "number": 2033,
  "title": "Shard count recap and discussion",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1137720193,
      "node_id": "MDU6TGFiZWwxMTM3NzIwMTkz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:discussion",
      "name": "general:discussion",
      "color": "F17C67",
      "default": false,
      "description": ""
    },
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-01T08:32:03Z",
  "updated_at": "2023-12-11T13:25:27Z",
  "closed_at": "2023-12-11T13:25:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "We had some dicussions during previous PR reviews. This issue is a recap for discussing phase 1 shard count setting strategies.\r\n \r\nBased on #2027 changes\r\n\r\n### Previous research:\r\n* https://ethresear.ch/t/registrations-shard-count-and-shuffling/2129: once upon a time when the committee size was fixed, @JustinDrake proposed that *doubling* the shard count when the pending validators registrations queue is very full.\r\n* https://ethresear.ch/t/a-proposal-for-structuring-committees-cross-links-etc/2118: once upon a time when the crosslink was infrequent (i.e., not crosslink at every slot), with committee size `k` and `N` active validators, @vbuterin proposed three solutions:\r\n\t* Fix `k = 135`, set `shard_count = N/k`\r\n\t* Fix `shard_count = 100`, set `k = N/shard_count`\r\n\t* Fix `k = shard_count = sqrt(N)`\r\n\r\nNote that the committee selection algorithm was *very different* from now.\r\n\r\n### Status-quo\r\n* Fixed `TARGET_COMMITTEE_SIZE`\r\n* A `MAX_SHARDS := 2**10` as the upper bound of shard count.\r\n* A phase 1 `INITIAL_ACTIVE_SHARDS := 2**6` as the initial number of shards. \r\n* A stub function  [`get_active_shard_count`](https://github.com/ethereum/eth2.0-specs/blob/43f5da18a4f2c9e7acd6b9cc7316570822862f87/specs/phase1/beacon-chain.md#get_active_shard_count) that returns `INITIAL_ACTIVE_SHARDS`.\r\n\r\n### TBD\r\n\r\n#### 1. Dynamic shard count or fixed shard count (only update by hard forks)\r\n\r\n- **Potential criteria for automatic dynamically upsizing**:\r\n    1. If there are `N` active validators for `E` epochs, increase shard count to `N // (SLOTS_PER_EPOCH * TARGET_COMMITTEE_SIZE)`.\r\n    2. If reaching (1), and the average *gasprice* is higher than `P`, increase shard count.\r\n- **Fixed shard count**:\r\n    - Only increase the shard count with hard forks. (with community consensus)\r\n    - We donâ€™t need the stub size `MAX_SHARDS` in the spec.\r\n\r\n#### 2. Do we downsize shard count if a large number of validators become inactive?\r\n*If* we go with dynamic shard count, it's also possible to \"*freeze*\" the shards with the lowest gasprice when we have a low validator participants rate.\r\n\r\n- **Recap**: since the `TARGET_COMMITTEE_SIZE` is fixed now, lacking enough validators results in infrequent crosslinking for all shards.\r\n- **Pros of downsizing**: The apocalypse-like networking situation that has 0 crosslinking for a long time, downsizing may be helpful to reduce traffics.\r\n- **Cons of downsizing**: complexities, unfair to the less active shards.\r\n\r\n#### 3. Initial shard count\r\n- We currently set `64` initial shards.\r\n- **Capacity research**: need more networking simulations and testnets benchmarking results to evaluate the capacity.\r\n- **Market demand research**: perhaps there is no strong demand of 64 shards initially.\r\n\r\n---\r\n\r\nI personally hope to make it simple (i.e., fixed shard count only increase shard count with hard forks), but also hope to hear more ideas. ðŸ™‚ \r\n\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/685194063",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2033#issuecomment-685194063",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033",
    "id": 685194063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTE5NDA2Mw==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T23:56:33Z",
    "updated_at": "2020-09-01T23:56:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another con for downsizing is application level complexity. Dapps will know when and how to migrate",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/685194063/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/685256946",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2033#issuecomment-685256946",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033",
    "id": 685256946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTI1Njk0Ng==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T02:57:23Z",
    "updated_at": "2020-09-02T02:57:23Z",
    "author_association": "MEMBER",
    "body": "> I personally hope to make it simple (i.e., fixed shard count only increase shard count with hard forks)\r\n\r\nyeah, I'd prefer this as well",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/685256946/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688675620",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2033#issuecomment-688675620",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2033",
    "id": 688675620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODY3NTYyMA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T07:26:54Z",
    "updated_at": "2020-09-08T07:26:54Z",
    "author_association": "MEMBER",
    "body": "Regardless of what path we take, I do think that there are things we can do to make phase 1 more friendly to changing shard count. Particularly, currently we compute the start shards of historical epochs by starting from `state.current_epoch_start_shard` and then walking backwards through each epoch, modular-subtracting the number of shards processed in that epoch. But this becomes much more unwieldy when the modulus that we are wrapping around changes.\r\n\r\nSo I propose instead, we store a variable `state.total_committees_processed`, which basically does the same thing as `state.current_epoch_start_shard` except without the modulo. That is, at the end of each epoch, set `state.total_committees_processed += num_committees_in_this_epoch)`, and then we would get epoch start shard for any epoch by starting with that variable, subtracting the committee counts between the desired epoch and the present one, and taking the resulting variable modulo whatever the shard count is at that time.\r\n\r\nThis lets us modify shard counts nearly seamlessly; the only issue is that at a shard count change boundary a shard might occasionally be skipped and have to wait for the next cycle (1-64 slots), which is a small cost in any case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/688675620/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
