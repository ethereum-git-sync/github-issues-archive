{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3231",
  "id": 1558552281,
  "node_id": "I_kwDOCOoGbc5c5Z7Z",
  "number": 3231,
  "title": "Adding a isPartialWithdrawal boolean flag to Withdrawals",
  "user": {
    "login": "samlaf",
    "id": 9342524,
    "node_id": "MDQ6VXNlcjkzNDI1MjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9342524?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samlaf",
    "html_url": "https://github.com/samlaf",
    "followers_url": "https://api.github.com/users/samlaf/followers",
    "following_url": "https://api.github.com/users/samlaf/following{/other_user}",
    "gists_url": "https://api.github.com/users/samlaf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samlaf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samlaf/subscriptions",
    "organizations_url": "https://api.github.com/users/samlaf/orgs",
    "repos_url": "https://api.github.com/users/samlaf/repos",
    "events_url": "https://api.github.com/users/samlaf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samlaf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-26T18:05:33Z",
  "updated_at": "2023-12-26T19:37:31Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Has adding a `isPartialWithdrawal` boolean flag to [Withdrawals](https://github.com/ethereum/consensus-specs/blob/dev/specs/capella/beacon-chain.md#withdrawal) to differentiate partial from full withdrawals ever been suggested?\r\n\r\nSomething like\r\n```\r\nclass Withdrawal(Container):\r\n    index: WithdrawalIndex\r\n    validator_index: ValidatorIndex\r\n    address: ExecutionAddress\r\n    amount: Gwei\r\n    is_partial_withdrawal: Boolean\r\n```\r\n\r\nThis would largely simplify our life at EigenLayer when trying to let operator beacon chain eth be restaked into middlewares, and we want to let validators instantly instantly withdraw their partial withdrawals from the EL contract, whereas full_withdrawals need to wait a certain period of time for unstaking in middlewares to happen before the validator is allowed to withdraw from the EL contract.\r\n\r\nWe can prove that a partial withdrawal is partial by also giving a merkle proof that the validator was still active, but this is a huge proof which requires downloading the full beacon state (many MBs), which is too costly to prove a simple partial withdrawal.\r\n\r\nI apologize if such a discussion has already happened elsewhere... please point me to that place (perhaps ethresear.ch?) is so!",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1406229888",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3231#issuecomment-1406229888",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231",
    "id": 1406229888,
    "node_id": "IC_kwDOCOoGbc5T0V2A",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T09:19:36Z",
    "updated_at": "2023-01-27T09:22:14Z",
    "author_association": "MEMBER",
    "body": "> can prove that a partial withdrawal is partial by also giving a merkle proof that the validator was still active,\r\nrecall there are a spectrum of validator lifecycle states between \"active\" and when a \"full\" withdrawal would take place (e.g. in particular if you had a withdrawal for a validator, you'd want to check `validator.withdrawable_epoch <= epoch`\r\n\r\nanother note: it is quite late in the process of shipping this feature to mainnet and I don't expect anything will change unless there is an explicit security issue discovered\r\n\r\nregarding detecting partial vs full withdrawals, you'd be right 99% if not 100% of the time by simply executing\r\n```python\r\ndef is_partial_withdrawal(amount: Gwei) -> bool:\r\n    return amount < 1_ETH\r\n```\r\n\r\n> whereas full_withdrawals need to wait a certain period of time for unstaking in middlewares to happen before the validator is allowed to withdraw from the EL contract.\r\n\r\ncan you elaborate why you have the different latency constraints here?\r\n\r\nand another question: if you aim to go the proof route in a smart contract and want to do this trustlessly then you'll need a way to get the beacon accumulator inside the EVM -- there is work on EIP-4788 but it isn't the highest priority amongst other work e.g. on EIP-4844 in my estimation -- have you considered how you'd tackle this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1406229888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1406691816",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3231#issuecomment-1406691816",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231",
    "id": 1406691816,
    "node_id": "IC_kwDOCOoGbc5T2Gno",
    "user": {
      "login": "samlaf",
      "id": 9342524,
      "node_id": "MDQ6VXNlcjkzNDI1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9342524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samlaf",
      "html_url": "https://github.com/samlaf",
      "followers_url": "https://api.github.com/users/samlaf/followers",
      "following_url": "https://api.github.com/users/samlaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/samlaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samlaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samlaf/subscriptions",
      "organizations_url": "https://api.github.com/users/samlaf/orgs",
      "repos_url": "https://api.github.com/users/samlaf/repos",
      "events_url": "https://api.github.com/users/samlaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samlaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T15:56:39Z",
    "updated_at": "2023-01-27T15:56:39Z",
    "author_association": "NONE",
    "body": "Your `is_partial_withdrawal` is pretty much what we're doing at this point, but the very first partial withdrawal will be a major exception, with validators currently having on average an extra 2 ETH which will be partially withdrawn at the shapella fork. There's also a weird case where a full withdrawal can disguise as a partial withdrawal: if a validator gets slashed and is about to get ejected, he might as well try to get slashed down to `< 1_ETH` (I know this is not that easy to do though), in which case he'll be able to withdraw his ETH as a partial withdrawal (can't say more right now as to why that is a problem in our architecture, but it is). And the reverse could also cause some UX frictions for us: having a partial withdrawal be disguised as a full withdrawal (mostly through user making a mistake in his interaction with the smart contract).\r\n\r\n> can you elaborate why you have the different latency constraints here?\r\n\r\nBasically for the very same reason that beacon chain validators need to wait ~27 hours before they can withdraw after exiting: need to give time in case the validator did something wrong and should get slashed.\r\n\r\n> and another question: if you aim to go the proof route in a smart contract and want to do this trustlessly then you'll need a way to get the beacon accumulator inside the EVM -- there is work on EIP-4788 but it isn't the highest priority amongst other work e.g. on EIP-4844 in my estimation -- have you considered how you'd tackle this?\r\n\r\nWe don't have any way other than to bring the beacon state root to the EL trustedly via a multi-sig oracle, very similar to what Lido and Rocketpool are doing. Difference is that they bring aggregated information (sum of the balance of all their validators) whereas we only need the beacon state root, so we'll be ready to swap whenever EIP-4788 is released.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1406691816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1407350454",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3231#issuecomment-1407350454",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231",
    "id": 1407350454,
    "node_id": "IC_kwDOCOoGbc5T4na2",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-28T09:17:07Z",
    "updated_at": "2023-01-28T09:17:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could delay partial withdrawals the same time as full withdrawals; not the best UX but not terrible if people are signing up to your system and know the risks.\r\n\r\nAlternatively you could provide a proof generator for the validator state.  If this had an external API then your users could either run their own proof generator if they wanted the extra confidence that they could generate the proofs, or use one of a few public ones if the wanted the convenience of not requiring downloads of the beacon state.  Although it seems that if someone wants to be leveraging their stake then having access to their own beacon node wouldn't be an unreasonable ask.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1407350454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1412875173",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3231#issuecomment-1412875173",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3231",
    "id": 1412875173,
    "node_id": "IC_kwDOCOoGbc5UNsOl",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T23:08:38Z",
    "updated_at": "2023-02-01T23:08:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "One particularly fun part of partial withdrawals, they can be arbitrarily large... Some validators have done double deposits so they may get in excess of 32 ETH back on the first 'partial' withdrawal...\r\n\r\nIf you were able to also get the validator status for each validator, then you'd be able to determine if it's exited vs. withdrawn, and you'd be able to tell if they're off boarding, which seems like the context you're looking for.\r\n\r\nOnce funds are actually released by the beacon-chain, I'm not sure downstream needs to wait further time. If they get to a point where they've had funds moved, they've passed the validations and should be free to access their funds, so I'm not sure if further checks need to be done further down, there's no 'claw-back' kind of mechanism...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1412875173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
