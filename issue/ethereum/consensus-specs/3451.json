{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3451",
  "id": 1805016495,
  "node_id": "I_kwDOCOoGbc5rll2v",
  "number": 3451,
  "title": "Stable attestation subnet subscriptions, note for fork transition clarification",
  "user": {
    "login": "zilm13",
    "id": 6196452,
    "node_id": "MDQ6VXNlcjYxOTY0NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zilm13",
    "html_url": "https://github.com/zilm13",
    "followers_url": "https://api.github.com/users/zilm13/followers",
    "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
    "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
    "organizations_url": "https://api.github.com/users/zilm13/orgs",
    "repos_url": "https://api.github.com/users/zilm13/repos",
    "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zilm13/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-07-14T14:51:46Z",
  "updated_at": "2023-08-01T14:24:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We have this note currently:\r\nhttps://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/p2p-interface.md#attestation-subnet-subscription\r\n\r\n---\r\n\r\nNote: When preparing for a hard fork, a node must select and subscribe to subnets of the future fork versioning at least EPOCHS_PER_SUBNET_SUBSCRIPTION epochs in advance of the fork. These new subnets for the fork are maintained in addition to those for the current fork until the fork occurs. After the fork occurs, let the subnets from the previous fork reach the end of life with no replacements.\r\n\r\n---\r\n\r\nI have some doubts we need to do this in advance of 256 epochs before the fork:\r\n- node subnets will be changed in 256 epochs with 100% guarantee\r\n- we usually do it in like 2 epochs before the fork, for example, for sync committee subnets (though I've not found any constant for this in the spec)\r\n\r\nMaybe `EPOCHS_PER_SUBNET_SUBSCRIPTION` is not related to an advance meaning that we should subscribe as usual for `EPOCHS_PER_SUBNET_SUBSCRIPTION`  and do it in advance before the fork, but it's not clear with the current text. Maybe polish it a little? I'd just remove `at least EPOCHS_PER_SUBNET_SUBSCRIPTION epochs` part.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1658977674",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3451#issuecomment-1658977674",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451",
    "id": 1658977674,
    "node_id": "IC_kwDOCOoGbc5i4f2K",
    "user": {
      "login": "ppopth",
      "id": 631508,
      "node_id": "MDQ6VXNlcjYzMTUwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/631508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppopth",
      "html_url": "https://github.com/ppopth",
      "followers_url": "https://api.github.com/users/ppopth/followers",
      "following_url": "https://api.github.com/users/ppopth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppopth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppopth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppopth/subscriptions",
      "organizations_url": "https://api.github.com/users/ppopth/orgs",
      "repos_url": "https://api.github.com/users/ppopth/repos",
      "events_url": "https://api.github.com/users/ppopth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppopth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T19:05:37Z",
    "updated_at": "2023-07-31T19:05:37Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand the question correctly.\r\n\r\n> we usually do it in like 2 epochs before the fork, for example, for sync committee subnets (though I've not found any constant for this in the spec)\r\n\r\nThere is no reason to do it only 2 epochs before the hark fork. 2 epochs is equal to only 12 minutes. The reason that we do it at least 256 epochs in advance because we want to ensure that the subnet backbones are stable enough.\r\n\r\n> Maybe `EPOCHS_PER_SUBNET_SUBSCRIPTION` is not related to an advance meaning that we should subscribe as usual for `EPOCHS_PER_SUBNET_SUBSCRIPTION` and do it in advance before the fork, but it's not clear with the current text. Maybe polish it a little? I'd just remove `at least EPOCHS_PER_SUBNET_SUBSCRIPTION epochs` part.\r\n\r\nIt's not directly related, but we should specify the time the nodes should be subscribed to the subnets before the hard fork in advance, so we just thought reusing that constant makes sense.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1658977674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1660181316",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3451#issuecomment-1660181316",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451",
    "id": 1660181316,
    "node_id": "IC_kwDOCOoGbc5i9FtE",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T12:08:13Z",
    "updated_at": "2023-08-01T13:59:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ppopth \r\nFrom my understanding:\r\n1. Compute subnet method is pretty deterministic with input of `nodeId` and `epoch` (no fork digest or whatever), stable backbone subscriptions lasts `EPOCHS_PER_SUBNET_SUBSCRIPTION` (256 epochs).\r\n2. Once we drop stable subnet subscription ids from ENR, the only way to find appropriate peers for this subnet is using compute formula which for every `nodeId` provides subnet that lasts only `EPOCHS_PER_SUBNET_SUBSCRIPTION`, so if we do some subnet subscription in any advance (even 1 epoch), noone will be able to find us there.\r\n3. On fork topic subscriptions are changed, topics method use fork digest for calculation which is changed on fork. Subnets are the same. So in advance we start to publish and listen messages on new fork topics, we don't need to do it for a lot of epochs as old attestations become irrelevant, 2 epochs are enough.\r\n\r\nSo current text in spec looks confusing for me. I've suggested the edit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1660181316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1660438196",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3451#issuecomment-1660438196",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3451",
    "id": 1660438196,
    "node_id": "IC_kwDOCOoGbc5i-Ea0",
    "user": {
      "login": "ppopth",
      "id": 631508,
      "node_id": "MDQ6VXNlcjYzMTUwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/631508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppopth",
      "html_url": "https://github.com/ppopth",
      "followers_url": "https://api.github.com/users/ppopth/followers",
      "following_url": "https://api.github.com/users/ppopth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppopth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppopth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppopth/subscriptions",
      "organizations_url": "https://api.github.com/users/ppopth/orgs",
      "repos_url": "https://api.github.com/users/ppopth/repos",
      "events_url": "https://api.github.com/users/ppopth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppopth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T14:24:52Z",
    "updated_at": "2023-08-01T14:24:52Z",
    "author_association": "MEMBER",
    "body": "> so if we do some subnet subscription in any advance (even 1 epoch), noone will be able to find us there.\r\n\r\nI don't understand. Why won't no one be able to find us?\r\n\r\n> we don't need to do it for a lot of epochs as old attestations become irrelevant, 2 epochs are enough.\r\n\r\nI don't understand this as well. Why are the new topics related to the old attestations? and how is it related to 2 epochs? The reason that it's 256 epochs is that we would have enough time for the nodes to form the mesh of the new topics.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1660438196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
