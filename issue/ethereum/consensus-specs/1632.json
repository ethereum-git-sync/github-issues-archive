{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1632",
  "id": 571999908,
  "node_id": "MDU6SXNzdWU1NzE5OTk5MDg=",
  "number": 1632,
  "title": "Safety leak through Eth1 voting",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1725628406,
      "node_id": "MDU6TGFiZWwxNzI1NjI4NDA2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase0",
      "name": "phase0",
      "color": "c2e0c6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-02-27T11:09:37Z",
  "updated_at": "2023-10-24T15:10:43Z",
  "closed_at": "2023-10-24T13:18:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Issue\r\nThis issue is based on assumption that beacon chain safety tolerates `f < n/2` failures. As adversary that owns a half of total stake is able to split the network. And when liveness of both partitions will be recovered by inactivity leak conflicting checkpoints will start to get finalized.\r\n\r\nAssuming that all validators have equal effective balance and there are up to `4M` ETH at stake and adversary's validators hold `47%` of it. There is an attack that violates beacon chain safety by exploiting the bridge. \r\n\r\nGiven current voting parameters the probability of adversary to get a majority of voting power and finalize alternative Eth1 block and deposit root is `0.025`. Which is about once a week. After malicious deposit root is finalized adversary will be able to add `1024*0.47*32*16 = 246415` ETH that has not been deposited via Eth1 chain contract. It would give him a `50%` of total stake by the end of attack.\r\n\r\n## Mitigation\r\nThe easiest way to mitigate this issue is to set a `WINNER_THRESHOLD = 3/5` for Eth1 voting. This change sacrifices a portion of liveness in favour of safety. And makes Eth1 voting safety and liveness boundaries _near_ the same as beacon chain has.\r\n\r\nTable below matches beacon chain safety and liveness thresholds with the corresponding chance to violate safety and liveness of Eth1 voting mechanism. It's been evaluated with binomial distribution.\r\n|Adversary power|Safety violation|Liveness violation|\r\n|-:|-:|-:|\r\n|1/3|6.33*10<sup>-68</sup>|<b>4.16*10<sup>-6</sup></b>|\r\n|1/2|<b>9.81*10<sup>-11</sup></b>|1.0|\r\n\r\nA drawback of this solution is that these probabilities are tightly coupled with winner threshold and slots per voting period. And, for instance, winner threshold would need to be re-adjusted if number of slots in a voting period was changed.\r\n\r\n## Alternative solution\r\nSwitching Eth1 voting power from validator count to validators' effective balance would tightly couple Eth1 voting properties to those that beacon chain has. And in that case we could assume that Eth1 voting safety is preserved until beacon chain stays. \r\n\r\nThe main issue with applying this change to proposers voting is that voting balance will be spread across a number of epochs (currently `32`) which increases implementation complexity and doesn't have a desirable effect in the end.",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/600627868",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-600627868",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 600627868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDYyNzg2OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-18T13:39:29Z",
    "updated_at": "2020-03-18T13:39:29Z",
    "author_association": "MEMBER",
    "body": "Another option here is to offload some of this to the attesters. If we add a rule they they only vote for BeaconBlocks that have an eth1data that is a descendant of the current BeaconState eth1data, then we tighten up this bound by disallowing an invalid eth1data from becoming finalized by an honestly voting 2/3",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/600627868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/601073406",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-601073406",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 601073406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTA3MzQwNg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T09:20:06Z",
    "updated_at": "2020-03-19T09:20:06Z",
    "author_association": "MEMBER",
    "body": "I like that!\r\n\r\n> eth1data that is a descendant of the current BeaconState eth1data\r\n\r\nWhat if attesters merely check that the block referred by `eth1data` is included into the canonical chain? With the status quo distance it should be safe enough unless Eth1 is broken.\r\n\r\nIn your opinion, should it affect rewards calculation anyhow?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/601073406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705246097",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-705246097",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 705246097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTI0NjA5Nw==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-07T23:30:06Z",
    "updated_at": "2020-10-07T23:30:06Z",
    "author_association": "MEMBER",
    "body": "I'd actually like to remark that the honesty assumption is 2/3, so assuming a 47% attacker is actually going quite far beyond that. I would have the impression that a 47% attacker would already have quite substantial other attack vectors at their disposal.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705246097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705393019",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-705393019",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 705393019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM5MzAxOQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T07:43:00Z",
    "updated_at": "2020-10-08T07:43:00Z",
    "author_association": "MEMBER",
    "body": "> I would have the impression that a 47% attacker would already have quite substantial other attack vectors at their disposal.\r\n\r\nAgreed, this is why the issue has the following remark at the beginning:\r\n\r\n> This issue is based on assumption that beacon chain safety tolerates `f < n/2` failures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705393019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705393806",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-705393806",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 705393806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM5MzgwNg==",
    "user": {
      "login": "unixpi",
      "id": 5483559,
      "node_id": "MDQ6VXNlcjU0ODM1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5483559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unixpi",
      "html_url": "https://github.com/unixpi",
      "followers_url": "https://api.github.com/users/unixpi/followers",
      "following_url": "https://api.github.com/users/unixpi/following{/other_user}",
      "gists_url": "https://api.github.com/users/unixpi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unixpi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unixpi/subscriptions",
      "organizations_url": "https://api.github.com/users/unixpi/orgs",
      "repos_url": "https://api.github.com/users/unixpi/repos",
      "events_url": "https://api.github.com/users/unixpi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unixpi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T07:44:44Z",
    "updated_at": "2020-10-09T08:03:46Z",
    "author_association": "MEMBER",
    "body": "> I'd actually like to remark that the honesty assumption is 2/3, so assuming a 47% attacker is actually going quite far beyond that. I would have the impression that a 47% attacker would already have quite substantial other attack vectors at their disposal.\r\n\r\nare there any other scenarios in which a ≈45% attacker can force through an invalid chain? or force through an invalid chain without the risk of being slashed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/705393806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1777189877",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-1777189877",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 1777189877,
    "node_id": "IC_kwDOCOoGbc5p7cP1",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-24T13:18:39Z",
    "updated_at": "2023-10-24T13:18:39Z",
    "author_association": "MEMBER",
    "body": "closing via [EIP-6110](https://eips.ethereum.org/EIPS/eip-6110). We can shift the discussion to EIP-6110 discussions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1777189877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1777447899",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1632#issuecomment-1777447899",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1632",
    "id": 1777447899,
    "node_id": "IC_kwDOCOoGbc5p8bPb",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-24T15:10:43Z",
    "updated_at": "2023-10-24T15:10:43Z",
    "author_association": "MEMBER",
    "body": "I was going to close this one when EIP-6110 is scheduled for the Mainnet 😄 But not opposed to do it now as formally it can be considered as resolved by the EIP",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1777447899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
