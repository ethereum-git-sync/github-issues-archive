{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/610",
  "id": 409166985,
  "node_id": "MDU6SXNzdWU0MDkxNjY5ODU=",
  "number": 610,
  "title": "Confusion surrounding `winning_root`",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1065467474,
      "node_id": "MDU6TGFiZWwxMDY1NDY3NDc0",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:proofread",
      "name": "general:proofread",
      "color": "81dd5f",
      "default": false,
      "description": "spelling, grammar, accuracy"
    },
    {
      "id": 1244734333,
      "node_id": "MDU6TGFiZWwxMjQ0NzM0MzMz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:presentation",
      "name": "general:presentation",
      "color": "2EA9DF",
      "default": false,
      "description": "Presentation (as opposed to content)"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-02-12T08:00:30Z",
  "updated_at": "2019-03-12T12:04:08Z",
  "closed_at": "2019-03-12T12:04:08Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I found it quite difficult to discern what the `winning_root` function is.\r\n\r\nMy initial confusion arose from the following:\r\n\r\n- It seems that `winning_root` takes `crosslink_committee` because it passes it to `attesting_validator_indices(...)`, however that function does not use it. \r\n- `winning_root(...)` takes `crosslink_committee` as an argument. When `winning_root` is called, it is passed `List[ValidatorIndex]` as the `crosslink_committee`. It was unclear to me where `shard` comes from.\r\n\r\nI came to the conclusion that `crosslink_committee` should really be `Tuple[List[ValidatorIndex], ShardNumber]` and that `shard` in `attesting_validator_indices(..)` is actually `crosslink_committee.shard` (See #609).\r\n\r\nThen, I just made a leap and figured that you're probably looking to pick the shard roots that have the most ETH voted for them.\r\n\r\nAs such, if you wanted to get the `winning_root` for some `shard`, you:\r\n\r\n- Let `attestations` be `current_epoch_attestations + previous_epoch_attestations`.\r\n- Let `shard_balances` be a map of `shard_block_root -> attesting_balance`.\r\n- For each `attestation` in `attestations` if `attestation.shard == shard`:\r\n   - Let `attesting_indices` be `get_attestation_participants(state, a.data, a.aggregation_bitfield)`.\r\n   - Let `attesting_balance` be `get_total_balance(state, attesting_indices)`\r\n   - Do `shard_balances[shard_block_root] += attesting_balance`.\r\n- Let `winning_root` be the `shard_block_root` with the highest `attesting_balance` (ties are broken by favoring lower `shard_block_root` values).\r\n\r\n## Summary\r\n\r\n- I found the definition of `winning_root` to be confusing.\r\n- Can you please confirm my understanding of the intention of the function is correct?",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/462681666",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-462681666",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 462681666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjY4MTY2Ng==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T09:22:02Z",
    "updated_at": "2019-02-12T13:41:31Z",
    "author_association": "MEMBER",
    "body": "> I found the definition of `winning_root` to be confusing.\r\n\r\nAgreed. It's still hard to digest and may be too abstract.\r\n\r\n> Can you please confirm my understanding of the intention of the function is correct?\r\n\r\nHere is our implementation. It turns out to be less functional programming than the spec:\r\n1. https://github.com/ethereum/trinity/blob/2058916a589aa7854778d7dca331bfa292c2581a/eth2/beacon/state_machines/forks/serenity/epoch_processing.py#L93\r\n2. https://github.com/ethereum/trinity/blob/2058916a589aa7854778d7dca331bfa292c2581a/eth2/beacon/epoch_processing_helpers.py#L124-L163\r\n\r\n1. Just to make it clear, in your approach:\r\n    > * Do `shard_balances[shard_block_root] += attesting_balance`.\r\n\r\n    It's \"Do `shard_balances[a.data.shard_block_root] += attesting_balance`.\", right?\r\n2. I think although there are some differences between our implementation and your approach, the result should be the same:\r\n    1. We iterate `set([a.data.shard_block_root for a in attestations if a.data.shard == shard])`, not `shard`, because:\r\n        - the spec uses notation `attesting_validator_indices(crosslink_committee, shard_block_root) ...`.\r\n        - then we don't have the temporary map `shard_balances[shard_block_root] -> attesting_balance` in our implementation, instead, we use `(winning_root, winning_root_balance)` that stores the temporary winner during the iterations.\r\n    2. We defined `get_total_attesting_balance` as a function that takes `state`, `shard`, and `attestations` of the given `shard` as the parameters.\r\n    3. Note that it's possible that there's no winning root: https://github.com/ethereum/eth2.0-specs/issues/541\r\n\r\n/cc @NIC619, please correct me if I'm wrong.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/462681666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/462760352",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-462760352",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 462760352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjc2MDM1Mg==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T13:33:00Z",
    "updated_at": "2019-02-12T13:33:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed with Paul, I've brought up whether it's a good idea to use python code for `winning_root` but got pushed back\r\n\r\nHere is our implementation: \r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/core/epoch/epoch_operations.go#L309\r\nand it's used here:\r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/core/epoch/epoch_processing.go#L191\r\n\r\nHope that helps!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/462760352/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/463374351",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-463374351",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 463374351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzM3NDM1MQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T21:15:18Z",
    "updated_at": "2019-02-13T21:15:38Z",
    "author_association": "MEMBER",
    "body": "Thanks for the feedback @hwwhww!\r\n\r\n>     3. Just to make it clear, in your approach:\r\n>        > * Do `shard_balances[shard_block_root] += attesting_balance`.\r\n>        \r\n>        \r\n>        It's \"Do `shard_balances[a.data.shard_block_root] += attesting_balance`.\", right?\r\n\r\nCorrect!\r\n\r\n> Agreed with Paul, I've brought up whether it's a good idea to use python code for `winning_root` but got pushed back\r\n\r\nAfter looking at the Python code I agree with @terenc3t's proposal for a Python definition of `winning_root`.\r\n\r\nEDIT: I am satisfied here, feel free to close if you wish.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/463374351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465367507",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-465367507",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 465367507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NzUwNw==",
    "user": {
      "login": "cemozerr",
      "id": 16581242,
      "node_id": "MDQ6VXNlcjE2NTgxMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16581242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cemozerr",
      "html_url": "https://github.com/cemozerr",
      "followers_url": "https://api.github.com/users/cemozerr/followers",
      "following_url": "https://api.github.com/users/cemozerr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cemozerr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cemozerr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cemozerr/subscriptions",
      "organizations_url": "https://api.github.com/users/cemozerr/orgs",
      "repos_url": "https://api.github.com/users/cemozerr/repos",
      "events_url": "https://api.github.com/users/cemozerr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cemozerr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:24:43Z",
    "updated_at": "2019-02-20T00:24:50Z",
    "author_association": "NONE",
    "body": "> * Let `winning_root` be the `shard_block_root` with the highest `attesting_balance` (ties are broken by favoring lower `shard_block_root` values).\r\n\r\nAre we interpreting the `shard_block_root` in Little Endian byte order in this case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465367507/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465473015",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-465473015",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 465473015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ3MzAxNQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T08:23:44Z",
    "updated_at": "2019-02-20T08:23:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cemozerr I think we would in this case, at least referencing this comment https://github.com/ethereum/eth2.0-specs/issues/556#issuecomment-461512041 . The only thing that is explicity big-endian would be the bls spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465473015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465647506",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-465647506",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 465647506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY0NzUwNg==",
    "user": {
      "login": "cemozerr",
      "id": 16581242,
      "node_id": "MDQ6VXNlcjE2NTgxMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16581242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cemozerr",
      "html_url": "https://github.com/cemozerr",
      "followers_url": "https://api.github.com/users/cemozerr/followers",
      "following_url": "https://api.github.com/users/cemozerr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cemozerr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cemozerr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cemozerr/subscriptions",
      "organizations_url": "https://api.github.com/users/cemozerr/orgs",
      "repos_url": "https://api.github.com/users/cemozerr/repos",
      "events_url": "https://api.github.com/users/cemozerr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cemozerr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T16:18:56Z",
    "updated_at": "2019-02-20T16:18:56Z",
    "author_association": "NONE",
    "body": "Thank you @nisdas!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465647506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/468065890",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-468065890",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 468065890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODA2NTg5MA==",
    "user": {
      "login": "GregTheGreek",
      "id": 16929357,
      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16929357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GregTheGreek",
      "html_url": "https://github.com/GregTheGreek",
      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T23:01:37Z",
    "updated_at": "2019-02-27T23:01:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "My biggest confusion is around the idea that `winning_root()` is an internal function, but its used under the `crosslinks` section (below `eth1data`). I can't seem to understand why its within the assumed loop ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/468065890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/470118472",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/610#issuecomment-470118472",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/610",
    "id": 470118472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDExODQ3Mg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-06T14:03:14Z",
    "updated_at": "2019-03-06T14:03:14Z",
    "author_association": "MEMBER",
    "body": "This is addressed in PR #711 :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/470118472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
