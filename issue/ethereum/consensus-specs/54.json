{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/54",
  "id": 367257177,
  "node_id": "MDU6SXNzdWUzNjcyNTcxNzc=",
  "number": 54,
  "title": "Tree hash functions for SSZ",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-10-05T15:19:47Z",
  "updated_at": "2018-11-15T22:54:03Z",
  "closed_at": "2018-11-15T22:54:03Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The following is a general-purpose strategy for making all data structures in the beacon chain more light client friendly. When (i) hashing the beacon chain active state, (ii) hashing the beacon chain crystallized state, or (iii) hashing beacon chain blocks, we instead use the following hash function specific to SSZ objects, where `hash(x)` is some underlying hash function with a 32-byte output (eg. `blake(x)[0:32]`)\r\n\r\n```python\r\ndef hash_ssz_object(obj):\r\n    if isinstance(obj, list):\r\n        objhashes = [hash_ssz_object(o) for o in obj]\r\n        return merkle_root(objhashes)\r\n    elif not isinstance(obj, SSZObject):\r\n        return hash(obj)\r\n    else:\r\n        o = b''\r\n        for f in obj.fields:\r\n            val = getattr(obj, f)\r\n            o += hash_ssz_object(val)\r\n        return hash(o)    \r\n```\r\n\r\nWhere `merkle_root` is defined as follows:\r\n\r\n```python\r\ndef merkle_root(objs):\r\n    min_pow_of_2 = 1\r\n    while min_pow_of_2 <= len(objs):\r\n        min_pow_of_2 *= 2\r\n    o = [0] * min_pow_of_2 + [len(objs).to_bytes(32, 'big')] + objs + [b'\\x00'*32] * (min_pow_of_2 - len(objs))\r\n    for i in range(min_pow_of_2 - 1, 0, -1):\r\n        o[i] = hash(o[i*2] + o[i*2+1])\r\n    return o[1]\r\n```\r\n\r\nCollision resistance is only guaranteed between objects of the same type, not objects of different types.\r\n\r\n#### Efficiency\r\n\r\nFundamentally, Merkle-hashing instead of regular hashing doubles the amount of data hashes, but because hash functions have fixed costs the overhead is higher. Here are some simulation results, using 111-byte objects for accounts because this is currently roughly the size of a beacon chain ValidatorRecord object:\r\n\r\n```python\r\n>>> import blake2b\r\n>>> def hash(x): blake2b(x).digest()[:32]\r\n>>> import time\r\n>>> accounts = [b'\\x35' * 111 for _ in range (1000000)]\r\n>>> a = time.time(); x = hash(b''.join(accounts)); print(time.time() - a)\r\n0.42771387100219727\r\n>>> a = time.time(); x = merkle_root(accounts); print(time.time() - a)\r\n1.2481215000152588\r\n```",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/428978049",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-428978049",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 428978049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk3ODA0OQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T14:32:10Z",
    "updated_at": "2018-10-11T15:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Very minor, but I suspect `return hash(p)` should be `return hash(o)`.\r\n\r\nUpdate: I was expecting `hash_ssz_object` to return a byte array (hash digest) but I'm getting an array with a mix of ints and byte arrays. Should I be expecting to see a hash digest?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/428978049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/429058339",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-429058339",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 429058339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA1ODMzOQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T18:00:51Z",
    "updated_at": "2018-10-11T18:00:51Z",
    "author_association": "MEMBER",
    "body": "Fixed both! Merkle root accidentally returned the entire tree.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/429058339/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/435348622",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-435348622",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 435348622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTM0ODYyMg==",
    "user": {
      "login": "sorpaas",
      "id": 6277322,
      "node_id": "MDQ6VXNlcjYyNzczMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6277322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sorpaas",
      "html_url": "https://github.com/sorpaas",
      "followers_url": "https://api.github.com/users/sorpaas/followers",
      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
      "repos_url": "https://api.github.com/users/sorpaas/repos",
      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T11:22:34Z",
    "updated_at": "2018-11-02T11:30:33Z",
    "author_association": "NONE",
    "body": "In `hash_ssz_object`, for structs, it looks like we hash each fields individually, combine them, and then hash again. Are there any reasons why we need those many hashes (which I don't see how they can be used for light clients, as they're not part of merkle trie)? If we combine fields first, it would save many hash rounds.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/435348622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/436315622",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-436315622",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 436315622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjMxNTYyMg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T16:26:38Z",
    "updated_at": "2018-11-06T16:26:38Z",
    "author_association": "MEMBER",
    "body": "@vbuterin I'd like to get this merged soon and reduce state to one state root.\r\n\r\nI believe @sorpaas is correct. I don't see the need to hash the SSZ base types in the following line\r\n\r\n```python\r\n    elif not isinstance(obj, SSZObject):\r\n        return hash(obj)\r\n```\r\n\r\nWe can just return the raw obj data here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/436315622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/437322729",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-437322729",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 437322729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzMyMjcyOQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T10:47:48Z",
    "updated_at": "2018-11-09T10:47:48Z",
    "author_association": "MEMBER",
    "body": "Did an evaluation in Java.\r\nThere is a room for tiny improvement which addresses very rare case (when `min_pow_of_2 == len(objs)`, original lines are commented out):\r\n```python\r\ndef merkle_root(objs):\r\n    min_pow_of_2 = 1\r\n    # while min_pow_of_2 <= len(objs):\r\n    while min_pow_of_2 < len(objs):\r\n        min_pow_of_2 *= 2\r\n    # o = [0] * min_pow_of_2 + [len(objs).to_bytes(32, 'big')] + objs + [b'\\x00'*32] * (min_pow_of_2 - len(objs))\r\n    o = [len(objs).to_bytes(32, 'big')] + [0] * (min_pow_of_2 - 1) + objs + [b'\\x00'*32] * (min_pow_of_2 - len(objs))\r\n    for i in range(min_pow_of_2 - 1, 0, -1):\r\n        o[i] = hash(o[i*2] + o[i*2+1])\r\n    # return o[1]\r\n    return o[0] \r\n```\r\nBut original algorithm with @sorpaas's correction looks good to me either.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/437322729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/437374804",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/54#issuecomment-437374804",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/54",
    "id": 437374804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM3NDgwNA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T14:26:11Z",
    "updated_at": "2018-11-09T14:26:11Z",
    "author_association": "MEMBER",
    "body": "I made a modified algorithm that has some efficiency improvements:\r\n\r\nhttps://github.com/ethereum/eth2.0-specs/pull/120",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/437374804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
