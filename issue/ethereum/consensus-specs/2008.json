{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2008",
  "id": 672047210,
  "node_id": "MDU6SXNzdWU2NzIwNDcyMTA=",
  "number": 2008,
  "title": "Remove libp2p identify protocol",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 1393665613,
      "node_id": "MDU6TGFiZWwxMzkzNjY1NjEz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:libp2p",
      "name": "scope:libp2p",
      "color": "CA7A2C",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/6",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6/labels",
    "id": 5797403,
    "node_id": "MDk6TWlsZXN0b25lNTc5NzQwMw==",
    "number": 6,
    "title": "ðŸ”µ v1.0.0 candidates",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 10,
    "closed_issues": 7,
    "state": "closed",
    "created_at": "2020-08-21T16:23:12Z",
    "updated_at": "2023-12-11T13:23:01Z",
    "due_on": null,
    "closed_at": "2021-05-04T14:59:24Z"
  },
  "comments": 10,
  "created_at": "2020-08-03T12:39:12Z",
  "updated_at": "2023-12-13T02:34:03Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "From what I understand, we no explicit use for the [libp2p `identify` protocol](https://github.com/libp2p/specs/tree/master/identify), but implementations generally have this running by default. We've talked about explicitly removing it in the past to avoid clients generally just leaking their client type (libp2p language pretty easily mapping to client type).\r\n\r\nI suggest we add a `SHOULD NOT` support `identify` to our p2p spec\r\n\r\nAdditionally, I was told `identify` can serve as a dos vector. Looking for more info on this",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669250920",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-669250920",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 669250920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTI1MDkyMA==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T15:11:40Z",
    "updated_at": "2020-08-05T15:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "`identify` is still useful for preemptively determining a peer's supported protocols and receiving a SignedPeerRecord, which can be used as an additional form of discovery using gossipsubv1.1 peer exchange.\r\n\r\nSince the agentVersion field is optional, maybe the language can be specific to that field. Eg something along the lines of: Clients `SHOULD NOT` send an `agentField` if they support `identify`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669250920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669428879",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-669428879",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 669428879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTQyODg3OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T19:21:02Z",
    "updated_at": "2020-08-05T19:21:02Z",
    "author_association": "MEMBER",
    "body": "I see.\r\nDo we use the preview of supported protocols in implementations today?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669428879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669485053",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-669485053",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 669485053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTQ4NTA1Mw==",
    "user": {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T20:26:32Z",
    "updated_at": "2020-08-05T20:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Identify could potentially be a DoS vector as well.  Using @protolambda's rumor tool i can create this script:\r\n\r\n```bash\r\nwhile true; do\r\nhost start\r\nhost listen --ip=127.0.0.1 --tcp=9001\r\npeer connect /ip4/127.0.0.1/tcp/9000/p2p/16Uiu2HAmFNjrc8S1NBGQK2dogYMFNMyD37VrZu8s3J5ZiTKeykAH\r\npeer info 16Uiu2HAmFNjrc8S1NBGQK2dogYMFNMyD37VrZu8s3J5ZiTKeykAH\r\nkill \r\ndone\r\n```\r\nto repeatedly hit an eth2 node with identify requests. \r\n\r\nhere is a screenshot of the output from rumor:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/89460445-e72ad480-d72f-11ea-8f2b-379963bd3259.png)\r\n\r\nand a screenshot of lighthouse:\r\n\r\n![image](https://user-images.githubusercontent.com/5555162/89460486-fc9ffe80-d72f-11ea-9394-dacd51ab6212.png)\r\n\r\n\r\n\r\nPerhaps some rate limit for incoming connections and requests coming from ip's needs to be implemented at the appropriate place in the stack",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/669485053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674111057",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-674111057",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 674111057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDExMTA1Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T14:48:55Z",
    "updated_at": "2020-08-14T14:48:55Z",
    "author_association": "MEMBER",
    "body": "It we keep `identify`, I suppose that we should specify an [agentVersion](https://github.com/libp2p/specs/tree/master/identify#agentversion) to include the client version as well. Maybe `libp2p-agent-name/version/client-name/version`\r\n\r\nIt looks like there isn't currently an application callback on `identify` so this information cannot be leveraged in the actual client. I suspect we could extend the `identify` spec to include a callback if we need to. \r\n\r\nQuestion: do eth1 clients use the `clientId` in the [`Hello`](https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00) protocol for anything?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674111057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674134838",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-674134838",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 674134838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDEzNDgzOA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T15:39:37Z",
    "updated_at": "2020-08-14T15:39:37Z",
    "author_association": "MEMBER",
    "body": "> It looks like there isn't currently an application callback on identify\r\n\r\nThe Go Host API hides the IDService getter, but it's there if you cast an interface to access it. And that can then be used to actively call for identification on a connection, and wait for a response. The default host implementation forces identify to be enabled, and run a check on every dial and stream open. Without an option to disable it (at least without forking all host code, like I did in Rumor). There was a comment somewhere in the default \"basic\"-host implementation about it being faster to have identify run first, than doing negotiation otherwise.\r\n\r\nOnce the identification completes, it sneakily puts the identified info (keys `ProtocolVersion` and `AgentVersion`) into the generic keystore part (`/metadata/<base 32 peer id>/` prefix). The `ProtocolVersion` in go-libp2p is hardcoded as a constant to `ipfs/0.1.0` and warns about breaking IPFS before 2020, and with legacy/todo comments. And while the spec specifies that different major/minor protocol versions are strictly unusable together, I can't find the place where this is enforced on a connection. The agent version seems to be unused.\r\n\r\nIf we go ahead with this, I wouldn't mind to discuss a libp2p-identify update that improves on this situation, to make it user-friendly before enshrining it more.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674134838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/690874707",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-690874707",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 690874707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDg3NDcwNw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-11T05:02:02Z",
    "updated_at": "2020-09-11T05:02:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "We dont use identify for anything other than debugging and identifying clients. \r\n\r\nI had always intended on removing it before mainnet. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/690874707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1847431944",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-1847431944",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 1847431944,
    "node_id": "IC_kwDOCOoGbc5uHZMI",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-08T15:55:10Z",
    "updated_at": "2023-12-08T16:02:29Z",
    "author_association": "COLLABORATOR",
    "body": "AFAIK most clients expose their client name by default via the identify protocol. It's been very helpful to debug bugs while there's no evidence of attacks using it. Should we stick with it for now?\r\n\r\n- This discussion is related to https://github.com/ethereum/consensus-specs/issues/2048 where its conclusion is \"we don't want to attach identify data to the ENR\". To be consistent with that outcome we may want to also drop the identify protocol. There's an argument that exposing identify data on discovery makes certain attacks more scalable, but an attacker can just crawl the network and collect client data via identify.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1847431944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1847565484",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-1847565484",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 1847565484,
    "node_id": "IC_kwDOCOoGbc5uH5ys",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-08T17:29:38Z",
    "updated_at": "2023-12-08T17:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "A compromise we settled on in nimbus given the status quo was to publish only client name (and not version) - this at least prevents crawlers from attacking known-exploitable versions of clients.\r\n\r\nThe information value here is rather low, even for debugging - ie the fact that some particular client forwarded a message only tells a part of the story, and one that is not often that useful outside of showing fancy graphs of client diversity.\r\n\r\nIf it were gone, I wouldn't miss it (and nimbus would remove it) - removing it from only one client obviously makes no sense (which is why we send `nimbus`).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1847565484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1849710968",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-1849710968",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 1849710968,
    "node_id": "IC_kwDOCOoGbc5uQFl4",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T09:57:46Z",
    "updated_at": "2023-12-11T09:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't mind having it report 'teku' as a general rule, but I'd be fairly strongly against enshrining anything that requires versions... \r\nJust having 'nimbus / lighthouse / teku / prysm' is fine imo, but if we wanted to remove it it's only probably a tiny change for us (grafana dashboard has the client breakdown for teku currently)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1849710968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1853172758",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2008#issuecomment-1853172758",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2008",
    "id": 1853172758,
    "node_id": "IC_kwDOCOoGbc5udSwW",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-13T02:34:02Z",
    "updated_at": "2023-12-13T02:34:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I couldn't see it in the specs. I've always assumed it we never required. Lighthouse has a CLI flag to just empty the identify agent string. \r\n\r\nIt's useful to collecting data on peers and doing analysis, which is kind of why we have it on by default. I'm not opposed to removing it, but just figured it has always been optional for each client team. We don't expect other clients to support identify. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1853172758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
