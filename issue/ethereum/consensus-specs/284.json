{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/284",
  "id": 389579932,
  "node_id": "MDU6SXNzdWUzODk1Nzk5MzI=",
  "number": 284,
  "title": "discussion on latest_hash and state_transition function signature",
  "user": {
    "login": "arnetheduck",
    "id": 1382986,
    "node_id": "MDQ6VXNlcjEzODI5ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arnetheduck",
    "html_url": "https://github.com/arnetheduck",
    "followers_url": "https://api.github.com/users/arnetheduck/followers",
    "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
    "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
    "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
    "repos_url": "https://api.github.com/users/arnetheduck/repos",
    "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1137720193,
      "node_id": "MDU6TGFiZWwxMTM3NzIwMTkz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:discussion",
      "name": "general:discussion",
      "color": "F17C67",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2018-12-11T03:20:27Z",
  "updated_at": "2019-01-17T15:54:11Z",
  "closed_at": "2019-01-17T15:54:11Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "https://github.com/ethereum/eth2.0-specs/blob/2facc754ccc9c57191e51e596db9705133520abe/specs/core/0_beacon-chain.md#per-slot-processing\r\n\r\n`latest_hash` is added to `state` before verifying that `latest_block` is sane (has the right slot number etc) - is this the intention?\r\n",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446061669",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446061669",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446061669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjA2MTY2OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T03:41:16Z",
    "updated_at": "2018-12-11T03:48:48Z",
    "author_association": "MEMBER",
    "body": "There is a block hash added to the state per slot. So even if there is not a block in that slot, the latest_hash gets added to state.  The latest_block/hash are previously known before the state transition function.\r\n\r\nThis allows  for a simple 1-to-1 mapping of state to a given hash that can be voted on by attesters. Practically it means -- if I don't see a new block come in for slot S, I vote on whatever the previous block I did see come in. This also ensures that we have a block hash to vote on at every epoch boundary which are ultimately the blocks that are being targeted by the Casper mechanism.\r\n\r\nOne thing that I'm not too happy with is that the state transition function signature is something like `slot_state_transition(prev_state, latest_block, new_block) -> new_state` rather than `slot_state_transitioni(prev_state, new_block) -> new_state` (where `new_block` can be empty in each).\r\nIdeally I'd like for the state transition function just to be a function of `state` and `new_block`, but it seems tough to avoid in this new per-slot transition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446061669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446064058",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446064058",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446064058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjA2NDA1OA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T03:57:05Z",
    "updated_at": "2018-12-11T03:57:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right - looks like I misread the spec, assuming that `latest_block` is the same as `Let block be that associated incoming block.` just below - all clear then! That signature helped clear it up.\r\n\r\nSounds reasonable that it would be nice to avoid, though I'm not yet that far into the spec. What are problem areas?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446064058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446065471",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446065471",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446065471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjA2NTQ3MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T04:07:01Z",
    "updated_at": "2018-12-11T04:07:01Z",
    "author_association": "MEMBER",
    "body": "When we had per-block transition, we would just use the parent_hash from the incoming block and back-fill all the skipped slots. Now that we are doing per-slot transition, we need to know the previously processed block without necessarily having a new block come in.\r\n\r\nFirst impression is to just save the current block being processed into the state rather than always inputing the _previous_. Because `block.state_root` is tree_hash of the post-state root, you can't just naively put the current block into the state. you end up with a circular reference.\r\n\r\nCalling it a night, but curious to hear your thoughts",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446065471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446148012",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446148012",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446148012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjE0ODAxMg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T10:17:34Z",
    "updated_at": "2018-12-11T10:17:34Z",
    "author_association": "MEMBER",
    "body": "What if append `latest_block_hashes` with either `latest_hash` or `block_hash` (depending on whether block from proposer exists) at the end of state transition?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446148012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446241000",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446241000",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446241000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI0MTAwMA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T15:22:56Z",
    "updated_at": "2018-12-11T15:22:56Z",
    "author_association": "MEMBER",
    "body": "This messes with the `block.state_root` representing the actual state.\r\n\r\nIf you do the following, it's essentially the same thing as independently carrying the latest_block because it doesn't get embedded in the blocks state_root and is a local consideration.\r\n* process state transition\r\n* check/set state root\r\n* add block to state",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446241000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446483554",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446483554",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446483554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ4MzU1NA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T07:01:04Z",
    "updated_at": "2018-12-12T07:01:04Z",
    "author_association": "MEMBER",
    "body": "> Because block.state_root is tree_hash of the post-state root, you can't just naively put the current block into the state. you end up with a circular reference.\r\n\r\nNow I get it. And looks like current spec version describes the only possible way of tracking `latest_block_roots`.\r\n\r\nThe other question is whether `latest_block_roots` should be a part of the state or not. On one hand it's pretty helpful to have them in there, but on the other they are redundant in terms of consensus. This question is similar to https://github.com/ethereum/eth2.0-specs/issues/191 and IMHO we should get back to them later when wire protocol is designed and sync algorithm is clarified. It would give us more insight on what should be in the state and what's not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446483554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446606134",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446606134",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446606134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjYwNjEzNA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T14:27:48Z",
    "updated_at": "2018-12-12T14:27:48Z",
    "author_association": "MEMBER",
    "body": "> The other question is whether `latest_block_roots` should be a part of the state or not. \r\n\r\nIt is used for several things:\r\n\r\n1) For the batched accumulator (`batched_block_roots`).\r\n2) For the EVM2.0, so that shards can have an equivalent of the `BLOCKHASH` opcode for beacon block roots.\r\n3) To process attestations",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446606134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446610925",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446610925",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446610925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjYxMDkyNQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T14:41:40Z",
    "updated_at": "2018-12-12T14:41:40Z",
    "author_association": "MEMBER",
    "body": "It definitely a thing that is required by processing. \r\n> The other question is whether `latest_block_roots` should be a part of the state or not.\r\n\r\nBy this statement I just meant that it could be tracked by client implementation and not being a part of the sate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446610925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446619849",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446619849",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446619849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjYxOTg0OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T15:06:44Z",
    "updated_at": "2018-12-12T15:06:44Z",
    "author_association": "MEMBER",
    "body": "> not being a part of the sate.\r\n\r\nIf we want `state_transition(prev_state, new_block) -> new_state` (which I think is a sane property to have) then `latest_block_roots` should be part of the state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446619849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446773667",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446773667",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446773667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njc3MzY2Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T22:48:28Z",
    "updated_at": "2018-12-12T22:49:09Z",
    "author_association": "MEMBER",
    "body": "I've been re-thinking it, and the function signature is actually okay.\r\n\r\nState transition looks like the following (assuming that the `prev_state` is the resulting state of processing the block defined by `new_block.parent_root`):\r\n\r\n```python\r\ndef state_transition(prev_state, new_block) -> new_state:\r\n    state = deepcopy(prev_state)\r\n    latest_root = new_block.parent_root\r\n\r\n    # transition through skipped slots\r\n    while(state.slot <= new_block.slot - 1):\r\n        state = per_slot_state_transition(state, latest_root, block=None)\r\n\r\n    # transition through slot of the new block\r\n    state = per_slot_state_transition(state, latest_root, new_block)\r\n\r\n    return state\r\n```\r\n\r\nthe slots processed without an associated block are just an internal portion of this ultimately per-block state transition.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446773667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446830534",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446830534",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446830534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjgzMDUzNA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T03:30:14Z",
    "updated_at": "2018-12-13T03:30:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "just a note, because it's not visible: in the above state transition function, it's good to remember that epoch processing is done even when there's no block - at least that's how I read the spec",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446830534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446831444",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446831444",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446831444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjgzMTQ0NA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T03:36:06Z",
    "updated_at": "2018-12-13T03:36:06Z",
    "author_association": "MEMBER",
    "body": "You can opportunistically transition locally, but until you get a new block in, you don't know what slot it's parent will be.\r\n\r\nSay your last block is block `B` at slot 50. Slots are ticking away... 51, 52, 53.... 64 arrives and no new block. I can opportunistically transition through all of these skipped blocks. Now I'm locally at slot 64 and done an epoch transition. If a new block `C` comes in with parent `B` at slot 63, I now would have to roll back to slot 62 and transition slot 63 with block `C`.\r\n\r\nAnother option is to sit there with block `B` and do nothing with my local state until I get a new child block, catching up slots in the state transition as needed.\r\n\r\nThere are some trade-offs here depending on how/when new shufflings/duties appear. Will think on it and write some more notes tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446831444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446834790",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-446834790",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 446834790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjgzNDc5MA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T03:59:13Z",
    "updated_at": "2018-12-13T03:59:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I now would have to roll back\r\n\r\nwell, that can happen anyway, when fork choice says so?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/446834790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455223122",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/284#issuecomment-455223122",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/284",
    "id": 455223122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyMzEyMg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:54:11Z",
    "updated_at": "2019-01-17T15:54:11Z",
    "author_association": "MEMBER",
    "body": "It seems that the issues raised have been addressed/answered. Feel free to reopen @arnetheduck :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455223122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
