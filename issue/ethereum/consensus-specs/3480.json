{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3480",
  "id": 1854783477,
  "node_id": "I_kwDOCOoGbc5ujb_1",
  "number": 3480,
  "title": "Fork choice attestation validation ignores clock disparity",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324776822,
      "node_id": "MDU6TGFiZWwxMzI0Nzc2ODIy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:fork-choice",
      "name": "scope:fork-choice",
      "color": "81C7D4",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-08-17T11:07:57Z",
  "updated_at": "2023-08-20T18:41:51Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "While fuzzing Lighthouse I found a case that surprised me a little: it is possible to accept an attestation on gossip from epoch `N - 2` during epoch `N`, which is invalid to apply to fork choice.\r\n\r\nThe reason for this is that P2P attestation validation allows for 500ms of clock disparity, while fork choice does not:\r\n\r\n```python\r\ndef validate_target_epoch_against_current_time(store: Store, attestation: Attestation) -> None:\r\n    target = attestation.data.target\r\n\r\n    # Attestations must be from the current or previous epoch\r\n    current_epoch = compute_epoch_at_slot(get_current_slot(store))\r\n    # Use GENESIS_EPOCH for previous when genesis to avoid underflow\r\n    previous_epoch = current_epoch - 1 if current_epoch > GENESIS_EPOCH else GENESIS_EPOCH\r\n    # If attestation target is from a future epoch, delay consideration until the epoch arrives\r\n    assert target.epoch in [current_epoch, previous_epoch]\r\n```\r\n\r\n[(link)](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/fork-choice.md#validate_target_epoch_against_current_time)\r\n\r\nThis isn't necessarily a problem with the spec unless we expect this invariant to hold:\r\n\r\n```python3\r\naccepted_on_gossip(attestation) -> validate_on_attestation(store, att, False) == None\r\n```\r\n\r\nAs far as I can tell this doesn't change with Deneb either, as `validate_target_epoch_against_current_time` continues to ignore the clock disparity allowance applied on the P2P layer: https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/p2p-interface.md#beacon_aggregate_and_proof.\r\n\r\nLighthouse issue: https://github.com/sigp/lighthouse/issues/4633",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1682089114",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3480#issuecomment-1682089114",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
    "id": 1682089114,
    "node_id": "IC_kwDOCOoGbc5kQqSa",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-17T11:09:07Z",
    "updated_at": "2023-08-17T11:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the stated invariant isn't desired, then it's a simple matter to clean up Lighthouse's error handling so that this doesn't result in a nasty `ERROR` log. There is no other ill effect.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1682089114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
