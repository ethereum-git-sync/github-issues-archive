{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3480",
  "id": 1854783477,
  "node_id": "I_kwDOCOoGbc5ujb_1",
  "number": 3480,
  "title": "Fork choice attestation validation ignores clock disparity",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324776822,
      "node_id": "MDU6TGFiZWwxMzI0Nzc2ODIy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:fork-choice",
      "name": "scope:fork-choice",
      "color": "81C7D4",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-08-17T11:07:57Z",
  "updated_at": "2023-08-25T03:23:52Z",
  "closed_at": "2023-08-25T03:23:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "While fuzzing Lighthouse I found a case that surprised me a little: it is possible to accept an attestation on gossip from epoch `N - 2` during epoch `N`, which is invalid to apply to fork choice.\r\n\r\nThe reason for this is that P2P attestation validation allows for 500ms of clock disparity, while fork choice does not:\r\n\r\n```python\r\ndef validate_target_epoch_against_current_time(store: Store, attestation: Attestation) -> None:\r\n    target = attestation.data.target\r\n\r\n    # Attestations must be from the current or previous epoch\r\n    current_epoch = compute_epoch_at_slot(get_current_slot(store))\r\n    # Use GENESIS_EPOCH for previous when genesis to avoid underflow\r\n    previous_epoch = current_epoch - 1 if current_epoch > GENESIS_EPOCH else GENESIS_EPOCH\r\n    # If attestation target is from a future epoch, delay consideration until the epoch arrives\r\n    assert target.epoch in [current_epoch, previous_epoch]\r\n```\r\n\r\n[(link)](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/fork-choice.md#validate_target_epoch_against_current_time)\r\n\r\nThis isn't necessarily a problem with the spec unless we expect this invariant to hold:\r\n\r\n```python3\r\naccepted_on_gossip(attestation) -> validate_on_attestation(store, att, False) == None\r\n```\r\n\r\nAs far as I can tell this doesn't change with Deneb either, as `validate_target_epoch_against_current_time` continues to ignore the clock disparity allowance applied on the P2P layer: https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/p2p-interface.md#beacon_aggregate_and_proof.\r\n\r\nLighthouse issue: https://github.com/sigp/lighthouse/issues/4633",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1682089114",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3480#issuecomment-1682089114",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
    "id": 1682089114,
    "node_id": "IC_kwDOCOoGbc5kQqSa",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-17T11:09:07Z",
    "updated_at": "2023-08-17T11:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the stated invariant isn't desired, then it's a simple matter to clean up Lighthouse's error handling so that this doesn't result in a nasty `ERROR` log. There is no other ill effect.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1682089114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1692696338",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3480#issuecomment-1692696338",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
    "id": 1692696338,
    "node_id": "IC_kwDOCOoGbc5k5H8S",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T03:15:20Z",
    "updated_at": "2023-08-25T03:15:20Z",
    "author_association": "MEMBER",
    "body": "IMO, network restrictions are to protect a network from DoSing it with stale data while FC has its own constraints. I don't think that these two should match, i.e. don't see that invariant holding to be really helpful. Clock disparity workaround gives 500ms window where stale consensus data can sweep in, this trade off looks acceptable to me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1692696338/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1692700687",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3480#issuecomment-1692700687",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3480",
    "id": 1692700687,
    "node_id": "IC_kwDOCOoGbc5k5JAP",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T03:23:22Z",
    "updated_at": "2023-08-25T03:23:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkalinin Yeah having thought about it more I agree this is a non-issue on the spec side.\n\nEven if we did try to make fork choice accept any attestation received on gossip it would still break due to timing, e.g. we could accept an attestation on gossip 0.5ms before it becomes stale -> some processing/queuing could take 0.5ms -> fork choice would see the attestation as stale and reject it.\n\nWe'll fix this on the Lighthouse side ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1692700687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
