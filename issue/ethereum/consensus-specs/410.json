{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/410",
  "id": 396889959,
  "node_id": "MDU6SXNzdWUzOTY4ODk5NTk=",
  "number": 410,
  "title": "Finalization rule 3 would return True in no case",
  "user": {
    "login": "ChihChengLiang",
    "id": 3391420,
    "node_id": "MDQ6VXNlcjMzOTE0MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChihChengLiang",
    "html_url": "https://github.com/ChihChengLiang",
    "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
    "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
    "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
    "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
    "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043866,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:bug",
      "name": "general:bug",
      "color": "DD1C1A",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/1",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/1",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/1/labels",
    "id": 3911990,
    "node_id": "MDk6TWlsZXN0b25lMzkxMTk5MA==",
    "number": 1,
    "title": "January Release",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 11,
    "state": "closed",
    "created_at": "2018-12-19T07:03:03Z",
    "updated_at": "2019-02-22T19:18:25Z",
    "due_on": "2019-01-31T08:00:00Z",
    "closed_at": "2019-01-31T16:01:34Z"
  },
  "comments": 17,
  "created_at": "2019-01-08T12:41:35Z",
  "updated_at": "2019-01-28T15:28:26Z",
  "closed_at": "2019-01-28T15:28:26Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The spec says:\r\n> Set `state.finalized_slot = state.previous_justified_slot` if any of the following are true:\r\n\r\nwhere the third condition is: \r\n\r\n`state.previous_justified_slot == state.slot - 4 * EPOCH_LENGTH and state.justification_bitfield % 16 in (15, 14)`\r\n\r\nNot sure if I misunderstood something, but I couldn't find a scenario that makes this condition true.\r\n\r\nIf we introduce the notation B4, ..., B1 from the [minispec](https://ethresear.ch/t/beacon-chain-casper-mini-spec/2760). This condition requires that `previous_justified_slot` stay at 4 epochs ago (B1), and the last 4 bits looks like `1110` or `1111`, that is B1, B2, and B3 in justification hashes.\r\n\r\nBefore this epoch, the bits for (B1, B2, B3) might look like `111`, `110`, or `10x`, but none of them is the case.\r\n- `111`: The B1 would be finalized by rule 2 so no need rule 3 in next epoch.\r\n- `110`: The previous justified slot would become B2.\r\n- `10x`: The spec has `state.justification_bitfield |= 2` and `state.justification_bitfield |= 1` but no `state.justification_bitfield |= 4`. No way for B2 to become 1 in next epoch.\r\n\r\nSee the [test cases](https://github.com/ethereum/py-evm/pull/1690/files#diff-2f13bfb47df39a36b2fb37d93d170fcfR48).\r\n\r\n<img width=\"831\" alt=\"screen shot 2019-01-08 at 8 40 47 pm\" src=\"https://user-images.githubusercontent.com/3391420/50831418-b8971d00-1385-11e9-8ad1-8eee0fc685d9.png\">\r\n",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452357026",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452357026",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452357026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM1NzAyNg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T16:15:26Z",
    "updated_at": "2019-01-08T16:15:26Z",
    "author_association": "MEMBER",
    "body": "Consider the following chain of events:\r\n\r\n* B1 is justified, but the chain does not hear about it before the epoch ends (bitfield at time of B2: 0)\r\n* B2 is justified, but the chain does not hear about it before the epoch ends; however, the chain does hear about B1 being justified (bitfield at time of B3: 10)\r\n* B3 is justified, but the chain does not hear about it before the epoch ends; however, the chain does hear about B2 being justified (bitfield at time of B4: 110)\r\n* B4 may or may not be justified, and the chain may or may not hear about it before the epoch ends; in either case, the chain does hear about B3 being justified (bitfield at time of B5: 1110 or 1111)\r\n\r\nThis way the third condition gets triggered without the second or first condition having been triggered earlier.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452357026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452389449",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452389449",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452389449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM4OTQ0OQ==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T17:47:33Z",
    "updated_at": "2019-01-08T17:47:33Z",
    "author_association": "MEMBER",
    "body": "In the 4th bullet point, `state.previous_justified_slot` becomes B2 and thus not triggering the condition.\r\nIt requires `state.previous_justified_slot == state.slot - 4 * EPOCH_LENGTH`, which should be `B1`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452389449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452390597",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452390597",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452390597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM5MDU5Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T17:51:10Z",
    "updated_at": "2019-01-08T17:51:10Z",
    "author_association": "MEMBER",
    "body": "Then maybe replacing that with `state.previous_justified_slot == state.slot - 3 * EPOCH_LENGTH` would fix it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452390597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452392030",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452392030",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452392030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM5MjAzMA==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T17:55:44Z",
    "updated_at": "2019-01-08T17:55:59Z",
    "author_association": "MEMBER",
    "body": "If we have both:\r\n- `state.previous_justified_slot == state.slot - 3 * EPOCH_LENGTH and state.justification_bitfield % 8 == 7`, and\r\n- `state.previous_justified_slot == state.slot - 3 * EPOCH_LENGTH and state.justification_bitfield % 16 in (15, 14)`\r\n\r\nThat would look equivalent to \r\n- `state.previous_justified_slot == state.slot - 3 * EPOCH_LENGTH and state.justification_bitfield % 8 in (7, 6)`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452392030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452392958",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452392958",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452392958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM5Mjk1OA==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T17:58:35Z",
    "updated_at": "2019-01-08T17:58:35Z",
    "author_association": "MEMBER",
    "body": "ah ... it's not. 😂 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452392958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452404379",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452404379",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452404379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQwNDM3OQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T18:34:16Z",
    "updated_at": "2019-01-08T18:34:16Z",
    "author_association": "MEMBER",
    "body": "Thinking about it more, I think we may need to store additional information about justified slots and sources.\r\n\r\nThe general principle that we are claiming a subset of here is that we can call `B[1]` finalized when `B[1]` and `B[n]` are both justified, with `B[n]` having been justified using `B[1]` as a source, and additionally all epochs `B[1] ... B[n-1]` are all justified (we don't care with what source). The purpose of the latter clause is to verify that another chain's justified-block-chain can't \"snake through\" the gap between `B[1] .... B[n-1]` (as if it did, then there would be 2/3 justifying that block, but there would also be 2/3 justifying the block at that height in the current chain, so 1/3 get slashed).\r\n\r\nSo the real conditions that we want here are something like this:\r\n\r\n* `B4` and `B3` are justified, `B3` being the source of `B4`\r\n* `B4`, `B3`, `B2` are justified, `B2` being the source of `B4`\r\n* `B3`, `B2`, `B1` are justified, `B1` being the source of `B3`\r\n\r\nBut we're not really keeping track of what is the source of what, and maybe we should?\r\n\r\n@djrtwo @JustinDrake ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452404379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452835119",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452835119",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452835119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgzNTExOQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T19:54:25Z",
    "updated_at": "2019-01-09T19:54:25Z",
    "author_association": "MEMBER",
    "body": "Posted a comment in error -- deleted",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452835119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452842551",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452842551",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452842551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg0MjU1MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T20:19:59Z",
    "updated_at": "2019-01-11T01:09:27Z",
    "author_association": "MEMBER",
    "body": "I'm pretty sure the current surround slashing condition does not protect against this scenario. This reaches finality without having the source and target being sequential for any of the votes (ie meeting the `source_epoch_2 + 1 == target_epoch_2` condition in `is_surround_vote`).\r\n\r\nSource is actually defined and enforced via the following validity conditions -- \r\n* Verify that `attestation.data.justified_slot` is equal to `state.justified_slot if attestation.data.slot >= state.slot - (state.slot % EPOCH_LENGTH) else state.previous_justified_slot`\r\n* Verify that `attestation.data.justified_block_root` is equal to `get_block_root(state, attestation.data.justified_slot)`.\r\n\r\nLet's break down the scenario described above. To be more explicit, let's define `J0` as some previously justified epoch some multiple of epochs before `B1`. This would be `justified_slot`/`hash` in `state` when the votes for `B1` are originally being made and thus the source of the justification of `B1`\r\n\r\n* `B1` is justified using `J0` as source, but the chain does not hear about it before the epoch ends (bitfield at time of B2: 0) (`justified_slot`/`hash` remains `J0` at time of `B2`) [note `B1 -> J0` is not sequential]\r\n* `B2` is justified using `J0` as source (enforced by validity conditions above), but the chain does not hear about it before the epoch ends; however, the chain does hear about `B1` being justified (bitfield at time of B3: 10) (`justified_slot`/`hash` is updated to `B1`) [note `B2 -> J0` is not sequential]\r\n* `B3` is justified using `B1` as source (enforced by validity conditions above), but the chain does not hear about it before the epoch ends; however, the chain does hear about `B2` being justified (bitfield at time of B4: 110) (`justified_slot`/`hash` is updated to `B2`) [note `B3 -> B1` is not sequential]\r\n* `B4` may or may not be justified (using `B2` as source), and the chain may or may not hear about it before the epoch ends; in either case, the chain does hear about `B3` being justified (bitfield at time of B5: 1110 or 1111)\r\n\r\nIf after this sequence we count `B1` as finalized, then the validator could do a surround using `J0` as source and begin finalizing a separate chain without triggering the either `no_surround_vote` or `no_double_vote`\r\n\r\n_edit_:\r\n\r\nI agree with @ChihChengLiang about:\r\n> In the 4th bullet point, state.previous_justified_slot becomes B2 and thus not triggering the condition.\r\n\r\nBut \" replacing that with `state.previous_justified_slot == state.slot - 3 * EPOCH_LENGTH`\" still leaves it the finality case open to the surround condition.\r\n\r\n_edit2_:\r\n\r\nI understand the logic of why we want to finalize the chain in this situation, but I think we need an additional no surround condition that takes into account two attestations from chain-A (the interleaved finalizing attestations) and one attestation from chain-B (the surround attestation).\r\n\r\nSomething like\r\n```python\r\ndef is_interleaved_surround_vote(attestation_data_1: AttestationData,\r\n                                 attestation_data_2a: AttestationData,\r\n                                 attestation_data_2b: AttestationData) -> bool:\r\n    \"\"\"\r\n    Returns True if the provided ``AttestationData`` are slashable\r\n    due to an _interleaved_ 'surround vote'.\r\n    Note: parameter order matters as this function only checks\r\n    that ``attestation_data_1`` surrounds ``attestation_data_2a`` and ``attestation_data_2b``,\r\n    and assumes that ``attestation_data_2a`` and ``attestation_data_2b`` are sequentially \r\n    interleaved with 2a having a lower source and target.\r\n    \"\"\"\r\n    source_epoch_1 = attestation_data_1.justified_slot // EPOCH_LENGTH\r\n    source_epoch_2a = attestation_data_2a.justified_slot // EPOCH_LENGTH\r\n    source_epoch_2b = attestation_data_2b.justified_slot // EPOCH_LENGTH\r\n    target_epoch_1 = attestation_data_1.slot // EPOCH_LENGTH\r\n    target_epoch_2a = attestation_data_2a.slot // EPOCH_LENGTH\r\n    target_epoch_2b = attestation_data_2b.slot // EPOCH_LENGTH\r\n    return (\r\n        # 2a and 2b could cause an interleaved sequential justification\r\n        (source_epoch_2a < source_epoch_2b) and\r\n        (source_epoch_2b + 1 == target_epoch_2a) and\r\n        (target_epoch_2a + 1 == target_epoch_2b) and\r\n        # 1 surrounds the sequential targets of 2b -> 2a\r\n        (source_epoch_1 < target_epoch_2a) and\r\n        (target_epoch_2b < target_epoch_1)\r\n    )\r\n```\r\n\r\nI'm signing off for the night. I need to draw some more diagrams and think about it, but I wanted to document my thoughts before morning. The intuition here is that we are relying upon a double justification that sequentially interleaves the source and targets of two super majority links. If we accept this is a finality of the lower justified of the two, then we need an additional slashing condition that prevents surrounding the double justification formed by the two targets of the interleaved links rather than just one super majority link.\r\n\r\n_edit3_: The surround condition needs to be tighter around the two justified targets rather than around the entire interleaved structure. Updated sample function above",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452842551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452845888",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-452845888",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 452845888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg0NTg4OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T20:32:14Z",
    "updated_at": "2019-01-09T20:32:14Z",
    "author_association": "MEMBER",
    "body": "Another potentially related note is that the phase 0 spec diverges from the mini-spec here:\r\n> Attestations published can be included in the chain, but only if the attestation’s `justified_hash` equals the highest-slot hash in `justified_hashes`.\r\n\r\nThis diverges from the phase 0 spec in that the spec allows inclusion of second highest-slot justified_hash in state if attestations from the previous epoch are being included and a new justified hash was added at the most recent epoch boundary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/452845888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453328765",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453328765",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453328765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzMyODc2NQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T01:10:33Z",
    "updated_at": "2019-01-11T01:10:33Z",
    "author_association": "MEMBER",
    "body": "@vbuterin pointed out that we need to strengthen the \"adjacent no surround\" to a \"full no surround\" to catch these cases. \r\n\r\nBringing in a third slashing condition with an additional attestation is overkill. It provides more proof that the messages signed could actually create the run of justifications to finalize, but the additional complexity isn't worth it compared to just strengthening `no_surround`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453328765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453330653",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453330653",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453330653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzMzMDY1Mw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T01:17:04Z",
    "updated_at": "2019-01-11T01:17:04Z",
    "author_association": "MEMBER",
    "body": "I suggest\r\n* we strength the `is_surround_vote` as follows\r\n* update the mini spec to reflect the disparity pointed out above\r\n* spend additional effort on analysis of the many corner cases in this modification of FFG to handle opportunistic finality when attestations are being included quickly\r\n\r\n```python\r\ndef is_surround_vote(attestation_data_1: AttestationData,\r\n                     attestation_data_2: AttestationData) -> bool:\r\n    source_epoch_1 = attestation_data_1.justified_slot // EPOCH_LENGTH\r\n    source_epoch_2 = attestation_data_2.justified_slot // EPOCH_LENGTH\r\n    target_epoch_1 = attestation_data_1.slot // EPOCH_LENGTH\r\n    target_epoch_2 = attestation_data_2.slot // EPOCH_LENGTH\r\n    return (\r\n        (source_epoch_1 < source_epoch_2) and\r\n        (target_epoch_2 < target_epoch_1)\r\n    )",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453330653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453763730",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453763730",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453763730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc2MzczMA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-12T17:06:42Z",
    "updated_at": "2019-01-12T17:06:42Z",
    "author_association": "MEMBER",
    "body": "> update the mini spec to reflect the disparity pointed out above\r\n\r\nHere's a concrete proposal. As I wrote above, the three conditions we need are:\r\n\r\n* B4 and B3 are justified, B3 being the source of B4\r\n* B4, B3, B2 are justified, B2 being the source of B4\r\n* B3, B2, B1 are justified, B1 being the source of B3\r\n\r\nWe implement this via:\r\n\r\n* `justification_bitfield % 4 == 3` and `justified_slot == state.slot - 2 * EPOCH_LENGTH`\r\n* `justification_bitfield % 8 == 7` and `justified_slot == state.slot - 3 * EPOCH_LENGTH`\r\n* `justification_bitfield % 16 in (14, 15)` and `previous_justified_slot == state.slot - 4 * EPOCH_LENGTH`\r\n\r\nWe also move the \"Justification\" section to after these checks, so `justified_slot` and `previous_justified_slot` actually do refer to the justified slots during the B4 and B3 epochs while this code is being run.\r\n\r\nDoes that look correct?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453763730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453779382",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453779382",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453779382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc3OTM4Mg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-12T20:41:08Z",
    "updated_at": "2019-01-12T23:33:35Z",
    "author_association": "MEMBER",
    "body": "If `B[i]` is finalized when `B[i], ..., B[j]` are justified and `B[i]` is the source of `B[j]`, can we include:\r\n\r\n* B2 and B3 are justified, B2 being the source of B3\r\n\r\nSo the conditions become:\r\n\r\n* `(justification_bitfield >> 0) % 4 == 0b11` and `justified_slot == state.slot - 2 * EPOCH_LENGTH`\r\n* `(justification_bitfield >> 1) % 4 == 0b11` and `previous_justified_slot == state.slot - 3 * EPOCH_LENGTH`\r\n* `(justification_bitfield >> 0) % 8 == 0b111` and `justified_slot == state.slot - 3 * EPOCH_LENGTH`\r\n* `(justification_bitfield >> 1) % 8 == 0b111` and `previous_justified_slot == state.slot - 4 * EPOCH_LENGTH`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453779382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453795723",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453795723",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453795723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NTcyMw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-13T02:05:07Z",
    "updated_at": "2019-01-13T02:05:07Z",
    "author_association": "MEMBER",
    "body": "Yep, that seems reasonable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453795723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453795783",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453795783",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453795783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NTc4Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-13T02:06:38Z",
    "updated_at": "2019-01-13T02:06:38Z",
    "author_association": "MEMBER",
    "body": "I recommend we do this fix in the same PR that moves epoch processing to the last slot, so that we don't need to bugfix spec parts that we later immediately rewrite. @djrtwo were you going to make that PR?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453795783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453896738",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-453896738",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 453896738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzg5NjczOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T03:50:40Z",
    "updated_at": "2019-01-14T03:50:40Z",
    "author_association": "MEMBER",
    "body": "Yeah, I have an outdated PR here #369 but been waiting for the invasive #408 to be merged before.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/453896738/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455426381",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/410#issuecomment-455426381",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/410",
    "id": 455426381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQyNjM4MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T04:46:07Z",
    "updated_at": "2019-01-18T04:46:07Z",
    "author_association": "MEMBER",
    "body": "sorting through the structure of #369 and then adding this fix there",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/455426381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
