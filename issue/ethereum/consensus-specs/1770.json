{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1770",
  "id": 608706328,
  "node_id": "MDU6SXNzdWU2MDg3MDYzMjg=",
  "number": 1770,
  "title": "adverse effect of sharing peers between testnets/mainnet ",
  "user": {
    "login": "jrhea",
    "id": 5555162,
    "node_id": "MDQ6VXNlcjU1NTUxNjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhea",
    "html_url": "https://github.com/jrhea",
    "followers_url": "https://api.github.com/users/jrhea/followers",
    "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhea/orgs",
    "repos_url": "https://api.github.com/users/jrhea/repos",
    "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhea/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-04-29T00:56:02Z",
  "updated_at": "2020-08-03T12:44:16Z",
  "closed_at": "2020-08-03T12:44:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I am concerned that a shared routing table between testnets and mainnet could significantly slow down the search for peers within specific attestation subnets.\r\n\r\nI spoke @AgeManning about this and he said it should be easy to add a config option that only allows peers to only be inserted into the routing table if the `fork-id` matches the local enr.  \r\n\r\nThoughts?\r\n\r\ncc: @djrtwo @fjl @zilm13 @mkalinin others",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621070011",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-621070011",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 621070011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTA3MDAxMQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T08:44:26Z",
    "updated_at": "2020-04-29T08:44:26Z",
    "author_association": "MEMBER",
    "body": "IMO, the speed does mostly depend on the total number of peers in the DHT and how the number of advertising peers is related to it. I think this relationship is hard to predict for Phase 0 but at least we could try to simulate out the threshold when it becomes infeasible to keep your discovery up-to-date with the network state and quickly connect to a subnet on demand.\r\n\r\nThe more peers in the DHT we have, the better network resists eclipse and sybil attacks exploiting the DHT. If we lock in with only mainnet participants we will obviously reduce that number, hence, resistance. But it also depends on the total number of Phase 0 mainnet nodes that we expect. \r\n\r\nMixing testnets with mainnet into one discovery churn could also be a slight mitigation to the privacy problem.\r\n\r\nThese are the concerns that I can observe. But we really don't know how impactful they are, do we? And we don't know how big is the impact of having shared DHT between testnets and mainnet on the speed of capability discovery. Perhaps @zilm13's simulation could shed a light on the latter?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621070011/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621353852",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-621353852",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 621353852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM1Mzg1Mg==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T17:28:08Z",
    "updated_at": "2020-04-29T17:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkalinin \r\n> IMO, the speed does mostly depend on the total number of peers in the DHT \r\n\r\nMixing two networks in one Kademlia table means you have, say, 220 peers instead of 200 (because it's exponential) in table of long running node, but if they splits equally in networks, it means you have 110 from one and 110 from another instead of 200 from one. So if you have 1/64 probability of being in one subnet plus say not all nodes are validator, let's say 1/2, it means you have 1/128 of peers in certain subnet. So before this when all nodes from one peer's Kademlia table you got 1.56 peers from one subnet, now you are getting 0.86. So you could count how many additional queries do you need to gather the same number of nodes from one subnet. Yeah, we could parry that in subnetwork context you will use not only kademlia, but anyway in standard query for nodes you get back 16 nodes and 8 of them (if networks have equal split) are not valid for you\r\n\r\n> The more peers in the DHT we have, the better network resists eclipse and sybil attacks exploiting the DHT\r\n\r\nHow will it work, when you have 24 (16\\*3 /2) nodes in radius of 1 distance now over you instead of 48 (16\\*3)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621353852/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621949870",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-621949870",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 621949870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTk0OTg3MA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T16:07:25Z",
    "updated_at": "2020-04-30T16:07:40Z",
    "author_association": "MEMBER",
    "body": "> How will it work, when you have 24 (16*3 /2) nodes in radius of 1 distance now over you instead of 48 (16*3)?\r\n\r\nYou're right. It won't save us. And it won't increase BFT of the gossip mesh as peers from other networks won't participate in it either.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/621949870/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625168652",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-625168652",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 625168652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTE2ODY1Mg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T10:26:16Z",
    "updated_at": "2020-05-07T10:26:16Z",
    "author_association": "MEMBER",
    "body": "Recap after [Networking call 5](https://github.com/ethereum/eth2.0-pm/issues/148) discussion:\r\n- mixing peers from different network instances into a single discovery churn _does not_ improve the security of the network unless peers share the responsibilities of this network\r\n- it results in a negative outcome instead, i.e. more round-trips when searching for peers\r\n\r\nPotential DHT subnet denominators:\r\n- _fork digest_ -- intends to uniquely identify the network instance but changing through time; peers will have to track several fork digests when doing discovery\r\n- _genesis root_ -- is constant but does not identify the network uniquely after contentious fork event",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625168652/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625271477",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-625271477",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 625271477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTI3MTQ3Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T13:56:55Z",
    "updated_at": "2020-05-07T14:03:56Z",
    "author_association": "MEMBER",
    "body": "I'm trying to understand the issue here. Bit confused how you arrived at this conclusion:\r\n\r\n> mixing peers from different network instances into a single discovery churn does not improve the security of the network\r\n\r\nThe security of the *discovery* is very much affected by the size of the DHT. It's the main security factor actually. If you pre-filter the node table to only include nodes of your chain, the network will become very insecure.\r\n\r\nWe can't quantify the 'adverse effect' without knowing what the actual numbers are. Mixing networks in the same discovery DHT will always lead to some degradation in peer finding performance, and it's a good tradeoff to make because the benefit of mixing the networks is better DHT security for all of them.\r\n\r\nThe question here is whether performance is good enough. How many useful nodes are you finding per minute? You can easily track this metric in your TCP dial pipeline because the ENR includes all the information to decide if the node is useful or not. \r\n\r\nHow many nodes do we need to find per minute? We can compute this number by deciding on a goal peer count. For eth2, you need to fill your connection slots with peers related to your epoch within 6 minutes. If we assume goal peer count of 20, we need to successfully connect 3 peers per minute to reach this goal. Assuming 80% dial failure rate (random number), you need to find and try ~17 peers per minute to make it to the goal.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625271477/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625277116",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-625277116",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 625277116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTI3NzExNg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T14:06:42Z",
    "updated_at": "2020-05-07T14:06:42Z",
    "author_association": "MEMBER",
    "body": "Note that I just made up some numbers there. For testnets, maybe a goal peer count of 20 is unrealistic, and the dial failure rate might actually be lower. My point is that we need to focus on the things we can measure. The discovery performance we really need to make it work may be way lower than you'd think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/625277116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626866819",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-626866819",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 626866819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjg2NjgxOQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T18:11:54Z",
    "updated_at": "2020-05-11T18:11:54Z",
    "author_association": "MEMBER",
    "body": "agreed that we need to quantify this a bit more and that carving out testnets from the dht reduces their security.\r\n\r\nI'll leave this open until we can get some data on how quickly we can search for peers.\r\n@AgeManning had some optimizations in mind to speed up this process",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/626866819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/627377058",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-627377058",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 627377058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzM3NzA1OA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T14:21:52Z",
    "updated_at": "2020-05-12T14:21:52Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for the input @fjl!\r\n\r\n> Bit confused how you arrived at this conclusion:\r\n\r\nThere was an assumption that the Eth2 mainnet has enough nodes to maintain the security of discovery service on near the same level as if its DHT contained nodes from other networks, like Eth1, testnets, etc.\r\n\r\n> The security of the _discovery_ is very much affected by the size of the DHT. It's the main security factor actually. If you pre-filter the node table to only include nodes of your chain, the network will become very insecure.\r\n\r\nCould you please elaborate more on that or point out to an article or a paper where an impact of the size of DHT on its security is analyzed? What kind of fault tolerance is affected by the size? Is this resilience to attacks or to single node crashes?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/627377058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/668002033",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1770#issuecomment-668002033",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1770",
    "id": 668002033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODAwMjAzMw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-03T12:44:16Z",
    "updated_at": "2020-08-03T12:44:16Z",
    "author_association": "MEMBER",
    "body": "I'm closing this. Will re-open if the launch of mainnet degrades discovery for testnets",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/668002033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
