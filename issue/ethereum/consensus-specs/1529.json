{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1529",
  "id": 538889306,
  "node_id": "MDU6SXNzdWU1Mzg4ODkzMDY=",
  "number": 1529,
  "title": "96 undefined names in ./deposit_contract/contracts/validator_registration.v.py",
  "user": {
    "login": "cclauss",
    "id": 3709715,
    "node_id": "MDQ6VXNlcjM3MDk3MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3709715?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cclauss",
    "html_url": "https://github.com/cclauss",
    "followers_url": "https://api.github.com/users/cclauss/followers",
    "following_url": "https://api.github.com/users/cclauss/following{/other_user}",
    "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions",
    "organizations_url": "https://api.github.com/users/cclauss/orgs",
    "repos_url": "https://api.github.com/users/cclauss/repos",
    "events_url": "https://api.github.com/users/cclauss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cclauss/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-12-17T07:31:57Z",
  "updated_at": "2019-12-17T08:42:33Z",
  "closed_at": "2019-12-17T08:34:19Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "[flake8](http://flake8.pycqa.org) testing of https://github.com/ethereum/eth2.0-specs on Python 3.8.0\r\n\r\n$ __flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics__\r\n```\r\n./deposit_contract/contracts/validator_registration.v.py:2:21: F821 undefined name 'constant'\r\nMIN_DEPOSIT_AMOUNT: constant(uint256) = 1000000000  # Gwei\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:2:30: F821 undefined name 'uint256'\r\nMIN_DEPOSIT_AMOUNT: constant(uint256) = 1000000000  # Gwei\r\n                             ^\r\n./deposit_contract/contracts/validator_registration.v.py:3:30: F821 undefined name 'constant'\r\nDEPOSIT_CONTRACT_TREE_DEPTH: constant(uint256) = 32\r\n                             ^\r\n./deposit_contract/contracts/validator_registration.v.py:3:39: F821 undefined name 'uint256'\r\nDEPOSIT_CONTRACT_TREE_DEPTH: constant(uint256) = 32\r\n                                      ^\r\n./deposit_contract/contracts/validator_registration.v.py:4:20: F821 undefined name 'constant'\r\nMAX_DEPOSIT_COUNT: constant(uint256) = 4294967295 # 2**DEPOSIT_CONTRACT_TREE_DEPTH - 1\r\n                   ^\r\n./deposit_contract/contracts/validator_registration.v.py:4:29: F821 undefined name 'uint256'\r\nMAX_DEPOSIT_COUNT: constant(uint256) = 4294967295 # 2**DEPOSIT_CONTRACT_TREE_DEPTH - 1\r\n                            ^\r\n./deposit_contract/contracts/validator_registration.v.py:5:16: F821 undefined name 'constant'\r\nPUBKEY_LENGTH: constant(uint256) = 48  # bytes\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:5:25: F821 undefined name 'uint256'\r\nPUBKEY_LENGTH: constant(uint256) = 48  # bytes\r\n                        ^\r\n./deposit_contract/contracts/validator_registration.v.py:6:32: F821 undefined name 'constant'\r\nWITHDRAWAL_CREDENTIALS_LENGTH: constant(uint256) = 32  # bytes\r\n                               ^\r\n./deposit_contract/contracts/validator_registration.v.py:6:41: F821 undefined name 'uint256'\r\nWITHDRAWAL_CREDENTIALS_LENGTH: constant(uint256) = 32  # bytes\r\n                                        ^\r\n./deposit_contract/contracts/validator_registration.v.py:7:19: F821 undefined name 'constant'\r\nSIGNATURE_LENGTH: constant(uint256) = 96  # bytes\r\n                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:7:28: F821 undefined name 'uint256'\r\nSIGNATURE_LENGTH: constant(uint256) = 96  # bytes\r\n                           ^\r\n./deposit_contract/contracts/validator_registration.v.py:8:16: F821 undefined name 'constant'\r\nAMOUNT_LENGTH: constant(uint256) = 8  # bytes\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:8:25: F821 undefined name 'uint256'\r\nAMOUNT_LENGTH: constant(uint256) = 8  # bytes\r\n                        ^\r\n./deposit_contract/contracts/validator_registration.v.py:10:15: F821 undefined name 'event'\r\nDepositEvent: event({\r\n              ^\r\n./deposit_contract/contracts/validator_registration.v.py:11:5: F821 undefined name 'pubkey'\r\n    pubkey: bytes[48],\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:12:5: F821 undefined name 'withdrawal_credentials'\r\n    withdrawal_credentials: bytes[32],\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:13:5: F821 undefined name 'amount'\r\n    amount: bytes[8],\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:14:5: F821 undefined name 'signature'\r\n    signature: bytes[96],\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:15:5: F821 undefined name 'index'\r\n    index: bytes[8],\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:18:9: F821 undefined name 'bytes32'\r\nbranch: bytes32[DEPOSIT_CONTRACT_TREE_DEPTH]\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:19:16: F821 undefined name 'uint256'\r\ndeposit_count: uint256\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:22:14: F821 undefined name 'bytes32'\r\nzero_hashes: bytes32[DEPOSIT_CONTRACT_TREE_DEPTH]\r\n             ^\r\n./deposit_contract/contracts/validator_registration.v.py:23:2: F821 undefined name 'public'\r\n@public\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:26:9: F821 undefined name 'self'\r\n        self.zero_hashes[i + 1] = sha256(concat(self.zero_hashes[i], self.zero_hashes[i]))\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:26:35: F821 undefined name 'sha256'\r\n        self.zero_hashes[i + 1] = sha256(concat(self.zero_hashes[i], self.zero_hashes[i]))\r\n                                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:26:42: F821 undefined name 'concat'\r\n        self.zero_hashes[i + 1] = sha256(concat(self.zero_hashes[i], self.zero_hashes[i]))\r\n                                         ^\r\n./deposit_contract/contracts/validator_registration.v.py:26:49: F821 undefined name 'self'\r\n        self.zero_hashes[i + 1] = sha256(concat(self.zero_hashes[i], self.zero_hashes[i]))\r\n                                                ^\r\n./deposit_contract/contracts/validator_registration.v.py:26:70: F821 undefined name 'self'\r\n        self.zero_hashes[i + 1] = sha256(concat(self.zero_hashes[i], self.zero_hashes[i]))\r\n                                                                     ^\r\n./deposit_contract/contracts/validator_registration.v.py:29:2: F821 undefined name 'private'\r\n@private\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:30:2: F821 undefined name 'constant'\r\n@constant\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:31:32: F821 undefined name 'uint256'\r\ndef to_little_endian_64(value: uint256) -> bytes[8]:\r\n                               ^\r\n./deposit_contract/contracts/validator_registration.v.py:35:8: F821 undefined name 'uint256'\r\n    y: uint256 = 0\r\n       ^\r\n./deposit_contract/contracts/validator_registration.v.py:36:8: F821 undefined name 'uint256'\r\n    x: uint256 = value\r\n       ^\r\n./deposit_contract/contracts/validator_registration.v.py:38:13: F821 undefined name 'shift'\r\n        y = shift(y, 8)\r\n            ^\r\n./deposit_contract/contracts/validator_registration.v.py:39:17: F821 undefined name 'bitwise_and'\r\n        y = y + bitwise_and(x, 255)\r\n                ^\r\n./deposit_contract/contracts/validator_registration.v.py:40:13: F821 undefined name 'shift'\r\n        x = shift(x, -8)\r\n            ^\r\n./deposit_contract/contracts/validator_registration.v.py:41:18: F821 undefined name 'convert'\r\n    return slice(convert(y, bytes32), start=24, len=8)\r\n                 ^\r\n./deposit_contract/contracts/validator_registration.v.py:41:29: F821 undefined name 'bytes32'\r\n    return slice(convert(y, bytes32), start=24, len=8)\r\n                            ^\r\n./deposit_contract/contracts/validator_registration.v.py:44:2: F821 undefined name 'public'\r\n@public\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:45:2: F821 undefined name 'constant'\r\n@constant\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:46:27: F821 undefined name 'bytes32'\r\ndef get_deposit_root() -> bytes32:\r\n                          ^\r\n./deposit_contract/contracts/validator_registration.v.py:46:27: F821 undefined name 'bytes32'\r\ndef get_deposit_root() -> bytes32:\r\n                          ^\r\n./deposit_contract/contracts/validator_registration.v.py:47:19: F821 undefined name 'bytes32'\r\n    zero_bytes32: bytes32 = 0x0000000000000000000000000000000000000000000000000000000000000000\r\n                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:48:11: F821 undefined name 'bytes32'\r\n    node: bytes32 = zero_bytes32\r\n          ^\r\n./deposit_contract/contracts/validator_registration.v.py:49:11: F821 undefined name 'uint256'\r\n    size: uint256 = self.deposit_count\r\n          ^\r\n./deposit_contract/contracts/validator_registration.v.py:49:21: F821 undefined name 'self'\r\n    size: uint256 = self.deposit_count\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:51:12: F821 undefined name 'bitwise_and'\r\n        if bitwise_and(size, 1) == 1:  # More gas efficient than `size % 2 == 1`\r\n           ^\r\n./deposit_contract/contracts/validator_registration.v.py:52:20: F821 undefined name 'sha256'\r\n            node = sha256(concat(self.branch[height], node))\r\n                   ^\r\n./deposit_contract/contracts/validator_registration.v.py:52:27: F821 undefined name 'concat'\r\n            node = sha256(concat(self.branch[height], node))\r\n                          ^\r\n./deposit_contract/contracts/validator_registration.v.py:52:34: F821 undefined name 'self'\r\n            node = sha256(concat(self.branch[height], node))\r\n                                 ^\r\n./deposit_contract/contracts/validator_registration.v.py:54:20: F821 undefined name 'sha256'\r\n            node = sha256(concat(node, self.zero_hashes[height]))\r\n                   ^\r\n./deposit_contract/contracts/validator_registration.v.py:54:27: F821 undefined name 'concat'\r\n            node = sha256(concat(node, self.zero_hashes[height]))\r\n                          ^\r\n./deposit_contract/contracts/validator_registration.v.py:54:40: F821 undefined name 'self'\r\n            node = sha256(concat(node, self.zero_hashes[height]))\r\n                                       ^\r\n./deposit_contract/contracts/validator_registration.v.py:56:12: F821 undefined name 'sha256'\r\n    return sha256(concat(node, self.to_little_endian_64(self.deposit_count), slice(zero_bytes32, start=0, len=24)))\r\n           ^\r\n./deposit_contract/contracts/validator_registration.v.py:56:19: F821 undefined name 'concat'\r\n    return sha256(concat(node, self.to_little_endian_64(self.deposit_count), slice(zero_bytes32, start=0, len=24)))\r\n                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:56:32: F821 undefined name 'self'\r\n    return sha256(concat(node, self.to_little_endian_64(self.deposit_count), slice(zero_bytes32, start=0, len=24)))\r\n                               ^\r\n./deposit_contract/contracts/validator_registration.v.py:56:57: F821 undefined name 'self'\r\n    return sha256(concat(node, self.to_little_endian_64(self.deposit_count), slice(zero_bytes32, start=0, len=24)))\r\n                                                        ^\r\n./deposit_contract/contracts/validator_registration.v.py:59:2: F821 undefined name 'public'\r\n@public\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:60:2: F821 undefined name 'constant'\r\n@constant\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:62:12: F821 undefined name 'self'\r\n    return self.to_little_endian_64(self.deposit_count)\r\n           ^\r\n./deposit_contract/contracts/validator_registration.v.py:62:37: F821 undefined name 'self'\r\n    return self.to_little_endian_64(self.deposit_count)\r\n                                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:65:2: F821 undefined name 'payable'\r\n@payable\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:66:2: F821 undefined name 'public'\r\n@public\r\n ^\r\n./deposit_contract/contracts/validator_registration.v.py:70:32: F821 undefined name 'bytes32'\r\n            deposit_data_root: bytes32):\r\n                               ^\r\n./deposit_contract/contracts/validator_registration.v.py:72:12: F821 undefined name 'self'\r\n    assert self.deposit_count < MAX_DEPOSIT_COUNT\r\n           ^\r\n./deposit_contract/contracts/validator_registration.v.py:75:21: F821 undefined name 'uint256'\r\n    deposit_amount: uint256 = msg.value / as_wei_value(1, \"gwei\")\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:75:31: F821 undefined name 'msg'\r\n    deposit_amount: uint256 = msg.value / as_wei_value(1, \"gwei\")\r\n                              ^\r\n./deposit_contract/contracts/validator_registration.v.py:75:43: F821 undefined name 'as_wei_value'\r\n    deposit_amount: uint256 = msg.value / as_wei_value(1, \"gwei\")\r\n                                          ^\r\n./deposit_contract/contracts/validator_registration.v.py:84:24: F821 undefined name 'self'\r\n    amount: bytes[8] = self.to_little_endian_64(deposit_amount)\r\n                       ^\r\n./deposit_contract/contracts/validator_registration.v.py:85:5: F821 undefined name 'log'\r\n    log.DepositEvent(pubkey, withdrawal_credentials, amount, signature, self.to_little_endian_64(self.deposit_count))\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:85:73: F821 undefined name 'self'\r\n    log.DepositEvent(pubkey, withdrawal_credentials, amount, signature, self.to_little_endian_64(self.deposit_count))\r\n                                                                        ^\r\n./deposit_contract/contracts/validator_registration.v.py:85:98: F821 undefined name 'self'\r\n    log.DepositEvent(pubkey, withdrawal_credentials, amount, signature, self.to_little_endian_64(self.deposit_count))\r\n                                                                                                 ^\r\n./deposit_contract/contracts/validator_registration.v.py:88:19: F821 undefined name 'bytes32'\r\n    zero_bytes32: bytes32 = 0x0000000000000000000000000000000000000000000000000000000000000000\r\n                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:89:18: F821 undefined name 'bytes32'\r\n    pubkey_root: bytes32 = sha256(concat(pubkey, slice(zero_bytes32, start=0, len=64 - PUBKEY_LENGTH)))\r\n                 ^\r\n./deposit_contract/contracts/validator_registration.v.py:89:28: F821 undefined name 'sha256'\r\n    pubkey_root: bytes32 = sha256(concat(pubkey, slice(zero_bytes32, start=0, len=64 - PUBKEY_LENGTH)))\r\n                           ^\r\n./deposit_contract/contracts/validator_registration.v.py:89:35: F821 undefined name 'concat'\r\n    pubkey_root: bytes32 = sha256(concat(pubkey, slice(zero_bytes32, start=0, len=64 - PUBKEY_LENGTH)))\r\n                                  ^\r\n./deposit_contract/contracts/validator_registration.v.py:90:21: F821 undefined name 'bytes32'\r\n    signature_root: bytes32 = sha256(concat(\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:90:31: F821 undefined name 'sha256'\r\n    signature_root: bytes32 = sha256(concat(\r\n                              ^\r\n./deposit_contract/contracts/validator_registration.v.py:90:38: F821 undefined name 'concat'\r\n    signature_root: bytes32 = sha256(concat(\r\n                                     ^\r\n./deposit_contract/contracts/validator_registration.v.py:91:9: F821 undefined name 'sha256'\r\n        sha256(slice(signature, start=0, len=64)),\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:92:9: F821 undefined name 'sha256'\r\n        sha256(concat(slice(signature, start=64, len=SIGNATURE_LENGTH - 64), zero_bytes32)),\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:92:16: F821 undefined name 'concat'\r\n        sha256(concat(slice(signature, start=64, len=SIGNATURE_LENGTH - 64), zero_bytes32)),\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:94:11: F821 undefined name 'bytes32'\r\n    node: bytes32 = sha256(concat(\r\n          ^\r\n./deposit_contract/contracts/validator_registration.v.py:94:21: F821 undefined name 'sha256'\r\n    node: bytes32 = sha256(concat(\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:94:28: F821 undefined name 'concat'\r\n    node: bytes32 = sha256(concat(\r\n                           ^\r\n./deposit_contract/contracts/validator_registration.v.py:95:9: F821 undefined name 'sha256'\r\n        sha256(concat(pubkey_root, withdrawal_credentials)),\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:95:16: F821 undefined name 'concat'\r\n        sha256(concat(pubkey_root, withdrawal_credentials)),\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:96:9: F821 undefined name 'sha256'\r\n        sha256(concat(amount, slice(zero_bytes32, start=0, len=32 - AMOUNT_LENGTH), signature_root)),\r\n        ^\r\n./deposit_contract/contracts/validator_registration.v.py:96:16: F821 undefined name 'concat'\r\n        sha256(concat(amount, slice(zero_bytes32, start=0, len=32 - AMOUNT_LENGTH), signature_root)),\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:102:5: F821 undefined name 'self'\r\n    self.deposit_count += 1\r\n    ^\r\n./deposit_contract/contracts/validator_registration.v.py:103:11: F821 undefined name 'uint256'\r\n    size: uint256 = self.deposit_count\r\n          ^\r\n./deposit_contract/contracts/validator_registration.v.py:103:21: F821 undefined name 'self'\r\n    size: uint256 = self.deposit_count\r\n                    ^\r\n./deposit_contract/contracts/validator_registration.v.py:105:12: F821 undefined name 'bitwise_and'\r\n        if bitwise_and(size, 1) == 1:  # More gas efficient than `size % 2 == 1`\r\n           ^\r\n./deposit_contract/contracts/validator_registration.v.py:106:13: F821 undefined name 'self'\r\n            self.branch[height] = node\r\n            ^\r\n./deposit_contract/contracts/validator_registration.v.py:108:16: F821 undefined name 'sha256'\r\n        node = sha256(concat(self.branch[height], node))\r\n               ^\r\n./deposit_contract/contracts/validator_registration.v.py:108:23: F821 undefined name 'concat'\r\n        node = sha256(concat(self.branch[height], node))\r\n                      ^\r\n./deposit_contract/contracts/validator_registration.v.py:108:30: F821 undefined name 'self'\r\n        node = sha256(concat(self.branch[height], node))\r\n                             ^\r\n98    F821 undefined name 'constant'\r\n98\r\n```\r\nhttps://flake8.pycqa.org/en/latest/user/error-codes.html\r\n\r\nOn the flake8 test selection, this PR does _not_ focus on \"_style violations_\" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect).  Instead these tests are focus on runtime safety and correctness:\r\n* E9 tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST).  Often these issues are a sign of unused code or code that has not been ported to Python 3.  These would be compile-time errors in a compiled language but in a dynamic language like Python they result in the script halting/crashing on the user.\r\n* F63 tests are usually about the confusion between identity and equality in Python.  Use ==/!= to compare str, bytes, and int literals is the classic case.  These are areas where __a == b__ is True but __a is b__ is False (or vice versa).  Python >= 3.8 will raise SyntaxWarnings on these instances.\r\n* F7 tests logic errors and syntax errors in type hints\r\n* F82 tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3.  These also would be compile-time errors in a compiled language but in Python a __NameError__ is raised which will halt/crash the script on the user.\r\n",
  "closed_by": {
    "login": "cclauss",
    "id": 3709715,
    "node_id": "MDQ6VXNlcjM3MDk3MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3709715?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cclauss",
    "html_url": "https://github.com/cclauss",
    "followers_url": "https://api.github.com/users/cclauss/followers",
    "following_url": "https://api.github.com/users/cclauss/following{/other_user}",
    "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions",
    "organizations_url": "https://api.github.com/users/cclauss/orgs",
    "repos_url": "https://api.github.com/users/cclauss/repos",
    "events_url": "https://api.github.com/users/cclauss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cclauss/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566430267",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1529#issuecomment-566430267",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1529",
    "id": 566430267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjQzMDI2Nw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T08:06:56Z",
    "updated_at": "2019-12-17T08:42:33Z",
    "author_association": "MEMBER",
    "body": "`validator_registration.v.py` is the deposit contract written in Vyper, not Python. We use `.py` only because we want to use Python syntax highlighting.\r\n\r\nYou can make `flake8` only check the files under `/test_libs/pyspec/eth2spec`, or use Makefile command:\r\n```sh\r\nmake clean && make pyspec && make install_test && make lint\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/566430267/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
