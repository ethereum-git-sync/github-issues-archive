{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1578",
  "id": 551942201,
  "node_id": "MDU6SXNzdWU1NTE5NDIyMDE=",
  "number": 1578,
  "title": "Dual-key voluntary exits",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1137720193,
      "node_id": "MDU6TGFiZWwxMTM3NzIwMTkz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:discussion",
      "name": "general:discussion",
      "color": "F17C67",
      "default": false,
      "description": ""
    },
    {
      "id": 1170173759,
      "node_id": "MDU6TGFiZWwxMTcwMTczNzU5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase1",
      "name": "phase1",
      "color": "F7C242",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 41,
  "created_at": "2020-01-19T15:49:42Z",
  "updated_at": "2022-10-03T06:59:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently voluntary exits are signed by the validator's hot key to avoid validators having to access cold storage. In the context of a staking service owning the hot key and a staking customer owning the cold key, it may make sense for validator exits to be signable by either the hot or cold key to always allow the staking customer to exit the staking service (e.g. if the staking service goes offline).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578/reactions",
    "total_count": 12,
    "+1": 11,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576058893",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-576058893",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 576058893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjA1ODg5Mw==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-19T23:18:33Z",
    "updated_at": "2020-01-19T23:18:33Z",
    "author_association": "NONE",
    "body": "This is more than a _nice to have_ feature, as it allows staking-as-a service platforms to offer a clearer use case to their customers. Thank you, @JustinDrake for proposing this enhancement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576058893/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576060748",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-576060748",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 576060748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjA2MDc0OA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-19T23:41:40Z",
    "updated_at": "2020-01-19T23:41:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is already possible for a staking service to provide a signed `VoluntaryExit` transaction to their customers.  This isn't quite the same, in that the transaction becomes invalid after a couple of forks, but it has the benefit of not requiring any spec changes.\r\n\r\nThis would also make #1543 irrelevant, which would lose a second chance system where the validator service could work with the staker to retrieve funds safely even if the withdrawal key is exposed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576060748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576478969",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-576478969",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 576478969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjQ3ODk2OQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-21T01:22:09Z",
    "updated_at": "2020-01-21T01:22:09Z",
    "author_association": "MEMBER",
    "body": "As discussed with @vbuterin:\r\n\r\nThere is another argument for signing exits with the active signing. In the long term, withdrawal credentials will be a piece of code, or even a pointer to an EE and a message, not a key. So you can't generically \"sign with\" the withdrawal credentials, as it is just instructions for where to send the money when you're done.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576478969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576624111",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-576624111",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 576624111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjYyNDExMQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-21T10:43:19Z",
    "updated_at": "2020-01-22T09:57:20Z",
    "author_association": "NONE",
    "body": "Thank you very much you for your response @djrtwo \r\n\r\n> withdrawal credentials will be a piece of code, or even a pointer to an EE and a message\r\n\r\nIn that case, I would propose to consider the option to _wrap_ into such message the public aspect of a cold key, to give staking services the alternative for customers to trigger their voluntary exit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/576624111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577072922",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577072922",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577072922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzA3MjkyMg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T08:49:17Z",
    "updated_at": "2020-01-22T08:49:17Z",
    "author_association": "MEMBER",
    "body": "Another option would be for the hot key to just pre-sign a VoluntaryExit message.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577072922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577137273",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577137273",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577137273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzEzNzI3Mw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T11:25:24Z",
    "updated_at": "2020-01-22T11:25:24Z",
    "author_association": "MEMBER",
    "body": "> Another option would be for the hot key to just pre-sign a VoluntaryExit message.\r\n\r\n@mcdee pointed out that the pre-signed messages can become invalid after forks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577137273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577138260",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577138260",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577138260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzEzODI2MA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T11:28:23Z",
    "updated_at": "2020-01-22T11:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Two forks, to be fair, which should give holders of the hot key time to sign another message.  Not great if you've buried your withdrawal keys and pre-signed messages in concrete somewhere, but probably something that could be overcome in the majority of cases.\r\n\r\n(I did discuss the idea of using fork-independent signatures for voluntary exits; I believe there was an issue with doing this but I'll admit I can't remember the details.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577138260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577207657",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577207657",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577207657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzIwNzY1Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T14:30:47Z",
    "updated_at": "2020-01-22T14:30:47Z",
    "author_association": "MEMBER",
    "body": ">  just pre-sign a VoluntaryExit message.\r\n\r\nVoluntaryExits have an `epoch` to prevent being played early or maliciously picked up and replayed on a fork much earlier than intended. A pre-signed would have to have an early epoch and be at risk to potential misuse ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577207657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577957361",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577957361",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577957361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzk1NzM2MQ==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T01:42:25Z",
    "updated_at": "2020-01-24T01:42:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any problem with the staking service simply giving a copy of the hot key to their customer, to store alongside the customer's cold key?  The cold key is that one that needs to be kept safe; keeping the hot key also offline doesn't add any security issues.  Really, both keys should be owned by the actual customer, with the hot key only being giving to the service so that they can act on behalf of the customer.\r\n\r\nAnother thing, if it is relevant, is checking the specs:\r\n* An Eth 1 deposit can be for a partial amount, so long as it is >= MIN_DEPOSIT_AMOUNT\r\n* The first time valid deposit data is received for pub key it creates a Validator, with that pub key and withdrawal key (but the validator isn't activated until it has the required amount)\r\n* Subsequent deposits for that pub key are added to the balance, even if the withdrawal key differs\r\n\r\nSo, while there could be multiple withdrawal keys on Eth 1 (e.g. two people share half the cost each), only one of them (the first) is recorded in Eth 2. I am not sure if this is intentional.\r\n\r\nEven if it was intentional (i.e. we go back to the deposit data for each part of the withdrawal), with multiple stakers backing one validator, the situation between half dual-key exit, pre-signed exit, and simply giving the customer the hot key is pretty much the same:\r\n\r\nEither the customer owns the full amount, so should have full access to the hot key; or it is shared between customers, and none of them should have access to unilaterally exit (certainly not the one who just happened to be first).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577957361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577957954",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-577957954",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 577957954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzk1Nzk1NA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T01:45:17Z",
    "updated_at": "2020-01-24T01:45:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there any problem with the staking service simply giving a copy of the hot key to their customer\r\n\r\nIt would open up the validator to being slashed, which neither party would want.  A sane staking service would treat their validator keys with as much, if not more, care then the staker would their withdrawal keys.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/577957954/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578058055",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-578058055",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 578058055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA1ODA1NQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T09:37:36Z",
    "updated_at": "2020-01-24T09:37:36Z",
    "author_association": "MEMBER",
    "body": "> It would open up the validator to being slashed, which neither party would want. A sane staking service would treat their validator keys with as much, if not more, care then the staker would their withdrawal keys.\r\n\r\nThe ideal way to keep the key is in a HSM that only allows certain operations, and exporting the key is not one of them. However, there does need to be a backup of this key anyway (e.g. in case of physical destruction of the HSM), so what could be done is to export the hot key encrypted using the withdrawal key at signup. At that point, the staking service would be creating some form of cold storage backup of the key anyway, so I don't think that it actually worsens security.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578058055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578060172",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-578060172",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 578060172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA2MDE3Mg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T09:44:27Z",
    "updated_at": "2020-01-24T09:44:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure why you would want to encrypt the validator key with the withdrawal key, given the withdrawal key is out of your control.  For a large staking services that may mean getting in touch with hundreds of users and asking them to decrypt something for you if you ever lose your HSM.\r\n\r\n(Backup of validator key is of course important, but not sure I'd want to do it this way.)\r\n\r\n(And totally derailing the issue now, any news on reasonable HSMs that support BLS12-381?  Is SGX or similar TEE the way forward for now?)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578060172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578061107",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-578061107",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 578061107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA2MTEwNw==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T09:47:34Z",
    "updated_at": "2020-01-24T09:47:34Z",
    "author_association": "MEMBER",
    "body": "> Not sure why you would want to encrypt the validator key with the withdrawal key, given the withdrawal key is out of your control.\r\n\r\nBecause the withdrawal key owner is the actual owner of the stake, so they should ultimately control it if they want to\r\n\r\n> For a large staking services that may mean getting in touch with hundreds of users and asking them to decrypt something for you if you ever lose your HSM.\r\n\r\nI'm not suggesting this as the only backup, but as an additional one, that should add almost no risk if executed properly (as the withdrawal key should be in cold storage anyway).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578061107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578067963",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-578067963",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 578067963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA2Nzk2Mw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T10:09:48Z",
    "updated_at": "2020-01-24T10:09:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Because the withdrawal key owner is the actual owner of the stake, so they should ultimately control it if they want to\r\n\r\nAlthough I get the philosophy I don't think the practicalities (and legalities) would allow this.  Allowing multiple entities to have access to the validator key would make the waters incredibly muddy if a slashing event ever occurred, as to who caused what.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578067963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578885045",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-578885045",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 578885045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODg4NTA0NQ==",
    "user": {
      "login": "Magicking",
      "id": 284088,
      "node_id": "MDQ6VXNlcjI4NDA4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/284088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Magicking",
      "html_url": "https://github.com/Magicking",
      "followers_url": "https://api.github.com/users/Magicking/followers",
      "following_url": "https://api.github.com/users/Magicking/following{/other_user}",
      "gists_url": "https://api.github.com/users/Magicking/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Magicking/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Magicking/subscriptions",
      "organizations_url": "https://api.github.com/users/Magicking/orgs",
      "repos_url": "https://api.github.com/users/Magicking/repos",
      "events_url": "https://api.github.com/users/Magicking/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Magicking/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-27T18:25:02Z",
    "updated_at": "2020-01-27T18:25:02Z",
    "author_association": "NONE",
    "body": "From the standpoint of a staking service, I would as much as possible not have a key I hold&use with a hardened system(HSM) be in the hand of an end-user or third-party service, that would go against securing SLA for the said end-user client.\r\n\r\nFrom the standpoint of a user, I would as much as possible prevent a third-party from behaving suboptimally (i.e: not meeting SLA) and I would most probably use another third-party service to ensure that the staking service provider I registered to doesn't go wild.\r\n\r\nAs of now, there is 3 possible actions (**attest**/**voluntarily exit**/**withdraw**) with only 2 types of keys (validator/withdraw), so from the user standpoint, in order to voluntarily exit:\r\n - I either require to obtain the validator key (and most likely give it to the staking service making both user and service at risk)\r\n - Obtain signed transactions (possibly epoch/nonce bound) to **voluntarily exit** and managing those to know when&why to use them (possibly through 3rd party service) and renew them at some point.\r\n\r\nThis proposal is about assigning the role **voluntarily exit** to the withdrawal key, this is a halfway solution to role assignment to keys but a better solution nonetheless as it gives more power to the user!\r\n\r\nSide note:\r\nIn the scenario above where you have 2 services and 1 user, the ideal solution is to have 3 keys with different role except for the key kept in cold storage (withdrawal key) that could/should have more power and a way to rotate/update key specified in the deposit contract. Since we have few roles, they could be stored in a bitfield along with the pubkeys / key commitments.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/578885045/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/582008592",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-582008592",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 582008592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjAwODU5Mg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-04T16:56:24Z",
    "updated_at": "2020-02-04T16:56:24Z",
    "author_association": "MEMBER",
    "body": "> Another option would be for the hot key to just pre-sign a VoluntaryExit message.\r\n\r\nThis was discussed on the latest eth2 call (a week and a half ago) and had general support, including from @hermanjunge. \r\n\r\nI want to gauge sentiment on that path. Any further comments here? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/582008592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/582268238",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-582268238",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 582268238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjI2ODIzOA==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-05T06:56:22Z",
    "updated_at": "2020-02-05T06:57:07Z",
    "author_association": "NONE",
    "body": "> Any further comments here?\r\n\r\nOnly that we need to add a digest of this rationale path somewhere at the **annotated specs project**.\r\n\r\n#### Relevant bits\r\n\r\n* A staking service may provide a `VoluntaryExit` pre-signed message to a customer.\r\n* A 3rd party mechanism may be implemented to scan the validity of a message of the former kind, as certain conditions (such as forks) could render it invalid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/582268238/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/584881171",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-584881171",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 584881171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDg4MTE3MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T22:11:49Z",
    "updated_at": "2020-02-11T22:11:49Z",
    "author_association": "MEMBER",
    "body": "So thinking about this I still think it's a good idea to allow this.\r\nThe main argument against it seems to be that \"at some point in the future the withdrawal key won't be a key but may be a contract address\".\r\n\r\nThat's true, however, I do think that the contract should also be able to initiate withdrawal:\r\n * This will be required for reasonable implementations of validator pools\r\n * Future protocols will probably allow tokenizing of staking. This can only be done if the contract can also initiate withdrawal\r\n\r\nI think we should go further and (in the future) allow the withdrawal key/contract to *change* the staking key. This will mean that loss of the staking key is not an unacceptable loss anymore, and we can for example use simple hardware modules that don't allow any export (not even backup) -- this might mitigate many of the concerns of people being able to hack/acquire lots of keys.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/584881171/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/584997906",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-584997906",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 584997906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDk5NzkwNg==",
    "user": {
      "login": "darcius",
      "id": 25855978,
      "node_id": "MDQ6VXNlcjI1ODU1OTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/25855978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darcius",
      "html_url": "https://github.com/darcius",
      "followers_url": "https://api.github.com/users/darcius/followers",
      "following_url": "https://api.github.com/users/darcius/following{/other_user}",
      "gists_url": "https://api.github.com/users/darcius/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darcius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darcius/subscriptions",
      "organizations_url": "https://api.github.com/users/darcius/orgs",
      "repos_url": "https://api.github.com/users/darcius/repos",
      "events_url": "https://api.github.com/users/darcius/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darcius/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T03:00:19Z",
    "updated_at": "2020-02-12T03:00:19Z",
    "author_association": "NONE",
    "body": "Allowing a contract to initiate withdrawals would simplify our withdrawal process at Rocket Pool a lot and really allow the users to be in full control. Currently we're looking at using a custom p2p package which makes an aggregate key from several decentralised nodes, but we could remove this completely if a smart contract could initiate a withdrawal (less moving parts the better). \r\n\r\nWe'd very much be in favor of that :) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/584997906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585118256",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-585118256",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 585118256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTExODI1Ng==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T09:40:48Z",
    "updated_at": "2020-02-12T09:40:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Although I like the idea of the additional functionality, I think this is starting to overload the function of the withdrawal key; it's moving away from the idea of being the \"lock it away and keep it safe\" key to some sort of general-purpose operator key.\r\n\r\nPerhaps the answer here is to add a \"stake operator\" key or similar, so that admin functions can be separated from moving funds?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585118256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585169949",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-585169949",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 585169949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTE2OTk0OQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T11:51:38Z",
    "updated_at": "2020-02-12T11:51:38Z",
    "author_association": "MEMBER",
    "body": "> Although I like the idea of the additional functionality, I think this is starting to overload the function of the withdrawal key; it's moving away from the idea of being the \"lock it away and keep it safe\" key to some sort of general-purpose operator key.\r\n\r\nI don't quite see it this way -- it is still a key that will only be needed in very exceptional circumstances (loss of staking key, staking operator starts misbehaving, etc. I think with all these proposals it is still perfectly valid to lock this away in a bank safe that you can only access on weekdays.\r\n\r\nA smart contract implementation can then easily separate the roles however you like in the future -- allowing to change the staking key with one set of operators and to withdraw with a different one.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585169949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585218007",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-585218007",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 585218007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTIxODAwNw==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T14:00:11Z",
    "updated_at": "2020-02-12T14:02:22Z",
    "author_association": "NONE",
    "body": "> Although I like the idea of the additional functionality, I think this is starting to overload the function of the withdrawal key; it's moving away from the idea of being the \"lock it away and keep it safe\" key to some sort of general-purpose operator key.\r\n\r\n> I don't quite see it this way -- it is still a key that will only be needed in very exceptional circumstances\r\n\r\nIndeed. This would be more like an _emergency stop button_, to be used **once** per stake. I do not see how far we are going from the \"lock it away and keep it safe\" functionality by adding this feature. \r\n\r\nThe customer would only get his hands into the key in case something really wrong happens with the staking service. It is not in the latter's interest to fail, so adding this feature to the protocol is all about fulfilling UX requirements, impacting positively in adoption.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/585218007/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586595974",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-586595974",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 586595974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU5NTk3NA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-15T14:33:31Z",
    "updated_at": "2020-02-15T14:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Indeed. This would be more like an emergency stop button, to be used once per stake. I do not see how far we are going from the \"lock it away and keep it safe\" functionality by adding this feature.\r\n\r\nMy comment was more to the suggestion by @dankrad :\r\n\r\n> I think we should go further and (in the future) allow the withdrawal key/contract to change the staking key.\r\n\r\nwhich would *not* be a \"stop\" action, only ever sent once in an emergency.  If we want this type of functionality we may be better off considering the roles and requirements all in one go rather than adding feature creep to keys where they shouldn't, just because we only have two keys with which to work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586595974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586618754",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-586618754",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 586618754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjYxODc1NA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-15T16:48:23Z",
    "updated_at": "2020-02-15T16:48:23Z",
    "author_association": "MEMBER",
    "body": "> which would _not_ be a \"stop\" action, only ever sent once in an emergency. If we want this type of functionality we may be better off considering the roles and requirements all in one go rather than adding feature creep to keys where they shouldn't, just because we only have two keys with which to work.\r\n\r\nI disagree, I still see this as an emergency action meaning \"I've lost my key\" or \"My staking provider has gone offline\". It's technically just shortcut to exiting and restaking, which comes with long capital lockup times, which are actually unnecessary given that the same amount of capital will be staked again (and is, of course, still subject to slashing by messages from the previous staking key(s)).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586618754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586658143",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-586658143",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 586658143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjY1ODE0Mw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-16T01:20:58Z",
    "updated_at": "2020-02-16T01:20:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I still see this as an emergency action meaning \"I've lost my key\" or \"My staking provider has gone offline\".\r\n\r\nThe point was that it isn't a \"one and done\": after the operation has taken place the key is still required.\r\n\r\n> (and is, of course, still subject to slashing by messages from the previous staking key(s))\r\n\r\nThat would, as far as I'm aware, require a pretty big change to the spec.\r\n\r\nTo reiterate: I'm all for having a friendlier system for staking, but worry that without working from a set of requirements to a proposed solution we'll end up with a confusion of keys and purposes.  Would you be interested in working with me on a doc outlining such requirements/features as a first step?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/586658143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617166856",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-617166856",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 617166856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE2Njg1Ng==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T13:06:07Z",
    "updated_at": "2020-04-21T13:06:07Z",
    "author_association": "MEMBER",
    "body": "What's the consensus on this proposal? (Feel free to react to this comment with the 👍or  👎 emoji to signal where you stand—👍to support dual-key exits, 👎otherwise.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617166856/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617167933",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-617167933",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 617167933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE2NzkzMw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T13:08:08Z",
    "updated_at": "2020-04-21T13:08:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could we have a \"worry about after phase 0 releases\" option?  There are various items that would make stakers' lives easier, but I don't see them going in before phase 0 has shipped.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617167933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617168968",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-617168968",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 617168968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE2ODk2OA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T13:09:54Z",
    "updated_at": "2020-04-21T13:09:54Z",
    "author_association": "MEMBER",
    "body": "> There are various items that would make stakers' lives easier\r\n\r\nA meta-issue that lists all the items would be fantastic :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617168968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617169837",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-617169837",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 617169837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE2OTgzNw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T13:11:29Z",
    "updated_at": "2020-04-21T13:11:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Happy to create one, if you're happy with me opening a new issue whilst you're so hard at work closing existing ones down :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617169837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617171424",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1578#issuecomment-617171424",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1578",
    "id": 617171424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE3MTQyNA==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T13:13:37Z",
    "updated_at": "2020-04-21T13:13:37Z",
    "author_association": "MEMBER",
    "body": "> if you're happy with me opening a new issue\r\n\r\nMore than happy with fresh constructive issues :) It's the stale not-super-constructive issues that I try to close 😂",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/617171424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
