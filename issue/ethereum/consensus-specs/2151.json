{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2151",
  "id": 765609196,
  "node_id": "MDU6SXNzdWU3NjU2MDkxOTY=",
  "number": 2151,
  "title": "Predicate-based eth1 withdrawal",
  "user": {
    "login": "dankrad",
    "id": 6130607,
    "node_id": "MDQ6VXNlcjYxMzA2MDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dankrad",
    "html_url": "https://github.com/dankrad",
    "followers_url": "https://api.github.com/users/dankrad/followers",
    "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
    "organizations_url": "https://api.github.com/users/dankrad/orgs",
    "repos_url": "https://api.github.com/users/dankrad/repos",
    "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dankrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-12-13T19:23:38Z",
  "updated_at": "2023-12-27T00:14:28Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a discussion about an alternative to #2149. I believe that the simple structure given there is not powerful enough for Eth1 withdrawal, and that the final goal should instead be a contract format that provides a number of predicates to allow or disallow actions.\r\n\r\nThe most fundamental reason for this is that I believe all applications of Eth1 withdrawal addresses are fundamentally very limited if they do not also allow the contract to force the exit of the validator:\r\n * Trustless staking pools cannot work\r\n * Even simpler custodial staking operations will suffer from an additional *non-attributable* blackmail vector\r\n * We have discussed before (and I am still strongly in favour of) giving the withdrawal BLS key the ability to initiate exit, also useful in case of lost staking keys. If we do not also allow this for Eth1 addresses, they will not have this backup\r\n\r\nHere is a possible interface for a predicate-based Eth1 controller contract:\r\n```\r\nallowExit(validator_pubkey)\r\n\r\nallowTransfer(validator_pubkey, amount, destination_address)\r\n```\r\n\r\nThe contract can use any internal logic (and, in the future, beacon chain state) to come to a decision on whether to allow any operation. If any of the predicates is true, then another Eth1 address (which is necessary to pay for gas etc.) can make a call to the validator management precompile (or something equivalent) which will call the Eth1 controller contract to check that the operation is allowed.\r\n\r\nWhat is the advantage of adding this functionality now, when we can't specify how Beacon chain state can be read (or aren't willing to as it will constrain the design space too much)?\r\n * Simple \"profit sharing\" contracts can already now easily add a safeguard to be able to exit in the future, e.g. when a majority of the owners decide to exit\r\n * Staking derivatives can implement a way to exit a certain part of the stake if enough StakingETH comes together, making the promise much more concrete\r\n * More complex staking pools that rely on BFT oracles can already make full use of this even without needing Beacon chain state access\r\n * It allows the contract creator to make a decision now on whether \"profit taking\" transfers should be allowed or not",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744420085",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2151#issuecomment-744420085",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151",
    "id": 744420085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQyMDA4NQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T12:54:56Z",
    "updated_at": "2020-12-14T12:54:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you clarify, that `allowExit(validator_pubkey)` is doing the same as `VoluntaryExit` in Eth2, both signed by validator key, not withdrawal key?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744420085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744428162",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2151#issuecomment-744428162",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151",
    "id": 744428162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQyODE2Mg==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T13:08:37Z",
    "updated_at": "2020-12-14T13:08:49Z",
    "author_association": "MEMBER",
    "body": "Yes. This would implement the suggestion from #1578 at least for Eth1 withdrawal contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744428162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744433169",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2151#issuecomment-744433169",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151",
    "id": 744433169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQzMzE2OQ==",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T13:17:13Z",
    "updated_at": "2020-12-14T13:17:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suggest general Eth1->Eth2 gate if we are going with \"Executable Beacon Chain\" design proposed by @mkalinin . It will allow one to send any Eth2 message using Eth1 system contract. Without Executable Beacon Chain it's not clear how to implement either the interface you propose or general purpose gate. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744433169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744676155",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2151#issuecomment-744676155",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2151",
    "id": 744676155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDY3NjE1NQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T20:00:36Z",
    "updated_at": "2020-12-14T20:00:36Z",
    "author_association": "MEMBER",
    "body": "I don't think we are going to get to a place where we can solidify and commit to such a future-proof predicate interface before we get nearer a merge design and prototypes. Interactions between eth1 and eth2 would require a much more sophisticated machinery than anything currently described in #2149 or even anything we've discussed at all at this point.\r\n\r\nIn the event that we release `ETH1_ADDRESS_WITHDRAWAL_PREFIX` soon with a stated, known limited functionality, this will open up more usecases. In a years time, we can consider a more advanced `PREDICATE_ETH1_WITHDRAWAL_PREFIX`.\r\n\r\n> What is the advantage of adding this functionality now, when we can't specify how Beacon chain state can be read\r\n\r\nI would argue that many usecases are satisfied *without* beacon chain reads. Profit-sharing, withdrawal-key replacement, tokenization of ownership, multi-sig, etc.\r\n\r\nI would suspect any functionality beyond what is in the current PR would block eth1 addr withdrawal credentials for a significant period of time (i.e. at least 9 months)\r\n\r\n----------\r\n\r\nAs for transfers, we don't even know if/how these might manifest. Are these validator<->validator transfers, are these early withdrawal of ETH beyond the 32-ETH min. Do they show up as a new operation? Or are they a special trigger by a block proposer.\r\n\r\nI don't think we've begun to even scratch the surface on Transfers (and related operations) to be able to consider them in this context anytime soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744676155/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
