{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1765",
  "id": 607910573,
  "node_id": "MDU6SXNzdWU2MDc5MTA1NzM=",
  "number": 1765,
  "title": "Clarifying `BlocksByRange`",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    },
    {
      "id": 1725628406,
      "node_id": "MDU6TGFiZWwxNzI1NjI4NDA2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase0",
      "name": "phase0",
      "color": "c2e0c6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/3",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/3",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/3/labels",
    "id": 5392466,
    "node_id": "MDk6TWlsZXN0b25lNTM5MjQ2Ng==",
    "number": 3,
    "title": "v0.12.0",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2020-05-07T02:23:25Z",
    "updated_at": "2020-07-22T06:01:37Z",
    "due_on": null,
    "closed_at": "2020-07-22T06:01:37Z"
  },
  "comments": 2,
  "created_at": "2020-04-27T23:07:06Z",
  "updated_at": "2020-05-11T18:03:25Z",
  "closed_at": "2020-05-11T18:03:25Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "When discussing with @cemozerr, we realized that it was not abundantly clear that `BlocksByRange` should or should not guarantee to return blocks in the same chain (assuming newer than latest finalized). For example take the following:\r\n\r\n* Time 1: canonical view is `A, B, C, D`\r\n* Time 2: start serving request — send `A, B`\r\n* Time 3: local canonical switches to `A, B, C’, D’`\r\n* Time 4: might be any of the following\r\n    a. continue serving same request with original chain -- send `C, D`\r\n    b. continue serving same request with new chain -- send `C’, D’`\r\n    c. stop serving request\r\n\r\n_\"Clients MUST respond with blocks from their view of the current fork choice\"_ is not clear as to whether you fix your view before sending the response _or_ if you should change your view halfway through the request. And thus it is not clear if sending an \"inconsistent\" chain is okay or malicious.\r\n\r\nChatted with @AgeManning, Lighthouse current does (a). If a peer responds with (a) or (c), all good. If a peer of lighthouse responds (b), it is considered malicious.\r\n\r\n--------------------\r\n\r\nChatted with @prestonvanloon and realized that the spec was ambiguous in another way. (Assuming C' and D' exist when the request begins) Prysm currenty sends `A, B, C, C', D, D'` (i.e. the entire sorted-by-slot block tree on the range requested (assuming after finalized)). Although this was not the intended behaviour of the authors of the spec, it is not immediately obvious that it is not a desirable behaviour.\r\n\r\nOn the one hand, more information can be better (send whole tree, and you decide), but on the other hand, this doesn't provide us with strict bounds on the amount of messages an honest node might respond with. That is, if we allow sending the whole tree, you can’t de-score a peer if they send you a bunch of crap. Constructing a bunch of “valid” looking crap is non-trivial, but if you have a bunch of validators and some extra cpu cycles to check a ton of different shufflings, you could bloat out your responses some amount\r\n\r\n--------------------\r\n\r\nThe questions we must answer and clarify in the spec:\r\n1. Should the `BlocksByRange` request strictly return max 1 block per slot? This was the original intention of the spec, but might be worth just quickly discussing the tree approach\r\n2. If the above is to send just a single chain, MUST the chain be consistent? If so, should clarify that a non-consistent set of blocks is malicious\r\n",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620282653",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1765#issuecomment-620282653",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765",
    "id": 620282653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDI4MjY1Mw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T23:10:34Z",
    "updated_at": "2020-04-27T23:10:34Z",
    "author_association": "MEMBER",
    "body": "cc: @arnetheduck @nisdas ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620282653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620298334",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1765#issuecomment-620298334",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1765",
    "id": 620298334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDI5ODMzNA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T00:02:52Z",
    "updated_at": "2020-04-28T00:02:52Z",
    "author_association": "MEMBER",
    "body": "Another thing: we don't actually specify that blocks MUST be valid in `BeaconBlocksByRange` or `BeaconBlocksByRoot`. That said, I expect most clients would disconnect/de-score a peer that was responding with invalid blocks. Likely worth noting this explicitly",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/620298334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
