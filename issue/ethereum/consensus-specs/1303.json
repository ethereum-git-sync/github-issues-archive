{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1303",
  "id": 470137871,
  "node_id": "MDU6SXNzdWU0NzAxMzc4NzE=",
  "number": 1303,
  "title": "Proposed structure for SSZ partials",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170174610,
      "node_id": "MDU6TGFiZWwxMTcwMTc0NjEw",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:SSZ",
      "name": "scope:SSZ",
      "color": "77428D",
      "default": false,
      "description": "Simple Serialize"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-07-19T04:59:17Z",
  "updated_at": "2019-10-17T15:48:43Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### Problem statement\r\n\r\nIn an SSZ partial, we have:\r\n\r\n* A list of generalized indices representing the `leaves` you want to make a partial of (often, this is just a single one)\r\n* A list of generalized indices (`sisters`), that can be generated as a function `get_sister_indices(leaves: Sequence[int]) -> Sequence[int]`\r\n* A set of `hashes` for each index in `leaves` and `sisters`\r\n\r\nHow do we serialize the whole structure? Specifically, how do we serialize which indices the partial is referring to and in what order?\r\n\r\n### Proposed solution\r\n\r\nFirst, we do **not** include `leaves` and `sisters` in the partial. We definitely don't need to include `sisters` because it can simply be calculated from `leaves`. But more importantly, we do not even need to include `leaves`, because much of the time some or all of the information from `leaves` will be known. For example, if we want to make a partial representing a Merkle path to a particular block in history from a history accumulator, it would be more reasonable to represent the block height (as that might already be included alongside the proof anyway), and then calculate the generalized index for the leaf from there. If we want to make a partial representing an entire object in a tree, we can easily calculate the set of generalized indices representing all leaves in that object. Also, this fits with the existing convention for Merkle proofs where the index is separate from the proof.\r\n\r\nSecond, we store `hashes` in the following order: first, the `leaves` in _bit-alphabetical left-to-right order_, then the `sisters` in _descending numerical order_.\r\n\r\nHere's the definition of bit-alphabetical left-to-right order:\r\n\r\n```python\r\ndef split_by_root(ints, depth):\r\n    t, l, r = [], [], []\r\n    for i in ints:\r\n        if i.bit_length() < depth:\r\n            t.append(i)\r\n        elif (i >> (i.bit_length() - depth)) % 2 == 1:\r\n            r.append(i)\r\n        else:\r\n            l.append(i)\r\n    return t, l, r\r\n\r\ndef alphasort(ints, depth=2):\r\n    if len(ints) <= 1:\r\n        return ints\r\n    t, l, r = split_by_root(ints, depth)\r\n    return t + alphasort(l, depth+1) + alphasort(r, depth+1)\r\n```\r\n\r\nExample:\r\n\r\n```\r\n>>> alphasort([1,2,3,4,5,6,7])\r\n[1, 2, 4, 5, 3, 6, 7]\r\n```\r\n\r\nThe idea is that it is a recursive \"top, then left subtree, then right subtree\" order (though `leaves` should never contain both \"top\" and \"left\" (or \"top\" and \"right\")). To see more clearly, here's the tree structure:\r\n\r\n```\r\n   1\r\n 2   3 \r\n4 5 6 7\r\n```\r\n\r\nThe goal of bitwise sorting is so that if a partial includes an entire SSZ object that has multiple levels, the different levels will be provided in order. The goal of the \"leaves then sisters in descending order\" structure is so that a single-item SSZ partial is always identical to a Merkle proof: first the object, then the leaves in the Merkle tree from bottom-to-top order.\r\n\r\nFor example, if we want a partial of just element 5 in the above tree, the order would be [5, 4, 3], just as in a regular Merkle proof. If we want a partial of elements 5 and 6, it would be [5, 6, 7, 4]. For elements 4 and 5, it would be [4, 5, 3].",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513481098",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-513481098",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 513481098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ4MTA5OA==",
    "user": {
      "login": "cdetrio",
      "id": 997681,
      "node_id": "MDQ6VXNlcjk5NzY4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdetrio",
      "html_url": "https://github.com/cdetrio",
      "followers_url": "https://api.github.com/users/cdetrio/followers",
      "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
      "organizations_url": "https://api.github.com/users/cdetrio/orgs",
      "repos_url": "https://api.github.com/users/cdetrio/repos",
      "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdetrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T16:29:05Z",
    "updated_at": "2019-07-20T16:29:05Z",
    "author_association": "MEMBER",
    "body": "How does this relate to previous issues on SSZ partials? It is getting a bit difficult to [follow](https://github.com/ethereum/eth2.0-specs/pull/1261) [the](https://github.com/ethereum/eth2.0-specs/pull/1186) [various](https://github.com/ethereum/eth2.0-specs/pull/1184) [issues](https://github.com/ethereum/eth2.0-specs/pull/1180) [around](https://github.com/ethereum/eth2.0-specs/issues/1160) [SSZ](https://github.com/ethereum/eth2.0-specs/issues/1128) [merklization](https://github.com/ethereum/eth2.0-specs/issues/1115) [indexing](https://github.com/ethereum/eth2.0-specs/issues/1008) [light](https://github.com/ethereum/eth2.0-specs/issues/765) [client](https://github.com/ethereum/eth2.0-specs/issues/644) stuff.\r\n\r\nIf I understand correctly that the ultimate purpose of all this is to specify a [format for multiproofs](https://github.com/ethereum/eth2.0-specs/blob/d1c96c1e0d3b97ac6b436cbaa070e4a39f6b5876/specs/light_client/merkle_proofs.md#merkle-multiproofs), then all this documentation is quite cumbersome relative to the [docs on turbo-geth multiproofs](https://github.com/ledgerwatch/turbo-geth/blob/34afe5e8ad0892b2abb40aedf1f42ea9928deb91/docs/programmers_guide/guide.md#multiproofs). Perhaps it doesn't help that a trie structure, a multi-proof format, and a serialization encoding are all framed in terms of \"SSZ\" (imagine describing eth1 merkle-patricia-trie proofs in terms of \"RLP merkle partials\"), coming together to form a far from simple construct, part of which is ostensibly frozen with the phase0 spec and another part which is, apparently, not.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513481098/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513555339",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-513555339",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 513555339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU1NTMzOQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-21T13:37:20Z",
    "updated_at": "2019-07-21T13:37:20Z",
    "author_association": "MEMBER",
    "body": "It's almost equivalent, the only difference here is that the serialization is simpler, it's a list of hashes rather than being a container. It's also backwards compatible so eg. existing Merkle branches can fit into the format already.\r\n\r\nI generally think of this scheme as \"partials\"; the connection to SSZ serialization and tree hashing is definitely not 100% right, though there are some connections, eg. the way that tree hashing is designed to insist on a binary tree structure without doing weird things to special-case in bytes, is in part there to make partials easier.\r\n\r\nYou're right a lot of those old issues need to be cleaned up; some have been accepted, others deprecated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/513555339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/518397397",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-518397397",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 518397397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODM5NzM5Nw==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T20:58:24Z",
    "updated_at": "2019-08-05T20:58:24Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. **Open** 2. Started 3. Submitted 4. Done \n\n<hr>\n\n__This issue now has a funding of 400.0 DAI (400.0 USD @ $1.0/DAI)  attached to it.__\n\n * If you would like to work on this issue you can 'start work' [on the Gitcoin Issue Details page](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317).\n* Want to chip in? Add your own contribution [here](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317).\n* Questions? Checkout <a href='https://gitcoin.co/help'>Gitcoin Help</a> or the <a href='https://gitcoin.co/slack'>Gitcoin Slack</a>\n* $145,505.05 more funded OSS Work available on the [Gitcoin Issue Explorer](https://gitcoin.co/explorer)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/518397397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/519725539",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-519725539",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 519725539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTcyNTUzOQ==",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T23:41:45Z",
    "updated_at": "2019-08-08T23:41:45Z",
    "author_association": "MEMBER",
    "body": "> We do not even need to include leaves, because much of the time some or all of the information from leaves will be known.\r\n\r\nI'm not quite convinced on this. For example, if we think of EEs as pure state transition functions (for illustrative purposes, I'm breaking up the \"data blob\" parameter into `witness` and `transactions`):\r\n\r\n```rust\r\nfn state_transition(\r\n    beacon_state_root: Bytes32,\r\n    pre_state_root: Bytes32, \r\n    witness: Vec<Bytes32>, \r\n    transactions: Vec<Transaction>\r\n) -> Bytes32;\r\n```\r\n\r\nAnd we imagine that the state root of the EE is the root of this tree:\r\n\r\n```rust\r\n// FixedVector[u256; 4]\r\n//\r\n//             +- 1 -+\r\n//            /      \\\r\n//           2       3\r\n//          / \\     / \\\r\n//         4  5    6  7\r\n```\r\nWe'll assume there is silly transaction that simply increases the sender's balance. The EE may receive a transaction package that looks something like this:\r\n\r\n```jsonc\r\n[\r\n  {\r\n    \"amount\": 0,\r\n    \"sender\": 2,\r\n    // \"witness\": [\"ABC\", \"DEF\", \"GHI\"]\r\n  },\r\n  {\r\n    \"amount\": 0,\r\n    \"sender\": 3,\r\n    // \"witness\": [\"JKL\", \"MNO\", \"PQR\"]\r\n  },\r\n```\r\nWhere the witnesses would have been combined into the multiproof: `[\"ABC\", \"JKL\", \"MNO\", \"DEF\"]` (e.g. chunks `[5, 6, 7, 4]`).\r\n\r\nAt this point, when the first transaction is executed and needs the path to the account at address `1`, I'm not sure how it is going to locate the correct chunks from the witness as it has no visibility into what leaves other transactions will be accessing.\r\n\r\nI can think of two possible solutions off the top of my head:\r\n\r\n1. There is an access list which declares the paths that will touched by the transaction package; in which case the EE will be able to calculate the accessed leaf indexes. Maybe this specifies a type of partial that is a subset of the structure described above?\r\n\r\n2. The leaf node indexes are explicitly included in the partial structure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/519725539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520192652",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-520192652",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 520192652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDE5MjY1Mg==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-11T01:34:36Z",
    "updated_at": "2019-08-11T01:34:36Z",
    "author_association": "NONE",
    "body": "💰 A crowdfund contribution worth 0.10000  DAI (0.1 USD @ $1.0/DAI) has been attached to this funded issue  from @.💰 \n\nWant to chip in also? Add your own contribution [here](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/520192652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/521314433",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-521314433",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 521314433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMxNDQzMw==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T16:15:45Z",
    "updated_at": "2019-08-14T16:15:45Z",
    "author_association": "NONE",
    "body": "@uivlis Hello from Gitcoin Core - are you still working on this issue? Please submit a WIP PR or comment back within the next 3 days or you will be removed from this ticket and it will be returned to an ‘Open’ status. Please let us know if you have questions!\n* [x] reminder (3 days)\n* [ ] escalation to mods (6 days)\n\nFunders only: Snooze warnings for [1 day](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=1) | [3 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=3) | [5 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=5) | [10 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=10) | [100 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=100)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/521314433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/521317240",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-521317240",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 521317240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMxNzI0MA==",
    "user": {
      "login": "uivlis",
      "id": 7414543,
      "node_id": "MDQ6VXNlcjc0MTQ1NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7414543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uivlis",
      "html_url": "https://github.com/uivlis",
      "followers_url": "https://api.github.com/users/uivlis/followers",
      "following_url": "https://api.github.com/users/uivlis/following{/other_user}",
      "gists_url": "https://api.github.com/users/uivlis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uivlis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uivlis/subscriptions",
      "organizations_url": "https://api.github.com/users/uivlis/orgs",
      "repos_url": "https://api.github.com/users/uivlis/repos",
      "events_url": "https://api.github.com/users/uivlis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uivlis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-14T16:23:16Z",
    "updated_at": "2019-08-14T16:23:16Z",
    "author_association": "NONE",
    "body": "Yeah, I'm still working, trying to figure out so much new jargon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/521317240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/523087059",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-523087059",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 523087059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzA4NzA1OQ==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-20T16:15:38Z",
    "updated_at": "2019-08-20T16:15:38Z",
    "author_association": "NONE",
    "body": "@uivlis Hello from Gitcoin Core - are you still working on this issue? Please submit a WIP PR or comment back within the next 3 days or you will be removed from this ticket and it will be returned to an ‘Open’ status. Please let us know if you have questions!\n* [x] reminder (3 days)\n* [ ] escalation to mods (6 days)\n\nFunders only: Snooze warnings for [1 day](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=1) | [3 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=3) | [5 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=5) | [10 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=10) | [100 days](https://gitcoin.co/issue/ethereum/eth2.0-specs/1303/3317?snooze=100)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/523087059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526366715",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-526366715",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 526366715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjM2NjcxNQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-29T21:19:07Z",
    "updated_at": "2019-08-29T21:35:14Z",
    "author_association": "MEMBER",
    "body": "As discussed during EthBerlin (with Quilt, Vitalik, GBallet) and shared in the call, I created this repository to describe an idea to use helper-data to speed up tree lookups and verification, you could call the first approach \"ssz tree offsets\": https://github.com/protolambda/eth-merkle-trees **_\\[experimental and untested\\]_**\r\nThere is a wide effort to make multi-proof merkle trees better, also in Eth1 (@AlexeyAkhunov, @karalabe, @gballet).\r\n\r\nStoring the bottom node data in a packed form is simplified when you can forget about what exactly is a witness, and what a leaf node. For batching it also makes a lot of sense to me to forget about the difference, as items in the batch may have one witness that is a leaf in another. Merging and verifying is just a lot more complicated (to do efficiently at least) if application differences like this influence lower level encoding.\r\n\r\nAlso, lookups for reading and in-place edits are important if we like to back a partial with a multi-proof, and have the partial behave as an interface. (less memory changes and copies in ewasm if the proof does not need to be deserialized at all).\r\n\r\nThen, an instruction-set like approach (Alexey) is interesting for complicated structures like MPT, but I don't see how well it really speeds up lookups of leaves, and lookups should be cheap (do not construct the whole tree if possible). So I believe an approach with some kind of structural helper data, like the tree-offsets, would be better:\r\n- No memory copies / parsing to make sense of the data\r\n- Scale linearly with the amount of bottom nodes, regardless of structural shape\r\n- Good for lookups: just `O(depth)` operations for lookup. (and possible to shorten during compile time for static parts)\r\n- Good for verification: implemented a multi-proof verify function that scans the data with minimal memory, and constructs the root in a non-recursive manner (no stack-frames, yay). It is experimental and untested though, as I did not have the opportunity to focus on just this.\r\n- Good replacement for those edge-cases where you need to encode dynamic shapes, and do not want to encode full generalized indices.\r\n\r\nFor Merkle Patricia Tree optimizations, representing MPTs as binary trees, and then changing the verification to use a bigger scratchpad-stack to hash hexary nodes, could be a solution to backport these optimizations (or at least run them efficiently in ewasm). And the encoding may also just be a start for a better encoding to back MPTs in Geth, if we add support for MPT extension nodes.\r\n\r\nThe thing where I still have doubts about is where to encode these offsets: it's simple and small, just doable in a single depth-first walk that encodes `2/32` extra data for most proofs. But at the same time there are places where you can know it during compile time and not have to read it from input.\r\n\r\nAfter Eth2 interop week (= ends about 2 weeks from now) I like to pick this up with whoever is working on this. I am leaving it as-is now to focus on phase0 things.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/526366715/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 2,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/543238702",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1303#issuecomment-543238702",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1303",
    "id": 543238702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzIzODcwMg==",
    "user": {
      "login": "gitcoinbot",
      "id": 27903976,
      "node_id": "MDQ6VXNlcjI3OTAzOTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27903976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitcoinbot",
      "html_url": "https://github.com/gitcoinbot",
      "followers_url": "https://api.github.com/users/gitcoinbot/followers",
      "following_url": "https://api.github.com/users/gitcoinbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitcoinbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitcoinbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitcoinbot/subscriptions",
      "organizations_url": "https://api.github.com/users/gitcoinbot/orgs",
      "repos_url": "https://api.github.com/users/gitcoinbot/repos",
      "events_url": "https://api.github.com/users/gitcoinbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitcoinbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-17T15:48:43Z",
    "updated_at": "2019-10-17T15:48:43Z",
    "author_association": "NONE",
    "body": "Issue Status: 1. Open 2. **Cancelled** \n\n<hr>\n\n__The funding of 400.0 DAI (plus a crowdfund of 0.1 DAI worth 0.1 USD) (400.0 USD @ $1.0/DAI) attached to this issue has been **cancelled** by the bounty submitter__\n\n \n* Questions? Checkout <a href='https://gitcoin.co/help'>Gitcoin Help</a> or the <a href='https://gitcoin.co/slack'>Gitcoin Slack</a>\n* $136,138.46 more funded OSS Work available on the [Gitcoin Issue Explorer](https://gitcoin.co/explorer)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/543238702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
