{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/871",
  "id": 427846393,
  "node_id": "MDU6SXNzdWU0Mjc4NDYzOTM=",
  "number": 871,
  "title": "Network message SSZ schema",
  "user": {
    "login": "jannikluhn",
    "id": 29854669,
    "node_id": "MDQ6VXNlcjI5ODU0NjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jannikluhn",
    "html_url": "https://github.com/jannikluhn",
    "followers_url": "https://api.github.com/users/jannikluhn/followers",
    "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
    "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
    "repos_url": "https://api.github.com/users/jannikluhn/repos",
    "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1295438707,
      "node_id": "MDU6TGFiZWwxMjk1NDM4NzA3",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:networking",
      "name": "scope:networking",
      "color": "F596AA",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-04-01T18:23:03Z",
  "updated_at": "2019-08-09T05:39:41Z",
  "closed_at": "2019-08-09T05:39:41Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "(Continuing discussion from the PR)\r\n\r\nTwo nitpicks regarding the network message serialization format:\r\n\r\n1. If we use SSZ, we need a single base schema that embeds the payload message for network messages as otherwise receivers don't know how to decode it. However right now, the spec defines three message types:\r\n\r\n```\r\nRequest: (\r\n    id: uint64\r\n    method_id: uint16\r\n    body: Request\r\n)\r\n\r\nReponse: (\r\n    id: uint64\r\n    response_code: uint16\r\n    result: bytes\r\n)\r\n\r\nErrorResponse: (\r\n    id: uint64\r\n    response_code: uint16\r\n    result: bytes\r\n)\r\n```\r\n\r\n`Response` and `ErrorResponse` are identical, but `Request` differs a little. It would also be nice to give them the same name and field names, because that's what implementations will use when they first decode a message (e.g. `Message` with `message_id`, `request_id`, and `body`). `body` would be a `bytes` that carries the SSZ serialized request/response/error. This adds an additional 4-byte prefix, but I think that's unavoidable.\r\n\r\n2. The spec says\r\n\r\n```\r\nThe result member is OPTIONAL on errors, and MAY contain additional information about the error.\r\n```\r\n\r\nThere aren't optional fields in SSZ right now, so it should just be a blank string if there's no information.\r\n\r\n@mslipper \r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480668557",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-480668557",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 480668557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDY2ODU1Nw==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T03:12:27Z",
    "updated_at": "2019-04-08T03:12:27Z",
    "author_association": "MEMBER",
    "body": "Thanks @jannikluhn! These are points well taken. During the networking workshop tomorrow I intend on working through these with the implementation teams; it's becoming clear that SSZ isn't a good choice for network data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480668557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480709129",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-480709129",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 480709129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDcwOTEyOQ==",
    "user": {
      "login": "jannikluhn",
      "id": 29854669,
      "node_id": "MDQ6VXNlcjI5ODU0NjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29854669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jannikluhn",
      "html_url": "https://github.com/jannikluhn",
      "followers_url": "https://api.github.com/users/jannikluhn/followers",
      "following_url": "https://api.github.com/users/jannikluhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jannikluhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jannikluhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jannikluhn/subscriptions",
      "organizations_url": "https://api.github.com/users/jannikluhn/orgs",
      "repos_url": "https://api.github.com/users/jannikluhn/repos",
      "events_url": "https://api.github.com/users/jannikluhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jannikluhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T07:02:45Z",
    "updated_at": "2019-04-08T07:02:45Z",
    "author_association": "MEMBER",
    "body": "Personally I totally agree with this, but many people seem to like using the same format for everything. If we go with something else, I'd suggest RLP: It works quite well for Eth1, there are tons of implementations, it doesn't require a schema (at least not for the first decoding step), and messages can be extended.\r\n\r\nSadly, I'm not going to be able to participate in the workshop, but I'm looking forward to hear about the results.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480709129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481511646",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-481511646",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 481511646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTUxMTY0Ng==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T02:43:29Z",
    "updated_at": "2019-04-10T02:43:29Z",
    "author_association": "MEMBER",
    "body": "So I just overheard the discussion from the workshop yesterday, and if the most important thing that is missing from SSZ right now is an Option type and a Null object, I think it may be possible to add this with 10ish lines of code. I think having the same serialization format in the core and networking would be nice. However I am wondering what the future implications with regards to upgrade (#861) are?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481511646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481688625",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-481688625",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 481688625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY4ODYyNQ==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T13:22:55Z",
    "updated_at": "2019-04-10T13:23:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "We have an option type (if you view option as a special-cased list of 0 or 1 elements) - the above messages could be defined as:\r\n```\r\nRequest: (\r\n    id: uint64\r\n    method_id: uint16\r\n    body: Request\r\n)\r\n\r\nReponse: (\r\n    id: uint64\r\n    responseData: [Payload]\r\n    error: [ErrorResponse]\r\n)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481688625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481691608",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-481691608",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 481691608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY5MTYwOA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T13:30:38Z",
    "updated_at": "2019-04-10T13:30:38Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  it doesn't require a schema\r\n\r\nthis is a bit of a stretch - to do something meaningful with the data you need to interpret the values even in RLP - that's effectively what a schema does. it's just a matter of how many steps there are between raw bytes and useful data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481691608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481709370",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-481709370",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 481709370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTcwOTM3MA==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T14:15:47Z",
    "updated_at": "2019-04-10T14:15:47Z",
    "author_association": "MEMBER",
    "body": "@\r\n\r\n> We have an option type (if you view option as a special-cased list of 0 or 1 elements) - the above messages could be defined as:\r\n\r\nI see, this seems like a very hacky way of achieving this. Have a look at #893 for my suggestion?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481709370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481862163",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-481862163",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 481862163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg2MjE2Mw==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T20:56:42Z",
    "updated_at": "2019-04-10T20:56:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "my initial reaction would be that it doesn't carry its weight, considering the list trick. you can always decorate your code to treat the list as an option, but adding a special byte encoding and hashing instruction for it seems unnecessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/481862163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485229420",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-485229420",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 485229420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIyOTQyMA==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-21T06:47:40Z",
    "updated_at": "2019-04-21T06:47:40Z",
    "author_association": "MEMBER",
    "body": "Opened PR https://github.com/ethereum/eth2.0-specs/pull/974 with my suggested solution.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/485229420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/519785485",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/871#issuecomment-519785485",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/871",
    "id": 519785485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTc4NTQ4NQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-09T05:39:41Z",
    "updated_at": "2019-08-09T05:39:41Z",
    "author_association": "MEMBER",
    "body": "closing in favor of #1328",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/519785485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
