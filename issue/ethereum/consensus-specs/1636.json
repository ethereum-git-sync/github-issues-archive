{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1636",
  "id": 575077942,
  "node_id": "MDU6SXNzdWU1NzUwNzc5NDI=",
  "number": 1636,
  "title": "Fork choice: checking FFG source/target",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324776822,
      "node_id": "MDU6TGFiZWwxMzI0Nzc2ODIy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:fork-choice",
      "name": "scope:fork-choice",
      "color": "81C7D4",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-03-04T01:43:32Z",
  "updated_at": "2020-05-07T15:41:14Z",
  "closed_at": "2020-05-07T15:41:14Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In [fork choice attestation processing](https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/fork-choice.md#on_attestation), the `attestation.data.target` and `attestation.data.source` fields are not checked to ensure they are ancestors/descendants of each other and `attestation.data.beacon_block_root`.\r\n\r\nWhat does this mean?\r\n\r\n### 1. Faulty actors influence fork choice\r\n\r\nAn attestation where the source/target/beacon_block_root are on different chains is produced by a faulty validator.\r\n\r\nI would expect that good practice would be to drop any message that is provably invalid and ban the peer. \r\n\r\n### 2. You can pick-and-choose your shuffling/validator registry\r\n\r\nSay we have 3 chains:\r\n\r\n```\r\n   2    4    8     <- slot 36 (epoch 1)\r\n   |    |    |\r\n   .    .    .\r\n   .    .    .\r\n   .    .    .\r\n   |    |    |\r\n   1    3    5     <- slot 32 (epoch 1)\r\n    \\   |   /\r\n        |\r\n        .\r\n        .\r\n        .\r\n```\r\n\r\nConsider that I want to set `attestation.data.beacon_block_root` to block 4. I am able to choose whether to set `attestation.data.target` to blocks 1, 3 or 5.\r\n\r\nThe honest choice is 3, but perhaps in that state I am scheduled to vote at slot 63 and instead I want to vote earlier. Now I can pick between the other two states to find the earliest assignment and have my vote included in fork choice earlier than naturally intended.",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/594356028",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1636#issuecomment-594356028",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1636",
    "id": 594356028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDM1NjAyOA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-04T06:49:39Z",
    "updated_at": "2020-03-04T06:49:39Z",
    "author_association": "MEMBER",
    "body": "When there is no partitions in the network it doesn't matter whether vote was dropped or not. As fork choice will not be abused unless there is a 51% attacker. However, it could be exploited if adversary were able to partition the network to eclipse one of those parts with invalid votes.\r\n\r\nA discrepancy between on-chain and fork choice checks has been discussed in https://github.com/ethereum/eth2.0-specs/issues/1408 and https://github.com/ethereum/eth2.0-specs/issues/1456. I and I believe @ericsson49 are on the same page with @paulhauner regarding that:\r\n> I would expect that good practice would be to drop any message that is provably invalid and ban the peer.\r\n\r\nIn addition we advocate for making on-chain checks explicitly run by the fork choice and get rid of dependency from validation on the network layer. Is that what you implied @paulhauner ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/594356028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
