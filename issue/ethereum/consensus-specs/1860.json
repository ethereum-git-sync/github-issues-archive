{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1860",
  "id": 628380315,
  "node_id": "MDU6SXNzdWU2MjgzODAzMTU=",
  "number": 1860,
  "title": "Slashing  penalty needs to depend on multiplicity of offending messages",
  "user": {
    "login": "kladkogex",
    "id": 13399135,
    "node_id": "MDQ6VXNlcjEzMzk5MTM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13399135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kladkogex",
    "html_url": "https://github.com/kladkogex",
    "followers_url": "https://api.github.com/users/kladkogex/followers",
    "following_url": "https://api.github.com/users/kladkogex/following{/other_user}",
    "gists_url": "https://api.github.com/users/kladkogex/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kladkogex/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kladkogex/subscriptions",
    "organizations_url": "https://api.github.com/users/kladkogex/orgs",
    "repos_url": "https://api.github.com/users/kladkogex/repos",
    "events_url": "https://api.github.com/users/kladkogex/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kladkogex/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-06-01T11:54:45Z",
  "updated_at": "2023-12-11T13:26:44Z",
  "closed_at": "2023-12-11T13:26:44Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Currently the slashing penalty does not depend on how many concurrent offending messages were signed by the malicious validator.\r\n\r\nAs an example, if a malicious proposer signs 1000 alternative proposals, effectively mounting a massive DOS attack  on the network she will still incur the minimum penalty  of 1 ETH, assuming no other validators misbehave.\r\n\r\nNote that once the validator is slashed, she becomes unslashable and, therefore, immune to further whisteblower messages.  \r\n\r\nWhat I propose, is that if multiple offending messages for the same protocol phase are submitted by whistleblowers,  the validator is punished for each new message submitted.  As an example if the validator created 1000 offending blocks, the first 32 whistleblower submissions will be paid and the validator will essentially be fully slashed.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637662439",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1860#issuecomment-637662439",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1860",
    "id": 637662439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzY2MjQzOQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T16:23:15Z",
    "updated_at": "2020-06-02T16:23:15Z",
    "author_association": "MEMBER",
    "body": "You are certainly correct that once a validator goes rogue, they can make an infinite number of valid-looking message for \"free\".\r\n\r\nTo mitigate this DoS issue, there are validation conditions on the wire that prevent broadcasting of multiple valid blocks/attestations for the same validator(s) in the same time range (slot for block, epoch for attestation)\r\n\r\nCheck all the gossip conditions out here: https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/p2p-interface.md#global-topics\r\n\r\nRelevant conditions:\r\n* [IGNORE] The block is the first block with valid signature received for the proposer for the slot, signed_beacon_block.message.slot.\r\n* [IGNORE] The aggregate is the first valid aggregate received for the aggregator with index aggregate_and_proof.aggregator_index for the epoch aggregate.data.target.epoch.\r\n* [IGNORE] There has been no other valid attestation seen on an attestation subnet that has an identical attestation.data.target.epoch and participating validator index\r\n\r\n(there are similar conditions for the other operation types/topics)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637662439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
