{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3054",
  "id": 1419521642,
  "node_id": "I_kwDOCOoGbc5UnC5q",
  "number": 3054,
  "title": "`withdraw_balance` decreases up to the validator's balance but produces a receipt up to the parameter",
  "user": {
    "login": "potuz",
    "id": 16044918,
    "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/potuz",
    "html_url": "https://github.com/potuz",
    "followers_url": "https://api.github.com/users/potuz/followers",
    "following_url": "https://api.github.com/users/potuz/following{/other_user}",
    "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
    "organizations_url": "https://api.github.com/users/potuz/orgs",
    "repos_url": "https://api.github.com/users/potuz/repos",
    "events_url": "https://api.github.com/users/potuz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/potuz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3603189949,
      "node_id": "LA_kwDOCOoGbc7WxFC9",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Capella",
      "name": "Capella",
      "color": "B5F874",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-10-22T21:43:30Z",
  "updated_at": "2022-10-25T18:14:23Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is not an issue in the runtime spec as checks for underflows are performed. However I think it's bad practice and it may probably be worth to clean the fact that in `withdraw_balance`\r\n\r\n```python\r\ndef withdraw_balance(state: BeaconState, validator_index: ValidatorIndex, amount: Gwei) -> None:\r\n    # Decrease the validator's balance\r\n    decrease_balance(state, validator_index, amount)\r\n    # Create a corresponding withdrawal receipt\r\n    withdrawal = Withdrawal(\r\n        index=state.next_withdrawal_index,\r\n        address=ExecutionAddress(state.validators[validator_index].withdrawal_credentials[12:]),\r\n        amount=amount,\r\n    )\r\n ```\r\n If this function is called with `amount > state.balances[validator_index]` then the validator's balance would be zeroed but the receipt will be emitted for `amount` which will trigger the operation in the execution layer to refund the validator with more than it's beacon-chain balance. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1290961180",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3054#issuecomment-1290961180",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3054",
    "id": 1290961180,
    "node_id": "IC_kwDOCOoGbc5M8oEc",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T18:14:23Z",
    "updated_at": "2022-10-25T18:14:23Z",
    "author_association": "MEMBER",
    "body": "can confirm the way this is used in the spec as of https://github.com/ethereum/consensus-specs/commit/3c7c3a9c973935850c63e35e52e6acbd75b30e0d is fine but adding a spec test for this case would be good\r\n\r\nI do agree there is likely a \"safer\" API here that we could consider",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1290961180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
