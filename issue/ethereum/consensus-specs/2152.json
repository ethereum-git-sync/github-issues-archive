{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2152",
  "id": 766341088,
  "node_id": "MDU6SXNzdWU3NjYzNDEwODg=",
  "number": 2152,
  "title": "Is it even worth running an Eth1 node for solo stakers in Phase 0?",
  "user": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2562967699,
      "node_id": "MDU6TGFiZWwyNTYyOTY3Njk5",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:accounting",
      "name": "scope:accounting",
      "color": "60373E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-12-14T11:47:59Z",
  "updated_at": "2023-01-30T16:03:33Z",
  "closed_at": "2023-01-30T16:03:32Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "An heretical click-baity title. But consider the economics.\r\n\r\nIn principle, the penalty for not having current knowledge of the deposit contract via an Eth1 node is that you cannot include pending deposits in your blocks, and thus your proposed blocks are invalid.  By my calculations, 97% of expected validator rewards accrue from attestations and 3% from block proposals. So the maximum penalty for not connecting to an Eth1 node is 3% of the expected rewards.\r\n\r\nIn practice, however, it is much less than that. A proposed block is invalid with respect to deposit inclusion only when there are pending deposits to be included. Let's see how often that applies.\r\n\r\nLooking at slots 32768 through 65535 on the beacon chain mainnet, a period of heavy onboarding of new validators:\r\n  - 32768 slots contain\r\n  - 32228 blocks,\r\n  - 453 (1.4%) of which contain deposits.\r\n\r\nThus, my expected loss in rewards from not connecting to an Eth1 node is 1.4% * 3% = 0.042%. At, say, 15% annual return on 32 ETH, with an ETH price of $600, my expected missed reward per validator from not running an Eth1 node will be $1.21 per year.\r\n\r\nGiven the hassle and resource requirements of running an Eth1 node, doing so does not seem economically rational on this basis.\r\n\r\nMoreover, there is an implied incentive *not* to include deposits (or make accurate Eth1 votes) as preventing new validators from entering the network increases my annual return rate.\r\n\r\n### Recommendations\r\n\r\nObviously, the network is healthier if people are connecting to Eth1 nodes. I suggest the following.\r\n\r\n1. Substantially reduce the number of deposits included per beacon block from 16 to one (set `MAX_DEPOSITS` to 1). Only four activations may be processed per epoch (rising to 5 and more in future, but always substantially fewer than 32), so inclusion of deposits in blocks is not the rate limiting step for onboarding validators, if most deposits are of 32 ETH.\r\n**Con**: None, if validators connect to Eth1 nodes as desired. Otherwise, some increase in invalid blocks.\r\n**Pro**: Spread the penalties more broadly for not being connected to an Eth1 node; reduce the maximum block size.\r\n\r\n2. Apply a substantial reward for including a deposit. The should be a good fraction of the deposit amount (1/256?) to incentivise healthy behaviour with respect to Eth1.\r\n**Con**: Increased issuance. But the cost is well bounded by the total amount of Eth2 that can be deposited.\r\n**Pro**: Incentivise healthy behaviour with respect to Eth1, which is effectively barely incentivised currently. This also resolves #2018 by providing an (indirect) incentive to get Eth1 votes correct.",
  "closed_by": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152/reactions",
    "total_count": 5,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 5,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744450326",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2152#issuecomment-744450326",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152",
    "id": 744450326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQ1MDMyNg==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T13:46:10Z",
    "updated_at": "2020-12-14T13:46:10Z",
    "author_association": "MEMBER",
    "body": "I think this is a good time to point out that if you have several behaviours you want to incentivise, then the best way to do it is not additive but multiplicative. Idea: You rate all validator desired behaviours on a scale from `0.0` to `1.0`, and multiply them together. Total rewards are simply max rewards times this factor. Anyone completely failing on any of the behaviours will get no reward.\r\n\r\nIndependent thought, specific to this problem: I think this can be solved by adding custody of Eth1 blocks to the attestations. Thanks to [0.01 bit proof of custody](https://ethresear.ch/t/a-0-001-bit-proof-of-custody/7409), this comes with no overhead on the beacon chain and only a 0.1% loss in attestations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/744450326/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/747465241",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2152#issuecomment-747465241",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152",
    "id": 747465241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzQ2NTI0MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T14:17:48Z",
    "updated_at": "2020-12-17T14:32:26Z",
    "author_association": "MEMBER",
    "body": "To be honest, this is a bug. The intention is for proposing to account for ~`1 / PROPOSER_REWARD_QUOTIENT` of total validator rewards, but it is in fact `1 / PROPOSER_REWARD_QUOTIENT` of a base_reward (each base_reward is 1/4th of the total reward so is 1/32 of total rewards, the 3% you mention).\r\n\r\nThis is already fixed in the accounting reform PR (something we'd like to see in mid next year). This is also naturally balancing in the sense that if some validators don't produce blocks, there are more attestations for the subsequent validator to include (yes, this fails in the event that blocks are entirely full..)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/747465241/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/747537241",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2152#issuecomment-747537241",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152",
    "id": 747537241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUzNzI0MQ==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T16:08:38Z",
    "updated_at": "2020-12-17T16:08:38Z",
    "author_association": "MEMBER",
    "body": "Even if we make it `1/8=12.5%`, I doubt that the rationality dynamics actually change. Assuming that an Eth1 node is >50% of the cost of running a validator, it will probably be rational to not run one for small scale (<5 validators) stakers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/747537241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1408883934",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2152#issuecomment-1408883934",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2152",
    "id": 1408883934,
    "node_id": "IC_kwDOCOoGbc5T-dze",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T16:03:32Z",
    "updated_at": "2023-01-30T16:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is long dead and essentially resolved post-Merge, so closing.\r\n\r\nI still think that the the best option would have been to set `MAX_DEPOSITS` to `1`, but it's academic now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1408883934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
