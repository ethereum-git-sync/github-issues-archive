{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2018",
  "id": 679609306,
  "node_id": "MDU6SXNzdWU2Nzk2MDkzMDY=",
  "number": 2018,
  "title": "Analysis of Eth1 data votes on Medalla",
  "user": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1667875443,
      "node_id": "MDU6TGFiZWwxNjY3ODc1NDQz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:eth1-peg",
      "name": "scope:eth1-peg",
      "color": "B19693",
      "default": false,
      "description": ""
    },
    {
      "id": 1725628406,
      "node_id": "MDU6TGFiZWwxNzI1NjI4NDA2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/phase0",
      "name": "phase0",
      "color": "c2e0c6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-08-15T17:01:17Z",
  "updated_at": "2023-01-30T16:05:47Z",
  "closed_at": "2023-01-30T16:05:46Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I extracted the Eth1 data votes from the Medalla network at the end of each Eth1 data voting period (1024 slots). The analysis covers the 72 periods (73,728 slots, 2304 epochs, ~10 days) that had been fully finalised before [The Apocalypse](https://docs.google.com/document/d/11RmitNRui10LcLCyoXY6B1INCZZKq30gEU6BEg3EWfk/edit#).\r\n\r\n - [Raw data](https://gist.github.com/benjaminion/8f647b5a49c02cfa2b0a61734ce2884e)\r\n - [Summary spreadsheet](https://docs.google.com/spreadsheets/d/15Nyq7nB0hxzxcoCNv_yegDRCKpA_dp7nIp9S_3cdQpU/edit#gid=0)\r\n\r\n## Consensus on Eth1 block hashes\r\n\r\nCurrently, the beacon chain effectively aims to agree on Eth1 block hashes. It does this by a simple majority rule: within the 1024 slot period, once an Eth1 block hash has been voted for 513 or more times, it is agreed and the beacon state is updated. If no block hash achieves this threshold, then the beacon state is left unchanged.\r\n\r\nThe data from Medalla show that the chain **failed to agree** on an Eth1 block hash in **22% of Eth1 data voting periods**.\r\n\r\nTypically, voting was \"all over the place\", with between 3 and 140 different Eth1 block hashes being voted for within the seventy-two Eth1 data voting periods. There were two runs of three consecutive periods (~10 hours total) during which no agreement was reached.\r\n\r\nNote that validator participation during this period was relatively low, being mostly between 70% and 80%. With higher validator participation it is likely that the threshold for agreement can be reached more often.\r\n\r\nThe consequence of failing to agree on the Eth1 block hash is that onboarding of new validators could be delayed.\r\n\r\n## Consensus on Eth1 deposit roots\r\n\r\nIn the current Phase 0 and Phase 1 specifications, `state.eth1_data.block_hash` is not used at all. Thus it is not strictly necessary to agree on it.\r\n\r\nBy contrast, the chain could very reliably have agreed on the Eth1 deposit root, which is actually used. The deposit root evidently changes less frequently than the block hash - not all Eth1 blocks contain deposits. There were **no failures** to reach a 50% + 1 majority on Eth1 deposit root.\r\n\r\nNote that two Eth1 blocks with the same block hash will have the same deposit root, but not necessarily vice versa. Consensus on block hash implies consensus on deposit root, but the converse is not true.\r\n\r\n## Swiftness of agreement\r\n\r\n[Update] When agreement is reached, it is on average reached 71% of the way through the period (after 727 slots) for the Eth1 block hash, and could be reached 69% of the way through the period (after 707 slots) for the Eth1 deposit root. The earliest point at which agreement could be reached is after 513 slots.\r\n\r\n## Raising the agreement threshold\r\n\r\nIt has been [suggested](https://github.com/ethereum/eth2.0-specs/issues/1632) that we raise the threshold for agreement from 50% to 60%. With this threshold, and this dataset, the beacon chain fails to agree on the Eth1 block hash 27% of the time, and on the Eth1 deposit root 2.7% of the time.\r\n\r\n## Proposal\r\n\r\nAlthough it is not disastrous to fail to agree on the Eth1 data, it is inconvenient for new validators wishing to be onboarded swiftly. It is better to come to agreement more quickly than less quickly.\r\n\r\nSince (a) it is easier to agree on Eth1 data root, and (b) the Eth1 data root and block hash have different, independent, purposes in the Eth2 protocol, I suggest coming to consensus about them separately. This should be fairly easy to implement by changing `process_eth1_data()` to the following:\r\n\r\n_Warning: I don't Python. This is probably broken. But you get the idea._\r\n\r\n```\r\ndef process_eth1_data(state: BeaconState, body: BeaconBlockBody) -> None:\r\n    state.eth1_data_votes.append(body.eth1_data)\r\n    if [v.deposit_root for v in state.eth1_data_votes].count(body.eth1_data.deposit_root) * 2 > EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH:\r\n        state.eth1_data.deposit_root = body.eth1_data.deposit_root\r\n        state.eth1_data.deposit_count = body.eth1_data.deposit_count\r\n        if [v.block_hash for v in state.eth1_data_votes].count(body.eth1_data.block_hash) * 2 > EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH:\r\n            state.eth1_data.block_hash = body.eth1_data.block_hash\r\n```\r\n\r\n## Summary\r\n\r\nAt the cost of a very small increase in code complexity we can significantly improve tracking of the Eth1 deposit contract data, and not unnecessarily hold up the onboarding of validators. There is no impact on tracking of Eth1 block roots.",
  "closed_by": {
    "login": "benjaminion",
    "id": 20796281,
    "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjaminion",
    "html_url": "https://github.com/benjaminion",
    "followers_url": "https://api.github.com/users/benjaminion/followers",
    "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
    "organizations_url": "https://api.github.com/users/benjaminion/orgs",
    "repos_url": "https://api.github.com/users/benjaminion/repos",
    "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjaminion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018/reactions",
    "total_count": 5,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674430209",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674430209",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674430209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMDIwOQ==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:01:40Z",
    "updated_at": "2020-08-15T18:01:40Z",
    "author_association": "MEMBER",
    "body": "@benjaminion this is awesome! in the summary spreadsheet what do the yellow and red cell shadings mean?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674430209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674431064",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674431064",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674431064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMTA2NA==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:10:12Z",
    "updated_at": "2020-08-15T18:10:12Z",
    "author_association": "MEMBER",
    "body": "i'm wondering if you mean to only consider `block_hash` consensus conditional on `deposit_root` consensus?\r\n\r\nwe could consider uncoupling them further:\r\n\r\n```python\r\ndef process_eth1_data(state: BeaconState, body: BeaconBlockBody) -> None:\r\n    state.eth1_data_votes.append(body.eth1_data)\r\n    if [v.deposit_root for v in state.eth1_data_votes].count(body.eth1_data.deposit_root) * 2 > EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH:\r\n        state.eth1_data.deposit_root = body.eth1_data.deposit_root\r\n        state.eth1_data.deposit_count = body.eth1_data.deposit_count\r\n    if [v.block_hash for v in state.eth1_data_votes].count(body.eth1_data.block_hash) * 2 > EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH:\r\n        state.eth1_data.block_hash = body.eth1_data.block_hash\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674431064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674431751",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674431751",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674431751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMTc1MQ==",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:17:07Z",
    "updated_at": "2020-08-15T18:17:07Z",
    "author_association": "MEMBER",
    "body": "> In the current Phase 0 and Phase 1 specifications, state.eth1_data.block_hash is not used at all. Thus it is not strictly necessary to agree on it.\r\n\r\nbut it is very useful for any eth1-eth2 interop ahead of the eth1-eth2 merger.\r\n\r\neven if this data is only available off-chain or only available in a trusted manner on eth1, it still unlocks parts of the interop design space we just won't be able to have otherwise. so we shouldn't just ignore it or treat as a lower priority part of the spec :)\r\n\r\nobviously the timing of the eth1-eth2 merger would inform the decision here, but if we are seeing hard time coming to eth1 consensus, i'd even support adding microincentives in a \"phase 0.5\" for \"eth1 timeliness\" on the eth2 side if it looks like the merger may take longer than expected.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674431751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674432416",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674432416",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674432416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMjQxNg==",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:23:56Z",
    "updated_at": "2020-08-15T18:23:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> i'm wondering if you mean to only consider `block_hash` consensus conditional on `deposit_root` consensus?\r\n\r\nYes, that's a deliberate optimisation. Block hash consensus can happen only if deposit root consensus has happened. (To put it the other way, block hash consensus implies deposit root consensus.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674432416/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674432867",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674432867",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674432867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMjg2Nw==",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:28:46Z",
    "updated_at": "2020-08-15T18:28:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> >In the current Phase 0 and Phase 1 specifications, state.eth1_data.block_hash is not used at all. Thus it is not strictly necessary to agree on it.\r\n>\r\n> but it is very useful for any eth1-eth2 interop ahead of the eth1-eth2 merger.\r\n\r\nYes. My proposal above doesn't actually change the current Eth1 block hash voting mechanism at all.  But the study does show that the Eth1 block hash voting mechanism isn't terribly effective. We may wish to consider more radical changes, such as incentivising consensus on Eth1 data (though that carries its own issues).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674432867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674433128",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-674433128",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 674433128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQzMzEyOA==",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T18:31:16Z",
    "updated_at": "2020-08-15T18:31:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> in the summary spreadsheet what do the yellow and red cell shadings mean?\r\n\r\nSorry, I should have said. Red cells are where no consensus was reached for that Eth1 data voting period at the current 50% threshold. Yellow cells are those that would additionally fail if we increased the threshold to 60%.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/674433128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679274937",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-679274937",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 679274937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI3NDkzNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T17:52:27Z",
    "updated_at": "2020-08-24T17:57:01Z",
    "author_association": "MEMBER",
    "body": "> There were no failures to reach a 50% + 1 majority on Eth1 deposit root.\r\n\r\nThis seems like implementation errors rather than spec errors. Any failure to agree on a block-hash/deposit-root combo after the first epoch (assuming max 1 epoch latency) is just a failure to follow the spec.\r\n\r\n`votes_to_consider` should be 100% in agreement amongst implementations if we assume there are no forks in the eth1 chain 1000+ blocks deep [this is true in goerli 100% of the time].\r\n\r\nThen if `votes_to_consider` is in agreement and I am looking at a handful of blocks, my vote is entirely deterministic regardless of client implementation and should quickly solidify as the chain during that voting period grows deeper\r\n\r\nI'd like to better understand why the issue in conformance before we go change the spec.\r\n\r\n-------------------------------\r\n\r\nMy guess is that there is an off by one error causing prysm and other clients to disagree on the specific block so we end up relying entirely on prysm for the 51% votes which if prysm is ~70% of the network, wouldn't occur until on average in the 70% range.\r\n\r\nThe disagreement on block hash and agreement on deposit root also implies an off by a tiny amount error in `vote_to_consider`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/679274937/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/695976997",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-695976997",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 695976997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTk3Njk5Nw==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-21T08:30:52Z",
    "updated_at": "2020-09-21T08:30:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> My guess is that there is an off by one error causing prysm and other clients to disagree on the specific block so we end up relying entirely on prysm for the 51% votes which if prysm is ~70% of the network, wouldn't occur until on average in the 70% range.\r\n\r\nRelevant to this issue https://github.com/prysmaticlabs/prysm/pull/7200",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/695976997/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1408887843",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2018#issuecomment-1408887843",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2018",
    "id": 1408887843,
    "node_id": "IC_kwDOCOoGbc5T-ewj",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T16:05:46Z",
    "updated_at": "2023-01-30T16:05:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this as it is now ancient history, and it looks like we'll be getting rid of Eth1 data voting completely at some point.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1408887843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
