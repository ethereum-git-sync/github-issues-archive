{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1863",
  "id": 628909768,
  "node_id": "MDU6SXNzdWU2Mjg5MDk3Njg=",
  "number": 1863,
  "title": "[SSZ]  Are Lists limited to 0 values legal SSZ types?",
  "user": {
    "login": "saltiniroberto",
    "id": 38655434,
    "node_id": "MDQ6VXNlcjM4NjU1NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saltiniroberto",
    "html_url": "https://github.com/saltiniroberto",
    "followers_url": "https://api.github.com/users/saltiniroberto/followers",
    "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
    "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
    "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
    "repos_url": "https://api.github.com/users/saltiniroberto/repos",
    "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1170174610,
      "node_id": "MDU6TGFiZWwxMTcwMTc0NjEw",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:SSZ",
      "name": "scope:SSZ",
      "color": "77428D",
      "default": false,
      "description": "Simple Serialize"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-06-02T05:23:25Z",
  "updated_at": "2023-12-11T13:20:19Z",
  "closed_at": "2023-12-11T13:20:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "List types limited to 0 values, i.e. `List[type, 0]`, are not included in the list of [illegal types in the SSZ specification](https://github.com/ethereum/eth2.0-specs/blob/dev/ssz/simple-serialize.md#illegal-types).\r\n\r\nHowever, [line 177 of the py-ssz reference implementation](https://github.com/ethereum/py-ssz/blob/master/ssz/sedes/basic.py#L177), rules out LIst types limited to 0 values by requiring that the maximum length of homogenous composites must be at least 1.\r\n\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637674987",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1863#issuecomment-637674987",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863",
    "id": 637674987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzY3NDk4Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T16:46:35Z",
    "updated_at": "2020-06-02T16:46:35Z",
    "author_association": "MEMBER",
    "body": "I don't think these need to be strictly illegal, and in fact we used to have a type that was set to length `0` because it was essentially \"disabled\". \r\n\r\nUsing it as a \"feature flag\" of sorts is the main use case I can currently think of",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637674987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637789106",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1863#issuecomment-637789106",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863",
    "id": 637789106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzc4OTEwNg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T20:30:39Z",
    "updated_at": "2020-06-02T20:35:55Z",
    "author_association": "MEMBER",
    "body": "- 0-length vectors are illegal. (same for containers)\r\n- 0-limit lists are legal.\r\n\r\nThe reasoning for the fixed-length types here is that fixed-length types do not have an offset if a dynamic type has a collection of them. Making it impossible to say how many there are: it's a `scope / element_size = N / 0` case here.\r\n\r\nHowever, lists will ALWAYS have an offset if any type wraps them, because they couldn't be presented otherwise (Well, except a list at top-most level type, which has a natural scope by input-length, e.g. a byte list doesn't have a length-encoding envelop in SSZ).\r\n\r\nBesides, it is a previously used feature of configuring the lists of block-operations in the beacon block to have a 0 limit, to disable the use of that operation. Previously used in transfers. And currently we are considering disabling slashings in some testnets, as a fun way to stress the networks by publishing validator keys, and having everyone sign arbitrary things without retribution.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637789106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637952151",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1863#issuecomment-637952151",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863",
    "id": 637952151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzk1MjE1MQ==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-03T04:56:06Z",
    "updated_at": "2020-06-03T04:56:06Z",
    "author_association": "MEMBER",
    "body": "I think the spec is correct for flexible configuration as @protolambda mentioned, and py-ecc should be changed to follow the spec definition.\r\n\r\nOpened an issue https://github.com/ethereum/py-ssz/issues/116\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/637952151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/639467156",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1863#issuecomment-639467156",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1863",
    "id": 639467156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTQ2NzE1Ng==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T13:04:12Z",
    "updated_at": "2020-06-05T13:04:43Z",
    "author_association": "MEMBER",
    "body": "I'm going to revisit the \"new\" (no changes, but more details) SSZ spec draft, and work on tests for a lot of these invalid/valid edge cases. :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/639467156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
