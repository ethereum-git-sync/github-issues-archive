{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3109",
  "id": 1453651965,
  "node_id": "I_kwDOCOoGbc5WpPf9",
  "number": 3109,
  "title": "Eip4844 `beacon_block_and_blobs_sidecar` gossip validation rules",
  "user": {
    "login": "tbenr",
    "id": 15999009,
    "node_id": "MDQ6VXNlcjE1OTk5MDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tbenr",
    "html_url": "https://github.com/tbenr",
    "followers_url": "https://api.github.com/users/tbenr/followers",
    "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
    "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
    "organizations_url": "https://api.github.com/users/tbenr/orgs",
    "repos_url": "https://api.github.com/users/tbenr/repos",
    "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tbenr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4163819084,
      "node_id": "LA_kwDOCOoGbc74LtZM",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/Deneb",
      "name": "Deneb",
      "color": "A28C37",
      "default": false,
      "description": "was called: eip-4844"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-11-17T16:40:25Z",
  "updated_at": "2022-12-20T16:38:00Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Current rules:\r\n```\r\nIn addition to the gossip validations for the `beacon_block` topic from prior specifications, the following validations MUST pass before forwarding the `signed_beacon_block_and_blobs_sidecar` on the network.  \r\nAlias `signed_beacon_block = signed_beacon_block_and_blobs_sidecar.beacon_block`, `block = signed_beacon_block.message`, `execution_payload = block.body.execution_payload`.\r\n- _[REJECT]_ The KZG commitments of the blobs are all correctly encoded compressed BLS G1 Points.\r\n  -- i.e. `all(bls.KeyValidate(commitment) for commitment in block.body.blob_kzg_commitments)`\r\n- _[REJECT]_ The KZG commitments correspond to the versioned hashes in the transactions list.\r\n  -- i.e. `verify_kzg_commitments_against_transactions(block.body.execution_payload.transactions, block.body.blob_kzg_commitments)`\r\n\r\nAlias `sidecar = signed_beacon_block_and_blobs_sidecar.blobs_sidecar`.\r\n- _[IGNORE]_ the `sidecar.beacon_block_slot` is for the current slot (with a `MAXIMUM_GOSSIP_CLOCK_DISPARITY` allowance) -- i.e. `sidecar.beacon_block_slot == block.slot`.\r\n- _[REJECT]_ the `sidecar.blobs` are all well formatted, i.e. the `BLSFieldElement` in valid range (`x < BLS_MODULUS`).\r\n- _[REJECT]_ The KZG proof is a correctly encoded compressed BLS G1 Point -- i.e. `bls.KeyValidate(blobs_sidecar.kzg_aggregated_proof)`\r\n```\r\n\r\n1. Shouldn't we add check `sidecar.beacon_block_root == block.block.hash_tree_root()`?\r\n2. Shouldn't we _[REJECT]_ on `slot` and `block_root` checks since `signed_beacon_block_and_blobs_sidecar` itself is inconsistent thus invalid?\r\n3. Shouldn't we rely on kzg library verification here by running [`validate_blobs_sidecar`](https://github.com/ethereum/consensus-specs/blob/dev/specs/eip4844/beacon-chain.md#validate_blobs_sidecar) and all the low level KZG\\BLS checks will be done internally by the kzg library?\r\n\r\ncc @terencechain ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1319088482",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3109#issuecomment-1319088482",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109",
    "id": 1319088482,
    "node_id": "IC_kwDOCOoGbc5On7Fi",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T19:15:58Z",
    "updated_at": "2022-11-17T19:15:58Z",
    "author_association": "MEMBER",
    "body": "good points!\r\n1. I'm not sure we need the beacon slot and root in the sidecar gossip anymore because of the simultaneous delivery (especially if we make our range/root requests coupled as well)\r\n2. Yes, if we keep it, it should be REJECT\r\n3. We either need signature or full kzg validation as discussed in #3103 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1319088482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1319284272",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3109#issuecomment-1319284272",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109",
    "id": 1319284272,
    "node_id": "IC_kwDOCOoGbc5Ooq4w",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T22:21:49Z",
    "updated_at": "2022-11-17T22:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n> 1. I'm not sure we need the beacon slot and root in the sidecar gossip anymore because of the simultaneous delivery (especially if we make our range/root requests coupled as well)\n\nYes, makes sense for the coupled container but if we leave the decoupled \"byRange\" methods (which was the latest direction if I recall correctly) hey might have more sense",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1319284272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1320272953",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3109#issuecomment-1320272953",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109",
    "id": 1320272953,
    "node_id": "IC_kwDOCOoGbc5OscQ5",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T16:48:07Z",
    "updated_at": "2022-11-18T16:48:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 3. Shouldn't we rely on kzg library verification here by running [validate_blobs_sidecar](https://github.com/ethereum/consensus-specs/blob/dev/specs/eip4844/beacon-chain.md#validate_blobs_sidecar) and all the low level KZG\\BLS checks will be done internally by the kzg library?\r\n\r\n> 3. We either need signature or full kzg validation as discussed in https://github.com/ethereum/consensus-specs/issues/3103\r\n\r\nI think we can make an argument to remove all the low-level kzg checks in either signature or full kzg validation cases. If the signature can be validated, is it still worth the low-level kzg checks before forwarding it to peers? They are cheap checks, so maybe why not",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1320272953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359694858",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3109#issuecomment-1359694858",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3109",
    "id": 1359694858,
    "node_id": "IC_kwDOCOoGbc5RC0wK",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T16:37:25Z",
    "updated_at": "2022-12-20T16:38:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since [this](https://github.com/ethereum/consensus-specs/commit/e8e860e1f3f4ef2a5d6d5e9c071d93badda0c30a) has been merged, shouldn't we simplify\\revisit the validations?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359694858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
