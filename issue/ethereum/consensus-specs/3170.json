{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/3170",
  "id": 1503309990,
  "node_id": "I_kwDOCOoGbc5ZmrCm",
  "number": 3170,
  "title": "is_data_available should be in fork-choice",
  "user": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-12-19T17:26:04Z",
  "updated_at": "2022-12-20T13:12:02Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "`assert is_data_available`  should not livein the state transition validation logic. This seems very much a fork-choice consideration. Both places have the same general effect but:\r\n1. This puts a hidden input on the state transition function (`BlobSideCar`) instead of it being a function of only `(pre_state, block)`. So as a function call, we've degraded it's integrity and mixed layers/concerns which we've actively avoided in all other past considerations in the beacon chain functionality.\r\n2. it's also weird to have a temporally aware condition in the state transition function. That is -- you only need to validate the sidecar availability once. After that, you don't necessarily validate it again  nor can! (e.g. if now outside of the prune window).\r\n\r\nThis shouldn't affect client implementations at all, but this more appropriately (in sidecar and DAS form) lives in the fork-choice in `on_block`.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1358808875",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3170#issuecomment-1358808875",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170",
    "id": 1358808875,
    "node_id": "IC_kwDOCOoGbc5Q_ccr",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T03:57:26Z",
    "updated_at": "2022-12-20T03:57:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose another place for this is in the p2p-interface spec, where we don't allow block import unless `is_data_available` is true. I don't have a strong opinion on where to put this as long as it's not part of state transition. Putting it in fork-choice feels future-proof and nicer with danksharding",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1358808875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359218441",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3170#issuecomment-1359218441",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170",
    "id": 1359218441,
    "node_id": "IC_kwDOCOoGbc5RBAcJ",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T11:31:04Z",
    "updated_at": "2022-12-20T11:31:04Z",
    "author_association": "MEMBER",
    "body": "The `on_block` handler would the right place for the check as DA property is aside to the state transition validity. Also, there is a consensus around not applying a block to the fork choice unless data is available which can be stated in a form of comment in the `on_block` spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359218441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359270930",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3170#issuecomment-1359270930",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170",
    "id": 1359270930,
    "node_id": "IC_kwDOCOoGbc5RBNQS",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T12:12:43Z",
    "updated_at": "2022-12-20T12:12:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "That assumes we are ok to gossip blocks with unavailable blobs which is ok. I think this mostly is for syncing by range",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359270930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359331262",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/3170#issuecomment-1359331262",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/3170",
    "id": 1359331262,
    "node_id": "IC_kwDOCOoGbc5RBb--",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T13:12:02Z",
    "updated_at": "2022-12-20T13:12:02Z",
    "author_association": "MEMBER",
    "body": "> That assumes we are ok to gossip blocks with unavailable blobs which is ok. I think this mostly is for syncing by range\r\n\r\nIt might even be a plus given that we may end up with uncoupled block and blob gossip",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1359331262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
