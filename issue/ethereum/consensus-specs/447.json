{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/447",
  "id": 399374443,
  "node_id": "MDU6SXNzdWUzOTkzNzQ0NDM=",
  "number": 447,
  "title": "Alternative hash_to_G2",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063052501,
      "node_id": "MDU6TGFiZWwxMDYzMDUyNTAx",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:RFC",
      "name": "general:RFC",
      "color": "00D1B2",
      "default": false,
      "description": "Request for Comments"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-01-15T14:39:39Z",
  "updated_at": "2019-01-16T16:06:54Z",
  "closed_at": "2019-01-16T08:34:36Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Abstract\r\nUse HMAC based deterministic algorithm of `k` parameter generation ([rfc6979#section-3.2](https://tools.ietf.org/html/rfc6979#section-3.2)) to map a message onto `G2` point. Modified algorithm looks like:\r\n```python\r\ndef hash_to_G2(message: bytes32, domain: uint64) -> [uint384]:\r\n   k = generate_k(r, message, normalize_domain(domain))\r\n   return multiply_in_G2(G2, k)\r\n```\r\nWhere:\r\n- `r` subgroup order;\r\n- `generate_k` function denotes the original algorithm described in the RFC;\r\n- `normalize_domain` function is described below.\r\n\r\n### Specification\r\nOriginal algorithm of `k` parameter generation described in the RFC uses three arguments as input. First one is a _private key_ that is eventually used to create a signature, second one is a message hash and the last one is a subgroup order `r`.\r\n\r\nCurrent proposal suggests to replace _private key_ with the _domain_ parameter in the original algorithm. Since the RFC requires _private key_ parameter to belong to `[1, r-1]` range there should be a function that maps _domain_ parameter onto this range. Suggested function is:\r\n```python\r\ndef normalize_domain(domain: uint64) -> bytes32\r\n    result = hash(domain)\r\n    while not 0 < result < r:\r\n        result = hash(domain)\r\n    \r\n    return result\r\n```\r\nWhere `hash` is any 256-bit hash function e.g. _keccak256_.\r\n\r\n### Rationale\r\n- relies on a cryptographic standard;\r\n- an algorithm described in the RFC should have an implementation in all cryptographic libraries which provides DSA, hence, `generate_k` function implementation should be a matter of library API call;\r\n- no `G2_cofactor` multiplication;\r\n- no need in 384-bit hash function (if this is still actual).\r\n\r\n### Criticism\r\nIt seems that replacing _private key_ with _domain_ parameter reduces entropy level of `generate_k` result and makes it less secure. And, indeed, if this replacement took place in the original scheme described by the standard then it would be true. But in our case it _should_ not be true.\r\n\r\nLet's assume that input data in the original scheme, a pair `[private_key; message_hash]`, gives an output of a _certain_ level of entropy. Assuming that original scheme uses as much input data as it can to get as high level of the entropy as it could; and with a fact that in our case pair `[domain; message_hash]` is all the data that can impact on entropy level, we can assume that entropy level of `generate_k` function in our case will, also, be as high as it could be.\r\n\r\n",
  "closed_by": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454617036",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/447#issuecomment-454617036",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
    "id": 454617036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDYxNzAzNg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T01:32:23Z",
    "updated_at": "2019-01-16T01:32:23Z",
    "author_association": "MEMBER",
    "body": "This is extremely insecure. The use of hashing to G2 crucially relies on the fact that nobody knows the discrete log of the point that is being generated. If the discrete log is known, as it is here, then BLS becomes attackable trivially: you can \"sign\" any message knowing only the public key by simply multiplying the public key by the discrete log of the message hash.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454617036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454694916",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/447#issuecomment-454694916",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
    "id": 454694916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY5NDkxNg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T08:34:36Z",
    "updated_at": "2019-01-16T08:34:36Z",
    "author_association": "MEMBER",
    "body": "> you can \"sign\" any message knowing only the public key\r\n\r\nIndeed!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454694916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454723090",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/447#issuecomment-454723090",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
    "id": 454723090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDcyMzA5MA==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T10:07:26Z",
    "updated_at": "2019-01-16T10:07:26Z",
    "author_association": "MEMBER",
    "body": "@vbuterin actually, I don't see the way it's feasible. could you please elaborate? \r\nIf signature and public key were points of the same curve then it's trivial. But they aren't.\r\n\r\nPossible attack vector here could be based on this equation:\r\n```\r\ne(k * P, G2) = e(G1, d * M)\r\n\r\nd - private key\r\nk - message discrete log (known)\r\nM = k * G2 - message point\r\nP = d * G1 - public key\r\n```\r\nBut I don't see any other way rather than brute forcing this equation that could discover `d`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454723090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454795686",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/447#issuecomment-454795686",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
    "id": 454795686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDc5NTY4Ng==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:20:05Z",
    "updated_at": "2019-01-16T14:21:00Z",
    "author_association": "MEMBER",
    "body": "Ah, you're right the trivial attack doesn't work.\r\n\r\nBut there is a slightly more sophisticated attack (notation: lowercase for numbers mod n, uppercase for curve points). If you see someone else's signature on a message m1, or SIG1 = priv * m1 * G2, then you can compute SIG2 = SIG1 * m2 / m1 = priv * m2 * G2, a valid signature on some arbitrary m2.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454795686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454835616",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/447#issuecomment-454835616",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/447",
    "id": 454835616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgzNTYxNg==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T16:06:54Z",
    "updated_at": "2019-01-16T16:06:54Z",
    "author_association": "MEMBER",
    "body": "Got it, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/454835616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
