{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/623",
  "id": 410233363,
  "node_id": "MDU6SXNzdWU0MTAyMzMzNjM=",
  "number": 623,
  "title": "Initial state finalizes not yet finished epoch",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043866,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY2",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:bug",
      "name": "general:bug",
      "color": "DD1C1A",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-02-14T10:34:43Z",
  "updated_at": "2019-02-19T09:26:29Z",
  "closed_at": "2019-02-19T09:26:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What's wrong\r\nIf `GENESIS_SLOT` is not the last slot in the epoch then `finalized_epoch` of initial state could point to the epoch which is still lasts in time, for example:\r\n- `GENESIS_SLOT = EPOCH_LENGTH = 64`\r\n- `GENESIS_EPOCH = slot_to_epoch(GENESIS_SLOT) = 1`\r\n\r\nAt the chain start attestations will be rejected until `GENESIS_EPOCH` run out. And in general there is no sense in producing block for already finalized epoch.\r\n\r\n### Suggestion\r\n~~`GENESIS_EPOCH = slot_to_epoch(GENESIS_SLOT) - 1`~~\r\n\r\n**EDT:**\r\nUse `GENESIS_EPOCH - 1` instead of `GENESIS_EPOCH`:\r\n```python\r\njustified_epoch=GENESIS_EPOCH - 1\r\nfinalized_epoch=GENESIS_EPOCH - 1\r\n```\r\nIt turns out that minimal value of `GENESIS_SLOT` is `EPOCH_LENGTH - 1` which sets `finalized_epoch` to `0`, for lower `GENESIS_SLOT` values it would be an epoch before `0`.\r\n",
  "closed_by": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/464792205",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/623#issuecomment-464792205",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623",
    "id": 464792205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDc5MjIwNQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T16:09:29Z",
    "updated_at": "2019-02-18T16:09:29Z",
    "author_association": "MEMBER",
    "body": "> At the chain start attestations will be rejected until `GENESIS_EPOCH` run out.\r\n\r\nDo you mean rejected as in they cannot be included on chain? Can you point me to the condition that would prevent the 1st epoch attestations from being included?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/464792205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465054659",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/623#issuecomment-465054659",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/623",
    "id": 465054659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTA1NDY1OQ==",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T09:26:29Z",
    "updated_at": "2019-02-19T09:26:29Z",
    "author_association": "MEMBER",
    "body": "To be honest I don't quite remember what I meant by `rejected`. I have double checked with the spec and indeed there is no condition preventing attestations from being included into a chain even if epoch is finalized.\r\n\r\nI was confused by the naming of `finalized_epoch` field, decided that it means that _every_ block of this epoch is finalized. While precisely it's an _epoch with finalized block_, not an _entirely finalized epoch_.\r\n\r\nClosing this issue. It would be good to have a description on how finality gadget works in the beacon chain with references to beacon state fields that used by it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/465054659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
