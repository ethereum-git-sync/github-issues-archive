{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2923",
  "id": 1284174890,
  "node_id": "I_kwDOCOoGbc5MivQq",
  "number": 2923,
  "title": "Set genesis checkpoint roots to `Root()` in `get_forkchoice_store`",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1324776822,
      "node_id": "MDU6TGFiZWwxMzI0Nzc2ODIy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/scope:fork-choice",
      "name": "scope:fork-choice",
      "color": "81C7D4",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-24T20:44:58Z",
  "updated_at": "2023-12-26T20:08:48Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "> Thank @potuz for pointing it out!\r\n\r\nIn the current [`get_forkchoice_store`](https://github.com/ethereum/consensus-specs/blob/72f7b88f2a2e7d0ce0c08a36085259506c3f5df7/specs/phase0/fork-choice.md#get_forkchoice_store), it sets initial checkpoint roots to `anchor_root`:\r\n\r\n```python\r\ndef get_forkchoice_store(anchor_state: BeaconState, anchor_block: BeaconBlock) -> Store:\r\n    assert anchor_block.state_root == hash_tree_root(anchor_state)\r\n    anchor_root = hash_tree_root(anchor_block)\r\n    anchor_epoch = get_current_epoch(anchor_state)\r\n    justified_checkpoint = Checkpoint(epoch=anchor_epoch, root=anchor_root)\r\n    finalized_checkpoint = Checkpoint(epoch=anchor_epoch, root=anchor_root)\r\n    ...\r\n```\r\n\r\nHowever, the genesis checkpoint roots should be `Root()`. I think we could deal with `get_current_epoch(anchor_state) == GENESIS_EPOCH` case so it would be more similar to the practice.\r\n\r\np.s. The non-genesis case is broken (see #2566 discussion). It would require networking calls to query the previous blocks. \r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1165998326",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2923#issuecomment-1165998326",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
    "id": 1165998326,
    "node_id": "IC_kwDOCOoGbc5Ff7j2",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T22:44:44Z",
    "updated_at": "2022-06-24T22:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a particular reason the genesis checkpoint roots should be `Root()`? ie what's special about genesis vs some other state we use as the anchor?  I'm not against having a genesis specific condition here particularly but given we have to solve any issues for arbitrary states used as anchors anyway it may be redundant. Left a comment on #2566 about how Teku handles it: https://github.com/ethereum/consensus-specs/issues/2566#issuecomment-1165996834",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1165998326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166061783",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2923#issuecomment-1166061783",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
    "id": 1166061783,
    "node_id": "IC_kwDOCOoGbc5FgLDX",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T23:21:22Z",
    "updated_at": "2022-06-24T23:21:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there a particular reason the genesis checkpoint roots should be Root()?\r\n\r\nAs far as I know this is a requirement in [the P2P spec](https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/p2p-interface.md)  but it would make things much easier for us if this wasn't there and we could just reply with the `originRoot` as the checkpoint root. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166061783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166145071",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2923#issuecomment-1166145071",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
    "id": 1166145071,
    "node_id": "IC_kwDOCOoGbc5FgfYv",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T00:02:30Z",
    "updated_at": "2022-06-25T00:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right, from Teku:\r\n```\r\n            // Genesis finalized root is always ZERO because it's taken from the state and the\r\n            // genesis block is calculated from the state so the state can't contain the actual\r\n            // block root\r\n            finalizedCheckpoint.getEpoch().isZero() ? Bytes32.ZERO : finalizedCheckpoint.getRoot(),\r\n```\r\n\r\nDefinitely some odd confusion around whether the finalised checkpoint should be from the store or the head state - as seen here, they've never been guaranteed to be the same.\r\n\r\nI suspect if we actually took the checkpoint from the state we'd be able to start from finalised state rather than needing one that matches the epoch boundary too...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166145071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166145513",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2923#issuecomment-1166145513",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
    "id": 1166145513,
    "node_id": "IC_kwDOCOoGbc5Fgffp",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T00:03:54Z",
    "updated_at": "2022-06-25T00:03:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure if it's viable to fix the p2p spec to have the checkpoint come from the store instead of the state... It probably could be done in a two step change where clients accept either zero root or genesis block root for a while then we switch to actually sending genesis block root.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166145513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166146846",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2923#issuecomment-1166146846",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2923",
    "id": 1166146846,
    "node_id": "IC_kwDOCOoGbc5Fgf0e",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T00:08:29Z",
    "updated_at": "2022-06-25T00:08:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Not sure if it's viable to fix the p2p spec to have the checkpoint come from the store instead of the state... It probably could be done in a two step change where clients accept either zero root or genesis block root for a while then we switch to actually sending genesis block root.\r\n\r\nI would agree with this, this is an odd condition that surfaces from time to time in our unit tests. So that we are filled with statements like `s.ensureNotZero(root)` where the function `ensureNotZero(root)` returns `originRoot` if `root` is zero. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1166146846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
