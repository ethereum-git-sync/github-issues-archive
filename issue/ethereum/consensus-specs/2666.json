{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2666",
  "id": 1024869754,
  "node_id": "I_kwDOCOoGbc49FkV6",
  "number": 2666,
  "title": "Proposed mitigation against a malicious staking pool refusing to exit a validator",
  "user": {
    "login": "zah",
    "id": 175462,
    "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zah",
    "html_url": "https://github.com/zah",
    "followers_url": "https://api.github.com/users/zah/followers",
    "following_url": "https://api.github.com/users/zah/following{/other_user}",
    "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
    "organizations_url": "https://api.github.com/users/zah/orgs",
    "repos_url": "https://api.github.com/users/zah/repos",
    "events_url": "https://api.github.com/users/zah/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zah/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043868,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODY4",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:enhancement",
      "name": "general:enhancement",
      "color": "086788",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2021-10-13T07:05:41Z",
  "updated_at": "2024-01-03T23:46:16Z",
  "closed_at": "2024-01-03T23:44:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The security of stakers who trust the services of staking pools has been greatly enhanced with the introduction Eth1 withdrawal credentials that allow an arbitrary smart contract to govern the funding process and the withdrawal rights of potentially multiple stakers.\r\n\r\nOne possible problem though is that nothing guarantees that the node operator who holds the signing key for the validator will perform an exit at an agreed upon exit date. The operator can decide to keep validating forever with the goal of extracting MEV value from proposed execution layer blocks.\r\n\r\nOne simple mitigation for this problem is to require the operator to share a pre-signed exit message specifying the exit epoch for the created validator before the stakers have deposited their funds (\"require\" in the sense that potential stakers will seek out the services of operators that offer this). The stakers will be then able to broadcast the message on their own to trigger the exit. The current problem with this approach is that the exit message features a validator index instead of a validator public key and the stakers cannot know the final validator index before the deposit is submitted to the deposit contract. To facillitate the practice of pre-sharing an exit message, we can define the following new form of an exit message:\r\n\r\n```python\r\nclass KeyedVoluntaryExit(Container):\r\n    epoch: Epoch  # Earliest epoch when voluntary exit can be processed\r\n    validator_pubkey: BLSPubkey\r\n    \r\nclass SignedKeyedVoluntaryExit(Container):\r\n    message: KeyedVoluntaryExit\r\n    signature: BLSSignature\r\n```\r\n\r\nFurthermore, in order to make the new exit messages portable across forks, the domain of their signature can always use the `GENESIS_FORK_VERSION` (just like deposit signatures).\r\n\r\nIt would be enough to introduce a new gossip topic for broadcasting such messages and a new `List` field in the `BeaconBlockBody` container that will have zero cost when not used. Alternatively, the new definition can just replace the previous one, assuming it is introduced in a fork that changes the gossip topic names.",
  "closed_by": {
    "login": "zah",
    "id": 175462,
    "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zah",
    "html_url": "https://github.com/zah",
    "followers_url": "https://api.github.com/users/zah/followers",
    "following_url": "https://api.github.com/users/zah/following{/other_user}",
    "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
    "organizations_url": "https://api.github.com/users/zah/orgs",
    "repos_url": "https://api.github.com/users/zah/repos",
    "events_url": "https://api.github.com/users/zah/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zah/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942100794",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942100794",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942100794,
    "node_id": "IC_kwDOCOoGbc44J1E6",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T09:18:48Z",
    "updated_at": "2021-10-13T09:18:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why not just change the existing message instead of having two separate messages for exits? Are there any contracts controlling validators that would break?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942100794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942158515",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942158515",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942158515,
    "node_id": "IC_kwDOCOoGbc44KDKz",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T10:30:20Z",
    "updated_at": "2021-10-13T10:30:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@potuz because there will already be signed voluntary exit transactions out there that would then break.\r\n\r\n@zah is there any proper use case for this?  Given that there are staking services that have been running for nearly a year, I would assume that their customers accept the current situation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942158515/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942178691",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942178691",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942178691,
    "node_id": "IC_kwDOCOoGbc44KIGD",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T10:57:04Z",
    "updated_at": "2021-10-13T10:57:04Z",
    "author_association": "NONE",
    "body": "@mcdee, I think this concern is going to become more relevant once the staking pools start migrating from \"terms of services\" style of legal contracts (which are hard to enforce around the globe) to smart contracts and 0x01 withdrawal credentials. The tighter the guarantees that can be expressed in such a contract, the better.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942178691/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942187041",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942187041",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942187041,
    "node_id": "IC_kwDOCOoGbc44KKIh",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T11:07:21Z",
    "updated_at": "2021-10-13T11:07:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure about that.  If the withdrawal address is a smart contract then who should hold the pre-signed exit transaction?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942187041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942191801",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942191801",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942191801,
    "node_id": "IC_kwDOCOoGbc44KLS5",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T11:13:01Z",
    "updated_at": "2021-10-13T11:16:11Z",
    "author_association": "NONE",
    "body": "It will be generated by the operator and shared with all stakers upfront. It's possible to design the smart contract in such a way that the operator commits to a validator public key before it starts collecting deposits from potential stakers. If the public key is known upfront, it can be used to verify the pre-signed exit message as well. The stakers will then be confident that they are entering a fixed-term contract ending at a specific date (the exit epoch in the shared exit message).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942191801/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942199635",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942199635",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942199635,
    "node_id": "IC_kwDOCOoGbc44KNNT",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T11:22:46Z",
    "updated_at": "2021-10-13T11:22:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds like this issue could be solved outside the protocol by the staking service putting up a bond on a smart contract that can be reclaimed by the staking service on presentation of the signed data for a voluntary exit, or by the staker(s) after a certain time period.\r\n\r\nIn general I'd like to see the beacon chain protocol kept as lean as possible.  If this could be solved outside the protocol then it seems to make sense to do so.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942199635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942265549",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942265549",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942265549,
    "node_id": "IC_kwDOCOoGbc44KdTN",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T12:43:23Z",
    "updated_at": "2021-10-13T12:43:23Z",
    "author_association": "NONE",
    "body": "While it's true that the proposed bond can be an alternative mitigation, it does increase the capital requirements for providing staking services and it's not clear what is the appropriate size of the bond considering that the operator can continue extracting MEV value indefinitely.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942265549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942273502",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942273502",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942273502,
    "node_id": "IC_kwDOCOoGbc44KfPe",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T12:52:40Z",
    "updated_at": "2021-10-13T12:52:40Z",
    "author_association": "NONE",
    "body": "> @potuz because there will already be signed voluntary exit transactions out there that would then break.\r\n\r\nCurrently, beacon chain hard-forks already invalidate previously signed exit messages which makes it difficult to reason about exit messages targetting epochs in the distant future. The proposed `SignedKeyedVoluntaryExit` signature treatment addresses this problem as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942273502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942274072",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942274072",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942274072,
    "node_id": "IC_kwDOCOoGbc44KfYY",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T12:53:19Z",
    "updated_at": "2021-10-13T12:53:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Surely the bond is 32 ETH for each validator, as it allows the stakers to retrieve the funds and go elsewhere.  It would only be short-term, as it would not be needed once the pre-signed exit transaction was made available.\r\n\r\nBut these are details.  If we can do this outside of the protocol, I'd very much prefer it to loading the protocol wit point interest ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942274072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942274855",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942274855",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942274855,
    "node_id": "IC_kwDOCOoGbc44Kfkn",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T12:54:15Z",
    "updated_at": "2021-10-13T12:54:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Currently, beacon chain hard-forks already invalidate previously signed exit messages which makes it difficult to reason about exit messages targetting epochs in the distant future. The proposed `SignedKeyedVoluntaryExit` signature treatment addresses this problem as well.\r\n\r\nDanny stated that using the current fork version rather than the genesis one was to avoid a potential replay attack on forks.  I don't remember the details, however.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942274855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942903458",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-942903458",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 942903458,
    "node_id": "IC_kwDOCOoGbc44M5Ci",
    "user": {
      "login": "zilm13",
      "id": 6196452,
      "node_id": "MDQ6VXNlcjYxOTY0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zilm13",
      "html_url": "https://github.com/zilm13",
      "followers_url": "https://api.github.com/users/zilm13/followers",
      "following_url": "https://api.github.com/users/zilm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions",
      "organizations_url": "https://api.github.com/users/zilm13/orgs",
      "repos_url": "https://api.github.com/users/zilm13/repos",
      "events_url": "https://api.github.com/users/zilm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zilm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-14T03:05:31Z",
    "updated_at": "2021-10-14T03:05:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Special fork rules for one kind of message looks like a really bad idea",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/942903458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1876118094",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2666#issuecomment-1876118094",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2666",
    "id": 1876118094,
    "node_id": "IC_kwDOCOoGbc5v00pO",
    "user": {
      "login": "zah",
      "id": 175462,
      "node_id": "MDQ6VXNlcjE3NTQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zah",
      "html_url": "https://github.com/zah",
      "followers_url": "https://api.github.com/users/zah/followers",
      "following_url": "https://api.github.com/users/zah/following{/other_user}",
      "gists_url": "https://api.github.com/users/zah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zah/subscriptions",
      "organizations_url": "https://api.github.com/users/zah/orgs",
      "repos_url": "https://api.github.com/users/zah/repos",
      "events_url": "https://api.github.com/users/zah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-03T23:44:18Z",
    "updated_at": "2024-01-03T23:46:16Z",
    "author_association": "NONE",
    "body": "This issue is largely resolved by the introduction of https://eips.ethereum.org/EIPS/eip-7002 and https://eips.ethereum.org/EIPS/eip-7044",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/1876118094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
