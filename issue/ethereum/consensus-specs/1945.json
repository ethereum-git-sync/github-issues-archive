{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/1945",
  "id": 648274707,
  "node_id": "MDU6SXNzdWU2NDgyNzQ3MDc=",
  "number": 1945,
  "title": "Describe the function preconditions in comments/docstrings",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1244734333,
      "node_id": "MDU6TGFiZWwxMjQ0NzM0MzMz",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:presentation",
      "name": "general:presentation",
      "color": "2EA9DF",
      "default": false,
      "description": "Presentation (as opposed to content)"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6",
    "html_url": "https://github.com/ethereum/consensus-specs/milestone/6",
    "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/milestones/6/labels",
    "id": 5797403,
    "node_id": "MDk6TWlsZXN0b25lNTc5NzQwMw==",
    "number": 6,
    "title": "ðŸ”µ v1.0.0 candidates",
    "description": "",
    "creator": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 12,
    "closed_issues": 5,
    "state": "closed",
    "created_at": "2020-08-21T16:23:12Z",
    "updated_at": "2021-06-07T15:09:56Z",
    "due_on": null,
    "closed_at": "2021-05-04T14:59:24Z"
  },
  "comments": 3,
  "created_at": "2020-06-30T15:31:39Z",
  "updated_at": "2021-07-05T15:03:08Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Issue\r\nPointed out by @franck44 and @protolambda, it would be more readable if we can more it clear of what are the preconditions of each function.\r\n\r\n### How to solve it\r\nAdd more detailed comments about the pre-conditions.\r\n\r\n\r\n/cc @protolambda feel free to update this issue content. :)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/653216629",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1945#issuecomment-653216629",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945",
    "id": 653216629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzIxNjYyOQ==",
    "user": {
      "login": "ericsson49",
      "id": 10426192,
      "node_id": "MDQ6VXNlcjEwNDI2MTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/10426192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericsson49",
      "html_url": "https://github.com/ericsson49",
      "followers_url": "https://api.github.com/users/ericsson49/followers",
      "following_url": "https://api.github.com/users/ericsson49/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericsson49/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericsson49/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericsson49/subscriptions",
      "organizations_url": "https://api.github.com/users/ericsson49/orgs",
      "repos_url": "https://api.github.com/users/ericsson49/repos",
      "events_url": "https://api.github.com/users/ericsson49/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericsson49/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T20:56:15Z",
    "updated_at": "2020-07-02T21:01:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "It might be helpful to use [Nagini](https://github.com/marcoeilers/nagini) to specify pre- and post-conditions (as well as other useful annotations).\r\nIt enriches statically-typed Python3 subset ([PEP-484](https://www.python.org/dev/peps/pep-0484/), `mypy`) with constructs to specify pre-conditions (`Requires`) and post-conditions (`Ensures`), exceptional post-conditions (`Exsures`), as well as invariants, function purity (`@Pure`), assertions, predicates, etc.\r\n\r\nIt uses Boogie and Z3 as Dafny, though it's underlying logic is different. However, the idea is to use its extensions to annotate the py-spec with pre-/post-conditions and other useful annotations (like `@Pure`).\r\n\r\nOne option can be to design a contract library based on the ideas of the Nagini contract library (e.g. one can express Dafny annotations instead of Viper ones).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/653216629/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/686606723",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/1945#issuecomment-686606723",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/1945",
    "id": 686606723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjYwNjcyMw==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T16:25:28Z",
    "updated_at": "2020-09-03T16:25:28Z",
    "author_association": "MEMBER",
    "body": "Took a look Viper and Nagini today. Some quick notes:\r\n- The verification system is great!\r\n- [Nagini requires input programs to comply to the static, nominal type system defined in PEP 484 as implemented in the Mypy](https://jaxenter.com/come-nagini-verify-python-code-146847.html), which means it requires remerkleable complies Mypy rules + #1707\r\n- I'm worried that Nagini is not actively maintained. Since remerkleable has some complicated typing tricks, we may have some edge cases. (Sometimes, the issue is in `mypy`)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/686606723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
