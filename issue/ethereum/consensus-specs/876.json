{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/876",
  "id": 428066495,
  "node_id": "MDU6SXNzdWU0MjgwNjY0OTU=",
  "number": 876,
  "title": "[Question][SSZ]To get item count from SSZ data",
  "user": {
    "login": "NAKsir-melody",
    "id": 21022937,
    "node_id": "MDQ6VXNlcjIxMDIyOTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21022937?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NAKsir-melody",
    "html_url": "https://github.com/NAKsir-melody",
    "followers_url": "https://api.github.com/users/NAKsir-melody/followers",
    "following_url": "https://api.github.com/users/NAKsir-melody/following{/other_user}",
    "gists_url": "https://api.github.com/users/NAKsir-melody/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NAKsir-melody/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NAKsir-melody/subscriptions",
    "organizations_url": "https://api.github.com/users/NAKsir-melody/orgs",
    "repos_url": "https://api.github.com/users/NAKsir-melody/repos",
    "events_url": "https://api.github.com/users/NAKsir-melody/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NAKsir-melody/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-04-02T07:30:17Z",
  "updated_at": "2019-04-06T23:02:06Z",
  "closed_at": "2019-04-06T23:02:06Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi, \r\nI'm trying to integrate SSZ into trie structure.\r\nAnd I have a question about getting item count from ssz serialized data.\r\n\r\nWhen generating trie from DB,\r\nAleth & Geth use item count to decide node type. \r\n\r\nbut with ssz spec, It seems that the only way to getting item count is decoding all serialized data.\r\nAm I right?\r\n\r\nAnd  what is best way of generating trie with serialized data which structured like below table?\r\n(SOS is more suitable?)\r\n\r\nState MPT | node hash | key | value\r\n-- | -- | -- | --\r\nExtension Node | bytes32(hash(ssz(k) + ssz(v)) | bytes | bytes32(hash)\r\n|  |   | Variable-size | fixed-size\r\nLeaf node | bytes32(hash(ssz(k) + ssz(v)) | bytes | bytes(state object)\r\n|  |   | Variable-size | Variable-size\r\nBranch node | bytes32(hash(ssz(k) + ssz(v)) | byte[17] | Bytes32[16] + bytes\r\n|  |   | fixed-size | [0:15]fixed-size, [16] Variable-size\r\n\r\n",
  "closed_by": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480544293",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/876#issuecomment-480544293",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/876",
    "id": 480544293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDU0NDI5Mw==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-06T23:02:06Z",
    "updated_at": "2019-04-06T23:02:06Z",
    "author_association": "MEMBER",
    "body": "> but with ssz spec, It seems that the only way to getting item count is decoding all serialized data.\r\nAm I right?\r\n\r\nWe're likely going with [a new serialisation format](https://github.com/ethereum/eth2.0-specs/pull/787) which is more friendly to lengths. You'll be able to get the length of variable-length sub-objects without deserialising the full object.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/480544293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
