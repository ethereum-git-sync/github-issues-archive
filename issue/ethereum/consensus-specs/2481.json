{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/2481",
  "id": 921862766,
  "node_id": "MDU6SXNzdWU5MjE4NjI3NjY=",
  "number": 2481,
  "title": "Beacon Chain Ice Age",
  "user": {
    "login": "torfbolt",
    "id": 233423,
    "node_id": "MDQ6VXNlcjIzMzQyMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/233423?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/torfbolt",
    "html_url": "https://github.com/torfbolt",
    "followers_url": "https://api.github.com/users/torfbolt/followers",
    "following_url": "https://api.github.com/users/torfbolt/following{/other_user}",
    "gists_url": "https://api.github.com/users/torfbolt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/torfbolt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/torfbolt/subscriptions",
    "organizations_url": "https://api.github.com/users/torfbolt/orgs",
    "repos_url": "https://api.github.com/users/torfbolt/repos",
    "events_url": "https://api.github.com/users/torfbolt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/torfbolt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-06-15T22:42:52Z",
  "updated_at": "2021-07-13T12:57:01Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Proposal\r\n\r\nI would like to propose an ice age function for proof of stake, similar to the difficulty bomb in Ethereum proof of work.\r\n\r\n## Reasoning\r\n\r\nThe Ethereum ice age aka difficulty bomb in the current form will not really work after the merge, as PoW difficulty will disappear. But I would argue that the concept itself is one of the most important safeguards to keep the Ethereum protocol layer from becoming stagnant. Some people argue that the ice age was only implemented to facilitate the switch to PoS, and is obsolete after the merge. However, PoS is only one of many important planned changes (e.g. sharding, statelessness, VDFs, ...) to the base layer and I don't see why L1 governance decisions should become easier after the merge.\r\n\r\nThe ice age is a wonderful tool to enforce active, conscious decisions about protocol changes and improvements. It basically codifies the preference of hardforks over softforks in the Ethereum community, as it removes the possibility of voting no to changes by inactivity or lack of participation. \r\n\r\nIn this aspect it is comparable to writing down a regular election interval in a country's constitution, to make sure that a conscious election process and the accompanying public discussions actually happen.\r\n\r\nIf the community consensus is not to change anything substantial within a development period, a hard-fork can of course always consist of just a simple push-back of the ice age. Of course then everyone still needs to upgrade their machines, but\r\na) such a hardfork would be very low in dev effort and risk\r\nb) this is good practice to make sure people are familiar with client updates in case we ever need one rolled out quickly\r\nc) the ice age activation time can be set to increasingly larger intervals as the base layer becomes more feature-complete and tested\r\nd) it can be forked out again completely after the important features on the roadmap have been implemented\r\n\r\n## Requirements\r\n\r\nI would argue that an ice age function should fulfill several requirements:\r\n\r\n1. It should have a configurable activation epoch number t_0 that is resettable to higher values.\r\n2. After activation plus some time interval it should make the chain increasingly or totally unusable.\r\n3. It should do so gradually, to allow for some wiggle-room in hard-fork deployments.\r\n4. It should not be circumvent-able by simply changing other parameters like block gas limits.\r\n\r\n## Implementation\r\n\r\nThe above requirements could be fulfilled by a function that deactivates certain slots within the epoch, i.e. does not allow block proposals for these slots. Compared to simply increasing slot times this has the advantage of keeping the slot times since genesis predictable, both for the past and future. Another alternative would be decreasing the usable execution chain gas limit, but in case of on-chain voting on the maximum gas limit this might be circumvented.\r\n\r\nSince the validator shuffling already guarantees a fair and random slot assignment, the deactivated slot numbers within each epoch can be constant and predetermined, without risk of manipulation or grieving. So an ice age function could just deactivate an increasing amount of slots within each epoch. There are several ways to design this progression:\r\n\r\n1. **Exponential**: similar to the current difficulty bomb, the onset only mildly affects chain throughput, but progresses very harshly. It would deactivate 1, 2, 4, 8, 16 and finally all 32 slots of the epoch, bringing the chain to a complete halt (in contrast to PoW, where the chain can still progress). \r\n2. **Linear**: constant progression, it would deactivate 1, 2, 3, ..., 32 slots of the epoch.\r\n3. **Logistic**: slow onset, strong progression, but tailing out. It would deactivate 1, 2, 4, 8, 16, 24, 28, 30, 31, 32 slots of the epoch. Generates pain quicker than linear, but leaves the chain alive longer than exponential.\r\n\r\n## Questions\r\n\r\n- What is the consensus on the need to have this?\r\n- Are there any similar existing proposals that I didn't find?\r\n- Should this be discussed on a different platform, e.g. EIP?\r\n- Are there better ways to implement an ice age in PoS?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/879063816",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/2481#issuecomment-879063816",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/2481",
    "id": 879063816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTA2MzgxNg==",
    "user": {
      "login": "hwwhww",
      "id": 9263930,
      "node_id": "MDQ6VXNlcjkyNjM5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwwhww",
      "html_url": "https://github.com/hwwhww",
      "followers_url": "https://api.github.com/users/hwwhww/followers",
      "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
      "organizations_url": "https://api.github.com/users/hwwhww/orgs",
      "repos_url": "https://api.github.com/users/hwwhww/repos",
      "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwwhww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-13T12:57:01Z",
    "updated_at": "2021-07-13T12:57:01Z",
    "author_association": "MEMBER",
    "body": "Hi @torfbolt,\r\nAt this moment, I'd say you might be able to get more feedback on [ethereum-magicians](https://ethereum-magicians.org) forum.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/879063816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
