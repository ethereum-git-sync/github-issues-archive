{
  "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-specs",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22/events",
  "html_url": "https://github.com/ethereum/consensus-specs/issues/22",
  "id": 365890706,
  "node_id": "MDU6SXNzdWUzNjU4OTA3MDY=",
  "number": 22,
  "title": "Proof of Possession and BLSVerify clarification",
  "user": {
    "login": "mratsim",
    "id": 22738317,
    "node_id": "MDQ6VXNlcjIyNzM4MzE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mratsim",
    "html_url": "https://github.com/mratsim",
    "followers_url": "https://api.github.com/users/mratsim/followers",
    "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
    "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
    "organizations_url": "https://api.github.com/users/mratsim/orgs",
    "repos_url": "https://api.github.com/users/mratsim/repos",
    "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mratsim/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1063043872,
      "node_id": "MDU6TGFiZWwxMDYzMDQzODcy",
      "url": "https://api.github.com/repos/ethereum/consensus-specs/labels/general:question",
      "name": "general:question",
      "color": "FAD689",
      "default": false,
      "description": "Further information is requested"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-10-02T13:12:03Z",
  "updated_at": "2018-10-15T23:33:50Z",
  "closed_at": "2018-10-15T23:33:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#17 added the `add_validator` routine and the first use of `bls_proof_of_possession` mentioned in at the beginning of the spec: [PoW Main changes](https://github.com/ethereum/eth2.0-specs/blob/6c13664b9557316ec6b2ee144f0ebcd268dc863e/specs/casper_sharding_v2.1.md#pow-main-chain-changes).\r\n\r\nAs mentionned on Gitter, either sorting the validator keys or using the bls_proof_of_possession are necessary to avoid [rogue public keys attack](https://crypto.stanford.edu/~dabo/pubs/papers/BLSmultisig.html#mjx-eqn-eqagg) where an attacker can claim that both he and Bob have signed the message but only Bob did.\r\n\r\nNow regarding this part I'd like to confirm the following 2 things:\r\n\r\n```python\r\ndef add_validator(pubkey, proof_of_possession, withdrawal_shard,\r\n                  withdrawal_address, randao_commitment, current_dynasty):\r\n    # if following assert fails, validator induction failed\r\n    # move on to next validator registration log\r\n    assert BLSVerify(pub=pubkey,\r\n                     msg=sha3(pubkey),\r\n                     sig=proof_of_possession)\r\n    ...\r\n```\r\n\r\n1. Is `sha3` the usual `keccak256`?\r\n2. Is BLSVerify standard ECDSA verify but with BLS curve? \r\n\r\n    In Milagro that would be [the following](https://github.com/milagro-crypto/amcl/blob/9e535e73f3f84c61c447d12fa82ab8fc4998168b/version3/c/ecdh.h#L132-L142):\r\n    ```C\r\n    /**\t@brief ECDSA Signature Verification\r\n    *\r\n      IEEE-1363 ECDSA Signature Verification\r\n      @param h is the hash type\r\n      @param W the input public key\r\n      @param M the input message\r\n      @param c component of the input signature\r\n      @param d component of the input signature\r\n      @return 0 or an error code\r\n    */\r\n    extern int ECP_ZZZ_VP_DSA(int h,octet *W,octet *M,octet *c,octet *d);\r\n    ```\r\n\r\n    and if we take [secp256k1](https://github.com/bitcoin-core/secp256k1/blob/1e6f1f5ad5e7f1e3ef79313ec02023902bf8175c/include/secp256k1.h#L399-L422)\r\n    ```C\r\n    /** Verify an ECDSA signature.\r\n    *\r\n    *  Returns: 1: correct signature\r\n    *           0: incorrect or unparseable signature\r\n    *  Args:    ctx:       a secp256k1 context object, initialized for verification.\r\n    *  In:      sig:       the signature being verified (cannot be NULL)\r\n    *           msg32:     the 32-byte message hash being verified (cannot be NULL)\r\n    *           pubkey:    pointer to an initialized public key to verify with (cannot be NULL)\r\n    *\r\n    * To avoid accepting malleable signatures, only ECDSA signatures in lower-S\r\n    * form are accepted.\r\n    *\r\n    * If you need to accept ECDSA signatures from sources that do not obey this\r\n    * rule, apply secp256k1_ecdsa_signature_normalize to the signature prior to\r\n    * validation, but be aware that doing so results in malleable signatures.\r\n    *\r\n    * For details, see the comments for that function.\r\n    */\r\n    SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_verify(\r\n        const secp256k1_context* ctx,\r\n        const secp256k1_ecdsa_signature *sig,\r\n        const unsigned char *msg32,\r\n        const secp256k1_pubkey *pubkey\r\n    ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\r\n    ```",
  "closed_by": {
    "login": "djrtwo",
    "id": 1433595,
    "node_id": "MDQ6VXNlcjE0MzM1OTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/djrtwo",
    "html_url": "https://github.com/djrtwo",
    "followers_url": "https://api.github.com/users/djrtwo/followers",
    "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
    "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
    "organizations_url": "https://api.github.com/users/djrtwo/orgs",
    "repos_url": "https://api.github.com/users/djrtwo/repos",
    "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/djrtwo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426330708",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/22#issuecomment-426330708",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
    "id": 426330708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjMzMDcwOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T16:01:20Z",
    "updated_at": "2018-10-02T16:01:20Z",
    "author_association": "MEMBER",
    "body": "Although Vitalik just updated it with `hash`, I think we will at this point in time define it as `hash2`, where `hash != hash2` and reference keccak256 in the appendix as the likely `hash2`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426330708/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426331480",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/22#issuecomment-426331480",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
    "id": 426331480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjMzMTQ4MA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T16:03:26Z",
    "updated_at": "2018-10-02T16:03:26Z",
    "author_association": "MEMBER",
    "body": "For (2), I think we do a `bls.sign` and `bls.verify` but with `bls.hash_to_G2` utilizing the alternate hash.\r\n\r\nGetting some clarity on this now",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426331480/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426625412",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/22#issuecomment-426625412",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
    "id": 426625412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjYyNTQxMg==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T12:50:01Z",
    "updated_at": "2018-10-03T12:50:01Z",
    "author_association": "MEMBER",
    "body": "Aaah yes you're right, though `hash_to_G2` is included in the BLS signing definition already (at least de facto) so there's no need to put it in this part of the spec. For the hash used inside of `hash_to_G2`, so far I'd say `blake2(x)[32:]` (ie. the other half of blake2) seems most sensible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/426625412/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/428065943",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/22#issuecomment-428065943",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
    "id": 428065943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA2NTk0Mw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T05:36:27Z",
    "updated_at": "2018-10-09T05:36:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's worth noting that the `G1::mapit(h)` (map to G1) function in Rust Milagro panics if you supply it < 48 bytes.\r\n\r\nWe might need to give the function 48 bytes, or specify some padding scheme. I don't understand the full implications of reducing the input space of the map so I can't provide input there.\r\n\r\nThe beacon_chain impl (and comments in this post) talk about hashing to G2, but from what I can see in the  [2003 BLS paper](https://crypto.stanford.edu/~dabo/papers/aggreg.pdf), the message hash should be mapped to G1. Once again, don't have the understanding to make any firm statement on that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/428065943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/430049817",
    "html_url": "https://github.com/ethereum/consensus-specs/issues/22#issuecomment-430049817",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-specs/issues/22",
    "id": 430049817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA0OTgxNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T23:33:50Z",
    "updated_at": "2018-10-15T23:33:50Z",
    "author_association": "MEMBER",
    "body": "This is noted in the spec as a to-do \"Use a separate hash function for the proof of possession\"\r\n\r\nClosing this issue for now",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-specs/issues/comments/430049817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
