{
  "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24/events",
  "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24",
  "id": 756905914,
  "node_id": "MDU6SXNzdWU3NTY5MDU5MTQ=",
  "number": 24,
  "title": "Proposal: BLS serialization tests",
  "user": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-12-04T08:24:19Z",
  "updated_at": "2021-10-02T10:02:01Z",
  "closed_at": "2021-10-02T10:02:01Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# BLS serialization tests\r\n\r\n### Background\r\n\r\n- The [latest IETF BLS standard draft (04)](https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-04#appendix-A) uses [ZCash's point representations as the serialization format](https://github.com/zcash/librustzcash/blob/6e0364cd42a2b3d2b958a54771ef51a8db79dd29/pairing/src/bls12_381/README.md#serialization).\r\n- We used to have an old https://github.com/ethereum/eth2.0-specs/blob/v0.9.0/specs/bls_signature.md#point-representations doc as the explainer of the Zcash docs. But it was deleted since we expected the IETF BLS standard would define it more formally.\r\n- Here is a good summary of **the different cases of 3 MSBs** of byte 0 in compressed format (see the \"ZCash semantics\" column): https://github.com/pairingwg/bls_standard/issues/16.\r\n- We currently don't have a test suite for BLS compression/decompression tests.\r\n\r\n\r\n### Proposed new test suite\r\n\r\nThe input and output of our BLS APIs are all in minimal-pubkey-size form (compressed 48-byte pubkey and 96-byte signature). So the functions to test would be:\r\n```python\r\ndef compress_G1(decompressed_pubkey: bytes96) -> bytes48\r\n```\r\n- input:\r\n    - decompressed_pubkey: bytes96\r\n- output:\r\n    - compressed_pubkey: (i) bytes48 or (ii) empty for the invalid cases.\r\n\r\n```python\r\ndef decompress_G1(compressed_pubkey: bytes48) -> bytes96\r\n```\r\n- input:\r\n    - compressed_pubkey: bytes48\r\n- output:\r\n    - decompressed_pubkey: (i) bytes96 (ii) empty for the invalid cases.\r\n\r\n```python\r\ndef compress_G2(decompressed_signature: bytes192) -> bytes96\r\n```\r\n- input:\r\n    - decompressed_signature: bytes192\r\n- output:\r\n    - compressed_signature: (i) bytes96 (ii) empty for the invalid cases.\r\n\r\n```python\r\ndef decompress_G2(compressed_signature: bytes96) -> bytes192\r\n```\r\n- input:\r\n    - compressed_signature: bytes96\r\n- output:\r\n    - decompressed_signature: (i) bytes192 (ii) empty for the invalid cases.\r\n\r\n### Discussions\r\n\r\n#### 1. Are the APIs available?\r\n - **1.1.** I naively assumed that the BLST binding does provide these APIs for all supported languages. Could the client teams help check if it's true? /cc @kirk-baird @michaelsproul @benjaminion @mratsim @nisdas and @dot-asm \r\n - **1.2.** Do your compression and decompression APIs include subgroup membership checking?\r\n\r\n#### 2. Did the fuzzing already cover the 3-MSBs edge cases of BLS tests?\r\n/cc @zedt3ster\r\n\r\n#### 3. Do you think it would help to reduce the consensus error risks?\r\n/cc @JustinDrake @CarlBeek\r\n\r\n",
  "closed_by": {
    "login": "hwwhww",
    "id": 9263930,
    "node_id": "MDQ6VXNlcjkyNjM5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9263930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hwwhww",
    "html_url": "https://github.com/hwwhww",
    "followers_url": "https://api.github.com/users/hwwhww/followers",
    "following_url": "https://api.github.com/users/hwwhww/following{/other_user}",
    "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions",
    "organizations_url": "https://api.github.com/users/hwwhww/orgs",
    "repos_url": "https://api.github.com/users/hwwhww/repos",
    "events_url": "https://api.github.com/users/hwwhww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hwwhww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/738647039",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-738647039",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 738647039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODY0NzAzOQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T08:40:01Z",
    "updated_at": "2020-12-04T08:43:52Z",
    "author_association": "NONE",
    "body": "@hwwhww For testing compressing/decompressing of G1/G2 points, the Go API in `BLST` does have support for this so its not an issue on our end. Serialization test format looks good to me :+1: \r\n\r\nOn 1.2 , BLST has removed subgroup checks when decompressing points as of v3 , this was just merged into Prysm here. \r\nhttps://github.com/prysmaticlabs/prysm/pull/7971 . I imagine it would be the same for the other language bindings too. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/738647039/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/739064128",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-739064128",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 739064128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTA2NDEyOA==",
    "user": {
      "login": "dot-asm",
      "id": 9038069,
      "node_id": "MDQ6VXNlcjkwMzgwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dot-asm",
      "html_url": "https://github.com/dot-asm",
      "followers_url": "https://api.github.com/users/dot-asm/followers",
      "following_url": "https://api.github.com/users/dot-asm/following{/other_user}",
      "gists_url": "https://api.github.com/users/dot-asm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dot-asm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dot-asm/subscriptions",
      "organizations_url": "https://api.github.com/users/dot-asm/orgs",
      "repos_url": "https://api.github.com/users/dot-asm/repos",
      "events_url": "https://api.github.com/users/dot-asm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dot-asm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T22:49:27Z",
    "updated_at": "2020-12-04T22:49:27Z",
    "author_association": "NONE",
    "body": "> * **1.1.** I naively assumed that the BLST binding does provide these APIs for all supported languages.\r\n\r\nThe group check is an expensive operation, and it's argued that application is entitled for a choice when to perform it. Primarily because there are situations when it's possible to perform multiple checks in parallel. In other words blst deserialization/uncompression subroutines don't perform group checks, and it's application's responsibility to either make explicit in-group-check call right after deserialization, or pass perform-group-checks-as-you-go flags to higher level procedures and utilize parallelism whenever possible.\r\n\r\nSpeaking of serialization format in more general terms. As data is deserialized and converted into internal representation format, it implicitly gets modulo reduced. In other words deserialization procedure can handle non-reduced input seamlessly. But it's only natural to assume that if input is not reduced, then somebody is trying to mess with you. For this reason first thing the [blst] deserialaztion procedure does is to ensure that input is fully reduced. However, this is not actually specified, and a formal concern can be and even was raised. In other words, while we are at it, it would be only appropriate to explicitly specify that input is expected to be fully reduced and provide corresponding test vector.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/739064128/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/742447878",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-742447878",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 742447878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQ0Nzg3OA==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T10:59:29Z",
    "updated_at": "2020-12-10T10:59:29Z",
    "author_association": "NONE",
    "body": "1.1 The C API that we use has support for the decompression/uncompression from Zcash\r\n1.2 We do infinity checks and subgroup checks after decompression and skip those at verification because we do a lot of verification with the same public key so no need to pay an expensive subgroup check every time.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/742447878/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/742843922",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-742843922",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 742843922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjg0MzkyMg==",
    "user": {
      "login": "kirk-baird",
      "id": 27878213,
      "node_id": "MDQ6VXNlcjI3ODc4MjEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/27878213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk-baird",
      "html_url": "https://github.com/kirk-baird",
      "followers_url": "https://api.github.com/users/kirk-baird/followers",
      "following_url": "https://api.github.com/users/kirk-baird/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk-baird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk-baird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk-baird/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk-baird/orgs",
      "repos_url": "https://api.github.com/users/kirk-baird/repos",
      "events_url": "https://api.github.com/users/kirk-baird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk-baird/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T22:36:56Z",
    "updated_at": "2020-12-10T22:36:56Z",
    "author_association": "NONE",
    "body": "These APIs are all available in Apache Milagro Rust and could trivially be added to `milagro_bls`.\r\n\r\nWith respect to the subgroup checking in lighthouse we do that for PublicKeys at serialization time and Signatures at verification time. So it may not be on by default for lighthouse but can easily be added to tests. So happy eitherway if we are to include or not include the subgroup checks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/742843922/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/744122282",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-744122282",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 744122282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDEyMjI4Mg==",
    "user": {
      "login": "zedt3ster",
      "id": 9854592,
      "node_id": "MDQ6VXNlcjk4NTQ1OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9854592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zedt3ster",
      "html_url": "https://github.com/zedt3ster",
      "followers_url": "https://api.github.com/users/zedt3ster/followers",
      "following_url": "https://api.github.com/users/zedt3ster/following{/other_user}",
      "gists_url": "https://api.github.com/users/zedt3ster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zedt3ster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zedt3ster/subscriptions",
      "organizations_url": "https://api.github.com/users/zedt3ster/orgs",
      "repos_url": "https://api.github.com/users/zedt3ster/repos",
      "events_url": "https://api.github.com/users/zedt3ster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zedt3ster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T02:09:31Z",
    "updated_at": "2020-12-14T02:09:31Z",
    "author_association": "NONE",
    "body": "From a fuzzing perspective, the existing BLS work (available [here](https://github.com/sigp/beacon-fuzz/tree/master/bls-fuzz)) included the 3 MSBs but was only aimed at the compressed version (i.e. MSB0 = 1)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/744122282/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/748207402",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-748207402",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 748207402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODIwNzQwMg==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-18T17:04:02Z",
    "updated_at": "2020-12-18T17:04:02Z",
    "author_association": "NONE",
    "body": "Here is a case from November 2019 where there was an infinity bit set and we didn't check properly that the rest of the bits were 0: https://github.com/status-im/nimbus-eth2/issues/555\r\n\r\nThis was before we skipped the Ethereum signature for testing so it's from one of the old test vectors.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/748207402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/932122554",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/24#issuecomment-932122554",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/24",
    "id": 932122554,
    "node_id": "IC_kwDOCu9hM843jw-6",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-01T10:47:52Z",
    "updated_at": "2021-10-01T10:47:52Z",
    "author_association": "NONE",
    "body": "Close?\r\n\r\nhttps://github.com/ethereum/bls12-381-tests includes decompression tests (cc @asanso). Compression can be done by clients via round-trip tests to confirm internal consistency.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/932122554/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
