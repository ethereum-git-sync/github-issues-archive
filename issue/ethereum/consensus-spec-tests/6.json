{
  "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6/events",
  "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/6",
  "id": 454479042,
  "node_id": "MDU6SXNzdWU0NTQ0NzkwNDI=",
  "number": 6,
  "title": "Attestation signatures used in tests are invalid due to ignored custody bit",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-06-11T04:49:20Z",
  "updated_at": "2019-06-11T12:28:09Z",
  "closed_at": "2019-06-11T12:28:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "While running the block sanity tests for Lighthouse we noticed something funky. It seems that in `verify_indexed_attestation`, the two message hashes for custody bit 0 and 1 can sometimes end up being equal! This seems to be due to the custody bits being supplied as integer literals (`0b0` or `0b1`), as changing them to `False` and `True` causes the message hashes to be distinct again (and to match what Lighthouse thinks they should be).\r\n\r\nThere's a demo of this on the `ignored-custody-field` branch on my fork of the spec here: https://github.com/ethereum/eth2.0-specs/compare/v0.6.3...michaelsproul:ignored-custody-bit\r\n\r\nI've been running the `test_attestation` test from a `venv` in `test_libs/pyspec` like:\r\n\r\n```\r\npytest --config=minimal eth2spec -k test_attestation -s\r\n```\r\n\r\nWhich produces the message hash `891e0385800ff598f80d2339ff1cd2ac46c3717dca00d099a7008c104946e765` for both messages when using the `0b1` syntax, and `891e0385800ff598f80d2339ff1cd2ac46c3717dca00d099a7008c104946e765` or `5a36957157fb41a2c7ecd1e8358f6896b15b6ef6b7ac7344f851f8c64f37f9f5` when using `False`/`True`.\r\n\r\nThe signature used in the tests must also be constructed badly, because the test passes",
  "closed_by": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/500818917",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/6#issuecomment-500818917",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/6",
    "id": 500818917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDgxODkxNw==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-11T12:28:09Z",
    "updated_at": "2019-06-11T12:28:09Z",
    "author_association": "MEMBER",
    "body": "Found the source of the bug:\r\n\r\nhttps://github.com/ethereum/eth2.0-specs/blob/cb9301a9fece8864d97b6ff6b0bb3a662fa21484/test_libs/pyspec/eth2spec/utils/minimal_ssz.py#L155\r\n\r\nWhat fixes it:\r\n```python\r\n-        return b'\\x01' if value is True else b'\\x00'\r\n+        return b'\\x01' if value else b'\\x00'\r\n```\r\nCoincidentally, we refactored SSZ completely on dev a week ago, and the new implementation is:\r\nhttps://github.com/ethereum/eth2.0-specs/blob/cf9169411e52611cb55e025b7a4662a394e4011a/test_libs/pyspec/eth2spec/utils/ssz/ssz_impl.py#L25\r\n\r\n```python\r\nif value:\r\n    return b'\\x01'\r\nelse:\r\n    return b'\\x00'\r\n```\r\nA simple test shows that it is running correctly on byte / integer values now:\r\n```python\r\nprint(\"bytes:\")\r\nif b\"\": print(\"no empty!\")\r\nif b\"\\x00\": print(\"yes zero!\")\r\nif b\"\\x01\": print(\"yes one!\")\r\nprint(\"binary literal:\")\r\nif 0b0: print(\"no!\")\r\nif 0b1: print(\"yes!\")\r\nprint(\"int literal:\")\r\nif 0: print(\"no!\")\r\nif 1: print(\"yes!\")\r\n```\r\nAnd we don't really pass byte strings to it, so that's fine.\r\n```\r\nbytes:\r\nyes zero!\r\nyes one!\r\nbinary literal:\r\nyes!\r\nint literal:\r\nyes!\r\n```\r\n\r\nThanks for reporting, but it won't need a fix, as it should be working on the dev branch correctly now, which will be released as v0.7.0 shortly :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/500818917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
