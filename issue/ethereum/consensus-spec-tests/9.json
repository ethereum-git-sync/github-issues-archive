{
  "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9/events",
  "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/9",
  "id": 466996467,
  "node_id": "MDU6SXNzdWU0NjY5OTY0Njc=",
  "number": 9,
  "title": "Add More Test Coverage for Longer, Dynamic SSZ Lists",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-07-11T16:36:38Z",
  "updated_at": "2023-12-27T02:54:52Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "TL;DR - SSZ tests are not exhaustive for dynamic lists with many elements in them.\r\n\r\n## Context \r\n\r\nOur Go-SSZ library is currently up-to-date with v0.8 and passing all latest spec tests, both minimal and mainnet. However, we encountered something quite interesting in slot/block sanity tests when it came to SSZ. Our hash tree root for the beacon state in all the slot/block sanity tests was failing and returning a different root than what the spec wants. We were confused as we were indeed passing all types of spec tests. We noticed, however, that the SSZ spec tests do not cover cases where dynamic lists have a lot of elements (the slot sanity tests had 512 validators in the registry of the state).\r\n\r\nWe found a discrepancy between Python and Go in mixInLength when converting the length of an object into a 256-bit number. In Python, following code returns:\r\n\r\n```python\r\n>>> balances = [32 for _ in range(512)}\r\n>>> print(f\"0x{len(balances).to_bytes(32, 'little').hex()}\")\r\n\r\n0x0002000000000000000000000000000000000000000000000000000000000000\r\n```\r\nThe same code in Go, however, returns:\r\n\r\n```go\r\nbalances := make([]uint64, 512)\r\nbuf := make([]byte, 32)\r\nbinary.PutUvarint(buf, uint64(len(balances)))\r\nfmt.Printf(\"%x\\n\", buf)\r\n\r\n// Prints...\r\n0x8004000000000000000000000000000000000000000000000000000000000000\r\n```\r\nIt turns out we had to use a different method of putting the length into a buffer than `binary.PutUvarint`, however,  we expected SSZ spec tests to have covered these cases. It turns out that if there were a single SSZ spec test case that had lists with lengths as big as the ones in the sanity tests, we could have caught this bug earlier. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510628668",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/9#issuecomment-510628668",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9",
    "id": 510628668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDYyODY2OA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-11T19:48:56Z",
    "updated_at": "2019-07-11T19:48:56Z",
    "author_association": "MEMBER",
    "body": "Yes, the SSZ spec doesn't include Var-ints. Var-ints are simply **not the same as uint256**, they encode numbers in 7 bits per byte, with the last bit signifying an extended number (reading the next 7 bits from the next byte). It's used in a few places in Eth1, but __*nowhere*__ in Eth 2 (yes, bitlists are encoded similar, but not the same), so I am quite surprised that you even encode it like that.\r\n\r\nBut fair enough, we can put higher list sizes in some spec tests. Good for the extension of the ssz-generic test suite later.\r\n\r\nFor now I recommend copying the ssz tests in https://github.com/ethereum/eth2.0-specs/blob/dev/test_libs/pyspec/eth2spec/utils/ssz/test_ssz_impl.py\r\n\r\n(We will change them to vectorized tests later, but 0.8 updates + more tooling first)\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510628668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510915174",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/9#issuecomment-510915174",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9",
    "id": 510915174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDkxNTE3NA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-12T14:49:35Z",
    "updated_at": "2019-07-12T14:49:35Z",
    "author_association": "NONE",
    "body": "Hi @protolambda totally - we shouldn't have been encoding it that way but it was just a bit tricky that no SSZ spec tests failed due to that. Our wrong approach/bug could have been caught through better coverage from the spec tests, however.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510915174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510917399",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/9#issuecomment-510917399",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/9",
    "id": 510917399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDkxNzM5OQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-12T14:55:28Z",
    "updated_at": "2019-07-12T14:55:28Z",
    "author_association": "MEMBER",
    "body": "It was an off-by-28 :sweat_smile: And coverage didn't catch it, as branch/line coverage is the same for different lengths mix ins. Current limit is at 100 items to put in a dynamic list, but your bug only triggered after 127 (more than 7 bits). Sure is a fun one.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/510917399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
