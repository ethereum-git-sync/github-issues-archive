{
  "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
  "repository_url": "https://api.github.com/repos/ethereum/consensus-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5/comments",
  "events_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5/events",
  "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5",
  "id": 453101461,
  "node_id": "MDU6SXNzdWU0NTMxMDE0NjE=",
  "number": 5,
  "title": "Write binary data in yaml canonical format instead of hex encoded strings ",
  "user": {
    "login": "prestonvanloon",
    "id": 7246818,
    "node_id": "MDQ6VXNlcjcyNDY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prestonvanloon",
    "html_url": "https://github.com/prestonvanloon",
    "followers_url": "https://api.github.com/users/prestonvanloon/followers",
    "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
    "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
    "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
    "repos_url": "https://api.github.com/users/prestonvanloon/repos",
    "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2019-06-06T15:36:26Z",
  "updated_at": "2023-12-27T02:55:35Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "We're finding that unmarshalling yaml is very cumbersome with hex encoded strings as binary data. \r\n\r\nExample: `ssz: '0x00000000'` cannot be inherently unmarshaled to a byte slice in go. [go playground](https://play.golang.org/p/Xl0l370f8Dy) link. \r\n\r\nLooking at the [spec for yaml](https://yaml.org/type/binary.html), this data should be represented as a base64 binary string with the prefix `!!binary`.\r\n\r\nEdit: I no longer support adding `!!binary` as it is entirely unnecessary with modern libraries understanding that Base64 encoded strings are binary data. However, the tag resolution in the yaml spec for this scenario is unclear. It's probably safer to add `!!binary` explicitly. \r\n",
  "closed_by": {
    "login": "prestonvanloon",
    "id": 7246818,
    "node_id": "MDQ6VXNlcjcyNDY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prestonvanloon",
    "html_url": "https://github.com/prestonvanloon",
    "followers_url": "https://api.github.com/users/prestonvanloon/followers",
    "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
    "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
    "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
    "repos_url": "https://api.github.com/users/prestonvanloon/repos",
    "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499562119",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-499562119",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 499562119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU2MjExOQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T16:08:44Z",
    "updated_at": "2019-06-06T16:26:09Z",
    "author_association": "MEMBER",
    "body": "We configured our parser to handle this quite easily, so it's not a problem for us.\r\n\r\nI'm not opposed to switching if it's a common problem, but my preference is that we keep the YAML and JSON representations of binary data the same, as to reduce total system complexity.\r\n\r\nEDIT: When I refer to JSON, I'm referring to the [minimal validator API spec](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/validator/0_beacon-node-validator-api.md). Here signatures, roots and other binary data are represented as `0x00...`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499562119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499575424",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-499575424",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 499575424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU3NTQyNA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T16:44:26Z",
    "updated_at": "2019-06-06T16:44:54Z",
    "author_association": "NONE",
    "body": "Still investigating this proposal. We have been using hex encoded strings in eth1 for some time now and have existing functionality for that with JSON encoding in go-ethereum.\r\n\r\nExample block returned from json-rpc in eth1.\r\n```json\r\n{\r\n    \"number\": 3,\r\n    \"hash\": \"0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46\",\r\n    \"parentHash\": \"0x2302e1c0b972d00932deb5dab9eb2982f570597d9d42504c05d9c2147eaf9c88\",\r\n    \"nonce\": \"0xfb6e1a62d119228b\",\r\n    \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n    \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"transactionsRoot\": \"0x3a1b03875115b79539e5bd33fb00d8f7b7cd61929d5a3c574f507b8acf415bee\",\r\n    \"stateRoot\": \"0xf1133199d44695dfa8fd1bcfe424d82854b5cebef75bddd7e40ea94cda515bcb\",\r\n    \"receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\r\n    \"miner\": \"0x8888f1f195afa192cfee860698584c030f4c9db1\",\r\n    \"difficulty\": '21345678965432',\r\n    \"totalDifficulty\": '324567845321',\r\n    \"size\": 616,\r\n    \"extraData\": \"0x\",\r\n    \"gasLimit\": 3141592,\r\n    \"gasUsed\": 21662,\r\n    \"timestamp\": 1429287689,\r\n    \"transactions\": [\r\n        \"0x9fc76417374aa880d4449a1f7f31ec597f00b1f6f3dd2d66f4c9c6c445836d8b\"\r\n    ],\r\n    \"uncles\": []\r\n}\r\n``` \r\n\r\nSuggesting a shift from hex encoded strings to base64 encoding would be annoying to say the least. \r\n\r\nWill follow up with a bit more before closing this out, but it's looking like it should be hex encoded. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499575424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499580935",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-499580935",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 499580935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU4MDkzNQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T16:59:15Z",
    "updated_at": "2019-06-06T16:59:15Z",
    "author_association": "NONE",
    "body": "It looks like go-ethereum uses type overrides ([ex](https://github.com/ethereum/go-ethereum/blob/3996bc1ad91665ad30036713fba11840a36dfff0/core/types/block.go#L95))  which uses [gencodec](https://github.com/fjl/gencodec) to create custom json/yaml parsers to map to go structs ([ex](https://github.com/ethereum/go-ethereum/blob/3996bc1ad91665ad30036713fba11840a36dfff0/core/types/gen_header_json.go)).\r\nSo, it looks like we can generate some extra code to support hex encoded strings to represent binary data and close out this issue.\r\n\r\nThe follow up, if its worth following up, is why are we using hex encoded strings to represent binary data in the first place instead of the seemingly more intuitive Base64 encoding? \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499580935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499586514",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-499586514",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 499586514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU4NjUxNA==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T17:15:27Z",
    "updated_at": "2019-06-06T17:15:27Z",
    "author_association": "NONE",
    "body": "one reason to use one encoding over another is that it should ideally match whatever is used in canonical value printers so it's easy to compare logs with yaml files..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499586514/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499665338",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-499665338",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 499665338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTY2NTMzOA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T20:59:11Z",
    "updated_at": "2019-06-06T20:59:11Z",
    "author_association": "NONE",
    "body": "Good thinking. Clients are more likely to print hex encoded strings for binary data. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/499665338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/502898111",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-502898111",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 502898111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjg5ODExMQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T00:23:43Z",
    "updated_at": "2019-06-18T00:23:43Z",
    "author_association": "NONE",
    "body": "Reopening this. We've found it too infeasible to writing special decoding/encoding support for these byte arrays as hex encoded strings. Instead, we overwrite the hex strings to base64 in the yaml, then ingest that data to the tests. \r\n\r\nWith regards to \"do what the JSON API does\", I recant my earlier statement and I don't support hex encoded strings in JSON going forward. I see little benefit to hex encoded over base64 and it means we have to write a special work arounds to support it.\r\n\r\nThe latter comment is probably for a different discussion topic. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/502898111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503736970",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503736970",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503736970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzczNjk3MA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T20:37:09Z",
    "updated_at": "2019-06-19T20:37:09Z",
    "author_association": "NONE",
    "body": "Another note in support of base64, we've found that these yaml files are saving about 30% space on disk as base64 rather than hex encoded. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503736970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503741842",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503741842",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503741842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc0MTg0Mg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T20:51:56Z",
    "updated_at": "2019-06-19T20:51:56Z",
    "author_association": "MEMBER",
    "body": "For size, we could also compress, encode suites in SSZ (or other), or split mainnet suites (huge) from minimal suites (reasonable) in another repo. If there's an issue with size, clients should put that forward, and describe their resources / caching. But I don't think there's much of a problem (although yes, yaml encoded mainnet tests are very large). \r\n\r\nGenerally I think it's perfectly fine to load tests in a convenient way, i.e. load into a map, translate python names and hex values, and load into the appropriate types. Better than describing all new types just for testing. In Go specifically, I just load them through https://github.com/mitchellh/mapstructure and do some translation, then put them directly in the types I use for state-transitioning. No extra code, or per-type conversion. And while I agree it's far from perfect, it's affordable (tests loading doesn't take that long) and easy. \r\n\r\nYou could generate structs with decoder definitions or use a custom yaml decoder, but I really just think running (and then passing) the tests at this stage is worth much more than (over-)engineering the test runner. Eventually, yes, it would be very nice. But first things first.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503741842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503743065",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503743065",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503743065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc0MzA2NQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T20:55:32Z",
    "updated_at": "2019-06-19T20:55:32Z",
    "author_association": "NONE",
    "body": "It's not necessarily an issue with size, but difficulty of using existing tools with hex encoded strings for seemingly no benefit. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503743065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503744195",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503744195",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503744195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc0NDE5NQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T20:59:02Z",
    "updated_at": "2019-06-19T20:59:02Z",
    "author_association": "MEMBER",
    "body": "If other clients are in for a change too, we can change it. But don't want to break the working setup of anyone right before spec freeze.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503744195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503752411",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503752411",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503752411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc1MjQxMQ==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T21:24:46Z",
    "updated_at": "2019-06-19T21:24:46Z",
    "author_association": "NONE",
    "body": "The point of yaml seems to be to optimize utility for humans, where hex is more commonly used - ie `echo hello | sha256sum` prints in hex. \r\n\r\nElse we might as well go with a binary format that can be memory-mapped instead of parsed - that would at least net a simplification and speedup of test-running.\r\n\r\nFrom nimbus, we're fine with keeping things interoperable and simple with hex too, and not too much yaml magic.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503752411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503762183",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503762183",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503762183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc2MjE4Mw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T21:58:15Z",
    "updated_at": "2019-06-19T21:58:33Z",
    "author_association": "NONE",
    "body": "Thanks for the context. I now understand some of the reasoning that went into choosing hex for yaml, but I disagree with this decision. When we need to read the data as humans, we would likely do that in some form of test runner. I.e. `Method failed. Wanted 0xf2d, got 0xabb.` This formatting could be done with whatever stdout printer is being used without subjecting others to the cost having yaml data as hex. \r\n\r\nWe (and others) have had to write custom yaml processing logic or workarounds to support hex encoded strings in over 1 million of lines of yaml in this repository. \r\n\r\nMaybe it is too late to undo this decision before spec freeze, but we think it is a technical debt that we'll be paying for a long time.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503762183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503765784",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503765784",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503765784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc2NTc4NA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T22:12:02Z",
    "updated_at": "2019-06-19T22:12:02Z",
    "author_association": "MEMBER",
    "body": "@prestonvanloon Can you form a concrete counter proposal, to be executed after spec freeze, if it works for everyone?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503765784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503771830",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503771830",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503771830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc3MTgzMA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T22:36:06Z",
    "updated_at": "2019-06-19T22:36:06Z",
    "author_association": "NONE",
    "body": "This issue is my proposal. Base64 is the canonical format for binary data representation in yaml. \r\nNearly every library supports ingesting base64 as binary. \r\n\r\nSources: \r\nhttps://yaml.org/spec/1.2/spec.html\r\nhttps://yaml.org/type/binary.html\r\n> Canonical: Base64 without white space and line breaks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503771830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503773454",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503773454",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503773454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc3MzQ1NA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T22:43:35Z",
    "updated_at": "2019-06-19T22:43:35Z",
    "author_association": "MEMBER",
    "body": "Was thinking of something more radical. If we give up on readability, there should be much better options.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503773454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503776600",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-503776600",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 503776600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc3NjYwMA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-19T22:57:30Z",
    "updated_at": "2019-06-19T22:57:30Z",
    "author_association": "NONE",
    "body": "We have no preference on readability or format as long as we don't have to waste time implementing things that already exist. YAML is fine if we use YAML as intended. JSON is fine because the JSON spec suggests Base64 as well.\r\n\r\nThis isn't giving up on readability. YAML is readable. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/503776600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/505265068",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-505265068",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 505265068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTI2NTA2OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-25T03:19:51Z",
    "updated_at": "2019-06-25T03:25:35Z",
    "author_association": "MEMBER",
    "body": "We don't intend to use any of the fancy `!!` YAML notation due to the more simple parsers not supporting this usage. The `0x` is super common in ethereum and human readable and speakable.\r\n\r\nI think we give something up if fields in tests such as pubkeys become difficult to discuss due to the base64 notation, especially considering pubkeys will almost certainly be represented in hex to users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/505265068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/505471618",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-505471618",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 505471618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTQ3MTYxOA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-25T14:31:03Z",
    "updated_at": "2019-06-25T14:32:58Z",
    "author_association": "NONE",
    "body": "@djrtwo For some additional context, we have wasted at least one eng week to write tooling to support non-canonical formatting with our standard libraries. I think it is a bad idea to use hex for _everything_. \r\n\r\nIt makes sense when you need representation to be human readable for end users, like a wallet address in UI, but binary data for test ingestion is not one of those use cases. This data is not end user facing and is causing a lot of pain for little/no benefit. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/505471618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/516646344",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-516646344",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 516646344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY0NjM0NA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T00:31:44Z",
    "updated_at": "2019-07-31T00:31:44Z",
    "author_association": "MEMBER",
    "body": "So pretty much all data, unless it's not a SSZ object, will also be available as ssz-encoded raw bytes in the next testing release. See https://github.com/ethereum/eth2.0-specs/pull/1320\r\nAn example can be found here: https://github.com/ethereum/eth2.0-spec-tests/tree/tests-v082-reorg/tests/minimal/phase0/operations/deposit/pyspec_tests/success_top_up\r\n\r\nSo effectively no yaml / hex encoded data, unless for a small test metadata detail (which shouldn't touch ssz/production code anyway). Does this work for Prysm @prestonvanloon ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/516646344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/518022198",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-518022198",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 518022198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAyMjE5OA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-04T17:41:33Z",
    "updated_at": "2019-08-04T17:41:33Z",
    "author_association": "NONE",
    "body": "> unless for a small test metadata detail\r\n\r\nWhat does this mean? There will still be some required yaml?\r\n\r\nSwitching to ssz encoded data will most likely work for us. Thanks for the recent improvements. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/518022198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/518025439",
    "html_url": "https://github.com/ethereum/consensus-spec-tests/issues/5#issuecomment-518025439",
    "issue_url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/5",
    "id": 518025439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAyNTQzOQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-04T18:28:40Z",
    "updated_at": "2019-08-04T18:28:40Z",
    "author_association": "MEMBER",
    "body": "@prestonvanloon there are a few small files that just say things like \"there are 10 deposits to read from ssz files\", \"there are 6 blocks to read\", \"BLS required here\". Etc. etc. Nothing hard to parse really.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/consensus-spec-tests/issues/comments/518025439/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
