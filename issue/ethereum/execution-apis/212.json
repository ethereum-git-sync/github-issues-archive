{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/212",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/212",
  "id": 1220389359,
  "node_id": "I_kwDOFoG9Gs5Ivanv",
  "number": 212,
  "title": "RFC: Engine API response status when merge transition block is INVALID",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-29T09:51:29Z",
  "updated_at": "2022-05-20T04:31:14Z",
  "closed_at": "2022-05-13T14:02:55Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Problem\r\nMerge transition block (the first PoS block in the chain) is a direct child of a terminal PoW block. Currently, Engine API spec prescribes EL to respond with `{status: INVALID, latestValidHash: validAncestorHash, validationError: null | message}` if transition block appears to be `INVALID`.\r\n\r\nThe problem is that `validAncestorHash` in this case should reference a terminal PoW block which isn't in CL's block tree. This makes CL client's behaviour underspecified.\r\n\r\n### Options\r\n1. Leave the spec as it is. If transition block appears to be `INVALID` CL gets a response with `validAncestorHash: terminalBlockHash`, then it invalidates transition block and stops further traversing because the parent of transition beacon block doesn't have a payload at all (it's filled with zeroes)\r\n2. Return `INVALID_TERMINAL_BLOCK` which explicitly tells CL to invalidate a subchain starting from a transition block\r\n3. Remove `INVALID_TERMINAL_BLOCK`, and make EL respond with `{status INVALID, latestValidHash: 0x00...00}` when either terminal PoW block or transition block is `INVALID`. Then CL will naturally stop block tree traversing at a pre-transition block",
  "closed_by": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/212/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1118082151",
    "html_url": "https://github.com/ethereum/execution-apis/issues/212#issuecomment-1118082151",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212",
    "id": 1118082151,
    "node_id": "IC_kwDOFoG9Gs5CpJRn",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T01:30:14Z",
    "updated_at": "2022-05-05T01:30:14Z",
    "author_association": "NONE",
    "body": "For the merge transition block itself, I don't think this matters to Teku - as long as we get some form of INVALID response, we'll mark the transition block as INVALID and it has no ancestors with payloads so they're already all VALID and everything works out.\r\n\r\nIf the EL was syncing and we optimistically imported the transition block, we might get the INVALID response on a much later block. In that case the only thing that would get Teku to invalidate the ancestors currently would be to return `latestValidHash: 0x00..00` - we don't really care if that's `INVALID` or `INVALID_TERMINAL_BLOCK`, any kind of invalid response is fine.\r\n\r\nIn option 1, Teku wouldn't be able to find the referenced validAncestorHash so would only invalidate the head block and would have to gradually walk it's way back up the chain until we reach the transition block or we invalidate enough attestations that we'd wind up re-orging to a different fork.\r\n\r\nIn option 2 we'd have to add special case handling to fork choice to find and invalidate the transition block. We currently simplify all the EL responses down to one of VALID, INVALID or SYNCING and this would then require us to pass through INVALID_TERMINAL_BLOCK as well which increases complexity.\r\n\r\nOption 3 works well because specifying `latestValidHash: 0x00...00` is quite a neat way of indicating that the last valid block is prior to the transition block. Seems to me it could be either `INVALID_TERMINAL_BLOCK` or `INVALID` in terms of semantics but not sure if that fits with the way the spec works.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1118082151/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1126091098",
    "html_url": "https://github.com/ethereum/execution-apis/issues/212#issuecomment-1126091098",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/212",
    "id": 1126091098,
    "node_id": "IC_kwDOFoG9Gs5DHsla",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T14:02:55Z",
    "updated_at": "2022-05-13T14:02:55Z",
    "author_association": "MEMBER",
    "body": "Option 3 has been merged into the spec https://github.com/ethereum/execution-apis/pull/217",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1126091098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
