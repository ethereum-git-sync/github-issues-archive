{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/494",
  "id": 2006593849,
  "node_id": "I_kwDOFoG9Gs53mjE5",
  "number": 494,
  "title": "JSON-RPC edge-cases, nonce management and `eth_getTransactionBySenderAndNonce`",
  "user": {
    "login": "alcuadrado",
    "id": 176499,
    "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alcuadrado",
    "html_url": "https://github.com/alcuadrado",
    "followers_url": "https://api.github.com/users/alcuadrado/followers",
    "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
    "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
    "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
    "repos_url": "https://api.github.com/users/alcuadrado/repos",
    "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-11-22T15:31:53Z",
  "updated_at": "2023-11-22T19:36:12Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "During the JSON-RPC meeting in Istanbul, I made a case that `eth_getTransactionBySenderAndNonce` would be useful for dapp and tool developers. I'm opening this issue to continue the discussion here, and to go into more detail. \r\n\r\n\r\n## Problems with the JSON-RPC\r\n\r\nThese are the problems that I think could be solved with `eth_getTransactionBySenderAndNonce`.\r\n\r\n### Problem 1: Losing track of a transaction\r\n\r\nI created this pictures of how a the normal workflow of sending a transaction from a dapp or tool that interacts with a wallet looks like:\r\n\r\n![image](https://github.com/ethereum/execution-apis/assets/176499/ce4f3e1f-b07e-4480-8560-ac6fb92d5d1d)\r\n\r\nAs shown above, the flow would be something like this:\r\n\r\n1. The dapp/tool wants to send a transaction, so it calls into a library like ethers/web3/viem.\r\n2. The library is connected to a wallet, which exposes the same JSON-RPC interface as a client. Note that the wallet doesn't just forward things to a client, it has its own implementation of some methods, like `eth_sendTransaction`.\r\n3. To send a transaction, the library sends an `eth_sendTransaction` to the wallet.\r\n4. The wallet receives that request and creates and signs a transaction locally.\r\n5. At this point, the wallet is already aware of the full tx body and hence its hash, but it hasn't communicated it to the the library yet. \r\n6. The wallet will then do an `eth_sendRawTransaction`, sending the full tx body to an EL client, which will broadcast it.\r\n7. The wallet returns a hash as the response of `eth_sendTransaction`, which the library receives and passes to the dapp.\r\n\r\nIf after sending the tx to the EL client anything goes wrong with the wallet, library or dapp, a transaction will be broadcasted as requested by the dapp, but the dapp will never be able to access it.\r\n\r\nNote that the order of 6 and 7 are unspecified. The wallet could return the hash before sending the raw transaction. As it's unclear, we are forced to assume the worst situation is possible.\r\n\r\nIf we had `eth_getTransactionBySenderAndNonce` a dapp could keep track of the nonce and transaction params, and resume from errors if needed, by checking if a transaction with that sender and nonce exists, and if it has the same params as the one that it intended to send.\r\n\r\n### Problem 2: Replaced and dropped transactions\r\n\r\nWhen a dapp/tool sends a transaction, the tx can be replaced by another one with the same nonce and sender, or dropped from the mempool. What's more, replacement transactions can be equivalent to the one you sent (e.g. just higher fees), or a completely different one (e.g. to a different account).\r\n\r\nAll of these situations manifest as a `eth_getTransactionByHash` returning `null`.\r\n\r\nThe way to distinguish between some of them (replaced vs dropped) is by using `eth_getTransactionCount` with different blocktags and analyzing a pretty complex set of cases, including making tons of assumptions about how `\"pending\"` works in this case.\r\n\r\nIf we had `eth_getTransactionBySenderAndNonce` a dapp could use it to understand what happened if `eth_getTransactionByHash` returns `null`.\r\n\r\n## Proposal\r\n\r\nAdd a method `eth_getTransactionBySenderAndNonce` with two parameters:\r\n\r\n1. An address: the sender of the transaction.\r\n2. A quantity: the nonce of the transaction.\r\n\r\nThe JSON-RPC server should return the hash of a transaction (or the full tx?) of the transaction sent from the provided address using that nonce. If no such transaction exists, it should return `null`.\r\n\r\nIf multiple transactions from a sender and nonce were received, I assume there's one that can be considered the best candidate for inclusion (e.g. pays more fees), and that one should be used.\r\n\r\n## Things to consider\r\n\r\n1. Does this method have other use cases?\r\n4. Are there any alternative solution?\r\n1. How many resources would this method require for transactions that are still in the mempool?\r\n5. How many resources would this method require for transactions that were included in a block?\r\n6. How many blocks are really important to solve the problems listed above?\r\n7. How can RPC/Node providers (e.g. Infura)  support this?\r\n\r\n_Tagging people present on the in-person discussion, or who I've discussed this in the past: @s1na @lightclient @sambacha @kanej_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/494/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823004362",
    "html_url": "https://github.com/ethereum/execution-apis/issues/494#issuecomment-1823004362",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
    "id": 1823004362,
    "node_id": "IC_kwDOFoG9Gs5sqNbK",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-22T15:37:59Z",
    "updated_at": "2023-11-22T15:37:59Z",
    "author_association": "MEMBER",
    "body": "This is also relevant: https://github.com/manifoldfinance/rpc-eip-drafts/blob/master/eth_getTransactionBySenderAndNonce.md",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823004362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823084544",
    "html_url": "https://github.com/ethereum/execution-apis/issues/494#issuecomment-1823084544",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
    "id": 1823084544,
    "node_id": "IC_kwDOFoG9Gs5sqhAA",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-22T16:22:38Z",
    "updated_at": "2023-11-22T16:22:38Z",
    "author_association": "MEMBER",
    "body": "I just found that it's already available in otterscan: https://github.com/otterscan/otterscan/blob/develop/docs/custom-jsonrpc.md#ots_gettransactionbysenderandnonce",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823084544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823145619",
    "html_url": "https://github.com/ethereum/execution-apis/issues/494#issuecomment-1823145619",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
    "id": 1823145619,
    "node_id": "IC_kwDOFoG9Gs5sqv6T",
    "user": {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-22T16:56:17Z",
    "updated_at": "2023-11-22T16:56:43Z",
    "author_association": "NONE",
    "body": "This issue is so commonplace that when ethers.js [waits for a transaction to be mined](https://docs.ethers.org/v5/api/providers/types/#providers-TransactionResponse), instead of polling using the tx hash, it [downloads every single tx on every single block to try and find](https://github.com/ethers-io/ethers.js/blob/39315288bee6f116e362e70c00f999ae669dd462/src.ts/providers/provider.ts#L1416-L1465) the tx or a replacement. Needless to say, this would be better served by this RPC call.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823145619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823149557",
    "html_url": "https://github.com/ethereum/execution-apis/issues/494#issuecomment-1823149557",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
    "id": 1823149557,
    "node_id": "IC_kwDOFoG9Gs5sqw31",
    "user": {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-22T16:58:59Z",
    "updated_at": "2023-11-22T16:58:59Z",
    "author_association": "NONE",
    "body": "FWIW this call is also available in [Erigon](https://github.com/ledgerwatch/erigon/pull/5945/files#diff-d8890d0c3dd0591749827b02abcafe4a16d46ceda84a7aa9bed9d2e45465a4a3)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823149557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823406367",
    "html_url": "https://github.com/ethereum/execution-apis/issues/494#issuecomment-1823406367",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/494",
    "id": 1823406367,
    "node_id": "IC_kwDOFoG9Gs5srvkf",
    "user": {
      "login": "wmitsuda",
      "id": 28685,
      "node_id": "MDQ6VXNlcjI4Njg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wmitsuda",
      "html_url": "https://github.com/wmitsuda",
      "followers_url": "https://api.github.com/users/wmitsuda/followers",
      "following_url": "https://api.github.com/users/wmitsuda/following{/other_user}",
      "gists_url": "https://api.github.com/users/wmitsuda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wmitsuda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wmitsuda/subscriptions",
      "organizations_url": "https://api.github.com/users/wmitsuda/orgs",
      "repos_url": "https://api.github.com/users/wmitsuda/repos",
      "events_url": "https://api.github.com/users/wmitsuda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wmitsuda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-22T19:36:11Z",
    "updated_at": "2023-11-22T19:36:11Z",
    "author_association": "NONE",
    "body": "hello, Willian from Otterscan here, I wrote the original spec and implementation in Erigon for usage in Otterscan.\r\n\r\nHappy to rename it and make adjustments in Erigon if it’s going to be promoted to eth namespace.\r\n\r\nI need to add that current implementation only considers txs already included in a block, i.e. no indexing of txpool",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1823406367/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
