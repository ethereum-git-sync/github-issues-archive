{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/472",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/472",
  "id": 1907007355,
  "node_id": "I_kwDOFoG9Gs5xqp97",
  "number": 472,
  "title": "Extend `estimateGas` to take block overrides",
  "user": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-09-21T13:37:11Z",
  "updated_at": "2023-11-13T10:53:51Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "It isn't clear from the spec whether `estimateGas` should run in the context of the block hash/num provided, or if it should treat it as its parent. By accepting block overrides, we can remove the ambiguity and allow callers to choose exactly what the environment their call executes in.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/472/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1729606901",
    "html_url": "https://github.com/ethereum/execution-apis/issues/472#issuecomment-1729606901",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472",
    "id": 1729606901,
    "node_id": "IC_kwDOFoG9Gs5nF7T1",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T13:38:43Z",
    "updated_at": "2023-09-21T13:38:43Z",
    "author_association": "MEMBER",
    "body": "alternative idea, maybe in addition: support a \"next\" block tag for calls which execute calls",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1729606901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1807927621",
    "html_url": "https://github.com/ethereum/execution-apis/issues/472#issuecomment-1807927621",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/472",
    "id": 1807927621,
    "node_id": "IC_kwDOFoG9Gs5rwslF",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-13T10:53:28Z",
    "updated_at": "2023-11-13T10:53:51Z",
    "author_association": "NONE",
    "body": "“next” is a cool idea, especially if (at least from what I’ve heard) “pending” may be retired soon.\r\n\r\nIt would also be useful for other methods such as `eth_call` et al. as a way to simulate something as “what if this transaction were executed as the first transaction in the upcoming block” (which is semantically distinct from “latest”).\r\n\r\nA use-case that came up regarding ☝️ was in the context of linear vesting where I wanted to query how much vesting was available in the upcoming block (which is the earliest block in which a transaction would execute) instead of how much is available on the “latest” block. With some execution nodes, this worked with “pending” (but not all - notably not Nethermind).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1807927621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
