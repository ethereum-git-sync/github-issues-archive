{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/120",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/120",
  "id": 1048304350,
  "node_id": "I_kwDOFoG9Gs4-e9re",
  "number": 120,
  "title": "Engine API: send payload validation error to CL",
  "user": {
    "login": "mkalinin",
    "id": 1892772,
    "node_id": "MDQ6VXNlcjE4OTI3NzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkalinin",
    "html_url": "https://github.com/mkalinin",
    "followers_url": "https://api.github.com/users/mkalinin/followers",
    "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
    "organizations_url": "https://api.github.com/users/mkalinin/orgs",
    "repos_url": "https://api.github.com/users/mkalinin/repos",
    "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkalinin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-11-09T08:08:22Z",
  "updated_at": "2021-11-30T13:41:18Z",
  "closed_at": "2021-11-30T06:27:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently there is a `message: STRING|null` field in the response object of the `engine_executePayload` method. This field is supposed to be used in the case when the payload is invalid to provide additional information on what exactly has failed. This should improve CL client logs readability as it will give an idea of what went wrong during the execution without the strong need of looking into EL client logs.\r\n\r\n@MariusVanDerWijden pointed out that the `message` field is confusing as it doesn't correspond to the regular JSON-RPC error format. There is a couple of options:\r\n1. Replace `message` with `validationError: null|{code: errorCode, message: errorMessage} ` field\r\n2. Rename `message` to `validationError` and doesn't render the code\r\n\r\nIMO, the first option does make sense if there is a list of messages and codes corresponding to errors occurred during validation and execution of a payload. If there is no such list it probably doesn't worth spending a time on standardising these errors and then adjusting clients to adhere to this standard, the option 2 could work good as long as there is a meaningful message put in the `validationError` field, event though the messages vary from one EL client to another.",
  "closed_by": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/120/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/964078062",
    "html_url": "https://github.com/ethereum/execution-apis/issues/120#issuecomment-964078062",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120",
    "id": 964078062,
    "node_id": "IC_kwDOFoG9Gs45dqnu",
    "user": {
      "login": "MarekM25",
      "id": 9356351,
      "node_id": "MDQ6VXNlcjkzNTYzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9356351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarekM25",
      "html_url": "https://github.com/MarekM25",
      "followers_url": "https://api.github.com/users/MarekM25/followers",
      "following_url": "https://api.github.com/users/MarekM25/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarekM25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarekM25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarekM25/subscriptions",
      "organizations_url": "https://api.github.com/users/MarekM25/orgs",
      "repos_url": "https://api.github.com/users/MarekM25/repos",
      "events_url": "https://api.github.com/users/MarekM25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarekM25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-09T11:49:23Z",
    "updated_at": "2021-11-09T11:49:23Z",
    "author_association": "NONE",
    "body": "Not a strong opinion, but I prefer option number one.\r\nIf a consensus client has to react in a standard way to a given error type in the future, it will be better to have error codes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/964078062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/982647181",
    "html_url": "https://github.com/ethereum/execution-apis/issues/120#issuecomment-982647181",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/120",
    "id": 982647181,
    "node_id": "IC_kwDOFoG9Gs46kgGN",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T13:41:18Z",
    "updated_at": "2021-11-30T13:41:18Z",
    "author_association": "MEMBER",
    "body": "> Not a strong opinion, but I prefer option number one.\r\n> If a consensus client has to react in a standard way to a given error type in the future, it will be better to have error codes.\r\n\r\nEnded up with option number two. Because if we'd want a standard reaction of CL client it'd require standardising error codes which sounds overcomplicated in the context of UX improvement that was the original intention behind bubbling this error message.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/982647181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
