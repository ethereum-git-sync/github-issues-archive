{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/208",
  "id": 1197563917,
  "node_id": "I_kwDOFoG9Gs5HYWAN",
  "number": 208,
  "title": "UX Issue with JWT Secrets",
  "user": {
    "login": "prestonvanloon",
    "id": 7246818,
    "node_id": "MDQ6VXNlcjcyNDY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prestonvanloon",
    "html_url": "https://github.com/prestonvanloon",
    "followers_url": "https://api.github.com/users/prestonvanloon/followers",
    "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
    "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
    "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
    "repos_url": "https://api.github.com/users/prestonvanloon/repos",
    "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3209174103,
      "node_id": "MDU6TGFiZWwzMjA5MTc0MTAz",
      "url": "https://api.github.com/repos/ethereum/execution-apis/labels/C-enhance",
      "name": "C-enhance",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: a request for an improvement"
    },
    {
      "id": 4149156729,
      "node_id": "LA_kwDOFoG9Gs73Txt5",
      "url": "https://api.github.com/repos/ethereum/execution-apis/labels/A-engine",
      "name": "A-engine",
      "color": "FBCA04",
      "default": false,
      "description": "Area: for future consideration"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-04-08T17:08:17Z",
  "updated_at": "2022-07-24T04:47:42Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Original discussion: https://github.com/ethereum/execution-apis/issues/162\r\n\r\nThe specification here states that the JWT secret must be a 256 bit secret written as a 0x prefixed hex string. As a long time JWT user, I found this arbitrary constraint to be very difficult to understand. Why must it be so rigid? I believe this is a serious UX concern and client teams will have to go through considerable efforts to communicate these requirements to users in documentation, cli help text, and well defined error messages. Users will have to adjust their previously well established practices with JWTs specifically for Ethereum client operation. \r\n\r\nFrom a technical perspective, the signature part of HS256 does not require any length for a secret. Even an empty string is sufficient to construct a valid and verifiable JWT.\r\n\r\n```\r\nsignature = HMACSHA256(\r\n  base64UrlEncode(header) + \".\" +\r\n  base64UrlEncode(payload),\r\n  secret)\r\n```\r\n\r\nWhile it may be wise for a user to specify a secret of at least a given length to prevent brute for attacks, it seems like a poor trade off between UX and security to require the secret in a 0x prefixed hex string of at least 32 bytes. I'm also afraid that many at home stakers are not highly technical and these requirements add complexity and difficulty for end users that could lead to improper software operation. \r\n\r\n**Suggestion 1:** Remove hard requirements on 0x prefixed hex string formats. \r\n**Suggestion 2:** Consider a reasonable secret key length or no secret key length requirement strongly enforced.\r\n**Suggestion 3:** Require clients to interpret 0x prefix as an indicator the rest of the file must be parsed as hex. Absence of 0x indicates the file is an ascii string. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/208/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161843539",
    "html_url": "https://github.com/ethereum/execution-apis/issues/208#issuecomment-1161843539",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
    "id": 1161843539,
    "node_id": "IC_kwDOFoG9Gs5FQFNT",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T14:43:44Z",
    "updated_at": "2022-06-21T14:43:44Z",
    "author_association": "MEMBER",
    "body": "My argument against allowing ascii strings as a secret is a family of attacks that can be employed in this case (like dictionary  and other kinds of attack relevant to pass phrases). Not sure how strong this argument is in our context.\r\n\r\nAlso, the spec allows for using a secret that is generated by EL instead of specifying it manually, CL users will need to specify a path to `jwt.hex` in this case, tho the file location depends on EL client.\r\n\r\nI would like to hear from @holiman @fredriksvantes on this",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161843539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161951484",
    "html_url": "https://github.com/ethereum/execution-apis/issues/208#issuecomment-1161951484",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
    "id": 1161951484,
    "node_id": "IC_kwDOFoG9Gs5FQfj8",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T15:58:54Z",
    "updated_at": "2022-06-21T15:58:54Z",
    "author_association": "MEMBER",
    "body": "My reason for disallowing ascii text is that people will put `secret` or `password` as password, and that's that.\r\n\r\nNow, I know it's a pita to \"make up\" and type down a 64-character hex-string, but the thing is, both CL and EL are fully capable of generating it, if it's not present. So in theory, as long as they both agree on the location, you could just boot them both and whichever is fastest will generate the secret. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161951484/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161965948",
    "html_url": "https://github.com/ethereum/execution-apis/issues/208#issuecomment-1161965948",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
    "id": 1161965948,
    "node_id": "IC_kwDOFoG9Gs5FQjF8",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T16:11:58Z",
    "updated_at": "2022-06-21T16:11:58Z",
    "author_association": "NONE",
    "body": "Some operators may have lower security requirements and some may have higher security requirements. Perhaps we can agree to enforce some minimum security threshold, but requiring a fixed size secret in a specific format seems too opinionated for these specs. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1161965948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1162043979",
    "html_url": "https://github.com/ethereum/execution-apis/issues/208#issuecomment-1162043979",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
    "id": 1162043979,
    "node_id": "IC_kwDOFoG9Gs5FQ2JL",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T17:23:09Z",
    "updated_at": "2022-06-21T17:23:09Z",
    "author_association": "MEMBER",
    "body": "I agree that it might be too opinionated beyond what's warranted by the security requirements. The opinionated:ness serves another purpose though, which is to standardize the behaviour, so that if you have a file which is accepted by geth, it should also be accepted by any other CL or EL node. And same for any file generated by any of them. \r\n\r\nIf we relax the spec, to allow for passwords, then we need to ensure that we keep a similar level of strict requirements so there's no ambiguity. \r\n\r\nHowever, I don't see any point in allowing <256bit things. I mean, sure, I do -- but we already made the mistake in the original rpc design, that we chose UX over security. And people still shoot themselves in the foot by opening up `admin` and `personal` to the internet. I don't want to repeat that again. \r\n\r\nI agree that there are legitimate situations when the security requirements aren't _that_ high, but I don't we should cater to that usecase. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1162043979/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1165529461",
    "html_url": "https://github.com/ethereum/execution-apis/issues/208#issuecomment-1165529461",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/208",
    "id": 1165529461,
    "node_id": "IC_kwDOFoG9Gs5FeJF1",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T12:33:27Z",
    "updated_at": "2022-06-24T12:33:27Z",
    "author_association": "NONE",
    "body": "> If we relax the spec, to allow for passwords, then we need to ensure that we keep a similar level of strict requirements so there's no ambiguity.\r\n\r\nI agree, the spec must define an explicit minimum level of security. The root of this issue is around the format and fixed length. \r\nMy request isn't about relaxing security, rather it is about making clients just a little bit easier to use. As is, this kind of requirement seem specific to Ethereum and it's another frustrating speed bump in the way of chain operators. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1165529461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
