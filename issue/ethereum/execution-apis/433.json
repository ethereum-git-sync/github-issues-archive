{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/433",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/433",
  "id": 1789550335,
  "node_id": "I_kwDOFoG9Gs5qql7_",
  "number": 433,
  "title": "Question: Is Payload Building optional? ",
  "user": {
    "login": "rkrasiuk",
    "id": 25429261,
    "node_id": "MDQ6VXNlcjI1NDI5MjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkrasiuk",
    "html_url": "https://github.com/rkrasiuk",
    "followers_url": "https://api.github.com/users/rkrasiuk/followers",
    "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
    "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
    "repos_url": "https://api.github.com/users/rkrasiuk/repos",
    "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-07-05T13:21:09Z",
  "updated_at": "2023-07-06T20:36:43Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Request for clarification on the statement below:\r\n\r\nhttps://github.com/ethereum/execution-apis/blob/608001d13a337167433815e7889208b7c2b6a123/src/engine/paris.md?plain=1#L221\r\n\r\nDoes it mean that `Client software MUST begin the building process` or that `Client software MUST begin the building process on top of head block hash` (and not any other block, hence the usage of `MUST`)?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/433/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1622165932",
    "html_url": "https://github.com/ethereum/execution-apis/issues/433#issuecomment-1622165932",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433",
    "id": 1622165932,
    "node_id": "IC_kwDOFoG9Gs5gsEms",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-05T17:11:45Z",
    "updated_at": "2023-07-05T17:11:45Z",
    "author_association": "MEMBER",
    "body": "the intent is to start building the next block in the chain\r\n\r\n`payloadAttributes` is used as a signal from the CL if a proposal is happening in the next slot and the EL needs to supply a valid execution payload for inclusion in the proposal\r\n\r\nhonest clients will build on top of the head of the chain, and any stock CLs will expect this to be the case (so if you started building over on a fork in the block tree, the CL would eventually get the built payload and it would lead to an invalid proposal)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1622165932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1624168302",
    "html_url": "https://github.com/ethereum/execution-apis/issues/433#issuecomment-1624168302",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433",
    "id": 1624168302,
    "node_id": "IC_kwDOFoG9Gs5gztdu",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T18:56:38Z",
    "updated_at": "2023-07-06T18:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "so, in order to be considered a valid client software according to the spec, the client must always build and forward the payload to CL, correct? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1624168302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1624278672",
    "html_url": "https://github.com/ethereum/execution-apis/issues/433#issuecomment-1624278672",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/433",
    "id": 1624278672,
    "node_id": "IC_kwDOFoG9Gs5g0IaQ",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T20:36:42Z",
    "updated_at": "2023-07-06T20:36:42Z",
    "author_association": "MEMBER",
    "body": "honest flow:\r\n\r\nCL: forkChoiceUpdated (FCU) with payloadAttributes\r\nEL: ok FCU looks good, and I see you have payloadAttributes so I'll start building on this head (given in the FCU), here's a `payloadId` to label this build job\r\n\r\n... some time later ...\r\n\r\nCL: hey, here's `payloadId`, can I have the corresponding payload?\r\nEL: sure, here's the payload\r\n\r\n--\r\n\r\nfollowing the spec (you linked in first comment), the EL has to begin a payload build if the fork choice is updated successfully and there are non-null payloadAttributes; they return a payload ID for this build job to the CL if they start building\r\n\r\nthey must keep the payload around long enough to respond to requests for the given payload ID (I think most clients just build one at a time so either end up over-writing old jobs or have some time out to stop after say `SLOTS_PER_SECOND`)\r\n\r\nnote: the EL must build *some* payload, they could build the \"empty\" payload, i.e. have a block header that follows the protocol rules but could contain 0 transactions -- I think most clients implement some kind of block building strategy like this right now: start with an \"empty\" payload with the FCU call, and then update with transactions from the mempool; this strategy is preferable as the CL could turn around at any time and ask for the payload, so better to have something immediately available and improve it over the slot, rather than have to block on the payload delivery call",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1624278672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
