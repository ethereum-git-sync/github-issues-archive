{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/495",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/495/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/495/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/495/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/495",
  "id": 2008046235,
  "node_id": "I_kwDOFoG9Gs53sFqb",
  "number": 495,
  "title": "Deprecating the pending state",
  "user": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-11-23T11:37:23Z",
  "updated_at": "2023-11-23T21:00:52Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This issue is to keep track of the conversation started at the JSON-RPC session at devconnect.\r\n\r\nMost state-related methods which take in a blocktag allow users to specify \"pending\". The semantic difference to \"latest\" is that the EL keeps track of a pending state by applying all of the pending transactions on top of the current state.\r\n\r\nWe're questioning the practical use of this tag as it depends heavily on the local view of the txpool. The mempool is fluid, there is no guarantee that the transactions there will be mined. Moreover different nodes within an RPC provider infrastructure have different views on the mempool and some notable ones do not serve pending state.\r\n\r\nThe most useful aspect of the pending state seems to be to get the latest nonce for an account. Taking this into account, the most-widely accepted solution to deprecating \"pending\" is to revert to \"latest\" on all cases except `eth_getTransactionCount` where the node tries to return the latest nonce.\r\n\r\nThis will alleviate some load from nodes to maintain the pending state.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/495/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/495/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1824897726",
    "html_url": "https://github.com/ethereum/execution-apis/issues/495#issuecomment-1824897726",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/495",
    "id": 1824897726,
    "node_id": "IC_kwDOFoG9Gs5sxbq-",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-23T21:00:51Z",
    "updated_at": "2023-11-23T21:00:51Z",
    "author_association": "MEMBER",
    "body": "In the OP-Stack we've been aliasing the `pending` RPC label to `latest`, to:\r\n- Save the cost of computing a pending-block (low block-time of 2 seconds makes recomputing a 30M gas block quite expensive).\r\n- Serve sensible data, when the tx-pool is private.\r\n\r\nThis has been working well enough for L2 users (although maybe better than L1 due to the lower block time). I support the aliasing of it to `latest` as deprecation strategy on L1.\r\n\r\nAnd we still support `eth_getTransactionCount`, since it's attached to the mem-pool, not the actual pending state, so is not as costly to maintain. And since it does not reveal the full transaction data, generally not regarded as privacy issue, and a good UX trade-off.\r\n\r\nSo far we've left computation of `pending` state still as opt-in feature for individual node users, which then allows them to inspect the block-building of their local mempool (which just contains a copy of their own transactions, that the node passed on privately to the sequencer endpoint), which they can tune the gas-limit of as well (again to save unnecessary re-computation cost). But from user-issues it appears that nobody is actually using the opt-in feature.\r\n\r\nWith the removal of Clique from EL clients, removing the `pending` flag unblocks the cleanup of a lot of legacy pre-engine-API block-building, so I'm very much in favor from the perspective of reducing code complexity.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1824897726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
