{
  "url": "https://api.github.com/repos/ethereum/execution-apis/issues/496",
  "repository_url": "https://api.github.com/repos/ethereum/execution-apis",
  "labels_url": "https://api.github.com/repos/ethereum/execution-apis/issues/496/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-apis/issues/496/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-apis/issues/496/events",
  "html_url": "https://github.com/ethereum/execution-apis/issues/496",
  "id": 2008479338,
  "node_id": "I_kwDOFoG9Gs53tvZq",
  "number": 496,
  "title": "Specify subscription API",
  "user": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-11-23T15:46:15Z",
  "updated_at": "2023-11-29T11:13:46Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Most EL clients implement the subscription API documented here: https://geth.ethereum.org/docs/interacting-with-geth/rpc/pubsub. These are widely adopted but not yet included in the specs. It's easy to specify `eth_subscribe` and `eth_unsubscribe`. I'm unsure how to specify the concrete methods (`newHeads`, `newPendingTransactions`, etc.) as they are passed as parameters to `eth_subscribe`. Plus when we push data, we're effectively sending an `eth_subscription` request from server to the client, and the data for that request depends on the concrete method.\r\n\r\nAfter the current state is done I'd like to propose the following modifications:\r\n\r\n- Adding an optional parameter to `newPendingTransactions` named `fullTx`. It defaults to false. If true the server returns the full tx object instead of the hash. This is already merged in geth.\r\n- Adding an optional parameter to `newHeads` named `verbosity`. Default value of 0 returns only the hash. If value is 1, we return the complete head object. If value is 2, we return the complete block object. If value is 3 we return the block object + receipts.\r\n- Add optional parameter to `newPendingTransactions` named `filter`. The server uses the filter to narrow down the list of txes to return. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/496/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-apis/issues/496/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1831695107",
    "html_url": "https://github.com/ethereum/execution-apis/issues/496#issuecomment-1831695107",
    "issue_url": "https://api.github.com/repos/ethereum/execution-apis/issues/496",
    "id": 1831695107,
    "node_id": "IC_kwDOFoG9Gs5tLXMD",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-29T11:13:45Z",
    "updated_at": "2023-11-29T11:13:45Z",
    "author_association": "MEMBER",
    "body": "Open-RPC cannot express the semantics of the `eth_subscribe`. It is one method that can have a different set of params based on the event type. E.g.:\r\n\r\n- If type is `logs` next param can be a filter `{ address: .., topics: ..}`\r\n- The other types don't have at the moment further parameters.\r\n\r\nThe same thing happens in the notification requests, i.e. `eth_subscription`. Each event returns a different object. Because the parameters of this request are addressed by key, we could define a schema with keys for all possible event types. But that's less than ideal.\r\n\r\nThere exists an issue https://github.com/open-rpc/spec/issues/381 which if fixed would unblock this item.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-apis/issues/comments/1831695107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
