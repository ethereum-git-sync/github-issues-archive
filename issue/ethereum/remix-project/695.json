{
  "url": "https://api.github.com/repos/ethereum/remix-project/issues/695",
  "repository_url": "https://api.github.com/repos/ethereum/remix-project",
  "labels_url": "https://api.github.com/repos/ethereum/remix-project/issues/695/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/remix-project/issues/695/comments",
  "events_url": "https://api.github.com/repos/ethereum/remix-project/issues/695/events",
  "html_url": "https://github.com/ethereum/remix-project/issues/695",
  "id": 774296448,
  "node_id": "MDU6SXNzdWU3NzQyOTY0NDg=",
  "number": 695,
  "title": "Suggestion for remix-tests  / examples_4",
  "user": {
    "login": "gpersoon",
    "id": 5469459,
    "node_id": "MDQ6VXNlcjU0Njk0NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5469459?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gpersoon",
    "html_url": "https://github.com/gpersoon",
    "followers_url": "https://api.github.com/users/gpersoon/followers",
    "following_url": "https://api.github.com/users/gpersoon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gpersoon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gpersoon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gpersoon/subscriptions",
    "organizations_url": "https://api.github.com/users/gpersoon/orgs",
    "repos_url": "https://api.github.com/users/gpersoon/repos",
    "events_url": "https://api.github.com/users/gpersoon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gpersoon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2236071643,
      "node_id": "MDU6TGFiZWwyMjM2MDcxNjQz",
      "url": "https://api.github.com/repos/ethereum/remix-project/labels/remix-tests",
      "name": "remix-tests",
      "color": "d1d86e",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-12-24T09:37:04Z",
  "updated_at": "2021-01-11T14:48:54Z",
  "closed_at": "2021-01-11T14:48:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "When trying out the examples of:\r\nhttps://github.com/ethereum/remix-project/tree/master/libs/remix-tests/tests/examples_4\r\n\r\nI realized that a more readable version is possible with try/catch.\r\nHere is a suggestion:\r\n```JS\r\npragma solidity ^0.7.0;\r\nimport \"remix_tests.sol\";\r\nimport \"sub.sol\";\r\n\r\ncontract Test {\r\n    SafeMathProxy safemathproxy;\r\n    function beforeAll() public {\r\n        safemathproxy = new SafeMathProxy();\r\n    }\r\n   function safeSubtractShouldRevert() public returns (bool) {\r\n      try safemathproxy.sub(0, 1) returns ( uint256 res) {\r\n          Assert.ok(false,\"Should revert\");\r\n      } catch Error(string memory reason) { \r\n          Assert.equal(reason,\"a should be larger or equal to b\",\"Should revert\");          \r\n      }  \r\n    }\r\n    function safeSubtractShouldNotRevert() public returns (bool) {\r\n      try safemathproxy.sub(3, 2) returns ( uint256 res) {\r\n          Assert.equal(res,1,\"Should be 1\");\r\n      } catch Error(string memory reason) { \r\n          Assert.ok(false,\"Should not revert\");\r\n      }  \r\n    } \r\n}\r\n ```\r\n \r\n```JS\r\npragma solidity ^0.7.0;\r\n\r\nlibrary SafeMathSubLib {\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    require(_b <= _a,\"a should be larger or equal to b\");\r\n    uint256 c = _a - _b;\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract SafeMathProxy { // Need external function for try/catch\r\n    function sub(uint256 _a, uint256 _b) external pure returns (uint256) {\r\n        return SafeMathSubLib.sub(_a,_b);\r\n    }\r\n}\r\n\r\n````\r\n \r\n  ",
  "closed_by": {
    "login": "Aniket-Engg",
    "id": 30843294,
    "node_id": "MDQ6VXNlcjMwODQzMjk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Aniket-Engg",
    "html_url": "https://github.com/Aniket-Engg",
    "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
    "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
    "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
    "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
    "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
    "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/695/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/remix-project/issues/695/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/752378591",
    "html_url": "https://github.com/ethereum/remix-project/issues/695#issuecomment-752378591",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/695",
    "id": 752378591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjM3ODU5MQ==",
    "user": {
      "login": "Aniket-Engg",
      "id": 30843294,
      "node_id": "MDQ6VXNlcjMwODQzMjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aniket-Engg",
      "html_url": "https://github.com/Aniket-Engg",
      "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
      "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
      "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
      "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
      "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T08:49:46Z",
    "updated_at": "2020-12-30T08:49:46Z",
    "author_association": "MEMBER",
    "body": "Thanks for the suggestion @gpersoon , we will look into this. FYI similar examples are also available in the related documentation : https://remix-ide.readthedocs.io/en/latest/unittesting_examples.html#testing-method-execution",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/752378591/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
