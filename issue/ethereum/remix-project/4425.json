{
  "url": "https://api.github.com/repos/ethereum/remix-project/issues/4425",
  "repository_url": "https://api.github.com/repos/ethereum/remix-project",
  "labels_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425/comments",
  "events_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425/events",
  "html_url": "https://github.com/ethereum/remix-project/issues/4425",
  "id": 2073878581,
  "node_id": "I_kwDODtLRw857nOA1",
  "number": 4425,
  "title": "Feedbacks and suggestions for AI in remix",
  "user": {
    "login": "drafish",
    "id": 18543527,
    "node_id": "MDQ6VXNlcjE4NTQzNTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/18543527?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drafish",
    "html_url": "https://github.com/drafish",
    "followers_url": "https://api.github.com/users/drafish/followers",
    "following_url": "https://api.github.com/users/drafish/following{/other_user}",
    "gists_url": "https://api.github.com/users/drafish/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drafish/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drafish/subscriptions",
    "organizations_url": "https://api.github.com/users/drafish/orgs",
    "repos_url": "https://api.github.com/users/drafish/repos",
    "events_url": "https://api.github.com/users/drafish/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drafish/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "ryestew",
    "id": 6050001,
    "node_id": "MDQ6VXNlcjYwNTAwMDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6050001?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ryestew",
    "html_url": "https://github.com/ryestew",
    "followers_url": "https://api.github.com/users/ryestew/followers",
    "following_url": "https://api.github.com/users/ryestew/following{/other_user}",
    "gists_url": "https://api.github.com/users/ryestew/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ryestew/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ryestew/subscriptions",
    "organizations_url": "https://api.github.com/users/ryestew/orgs",
    "repos_url": "https://api.github.com/users/ryestew/repos",
    "events_url": "https://api.github.com/users/ryestew/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ryestew/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ryestew",
      "id": 6050001,
      "node_id": "MDQ6VXNlcjYwNTAwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6050001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryestew",
      "html_url": "https://github.com/ryestew",
      "followers_url": "https://api.github.com/users/ryestew/followers",
      "following_url": "https://api.github.com/users/ryestew/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryestew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryestew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryestew/subscriptions",
      "organizations_url": "https://api.github.com/users/ryestew/orgs",
      "repos_url": "https://api.github.com/users/ryestew/repos",
      "events_url": "https://api.github.com/users/ryestew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryestew/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "STetsing",
      "id": 41009393,
      "node_id": "MDQ6VXNlcjQxMDA5Mzkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/41009393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/STetsing",
      "html_url": "https://github.com/STetsing",
      "followers_url": "https://api.github.com/users/STetsing/followers",
      "following_url": "https://api.github.com/users/STetsing/following{/other_user}",
      "gists_url": "https://api.github.com/users/STetsing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/STetsing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/STetsing/subscriptions",
      "organizations_url": "https://api.github.com/users/STetsing/orgs",
      "repos_url": "https://api.github.com/users/STetsing/repos",
      "events_url": "https://api.github.com/users/STetsing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/STetsing/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2024-01-10T08:48:09Z",
  "updated_at": "2024-01-11T12:28:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Feedbacks\r\n\r\nHere are all the AI-related features I've found so far on Remix:\r\n\r\n1. When the compiler throws an error, there is a 'ask gpt' button in the error message. Clicking it will explain the cause of the error and provide a solution.\r\n2. Right-click on a function in the editor, and there is an option -- 'Explain function'. Clicking it will explain the function.\r\n3. Right-click on a function in the editor, and there is an option -- 'Generate documentation'. Clicking it will generate comment documentation for that function.\r\n4. Type 'gpt <your question>' in the terminal to customize the prompt.\r\n5. Write a comment starting with '///' in the editor, like `/// Write a function that adds 2 uint256 numbers and returns the result`, and it will write a function based on the comment.\r\n6. It predicts what you're going to write next based on the content from the first line of the contract file to where the cursor is.\r\n\r\n1~4 are implemented based on the openaigpt, a built-in Remix plugin, which calls https://openai-gpt.remixproject.org/ (a backend service set up by the remix team,  configured with an OpenAI key).\r\n\r\n`openaigpt`  have nothing to do with `Solidity copilot - Alpha`. The plugin that corresponds to `Solidity copilot - Alpha` is `copilot-suggestion`, which can be found in the plugin list. (I wonder why it's not hidden like `openaigpt`, why let users can choose to active and deactivate it. Just wonder, not important).\r\n\r\nThere is a checkbox named `Load & Activate copilot` in `Solidity copilot - Alpha`. Only after checking it, 5 and 6 are available. But there's a difference between 5 and 6. `Maximum number of words to generate` and `Temperature` only apply to 6. Because only 6 is implemented based on `copilot-suggestion`, while 5 is achieved by calling https://gpt-chat.remixproject.org/infer.\r\n\r\n**I have a question here**, why does 5, which is not implemented based on `copilot-suggestion`, have to be affected by the `Load & Activate copilot` ?\r\n\r\n**Another question is**, is https://gpt-chat.remixproject.org/infer a model trained by the Remix team? I think it's not based on openai, because it is a bit dumber than OpenAI. For example, when I asked it to `///Write a function that adds 4 uint256 numbers and returns the result` , it returned\r\n\r\n```solidity\r\nfunction add4Uint256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a + b;\r\n}\r\n```\r\n\r\nThe result I got from  https://openai-gpt.remixproject.org/ was correct:\r\n\r\n```solidity\r\nfunction addNumbers(uint256 num1, uint256 num2, uint256 num3, uint256 num4) public pure returns (uint256) {\r\n    uint256 sum = num1 + num2 + num3 + num4;\r\n    return sum;\r\n}\r\n```\r\n\r\n**Another question here**, I read the code of copilot-suggestion, which is implemented based on `@xenova/transformers` which runs a tiny AI model in the browser, and it can use AI capabilities without any backend service, which is really cool. I know there will be two more methods in `copilot-suggestion` --  `useRemoteService,  discardRemoteService`, which allow users to customize the remote service. Is this remote service also based on `@xenova/transformers`? Or is it based on openai?\r\n\r\n## Suggestions\r\n\r\n1. Make 5 not affected by `Load & Activate copilot`, and get results from `openaigpt`\r\n2. Add a note to `Solidity copilot - Alpha`, specifying that the configuration only applies to 6, to avoid misleading users.\r\n3. Add OPENAI configuration in the settings, with the following supported configuration items: apiKey, baseUrl, temperature, max_tokens, modal.\r\n\r\nUsers without an apiKey can apply for a free one from this project -- https://github.com/chatanywhere/GPT_API_free.\r\n\r\nThe free apiKey supports gpt-3.5-turbo, gpt-4. However, due to the high price of gpt-4, it is limited to 10 calls every 24 hours.\r\n\r\n**If you like my suggestions, I can help you implement them.** @ryestew @yann300 ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/4425/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/1886709267",
    "html_url": "https://github.com/ethereum/remix-project/issues/4425#issuecomment-1886709267",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425",
    "id": 1886709267,
    "node_id": "IC_kwDODtLRw85wdOYT",
    "user": {
      "login": "STetsing",
      "id": 41009393,
      "node_id": "MDQ6VXNlcjQxMDA5Mzkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/41009393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/STetsing",
      "html_url": "https://github.com/STetsing",
      "followers_url": "https://api.github.com/users/STetsing/followers",
      "following_url": "https://api.github.com/users/STetsing/following{/other_user}",
      "gists_url": "https://api.github.com/users/STetsing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/STetsing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/STetsing/subscriptions",
      "organizations_url": "https://api.github.com/users/STetsing/orgs",
      "repos_url": "https://api.github.com/users/STetsing/repos",
      "events_url": "https://api.github.com/users/STetsing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/STetsing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-11T09:29:25Z",
    "updated_at": "2024-01-11T09:29:25Z",
    "author_association": "COLLABORATOR",
    "body": "@drafish thx for the constructive feedback.\r\n> openaigpt have nothing to do with Solidity copilot - Alpha. The plugin that corresponds to Solidity copilot - Alpha is copilot-suggestion, which can be found in the plugin list. (I wonder why it's not hidden like openaigpt, why let users can choose to active and deactivate it. Just wonder, not important).\r\n\r\nThat is right. The choice to activate and deactivate it matters on UI. Some users might not want any suggestion at all\r\n\r\n> I have a question here, why does 5, which is not implemented based on copilot-suggestion, have to be affected by the Load & Activate copilot?\r\n\r\nThis is more related to the UI experience. Having it enabled all the time could lead to overflowing the server with requests, that user do not event desire. Furthermore it uses the same parameters `Maximum number of words to generate` and `Temperature` for inference, even though the user hasn't activated 6\r\n\r\n> Another question is, is https://gpt-chat.remixproject.org/infer a model trained by the Remix team? I think it's not based on openai, because it is a bit dumber than OpenAI. For example, when I asked it to ///Write a function that adds 4 uint256 numbers and returns the result , it returned\r\n\r\nExact, that model is not based on openAI. It is trained internally\r\n\r\n\r\n> Another question here, I read the code of copilot-suggestion, which is implemented based on @xenova/transformers which runs a tiny AI model in the browser, and it can use AI capabilities without any backend service, which is really cool. I know there will be two more methods in copilot-suggestion --  useRemoteService,  discardRemoteService, which allow users to customize the remote service. Is this remote service also based on @xenova/transformers? Or is it based on openai?\r\n\r\nThe remote service are rather based on much larger and increased performance model. The In-Browser model solutions provided by `@xenova/transformers` only works for small models size. Note here that a user would have to download the model each time it is not cached on device, which is cumbersome. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/1886709267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/1887057875",
    "html_url": "https://github.com/ethereum/remix-project/issues/4425#issuecomment-1887057875",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/4425",
    "id": 1887057875,
    "node_id": "IC_kwDODtLRw85wejfT",
    "user": {
      "login": "drafish",
      "id": 18543527,
      "node_id": "MDQ6VXNlcjE4NTQzNTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18543527?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drafish",
      "html_url": "https://github.com/drafish",
      "followers_url": "https://api.github.com/users/drafish/followers",
      "following_url": "https://api.github.com/users/drafish/following{/other_user}",
      "gists_url": "https://api.github.com/users/drafish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drafish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drafish/subscriptions",
      "organizations_url": "https://api.github.com/users/drafish/orgs",
      "repos_url": "https://api.github.com/users/drafish/repos",
      "events_url": "https://api.github.com/users/drafish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drafish/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-11T12:28:33Z",
    "updated_at": "2024-01-11T12:28:58Z",
    "author_association": "CONTRIBUTOR",
    "body": ">This is more related to the UI experience. Having it enabled all the time could lead to overflowing the server with requests, that user do not event desire.\r\n\r\nOh I get it, 5 will probably be mis-triggered. I think you can put it in right-click menu like 2 and 3. The mis-triggered problem could be avoided in that way.\r\n\r\n>Furthermore it uses the same parameters `Maximum number of words to generate` and `Temperature` for inference, even though the user hasn't activated 6\r\n\r\nNo, it not. I checked the code, these two parameters are not used in 5. Check the code here -- https://github.com/ethereum/remix-project/blob/master/libs/remix-ui/editor/src/lib/providers/inlineCompletionProvider.ts#L45\r\n\r\n```ts\r\nconst {data} = await axios.post('https://gpt-chat.remixproject.org/infer', {comment: ask.replace('///', '')})\r\n```\r\n\r\n@STetsing ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/1887057875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
