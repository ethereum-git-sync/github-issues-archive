{
  "url": "https://api.github.com/repos/ethereum/remix-project/issues/2597",
  "repository_url": "https://api.github.com/repos/ethereum/remix-project",
  "labels_url": "https://api.github.com/repos/ethereum/remix-project/issues/2597/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/remix-project/issues/2597/comments",
  "events_url": "https://api.github.com/repos/ethereum/remix-project/issues/2597/events",
  "html_url": "https://github.com/ethereum/remix-project/issues/2597",
  "id": 1298663324,
  "node_id": "I_kwDODtLRw85NaAec",
  "number": 2597,
  "title": "implement ts plugin api in core plugins",
  "user": {
    "login": "bunsenstraat",
    "id": 2787300,
    "node_id": "MDQ6VXNlcjI3ODczMDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2787300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bunsenstraat",
    "html_url": "https://github.com/bunsenstraat",
    "followers_url": "https://api.github.com/users/bunsenstraat/followers",
    "following_url": "https://api.github.com/users/bunsenstraat/following{/other_user}",
    "gists_url": "https://api.github.com/users/bunsenstraat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bunsenstraat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bunsenstraat/subscriptions",
    "organizations_url": "https://api.github.com/users/bunsenstraat/orgs",
    "repos_url": "https://api.github.com/users/bunsenstraat/repos",
    "events_url": "https://api.github.com/users/bunsenstraat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bunsenstraat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1922155232,
      "node_id": "MDU6TGFiZWwxOTIyMTU1MjMy",
      "url": "https://api.github.com/repos/ethereum/remix-project/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "bunsenstraat",
    "id": 2787300,
    "node_id": "MDQ6VXNlcjI3ODczMDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2787300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bunsenstraat",
    "html_url": "https://github.com/bunsenstraat",
    "followers_url": "https://api.github.com/users/bunsenstraat/followers",
    "following_url": "https://api.github.com/users/bunsenstraat/following{/other_user}",
    "gists_url": "https://api.github.com/users/bunsenstraat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bunsenstraat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bunsenstraat/subscriptions",
    "organizations_url": "https://api.github.com/users/bunsenstraat/orgs",
    "repos_url": "https://api.github.com/users/bunsenstraat/repos",
    "events_url": "https://api.github.com/users/bunsenstraat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bunsenstraat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bunsenstraat",
      "id": 2787300,
      "node_id": "MDQ6VXNlcjI3ODczMDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2787300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bunsenstraat",
      "html_url": "https://github.com/bunsenstraat",
      "followers_url": "https://api.github.com/users/bunsenstraat/followers",
      "following_url": "https://api.github.com/users/bunsenstraat/following{/other_user}",
      "gists_url": "https://api.github.com/users/bunsenstraat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bunsenstraat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bunsenstraat/subscriptions",
      "organizations_url": "https://api.github.com/users/bunsenstraat/orgs",
      "repos_url": "https://api.github.com/users/bunsenstraat/repos",
      "events_url": "https://api.github.com/users/bunsenstraat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bunsenstraat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-07-08T08:18:58Z",
  "updated_at": "2022-07-08T08:20:44Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Defining plugin plugins like this will actually allow type checking on calls, events etc. \r\nWe can always make an internal RemixApi definition that allows internal plugins to call methods that we don't expose to the public webclient api. This is an example how to do it in the config plugin.\r\n\r\n```\r\nconst profile: Profile = {\r\n  name: 'config',\r\n  displayName: 'Config',\r\n  description: 'Config',\r\n  methods: ['getAppParameter', 'setAppParameter']\r\n}\r\n\r\ninterface configPluginApi {\r\n  methods: {\r\n    getAppParameter(name: string): void\r\n    setAppParameter(name: string, value: any): void\r\n  },\r\n  events: StatusEvents\r\n}\r\n\r\ninterface IInternalRemixApi extends IRemixApi {\r\n  config: configPluginApi\r\n}\r\n\r\ntype internalRemixApi = Readonly<IInternalRemixApi>;\r\n\r\nexport class ConfigPlugin extends Plugin<configPluginApi, internalRemixApi> implements MethodApi<configPluginApi> {\r\n  constructor() {\r\n    super(profile)\r\n  }\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/2597/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/remix-project/issues/2597/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
