{
  "url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
  "repository_url": "https://api.github.com/repos/ethereum/remix-project",
  "labels_url": "https://api.github.com/repos/ethereum/remix-project/issues/42/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/remix-project/issues/42/comments",
  "events_url": "https://api.github.com/repos/ethereum/remix-project/issues/42/events",
  "html_url": "https://github.com/ethereum/remix-project/issues/42",
  "id": 664944157,
  "node_id": "MDU6SXNzdWU2NjQ5NDQxNTc=",
  "number": 42,
  "title": "COULD NOT  compile  USDT-ERC20 solidity source code",
  "user": {
    "login": "youngqqcn",
    "id": 30211020,
    "node_id": "MDQ6VXNlcjMwMjExMDIw",
    "avatar_url": "https://avatars.githubusercontent.com/u/30211020?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/youngqqcn",
    "html_url": "https://github.com/youngqqcn",
    "followers_url": "https://api.github.com/users/youngqqcn/followers",
    "following_url": "https://api.github.com/users/youngqqcn/following{/other_user}",
    "gists_url": "https://api.github.com/users/youngqqcn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/youngqqcn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/youngqqcn/subscriptions",
    "organizations_url": "https://api.github.com/users/youngqqcn/orgs",
    "repos_url": "https://api.github.com/users/youngqqcn/repos",
    "events_url": "https://api.github.com/users/youngqqcn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/youngqqcn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Aniket-Engg",
    "id": 30843294,
    "node_id": "MDQ6VXNlcjMwODQzMjk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Aniket-Engg",
    "html_url": "https://github.com/Aniket-Engg",
    "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
    "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
    "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
    "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
    "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
    "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Aniket-Engg",
      "id": 30843294,
      "node_id": "MDQ6VXNlcjMwODQzMjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aniket-Engg",
      "html_url": "https://github.com/Aniket-Engg",
      "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
      "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
      "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
      "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
      "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-11-04T08:17:12Z",
  "updated_at": "2021-04-29T10:16:04Z",
  "closed_at": "2020-07-24T09:46:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "COULD NOT compile this solidity code\r\n https://cn.etherscan.com/address/0xdac17f958d2ee523a2206206994597c13d831ec7#code\r\n\r\nThe compiler will dead loop when it compile  this code.  \r\n\r\nIn chrome browser console , I found this exception throwed by compiler :\r\n\r\n```\r\napp.js:formatted:288377 Uncaught TypeError: Cannot read property 'split' of null\r\n```\r\n\r\n\r\nI picked up the code snippet from  app.js   , as below:\r\n\r\n```js\r\nstaticAnalysisView.prototype.run = function() {\r\n            if (!this.view) {\r\n                return;\r\n            }\r\n            var selected = this.selectedModules();\r\n            var warningContainer = $('#staticanalysisresult');\r\n            warningContainer.empty();\r\n            var self = this;\r\n            if (this.lastCompilationResult && selected.length) {\r\n                var warningCount = 0;\r\n                this.runner.run(this.lastCompilationResult, selected, function(results) {\r\n                    results.map(function(result, i) {\r\n                        result.report.map(function(item, i) {\r\n                            var _span, _br, _a, _span2, _span3;\r\n                            var location = '';\r\n                            if (item.location !== undefined) {\r\n                                \r\n                               //====================ERROR ================\r\n                               // ERROR:  item's location field is  'null',  DOT NOT supports 'split' operation !!\r\n                                var split = item.location.split(':');  \r\n   \r\n                                var file = split[2];\r\n                                location = {\r\n                                    start: parseInt(split[0]),\r\n                                    length: parseInt(split[1])\r\n                                };\r\n                                location = self._deps.offsetToLineColumnConverter.offsetToLineColumn(location, parseInt(file), self.lastCompilationSource.sources, self.lastCompilationResult.sources);\r\n                                location = Object.keys(self.lastCompilationResult.contracts)[file] + ':' + (location.start.line + 1) + ':' + (location.start.column + 1) + ':';\r\n                            }\r\n                            warningCount++;\r\n                            var msg = (_span = document.createElement(\"span\"),\r\n                            _appendChild(_span, [location, \" \", item.warning, \" \", item.more ? (_span2 = document.createElement(\"span\"),\r\n                            _appendChild(_span2, [(_br = document.createElement(\"br\"),\r\n                            _br), (_a = document.createElement(\"a\"),\r\n                            _a.setAttribute(\"href\", \"\" + String(item.more) + \"\"),\r\n                            _a.setAttribute(\"target\", \"blank\"),\r\n                            _a.appendChild(document.createTextNode(\"more\")),\r\n                            _a)]),\r\n                            _span2) : (_span3 = document.createElement(\"span\"),\r\n                            _span3)]),\r\n                            _span);\r\n                            self._components.renderer.error(msg, warningContainer, {\r\n                                type: 'staticAnalysisWarning alert alert-warning',\r\n                                useSpan: true\r\n                            });\r\n                        });\r\n                    });\r\n                    self.event.trigger('staticAnaysisWarning', [warningCount]);\r\n                });\r\n            } else {\r\n                if (selected.length) {\r\n                    warningContainer.html('No compiled AST available');\r\n                }\r\n                self.event.trigger('staticAnaysisWarning', [-1]);\r\n            }\r\n        }\r\n        ;\r\n```\r\n",
  "closed_by": {
    "login": "Aniket-Engg",
    "id": 30843294,
    "node_id": "MDQ6VXNlcjMwODQzMjk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Aniket-Engg",
    "html_url": "https://github.com/Aniket-Engg",
    "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
    "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
    "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
    "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
    "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
    "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/42/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/remix-project/issues/42/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/549260835",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-549260835",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 549260835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTI2MDgzNQ==",
    "user": {
      "login": "youngqqcn",
      "id": 30211020,
      "node_id": "MDQ6VXNlcjMwMjExMDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30211020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/youngqqcn",
      "html_url": "https://github.com/youngqqcn",
      "followers_url": "https://api.github.com/users/youngqqcn/followers",
      "following_url": "https://api.github.com/users/youngqqcn/following{/other_user}",
      "gists_url": "https://api.github.com/users/youngqqcn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/youngqqcn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/youngqqcn/subscriptions",
      "organizations_url": "https://api.github.com/users/youngqqcn/orgs",
      "repos_url": "https://api.github.com/users/youngqqcn/repos",
      "events_url": "https://api.github.com/users/youngqqcn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/youngqqcn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T08:37:53Z",
    "updated_at": "2019-11-04T08:37:53Z",
    "author_association": "NONE",
    "body": "I debug into the snippet as above,  the  `item` is warning info ,  it's object information as below:\r\n\r\n```\r\n{\r\n warning: \"ERC20 Contracts decimals function should have uint8 as return type\",\r\n location: null, \r\n more: \" https://eips.ethereum.org/EIPS/eip-20\"\r\n}\r\n```\r\n\r\nAll right, compiler want to show this warning to user, but  raise a exception due to this sentence `var split = item.location.split(':'); ` ,  and the compiler enters a dead loop ( I guess) .\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/549260835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/549264632",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-549264632",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 549264632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTI2NDYzMg==",
    "user": {
      "login": "youngqqcn",
      "id": 30211020,
      "node_id": "MDQ6VXNlcjMwMjExMDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30211020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/youngqqcn",
      "html_url": "https://github.com/youngqqcn",
      "followers_url": "https://api.github.com/users/youngqqcn/followers",
      "following_url": "https://api.github.com/users/youngqqcn/following{/other_user}",
      "gists_url": "https://api.github.com/users/youngqqcn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/youngqqcn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/youngqqcn/subscriptions",
      "organizations_url": "https://api.github.com/users/youngqqcn/orgs",
      "repos_url": "https://api.github.com/users/youngqqcn/repos",
      "events_url": "https://api.github.com/users/youngqqcn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/youngqqcn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T08:52:44Z",
    "updated_at": "2019-11-04T08:52:44Z",
    "author_association": "NONE",
    "body": "I try to modify the Tether USDT solidity source code  to close the warning throwed by compiler.  \r\n```\r\nwarning: \"ERC20 Contracts decimals function should have uint8 as return type\"\r\n```\r\n\r\nI changed  `uint  decimal`   to  `uint8 decimal` ,   COMPILE SUCCESS!!\r\n\r\nI use this tag to comment the new code.\r\n```\r\n//=====================####  MODIFIED  #####==================\r\n```\r\n\r\nThe new source code  as below:\r\n\r\n```solidity\r\n/**\r\n *Submitted for verification at Etherscan.io on 2017-11-28\r\n*/\r\n\r\npragma solidity ^0.4.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    /**\r\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n      * account.\r\n      */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n      * @dev Throws if called by any account other than the owner.\r\n      */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is Ownable, ERC20Basic {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    // additional variables for use if transaction fees ever became necessary\r\n    uint public basisPointsRate = 0;\r\n    uint public maximumFee = 0;\r\n\r\n    /**\r\n    * @dev Fix for the ERC20 short address attack.\r\n    */\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(msg.sender, owner, fee);\r\n        }\r\n        Transfer(msg.sender, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of.\r\n    * @return An uint representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n    mapping (address => mapping (address => uint)) public allowed;\r\n\r\n    uint public constant MAX_UINT = 2**256 - 1;\r\n\r\n    /**\r\n    * @dev Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint the amount of tokens to be transferred\r\n    */\r\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n        // if (_value > _allowance) throw;\r\n\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        if (_allowance < MAX_UINT) {\r\n            allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(_from, owner, fee);\r\n        }\r\n        Transfer(_from, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    /**\r\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint specifying the amount of tokens still available for the spender.\r\n    */\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    Unpause();\r\n  }\r\n}\r\n\r\n\r\ncontract BlackList is Ownable, BasicToken {\r\n\r\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r\n    function getBlackListStatus(address _maker) external constant returns (bool) {\r\n        return isBlackListed[_maker];\r\n    }\r\n\r\n    function getOwner() external constant returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    mapping (address => bool) public isBlackListed;\r\n    \r\n    function addBlackList (address _evilUser) public onlyOwner {\r\n        isBlackListed[_evilUser] = true;\r\n        AddedBlackList(_evilUser);\r\n    }\r\n\r\n    function removeBlackList (address _clearedUser) public onlyOwner {\r\n        isBlackListed[_clearedUser] = false;\r\n        RemovedBlackList(_clearedUser);\r\n    }\r\n\r\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r\n        require(isBlackListed[_blackListedUser]);\r\n        uint dirtyFunds = balanceOf(_blackListedUser);\r\n        balances[_blackListedUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\r\n    }\r\n\r\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\r\n\r\n    event AddedBlackList(address _user);\r\n\r\n    event RemovedBlackList(address _user);\r\n\r\n}\r\n\r\n contract UpgradedStandardToken is StandardToken{\r\n    // those methods are called by the legacy contract\r\n    // and they must ensure msg.sender to be the contract address\r\n    function transferByLegacy(address from, address to, uint value) public;\r\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\r\n    function approveByLegacy(address from, address spender, uint value) public;\r\n}\r\n\r\n\r\ncontract TetherToken is Pausable, StandardToken, BlackList {\r\n    string public name;\r\n    string public symbol;\r\n\r\n    //=====================####  MODIFIED  #####==================\r\n    //uint public decimals;  //old \r\n    uint8 public decimals;  //new\r\n\r\n    address public upgradedAddress;\r\n    bool public deprecated;\r\n\r\n    //  The contract can be initialized with a number of tokens\r\n    //  All the tokens are deposited to the owner address\r\n    //\r\n    // @param _balance Initial supply of the contract\r\n    // @param _name Token Name\r\n    // @param _symbol Token symbol\r\n    // @param _decimals Token decimals\r\n\r\n    //=====================####  MODIFIED  #####==================\r\n    //function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public { //old\r\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint8 _decimals) public { //new\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[owner] = _initialSupply;\r\n        deprecated = false;\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transfer(address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[msg.sender]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\r\n        } else {\r\n            return super.transfer(_to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[_from]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\r\n        } else {\r\n            return super.transferFrom(_from, _to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function balanceOf(address who) public constant returns (uint) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\r\n        } else {\r\n            return super.balanceOf(who);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\r\n        } else {\r\n            return super.approve(_spender, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\r\n        } else {\r\n            return super.allowance(_owner, _spender);\r\n        }\r\n    }\r\n\r\n    // deprecate current contract in favour of a new one\r\n    function deprecate(address _upgradedAddress) public onlyOwner {\r\n        deprecated = true;\r\n        upgradedAddress = _upgradedAddress;\r\n        Deprecate(_upgradedAddress);\r\n    }\r\n\r\n    // deprecate current contract if favour of a new one\r\n    function totalSupply() public constant returns (uint) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).totalSupply();\r\n        } else {\r\n            return _totalSupply;\r\n        }\r\n    }\r\n\r\n    // Issue a new amount of tokens\r\n    // these tokens are deposited into the owner address\r\n    //\r\n    // @param _amount Number of tokens to be issued\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balances[owner] + amount > balances[owner]);\r\n\r\n        balances[owner] += amount;\r\n        _totalSupply += amount;\r\n        Issue(amount);\r\n    }\r\n\r\n    // Redeem tokens.\r\n    // These tokens are withdrawn from the owner address\r\n    // if the balance must be enough to cover the redeem\r\n    // or the call will fail.\r\n    // @param _amount Number of tokens to be issued\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balances[owner] >= amount);\r\n\r\n        _totalSupply -= amount;\r\n        balances[owner] -= amount;\r\n        Redeem(amount);\r\n    }\r\n\r\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\r\n        require(newBasisPoints < 20);\r\n        require(newMaxFee < 50);\r\n\r\n        basisPointsRate = newBasisPoints;\r\n\r\n        \r\n        //=====================####  MODIFIED  #####==================\r\n        //maximumFee = newMaxFee.mul(10**decimals);  //old\r\n        maximumFee = newMaxFee.mul(10**uint(decimals));  //new\r\n\r\n        Params(basisPointsRate, maximumFee);\r\n    }\r\n\r\n    // Called when new token are issued\r\n    event Issue(uint amount);\r\n\r\n    // Called when tokens are redeemed\r\n    event Redeem(uint amount);\r\n\r\n    // Called when contract is deprecated\r\n    event Deprecate(address newAddress);\r\n\r\n    // Called if contract ever adds fees\r\n    event Params(uint feeBasisPoints, uint maxFee);\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/549264632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/571595412",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-571595412",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 571595412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTU5NTQxMg==",
    "user": {
      "login": "yann300",
      "id": 6940742,
      "node_id": "MDQ6VXNlcjY5NDA3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6940742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yann300",
      "html_url": "https://github.com/yann300",
      "followers_url": "https://api.github.com/users/yann300/followers",
      "following_url": "https://api.github.com/users/yann300/following{/other_user}",
      "gists_url": "https://api.github.com/users/yann300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yann300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yann300/subscriptions",
      "organizations_url": "https://api.github.com/users/yann300/orgs",
      "repos_url": "https://api.github.com/users/yann300/repos",
      "events_url": "https://api.github.com/users/yann300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yann300/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-07T13:53:25Z",
    "updated_at": "2020-01-07T13:53:25Z",
    "author_association": "MEMBER",
    "body": "that looks like an issue with the static analysis module @Aniket-Engg how can we best handle this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/571595412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/662987803",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-662987803",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 662987803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjk4NzgwMw==",
    "user": {
      "login": "LianaHus",
      "id": 9685356,
      "node_id": "MDQ6VXNlcjk2ODUzNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9685356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LianaHus",
      "html_url": "https://github.com/LianaHus",
      "followers_url": "https://api.github.com/users/LianaHus/followers",
      "following_url": "https://api.github.com/users/LianaHus/following{/other_user}",
      "gists_url": "https://api.github.com/users/LianaHus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LianaHus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LianaHus/subscriptions",
      "organizations_url": "https://api.github.com/users/LianaHus/orgs",
      "repos_url": "https://api.github.com/users/LianaHus/repos",
      "events_url": "https://api.github.com/users/LianaHus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LianaHus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T12:50:30Z",
    "updated_at": "2020-07-23T12:50:30Z",
    "author_association": "MEMBER",
    "body": "@Aniket-Engg ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/662987803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/663365782",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-663365782",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 663365782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM2NTc4Mg==",
    "user": {
      "login": "Aniket-Engg",
      "id": 30843294,
      "node_id": "MDQ6VXNlcjMwODQzMjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aniket-Engg",
      "html_url": "https://github.com/Aniket-Engg",
      "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
      "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
      "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
      "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
      "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-24T06:19:59Z",
    "updated_at": "2020-07-24T06:19:59Z",
    "author_association": "MEMBER",
    "body": "This issue is no more there but I get another issue in analysis report while compiling this contract. I will work on that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/663365782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/829111016",
    "html_url": "https://github.com/ethereum/remix-project/issues/42#issuecomment-829111016",
    "issue_url": "https://api.github.com/repos/ethereum/remix-project/issues/42",
    "id": 829111016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyOTExMTAxNg==",
    "user": {
      "login": "paulvi",
      "id": 1614482,
      "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulvi",
      "html_url": "https://github.com/paulvi",
      "followers_url": "https://api.github.com/users/paulvi/followers",
      "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
      "organizations_url": "https://api.github.com/users/paulvi/orgs",
      "repos_url": "https://api.github.com/users/paulvi/repos",
      "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulvi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-29T10:16:03Z",
    "updated_at": "2021-04-29T10:16:03Z",
    "author_association": "NONE",
    "body": "\r\nAs of 2021 USDT contract at https://cn.etherscan.com/address/0xdac17f958d2ee523a2206206994597c13d831ec7#code\r\ncompiles without warning when selecting exact solc version as specified by `pragma solidity ^0.4.17`;",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/remix-project/issues/comments/829111016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
