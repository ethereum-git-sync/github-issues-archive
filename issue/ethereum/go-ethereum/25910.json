{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25910",
  "id": 1393005850,
  "node_id": "I_kwDOAOvK985TB5Ua",
  "number": 25910,
  "title": "Inconsistency with stack depth check in js-tracer",
  "user": {
    "login": "cattingcat",
    "id": 5341725,
    "node_id": "MDQ6VXNlcjUzNDE3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5341725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cattingcat",
    "html_url": "https://github.com/cattingcat",
    "followers_url": "https://api.github.com/users/cattingcat/followers",
    "following_url": "https://api.github.com/users/cattingcat/following{/other_user}",
    "gists_url": "https://api.github.com/users/cattingcat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cattingcat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cattingcat/subscriptions",
    "organizations_url": "https://api.github.com/users/cattingcat/orgs",
    "repos_url": "https://api.github.com/users/cattingcat/repos",
    "events_url": "https://api.github.com/users/cattingcat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cattingcat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-09-30T20:45:08Z",
  "updated_at": "2022-10-28T12:40:42Z",
  "closed_at": "2022-10-28T12:40:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I found inconsistency with error messages about stack underflow. For example:\r\n\r\nSome commands returns error with log.getError()\r\n\r\ncode:\r\n```\r\nvar err = log.getError();\r\n    if (err) {\r\n      this.callContractEnter = false;\r\n      this.debug.push([log.getPC(), log.op.toString(), log.getDepth(), this.callstack.length, 'err step', err]);\r\n      ...\r\n```\r\n\r\n```\r\nArray(6) [0, LOG4, 3, 3, err step, stack underflow (0 <=> 6)]\r\nArray(6) [0, AND, 3, 3, err step, stack underflow (0 <=> 2)]\r\nArray(6) [0, DUP9, 3, 3, err step, stack underflow (0 <=> 9)]\r\n```\r\n\r\n\r\nAnd REVERT called in both places in step function with empty stack (in my case) so I can't get stack params because it breaks my traces\r\nand after that it is processed inside fault function\r\n\r\nTransaction with lots of stack issues: 0x93985273e6b0a0744a09261cd75fa5abd7ebacb9406ccff25a89463a303f4cda (mainnet)\r\n\r\nIs it correct behaviour?",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1264221658",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25910#issuecomment-1264221658",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910",
    "id": 1264221658,
    "node_id": "IC_kwDOAOvK985LWn3a",
    "user": {
      "login": "sadozh",
      "id": 95658062,
      "node_id": "U_kgDOBbOgTg",
      "avatar_url": "https://avatars.githubusercontent.com/u/95658062?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadozh",
      "html_url": "https://github.com/sadozh",
      "followers_url": "https://api.github.com/users/sadozh/followers",
      "following_url": "https://api.github.com/users/sadozh/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadozh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadozh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadozh/subscriptions",
      "organizations_url": "https://api.github.com/users/sadozh/orgs",
      "repos_url": "https://api.github.com/users/sadozh/repos",
      "events_url": "https://api.github.com/users/sadozh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadozh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-01T03:29:38Z",
    "updated_at": "2022-10-25T12:54:29Z",
    "author_association": "NONE",
    "body": "And REVERT called in both places in step function with empty stack (in my case) so I can't get stack params because it breaks my traces\nand after that it is processed inside fault function\n\nTransaction with lots of stack issues: BFYSRG7cHV6SK6MWQuNBaiS7DTtcg5sdjpyUanqEovfW(mainnet)\n\nIs it correct behaviour?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1264221658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290514419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25910#issuecomment-1290514419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910",
    "id": 1290514419,
    "node_id": "IC_kwDOAOvK985M66_z",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T12:59:10Z",
    "updated_at": "2022-10-25T12:59:10Z",
    "author_association": "MEMBER",
    "body": "Could you please write up a tiny self contained js tracer thta reproduces the issue you're seeing? It would help us a lot to have something we can run and see vs having to guess the missing parts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290514419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1294909462",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25910#issuecomment-1294909462",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910",
    "id": 1294909462,
    "node_id": "IC_kwDOAOvK985NLsAW",
    "user": {
      "login": "cattingcat",
      "id": 5341725,
      "node_id": "MDQ6VXNlcjUzNDE3MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5341725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cattingcat",
      "html_url": "https://github.com/cattingcat",
      "followers_url": "https://api.github.com/users/cattingcat/followers",
      "following_url": "https://api.github.com/users/cattingcat/following{/other_user}",
      "gists_url": "https://api.github.com/users/cattingcat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cattingcat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cattingcat/subscriptions",
      "organizations_url": "https://api.github.com/users/cattingcat/orgs",
      "repos_url": "https://api.github.com/users/cattingcat/repos",
      "events_url": "https://api.github.com/users/cattingcat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cattingcat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T11:58:28Z",
    "updated_at": "2022-10-28T12:06:49Z",
    "author_association": "NONE",
    "body": "Yep, no problem @karalabe \r\n\r\nHere is tracer:\r\n```\r\n{\r\n  tst: [],\r\n\r\n  fault: function (log, db, err) {\r\n  },\r\n\r\n  step: function (log, db) {\r\n    var opcode = log.op.toNumber();\r\n    var symbol = log.op.toString();\r\n    var err = log.getError();\r\n    if (err === 'out of gas') {\r\n      return;\r\n    }\r\n    if (err) {\r\n      this.tst.push(['if err', symbol, err]);\r\n      return;\r\n    }\r\n\r\n    // REVERT\r\n    if (opcode === 0xFD) {\r\n      if (log.stack.length() === 0) {\r\n        this.tst.push(['opcode process', symbol, 'not enough args during opcode process']);\r\n      }\r\n    }\r\n\r\n  },\r\n\r\n  result: function (ctx, db) {\r\n    return {\r\n      tst: this.tst,\r\n    };\r\n  }\r\n}\r\n\r\n```\r\n\r\nThe problem is here\r\n```\r\nthis.tst.push(['opcode process', symbol, 'not enough args during opcode process']);\r\n ```\r\n \r\n It is expected to not be called at all, because of `return` in `if err` condition, but actually it is called with not enough stack args\r\n\r\n<img width=\"719\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5341725/198581793-adeac771-c9b1-4e6f-9b1d-fd9b898e4924.png\">\r\n\r\nAll opcodes process stack underflow in `if err`, but REVERT doesn't\r\n\r\nAccorning to docs, REVERT should have 2 stack arguments, offset and length\r\n```\r\nvar offset = log.stack.peek(0).valueOf();\r\nvar length = log.stack.peek(1).valueOf();\r\n```\r\n\r\nTransaction: 0x93985273e6b0a0744a09261cd75fa5abd7ebacb9406ccff25a89463a303f4cda (mainnet)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1294909462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1294952416",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25910#issuecomment-1294952416",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25910",
    "id": 1294952416,
    "node_id": "IC_kwDOAOvK985NL2fg",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T12:40:42Z",
    "updated_at": "2022-10-28T12:40:42Z",
    "author_association": "MEMBER",
    "body": "That transaction, https://etherscan.io/tx/0x93985273e6b0a0744a09261cd75fa5abd7ebacb9406ccff25a89463a303f4cda , was in [2.4M](https://etherscan.io/block/2419253). At that point in time, REVERT did not exist as an opcode (it was added in Byzantium at block 4.37M), so it should instead get an error due to being an invalid opcode. \r\n\r\nNow, we do this little trick internally\r\n```golang\r\n\t// Fill all unassigned slots with opUndefined.\r\n\tfor i, entry := range tbl {\r\n\t\tif entry == nil {\r\n\t\t\ttbl[i] = &operation{execute: opUndefined, maxStack: maxStack(0, 0)}\r\n\t\t}\r\n\t}\r\n```\r\nWe define them as actual opcodes, with an exec-function like this: \r\n```golang\r\nfunc opUndefined(pc *uint64, interpreter *EVMInterpreter, scope *ScopeContext) ([]byte, error) {\r\n\treturn nil, &ErrInvalidOpCode{opcode: OpCode(scope.Contract.Code[*pc])}\r\n}\r\n```\r\nSo it will _not_ hit a stack depth error (`maxStack: maxStack(0, 0)}`), but executing it _should_ return this error\r\n\r\n```\r\nfunc (e *ErrInvalidOpCode) Error() string { return fmt.Sprintf(\"invalid opcode: %s\", e.opcode) }\r\n```\r\nHowever, this is one of those times where we will callback  twice. One just before the exec: \r\n```\r\n\t\t\tin.cfg.Tracer.CaptureState(pc, op, gasCopy, cost, callContext, in.returnData, in.evm.depth, err)\r\n\t\t\tlogged = true\r\n\t\t}\r\n\t\t// execute the operation\r\n\t\tres, err = operation.execute(&pc, in, callContext)\r\n```\r\nAnd the `err` will be non-nil, and we will execute the deferred one for the fault during exec: \r\n```\r\n\t\t\t\t\tin.cfg.Tracer.CaptureFault(pcCopy, op, gasCopy, cost, callContext, in.evm.depth, err)\r\n```\r\n\r\nSo the TLDR is that different errors happen at different times. For stack depth errors, they happen early, and we can call-back about them early. \r\n\r\nFor other errors, such as errors during exec of the opcode, they happen late. We have already emitted a calback prior to the exec, and thus we emit a second via captureFault for this error. The only surefire way to disambiguate is: if two callbacks happen sequentially and they both concern the same PC, then they are one and the same (and can be merged.)\r\n\r\nYeah, it's not ideal, or remotely user-friendly, but it's the way it is. Closing this since I don't see us changing this anytime soon. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1294952416/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
