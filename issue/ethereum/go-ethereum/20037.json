{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20037",
  "id": 489633804,
  "node_id": "MDU6SXNzdWU0ODk2MzM4MDQ=",
  "number": 20037,
  "title": "trie.mustDecodeNode: invalid number of list elements: 0",
  "user": {
    "login": "felberj",
    "id": 6639926,
    "node_id": "MDQ6VXNlcjY2Mzk5MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6639926?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felberj",
    "html_url": "https://github.com/felberj",
    "followers_url": "https://api.github.com/users/felberj/followers",
    "following_url": "https://api.github.com/users/felberj/following{/other_user}",
    "gists_url": "https://api.github.com/users/felberj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felberj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felberj/subscriptions",
    "organizations_url": "https://api.github.com/users/felberj/orgs",
    "repos_url": "https://api.github.com/users/felberj/repos",
    "events_url": "https://api.github.com/users/felberj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felberj/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1091434310,
      "node_id": "MDU6TGFiZWwxMDkxNDM0MzEw",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:in-progress",
      "name": "status:in-progress",
      "color": "a9f9cb",
      "default": false,
      "description": ""
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-09-05T09:23:06Z",
  "updated_at": "2020-06-27T09:47:54Z",
  "closed_at": "2020-06-27T09:47:53Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nI am using geth as a library to access the Ethereum blockchain.\r\n\r\nShort version of what I am doing:\r\n\r\n1. I create a new ETH Node with a datadir that contains the full archive blockchain data\r\n2. I then spawn many goroutines\r\n3. Each of the routines then compute the state of a 'random' block and then trace that block with a \"tracer\". I go through the blockchain backwards.\r\n\r\nI will continue to run queries and update this issue with more logs. In the meantime, I would be grateful if you can tell me whether this looks like a race condition or whether my blockchain data is corrupt. If you need more information, let me know and I will update this issue.\r\n\r\n```go\r\n// Tracer allows to trace blocks with a given tracer\r\ntype Tracer struct {\r\n\teth    *eth.Ethereum // shared among goroutines\r\n}\r\n\r\n// computeBlockStartState creates a statedb that represents the state before that block.\r\nfunc (t *Tracer) computeBlockStartState(block *types.Block) (*state.StateDB, error) {\r\n\tparent := t.eth.BlockChain().GetBlock(block.ParentHash(), block.NumberU64()-1)\r\n\tif parent == nil {\r\n\t\treturn nil, errors.Errorf(\"parent %v not found\", block.ParentHash())\r\n\t}\r\n\tstatedb, err := t.eth.BlockChain().StateAt(parent.Root())\r\n\tif err != nil {\r\n\t\t// it this error is triggered, we might need to implement the following from the official ETH client:\r\n\t\t// (api *PrivateDebugAPI) computeStateDB\r\n\t\treturn nil, errors.Wrap(err, \"required historical state unavailable\")\r\n\t}\r\n\treturn statedb, nil\r\n}\r\n\r\n// traceBlock invokes the provided tracer for each transaction in the provided block.\r\nfunc (t *Tracer) traceBlock(ctx context.Context, block *types.Block, statedb *state.StateDB, tracer Tracerer) error {\r\n\t// Recompute transactions up to the target index.\r\n\tsigner := types.MakeSigner(t.config, block.Number())\r\n\r\n\tfor ind, tx := range block.Transactions() {\r\n\t\t// Assemble the transaction call message and return if the requested offset\r\n\t\tmsg, _ := tx.AsMessage(signer)\r\n\t\tcontext := core.NewEVMContext(msg, block.Header(), t.eth.BlockChain(), nil)\r\n\r\n\t\t// Not yet the searched for transaction, execute on top of the current state\r\n\t\tvmenv := vm.NewEVM(context, statedb, t.config, vm.Config{\r\n\t\t\tDebug:  true,\r\n\t\t\tTracer: tracer,\r\n\t\t})\r\n\t\tif _, _, _, err := core.ApplyMessage(vmenv, msg, new(core.GasPool).AddGas(tx.Gas())); err != nil {\r\n       return err\r\n\t\t}\r\n\t\t// Ensure any modifications are committed to the state\r\n\t\t// Only delete empty objects if EIP158/161 (a.k.a Spurious Dragon) is in effect\r\n\t\tstatedb.Finalise(vmenv.ChainConfig().IsEIP158(block.Number()))\r\n\t}\r\n\treturn nil\r\n}\r\n```\r\n\r\nI do not want to modify my blockchain data (but unfortunately cannot make the directory readonly, because Geth does not have an option for that). Unfortunately, my queries sometimes panic, so I assumed my blockchain data just gets corrupted sometimes. But because the crashes appear so far apart, I think there could be a rare race condition in the Geth client.\r\n\r\nCrashes I recorded so far:\r\n\r\n#### 1\r\n\r\n2019/09/05 05:25:38 Crashed in block 5404366 in tx db4d6a12865bf5c8cc1967e27d437499c1d463903f007ba9e172b27305bbb8e6\r\n2019/09/05 05:25:38 Unable to finish task of block 5404366: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0\r\npanic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0 [recovered]\r\n        panic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0 [recovered]\r\n        panic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0\r\n\r\n#### 2\r\n\r\n**IMPORTANT: THIS WAS USING THE GETH 1.8.23 CLIENT**\r\n\r\n2019/09/03 03:16:16 Crashed in block 4488802 in tx 326f7e6a155ee9c3fb6de2054f88a293f656e42702fc417889b2746bf347217a\r\n2019/09/03 03:16:16 Unable to finish task of block 4488802: node 4aae31425048fff647b005ba389194be49335146d5a184808fe1a0f53d007c7f: decode error: rlp: expected List\r\npanic: node 4aae31425048fff647b005ba389194be49335146d5a184808fe1a0f53d007c7f: decode error: rlp: expected List [recovered]\r\n        panic: node 4aae31425048fff647b005ba389194be49335146d5a184808fe1a0f53d007c7f: decode error: rlp: expected List [recovered]\r\n        panic: node 4aae31425048fff647b005ba389194be49335146d5a184808fe1a0f53d007c7f: decode error: rlp: expected List\r\n\r\n\r\n#### System information\r\n\r\nGeth version: `1.9.2`\r\nOS & Version: Linux\r\nCommit hash : (if `develop`)\r\n\r\n#### Expected behaviour\r\n\r\nRunning many block in parallel with the same ETH node does not indeterministically crash the decoder?\r\n\r\n#### Actual behaviour\r\n\r\nTracer crashes while accessing the ethereum data. If I rerun the block where the tracer crashed, it works fine. Rerunning the tracer over the same blockchain crashes in a different block.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nUnfortunately, I cannot yet release this code, as I am in the middle of my research.\r\nBut it might work like this:\r\n\r\n1. Create a ETH Node with the full archive blockchain data available\r\n2. Trace many block in parallel, while going backwards through the blockchain.\r\n\r\n#### Backtrace\r\n\r\n````\r\npanic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0 [recovered]\r\n        panic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0 [recovered]\r\n        panic: node 6976b996538d306f6dc8e6da17a4dc0ec94b9d8a5ec81807b0132505af472e8d: invalid number of list elements: 0\r\n\r\ngoroutine 440 [running]:\r\npanic(0xe2ba00, 0xc3df0a2430)\r\n        /usr/local/go/src/runtime/panic.go:522 +0x1b5\r\ngithub.com/ethereum/go-ethereum/trie.mustDecodeNode(0xc160db57a0, 0x20, 0x20, 0xc2971e0000, 0x114, 0x114, 0x0, 0x0)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/node.go:111 +0x196\r\ngithub.com/ethereum/go-ethereum/trie.(*Database).node(0xc000196800, 0x6f308d5396b97669, 0xedca417dae6c86d, 0x718c85e8a9d4bc9, 0x8d2e47af052513b0, 0xc1\r\n60db5540, 0x20)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/database.go:390 +0x46d\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).resolveHash(0xc201fdc7d0, 0xc160db55a0, 0x20, 0x20, 0xc239ccc5a0, 0x3, 0x41, 0x2000c2bc4c5790, 0xc160db55\r\n60, 0x214, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:398 +0xe3\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11cae60, 0xc34ff1f8c0, 0xc239ccc5a0, 0x41, 0x41, 0x3, 0x214, 0x2c, 0x214, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:133 +0xf8\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11c9120, 0xc1c7ea3180, 0xc239ccc5a0, 0x41, 0x41, 0x2, 0x11c9120, 0xc1c7ea3180, 0x0\r\n, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:126 +0x6c0\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11cae60, 0xc34ff1f7e0, 0xc239ccc5a0, 0x41, 0x41, 0x2, 0x20, 0x240, 0xecf500, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:137 +0x20a\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11c9120, 0xc1c7ea3040, 0xc239ccc5a0, 0x41, 0x41, 0x1, 0x11c9120, 0xc1c7ea3040, 0x0\r\n, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:126 +0x6c0\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11cae60, 0xc2d869e680, 0xc239ccc5a0, 0x41, 0x41, 0x1, 0xc2bc4c5e08, 0x42aa39, 0xc2\r\n39ccc5a0, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:137 +0x20a\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).tryGet(0xc201fdc7d0, 0x11c9120, 0xc1c5c0ca00, 0xc239ccc5a0, 0x41, 0x41, 0x0, 0x20, 0xc201fdc7e8, 0x20, ..\r\n.)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:126 +0x6c0\r\ngithub.com/ethereum/go-ethereum/trie.(*Trie).TryGet(0xc201fdc7d0, 0xc201fdc7e8, 0x20, 0x20, 0xc201fdc7e8, 0x20, 0x20, 0xda8dc0, 0xc1006d0480)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/trie.go:101 +0x7b\r\ngithub.com/ethereum/go-ethereum/trie.(*SecureTrie).TryGet(0xc201fdc7d0, 0xc38f429e20, 0x20, 0x20, 0xc201fdc7d0, 0xc2bc4c606c, 0xc173b708b0, 0xc1544f99\r\nbc, 0x0)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/trie/secure_trie.go:79 +0x7b\r\ngithub.com/ethereum/go-ethereum/core/state.(*stateObject).GetCommittedState(0xc244464620, 0x11de5c0, 0xc012aabca0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\r\n...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/state/state_object.go:196 +0x178\r\ngithub.com/ethereum/go-ethereum/core/state.(*stateObject).GetState(0xc244464620, 0x11de5c0, 0xc012aabca0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/state/state_object.go:177 +0x147\r\ngithub.com/ethereum/go-ethereum/core/state.(*StateDB).GetState(0xc30e5bf440, 0xf23784e8e679240, 0xa38fbc0f4c53a146, 0x2b898097, 0x0, 0x0, 0x0, 0x0, 0x\r\n0, 0x0, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/state/statedb.go:285 +0x99\r\ngithub.com/ethereum/go-ethereum/core/vm.opSload(0xc10b6acff8, 0xc3d5c12000, 0xc3462d2300, 0xc24c480340, 0xc24c480360, 0xc8, 0xc24c480340, 0xc24c480360\r\n, 0xc3462d2300, 0x1)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/vm/instructions.go:631 +0x115\r\ngithub.com/ethereum/go-ethereum/core/vm.(*EVMInterpreter).Run(0xc3d5c12000, 0xc3462d2300, 0xc330e5c9b0, 0x44, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/vm/interpreter.go:268 +0x47e\r\ngithub.com/ethereum/go-ethereum/core/vm.run(0xc3d3644000, 0xc3462d2300, 0xc330e5c9b0, 0x44, 0x44, 0xc3462d2300, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/vm/evm.go:67 +0x276\r\ngithub.com/ethereum/go-ethereum/core/vm.(*EVM).Call(0xc3d3644000, 0x11be300, 0xc28e667740, 0xf23784e8e679240, 0xa38fbc0f4c53a146, 0x2b898097, 0xc330e5\r\nc9b0, 0x44, 0x44, 0xb658, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/vm/evm.go:242 +0x519\r\ngithub.com/ethereum/go-ethereum/core.(*StateTransition).TransitionDb(0xc13d612bd0, 0x11e1b60, 0xc308880300, 0xc33abc3180, 0xc13d612bd0, 0xc308880300,\r\n0xc308880300, 0xf70120)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/state_transition.go:213 +0x3a9\r\ngithub.com/ethereum/go-ethereum/core.ApplyMessage(0xc3d3644000, 0x11e1b60, 0xc308880300, 0xc33abc3180, 0xc7939ac213f81f33, 0xada03468, 0xc1f3d7af80, 0\r\nxee098337d544bc52, 0x1bde71bf3915bf2a, 0xb5e37b7d, ...)\r\n        /home/vagrant/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.2/core/state_transition.go:132 +0x5b\r\nfelberj/tracer.(*Tracer).traceBlock(0xc03fda31e0, 0x11d87a0, 0xc000272d80, 0xc3469a2240, 0xc30e5bf440, 0x11bca20, 0xc19f92aac8, 0x0, 0x0)\r\n        /home/vagrant/shared/trace_block.go:50 +0x596\r\nfelberj/tracer.(*Tracer).TraceBlockByNumber(0xc03fda31e0, 0x11d87a0, 0xc000272d80, 0x5276ce, 0x11bca20, 0xc19f92aac8, 0x0, 0x0)\r\n````",
  "closed_by": {
    "login": "no-response[bot]",
    "id": 32965360,
    "node_id": "MDM6Qm90MzI5NjUzNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/no-response%5Bbot%5D",
    "html_url": "https://github.com/apps/no-response",
    "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/529840329",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-529840329",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 529840329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTg0MDMyOQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T08:54:05Z",
    "updated_at": "2019-09-10T08:54:05Z",
    "author_association": "MEMBER",
    "body": "Thanks for reporting this. We don't know what the issue is, and need to investigate this further. Let us know if you manage find some way to reproduce this  more deterministaically.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/529840329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/631966671",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-631966671",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 631966671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTk2NjY3MQ==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T08:47:22Z",
    "updated_at": "2020-05-21T08:47:22Z",
    "author_association": "MEMBER",
    "body": "I am working on a tool to repair the broken state. Hopefully, the tool can be used to fix it",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/631966671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635207638",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-635207638",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 635207638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTIwNzYzOA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T08:46:53Z",
    "updated_at": "2020-05-28T08:46:53Z",
    "author_association": "MEMBER",
    "body": "For reference, this kind of issue was previously reported in https://github.com/ethereum/go-ethereum/issues/15105",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635207638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635208233",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-635208233",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 635208233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTIwODIzMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T08:48:05Z",
    "updated_at": "2020-05-28T08:48:05Z",
    "author_association": "MEMBER",
    "body": "How do you invoke `func (t *Tracer) traceBlock(ctx context.Context, block *types.Block, statedb *state.StateDB, tracer Tracerer) error {` ? You take state as a pointer input, so it might mean that you're being bit by some comcurrency issue. A statedb is not concurrecy safe",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635208233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635208454",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-635208454",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 635208454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTIwODQ1NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T08:48:33Z",
    "updated_at": "2020-05-28T08:48:33Z",
    "author_association": "MEMBER",
    "body": "Still, there's not much to go on here. If you could share your code, we might check if the concurrency is ok. Otherwise there are quite a few things than can go wrong that we can't see.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/635208454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/650533196",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20037#issuecomment-650533196",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20037",
    "id": 650533196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDUzMzE5Ng==",
    "user": {
      "login": "no-response[bot]",
      "id": 32965360,
      "node_id": "MDM6Qm90MzI5NjUzNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/no-response%5Bbot%5D",
      "html_url": "https://github.com/apps/no-response",
      "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2020-06-27T09:47:52Z",
    "updated_at": "2020-06-27T09:47:52Z",
    "author_association": "NONE",
    "body": "This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have more relevant information or answers to our questions so that we can investigate further.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/650533196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
