{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/18159",
  "id": 383424744,
  "node_id": "MDU6SXNzdWUzODM0MjQ3NDQ=",
  "number": 18159,
  "title": "[whisper] no feedback that the message reached the connected peer",
  "user": {
    "login": "dshulyak",
    "id": 1964576,
    "node_id": "MDQ6VXNlcjE5NjQ1NzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1964576?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dshulyak",
    "html_url": "https://github.com/dshulyak",
    "followers_url": "https://api.github.com/users/dshulyak/followers",
    "following_url": "https://api.github.com/users/dshulyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dshulyak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dshulyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dshulyak/subscriptions",
    "organizations_url": "https://api.github.com/users/dshulyak/orgs",
    "repos_url": "https://api.github.com/users/dshulyak/repos",
    "events_url": "https://api.github.com/users/dshulyak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dshulyak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233655,
      "node_id": "MDU6TGFiZWw3MjIzMzY1NQ==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:wontfix",
      "name": "status:wontfix",
      "color": "ffffff",
      "default": false,
      "description": null
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-11-22T08:21:58Z",
  "updated_at": "2019-02-26T09:43:27Z",
  "closed_at": "2019-02-26T09:43:27Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "One of our use cases is to use whisper for public broadcast communication. We are running it on mobile, where unpredictable network connection is a common thing. In a situation when client sends a message and network connection is lost it will have no feedback that message will never reach the network.\r\n\r\nIn case when two clients are having private conversation it is easy to tolerate this lack of feedback. For example by sending delivery confirmations. However in case of public broadcast communication lack of any feedback on the whisper level leads to really poor experience.\r\n\r\n#### System information\r\n\r\nGeth version: 1.8.18\r\nOS & Version: any\r\n\r\n#### Actual behavior\r\n\r\nTo provide a concrete example of this issue:  Alice connected to two nodes X an Y. Alice loses her network connection to nodes X and Y, but devp2p will know about it only after 30 seconds (current write/read socket deadline). After 30 seconds passes Alice notices that it has no connections at all, and it stops all communication. But all messages that were written during 30 seconds window now in unknown state.\r\n\r\n#### Expected behavior\r\n\r\nIt would be nice to get a better guarantee that messages at least reached closest peers. The way it can be done is to introduce separate whisper p2p message code - confirmationCode. This code will be sent as a response to messagesCode. The response itself would be a hash built from the rlp encoded list of envelopes.\r\n\r\nOn the side of the sender we will wait for described response, and notify the client that the envelope \"reached the network\".\r\n\r\nI fully understand that it doesn't provide strict guarantee, but given the use case it improves guarantee that the public message will be seen by more people. And can be improved further by using set of known nodes.\r\n\r\n#### Steps to reproduce the behavior\r\n\r\nTo reproduce create two whisper nodes A and B.\r\nA would be a sender, and B receiver.\r\nStart sending messages from node A, and block traffic between this two nodes, for example by dropping all packets with iptables.\r\n\r\n@gballet what is your opinion about this use case?",
  "closed_by": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/447783328",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18159#issuecomment-447783328",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159",
    "id": 447783328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzc4MzMyOA==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T09:48:45Z",
    "updated_at": "2018-12-17T09:48:45Z",
    "author_association": "MEMBER",
    "body": "Traffic is already a problem in Whisper, adding a new message type isn't going to help. Whisper is more like IP than it is like TCP and encumbering the protocol with traffic control features is a departure from its \"simple, secure\" philosophy. For those two reasons, I'm not so keen on the approach, which could be implemented at a higher level.\r\n\r\nOne question though: could you not achieve the same thing by keeping the messages for the 30 seconds that it takes devp2p to disconnect? If you don't get a disconnect afterwards, then you know that they have made it to the network. Let me know that you think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/447783328/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/467369445",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18159#issuecomment-467369445",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18159",
    "id": 467369445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM2OTQ0NQ==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T09:43:27Z",
    "updated_at": "2019-02-26T09:43:27Z",
    "author_association": "MEMBER",
    "body": "@dshulyak I am closing the issue. If you feel my counter-argument is weak, please reopen it as I'm happy to discuss the matter further.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/467369445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
