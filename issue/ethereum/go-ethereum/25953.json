{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25953",
  "id": 1402122190,
  "node_id": "I_kwDOAOvK985Tkq_O",
  "number": 25953,
  "title": "eth/tracers: Missing some inner traces for failed creating contracts in callTracer",
  "user": {
    "login": "jsvisa",
    "id": 3627395,
    "node_id": "MDQ6VXNlcjM2MjczOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jsvisa",
    "html_url": "https://github.com/jsvisa",
    "followers_url": "https://api.github.com/users/jsvisa/followers",
    "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
    "organizations_url": "https://api.github.com/users/jsvisa/orgs",
    "repos_url": "https://api.github.com/users/jsvisa/repos",
    "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jsvisa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-10-09T02:18:48Z",
  "updated_at": "2022-11-04T10:24:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `geth version` master branch\r\nCL client & version: e.g. lighthouse/nimbus/prysm@v1.0.0\r\nOS & Version: Windows/Linux/OSX\r\nCommit hash : (if `develop`)\r\n\r\n#### Expected behaviour\r\n\r\nWe've found some transactions missing the inner traces, eg: [0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c](https://etherscan.io/vmtrace?txhash=0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c&type=parity#raw)\r\n\r\nEtherscan's response(Parity's style):\r\n\r\n```json                                                      \r\n  {\r\n    \"action\": {\r\n      \"from\": \"0x7a3cdc2e82c354e1a3bc51626726f20de661620b\",\r\n      \"callType\": \"call\",\r\n      \"gas\": \"0x25d45\",\r\n      \"input\": \"0xfb90b320000000000000000000000000b5e2d774c4672aa4297272f62d61e8a041175cb50000000000000000000000000000000000000000000000000000000000028005\",\r\n      \"to\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n      \"value\": \"0x0\"\r\n    },\r\n    \"blockHash\": \"0x8c775cc479126643084dbff77dac6ca378553629ba186d235bea56f410010611\",\r\n    \"blockNumber\": 14731689,\r\n    \"error\": \"Out of gas\",\r\n    \"result\": null,\r\n    \"subtraces\": 1,\r\n    \"traceAddress\": [],\r\n    \"transactionHash\": \"0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c\",\r\n    \"transactionPosition\": 206,\r\n    \"type\": \"call\"\r\n  },\r\n  {\r\n    \"action\": {\r\n      \"from\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n      \"gas\": \"0x1ce6f\",\r\n      \"init\": \"0x3d602d80600a3d3981f3363d3d373d3d3d363d73059ffafdc6ef594230de44f824e2bd0a51ca5ded5af43d82803e903d91602b57fd5bf3\",\r\n      \"value\": \"0x0\"\r\n    },\r\n    \"blockHash\": \"0x8c775cc479126643084dbff77dac6ca378553629ba186d235bea56f410010611\",\r\n    \"blockNumber\": 14731689,\r\n    \"error\": \"Out of gas\",\r\n    \"result\": null,\r\n    \"subtraces\": 0,\r\n    \"traceAddress\": [\r\n      0\r\n    ],\r\n    \"transactionHash\": \"0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c\",\r\n    \"transactionPosition\": 206,\r\n    \"type\": \"create\"\r\n  }\r\n```\r\n\r\nGeth's response:\r\n\r\n> request via: \r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceTransaction\",\r\n    \"params\": [\r\n        \"0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c\",\r\n        {\r\n            \"tracer\": \"callTracer\",\r\n            \"timeout\": \"120s\"\r\n        }\r\n    ],\r\n    \"id\": 67\r\n}\r\n```\r\n\r\n> got response: \r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 67,\r\n    \"result\": {\r\n        \"from\": \"0x7a3cdc2e82c354e1a3bc51626726f20de661620b\",\r\n        \"gas\": \"0x25d45\",\r\n        \"gasUsed\": \"0x25d45\",\r\n        \"to\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n        \"input\": \"0xfb90b320000000000000000000000000b5e2d774c4672aa4297272f62d61e8a041175cb50000000000000000000000000000000000000000000000000000000000028005\",\r\n        \"error\": \"out of gas\",\r\n        \"value\": \"0x0\",\r\n        \"type\": \"CALL\"\r\n    }\r\n}\r\n```\r\n \r\n\r\nmissing the inner failed CREATE trace â†‘.\r\n\r\nsome other similar transactions:\r\n\r\n- 0xc0074bc2aa6607831f10213ecb1d7462090fcb223cda990b484eacdf7332d991\r\n- 0x340ea28f6182efe8f014fe92bfefdf45ff16acb6358014ebe400344f43198371\r\n- 0xab3eda78ee21f4f1e83e8c8563677f373f358ca5d25d60c397ac01a9f44004d6\r\n- 0xa8f4f9718640c731bc1043a48aaddcd6f839c3ea618f4be9e8f0e7d99aba13f2\r\n- 0xbbf9606c0102056b1ef3a0a66b0087a0c6822f42eed8e1637635b02ecf9ddf12\r\n- 0x876a0668d1337e4734dbec13ce1407a918ccac7d1e76e47f82728d877fa5a819\r\n\r\nsome facts:\r\n1. those transactions are EIP-1559 tx;\r\n2. EOA calls contractA, then contractA try to create a new contract(but failed)\r\n\r\nI'll take more time to find the deeper reasons.\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n\r\n#### Backtrace\r\n\r\n````\r\n[backtrace]\r\n````\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272902278",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1272902278",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1272902278,
    "node_id": "IC_kwDOAOvK985L3vKG",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T07:40:33Z",
    "updated_at": "2022-10-10T07:40:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see what's going on here. For this transaction [0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c](https://etherscan.io/vmtrace?txhash=0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c&type=parity#raw), the callframe  looks as below:\r\n\r\n```\r\n0x7a3cdc2e82c354e1a3bc51626726f20de661620b\r\n          |\r\n        [call]\r\n          |\r\n          V\r\n0xffa397285ce46fb78c588a9e993286aac68c37cd(Contract)\r\n          |\r\n   [try to create a new contract]\r\n          |\r\n          V\r\n          V\r\n0x7b24a24120Bd2a6de10d3149d44bBf4000F77711\r\n```\r\n\r\nbut the contract 0x7b24a24120Bd2a6de10d3149d44bBf4000F77711 was already created in transaction index **204**: [tx-204](https://cn.etherscan.com/tx/0x0a5bfdf8cfd71baac7635050a7b6822f87fe6f09dd98997d05b9fe567078c689), \r\nRef [0x7b24a24120bd2a6de10d3149d44bbf4000f77711#internaltx](https://etherscan.io/address/0x7b24a24120bd2a6de10d3149d44bbf4000f77711#internaltx)\r\n\r\n\r\nbut this transaction(0xba4c...)'s index is 206, so the EVM raised an exception `ErrContractAddressCollision`\r\n\r\nRef: https://github.com/ethereum/go-ethereum/blob/564751668aa01f55d39851cbf4673500ec2d4718/core/vm/evm.go#L427-L429\r\n\r\nthen the inner creating scope is not entered.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272902278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272905494",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1272905494",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1272905494,
    "node_id": "IC_kwDOAOvK985L3v8W",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T07:43:29Z",
    "updated_at": "2022-10-10T07:43:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@holiman  @s1na In this case, should we compatibility with Parity, move those lines\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/564751668aa01f55d39851cbf4673500ec2d4718/core/vm/evm.go#L443-L450\r\nupper the error return?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272905494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273039154",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1273039154",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1273039154,
    "node_id": "IC_kwDOAOvK985L4Qky",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T09:32:10Z",
    "updated_at": "2022-10-10T09:32:10Z",
    "author_association": "MEMBER",
    "body": "If the inner scope is not entered, I think the correct thing to do is to _NOT_ capture the enter of the inner scope. I mean.. why would we \"capture entering the scope\" if we do not enter the scope? \r\n\r\nParity-(backward)compatibility is nice, but the semantics are more important long-term. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273039154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273284902",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1273284902",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1273284902,
    "node_id": "IC_kwDOAOvK985L5Mkm",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T13:04:26Z",
    "updated_at": "2022-10-10T13:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@holiman thanks for your explanation. BTW, i've tried the `callTracerLegacy`(the js's one), it's behavior is similar to Parity's.\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 67,\r\n    \"result\": {\r\n        \"type\": \"CALL\",\r\n        \"from\": \"0x7a3cdc2e82c354e1a3bc51626726f20de661620b\",\r\n        \"to\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n        \"value\": \"0x0\",\r\n        \"gas\": \"0x25d45\",\r\n        \"gasUsed\": \"0x25d45\",\r\n        \"input\": \"0xfb90b320000000000000000000000000b5e2d774c4672aa4297272f62d61e8a041175cb50000000000000000000000000000000000000000000000000000000000028005\",\r\n        \"error\": \"out of gas\",\r\n        \"time\": \"1.715045ms\",\r\n        \"calls\": [\r\n            {\r\n                \"type\": \"CREATE2\",\r\n                \"from\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n                \"value\": \"0x0\",\r\n                \"gasUsed\": \"0x1ce6f\",\r\n                \"input\": \"0x3d602d80600a3d3981f3363d3d373d3d3d363d73059ffafdc6ef594230de44f824e2bd0a51ca5ded5af43d82803e903d91602b57fd5bf3\",\r\n                \"error\": \"internal failure\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nJust curious, the native and JS's implementation use the same logic, why JS can capture the scope?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273284902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273792356",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1273792356",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1273792356,
    "node_id": "IC_kwDOAOvK985L7Idk",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T20:31:12Z",
    "updated_at": "2022-10-10T20:31:12Z",
    "author_association": "MEMBER",
    "body": "> the native and JS's implementation use the same logic, why JS can capture the scope?\r\n\r\nThey use different logic. The JS tracer uses `step` events to compute the call frames. In this case it adds a new frame as soon as it sees the CREATE opcode.\r\n\r\nRe moving the capture event up: even the transfer of value happens after this check. So the only change in state AFAIK is nonce increment. I'm also inclined to say we should leave it as is.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273792356/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273915448",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1273915448",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1273915448,
    "node_id": "IC_kwDOAOvK985L7mg4",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-10T23:40:49Z",
    "updated_at": "2022-10-10T23:40:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @s1na. BTW, is there any debug tools to identify the root cause of transaction failure? For this case is ErrContractAddressCollision",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1273915448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1279986763",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1279986763",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1279986763,
    "node_id": "IC_kwDOAOvK985MSwxL",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-16T15:01:17Z",
    "updated_at": "2022-10-16T15:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just curious, why the inner error was not returned to the caller \r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/fb75f11e87420ec25ff72f7eeeb741fa8974e87e/core/vm/instructions.go#L603-L623\r\n\r\nIf it does, we can clearly know that the error is caused by the conflict of contract addresses, which is more convenient for the user of the contract to debugging",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1279986763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303118721",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1303118721",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1303118721,
    "node_id": "IC_kwDOAOvK985NrAOB",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T08:35:56Z",
    "updated_at": "2022-11-04T08:37:03Z",
    "author_association": "MEMBER",
    "body": "> why the inner error was not returned to the caller\r\n\r\nThat's because CREATE failing shouldn't stop the execution of the caller. So yeah this is an annoying cornercase where error won't be caught by caller and not reported for the nested call because the scope doesn't actually start.\r\n\r\nI don't know how best to proceed here. We *could* add a flag to the callTrace indicating whether the scope was actually entered or failure occured beforehand. The flag would be set to true at the point where we call `CaptureEnter`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303118721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303214078",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1303214078",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1303214078,
    "node_id": "IC_kwDOAOvK985NrXf-",
    "user": {
      "login": "zhangwenhua-tron",
      "id": 43207186,
      "node_id": "MDQ6VXNlcjQzMjA3MTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/43207186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhangwenhua-tron",
      "html_url": "https://github.com/zhangwenhua-tron",
      "followers_url": "https://api.github.com/users/zhangwenhua-tron/followers",
      "following_url": "https://api.github.com/users/zhangwenhua-tron/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhangwenhua-tron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhangwenhua-tron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhangwenhua-tron/subscriptions",
      "organizations_url": "https://api.github.com/users/zhangwenhua-tron/orgs",
      "repos_url": "https://api.github.com/users/zhangwenhua-tron/repos",
      "events_url": "https://api.github.com/users/zhangwenhua-tron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhangwenhua-tron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T10:13:36Z",
    "updated_at": "2022-11-04T10:13:36Z",
    "author_association": "NONE",
    "body": "Hi @jsvisa , I have also run a geth node, but how can I enable the trace related api?\r\nWhen I send the request as you mentioned:\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceTransaction\",\r\n    \"params\": [\r\n        \"0xba4c747cfd0c0a49f17338c1a3c41be452314182e2cd92b59fd8c1436d99e63c\",\r\n        {\r\n            \"tracer\": \"callTracer\",\r\n            \"timeout\": \"120s\"\r\n        }\r\n    ],\r\n    \"id\": 67\r\n}\r\n```\r\n\r\nI got \"the method debug_traceTransaction does not exist/is not available\".:\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 67,\r\n    \"error\": {\r\n        \"code\": -32601,\r\n        \"message\": \"the method debug_traceTransaction does not exist/is not available\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303214078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303222517",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1303222517",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1303222517,
    "node_id": "IC_kwDOAOvK985NrZj1",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T10:22:07Z",
    "updated_at": "2022-11-04T10:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> because the scope doesn't actually start.\r\n> We could add a flag to the callTrace indicating whether the scope was actually entered or failure occured beforehand. The flag would be set to true at the point where we call CaptureEnter.\r\n\r\nthe scope is not entered, how could this flag working?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303222517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303223415",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1303223415",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1303223415,
    "node_id": "IC_kwDOAOvK985NrZx3",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T10:22:57Z",
    "updated_at": "2022-11-04T10:22:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zhangwenhua-tron  \r\n\r\n> I got \"the method debug_traceTransaction does not exist/is not available\".:\r\n\r\nstart geth with debug namespace, eg:\r\n```\r\n--http.api=web3,eth,net,personal,miner,txpool,debug,admin,engine\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303223415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303225555",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25953#issuecomment-1303225555",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25953",
    "id": 1303225555,
    "node_id": "IC_kwDOAOvK985NraTT",
    "user": {
      "login": "zhangwenhua-tron",
      "id": 43207186,
      "node_id": "MDQ6VXNlcjQzMjA3MTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/43207186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhangwenhua-tron",
      "html_url": "https://github.com/zhangwenhua-tron",
      "followers_url": "https://api.github.com/users/zhangwenhua-tron/followers",
      "following_url": "https://api.github.com/users/zhangwenhua-tron/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhangwenhua-tron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhangwenhua-tron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhangwenhua-tron/subscriptions",
      "organizations_url": "https://api.github.com/users/zhangwenhua-tron/orgs",
      "repos_url": "https://api.github.com/users/zhangwenhua-tron/repos",
      "events_url": "https://api.github.com/users/zhangwenhua-tron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhangwenhua-tron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T10:24:51Z",
    "updated_at": "2022-11-04T10:24:51Z",
    "author_association": "NONE",
    "body": "@jsvisa  Thanks, I will try it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1303225555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
