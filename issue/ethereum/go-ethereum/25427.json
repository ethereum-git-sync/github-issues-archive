{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25427",
  "id": 1320280575,
  "node_id": "I_kwDOAOvK985OseH_",
  "number": 25427,
  "title": "Terminal block is unknown parent",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-07-28T01:31:14Z",
  "updated_at": "2022-07-28T05:50:43Z",
  "closed_at": "2022-07-28T05:50:43Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.10.21`\r\nOS & Version: Linux\r\nCommit hash : NA\r\n\r\n#### Description\r\n\r\nIn Lighthouse CI we have a series of \"execution integration tests\" where we test some scenarios between Geth and LH.\r\n\r\nSince these tests started running on v1.1.0.21, we've noticed a change in behaviour. The previous behaviour was:\r\n\r\n1. LH uses `getPayload` to request a payload from Geth.\r\n    1. Geth response with a `payload`.\r\n2. LH sends a `forkchoiceUpdated` for the `payload` that was returned \r\n    1. Geth response with `SYNCING`\r\n3. LH sends a `newPayload` with the `payload`\r\n    1. Geth responses with `VALID`\r\n    \r\nNow, with v1.10.21 Geth responds in 3.i with `ACCEPTED`. I believe this response violates the *\"the payload doesn't extend the canonical chain\"* point of the [newPayload API](https://github.com/ethereum/execution-apis/blob/main/src/engine/specification.md#engine_newpayloadv1).\r\n\r\nI'm aware that an fcU before newPayload is weird behaviour, so I don't see this as an immediate issue. However I thought it's worth raising to your attention :relaxed: ",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197552755",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25427#issuecomment-1197552755",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
    "id": 1197552755,
    "node_id": "IC_kwDOAOvK985HYTRz",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T01:38:30Z",
    "updated_at": "2022-07-28T01:40:12Z",
    "author_association": "MEMBER",
    "body": "Oh actually, it appears that there might be more to this issue than I originally thought.\r\n\r\nHere are some logs from Geth from a [Lighthouse CI run](https://github.com/sigp/lighthouse/runs/7551400310?check_suite_focus=true):\r\n\r\n```\r\nINFO [07-28|01:05:18.741]  \r\nINFO [07-28|01:05:18.741] Initialising Ethereum protocol           network=1 dbversion=<nil>\r\nINFO [07-28|01:05:18.744] Loaded most recent local header          number=0 hash=901a0b..7a8082 td=17,179,869,184 age=53y4mo1d\r\nINFO [07-28|01:05:18.744] Loaded most recent local full block      number=0 hash=901a0b..7a8082 td=17,179,869,184 age=53y4mo1d\r\nINFO [07-28|01:05:18.744] Loaded most recent local fast block      number=0 hash=901a0b..7a8082 td=17,179,869,184 age=53y4mo1d\r\nWARN [07-28|01:05:18.746] Failed to load snapshot, regenerating    err=\"missing or corrupted snapshot\"\r\nINFO [07-28|01:05:18.746] Rebuilding state snapshot \r\nINFO [07-28|01:05:18.747] Resuming state snapshot generation       root=a6ea55..be6106 accounts=0 slots=0 storage=0.00B dangling=0 elapsed=\"574.125µs\"\r\nINFO [07-28|01:05:18.747] Generated state snapshot                 accounts=2 slots=0 storage=98.00B dangling=0 elapsed=\"980.842µs\"\r\nINFO [07-28|01:05:18.747] Regenerated local transaction journal    transactions=0 accounts=0\r\nINFO [07-28|01:05:18.747] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [07-28|01:05:18.747] Error reading unclean shutdown markers   error=\"leveldb: not found\"\r\nWARN [07-28|01:05:18.747] Engine API enabled                       protocol=eth\r\nINFO [07-28|01:05:18.748] Starting peer-to-peer node               instance=Geth/v1.10.21-stable-67109427/linux-amd64/go1.17.12\r\nINFO [07-28|01:05:18.754] New local node record                    seq=1,658,970,318,753 id=d56017e7ff9517ec ip=127.0.0.1 udp=34839 tcp=34839\r\nINFO [07-28|01:05:18.755] Started P2P networking                   self=enode://37c97ac3903b3c132eebd4ab238e005f6feefd8eac33c7c4b24ee5a5648ecdd21b8373a54e7d839afec0d582721c8061f2381396fe8060d41cfd3d0ca6bee322@127.0.0.1:34839\r\nINFO [07-28|01:05:18.756] IPC endpoint opened                      url=/tmp/.tmpJzV69x/geth.ipc\r\nINFO [07-28|01:05:18.756] Loaded JWT secret file                   path=/tmp/.tmpJzV69x/jwt.hex crc32=0xcd36ad97\r\nINFO [07-28|01:05:18.757] HTTP server started                      endpoint=127.0.0.1:39729 auth=false prefix= cors= vhosts=localhost\r\nINFO [07-28|01:05:18.757] WebSocket enabled                        url=ws://127.0.0.1:37099\r\nINFO [07-28|01:05:18.757] HTTP server started                      endpoint=127.0.0.1:37099 auth=true  prefix= cors=localhost vhosts=localhost\r\nINFO [07-28|01:05:20.649] New local node record                    seq=1,658,970,318,754 id=d56017e7ff9517ec ip=20.225.233.129 udp=1025  tcp=34839\r\nINFO [07-28|01:05:21.374] New local node record                    seq=1,658,970,318,641 id=85a8ac32d5c1afdc ip=20.225.233.129 udp=1024  tcp=38771\r\nINFO [07-28|01:05:26.067] Setting new local account                address=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139\r\nINFO [07-28|01:05:26.067] Submitted transaction                    hash=0x9879a9032316333697e430b4ed8ca8bae53f7ab983eb1658b6c4ccc9dae4b77b from=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139 nonce=0 recipient=0xdA2DD7560DB7e212B945fC72cEB54B7D8C886D77 value=1\r\nINFO [07-28|01:05:26.070] Submitted transaction                    hash=0x296a3b91236668c01aa552d95548acce799e691b9cb6729dd722c482d1a01518 from=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139 nonce=1 recipient=0xdA2DD7560DB7e212B945fC72cEB54B7D8C886D77 value=1\r\nINFO [07-28|01:05:26.073] Submitted transaction                    hash=0x5cfa16c90a764932535a63d05a955df43b90ce640ab7bcc84eb4ceef9f00c27f from=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139 nonce=2 recipient=0xdA2DD7560DB7e212B945fC72cEB54B7D8C886D77 value=1\r\nINFO [07-28|01:05:26.075] Submitted contract creation              hash=0xd36404548c9ddf920ecdb40178b9fb0ed83a6d2512f0f63d2333a73f0f20254f from=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139 nonce=3 contract=0x64f43BEc7F86526686C931d65362bB8698872F90 value=0\r\nINFO [07-28|01:05:26.077] Submitted transaction                    hash=0x79b352a34151dce6e17b671e584e815756adca24254e2013e5a64ee720b8ce21 from=0x7b8C3a386C0eea54693fFB0DA17373ffC9228139 nonce=4 recipient=0x64f43BEc7F86526686C931d65362bB8698872F90 value=0\r\nINFO [07-28|01:05:29.063] Looking for peers                        peercount=0 tried=26 static=0\r\nWARN [07-28|01:05:29.082] Forkchoice requested unknown head        hash=e53892..2336c3\r\nWARN [07-28|01:05:29.084] Ignoring payload with missing parent     number=1 hash=e53892..2336c3 parent=901a0b..7a8082\r\n```\r\n\r\nIn particular, these two logs:\r\n\r\n```\r\nINFO [07-28|01:05:18.744] Loaded most recent local fast block      number=0 hash=901a0b..7a8082 td=17,179,869,184 age=53y4mo1d\r\n```\r\n\r\n```\r\nWARN [07-28|01:05:29.084] Ignoring payload with missing parent     number=1 hash=e53892..2336c3 parent=901a0b..7a8082\r\n```\r\n\r\nIt appears to me that `901a0b..7a8082` should be a known block.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197552755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197667837",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25427#issuecomment-1197667837",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
    "id": 1197667837,
    "node_id": "IC_kwDOAOvK985HYvX9",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T05:06:57Z",
    "updated_at": "2022-07-28T05:06:57Z",
    "author_association": "MEMBER",
    "body": "This seems very odd, I can't see anything in the code that could explain missing the genesis block.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197667837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197670221",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25427#issuecomment-1197670221",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
    "id": 1197670221,
    "node_id": "IC_kwDOAOvK985HYv9N",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T05:10:59Z",
    "updated_at": "2022-07-28T05:10:59Z",
    "author_association": "MEMBER",
    "body": "Could you provide some dump of the payload json you're transmitting? Something seems off here",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197670221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197682151",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25427#issuecomment-1197682151",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
    "id": 1197682151,
    "node_id": "IC_kwDOAOvK985HYy3n",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T05:30:58Z",
    "updated_at": "2022-07-28T05:31:13Z",
    "author_association": "MEMBER",
    "body": "Quoting my comment from the Lighthouse repo:\r\n\r\n> Hey all, the new behavior is correct (though it should have returned SYNCING), just changed from the previous incorrect one.\r\n> \r\n> Geth by default starts in snap sync mode. In snap sync, the node *must* finish a sync cycle first before it accepts blocks. The reason is that snap sync goes around all block validation pathways and writes stuff directly to the database, so it cannot allow some process to inject something conflicting out of band. I.e. if Geth is asked to snap sync, it will deny importing a payload on the engine API until snap sync finishes.\r\n> \r\n> You should start geth with `--syncmode=full` if you want to test feeding Geth blocks from #1 onward via the engine API.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197682151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197682593",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25427#issuecomment-1197682593",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25427",
    "id": 1197682593,
    "node_id": "IC_kwDOAOvK985HYy-h",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T05:31:38Z",
    "updated_at": "2022-07-28T05:31:38Z",
    "author_association": "MEMBER",
    "body": "We should however fix the warning log and the return code to make this funny behavior obvious.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197682593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
