{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2331",
  "id": 140512206,
  "node_id": "MDU6SXNzdWUxNDA1MTIyMDY=",
  "number": 2331,
  "title": "eth.accounts does not error with index out of bounce: potentially dangerous results",
  "user": {
    "login": "MrChico",
    "id": 8930559,
    "node_id": "MDQ6VXNlcjg5MzA1NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MrChico",
    "html_url": "https://github.com/MrChico",
    "followers_url": "https://api.github.com/users/MrChico/followers",
    "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
    "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
    "organizations_url": "https://api.github.com/users/MrChico/orgs",
    "repos_url": "https://api.github.com/users/MrChico/repos",
    "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MrChico/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233655,
      "node_id": "MDU6TGFiZWw3MjIzMzY1NQ==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:wontfix",
      "name": "status:wontfix",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-03-13T18:11:11Z",
  "updated_at": "2016-03-14T09:02:28Z",
  "closed_at": "2016-03-13T20:07:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "calling eth.accounts with an index larger than the size of the array - 1 does not throw an error, only silently returns undefined. This can cause a very nasty behavior for a user that does a mistake:\n\n```\n> eth.sendTransaction({from:eth.coinbase, to: eth.accounts[1], value: 555})\nI0313 19:03:37.571045   29036 xeth.go:1026] Tx(0x2ae07e94ab3490d0458cbd5c163b0c87d503f553b0ca5042114712c7186d571f) created: 0xf150a18638177831b71b7e0c91461b6c20303f21\n\"0x2ae07e94ab3490d0458cbd5c163b0c87d503f553b0ca5042114712c7186d571f\"\n```\n\nIn the example above I only have one element in eth.accounts, and so the transaction creates a new contract without any code and the ether is lost.\nCheck out what happpened to [this redditor](https://www.reddit.com/r/ethereum/comments/4a8c2h/geth_sent_the_transaction_to_the_wrong_address/)\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196044364",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2331#issuecomment-196044364",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331",
    "id": 196044364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjA0NDM2NA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T20:07:44Z",
    "updated_at": "2016-03-13T20:08:05Z",
    "author_association": "MEMBER",
    "body": "The console implements JavaScript. Whether or not this quirky language was a good choice is anyone's guess, but array access in JavaScript does not throw for out of bounds indices.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196044364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196079817",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2331#issuecomment-196079817",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331",
    "id": 196079817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjA3OTgxNw==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T23:13:07Z",
    "updated_at": "2016-03-13T23:13:26Z",
    "author_association": "MEMBER",
    "body": "Maybe scenarios like this could be avoided by not allowing the `to` field and the `data` field of a transaction to both be null? Surely there is no point in allowing people to create empty contracts?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196079817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196211824",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2331#issuecomment-196211824",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2331",
    "id": 196211824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjIxMTgyNA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T09:02:28Z",
    "updated_at": "2016-03-14T09:02:28Z",
    "author_association": "MEMBER",
    "body": "@MrChico @fjl I was also pondering about this over the weekend as I think the point is valid: although a correct command, it makes no sense to create an empty contract that can be neither interacted with nor funds transferred from. Similarly to how we have special handling for the zero address, imho it would be valuable to add a special sanity check for contract creation too.\n\n@obscuren Opinion?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/196211824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
