{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23032",
  "id": 917317557,
  "node_id": "MDU6SXNzdWU5MTczMTc1NTc=",
  "number": 23032,
  "title": "Running a local goerli node for swap-endpoint",
  "user": {
    "login": "nakroy",
    "id": 85059179,
    "node_id": "MDQ6VXNlcjg1MDU5MTc5",
    "avatar_url": "https://avatars.githubusercontent.com/u/85059179?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nakroy",
    "html_url": "https://github.com/nakroy",
    "followers_url": "https://api.github.com/users/nakroy/followers",
    "following_url": "https://api.github.com/users/nakroy/following{/other_user}",
    "gists_url": "https://api.github.com/users/nakroy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nakroy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nakroy/subscriptions",
    "organizations_url": "https://api.github.com/users/nakroy/orgs",
    "repos_url": "https://api.github.com/users/nakroy/repos",
    "events_url": "https://api.github.com/users/nakroy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nakroy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-06-10T12:59:28Z",
  "updated_at": "2021-07-07T12:28:19Z",
  "closed_at": "2021-06-17T09:01:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I use the following command line to start my geth goerli node:\r\n\" geth --goerli --datadir=\"F:/ethdata\" --port=30303 --syncmode \"fast\" --cache=4096 --rpc --rpcaddr=127.0.0.1 --rpcport=8545 --rpcapi=eth,net,web3 & \"\r\n\r\nINFO message shows:\r\n\r\n```\r\nWARN [06-10|20:28:12.248] Node data write error                    err=\"trie node 7be140..e12542 failed with all peers (0 tries, 0 peers)\"\r\nINFO [06-10|20:28:12.256] Imported new state entries               count=172 elapsed=1.130ms    processed=14,269,910 pending=203 trieretry=0 coderetry=0 duplicate=0 unexpected=0\r\nWARN [06-10|20:28:12.272] Rewinding blockchain                     target=4,942,880\r\nINFO [06-10|20:28:12.853] Loaded most recent local header          number=4,942,880 hash=b7d765..4a8b80 td=7,235,856 age=8h52m43s\r\nINFO [06-10|20:28:12.866] Loaded most recent local full block      number=0         hash=bf7e33..b88c1a td=1         age=2y4mo3w\r\nINFO [06-10|20:28:12.886] Loaded most recent local fast block      number=4,937,823 hash=8ed8db..fcfd9c td=7,229,019 age=1d5h58m\r\nINFO [06-10|20:28:12.905] Loaded last fast-sync pivot marker       number=4,944,913\r\nWARN [06-10|20:28:12.918] Rolled back chain segment                header=4944929->4942880 fast=4937823->4937823 block=0->0 reason=\"syncing canceled (requested)\"\r\nWARN [06-10|20:28:12.946] Synchronisation failed, retrying         err=\"trie node 7be140..e12542 failed with all peers (0 tries, 0 peers)\"\r\n```\r\n\r\nMy question is : \r\n1. whether it's neccessary to open websocket server to start geth?\r\n2. If so , is that means I should build a websocket server and client on golang and add \"--ws\" command to my command line?\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/859103721",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-859103721",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 859103721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTEwMzcyMQ==",
    "user": {
      "login": "kelvin488",
      "id": 84639940,
      "node_id": "MDQ6VXNlcjg0NjM5OTQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/84639940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kelvin488",
      "html_url": "https://github.com/kelvin488",
      "followers_url": "https://api.github.com/users/kelvin488/followers",
      "following_url": "https://api.github.com/users/kelvin488/following{/other_user}",
      "gists_url": "https://api.github.com/users/kelvin488/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kelvin488/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kelvin488/subscriptions",
      "organizations_url": "https://api.github.com/users/kelvin488/orgs",
      "repos_url": "https://api.github.com/users/kelvin488/repos",
      "events_url": "https://api.github.com/users/kelvin488/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kelvin488/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-10T21:54:15Z",
    "updated_at": "2021-06-10T21:54:15Z",
    "author_association": "NONE",
    "body": "C++",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/859103721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/859455379",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-859455379",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 859455379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTQ1NTM3OQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T09:45:41Z",
    "updated_at": "2021-06-11T09:45:41Z",
    "author_association": "MEMBER",
    "body": "Based on the logs it's still syncing. You specified `fast` as the syncmode. I think you should just leave it at the default (snap for the next release) as it's much faster.\r\n\r\nWebsocket is only needed if you want to talk to Geth from your program via websockets. If you specify `-ws`, Geth will start the websocket server to which you'll need to connect through from your program.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/859455379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/861152502",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-861152502",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 861152502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTE1MjUwMg==",
    "user": {
      "login": "nakroy",
      "id": 85059179,
      "node_id": "MDQ6VXNlcjg1MDU5MTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/85059179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nakroy",
      "html_url": "https://github.com/nakroy",
      "followers_url": "https://api.github.com/users/nakroy/followers",
      "following_url": "https://api.github.com/users/nakroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/nakroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nakroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nakroy/subscriptions",
      "organizations_url": "https://api.github.com/users/nakroy/orgs",
      "repos_url": "https://api.github.com/users/nakroy/repos",
      "events_url": "https://api.github.com/users/nakroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nakroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T04:06:33Z",
    "updated_at": "2021-06-15T04:06:33Z",
    "author_association": "NONE",
    "body": "> \r\n> \r\n> Based on the logs it's still syncing. You specified `fast` as the syncmode. I think you should just leave it at the default (snap for the next release) as it's much faster.\r\n> \r\n> Websocket is only needed if you want to talk to Geth from your program via websockets. If you specify `-ws`, Geth will start the websocket server to which you'll need to connect through from your program.\r\n\r\nWell ... The problem is I have been running for a few days but still not synced successfully. Should I change to \"light\" syncmode?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/861152502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863065065",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-863065065",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 863065065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzA2NTA2NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T09:01:26Z",
    "updated_at": "2021-06-17T09:01:26Z",
    "author_association": "MEMBER",
    "body": "Syncing Ethereum is a pain point for many people, so I'll try to detail what's happening behind the scenes so there might be a bit less confusion.\r\n\r\nThe current default mode of sync for Geth is called fast sync. Instead of starting from the genesis block and reprocessing all the transactions that ever occurred (which could take weeks), fast sync downloads the blocks, and only verifies the associated proof-of-works. Downloading all the blocks is a straightforward and fast procedure and will relatively quickly reassemble the entire chain.\r\n\r\nMany people falsely assume that because they have the blocks, they are in sync. Unfortunately this is not the case, since no transaction was executed, so we do not have any account state available (ie. balances, nonces, smart contract code and data). These need to be downloaded separately and cross checked with the latest blocks. This phase is called the state trie download and it actually runs concurrently with the block downloads; alas it take a lot longer nowadays than downloading the blocks.\r\n\r\nSo, what's the state trie? In the Ethereum mainnet, there are a [ton of accounts already](https://etherscan.io/chart/address), which track the balance, nonce, etc of each user/contract. The accounts themselves are however insufficient to run a node, they need to be cryptographically linked to each block so that nodes can actually verify that the account's are not tampered with. This cryptographic linking is done by creating a tree data structure above the accounts, each level aggregating the layer below it into an ever smaller layer, until you reach the single root. This gigantic data structure containing all the accounts and the intermediate cryptographic proofs is called the state trie.\r\n\r\nOk, so why does this pose a problem? This trie data structure is an intricate interlink of hundreds of millions of tiny cryptographic proofs (trie nodes). To truly have a synchronized node, you need to download all the account data, as well as all the tiny cryptographic proofs to verify that noone in the network is trying to cheat you. This itself is already a crazy number of data items. The part where it gets even messier is that this data is constantly morphing: at every block (15s), about 1000 nodes are deleted from this trie and about 2000 new ones are added. This means your node needs to synchronize a dataset that is changing 200 times per second. The worst part is that while you are synchronizing, the network is moving forward, and state that you begun to download might disappear while you're downloading, so your node needs to constantly follow the network while trying to gather all the recent data. But until you actually do gather all the data, your local node is not usable since it cannot cryptographically prove anything about any accounts.\r\n\r\nIf you see that you are 64 blocks behind mainnet, you aren't yet synchronized, not even close. You are just done with the block download phase and still running the state downloads. You can see this yourself via the seemingly endless `Imported state entries [...]` stream of logs. You'll need to wait that out too before your node comes truly online.\r\n\r\n---\r\n\r\n**Q: The node just hangs on importing state enties?!**\r\n\r\nA: The node doesn't hang, it just doesn't know how large the state trie is in advance so it keeps on going and going and going until it discovers and downloads the entire thing.\r\n\r\nThe reason is that a block in Ethereum only contains the state root, a single hash of the root node. When the node begins synchronizing, it knows about exactly 1 node and tries to download it. That node, can refer up to 16 new nodes, so in the next step, we'll know about 16 new nodes and try to download those. As we go along the download, most of the nodes will reference new ones that we didn't know about until then. This is why you might be tempted to think it's stuck on the same numbers. It is not, rather it's discovering and downloading the trie as it goes along.\r\n\r\n**Q: I'm stuck at 64 blocks behind mainnet?!**\r\n\r\nA: As explained above, you are not stuck, just finished with the block download phase, waiting for the state download phase to complete too. This latter phase nowadays take a lot longer than just getting the blocks.\r\n\r\n**Q: Why does downloading the state take so long, I have good bandwidth?**\r\n\r\nA: State sync is mostly limited by disk IO, not bandwidth.\r\n\r\nThe state trie in Ethereum contains hundreds of millions of nodes, most of which take the form of a single hash referencing up to 16 other hashes. This is a horrible way to store data on a disk, because there's almost no structure in it, just random numbers referencing even more random numbers. This makes any underlying database weep, as it cannot optimize storing and looking up the data in any meaningful way.\r\n\r\nNot only is storing the data very suboptimal, but due to the 200 modification / second and pruning of past data, we cannot even download it is a properly pre-processed way to make it import faster without the underlying database shuffling it around too much. The end result is that even a fast sync nowadays incurs a huge disk IO cost, which is too much for a mechanical hard drive.\r\n\r\n**Q: Wait, so I can't run a full node on an HDD?**\r\n\r\nA: Unfortunately not. Doing a fast sync on an HDD will take more time than you're willing to wait with the current data schema. Even if you do wait it out, an HDD will not be able to keep up with the read/write requirements of transaction processing on mainnet.\r\n\r\nYou however should be able to run a light client on an HDD with minimal impact on system resources. If you wish to run a full node however, an SSD is your only option.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863065065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/864395917",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-864395917",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 864395917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDM5NTkxNw==",
    "user": {
      "login": "nakroy",
      "id": 85059179,
      "node_id": "MDQ6VXNlcjg1MDU5MTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/85059179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nakroy",
      "html_url": "https://github.com/nakroy",
      "followers_url": "https://api.github.com/users/nakroy/followers",
      "following_url": "https://api.github.com/users/nakroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/nakroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nakroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nakroy/subscriptions",
      "organizations_url": "https://api.github.com/users/nakroy/orgs",
      "repos_url": "https://api.github.com/users/nakroy/repos",
      "events_url": "https://api.github.com/users/nakroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nakroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-19T11:50:41Z",
    "updated_at": "2021-06-19T11:50:41Z",
    "author_association": "NONE",
    "body": "Based on your&nbsp; explanation of how Ethereum syncronization work , I might&nbsp; know why it takes a long time to syncronize .&nbsp; All nodes have same data which accounted from the genesis block to the latest block . Like you said , that's a crazy number of data items. I was thinking , whether it's possible to prove account data reliable without using full information , whether it's possible to copress the data as small as possible.\r\nNot a technician , but still like to find ways to imporve the blockchain system.\r\n\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人: \"Péter ***@***.***&gt;; \r\n发送时间: 2021年6月17日(星期四) 下午5:01\r\n收件人: ***@***.***&gt;; \r\n抄送: ***@***.***&gt;; ***@***.***&gt;; \r\n主题: Re: [ethereum/go-ethereum] Running a local goerli node for swap-endpoint (#23032)\r\n\r\n\r\n\r\n\r\n\r\n \r\nSyncing Ethereum is a pain point for many people, so I'll try to detail what's happening behind the scenes so there might be a bit less confusion.\r\n \r\nThe current default mode of sync for Geth is called fast sync. Instead of starting from the genesis block and reprocessing all the transactions that ever occurred (which could take weeks), fast sync downloads the blocks, and only verifies the associated proof-of-works. Downloading all the blocks is a straightforward and fast procedure and will relatively quickly reassemble the entire chain.\r\n \r\nMany people falsely assume that because they have the blocks, they are in sync. Unfortunately this is not the case, since no transaction was executed, so we do not have any account state available (ie. balances, nonces, smart contract code and data). These need to be downloaded separately and cross checked with the latest blocks. This phase is called the state trie download and it actually runs concurrently with the block downloads; alas it take a lot longer nowadays than downloading the blocks.\r\n \r\nSo, what's the state trie? In the Ethereum mainnet, there are a ton of accounts already, which track the balance, nonce, etc of each user/contract. The accounts themselves are however insufficient to run a node, they need to be cryptographically linked to each block so that nodes can actually verify that the account's are not tampered with. This cryptographic linking is done by creating a tree data structure above the accounts, each level aggregating the layer below it into an ever smaller layer, until you reach the single root. This gigantic data structure containing all the accounts and the intermediate cryptographic proofs is called the state trie.\r\n \r\nOk, so why does this pose a problem? This trie data structure is an intricate interlink of hundreds of millions of tiny cryptographic proofs (trie nodes). To truly have a synchronized node, you need to download all the account data, as well as all the tiny cryptographic proofs to verify that noone in the network is trying to cheat you. This itself is already a crazy number of data items. The part where it gets even messier is that this data is constantly morphing: at every block (15s), about 1000 nodes are deleted from this trie and about 2000 new ones are added. This means your node needs to synchronize a dataset that is changing 200 times per second. The worst part is that while you are synchronizing, the network is moving forward, and state that you begun to download might disappear while you're downloading, so your node needs to constantly follow the network while trying to gather all the recent data. But until you actually do gather all the data, your local node is not usable since it cannot cryptographically prove anything about any accounts.\r\n \r\nIf you see that you are 64 blocks behind mainnet, you aren't yet synchronized, not even close. You are just done with the block download phase and still running the state downloads. You can see this yourself via the seemingly endless Imported state entries [...] stream of logs. You'll need to wait that out too before your node comes truly online.\r\n \r\n \r\nQ: The node just hangs on importing state enties?!\r\n \r\nA: The node doesn't hang, it just doesn't know how large the state trie is in advance so it keeps on going and going and going until it discovers and downloads the entire thing.\r\n \r\nThe reason is that a block in Ethereum only contains the state root, a single hash of the root node. When the node begins synchronizing, it knows about exactly 1 node and tries to download it. That node, can refer up to 16 new nodes, so in the next step, we'll know about 16 new nodes and try to download those. As we go along the download, most of the nodes will reference new ones that we didn't know about until then. This is why you might be tempted to think it's stuck on the same numbers. It is not, rather it's discovering and downloading the trie as it goes along.\r\n \r\nQ: I'm stuck at 64 blocks behind mainnet?!\r\n \r\nA: As explained above, you are not stuck, just finished with the block download phase, waiting for the state download phase to complete too. This latter phase nowadays take a lot longer than just getting the blocks.\r\n \r\nQ: Why does downloading the state take so long, I have good bandwidth?\r\n \r\nA: State sync is mostly limited by disk IO, not bandwidth.\r\n \r\nThe state trie in Ethereum contains hundreds of millions of nodes, most of which take the form of a single hash referencing up to 16 other hashes. This is a horrible way to store data on a disk, because there's almost no structure in it, just random numbers referencing even more random numbers. This makes any underlying database weep, as it cannot optimize storing and looking up the data in any meaningful way.\r\n \r\nNot only is storing the data very suboptimal, but due to the 200 modification / second and pruning of past data, we cannot even download it is a properly pre-processed way to make it import faster without the underlying database shuffling it around too much. The end result is that even a fast sync nowadays incurs a huge disk IO cost, which is too much for a mechanical hard drive.\r\n \r\nQ: Wait, so I can't run a full node on an HDD?\r\n \r\nA: Unfortunately not. Doing a fast sync on an HDD will take more time than you're willing to wait with the current data schema. Even if you do wait it out, an HDD will not be able to keep up with the read/write requirements of transaction processing on mainnet.\r\n \r\nYou however should be able to run a light client on an HDD with minimal impact on system resources. If you wish to run a full node however, an SSD is your only option.\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/864395917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/875561603",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-875561603",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23032",
    "id": 875561603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTU2MTYwMw==",
    "user": {
      "login": "kelvin488",
      "id": 84639940,
      "node_id": "MDQ6VXNlcjg0NjM5OTQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/84639940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kelvin488",
      "html_url": "https://github.com/kelvin488",
      "followers_url": "https://api.github.com/users/kelvin488/followers",
      "following_url": "https://api.github.com/users/kelvin488/following{/other_user}",
      "gists_url": "https://api.github.com/users/kelvin488/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kelvin488/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kelvin488/subscriptions",
      "organizations_url": "https://api.github.com/users/kelvin488/orgs",
      "repos_url": "https://api.github.com/users/kelvin488/repos",
      "events_url": "https://api.github.com/users/kelvin488/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kelvin488/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T12:28:19Z",
    "updated_at": "2021-07-07T12:28:19Z",
    "author_association": "NONE",
    "body": "nakroy ***@***.***>于2021年6月19日 周六下午7:50写道：\n\n> Based on your&nbsp; explanation of how Ethereum syncronization work , I\n> might&nbsp; know why it takes a long time to syncronize .&nbsp; All nodes\n> have same data which accounted from the genesis block to the latest block .\n> Like you said , that's a crazy number of data items. I was thinking ,\n> whether it's possible to prove account data reliable without using full\n> information , whether it's possible to copress the data as small as\n> possible.\n> Not a technician , but still like to find ways to imporve the blockchain\n> system.\n>\n>\n>\n>\n>\n> ------------------&nbsp;原始邮件&nbsp;------------------\n> 发件人: \"Péter ***@***.***&gt;;\n> 发送时间: 2021年6月17日(星期四) 下午5:01\n> 收件人: ***@***.***&gt;;\n> 抄送: ***@***.***&gt;; ***@***.***&gt;;\n> 主题: Re: [ethereum/go-ethereum] Running a local goerli node for\n> swap-endpoint (#23032)\n>\n>\n>\n>\n>\n>\n> Syncing Ethereum is a pain point for many people, so I'll try to detail\n> what's happening behind the scenes so there might be a bit less confusion.\n>\n> The current default mode of sync for Geth is called fast sync. Instead of\n> starting from the genesis block and reprocessing all the transactions that\n> ever occurred (which could take weeks), fast sync downloads the blocks, and\n> only verifies the associated proof-of-works. Downloading all the blocks is\n> a straightforward and fast procedure and will relatively quickly reassemble\n> the entire chain.\n>\n> Many people falsely assume that because they have the blocks, they are in\n> sync. Unfortunately this is not the case, since no transaction was\n> executed, so we do not have any account state available (ie. balances,\n> nonces, smart contract code and data). These need to be downloaded\n> separately and cross checked with the latest blocks. This phase is called\n> the state trie download and it actually runs concurrently with the block\n> downloads; alas it take a lot longer nowadays than downloading the blocks.\n>\n> So, what's the state trie? In the Ethereum mainnet, there are a ton of\n> accounts already, which track the balance, nonce, etc of each\n> user/contract. The accounts themselves are however insufficient to run a\n> node, they need to be cryptographically linked to each block so that nodes\n> can actually verify that the account's are not tampered with. This\n> cryptographic linking is done by creating a tree data structure above the\n> accounts, each level aggregating the layer below it into an ever smaller\n> layer, until you reach the single root. This gigantic data structure\n> containing all the accounts and the intermediate cryptographic proofs is\n> called the state trie.\n>\n> Ok, so why does this pose a problem? This trie data structure is an\n> intricate interlink of hundreds of millions of tiny cryptographic proofs\n> (trie nodes). To truly have a synchronized node, you need to download all\n> the account data, as well as all the tiny cryptographic proofs to verify\n> that noone in the network is trying to cheat you. This itself is already a\n> crazy number of data items. The part where it gets even messier is that\n> this data is constantly morphing: at every block (15s), about 1000 nodes\n> are deleted from this trie and about 2000 new ones are added. This means\n> your node needs to synchronize a dataset that is changing 200 times per\n> second. The worst part is that while you are synchronizing, the network is\n> moving forward, and state that you begun to download might disappear while\n> you're downloading, so your node needs to constantly follow the network\n> while trying to gather all the recent data. But until you actually do\n> gather all the data, your local node is not usable since it cannot\n> cryptographically prove anything about any accounts.\n>\n> If you see that you are 64 blocks behind mainnet, you aren't yet\n> synchronized, not even close. You are just done with the block download\n> phase and still running the state downloads. You can see this yourself via\n> the seemingly endless Imported state entries [...] stream of logs. You'll\n> need to wait that out too before your node comes truly online.\n>\n>\n> Q: The node just hangs on importing state enties?!\n>\n> A: The node doesn't hang, it just doesn't know how large the state trie is\n> in advance so it keeps on going and going and going until it discovers and\n> downloads the entire thing.\n>\n> The reason is that a block in Ethereum only contains the state root, a\n> single hash of the root node. When the node begins synchronizing, it knows\n> about exactly 1 node and tries to download it. That node, can refer up to\n> 16 new nodes, so in the next step, we'll know about 16 new nodes and try to\n> download those. As we go along the download, most of the nodes will\n> reference new ones that we didn't know about until then. This is why you\n> might be tempted to think it's stuck on the same numbers. It is not, rather\n> it's discovering and downloading the trie as it goes along.\n>\n> Q: I'm stuck at 64 blocks behind mainnet?!\n>\n> A: As explained above, you are not stuck, just finished with the block\n> download phase, waiting for the state download phase to complete too. This\n> latter phase nowadays take a lot longer than just getting the blocks.\n>\n> Q: Why does downloading the state take so long, I have good bandwidth?\n>\n> A: State sync is mostly limited by disk IO, not bandwidth.\n>\n> The state trie in Ethereum contains hundreds of millions of nodes, most of\n> which take the form of a single hash referencing up to 16 other hashes.\n> This is a horrible way to store data on a disk, because there's almost no\n> structure in it, just random numbers referencing even more random numbers.\n> This makes any underlying database weep, as it cannot optimize storing and\n> looking up the data in any meaningful way.\n>\n> Not only is storing the data very suboptimal, but due to the 200\n> modification / second and pruning of past data, we cannot even download it\n> is a properly pre-processed way to make it import faster without the\n> underlying database shuffling it around too much. The end result is that\n> even a fast sync nowadays incurs a huge disk IO cost, which is too much for\n> a mechanical hard drive.\n>\n> Q: Wait, so I can't run a full node on an HDD?\n>\n> A: Unfortunately not. Doing a fast sync on an HDD will take more time than\n> you're willing to wait with the current data schema. Even if you do wait it\n> out, an HDD will not be able to keep up with the read/write requirements of\n> transaction processing on mainnet.\n>\n> You however should be able to run a light client on an HDD with minimal\n> impact on system resources. If you wish to run a full node however, an SSD\n> is your only option.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n>\n> —\n> Y isou are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/23032#issuecomment-864395917>,\n> or\n> <https://github.com/notifications/unsubscribe-auth/AUFYBRDGQGY7RRSYNBKQQLLTTSAB3ANCNFSM46OPFYKQ>\n>\n\n> I'm sorry to reply to the message now. I am also eager to find the right\nway. I asked many friends and even some household registration support is\nnot willing to help. I am also very anxious that the faster and longer the\ntime goes, the greater the damage. I have asked you gibhud for help and\nhope to help.  Help me then how can I cooperate, because I was too careless\nand scattered before, and I was unable to enter the account for a long\ntime. After that, I immediately applied for ens and couldn’t connect again\nsoon. I don’t know and don’t want to do this. I’m sorry!  I was eager to\nfind it back because all tokens and coins contain a lot of things,\ndonations help people in need, and I haven’t taken a penny myself, and I\ndidn’t think it would be so easy to transfer the account, so I can take it\naway. I don’t know before I tried it.  After successfully entering, I came\nto gibhud to prove with that person that I have achieved results after two\nyears of creation, but I have problems here. I can’t do things online, but\nI have assigned people to help and try to let people take over. But that\nperson  But when I didn’t know it, I gave it back to me and asked someone\nto help. Either the entire ID was gone or there was no trace. In the end,\nthe account was taken away but the person who took it was sued and applied\nto restrict me, my friend.  I also want to find out and find people to work\nwith as soon as possible. I'm sorry to disturb everyone. Many hukou beans\nare starting to burn and where they are given to others. Actually, I am\nmore anxious than anyone else. You will understand if you check 0xall 0.  I\nonly help people every month. I haven’t even paid a penny. I even paid for\nit. I’m not good but I hope that the next generation and those in need will\nlive well. Recently, my body has some problems.  I hope that I will\ncontinue to do my best to share with those who can help and that my child\ncan get a better education in the future. Now everyone is suffering from\nCOVID-19, and you should take care of yourself and everything!  I am very\nsorry\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/875561603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
