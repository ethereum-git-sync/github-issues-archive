{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25495",
  "id": 1331963614,
  "node_id": "I_kwDOAOvK985PZCbe",
  "number": 25495,
  "title": "Geth RPC service consistency against other client implementations #1",
  "user": {
    "login": "JosephK95",
    "id": 86999601,
    "node_id": "MDQ6VXNlcjg2OTk5NjAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86999601?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JosephK95",
    "html_url": "https://github.com/JosephK95",
    "followers_url": "https://api.github.com/users/JosephK95/followers",
    "following_url": "https://api.github.com/users/JosephK95/following{/other_user}",
    "gists_url": "https://api.github.com/users/JosephK95/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JosephK95/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JosephK95/subscriptions",
    "organizations_url": "https://api.github.com/users/JosephK95/orgs",
    "repos_url": "https://api.github.com/users/JosephK95/repos",
    "events_url": "https://api.github.com/users/JosephK95/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JosephK95/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1157707837,
      "node_id": "MDU6TGFiZWwxMTU3NzA3ODM3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:rpc",
      "name": "area:rpc",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-08-08T14:31:38Z",
  "updated_at": "2022-08-20T04:04:57Z",
  "closed_at": "2022-08-20T04:04:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "(Updated 22.08.11.)\r\n\r\nSorry, I moved the remaining parts of this report to the following link: https://github.com/ethereum/execution-apis/issues/286\r\nPlease check for the edit history to see my original report.\r\n\r\n----------------------------------------------------------------------------------------------\r\nHi all,\r\n\r\nI am working on a project that validates whether Geth behaves consistently to other Ethereum client implementations against RPC requests. \r\n(I will refer to the implementations as node A, B and C here.)\r\n\r\nI would appreciate it if you can clarify whether the following results are intentional or require patches.\r\n\r\nThank you so much in advance and please let me know if there is anything necessary.\r\n\r\n#### System information\r\nGeth version: 1.10.21-stable\r\nOS & Version: Ubuntu 20.04.4 LTS\r\nNode.js / web3.js versions: v16.15.0 / v1.7.3\r\n\r\nQ1. `getProtocolVersion` support\r\n- (Geth) returns an error: \"the method ... not available\"\r\n- (Node A,B,C) returns `\"0x42\"`\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Please download all the .tar.gz files below.\r\n[https://drive.google.com/file/d/1FGUpnQ4WvftxBi7qUp63G3SuhKc-Q1_z/view?usp=sharing](url)\r\n[https://drive.google.com/file/d/1KKuie5iNWIqAdgjcqOSWryCgIpyqwblq/view?usp=sharing](url) \r\n[test_cases.tar.gz](https://github.com/ethereum/go-ethereum/files/9282485/test_cases.tar.gz)\r\n2. Untar the downloaded .tar.gz files. They contain valid chain data and test cases that are semi-automatically generated by our project techniques.\r\n3. Check out DATA_DIR and TC_FILE for your Q{n} from the description below.\r\n4. Execute Geth binary with the following flags:\r\n`geth --datadir DATA_DIR --http --http.api eth --networkid 15 --nodiscover --syncmode full --gcmode archive`\r\n5. Execute the test case file: `node TC_FILE`\r\n\r\n- Q1. data-geth-1 / TC_1659703347.js",
  "closed_by": {
    "login": "JosephK95",
    "id": 86999601,
    "node_id": "MDQ6VXNlcjg2OTk5NjAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86999601?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JosephK95",
    "html_url": "https://github.com/JosephK95",
    "followers_url": "https://api.github.com/users/JosephK95/followers",
    "following_url": "https://api.github.com/users/JosephK95/following{/other_user}",
    "gists_url": "https://api.github.com/users/JosephK95/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JosephK95/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JosephK95/subscriptions",
    "organizations_url": "https://api.github.com/users/JosephK95/orgs",
    "repos_url": "https://api.github.com/users/JosephK95/repos",
    "events_url": "https://api.github.com/users/JosephK95/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JosephK95/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1208989593",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25495#issuecomment-1208989593",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
    "id": 1208989593,
    "node_id": "IC_kwDOAOvK985ID7eZ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T07:00:07Z",
    "updated_at": "2022-08-09T07:00:07Z",
    "author_association": "MEMBER",
    "body": "Thank you for this and #25501. It might be that it will take some time for us to evaluate and address these discrepancies, but hard data and steps to reproduce is very useful. Thanks again! ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1208989593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209074535",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25495#issuecomment-1209074535",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
    "id": 1209074535,
    "node_id": "IC_kwDOAOvK985IEQNn",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T08:27:15Z",
    "updated_at": "2022-08-09T08:27:15Z",
    "author_association": "MEMBER",
    "body": "> Q1. getProtocolVersion support\r\n> \r\n> (Geth) returns an error: \"the method ... not available\"\r\n> (Node A,B,C) returns \"0x42\"\r\n\r\nThis API endpoint was removed because it was ambiguous. Geth at some point implemented about 4-5 different versions of the `eth` protocol. Should have we returned the min supported, the max, the one with most peers? It's just a useless networking detail exposed at the RPC. It was mostly used during pre-Frontier times when you wanted to display on the ethstats dashboard *the* implemented network version to highlight potential incompatibilities. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209074535/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209081290",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25495#issuecomment-1209081290",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
    "id": 1209081290,
    "node_id": "IC_kwDOAOvK985IER3K",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T08:34:00Z",
    "updated_at": "2022-08-09T08:34:00Z",
    "author_association": "MEMBER",
    "body": "> Q2. Invalid block argument to getBlockTransactionCount\r\n> \r\n> (Geth) returns null\r\n> (Node B) returns an error: \"Block ... could not be found\"\r\n> Q3. Invalid block argument to getPastLogs\r\n> \r\n> (Geth) returns []\r\n> (Node B) returns an error: \"... could not be found\"\r\n> Q4. Invalid block argument to getTransactionFromBlock\r\n> \r\n> (Geth) returns null\r\n> (Node B) returns an error: \"Block ... could not be found\"\r\n> Q5. Invalid block argument to getBlockUncleCount\r\n> \r\n> (Geth) returns null\r\n> (Node B) returns an error: \"Block ... could not be found\"\r\n> Q6. Invalid block argument to getUncle\r\n> \r\n> (Geth) returns null\r\n> (Node B) returns an error: \"Block ... could not be found\"\r\n\r\nThese are deliberate decisions. The JSON RPC spec does not define error returns (neither code, nor string). As such, whenever the RPC returns an error, a programmer needs to take a look at it and figure out what's wrong.\r\n\r\nE.g.\r\n\r\n```\r\nError: invalid argument 0: hex string has length 40, want 64 for common.Hash\r\n\tat web3.js:6365:9(45)\r\n\tat send (web3.js:5099:62(34))\r\n\tat <eval>:1:29(4)\r\n```\r\n\r\nThis above is a programming error and cannot be solved by the calling program, it needs a developer to take a look.\r\n\r\nA block not being in the chain however is not a programming error, it's simply missing data (e.g. node not yet fully synced?). By returning `nil` we explicitly differentiate this fault condition (which is recoverable by the caller program) from the other fault conditions (which are not recoverable by the caller program).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209081290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209084869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25495#issuecomment-1209084869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
    "id": 1209084869,
    "node_id": "IC_kwDOAOvK985IESvF",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T08:37:36Z",
    "updated_at": "2022-08-09T08:37:36Z",
    "author_association": "MEMBER",
    "body": "> Q7. Unknown account to getProof\r\n> \r\n> (Geth) returns an account object\r\n> (Node C) returns an error: \"Account not found\"\r\n\r\nGeth's behavior is correct. A non-existence proof is required to \"prove\" that the account does not exist. Returning an error is non-verifiable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1209084869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1221227021",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25495#issuecomment-1221227021",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25495",
    "id": 1221227021,
    "node_id": "IC_kwDOAOvK985IynIN",
    "user": {
      "login": "JosephK95",
      "id": 86999601,
      "node_id": "MDQ6VXNlcjg2OTk5NjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86999601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JosephK95",
      "html_url": "https://github.com/JosephK95",
      "followers_url": "https://api.github.com/users/JosephK95/followers",
      "following_url": "https://api.github.com/users/JosephK95/following{/other_user}",
      "gists_url": "https://api.github.com/users/JosephK95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JosephK95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JosephK95/subscriptions",
      "organizations_url": "https://api.github.com/users/JosephK95/orgs",
      "repos_url": "https://api.github.com/users/JosephK95/repos",
      "events_url": "https://api.github.com/users/JosephK95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JosephK95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-20T04:04:57Z",
    "updated_at": "2022-08-20T04:04:57Z",
    "author_association": "NONE",
    "body": "Closing the issue as moved to the link above.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1221227021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
