{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25336",
  "id": 1309473105,
  "node_id": "I_kwDOAOvK985ODPlR",
  "number": 25336,
  "title": "getLogs optimizations",
  "user": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2606146366,
      "node_id": "MDU6TGFiZWwyNjA2MTQ2MzY2",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:performance",
      "name": "type:performance",
      "color": "BDA845",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-07-19T12:48:57Z",
  "updated_at": "2023-03-09T09:11:15Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "According to some benchmarks `eth_getLogs` in geth is an order of magnitude slower than Nethermind and Erigon. These are some ideas we can try for speeding it up:\r\n\r\n- Push bloom aggregates to freezer instead of leveldb\r\n- Bloom aggregates of different [sizes](https://twitter.com/URozmej/status/1542484454064676864)\r\n- Make TxHash optional to avoid block body retrieval when its not needed.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336/reactions",
    "total_count": 3,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 3,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1191341664",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25336#issuecomment-1191341664",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336",
    "id": 1191341664,
    "node_id": "IC_kwDOAOvK985HAm5g",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T10:55:40Z",
    "updated_at": "2022-07-21T10:56:36Z",
    "author_association": "MEMBER",
    "body": "Another idea(sparse bloom filter) for improving efficiency of bloom filter is raised by zsolt https://gist.github.com/zsfelfoldi/e27487259bea871fefe398a1e964bece\r\n\r\nTL;DR: \r\n\r\nThe bloom filter used in Geth is too small(2048 bits), which ends up to extremely high false positive rate. It means bloom filter is useless.\r\n\r\nThe idea for decreasing false positive rate is: (1) increase the size of bloom filter (2) increase the number of bloom filters. If bloom filter is efficient for filtering, then the `eth_getLogs` performance can be improved significantly for sure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1191341664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1191344013",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25336#issuecomment-1191344013",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336",
    "id": 1191344013,
    "node_id": "IC_kwDOAOvK985HAneN",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T10:58:28Z",
    "updated_at": "2022-07-21T10:58:28Z",
    "author_association": "MEMBER",
    "body": "However, instead of making super sparse bloom filter, I think we can just increase the number of bloom filter. \r\nLet's say for each bloom filter it can contain at most 100 items. Once the bloom filter is \"full\", we create another bloom filter for following items.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1191344013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1461611628",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25336#issuecomment-1461611628",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25336",
    "id": 1461611628,
    "node_id": "IC_kwDOAOvK985XHmxs",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T09:05:26Z",
    "updated_at": "2023-03-09T09:05:26Z",
    "author_association": "MEMBER",
    "body": "There are use-cases where the filters yield results in almost every blocks, e.g. when following activity of many Uniswap pools. There is room for improvement here. Imagine the extreme case that a query yields results for *every* block. Then:\r\n\r\n- We can retrieve receipts and headers en masse from freezer instead of one-by-one\r\n- We can avoid the index and bloom filter checks\r\n\r\nHowever given the query it's not easy to detect whether it will have \"dense\" or \"sparse\" results. @fjl suggested a compromise:\r\n\r\nWe use the index to find sequential matching blocks and perform a range retrieval over those and only after start processing them. This in theory should be a net benefit. Because in the worst case we don't detect any ranges and revert to fetching and processing individually which is the status quo.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1461611628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
