{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20685",
  "id": 566478194,
  "node_id": "MDU6SXNzdWU1NjY0NzgxOTQ=",
  "number": 20685,
  "title": "Discrepency on eth_call rpc responses when the from field is omitted",
  "user": {
    "login": "egalano",
    "id": 1383412,
    "node_id": "MDQ6VXNlcjEzODM0MTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1383412?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/egalano",
    "html_url": "https://github.com/egalano",
    "followers_url": "https://api.github.com/users/egalano/followers",
    "following_url": "https://api.github.com/users/egalano/following{/other_user}",
    "gists_url": "https://api.github.com/users/egalano/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/egalano/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/egalano/subscriptions",
    "organizations_url": "https://api.github.com/users/egalano/orgs",
    "repos_url": "https://api.github.com/users/egalano/repos",
    "events_url": "https://api.github.com/users/egalano/events{/privacy}",
    "received_events_url": "https://api.github.com/users/egalano/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-02-17T19:19:18Z",
  "updated_at": "2020-02-25T16:57:07Z",
  "closed_at": "2020-02-25T16:57:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nPlease note that this is an issue tracker reserved for bug reports and feature requests.\r\n\r\nFor general questions please use the gitter channel or the Ethereum stack exchange at https://ethereum.stackexchange.com.\r\n\r\n#### System information\r\n\r\nGeth version: geth v1.9.10\r\nOS & Version: Linux\r\nCommit hash : 58cf568\r\n\r\n#### Expected behaviour\r\n\r\nJSON-RPC response to `eth_call` with and without the optional `from` field should be the same\r\n\r\n#### Actual behaviour\r\n\r\nAn Infura user reported an issue with mismatched responses when omitting the from field. The issue was reported to ethers.js (https://github.com/ethers-io/ethers.js/issues/705) but we were able to reproduce the error on the Ropsten network using a curl request directly to a geth node.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nThe user reported accurate repro steps here: https://github.com/ethers-io/ethers.js/issues/705#issuecomment-583298472\r\n\r\n*Without a from field*\r\n\r\n```\r\ncurl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' http://localhost:8545\r\n```\r\n\r\n*With a from field*\r\n\r\n```\r\ncurl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"from\":\"0xe2a8950bc498e19457be5bbe2c25bc1f535c743e\",\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' http://localhost:8545\r\n```\r\n\r\nThe expected behavior is that these responses should be identical",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587134887",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587134887",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587134887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzEzNDg4Nw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-17T19:45:02Z",
    "updated_at": "2020-02-17T19:45:02Z",
    "author_association": "MEMBER",
    "body": "I don't understand how you can expect them to be identical.Â The rpc endpoint simulates a call, and if the call depends on the tx origin, then whether \"from\" was supplied externally or not makes a difference.Either I misunderstood something, or this works as expected",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587134887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587141822",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587141822",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587141822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzE0MTgyMg==",
    "user": {
      "login": "egalano",
      "id": 1383412,
      "node_id": "MDQ6VXNlcjEzODM0MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/egalano",
      "html_url": "https://github.com/egalano",
      "followers_url": "https://api.github.com/users/egalano/followers",
      "following_url": "https://api.github.com/users/egalano/following{/other_user}",
      "gists_url": "https://api.github.com/users/egalano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egalano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egalano/subscriptions",
      "organizations_url": "https://api.github.com/users/egalano/orgs",
      "repos_url": "https://api.github.com/users/egalano/repos",
      "events_url": "https://api.github.com/users/egalano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egalano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-17T20:08:35Z",
    "updated_at": "2020-02-17T20:08:35Z",
    "author_association": "NONE",
    "body": "Totally understand that the from field could make a difference. Based on that user's report on the linked ethers.js issue, the odd thing was that with and without the from field Geth and Parity seem to have diverging behavior here. Infura soley runs geth for mainnet, another provider Alchemy uses Parity. The reporter included a link to test against Alchemy:\r\n\r\n```\r\n # Geth with from field\r\ncurl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"from\":\"0xe2a8950bc498e19457be5bbe2c25bc1f535c743e\",\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' https://ropsten.infura.io/v3/7d0d81d0919f4f05b9ab6634be01ee73\r\n\r\n{\"jsonrpc\":\"2.0\",\"id\":43,\"result\":\"0xfffffffffffffffffffffffffffffffffffffffffffffffffee3c828fc9f2bff\"}                                                         \r\n\r\n# Geth without from field\r\n curl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' https://ropsten.infura.io/v3/7d0d81d0919f4f05b9ab6634be01ee73\r\n\r\n{\"jsonrpc\":\"2.0\",\"id\":43,\"result\":\"0x000000000000000000000000000000000000000000000000128ad616fa50945f\"}\r\n\r\n# Parity with from field\r\ncurl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"from\":\"0xe2a8950bc498e19457be5bbe2c25bc1f535c743e\",\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' https://eth-ropsten.alchemyapi.io/jsonrpc/_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\r\n\r\n{\"jsonrpc\": \"2.0\", \"result\": \"0x000000000000000000000000000000000000000000000000128ad616fa50945f\", \"id\": 43}                                               \r\n\r\n# Parity without from field\r\ncurl -H \"Accept: application/json\" -X POST --data-raw '{\"method\":\"eth_call\",\"params\":[{\"to\":\"0xaf4c11A90e98D0C5ecFb403C62Cc8Dfe8DF11030\",\"data\":\"0xb7a56985000000000000000000000000e2a8950bc498e19457be5bbe2c25bc1f535c743e000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}' https://eth-ropsten.alchemyapi.io/jsonrpc/_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\r\n\r\n{\"jsonrpc\": \"2.0\", \"result\": \"0x000000000000000000000000000000000000000000000000128ad616fa50945f\", \"id\": 43}                                                                       \r\n\r\n```\r\n\r\nMaybe the issue is that Parity is providing the incorrect response here but I wasn't sure. Any insights would be helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587141822/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587382023",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587382023",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587382023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzM4MjAyMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T10:11:10Z",
    "updated_at": "2020-02-18T10:11:10Z",
    "author_association": "MEMBER",
    "body": "So, if not given a `from`, geth will try to use the \"first\" local account. If there are no local accounts on the node where this executes, it will use `0x00..0` as from. I'm not sure what parity uses, but in general, this means that even across two geth-nodes you're not guaranteed to get the same behaviour. \r\n\r\nI don't know what the \"best\" default is here.   ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587382023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587466539",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587466539",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587466539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ2NjUzOQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T13:44:06Z",
    "updated_at": "2020-02-18T13:44:06Z",
    "author_association": "MEMBER",
    "body": "I think we should remove this implicit \"first local account\" behavior. Two reasons: local accounts can be different on every machine, and it's the only reason why we depend on accounts from the API implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587466539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587467799",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587467799",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587467799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ2Nzc5OQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T13:46:50Z",
    "updated_at": "2020-02-18T13:46:50Z",
    "author_association": "MEMBER",
    "body": "Parity uses null account address by default, which is the saner choice.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587467799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587584761",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-587584761",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 587584761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU4NDc2MQ==",
    "user": {
      "login": "aranhaagency",
      "id": 50056110,
      "node_id": "MDQ6VXNlcjUwMDU2MTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/50056110?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aranhaagency",
      "html_url": "https://github.com/aranhaagency",
      "followers_url": "https://api.github.com/users/aranhaagency/followers",
      "following_url": "https://api.github.com/users/aranhaagency/following{/other_user}",
      "gists_url": "https://api.github.com/users/aranhaagency/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aranhaagency/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aranhaagency/subscriptions",
      "organizations_url": "https://api.github.com/users/aranhaagency/orgs",
      "repos_url": "https://api.github.com/users/aranhaagency/repos",
      "events_url": "https://api.github.com/users/aranhaagency/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aranhaagency/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T17:40:50Z",
    "updated_at": "2020-02-18T17:40:50Z",
    "author_association": "NONE",
    "body": "@egalano test again with the new version go geth 2.2.1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/587584761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588127440",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-588127440",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 588127440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODEyNzQ0MA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-19T09:43:12Z",
    "updated_at": "2020-02-19T09:43:12Z",
    "author_association": "MEMBER",
    "body": "We're a bit tied here. My preference would be to make the `from` mandatory, in the API-call. @fjl would rather just set it to `0x00..0` if not supplied. \r\n\r\nI think using `0x0..0` is a bad idea, since that particular address is quirky and special. Zeroes means that something is not set, and can have strange side-effects on executions. It's also used as a burn-address, and has huge amounts of ether and tokens on it. \r\n\r\nIf we make it mandatory, web3-providers and libraries can always choose to allow the user to have it optional, but then the libraries would have to provide the default themselves. \r\n\r\nPutting this out there -- opinions? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588127440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589340620",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20685#issuecomment-589340620",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20685",
    "id": 589340620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTM0MDYyMA==",
    "user": {
      "login": "egalano",
      "id": 1383412,
      "node_id": "MDQ6VXNlcjEzODM0MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/egalano",
      "html_url": "https://github.com/egalano",
      "followers_url": "https://api.github.com/users/egalano/followers",
      "following_url": "https://api.github.com/users/egalano/following{/other_user}",
      "gists_url": "https://api.github.com/users/egalano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egalano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egalano/subscriptions",
      "organizations_url": "https://api.github.com/users/egalano/orgs",
      "repos_url": "https://api.github.com/users/egalano/repos",
      "events_url": "https://api.github.com/users/egalano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egalano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-20T21:52:44Z",
    "updated_at": "2020-02-20T21:52:44Z",
    "author_association": "NONE",
    "body": "I would go with using `0x00` as the default to match parity's behavior. The only thing I might be concerned about would be if someone were already expecting the first local account behavior. What ability would that person have to revert to the previous behavior after this next release. Maybe we start with enabling this new behavior via a cli flag and then making it the default after a set period of time? It probably isn't necessary to go to that length to keep this backwards compatible but we really won't know until someone files a ticket.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589340620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
