{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28214",
  "id": 1916608822,
  "node_id": "I_kwDOAOvK985yPSE2",
  "number": 28214,
  "title": "Trie Benchmarks Break invariant of trie",
  "user": {
    "login": "aaronbuchwald",
    "id": 24684335,
    "node_id": "MDQ6VXNlcjI0Njg0MzM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/24684335?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronbuchwald",
    "html_url": "https://github.com/aaronbuchwald",
    "followers_url": "https://api.github.com/users/aaronbuchwald/followers",
    "following_url": "https://api.github.com/users/aaronbuchwald/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronbuchwald/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronbuchwald/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronbuchwald/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronbuchwald/orgs",
    "repos_url": "https://api.github.com/users/aaronbuchwald/repos",
    "events_url": "https://api.github.com/users/aaronbuchwald/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronbuchwald/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-09-28T02:37:59Z",
  "updated_at": "2023-09-28T21:45:46Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The current trie benchmarks in geth: https://github.com/ethereum/go-ethereum/blob/master/trie/trie_test.go#L630-L635 allocate a single byte array to use as the key and value when constructing a trie.\r\n\r\nThe key is then overwritten every time to a different value. However, the trie assumes that after a byte slice is passed in it should not be modified by the caller.\r\n\r\nAs an example, modifying `benchUpdate` to add the following correctness check causes the benchmark to fail:\r\n\r\n```\r\n\ttrie := NewEmpty(triedb)\r\n\tk := make([]byte, 32)\r\n\tb.ReportAllocs()\r\n\tfor i := 0; i < b.N; i++ {\r\n\t\te.PutUint64(k, uint64(i))\r\n\t\ttrie.MustUpdate(k, k)\r\n\t}\r\n\r\n\tk2 := make([]byte, 32)\r\n\tres, err := trie.Get(k2)\r\n\tif err != nil {\r\n\t\tb.Fatal(err)\r\n\t}\r\n\tif !bytes.Equal(res, k2) {\r\n\t\tb.Fatal(\"unexpected\")\r\n\t}\r\n```\r\n\r\nchecking that the key equals the value should pass because every call to `MustUpdate` passed in the same key and value argument.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1738356030",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28214#issuecomment-1738356030",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214",
    "id": 1738356030,
    "node_id": "IC_kwDOAOvK985nnTU-",
    "user": {
      "login": "aaronbuchwald",
      "id": 24684335,
      "node_id": "MDQ6VXNlcjI0Njg0MzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24684335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronbuchwald",
      "html_url": "https://github.com/aaronbuchwald",
      "followers_url": "https://api.github.com/users/aaronbuchwald/followers",
      "following_url": "https://api.github.com/users/aaronbuchwald/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronbuchwald/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronbuchwald/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronbuchwald/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronbuchwald/orgs",
      "repos_url": "https://api.github.com/users/aaronbuchwald/repos",
      "events_url": "https://api.github.com/users/aaronbuchwald/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronbuchwald/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-28T02:40:11Z",
    "updated_at": "2023-09-28T02:40:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Planning to make a PR to fix this and look around at more relevant benchmarks in the trie code, so if there are any other changes you'd suggest or want, happy to help out here while looking around.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1738356030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1739198696",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28214#issuecomment-1739198696",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214",
    "id": 1739198696,
    "node_id": "IC_kwDOAOvK985nqhDo",
    "user": {
      "login": "DeVil2O",
      "id": 38765776,
      "node_id": "MDQ6VXNlcjM4NzY1Nzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38765776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeVil2O",
      "html_url": "https://github.com/DeVil2O",
      "followers_url": "https://api.github.com/users/DeVil2O/followers",
      "following_url": "https://api.github.com/users/DeVil2O/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeVil2O/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeVil2O/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeVil2O/subscriptions",
      "organizations_url": "https://api.github.com/users/DeVil2O/orgs",
      "repos_url": "https://api.github.com/users/DeVil2O/repos",
      "events_url": "https://api.github.com/users/DeVil2O/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeVil2O/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-28T13:34:35Z",
    "updated_at": "2023-09-28T13:34:35Z",
    "author_association": "NONE",
    "body": "Hi @aaronbuchwald , can u please review this [PR](https://github.com/ethereum/go-ethereum/pull/28221), I have suggested a solution.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1739198696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1740033725",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28214#issuecomment-1740033725",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214",
    "id": 1740033725,
    "node_id": "IC_kwDOAOvK985nts69",
    "user": {
      "login": "aaronbuchwald",
      "id": 24684335,
      "node_id": "MDQ6VXNlcjI0Njg0MzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24684335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronbuchwald",
      "html_url": "https://github.com/aaronbuchwald",
      "followers_url": "https://api.github.com/users/aaronbuchwald/followers",
      "following_url": "https://api.github.com/users/aaronbuchwald/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronbuchwald/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronbuchwald/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronbuchwald/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronbuchwald/orgs",
      "repos_url": "https://api.github.com/users/aaronbuchwald/repos",
      "events_url": "https://api.github.com/users/aaronbuchwald/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronbuchwald/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-28T21:32:56Z",
    "updated_at": "2023-09-28T21:32:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @DeVil2O , that change LGTM, the same behavior is present in `benchGet` as well if you want to provide the fix there too.\r\n\r\nI am working on a change to the benchmarks as well and put my work up here: https://github.com/aaronbuchwald/go-ethereum/commit/9322d227f9ebcf597881938debe6f921854df97e.\r\n\r\nUnfortunately, the triedb code only supports insertion via `Update` which requires that all of the updates are correct accounts / storage tries.\r\n\r\nI think this design choice is intended to ensure the API only allows correctly formatted data to be inserted into the triedb, but makes it a bit more difficult to test it for randomly generated values inserted into the trie in this case.\r\n\r\nGoing to keep working on this and try to support the following benchmark cases:\r\n\r\n- benchmark getting k keys from a trie of size n\r\n- benchmark putting k keys into a trie of size n\r\n\r\nDB IO will be the bottleneck, so these benchmarks should provide an approximation of how many total DB reads are necessary. Then if you have a reasonable estimate of the latency for a DB read on a given system, it should give you a good estimate of the expected latency to get/update k keys in a trie of size n.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1740033725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1740045760",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28214#issuecomment-1740045760",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28214",
    "id": 1740045760,
    "node_id": "IC_kwDOAOvK985ntv3A",
    "user": {
      "login": "aaronbuchwald",
      "id": 24684335,
      "node_id": "MDQ6VXNlcjI0Njg0MzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24684335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronbuchwald",
      "html_url": "https://github.com/aaronbuchwald",
      "followers_url": "https://api.github.com/users/aaronbuchwald/followers",
      "following_url": "https://api.github.com/users/aaronbuchwald/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronbuchwald/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronbuchwald/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronbuchwald/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronbuchwald/orgs",
      "repos_url": "https://api.github.com/users/aaronbuchwald/repos",
      "events_url": "https://api.github.com/users/aaronbuchwald/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronbuchwald/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-28T21:45:46Z",
    "updated_at": "2023-09-28T21:45:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would also be very interesting to either come up with a formula for the expected number of trie node reads when updating k keys in a trie of size n, or since as I understand it a closed form formula for that may be difficult a simulation that helps approximate the expected number of trie node reads that will be needed.\r\n\r\nAssuming the keys are randomly distributed, log_b(n) * k (depth * k) should be a good upper bound approximation, but I'm still curious if there's a straightforward, closer approximation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1740045760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
