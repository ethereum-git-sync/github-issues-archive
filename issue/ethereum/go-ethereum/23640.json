{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23640",
  "id": 1007261821,
  "node_id": "I_kwDOAOvK9848CZh9",
  "number": 23640,
  "title": "Graphql service return empty accessList's storageKeys on goerli network data where it should not",
  "user": {
    "login": "jangko",
    "id": 2784755,
    "node_id": "MDQ6VXNlcjI3ODQ3NTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2784755?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jangko",
    "html_url": "https://github.com/jangko",
    "followers_url": "https://api.github.com/users/jangko/followers",
    "following_url": "https://api.github.com/users/jangko/following{/other_user}",
    "gists_url": "https://api.github.com/users/jangko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jangko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jangko/subscriptions",
    "organizations_url": "https://api.github.com/users/jangko/orgs",
    "repos_url": "https://api.github.com/users/jangko/repos",
    "events_url": "https://api.github.com/users/jangko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jangko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-09-26T03:21:58Z",
  "updated_at": "2021-09-28T22:28:18Z",
  "closed_at": "2021-09-28T22:28:18Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I'm using geth's graphql to fetch block header and transactions of goerli net. At block 5000628 and tx no 71, one of the storageKeys is empty, but from JSON-RPC I got non-empty storageKeys. Same thing happened on block 5000647 tx no 42.\r\n\r\nBut the strange thing is both sender and tx hash returned by graphql query are correct. And using this sender and txhash I'm able to tell that the query result is wrong.\r\n\r\n#### System information\r\n\r\nGeth\r\nVersion: 1.10.8-stable\r\nGit Commit: 26675454bf93bf904be7a43cce6b3f550115ff90\r\nGit Commit Date: 20210824\r\nArchitecture: amd64\r\nGo Version: go1.16.4\r\nOperating System: windows\r\n\r\n#### Expected behaviour\r\n\r\n```json\r\n...\r\n \"accessList\": [\r\n    {\r\n      \"address\": \"0x57b96462b8d236cfec75dc9c0e0dcee20a22a7dd\",\r\n      \"storageKeys\": [\r\n        \"0x0000000000000000000000000000000000000000000000000000000000000006\",\r\n        \"0x0000000000000000000000000000000000000000000000000000000000000007\",\r\n        \"0x0000000000000000000000000000000000000000000000000000000000000008\",\r\n        \"0x0000000000000000000000000000000000000000000000000000000000000009\",\r\n        \"0x000000000000000000000000000000000000000000000000000000000000000a\",\r\n        \"0x000000000000000000000000000000000000000000000000000000000000000c\"\r\n      ]\r\n    },\r\n    {\r\n      \"address\": \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\r\n      \"storageKeys\": []\r\n    },\r\n    {\r\n      \"address\": \"0x4774be14b1e81eb9f78f5d58b061f796fb2c744f\",\r\n      \"storageKeys\": []\r\n    }\r\n]\r\n...\r\n```\r\n\r\n#### Actual behaviour\r\n```json\r\n...\r\n\"accessList\": [\r\n    {\r\n      \"address\": \"0x57b96462b8d236cfec75dc9c0e0dcee20a22a7dd\",\r\n      \"storageKeys\": []\r\n    },\r\n    {\r\n      \"address\": \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\r\n      \"storageKeys\": []\r\n    },\r\n    {\r\n     \"address\": \"0x4774be14b1e81eb9f78f5d58b061f796fb2c744f\",\r\n     \"storageKeys\": []\r\n    }\r\n]\r\n...\r\n```\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nusing graphql client such as altair, connect to http://127.0.0.1:8545/graphql\r\nor using geth's built-in client http://127.0.0.1:8545/graphql/ui\r\nthen send this query:\r\n\r\n```graphql\r\nquery getAccessList($blockNumber: Long = 5000628) {  \r\n  block(number: $blockNumber) {    \r\n    transactionAt(index: 71) {\r\n      accessList {\r\n        address\r\n        storageKeys\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/928919442",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23640#issuecomment-928919442",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23640",
    "id": 928919442,
    "node_id": "IC_kwDOAOvK9843Xi-S",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-28T07:12:37Z",
    "updated_at": "2021-09-28T07:12:37Z",
    "author_association": "MEMBER",
    "body": "Getting it:\r\n```\r\n> eth.getRawTransaction(\"0xa0fae49e54b60a9dd1782a8416e38948d7f24cbb68115abe2b1640c45fcf73de\")\r\n\"0x01f901ca056a8545df5a9900830927c0940000000000d41c96294ccdac8612bdfe29c641af80b85300000000000000000000011e9068e25238910000000000004f980199b2b146f1000000004774be14b1e81eb9f78f5d58b061f796fb2c744f57b96462b8d236cfec75dc9c0e0dcee20a22a7dd02000017000018f9010df8dd9457b96462b8d236cfec75dc9c0e0dcee20a22a7ddf8c6a00000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000007a00000000000000000000000000000000000000000000000000000000000000008a00000000000000000000000000000000000000000000000000000000000000009a0000000000000000000000000000000000000000000000000000000000000000aa0000000000000000000000000000000000000000000000000000000000000000cd694b4fbf271143f4fbf7b91a5ded31805e42b2208d6c0d6944774be14b1e81eb9f78f5d58b061f796fb2c744fc080a01c02edc1cfa96bb7a7de9111504f71310d42ade698f992c98dabd685425af0c7a04256f35f0f541ca5d9080391913758fd2b98a1a9e43c9bf1733b97ea6cae9814\"\r\n```\r\nChecking it: \r\n```\r\n$ rlpdump -hex \"0x01f901ca056a8545df5a9900830927c0940000000000d41c96294ccdac8612bdfe29c641af80b85300000000000000000000011e9068e25238910000000000004f980199b2b146f1000000004774be14b1e81eb9f78f5d58b061f796fb2c744f57b96462b8d236cfec75dc9c0e0dcee20a22a7dd02000017000018f9010df8dd9457b96462b8d236cfec75dc9c0e0dcee20a22a7ddf8c6a00000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000007a00000000000000000000000000000000000000000000000000000000000000008a00000000000000000000000000000000000000000000000000000000000000009a0000000000000000000000000000000000000000000000000000000000000000aa0000000000000000000000000000000000000000000000000000000000000000cd694b4fbf271143f4fbf7b91a5ded31805e42b2208d6c0d6944774be14b1e81eb9f78f5d58b061f796fb2c744fc080a01c02edc1cfa96bb7a7de9111504f71310d42ade698f992c98dabd685425af0c7a04256f35f0f541ca5d9080391913758fd2b98a1a9e43c9bf1733b97ea6cae9814\"\r\n01\r\n[\r\n  05,\r\n  \"j\",\r\n  45df5a9900,\r\n  0927c0,\r\n  0000000000d41c96294ccdac8612bdfe29c641af,\r\n  \"\",\r\n  00000000000000000000011e9068e25238910000000000004f980199b2b146f1000000004774be14b1e81eb9f78f5d58b061f796fb2c744f57b96462b8d236cfec75dc9c0e0dcee20a22a7dd02000017000018,\r\n  [\r\n    [\r\n      57b96462b8d236cfec75dc9c0e0dcee20a22a7dd,\r\n      [\r\n        0000000000000000000000000000000000000000000000000000000000000006,\r\n        0000000000000000000000000000000000000000000000000000000000000007,\r\n        0000000000000000000000000000000000000000000000000000000000000008,\r\n        0000000000000000000000000000000000000000000000000000000000000009,\r\n        000000000000000000000000000000000000000000000000000000000000000a,\r\n        000000000000000000000000000000000000000000000000000000000000000c,\r\n      ],\r\n    ],\r\n    [\r\n      b4fbf271143f4fbf7b91a5ded31805e42b2208d6,\r\n      [],\r\n    ],\r\n    [\r\n      4774be14b1e81eb9f78f5d58b061f796fb2c744f,\r\n      [],\r\n    ],\r\n  ],\r\n  \"\",\r\n  1c02edc1cfa96bb7a7de9111504f71310d42ade698f992c98dabd685425af0c7,\r\n  4256f35f0f541ca5d9080391913758fd2b98a1a9e43c9bf1733b97ea6cae9814,\r\n]\r\n```\r\nI'm syncing up a goerli node now to test the graphql, beacuse the node I was using above doesn't have graphql enabled. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/928919442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
