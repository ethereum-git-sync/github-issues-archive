{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/14648",
  "id": 236706230,
  "node_id": "MDU6SXNzdWUyMzY3MDYyMzA=",
  "number": 14648,
  "title": "Swarm - Allow Introspective Behavior For Network Nodes",
  "user": {
    "login": "masterial",
    "id": 11956729,
    "node_id": "MDQ6VXNlcjExOTU2NzI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/11956729?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/masterial",
    "html_url": "https://github.com/masterial",
    "followers_url": "https://api.github.com/users/masterial/followers",
    "following_url": "https://api.github.com/users/masterial/following{/other_user}",
    "gists_url": "https://api.github.com/users/masterial/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/masterial/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/masterial/subscriptions",
    "organizations_url": "https://api.github.com/users/masterial/orgs",
    "repos_url": "https://api.github.com/users/masterial/repos",
    "events_url": "https://api.github.com/users/masterial/events{/privacy}",
    "received_events_url": "https://api.github.com/users/masterial/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-06-18T07:40:27Z",
  "updated_at": "2018-12-14T13:16:04Z",
  "closed_at": "2018-08-08T16:43:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Currently, there is no straight forward way for the node to reference which \"swarm file\" transmitted chunks belong to. Why is it useful? If nodes have the ability to refer back to the content at the higher level, they have the ability to index the content that goes through Swarm. This in turn opens up a possibility for creating a search engine and will bolster the effort to build up web3. But, OMG, everything has to be encrypted if it goes through swam. To which, I have say, this is a decision the uploader should make, let there be unencrypted content if they are cool with it. Appreciate your feedback. Let's do this, thanks!",
  "closed_by": {
    "login": "cobordism",
    "id": 12838530,
    "node_id": "MDQ6VXNlcjEyODM4NTMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/12838530?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cobordism",
    "html_url": "https://github.com/cobordism",
    "followers_url": "https://api.github.com/users/cobordism/followers",
    "following_url": "https://api.github.com/users/cobordism/following{/other_user}",
    "gists_url": "https://api.github.com/users/cobordism/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cobordism/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cobordism/subscriptions",
    "organizations_url": "https://api.github.com/users/cobordism/orgs",
    "repos_url": "https://api.github.com/users/cobordism/repos",
    "events_url": "https://api.github.com/users/cobordism/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cobordism/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/309267206",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14648#issuecomment-309267206",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648",
    "id": 309267206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI2NzIwNg==",
    "user": {
      "login": "lmars",
      "id": 488515,
      "node_id": "MDQ6VXNlcjQ4ODUxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/488515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmars",
      "html_url": "https://github.com/lmars",
      "followers_url": "https://api.github.com/users/lmars/followers",
      "following_url": "https://api.github.com/users/lmars/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmars/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmars/subscriptions",
      "organizations_url": "https://api.github.com/users/lmars/orgs",
      "repos_url": "https://api.github.com/users/lmars/repos",
      "events_url": "https://api.github.com/users/lmars/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmars/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-18T09:46:54Z",
    "updated_at": "2017-06-18T09:46:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> there is no straight forward way for the node to reference which \"swarm file\" transmitted chunks belong to\r\n\r\nWhat is a \"swarm file\"?\r\n\r\nLet's say I have a text file on my machine which is exactly 4kb (so is one chunk in size), but someone else has an 8kb file which consists of the 4kb of my text file plus some other 4kb of data, and someone else has a 1TB file which has my 4kb of data somewhere in the middle.\r\n\r\nWe all upload the files to swarm, there are multiple \"source files\", but which \"file\" does the 4kb chunk belong to?\r\n\r\nSwarm is just concerned with chunks, and clients reconstruct files by referencing a particular collection of chunks (so I have a hash which references just the 4kb chunk, someone else has a hash which references my 4kb chunk along with many other chunks).\r\n\r\n> Why is it useful? If nodes have the ability to refer back to the content at the higher level, they have the ability to index the content that goes through Swarm\r\n\r\nThe nodes need the hashes which refer to the content as a whole. It makes no sense for a node to just look at its local chunks and try and make sense of them.\r\n\r\nAs an example, lets say I see a snippet of HTML `<div>Welcome to my cool dapp!</div>`, how do I know what the dapp is? How do I know whose dapp it is? How do I know what HTML comes next? That HTML could be a part of many different dapps, there is no way to know.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/309267206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/309291449",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14648#issuecomment-309291449",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648",
    "id": 309291449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI5MTQ0OQ==",
    "user": {
      "login": "masterial",
      "id": 11956729,
      "node_id": "MDQ6VXNlcjExOTU2NzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11956729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masterial",
      "html_url": "https://github.com/masterial",
      "followers_url": "https://api.github.com/users/masterial/followers",
      "following_url": "https://api.github.com/users/masterial/following{/other_user}",
      "gists_url": "https://api.github.com/users/masterial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masterial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masterial/subscriptions",
      "organizations_url": "https://api.github.com/users/masterial/orgs",
      "repos_url": "https://api.github.com/users/masterial/repos",
      "events_url": "https://api.github.com/users/masterial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masterial/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-18T17:37:11Z",
    "updated_at": "2017-06-18T17:56:33Z",
    "author_association": "NONE",
    "body": "> The nodes need the hashes which refer to the content as a whole.\r\n\r\nTotally agree. Like you said (paraphrasing the rest) how the hell is the node supposed to tell from the content of the chunk that it belongs to a particular file at the top level? I mean the node can maintain it'll own registry of the files it uploads but it just ends there and it not particularly useful. It's way more useful if it can also assist with classification of publicly available content. The node will own the index registry data and then it can distribute it as it likes (no need to tie this particular thing to the swarm protocol at all).\r\n\r\nAccording to @zelig, one approach to this problem is to rely on ENS to crawl the content. Sure, however, that's how it was done in the old ways and its very inefficient. Having a reference to the file at the node level can turn the paradigm of content classification on its head because it is a passive approach vs aggressive such as spider indexing for it requires dedicated resources, and it can process content that was not previously classified.\r\n\r\nNotice how one of the biggest problem of the internet currently is that most of highly useful content can not be reached by crawlers. See here [Search Engine Inefficiency](http://www.tennessean.com/story/money/tech/2014/05/02/jj-rosen-popular-search-engines-skim-surface/8636081/)\r\n\r\nThe gist of the article is this Google's index represents only an estimated 4 percent of the information that exists on the Internet.\r\n\r\nThis improvement can actually produce 100% coverage for all public content.\r\n\r\nI think we should seriously consider making happen. Thanks for commenting, btw!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/309291449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/403294809",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14648#issuecomment-403294809",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14648",
    "id": 403294809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI5NDgwOQ==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-07-08T15:17:46Z",
    "updated_at": "2018-07-08T15:17:46Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/403294809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
