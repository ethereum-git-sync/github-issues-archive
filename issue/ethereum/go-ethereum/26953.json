{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26953",
  "id": 1635853188,
  "node_id": "I_kwDOAOvK985hgSOE",
  "number": 26953,
  "title": "feature: subscribe reorg only headers",
  "user": {
    "login": "jsvisa",
    "id": 3627395,
    "node_id": "MDQ6VXNlcjM2MjczOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jsvisa",
    "html_url": "https://github.com/jsvisa",
    "followers_url": "https://api.github.com/users/jsvisa/followers",
    "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
    "organizations_url": "https://api.github.com/users/jsvisa/orgs",
    "repos_url": "https://api.github.com/users/jsvisa/repos",
    "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jsvisa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-03-22T14:15:09Z",
  "updated_at": "2023-09-26T14:22:01Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nRef https://geth.ethereum.org/docs/interacting-with-geth/rpc/pubsub#newheads we have a `newHeades` subscribe, \r\n> Fires a notification each time a new header is appended to the chain, including chain reorganizations. Users can use the bloom filter to determine if the block contains logs that are interested to them. Note that if geth receives multiple blocks simultaneously, e.g. catching up after being out of sync, only the last block is emitted.\r\n>\r\n> In case of a chain reorganization the subscription will emit the last header in the new chain. Therefore the subscription can emit multiple headers on the same height.\r\n\r\nIn some cases, we only want to retrieve the blocks that have undergone reorg, such as for ETL programs, which update old data once a reorg occurs. However, the newHeads subscription does not differentiate between whether it is a reorg situation, and this needs to be determined by the subscriber themselves.\r\n\r\n\r\n# Implementation\r\n\r\nDo you have ideas regarding the implementation of this feature? // yes\r\nAre you willing to implement this feature? // yes",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953/reactions",
    "total_count": 11,
    "+1": 11,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1480295084",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26953#issuecomment-1480295084",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953",
    "id": 1480295084,
    "node_id": "IC_kwDOAOvK985YO4Ks",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T21:39:04Z",
    "updated_at": "2023-03-22T21:39:04Z",
    "author_association": "MEMBER",
    "body": "What would you like this feature to look like?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1480295084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1480493894",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26953#issuecomment-1480493894",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953",
    "id": 1480493894,
    "node_id": "IC_kwDOAOvK985YPotG",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-23T02:27:26Z",
    "updated_at": "2023-03-23T02:27:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a simple workflow of this RPC.\r\n\r\nSubscribe to chain reorg with params:\r\n\r\n* `reorgAdd`: subscribe to newChain added events\r\n* `reorgDrop`: subsribe to oldChain deleted events\r\n* `reorg`: combines of `reorgAdd` + `reorgDrop`\r\n\r\neg: \r\n\r\n```json\r\n{ \"id\": 1, \"method\": \"eth_subscribe\", \"params\": [\"reorg\"] }\r\n```\r\n\r\nresponse:\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_subscription\",\r\n  \"params\": {\r\n    \"result\": {\r\n      \"reorgAdd\": [\r\n        {\r\n          \"difficulty\": \"0x15d9223a23aa\",\r\n          \"extraData\": \"0xd983010305844765746887676f312e342e328777696e646f7773\",\r\n          \"gasLimit\": \"0x47e7c4\",\r\n          \"gasUsed\": \"0x38658\",\r\n          \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n          \"miner\": \"0xf8b483dba2c3b7176a3da549ad41a48bb3121069\",\r\n          \"nonce\": \"0x084149998194cc5f\",\r\n          \"number\": \"0x1001\",\r\n          \"parentHash\": \"0x7736fab79e05dc611604d22470dadad26f56fe494421b5b333de816ce1f25701\",\r\n          \"receiptRoot\": \"0x2fab35823ad00c7bb388595cb46652fe7886e00660a01e867824d3dceb1c8d36\",\r\n          \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n          \"stateRoot\": \"0xb3346685172db67de536d8765c43c31009d0eb3bd9c501c9be3229203f15f378\",\r\n          \"timestamp\": \"0x56ffeff8\",\r\n          \"hash\": \"0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c968a0\"\r\n        }\r\n      ],\r\n      \"reorgDrop\": [\r\n        {\r\n          \"difficulty\": \"0x15d9223a23aa\",\r\n          \"extraData\": \"0xd983010305844765746887676f312e342e328777696e646f7773\",\r\n          \"gasLimit\": \"0x47e7c4\",\r\n          \"gasUsed\": \"0x38658\",\r\n          \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n          \"miner\": \"0xf8b483dba2c3b7176a3da549ad41a48bb3121069\",\r\n          \"nonce\": \"0x084149998194cc5f\",\r\n          \"number\": \"0x1000\",\r\n          \"parentHash\": \"0x7736fab79e05dc611604d22470dadad26f56fe494421b5b333de816ce1f25701\",\r\n          \"receiptRoot\": \"0x2fab35823ad00c7bb388595cb46652fe7886e00660a01e867824d3dceb1c8d36\",\r\n          \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n          \"stateRoot\": \"0xb3346685172db67de536d8765c43c31009d0eb3bd9c501c9be3229203f15f378\",\r\n          \"timestamp\": \"0x56ffeff8\",\r\n          \"hash\": \"0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c9689f\"\r\n        }\r\n      ]\r\n    },\r\n    \"subscription\": \"0x9ce59a13059e417087c02d3236a0b1cc\"\r\n  }\r\n}\r\n```\r\n\r\nSo the client knows that block `0x1000` with hash `0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c9689f` was dropped, and block `0x1001` with hash `0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c968a0` was added.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1480493894/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1735647669",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26953#issuecomment-1735647669",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26953",
    "id": 1735647669,
    "node_id": "IC_kwDOAOvK985nc-G1",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-26T14:22:00Z",
    "updated_at": "2023-09-26T14:22:00Z",
    "author_association": "MEMBER",
    "body": "I see many people have reacted to this feature request. I'd like to hear more about your use-cases (cc @dkatzan who commented on the related PR).\r\n\r\nFor now I want to highlight an approach of detecting re-orgs using the existing `newHeads` subscription:\r\n\r\n- The **requirement** here is you need to store the block header for the new heads that you receive. The more you store, the larger of a re-org you can handle. E.g. 1 day's worth of blocks.\r\n- Let's say the latest block you have locally has number `N`. Upon receiving a new head you have the following conditions:\r\n  - New head has number < `N` => reorg happened and the new chain is shorter. Iterate back and check parent hashes to find the fork point.\r\n  - New head has number == `N` => reorg happened. Same as above.\r\n  - New head has number > `N`. In this case it could be just that we receive a new block on the existing chain OR it's a reorg that is longer than the previous chain. Iterate back and fetch blocks via (`eth_getBlockBy..`) and check parent hashes. If `parentHash` of `N+1` doesn't match with what's stored locally it was a reorg situation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1735647669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
