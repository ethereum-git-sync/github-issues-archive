{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20858",
  "id": 592458508,
  "node_id": "MDU6SXNzdWU1OTI0NTg1MDg=",
  "number": 20858,
  "title": "Trie check / repair tool",
  "user": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-04-02T08:41:03Z",
  "updated_at": "2023-05-09T12:40:36Z",
  "closed_at": "2023-05-09T12:40:35Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Related to various issues where trie nodes go missing, a.k.a data corruption. Examples include https://github.com/ethereum/go-ethereum/issues/20845\r\n\r\nWe should have a `geth ... repairtrie`, or `geth .. checktrie`. What that command would do, is \r\n\r\n- Load up the chain,( not initiate any synch or peering)\r\n- Start at the trie root, and verify the hash. \r\n- Walk down the trie and verify each hash. \r\n- If a node cannot be verified, flag the missing hash/path for download.\r\n- Continue until trie is done\r\n- Generate report about trie health, missing nodes/paths. \r\n\r\nAt some point, also download the msising nodes from a peer, via fastsync protocol.. \r\n\r\n ",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607731652",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-607731652",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 607731652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzczMTY1Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T09:30:43Z",
    "updated_at": "2020-04-02T09:33:25Z",
    "author_association": "MEMBER",
    "body": "> - If a node cannot be verified, flag the missing hash/path for download.\r\n> - Continue until trie is done\r\n\r\nWhile walking the trie, I think that the only error that will occur, in practice, is that we find that resolving a certain hash fails: a missing trie node. At that point, we cannot continue walking that path further down, so unless we fetch it on the fly, we cannot \"continue until done\".\r\n\r\n(Theoretically, I guess we could also find that `hash(rlp(node)) != expected_hash`, but I suspect we won't run into that. I guess it could happen if a flle system corruption actually flipped a bit in a leaf node, e.g modding a byte in the balance or nonce-field or whatever)\r\n\r\nSo perhaps a better solution is to fix the trie while walking it, otherwise the user would have to re-run the same 10+ hour-long process again and again for every missing trie node on the same path\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607731652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607735654",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-607735654",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 607735654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzczNTY1NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T09:38:46Z",
    "updated_at": "2020-04-02T09:39:12Z",
    "author_association": "MEMBER",
    "body": "Hm, I guess an alternative approach could be: \r\n\r\n- Stop at first error, output\r\n\r\n```\r\nmissing trie node: `0x...NODE`\r\npath :`0x...PATH`\r\n```\r\n \r\nThen we could add \r\n```\r\ndebug.fetchTrieNode(`0x..NODE`)\r\n```\r\nAnd, eventually, you rerun it:\r\n```\r\ngeth --repairtrie --start=0x...PATH\r\n```\r\nJust thinking it would be nice to keep it kind of compartmentalized, and keep the tool simple.... ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607735654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607770875",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-607770875",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 607770875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzc3MDg3NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T10:49:10Z",
    "updated_at": "2020-04-02T10:49:10Z",
    "author_association": "MEMBER",
    "body": "An alternative would be to fetch missing stuff on the fly, use it to continue iteration, but don't inject into the database. Then at the end offer to fix or abort? The issue however is that this needs network access, and by the time you find a missing trie node the network might have already moved on, so fixing it is not trivial.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607770875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607772731",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-607772731",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 607772731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzc3MjczMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T10:53:23Z",
    "updated_at": "2020-04-02T10:53:23Z",
    "author_association": "MEMBER",
    "body": "Hm.. If we download it, why wouldn't we fix it too? I don't see what we would gain by not injecting it -- isn't the only drawback that we have to release our iterator and then resume it again ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607772731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607773419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-607773419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 607773419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzc3MzQxOQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T10:54:58Z",
    "updated_at": "2020-04-02T10:54:58Z",
    "author_association": "MEMBER",
    "body": "Yeah, you could fix it. If the thing is still available in the network. But what if not? And also this requires network access, which we don't have infra for currently (offline chain but online handler).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607773419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/653177498",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-653177498",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 653177498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzE3NzQ5OA==",
    "user": {
      "login": "AusIV",
      "id": 977954,
      "node_id": "MDQ6VXNlcjk3Nzk1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/977954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AusIV",
      "html_url": "https://github.com/AusIV",
      "followers_url": "https://api.github.com/users/AusIV/followers",
      "following_url": "https://api.github.com/users/AusIV/following{/other_user}",
      "gists_url": "https://api.github.com/users/AusIV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AusIV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AusIV/subscriptions",
      "organizations_url": "https://api.github.com/users/AusIV/orgs",
      "repos_url": "https://api.github.com/users/AusIV/repos",
      "events_url": "https://api.github.com/users/AusIV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AusIV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T19:12:46Z",
    "updated_at": "2020-07-02T19:12:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "My team has developed a tool to do limited state trie verification that may be of interest here. Our streaming replication solution for blockchain data is a bit more error prone than conventional node management, so we frequently run state trie verifications on offline data. A full verification (walking the entire state trie and account tries checking every hash) can take days, which is impractical in our use case, but we've found that checking a sample of nodes from around the state trie can very reliably catch the sort of problems we encounter in a much more reasonable timeframe. \r\n\r\nYou're welcome to take a look if interested: https://github.com/NoteGio/go-ethereum/blob/support/1.9.12/cmd/geth/chaincmd.go#L786",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/653177498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/677465839",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-677465839",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 677465839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzQ2NTgzOQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T08:46:59Z",
    "updated_at": "2020-08-20T08:46:59Z",
    "author_association": "MEMBER",
    "body": "> Yeah, you could fix it. If the thing is still available in the network. But what if not?\r\n\r\nWe can do a first \"optimistic\" solution, and see how well it works. \r\n\r\nOptimistic: doesn't move pivot points, or even care about pivot points, just tries to find the missing state on the network. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/677465839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/703467912",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-703467912",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 703467912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzQ2NzkxMg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-05T07:57:04Z",
    "updated_at": "2020-10-05T07:57:04Z",
    "author_association": "MEMBER",
    "body": "Implemented in https://github.com/ethereum/go-ethereum/pull/21650 . ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/703467912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1540045436",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20858#issuecomment-1540045436",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20858",
    "id": 1540045436,
    "node_id": "IC_kwDOAOvK985byzp8",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T12:40:35Z",
    "updated_at": "2023-05-09T12:40:35Z",
    "author_association": "MEMBER",
    "body": "Closing this, for the reasons given in #21650. Plus, most times, it's better for the user to resync from scratch rather than \"heal\", since the state will have shuffled along. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1540045436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
