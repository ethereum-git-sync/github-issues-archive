{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24245",
  "id": 1105343212,
  "node_id": "I_kwDOAOvK985B4jLs",
  "number": 24245,
  "title": "\"known transaction\" and \"replacement transaction underpriced\" error on private POA network using geth",
  "user": {
    "login": "nileshpanhale",
    "id": 86289730,
    "node_id": "MDQ6VXNlcjg2Mjg5NzMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/86289730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nileshpanhale",
    "html_url": "https://github.com/nileshpanhale",
    "followers_url": "https://api.github.com/users/nileshpanhale/followers",
    "following_url": "https://api.github.com/users/nileshpanhale/following{/other_user}",
    "gists_url": "https://api.github.com/users/nileshpanhale/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nileshpanhale/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nileshpanhale/subscriptions",
    "organizations_url": "https://api.github.com/users/nileshpanhale/orgs",
    "repos_url": "https://api.github.com/users/nileshpanhale/repos",
    "events_url": "https://api.github.com/users/nileshpanhale/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nileshpanhale/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-01-17T04:05:08Z",
  "updated_at": "2022-01-17T08:40:06Z",
  "closed_at": "2022-01-17T08:06:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.10.8-stable`\r\nOS & Version: Windows/Linux/OSX\r\nCommit hash : (if `develop`)\r\n\r\n# Case : \r\nI have created a mining node using geth console with gasprice zero and POA consensus. Due to some changes, I need to redeploy our smart contract of token minting. After redeployment, I started to get 2 errors from the mining node for some transactions.\r\n1. Error: Returned error: replacement transaction underpriced\r\n2. Error: Returned error: known transaction \r\n\r\n# This is my geth node command - \r\n`geth --datadir node1/ --networkid 2021 --port 30303 --syncmode full --rpc --rpcport 9001 --allow-insecure-unlock --unlock node1/account.txt --password node1/password.txt --nodiscover --rpccorsdomain * --nat any --rpcapi personal,eth,net,web3,txpool,miner --ipcpath node1/geth.ipc --miner.gasprice 0 --mine`\r\n\r\n# My minting function in JS - \r\n\r\n```javascript\r\nasync function mint(receiver, amt) {\r\n\r\n    //to remove transaction replacement error, I have added 1 to nonce with pending transactions.\r\n    let nonce = await web3.eth.getTransactionCount(owner, 'pending') + 1;\r\n\r\n    const amount = web3.utils.toHex(amt);\r\n    const mintFunction = contract.methods.mint(receiver, amount).encodeABI();\r\n    const NetworkId = await web3.eth.net.getId();\r\n\r\n    /**\r\n    * Raw_transaction instance to specify all parameters for ethereumjs-tx Transation\r\n    */\r\n    const rawTx = {\r\n        \"from\": owner,\r\n        \"to\": contractAddr,\r\n        \"data\": mintFunction,\r\n        \"nonce\": nonce,\r\n        \"value\": \"0x00000000000000\",\r\n        \"gasLimit\": web3.utils.toHex(210000),\r\n        \"gasPrice\": 00,\r\n        \"chainId\": NetworkId\r\n    };\r\n\r\n    /**\r\n     * @dev initiate transaction with Raw_trasansaction instance for ethereumjs-tx Transaction\r\n     */\r\n    let transaction = new ETx(rawTx, { common });\r\n\r\n    /**\r\n     * @dev sign the transaction with private key to change blockchain status\r\n     */\r\n    transaction.sign(pvt);\r\n\r\n    /**\r\n     * @dev send the signed transaction to smart contract\r\n     */\r\n    web3.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'), (err, hash) => {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            console.log(\"Mint Transaction Hash : \" + hash);\r\n            console.log(\"Token minting successful.\");\r\n            return hash;\r\n        }\r\n    });\r\n};\r\n```\r\n#### Expected behavior\r\nNow with this, after every 5 sec new block will be minted by owner address. All transactions are signed only by owner's private key. The mining node is set to accept 0 gas fee. Transactions are signed and minted successfully. \r\n\r\n#### Actual behaviour\r\nSome of the transactions are not confirmed due to \"known transaction\" error and some due to a \"replacement transaction underpriced\" error. Now I can't redeploy smart contract and can't stop mining node also, because its live on prod now. \r\n\r\n\r\n##PLEASE SUGGEST A FIRM SOLUTION TO THESE TWO ERRORS WITHOUT ANY CHANGE IN MINING NODE OR SMART CONTRACT.\r\nI think there must be a solution in JS function which resolve these errors for me.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014240545",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24245#issuecomment-1014240545",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245",
    "id": 1014240545,
    "node_id": "IC_kwDOAOvK9848dBUh",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T08:06:35Z",
    "updated_at": "2022-01-17T08:06:35Z",
    "author_association": "MEMBER",
    "body": "` web3.eth.getTransactionCount(owner, 'pending') + 1;` -- afaik, this method gets the current nonce, as in, the nonce for that address in the current state. \r\nIt does not take into account the number of pending transactions you have. So if you perform three of these before a new block is minted, those three will have the same nonce, and only one of them will make it into a block. \r\n\r\nFor a more robust version, you can keep track of the nonce on your side, and increase every time you submit a new transaction, and periodically (e.g. sometimes when a new block arrives or after a reorg) sync it with the chain. For an even more robust solution, maintain a map of nonce ->  unsigned transaction, so you can fix up errors due to dropped transactions. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014240545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014267075",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24245#issuecomment-1014267075",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24245",
    "id": 1014267075,
    "node_id": "IC_kwDOAOvK9848dHzD",
    "user": {
      "login": "nileshpanhale",
      "id": 86289730,
      "node_id": "MDQ6VXNlcjg2Mjg5NzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/86289730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nileshpanhale",
      "html_url": "https://github.com/nileshpanhale",
      "followers_url": "https://api.github.com/users/nileshpanhale/followers",
      "following_url": "https://api.github.com/users/nileshpanhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/nileshpanhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nileshpanhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nileshpanhale/subscriptions",
      "organizations_url": "https://api.github.com/users/nileshpanhale/orgs",
      "repos_url": "https://api.github.com/users/nileshpanhale/repos",
      "events_url": "https://api.github.com/users/nileshpanhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nileshpanhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T08:40:06Z",
    "updated_at": "2022-01-17T08:40:06Z",
    "author_association": "NONE",
    "body": "> \r\n\r\nThank you so much holiman for the reply. \r\nAbout nonce, for every transaction nonce is incremented by 1 automatically due to '+1' in getTransactionCount. now if I have to resolve this nonce repetition issue, what changes shall I do in mint function?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014267075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
