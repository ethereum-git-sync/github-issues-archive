{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25607",
  "id": 1351867618,
  "node_id": "I_kwDOAOvK985Qk9zi",
  "number": 25607,
  "title": "ethclient - replace nil pointer on *Transaction when null address with real address",
  "user": {
    "login": "41rjordan",
    "id": 109601951,
    "node_id": "U_kgDOBohknw",
    "avatar_url": "https://avatars.githubusercontent.com/u/109601951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/41rjordan",
    "html_url": "https://github.com/41rjordan",
    "followers_url": "https://api.github.com/users/41rjordan/followers",
    "following_url": "https://api.github.com/users/41rjordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/41rjordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/41rjordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/41rjordan/subscriptions",
    "organizations_url": "https://api.github.com/users/41rjordan/orgs",
    "repos_url": "https://api.github.com/users/41rjordan/repos",
    "events_url": "https://api.github.com/users/41rjordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/41rjordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-08-26T07:25:20Z",
  "updated_at": "2022-08-26T07:58:15Z",
  "closed_at": "2022-08-26T07:56:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Disclaimer\r\nThis is more an improvement than a feature, but there is no template for type:improvement :/  \r\nI hope it is not critical.\r\n\r\n# Rationale\r\n\r\nWhen you're calling `*Client.BlockByNumber` (/ethclient) and then calling `*Block.Transactions()` with return value, return value is Transactions type (/core/types), which is de-facto []*Transaction. It contains transactions in the chosen block. In turn, *Transaction type contain functions that return value, from, to fields pointers etc, with functions `.Value()`, `From()`, `.To()` respectively.  \r\nIn case of `.To()`, this function returns *common.address type (/common), which is in fact pointer to an address that is in \"to\" field in transaction. To get an actual address, you should call `*tx.To()`. However, [if transaction is contract creation/ether burn, that is, has null address (0x00...00), pointer returned by .To() function will be nil.  ](https://github.com/ethereum/go-ethereum/blob/36874b63a1b56eed2b8e4b47ccea0337920b84b8/core/types/transaction.go#L283)\r\nThis is not useful, because, e. g., if you're parsing transactions in block, you should call `if tx.To() == nil { to := common.HexToAddress(\"0x00...` for **every** transaction.\r\n\r\n## Example\r\n\r\n### How is it right now\r\n```\r\nfor _, tx := range block.Transactions() {\r\n    if tx.To() == nil {\r\n        to := common.HexToAddress(\"0x0000000000000000000000000000000000000000\") // or to use pre-defined null address\r\n    } else {\r\n        to := *tx.To() // if to call it while pointer is nil, it will obviously cause segfault\r\n    }\r\n    // do anything else\r\n}\r\n```\r\n\r\n### How it could work\r\n\r\n```\r\nfor _, tx := range block.Transactions() {\r\n    to := *tx.To() // if address is 0x00...00, it will just return common.Address with full zero bytes, and you can do anything with ready address (e.g. .String() etc)\r\n    // do anything else\r\n}\r\n```\r\n\r\nHonestly, I canâ€™t understand why it was implemented this way, but if there was a task to make a more readable check for a null address, a function like `.IsNullAddress()` would be reasonable to implement (and more easy-to-understand btw, e. g. anyone who will check source code of anything that uses geth as a library, but doesn't understand how geth library works, won't understand under what conditions could a null pointer be obtained at all)\r\n\r\n# Implementation\r\n\r\nIf I'm not wrong, To() is [here](https://github.com/ethereum/go-ethereum/blob/36874b63a1b56eed2b8e4b47ccea0337920b84b8/core/types/transaction.go#L285). It uses [copyAddressPtr](https://github.com/ethereum/go-ethereum/blob/36874b63a1b56eed2b8e4b47ccea0337920b84b8/core/types/transaction.go#L647) function to make a pointer for an address (?). Here is the check for the null address. Implementation: just remove first \"if\" :)\r\n\r\ntransaction.go, line 648:\r\n\r\n```\r\nif a == nil {\r\n\t\treturn nil\r\n\t}\r\n```\r\n\r\n### If it can't be changed\r\nI am not suggesting that this should be changed at any cost. If this logic has a reason, ok (but, it would be cool if it'll be at least mentioned in docs). However, I would like to know, why does it work like that. I think that removing the assignment to null address of a nil pointer would be a useful improvement. **Thanks in advance for your response!**",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1228177899",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25607#issuecomment-1228177899",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607",
    "id": 1228177899,
    "node_id": "IC_kwDOAOvK985JNIHr",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T07:56:35Z",
    "updated_at": "2022-08-26T07:56:35Z",
    "author_association": "MEMBER",
    "body": "A missing `to` means that the transaction is of a certain type: a `create`-transaction. The data is interpreted as constructor code, which when executed returns the contract bytecode to deploy. \r\nA missing `to` is therefore very much not the same thing as sending something to `0x00..00`, but something entirely different. It's not about what choices the go-ethereum devs have made in their codebase, it's a fundamental specification on ethereum transactions. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1228177899/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1228179572",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25607#issuecomment-1228179572",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25607",
    "id": 1228179572,
    "node_id": "IC_kwDOAOvK985JNIh0",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T07:58:15Z",
    "updated_at": "2022-08-26T07:58:15Z",
    "author_association": "MEMBER",
    "body": "So, basically, if you blindly try to convert `to` into an address, you _should_ hit an error / panic, because you're doing it wrong. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1228179572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
