{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27275",
  "id": 1711234795,
  "node_id": "I_kwDOAOvK985l_17r",
  "number": 27275,
  "title": "setDecoded should not allow negative number for the tx value",
  "user": {
    "login": "krasi-georgiev",
    "id": 8903888,
    "node_id": "MDQ6VXNlcjg5MDM4ODg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krasi-georgiev",
    "html_url": "https://github.com/krasi-georgiev",
    "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
    "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
    "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
    "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
    "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
    "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-05-16T04:57:36Z",
  "updated_at": "2023-05-22T18:50:41Z",
  "closed_at": "2023-05-17T08:35:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\nWhen `NewTx` allows creating a TX with e negative value this causes a panic in the `FinalizeAndAssemble` \r\n\r\n```\r\npanic: rlp: cannot encode negative big.Int\r\n```\r\n\r\nTo replicate\r\nCreate a TX with a negative value to a new account\r\nThe TX will pass all checks\r\nA new account will be created with a negative balance\r\n\r\nThe change\r\n```\r\n\r\n// NewTx creates a new transaction.\r\nfunc NewTx(inner TxData) *Transaction {\r\n\ttx := new(Transaction)\r\n\ttx.setDecoded(inner.copy(), 0)\r\n\treturn tx\r\n}\r\n\r\n\r\n// setDecoded sets the inner transaction and size after decoding.\r\nfunc (tx *Transaction) setDecoded(inner TxData, size uint64) {\r\n\tif inner.value().Sign() < 0 {\r\n\t\tpanic(\"transaction value cannot be negative\")\r\n\t}\r\n\ttx.inner = inner\r\n\ttx.time = time.Now()\r\n\tif size > 0 {\r\n\t\ttx.size.Store(size)\r\n\t}\r\n}\r\n```",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1550981525",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27275#issuecomment-1550981525",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
    "id": 1550981525,
    "node_id": "IC_kwDOAOvK985cchmV",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:33:45Z",
    "updated_at": "2023-05-17T08:33:45Z",
    "author_association": "MEMBER",
    "body": "Why would you create a negative transaction?\r\n\r\nRLP cannot represent negative numbers so anything arriving over the network will surely be positive, the RPC should also check that values are not negative.\r\n\r\nI mean, sure, you can construct an invalid transaction from Go code, but why would you do that and why should we handle deliberately bad code?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1550981525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1550983337",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27275#issuecomment-1550983337",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
    "id": 1550983337,
    "node_id": "IC_kwDOAOvK985cciCp",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:35:10Z",
    "updated_at": "2023-05-17T08:35:10Z",
    "author_association": "MEMBER",
    "body": "We don't really believe in defensive programming where every single method validates every parameter. The process boundary (network, file system, etc) are the places where you need to ensure that data validity checks are done, but after you're inside the program, the invariants should hold.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1550983337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557561689",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27275#issuecomment-1557561689",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
    "id": 1557561689,
    "node_id": "IC_kwDOAOvK985c1oFZ",
    "user": {
      "login": "lthibault",
      "id": 9452561,
      "node_id": "MDQ6VXNlcjk0NTI1NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9452561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lthibault",
      "html_url": "https://github.com/lthibault",
      "followers_url": "https://api.github.com/users/lthibault/followers",
      "following_url": "https://api.github.com/users/lthibault/following{/other_user}",
      "gists_url": "https://api.github.com/users/lthibault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lthibault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lthibault/subscriptions",
      "organizations_url": "https://api.github.com/users/lthibault/orgs",
      "repos_url": "https://api.github.com/users/lthibault/repos",
      "events_url": "https://api.github.com/users/lthibault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lthibault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T16:48:30Z",
    "updated_at": "2023-05-22T16:48:30Z",
    "author_association": "NONE",
    "body": "@karalabe We're hitting this issue as well.  Your point about having a clearly-delineated validation boundary makes sense, but is this specific failure case actually checked somewhere?  It seems to be slipping through existing validation measures.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557561689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557637472",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27275#issuecomment-1557637472",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
    "id": 1557637472,
    "node_id": "IC_kwDOAOvK985c16lg",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T17:42:01Z",
    "updated_at": "2023-05-22T17:42:01Z",
    "author_association": "MEMBER",
    "body": "How are you hitting this case? Transactions over the wire and over rpc should not be able to have negative numbers for the txvalue? Do you have a link to how you are using `NewTx`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557637472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557731553",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27275#issuecomment-1557731553",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27275",
    "id": 1557731553,
    "node_id": "IC_kwDOAOvK985c2Rjh",
    "user": {
      "login": "lthibault",
      "id": 9452561,
      "node_id": "MDQ6VXNlcjk0NTI1NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9452561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lthibault",
      "html_url": "https://github.com/lthibault",
      "followers_url": "https://api.github.com/users/lthibault/followers",
      "following_url": "https://api.github.com/users/lthibault/following{/other_user}",
      "gists_url": "https://api.github.com/users/lthibault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lthibault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lthibault/subscriptions",
      "organizations_url": "https://api.github.com/users/lthibault/orgs",
      "repos_url": "https://api.github.com/users/lthibault/repos",
      "events_url": "https://api.github.com/users/lthibault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lthibault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T18:50:22Z",
    "updated_at": "2023-05-22T18:50:41Z",
    "author_association": "NONE",
    "body": "@MariusVanDerWijden To be exact:  we are encountering a panic in `(s *StateDB) updateStateObject`.  My best (albeit unconfirmed) guess is that an incoming transaction occasionally has a negative value that isn't caught by the validation pipeline.  It's relatively rare, happening once every couple of days.\r\n\r\nI'll keep you appraised of our investigation, of course.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557731553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
