{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19073",
  "id": 410385592,
  "node_id": "MDU6SXNzdWU0MTAzODU1OTI=",
  "number": 19073,
  "title": "Feature Request: Expose ECIES to API",
  "user": {
    "login": "MariusVanDerWijden",
    "id": 16664698,
    "node_id": "MDQ6VXNlcjE2NjY0Njk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MariusVanDerWijden",
    "html_url": "https://github.com/MariusVanDerWijden",
    "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
    "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
    "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
    "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
    "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
    "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2019-02-14T16:31:32Z",
  "updated_at": "2020-08-27T09:10:38Z",
  "closed_at": "2020-04-02T09:11:13Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Parity has it and Geth should have it to, their own exposed ECIES interface. \r\nhttps://wiki.parity.io/JSONRPC-parity-module.html#parity_encryptmessage\r\nGeth already has the technical capabilities to implement something like this. \r\n\r\nThis is especially useful to provide Dapp-developers with a simple way to encrypt data using public keys.\r\n\r\n#### Expected behaviour\r\nAbility to encrypt and decrypt messages with ECIES\r\n\r\n#### Actual behaviour\r\nnonexistent\r\n\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464361519",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-464361519",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 464361519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM2MTUxOQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-16T16:42:56Z",
    "updated_at": "2019-02-16T16:42:56Z",
    "author_association": "MEMBER",
    "body": "We're currently working on an external signer (and in general removing accounts from Geth) called Clef. I'm not sure exactly which capabilities it has, but I think someone already requested that we support RSA signatures and/or DH handshakes or something. Either way, I think it's a valid request and can probably be incorporated into that work.\r\n\r\n@holiman ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464361519/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464460433",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-464460433",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 464460433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQ2MDQzMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-17T13:58:03Z",
    "updated_at": "2019-02-17T13:58:03Z",
    "author_association": "MEMBER",
    "body": "It is not a super-great fit for clef, since\r\n\r\na) It doesn't require a private key, so nothing to do with account management, \r\nb) It requires the message-to-encrypt to go over the external API, which is considered untrusted, and the message would wind up in e..g audit logs. \r\n\r\nHowever, it _could_ be part of the protected (internal) API between `clef` and the `ui`. But that makes it less usable, since a dapp wouldn't be able to invoke it -- so that would not work for this usecase. \r\n\r\nI'm not really sure where this belongs, tbh. If a message needs to be encrypted, it probably shouldn't be exposed to the dapp in the first place. \r\n\r\n@MariusVanDerWijden do you have a more concrete example of a dapp which would use this? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464460433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464639284",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-464639284",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 464639284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDYzOTI4NA==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T08:44:58Z",
    "updated_at": "2019-02-18T08:45:19Z",
    "author_association": "MEMBER",
    "body": "I thought of End-to-End encryption of data in a DApp. And I think there should be a standardized way how to do this. I would rather not have dapps handle Encryption/Decryption themselves. \r\nI think there was already a proposol to standardize this.\r\nedit: found it https://ethereum-magicians.org/t/eip-1024-cross-client-encrypt-decrypt/505\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/464639284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588127461",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-588127461",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 588127461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODEyNzQ2MQ==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2020-02-19T09:43:15Z",
    "updated_at": "2020-02-19T09:43:15Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588127461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607721873",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-607721873",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 607721873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzcyMTg3Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T09:11:07Z",
    "updated_at": "2020-04-02T09:11:07Z",
    "author_association": "MEMBER",
    "body": "We've decided to close this. Implementing a backend which provides \"encrypt this secret message for me\" encourages Dapps in general to just hand off the secrets to whatever backend is running. Which may be infura or whatever. And that totally gives away the confidentiality. \r\n\r\nWe _could_ add decryption into clef though, that would totally make sense. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/607721873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/619802334",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-619802334",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 619802334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTgwMjMzNA==",
    "user": {
      "login": "anjmao",
      "id": 3028012,
      "node_id": "MDQ6VXNlcjMwMjgwMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3028012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anjmao",
      "html_url": "https://github.com/anjmao",
      "followers_url": "https://api.github.com/users/anjmao/followers",
      "following_url": "https://api.github.com/users/anjmao/following{/other_user}",
      "gists_url": "https://api.github.com/users/anjmao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anjmao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anjmao/subscriptions",
      "organizations_url": "https://api.github.com/users/anjmao/orgs",
      "repos_url": "https://api.github.com/users/anjmao/repos",
      "events_url": "https://api.github.com/users/anjmao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anjmao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T07:54:29Z",
    "updated_at": "2020-04-27T07:54:29Z",
    "author_association": "NONE",
    "body": "Hi @holiman @MariusVanDerWijden. Can you elaborate more on what do you mean by `encrypt this secret message for me` ? We have a case there I send encrypted data to server which cannot be trusted. The whole purpose of end to end encryption is not to trust any server and dapps should do that.\r\n\r\nAs a workaround we exported private key to json, imported it again to derive ecies keys, but this requires a lot more memory. Ideally keystore could have two more methods Encrypt, Decrypt as it already contains expanded private key. \r\n\r\nWould you consider reopening this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/619802334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/619829178",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-619829178",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 619829178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTgyOTE3OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T08:46:43Z",
    "updated_at": "2020-04-27T08:46:43Z",
    "author_association": "MEMBER",
    "body": "The confusion is probably due to how Geth works now vs. what the long term plans are. Currently Geth is a swiss army knife that does everything. As the ecosystem matures however, you want to separate network gateways (Geth, Parity, etc) from account management (Clef, Metamask, etc). \r\n\r\nFrom a security standpoint, it's better to have accounts not linked to nodes; and from a composability standpoint too as you could switch between using a local node, a shared node, or even Infura and have the same functionality.\r\n\r\nFrom this perspective, putting such an RPC API into Geth itself reinforces the tight coupling between accounts and networking, instead of loosening it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/619829178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620378470",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19073#issuecomment-620378470",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19073",
    "id": 620378470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDM3ODQ3MA==",
    "user": {
      "login": "anjmao",
      "id": 3028012,
      "node_id": "MDQ6VXNlcjMwMjgwMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3028012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anjmao",
      "html_url": "https://github.com/anjmao",
      "followers_url": "https://api.github.com/users/anjmao/followers",
      "following_url": "https://api.github.com/users/anjmao/following{/other_user}",
      "gists_url": "https://api.github.com/users/anjmao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anjmao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anjmao/subscriptions",
      "organizations_url": "https://api.github.com/users/anjmao/orgs",
      "repos_url": "https://api.github.com/users/anjmao/repos",
      "events_url": "https://api.github.com/users/anjmao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anjmao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T04:48:17Z",
    "updated_at": "2020-04-28T04:48:17Z",
    "author_association": "NONE",
    "body": "@karalabe Thanks, you are right. I just missed a point that this proposal is for RPC api. In our case we are use go-ethereum as a library for our dApp.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620378470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
