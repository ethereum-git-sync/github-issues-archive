{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27129",
  "id": 1677180665,
  "node_id": "I_kwDOAOvK985j9775",
  "number": 27129,
  "title": "Withdrawals JSON spec discrepancies",
  "user": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-04-20T18:02:05Z",
  "updated_at": "2023-04-21T15:34:26Z",
  "closed_at": "2023-04-21T15:34:26Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is not solely a geth-bug, but I'll file it here since it's my home turf. \r\n\r\nThe withdrawals for EL is specified here: https://ethereum.github.io/execution-apis/api-documentation/ . \r\n![Screenshot 2023-04-20 at 15-11-39 https __ethereum github io](https://user-images.githubusercontent.com/142290/233448106-93e55515-e22e-45ea-8396-5c41d2ad057a.png)\r\n\r\nNotably, \r\n- all four fields are on `string`-form, \r\n- and the validator index json-name is `validatorIndex` (camelcased). \r\n\r\n--- \r\n\r\nThe go-ethereum definition is here: https://github.com/ethereum/go-ethereum/blame/master/core/types/withdrawal.go#L31\r\n\r\n```golang\r\ntype Withdrawal struct {\r\n\tIndex     uint64         `json:\"index\"`          // monotonically increasing identifier issued by consensus layer\r\n\tValidator uint64         `json:\"validatorIndex\"` // index of validator associated with withdrawal\r\n\tAddress   common.Address `json:\"address\"`        // target address for withdrawn ether\r\n\tAmount    uint64         `json:\"amount\"`         // value of withdrawal in Gwei\r\n}\r\n```\r\n\r\nNotably: \r\n- Three of the fields are pure `uint64`. (Turning it into `math.HexOrDecimal64` would make them compliant, I think)\r\n\r\n\r\n--- \r\n\r\nI don't really know where the CL definition lives. But here's how `prysm`, `lodestar` and `lighthoues` returns them:\r\n\r\n```\r\n$ source ~/.headers && curl -H \"$HDR1\" -H \"$HDR2\" https://prysm.mainnet.ethpandaops.io/eth/v2/beacon/blocks/head 2>/dev/null | jq \".data .message .body .execution_payload .withdrawals[0]\"\r\n{\r\n  \"index\": \"870957\",\r\n  \"validator_index\": \"154725\",\r\n  \"address\": \"0x09d220b5ea3d69071471d78843d624dfdf49922d\",\r\n  \"amount\": \"12063443\"\r\n}\r\n\r\n[user@work ~]$ source ~/.headers && curl -H \"$HDR1\" -H \"$HDR2\" https://lodestar.mainnet.ethpandaops.io/eth/v2/beacon/blocks/head 2>/dev/null | jq \".data .message .body .execution_payload .withdrawals[0]\"\r\n{\r\n  \"index\": \"871053\",\r\n  \"validator_index\": \"154831\",\r\n  \"address\": \"0xd69017b743d5656a31551df7b4c3e2f63709640b\",\r\n  \"amount\": \"12021368\"\r\n}\r\n[user@work ~]$ source ~/.headers && curl -H \"$HDR1\" -H \"$HDR2\" https://lighthouse.mainnet.ethpandaops.io/eth/v2/beacon/blocks/head 2>/dev/null | jq \".data .message .body .execution_payload .withdrawals[0]\"\r\n{\r\n  \"index\": \"871101\",\r\n  \"validator_index\": \"154879\",\r\n  \"address\": \"0x0395da7fec51a54ef0046903d729c06edc70afdf\",\r\n  \"amount\": \"12168373\"\r\n}\r\n\r\n```\r\nNotably, \r\n- All fields are strings (like the EL spec)\r\n- The validator index is not camel-cased, but `validator_index`. \r\n\r\n-----\r\n\r\n\r\nSuggestion:\r\n\r\n- We (go-ethereum) should change to accept ints on string-form. \r\n- The EL spec should change `validatorIndex`->`validator_index`\r\n  - We (go-ethereum) and other ELs should apply the change.\r\n\r\ncc @MariusVanDerWijden @marioevz ",
  "closed_by": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516921276",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27129#issuecomment-1516921276",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
    "id": 1516921276,
    "node_id": "IC_kwDOAOvK985aamG8",
    "user": {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T20:43:45Z",
    "updated_at": "2023-04-20T20:43:45Z",
    "author_association": "NONE",
    "body": "I think what you might be suggesting amounts to aligning the engine API and/or eth_ API format with the beacon API format, rather than correcting a single field.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516921276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517295424",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27129#issuecomment-1517295424",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
    "id": 1517295424,
    "node_id": "IC_kwDOAOvK985acBdA",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T05:49:40Z",
    "updated_at": "2023-04-21T05:49:40Z",
    "author_association": "MEMBER",
    "body": "I believed that the discrepancy `validator_index` != `validatorIndex` was due to some oversight. I didn't consider that camelcase of \"the standard\" in EL json-rpc (it is, right?), and vice-versa in CL land. If so, I guess that's a valid reason, though my personal preference would be to break the norm and use `validator_index` in El.\r\n\r\nThe reason I picked this up, is because I have a little tool called `factor`, which can be used to relay canon-block info from a CL to an EL, using exposed http endpoints. That is, fetching latest block, feed to EL. \r\n\r\nFor the conversion, I thus had to define a second `clWithDrawal` type and iterate+convert between the two, just to pass from one to the other. Despite them representing the exact same structure. \r\n\r\nhttps://github.com/holiman/factor/pull/2/files#diff-fae3e6133490758f44967d974676cc3b0213ea320243223e0e1cbe0f842e7d20R99\r\n\r\n----\r\n\r\nAnd the second thing I am saying is that I think go-ethereum erroneously only accepts `int`, not `string-based ints` in e.g. amount. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517295424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517925445",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27129#issuecomment-1517925445",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
    "id": 1517925445,
    "node_id": "IC_kwDOAOvK985aebRF",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T14:32:04Z",
    "updated_at": "2023-04-21T14:32:04Z",
    "author_association": "MEMBER",
    "body": "Right, so it was defined to be camel case despite the CL definition because it is the canonical style of the EL JSON-RPC. We have gone to relatively [great lengths](https://github.com/ethereum/execution-apis/blob/main/src/engine/paris.md#executionpayloadv1) to retain it on the engine API even though many of the fields / objects are also defined in CL objects. Unless there is a very compelling reason to deviate, I think we should retain consistency across the JSON-RPC.\r\n\r\n> Three of the fields are pure uint64. (Turning it into math.HexOrDecimal64 would make them compliant, I think)\r\n\r\nAre you saying we should use `math.HexOrDecimal64` so that we can support decimal-over-string like the beacon API? We currently have [`withdrawalMarshaling`](https://github.com/ethereum/go-ethereum/blame/master/core/types/withdrawal.go#L39-L43) which uses `hexutil.Uint64` when marshaling to and from  JSON. This is the chosen `uint64` type for all other consensus objects over JSON-RPC.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517925445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517934304",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27129#issuecomment-1517934304",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
    "id": 1517934304,
    "node_id": "IC_kwDOAOvK985aedbg",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T14:37:07Z",
    "updated_at": "2023-04-21T14:37:07Z",
    "author_association": "MEMBER",
    "body": "> Are you saying we should use math.HexOrDecimal64 so that we can support decimal-over-string like the beacon API? \n\n\nNo, so we can support it like the EL spec says -- see image I posted in the top. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517934304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517935877",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27129#issuecomment-1517935877",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27129",
    "id": 1517935877,
    "node_id": "IC_kwDOAOvK985aed0F",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T14:38:19Z",
    "updated_at": "2023-04-21T14:38:19Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry my bad. Guess we can close this then. Thanks for the responses!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1517935877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
