{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28500",
  "id": 1984790656,
  "node_id": "I_kwDOAOvK9852TYCA",
  "number": 28500,
  "title": "execution reverted when using v1.13.x",
  "user": {
    "login": "robertchar92",
    "id": 48505355,
    "node_id": "MDQ6VXNlcjQ4NTA1MzU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/48505355?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/robertchar92",
    "html_url": "https://github.com/robertchar92",
    "followers_url": "https://api.github.com/users/robertchar92/followers",
    "following_url": "https://api.github.com/users/robertchar92/following{/other_user}",
    "gists_url": "https://api.github.com/users/robertchar92/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/robertchar92/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/robertchar92/subscriptions",
    "organizations_url": "https://api.github.com/users/robertchar92/orgs",
    "repos_url": "https://api.github.com/users/robertchar92/repos",
    "events_url": "https://api.github.com/users/robertchar92/events{/privacy}",
    "received_events_url": "https://api.github.com/users/robertchar92/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-11-09T04:19:41Z",
  "updated_at": "2023-11-09T06:35:52Z",
  "closed_at": "2023-11-09T06:35:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "i'm trying to get erc20 token balance using balanceOf from smart contract i keep getting error \"execution reverted\" when using v1.13.x but after i downgrade it to v1.12.2 it's work.\r\n\r\n`\r\n        client, err := ethclient.Dial(\"https://endpoints.omniatech.io/v1/bsc/testnet/public\")\r\n        if err != nil {\r\n\t        log.Println(\"Failed to connect to ethclient\", err)\r\n        }\r\n\r\n        tokenAddress := common.HexToAddress(contractAddress)\r\n\tinstance, err := erc20_contract.NewErc20Contract(tokenAddress, client)\r\n\tif err != nil {\r\n\t\tlog.Println(\"Failed to get initialize smart contract\", err)\r\n\t}\r\n\r\n\taddress := common.HexToAddress(walletAddress)\r\n\tbalance, err := instance.BalanceOf(&bind.CallOpts{}, address)\r\n\tif err != nil {\r\n\t\tlog.Println(\"Failed to get token balance from client\", err)\r\n\t}\r\n`\r\n\r\nSmart Contract \r\n`\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract ERC20 {\r\n    string public name = \"\"; // Add the name of your token here\r\n    string public symbol = \"\"; // Add the symbol of your token here\r\n    uint8 public decimals = 0; // Update the number of decimals as per your token\r\n\r\n    mapping(address => uint256) private balances;\r\n    mapping(address => mapping(address => uint256)) private allowed;\r\n    uint256 private _totalSupply;\r\n\r\n    constructor(uint256 initialSupply) {\r\n        _totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balances[msg.sender] = _totalSupply;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint256 tokens) public returns (bool success) {\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balances[msg.sender] >= tokens, \"Insufficient balance\");\r\n\r\n        balances[msg.sender] -= tokens;\r\n        balances[to] += tokens;\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success) {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balances[from] >= tokens, \"Insufficient balance\");\r\n        require(allowed[from][msg.sender] >= tokens, \"Allowance exceeded\");\r\n\r\n        balances[from] -= tokens;\r\n        balances[to] += tokens;\r\n        allowed[from][msg.sender] -= tokens;\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n}\r\n\r\n`\r\n\r\nit's there something i need to change to use v1.13.x?\r\n\r\n",
  "closed_by": {
    "login": "jwasinger",
    "id": 3411040,
    "node_id": "MDQ6VXNlcjM0MTEwNDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jwasinger",
    "html_url": "https://github.com/jwasinger",
    "followers_url": "https://api.github.com/users/jwasinger/followers",
    "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
    "organizations_url": "https://api.github.com/users/jwasinger/orgs",
    "repos_url": "https://api.github.com/users/jwasinger/repos",
    "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jwasinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803201227",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28500#issuecomment-1803201227",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500",
    "id": 1803201227,
    "node_id": "IC_kwDOAOvK985reqrL",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-09T05:46:00Z",
    "updated_at": "2023-11-09T05:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Which token and holder address are you running ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803201227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803220684",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28500#issuecomment-1803220684",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500",
    "id": 1803220684,
    "node_id": "IC_kwDOAOvK985revbM",
    "user": {
      "login": "robertchar92",
      "id": 48505355,
      "node_id": "MDQ6VXNlcjQ4NTA1MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/48505355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertchar92",
      "html_url": "https://github.com/robertchar92",
      "followers_url": "https://api.github.com/users/robertchar92/followers",
      "following_url": "https://api.github.com/users/robertchar92/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertchar92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertchar92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertchar92/subscriptions",
      "organizations_url": "https://api.github.com/users/robertchar92/orgs",
      "repos_url": "https://api.github.com/users/robertchar92/repos",
      "events_url": "https://api.github.com/users/robertchar92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertchar92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-09T06:09:27Z",
    "updated_at": "2023-11-09T06:09:27Z",
    "author_association": "NONE",
    "body": "this is contract address for token Mock USDT\r\n\"0xff554674c40a2b3f6cd1d825e9d6f07518196605\"\r\n\r\nand for wallet/holder address i'm using generated address from this code \r\n`key, err := crypto.GenerateKey()\r\n\tif err != nil {\r\n\t\tlog.Println(err)\r\n\t\terr := errors.ErrUnprocessableEntity\r\n\t\terr.Message = \"Failed to create wallet address\"\r\n\t\treturn nil, err\r\n\t}\r\n\r\n\tprivateKey := (*ecdsa.PrivateKey)(key)\r\n\tpublicKey := privateKey.Public()\r\n\tpublicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\r\n\tif !ok {\r\n\t\tlog.Println(\"error casting public key to ECDSA\")\r\n\t}\r\n\r\n\taddress := crypto.PubkeyToAddress(*publicKeyECDSA)\r\n\r\n\tvar res WalletResponse\r\n\r\n\tres.WalletAddress = address.Hex()\r\n\tres.PrivateKey = hex.EncodeToString(crypto.FromECDSA(privateKey))`\r\n\r\nthis is example generated wallet address\r\n\"0x6838f2584b0dE46B1B8CF9a7e8cf3DE6a1d6C79d\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803220684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803240726",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28500#issuecomment-1803240726",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28500",
    "id": 1803240726,
    "node_id": "IC_kwDOAOvK985re0UW",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-09T06:34:45Z",
    "updated_at": "2023-11-09T06:34:45Z",
    "author_association": "MEMBER",
    "body": "> https://endpoints.omniatech.io/v1/bsc/testnet/public\r\n\r\nThis is not the proper repository for BSC-related issues.  You should go and file an issue at https://github.com/bnb-chain/bsc",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1803240726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
