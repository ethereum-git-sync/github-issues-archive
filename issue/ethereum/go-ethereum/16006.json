{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16006",
  "id": 293449689,
  "node_id": "MDU6SXNzdWUyOTM0NDk2ODk=",
  "number": 16006,
  "title": "Geth sets limit for open files too low after startup, results in \"too many open files\"",
  "user": {
    "login": "klelifo",
    "id": 6716903,
    "node_id": "MDQ6VXNlcjY3MTY5MDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6716903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/klelifo",
    "html_url": "https://github.com/klelifo",
    "followers_url": "https://api.github.com/users/klelifo/followers",
    "following_url": "https://api.github.com/users/klelifo/following{/other_user}",
    "gists_url": "https://api.github.com/users/klelifo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/klelifo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/klelifo/subscriptions",
    "organizations_url": "https://api.github.com/users/klelifo/orgs",
    "repos_url": "https://api.github.com/users/klelifo/repos",
    "events_url": "https://api.github.com/users/klelifo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/klelifo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-02-01T08:56:01Z",
  "updated_at": "2018-08-12T01:29:53Z",
  "closed_at": "2018-02-03T23:05:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I guess that might be related to how the file limit is set by this function:\r\nhttps://github.com/ethereum/go-ethereum/blob/fdb34b7a7c87142cde48a2ec092f77a56d66f773/common/fdlimit/fdlimit_unix.go#L25\r\n\r\nObserved behaviour:\r\n=================\r\n```\r\nlsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 17.10\r\nRelease:        17.10\r\nCodename:       artful\r\n```\r\n\r\n```\r\n./geth --rpc --rpcport 8102 --rpcaddr 192.168.0.1 --cache=2048 --maxpeers=10\r\nINFO [02-01|09:29:56] Starting peer-to-peer node               instance=Geth/v1.7.3-stable-4bb3c89d/linux-amd64/go1.9.2\r\nINFO [02-01|09:29:56] Allocated cache and file handles         database=/home/miner/.ethereum/geth/chaindata cache=2048 handles=1024\r\nINFO [02-01|09:29:59] Initialised chain configuration          config=\"{ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675\r\n000 EIP158: 2675000 Byzantium: 4370000 Engine: ethash}\"\r\nINFO [02-01|09:29:59] Disk storage enabled for ethash caches   dir=/home/miner/.ethereum/geth/ethash count=3\r\nINFO [02-01|09:29:59] Disk storage enabled for ethash DAGs     dir=/home/miner/.ethash               count=2\r\nINFO [02-01|09:29:59] Initialising Ethereum protocol           versions=\"[63 62]\" network=1\r\nINFO [02-01|09:29:59] Loaded most recent local header          number=5006992 hash=c37de0…ddc325 td=2303374863991927018140\r\nINFO [02-01|09:29:59] Loaded most recent local full block      number=0       hash=d4e567…cb8fa3 td=17179869184\r\nINFO [02-01|09:29:59] Loaded most recent local fast block      number=5006744 hash=749e77…bfba64 td=2302708533829412214126\r\nINFO [02-01|09:29:59] Upgrading chain index                    type=bloombits percentage=1\r\nWARN [02-01|09:29:59] Failed to load transaction journal       err=\"open /home/miner/.ethereum/geth/transactions.rlp: too many open files\"\r\nWARN [02-01|09:29:59] Failed to rotate transaction journal     err=\"open /home/miner/.ethereum/geth/transactions.rlp.new: too many open files\"\r\nERROR[02-01|09:29:59] Section processing failed                type=bloombits error=\"canonical block #77824 unknown\"\r\nINFO [02-01|09:29:59] Starting P2P networking\r\nFatal: Error starting protocol stack: listen udp :30303: socket: too many open files\r\n```\r\n\r\n\r\nOn a second console I'm polling the ulimits for the geth process with\r\n```cat /proc/$(pidof geth)/limits | grep files```\r\n\r\nDirectly after the start this reports:\r\n```Max open files            150000               150000               files```\r\n\r\n(which is what I configured for my system)\r\n\r\nBut shortly after that the limits seem to get reduced by the geth process itself to\r\n```Max open files            2048               150000               files```\r\n\r\nwhich then results in the \"too many open files\" problem.\r\n\r\nWorkaround:\r\n==========\r\nRunning this command continously in a seperate shell during geth startup raises the ulimits back to the intended value fast enough for geth to properly start up and begin syncing\r\n```prlimit -n150000 -p $(pidof geth)```\r\n\r\nSo far this seems to fix it.\r\n\r\n\r\nExpected behaviour:\r\n==========\r\nDo not crash with \"too many open files\" ;)\r\n\r\nProposed fix:\r\n==========\r\nSet the correct max open files from within geth or don't do it at all and let the OS manage it.\r\n\r\n\r\nHope that helps someone, that is also struggeling with this problem.\r\nAnd maybe this is an easy fix for the devs.\r\nThanks for your time.\r\n\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362203056",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-362203056",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 362203056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIwMzA1Ng==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T09:08:38Z",
    "updated_at": "2018-02-01T09:08:38Z",
    "author_association": "MEMBER",
    "body": "Hm, interesting. In https://github.com/ethereum/go-ethereum/blob/master/common/fdlimit/fdlimit_unix.go, it says\r\n```\r\n// Raise tries to maximize the file descriptor allowance of this process\r\n// to the maximum hard-limit allowed by the OS.\r\nfunc Raise(max uint64) error {\r\n``` \r\nBut in reality, it does _not_ try to set the allowance to the max allowed by the OS, but instead caps it to the `max` value provided to `Raise`. This is either an error in the docs, or implementation. I'd prefer to let the documentation remain and change the behaviour to not do anything if the os-allowance is larger than `max`. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362203056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362205664",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-362205664",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 362205664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIwNTY2NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T09:18:42Z",
    "updated_at": "2018-02-01T09:18:42Z",
    "author_association": "MEMBER",
    "body": "Specifically: https://github.com/ethereum/go-ethereum/blob/c335821479db9930a98cbd48996f880c35a59797/cmd/utils/flags.go#L716 : \r\n```golang\r\nfunc makeDatabaseHandles() int {\r\n\tif err := fdlimit.Raise(2048); err != nil {\r\n\t\tFatalf(\"Failed to raise file descriptor allowance: %v\", err)\r\n\t}\r\n\tlimit, err := fdlimit.Current()\r\n```\r\n\r\nShould be\r\n```golang\r\nfunc makeDatabaseHandles() int {\r\n\tlimit, err := getFdLimit()\r\n\tif err != nil {\r\n\t\tFatalf(\"Failed to retrieve file descriptor allowance: %v\", err)\r\n\t}\r\n\tif limit < 2048 {\r\n\t\tif err := raiseFdLimit(2048); err != nil{\r\n\t\t\tFatalf(\"Failed to raise file descriptor allowance: %v\", err)\r\n\t\t}\r\n\t}\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362205664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362212127",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-362212127",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 362212127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIxMjEyNw==",
    "user": {
      "login": "klelifo",
      "id": 6716903,
      "node_id": "MDQ6VXNlcjY3MTY5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6716903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klelifo",
      "html_url": "https://github.com/klelifo",
      "followers_url": "https://api.github.com/users/klelifo/followers",
      "following_url": "https://api.github.com/users/klelifo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klelifo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klelifo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klelifo/subscriptions",
      "organizations_url": "https://api.github.com/users/klelifo/orgs",
      "repos_url": "https://api.github.com/users/klelifo/repos",
      "events_url": "https://api.github.com/users/klelifo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klelifo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T09:42:58Z",
    "updated_at": "2018-02-01T09:44:03Z",
    "author_association": "NONE",
    "body": "Ah, nice.\r\nThat seems to be the source of the \"2048\" value.\r\nAs far as I understand your fix should work as desired and not reduce a much higher OS limit to 2048 anymore.\r\n\r\nBut since we are at it:\r\nAs far as I can see at the end of this function it seems that half of the available file handles are reserved for \"networking and other stuff\":\r\nhttps://github.com/ethereum/go-ethereum/blob/c335821479db9930a98cbd48996f880c35a59797/cmd/utils/flags.go#L727\r\n\r\nMaybe this is also a bit excessive?\r\nBut then again, I have no idea how much is needed for the p2p networking...\r\n\r\nThanks for responding so fast and finding a probable solution to the problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362212127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362212516",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-362212516",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 362212516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIxMjUxNg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T09:44:19Z",
    "updated_at": "2018-02-01T09:44:19Z",
    "author_association": "MEMBER",
    "body": "I think the idea is to limit the database handles, and I'm guessing it's not to make the database go crazy with too many opened files. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362212516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362215145",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-362215145",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 362215145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIxNTE0NQ==",
    "user": {
      "login": "klelifo",
      "id": 6716903,
      "node_id": "MDQ6VXNlcjY3MTY5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6716903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klelifo",
      "html_url": "https://github.com/klelifo",
      "followers_url": "https://api.github.com/users/klelifo/followers",
      "following_url": "https://api.github.com/users/klelifo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klelifo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klelifo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klelifo/subscriptions",
      "organizations_url": "https://api.github.com/users/klelifo/orgs",
      "repos_url": "https://api.github.com/users/klelifo/repos",
      "events_url": "https://api.github.com/users/klelifo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klelifo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T09:54:03Z",
    "updated_at": "2018-02-01T09:55:31Z",
    "author_association": "NONE",
    "body": "Unfortunately I do not know nearly enough about the inner workings of the geth client to make any informed suggestion, but I can obeserve on my system that when starting the geth client it seems to open nearly every file in the chaindata directory:\r\n\r\n```\r\nlsof -p $(pidof geth) | wc -l\r\n25953\r\n```\r\n\r\n```\r\nls -al ~/.ethereum/geth/chaindata/ | wc -l\r\n26115\r\n```\r\nAt the moment when I executed the above commands the client was in the process of \"Upgrading chain index\".\r\n\r\nIf I understand it right. I need to have at least a ulimit setting for open files of double the number of files in the chaindata directory so that I don't get the \"too many open files\" error.\r\nCorrect?\r\n\r\nJust trying to understand how it all fits together ;)\r\n\r\nAgain. Thanks for taking the time to fix this!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362215145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411083196",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-411083196",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 411083196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTA4MzE5Ng==",
    "user": {
      "login": "nutmix",
      "id": 5080942,
      "node_id": "MDQ6VXNlcjUwODA5NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5080942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nutmix",
      "html_url": "https://github.com/nutmix",
      "followers_url": "https://api.github.com/users/nutmix/followers",
      "following_url": "https://api.github.com/users/nutmix/following{/other_user}",
      "gists_url": "https://api.github.com/users/nutmix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nutmix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nutmix/subscriptions",
      "organizations_url": "https://api.github.com/users/nutmix/orgs",
      "repos_url": "https://api.github.com/users/nutmix/repos",
      "events_url": "https://api.github.com/users/nutmix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nutmix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T14:48:00Z",
    "updated_at": "2018-08-07T14:48:00Z",
    "author_association": "NONE",
    "body": "This bug is still there in 1.8.13-stable-225171a4.\r\n\r\nWe are plagued by \"accept: Too many open files\" whenever we try to us the rpc apis. \r\n\r\nWe tried raising the proces and user limits to 32,000, but it always is limited to around 2000.\r\n\r\n```\r\ncat /proc/sys/fs/file-nr\r\n2112\t0\t3280354\r\n```\r\n\r\n```\r\ncat /proc/2160/limits | grep files\r\nMax open files            32000                32000                files     \r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411083196/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412228283",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16006#issuecomment-412228283",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16006",
    "id": 412228283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjIyODI4Mw==",
    "user": {
      "login": "abednarek-isearchive",
      "id": 28934916,
      "node_id": "MDQ6VXNlcjI4OTM0OTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/28934916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abednarek-isearchive",
      "html_url": "https://github.com/abednarek-isearchive",
      "followers_url": "https://api.github.com/users/abednarek-isearchive/followers",
      "following_url": "https://api.github.com/users/abednarek-isearchive/following{/other_user}",
      "gists_url": "https://api.github.com/users/abednarek-isearchive/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abednarek-isearchive/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abednarek-isearchive/subscriptions",
      "organizations_url": "https://api.github.com/users/abednarek-isearchive/orgs",
      "repos_url": "https://api.github.com/users/abednarek-isearchive/repos",
      "events_url": "https://api.github.com/users/abednarek-isearchive/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abednarek-isearchive/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T23:05:48Z",
    "updated_at": "2018-08-10T23:06:27Z",
    "author_association": "NONE",
    "body": "I've been gathering data on a local node using batches of async requests (getBalance,GetTransferCount). On my dev machine (Win10) i've been sending out async queries in batches of 10,000 at a time which take about 8 seconds to complete. No problems there. \r\n\r\nI ran the same code in the cloud on an Ubuntu 18.04 distro and have been getting tons of \"missing trie node\" errors on getBalance, GetTransferCount. Reducing batch size requests from 10,000 to 100 fixed the issue. After digging around I came across here and tantrum-junkie's workaround of bumping up the file limit (prlimit -n150000 -p $(pidof geth)) fixed the problem and I was able to make async requests in batch sizes of 10,000 again.\r\n\r\nI think when the open file limit is hit the error message of \"missing trie node\" is misleading. Maybe a file open error should be caught with an appropriate message returned?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412228283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
