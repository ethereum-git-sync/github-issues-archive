{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27627",
  "id": 1781866271,
  "node_id": "I_kwDOAOvK985qNR8f",
  "number": 27627,
  "title": "websocket read/write timeouts and ping interval should be customizable",
  "user": {
    "login": "jshufro",
    "id": 116244,
    "node_id": "MDQ6VXNlcjExNjI0NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jshufro",
    "html_url": "https://github.com/jshufro",
    "followers_url": "https://api.github.com/users/jshufro/followers",
    "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
    "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
    "organizations_url": "https://api.github.com/users/jshufro/orgs",
    "repos_url": "https://api.github.com/users/jshufro/repos",
    "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jshufro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-06-30T04:32:12Z",
  "updated_at": "2023-07-06T17:45:59Z",
  "closed_at": "2023-07-06T08:36:45Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm curious why these are asymmetric: https://github.com/ethereum/go-ethereum/blob/master/rpc/websocket.go#L38-L40\r\nIt seems to me writing and reading should have similar timeouts- an external service communicating with geth over a websocket will suffer the same limitations writing over the socket as reading from it, no?\r\n\r\nBeyond that, I wish they were configurable on an instance of `websocketCodec` and that configurability was bubbled up into [ethclient](https://pkg.go.dev/github.com/ethereum/go-ethereum/ethclient)\r\n\r\nI run a service that holds open an event subscription, and while I've dealt with needing to reconnect gracefully, it happens a bit too often for my linking, so it'd be nice if it could be tuned.\r\n\r\nethclient itself doesn't need the options, as it exposes its underlying [rpc.Client](https://pkg.go.dev/github.com/ethereum/go-ethereum@v1.12.0/rpc#Client)... which has nice support for custom http timeouts via `DialHTTPWithClient`, but no support for custom websocket ping timeouts/intervals\r\n\r\n# Rationale\r\n\r\nWhy should this feature exist?\r\n\r\n- It will improve the flexibility of the ethclient library\r\n\r\nWhat are the use-cases?\r\n\r\n- Not all hardware is created equal, and a 5/30 second write/read timeout may thrash on certain platforms \r\n\r\n# Implementation\r\n\r\nDo you have ideas regarding the implementation of this feature?\r\n\r\n - yes, perhaps similar to how an http.Client can be passed in, a websocket.Conn can be exposed up to the rpc.Client abstraction upon creation, or a partially instantiated one can be passed down\r\n\r\nAre you willing to implement this feature?\r\n\r\n... yeah ok",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1619190083",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27627#issuecomment-1619190083",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627",
    "id": 1619190083,
    "node_id": "IC_kwDOAOvK985gguFD",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-03T21:56:29Z",
    "updated_at": "2023-07-03T21:56:29Z",
    "author_association": "MEMBER",
    "body": "Since Felix is the original author, I'll defer to him as to why the read/write timeouts are not symmetric. I'm not sure.\r\n\r\n--\r\n\r\nAs for implementing the change I think it could make sense to add more websocket configuration parameters to `rpc.clientConfig`. Right now we accept a dialer from the upstream package, but since the keep-alive functionality is in our websocket-jsonCodec wrapper, it isn't expressive enough. Based on #21126 I don't think we will expose the websocket conn outright.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1619190083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1623227048",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27627#issuecomment-1623227048",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627",
    "id": 1623227048,
    "node_id": "IC_kwDOAOvK985gwHqo",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T08:36:45Z",
    "updated_at": "2023-07-06T08:36:45Z",
    "author_association": "MEMBER",
    "body": "As for why they are not symmetric: write is a local operation, pushing stuff into a websocket frame and ship off. Read timeout (pong) depends on the remote part doing something, therefore that deadline is longer. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1623227048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1623230807",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27627#issuecomment-1623230807",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627",
    "id": 1623230807,
    "node_id": "IC_kwDOAOvK985gwIlX",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T08:39:44Z",
    "updated_at": "2023-07-06T08:39:44Z",
    "author_association": "MEMBER",
    "body": "Making these configurable is not really meaningful. In all scenarios it should take semi-instant to do the transfers. Both 5 and 30 secs is a crazy long time. It's just about not implying anything about the remote implementation with the long timeout.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1623230807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1624084569",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27627#issuecomment-1624084569",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27627",
    "id": 1624084569,
    "node_id": "IC_kwDOAOvK985gzZBZ",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T17:45:59Z",
    "updated_at": "2023-07-06T17:45:59Z",
    "author_association": "NONE",
    "body": "I have a heatmap of how often I see i/o timeouts reported by my websocket connection:\r\n![image](https://github.com/ethereum/go-ethereum/assets/116244/ea35d13e-4a55-42ee-a158-10077fc88323)\r\n(please disregard the node names, the connection is between a go application and geth)\r\n\r\nI was hoping to see if an increased timeout helped the lodestar node, but I'm guessing something else is wrong. You're right, in that 30 seconds should be plenty, considering the application and geth are cotenant. I suppose I can build the application with a fork of the library and try to figure out what's going on here that way, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1624084569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
