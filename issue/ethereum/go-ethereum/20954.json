{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20954",
  "id": 604137085,
  "node_id": "MDU6SXNzdWU2MDQxMzcwODU=",
  "number": 20954,
  "title": "`--fakepow` flag is disregarded",
  "user": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-04-21T17:01:32Z",
  "updated_at": "2020-04-28T22:47:34Z",
  "closed_at": "2020-04-28T08:26:11Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.9.14`\r\nOS & Version: Linux\r\nCommit hash : ca22d076\r\n\r\n#### Expected behaviour\r\nEthash initialized in `FakePow` mode.\r\n\r\n#### Actual behaviour\r\nEthash initialized in normal mode.\r\n\r\n#### Steps to reproduce the behaviour\r\n```console\r\n> geth init --datadir /some/path/here\r\n...\r\n> geth --datadir /some/path/here --fakepow\r\n\r\nINFO [04-21|10:57:53.130] Starting Geth on Ethereum mainnet...\r\nINFO [04-21|10:57:53.130] Bumping default cache on mainnet         provided=1024 updated=4096\r\nINFO [04-21|10:57:53.131] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [04-21|10:57:53.131] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [04-21|10:57:53.132] Starting peer-to-peer node               instance=Geth/v1.9.14-unstable-0d6c9ca4-20200417/linux-xxxxx/go1.13.4\r\nINFO [04-21|10:57:53.132] Allocated trie memory caches             clean=614.00MiB dirty=1024.00MiB\r\nINFO [04-21|10:57:53.132] Allocated cache and file handles         database=/some/path/here/geth/chaindata cache=2.00GiB handles=262144\r\nINFO [04-21|10:57:53.151] Opened ancient database                  database=/some/path/here/geth/chaindata/ancient\r\nINFO [04-21|10:57:53.151] Initialised chain configuration          config=\"{ChainID: 1337 Homestead: 0 DAO: <nil> DAOSupport: false EIP150: 0 EIP155: 0 EIP158: 0 Byzantium: 0 Constantinople: 0 Petersburg: 0 Istanbul: 0, Muir Glacier: 0, Engine: ethash}\"\r\nINFO [04-21|10:57:53.151] Disk storage enabled for ethash caches   dir=/some/path/here/geth/ethash count=3\r\nINFO [04-21|10:57:53.151] Disk storage enabled for ethash DAGs     dir=/some/path/here/.ethash               count=2\r\nINFO [04-21|10:57:53.151] Initialising Ethereum protocol           versions=\"[65 64 63]\" network=1 dbversion=<nil>\r\n```",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/617570660",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20954#issuecomment-617570660",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954",
    "id": 617570660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzU3MDY2MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-22T06:06:12Z",
    "updated_at": "2020-04-22T06:06:12Z",
    "author_association": "MEMBER",
    "body": "Hmm, the `--fakepow` flag is mostly use to benchmark EVM runs / block imports without spending time on PoW verification. I'm not entirely sure it's wise to expose it to a live node.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/617570660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/617793318",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20954#issuecomment-617793318",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954",
    "id": 617793318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzc5MzMxOA==",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-22T13:53:46Z",
    "updated_at": "2020-04-22T14:36:18Z",
    "author_association": "MEMBER",
    "body": "If so, it might be helpful to make it clearer when `--fakepow` can be used, because the `help` print out indicates to me that it can be switched on for a live node. I'd be happy to submit an alternative PR which adds some clarification if desired.\r\n\r\nThe reason I'm trying to use it currently is that I'm trying to quickly sync a victim node to a certain block height, then expose different permutations of transaction announcements to benchmark some changes I am experimenting with in the mempool. Do you have a preferred method for modeling performance regressions of changes of the mempool? Naively, I expected the best entry point for test attacks would be over the eth wire protocol -- as it is agnostic to the adversary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/617793318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620458973",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20954#issuecomment-620458973",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954",
    "id": 620458973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDQ1ODk3Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T08:26:11Z",
    "updated_at": "2020-04-28T08:26:11Z",
    "author_association": "MEMBER",
    "body": "We don't want to add a 'generic' way to disable PoW for users. Anyone who is sufficiently \"advanced\" to research about attacks can easily disable the PoW by modifying the code, but we don't want it to wind up being a \"nifty trick to save some CPU\".  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620458973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620894172",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20954#issuecomment-620894172",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20954",
    "id": 620894172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDg5NDE3Mg==",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T22:45:29Z",
    "updated_at": "2020-04-28T22:47:34Z",
    "author_association": "MEMBER",
    "body": "@holiman, that makes sense. In that case, does it make sense to clarify in the usage dialog when `--fakepow` is a valid flag? Or are its uses becoming more minimal and it can just be left alone?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/620894172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
