{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24100",
  "id": 1077804275,
  "node_id": "I_kwDOAOvK985APfzz",
  "number": 24100,
  "title": "Listen to new blocks/txs/receipts being added",
  "user": {
    "login": "kosciolek",
    "id": 45483493,
    "node_id": "MDQ6VXNlcjQ1NDgzNDkz",
    "avatar_url": "https://avatars.githubusercontent.com/u/45483493?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kosciolek",
    "html_url": "https://github.com/kosciolek",
    "followers_url": "https://api.github.com/users/kosciolek/followers",
    "following_url": "https://api.github.com/users/kosciolek/following{/other_user}",
    "gists_url": "https://api.github.com/users/kosciolek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kosciolek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kosciolek/subscriptions",
    "organizations_url": "https://api.github.com/users/kosciolek/orgs",
    "repos_url": "https://api.github.com/users/kosciolek/repos",
    "events_url": "https://api.github.com/users/kosciolek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kosciolek/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-12-12T13:16:15Z",
  "updated_at": "2022-01-12T09:29:55Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'd like to push the chain into an external database, preferably as soon as new data comes to the node, and preferably with the fast/snap algorithm.\r\n\r\nCurrently, I've written a crude mechanism to achieve so, by injecting some code around this https://github.com/ethereum/go-ethereum/blob/72c2c0ae7e2332b08d3e1ebfe5f850a92e26e8a1/core/blockchain.go#L1595 since this the only point I found where I've got easy access to all blocks, transactions and receipts at once.\r\n\r\nThe problems with that are:\r\n* I suspect sooner or later the db will not be in sync the node, since the node might modify the chain later for some reasons (I'm not well acquainted with Ethereum, but I think transactions can be rollbacked?)\r\n* That part of code is executed only with the full sync algorithm, which is way too slow.\r\n\r\nPlease point me in the right direction. Which parts of code should I look at?\r\n\r\nJudging by console messages, the snap algorithm\r\n* first goes through InsertHeaderChain\r\nhttps://github.com/ethereum/go-ethereum/blob/72c2c0ae7e2332b08d3e1ebfe5f850a92e26e8a1/core/headerchain.go#L375 which inserts only block headers.\r\n* then it goes through InsertReceiptChain https://github.com/ethereum/go-ethereum/blob/72c2c0ae7e2332b08d3e1ebfe5f850a92e26e8a1/core/blockchain.go#L874 to complete the previously inserted headers with transaction and receipt data.\r\n\r\n* Could hooking into these functions solve my problem?\r\n* What mechanisms could potentially cause the database to become desynchronized?\r\n\r\nPS. Is is possible to hot reload during development? Currently I recompile the entire project after every change. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/991901597",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24100#issuecomment-991901597",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
    "id": 991901597,
    "node_id": "IC_kwDOAOvK9847Hzed",
    "user": {
      "login": "kosciolek",
      "id": 45483493,
      "node_id": "MDQ6VXNlcjQ1NDgzNDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45483493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kosciolek",
      "html_url": "https://github.com/kosciolek",
      "followers_url": "https://api.github.com/users/kosciolek/followers",
      "following_url": "https://api.github.com/users/kosciolek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kosciolek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kosciolek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kosciolek/subscriptions",
      "organizations_url": "https://api.github.com/users/kosciolek/orgs",
      "repos_url": "https://api.github.com/users/kosciolek/repos",
      "events_url": "https://api.github.com/users/kosciolek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kosciolek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-12T13:46:50Z",
    "updated_at": "2021-12-12T13:46:50Z",
    "author_association": "NONE",
    "body": "Sorry, looks like it added the docs label automatically. I didn't mean this :/ ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/991901597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993243676",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24100#issuecomment-993243676",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
    "id": 993243676,
    "node_id": "IC_kwDOAOvK9847M7Ic",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T07:41:42Z",
    "updated_at": "2021-12-14T07:41:42Z",
    "author_association": "MEMBER",
    "body": "In your place I wouldn't modify the code to get this data. You need to handle various cases (like re-orgs as you yourself mentioned). Re re-orgs: theoretically geth considers blocks that are 90,000 levels deep as \"un-reorgable\". But most common re-orgs are <10 levels deep.\r\n\r\nAnyway so to get the chain data you can just use the JSON-RPC [API](https://eth.wiki/json-rpc/API) of a live node. E.g. use `eth_getBlockByNumber(<num>, true)` to get the block and its transactions, and then `eth_getTransactionReceipt(<txHash>)` to get the receipt for each of those transactions.\r\n\r\nUnless that somehow doesn't meet your requirements?\r\n\r\n> PS. Is is possible to hot reload during development? Currently I recompile the entire project after every change.\r\n\r\nNo that's not possible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993243676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993444718",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24100#issuecomment-993444718",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
    "id": 993444718,
    "node_id": "IC_kwDOAOvK9847NsNu",
    "user": {
      "login": "kosciolek",
      "id": 45483493,
      "node_id": "MDQ6VXNlcjQ1NDgzNDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45483493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kosciolek",
      "html_url": "https://github.com/kosciolek",
      "followers_url": "https://api.github.com/users/kosciolek/followers",
      "following_url": "https://api.github.com/users/kosciolek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kosciolek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kosciolek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kosciolek/subscriptions",
      "organizations_url": "https://api.github.com/users/kosciolek/orgs",
      "repos_url": "https://api.github.com/users/kosciolek/repos",
      "events_url": "https://api.github.com/users/kosciolek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kosciolek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T11:25:27Z",
    "updated_at": "2021-12-14T11:25:49Z",
    "author_association": "NONE",
    "body": "@s1na I tried the JSON-RPC API already.\r\n\r\nMy geth config was as follows:\r\n```\r\n  geth:\r\n    build: ./geth\r\n    restart: unless-stopped\r\n    ports:\r\n      - \"30303:30303\"\r\n      - \"30303:30303/udp\"\r\n      - \"8545:8545\"\r\n      - \"8546:8546\"\r\n    volumes:\r\n      - chaindata:/chaindata\r\n    stop_signal: SIGINT\r\n    stop_grace_period: 2m\r\n    command:\r\n      # Don't sync if less than ~10gb of free space\r\n      - --datadir.minfreedisk=10000\r\n      # Index all transactions\r\n      - --txlookuplimit=0\r\n      - --http\r\n      - --http.api\r\n      - \"eth,net,web3\"\r\n      - --http.addr=0.0.0.0\r\n      - --http.vhosts=*\r\n      - --http.corsdomain=*\r\n      - --ws\r\n      - --ws.origins=*\r\n      - --ws.addr=0.0.0.0\r\n      - --ws.api\r\n      - \"eth,net,web3\"\r\n      - --graphql\r\n      - --graphql.corsdomain=*\r\n      - --graphql.vhosts=*\r\n      - --datadir\r\n      - \"/chaindata\"\r\n      # Megabytes of memory allocated to internal caching (default: 1024)\r\n      - --cache=4096\r\n      # Maximum number of network peers (network disabled if set to 0) (default: 25)\r\n      # - --maxpeers=100\r\n      - --lightkdf\r\n      # Blockchain sync mode (\"fast\", \"full\", or \"light\")\r\n      - --syncmode=fast\r\n      # Blockchain garbage collection mode (\"full\", \"archive\") (default: \"full\")\r\n      - --gcmode=archive\r\n    logging:\r\n      driver: \"json-file\"\r\n      options:\r\n        max-size: \"2m\"\r\n        max-file: \"10\"\r\n```\r\n\r\nUnfortunately it's proven way too slow, somehow.\r\n\r\nThe system worked like this:\r\n* Geth's syncing via snap or fast\r\n* Another program is fetching all blocks, from 0 to the last blocks, doing a few requests in parallel\r\n* The program starts falling behind geth, and the gap increases\r\n* After fetching 2-3 mill blocks (sometimes lower, sometimes higher), geth starts choking and even a single request takes a lot of time. It makes me think that it's expensive for geth to return old blocks, i.e. if it's already syncing block 8mill, but you request block 4mill, it takes a lot of time to dig it out. I had `txlookuplimit=0` and `gcmode=archive` though\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993444718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993587749",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24100#issuecomment-993587749",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
    "id": 993587749,
    "node_id": "IC_kwDOAOvK9847OPIl",
    "user": {
      "login": "kosciolek",
      "id": 45483493,
      "node_id": "MDQ6VXNlcjQ1NDgzNDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45483493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kosciolek",
      "html_url": "https://github.com/kosciolek",
      "followers_url": "https://api.github.com/users/kosciolek/followers",
      "following_url": "https://api.github.com/users/kosciolek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kosciolek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kosciolek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kosciolek/subscriptions",
      "organizations_url": "https://api.github.com/users/kosciolek/orgs",
      "repos_url": "https://api.github.com/users/kosciolek/repos",
      "events_url": "https://api.github.com/users/kosciolek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kosciolek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T14:18:54Z",
    "updated_at": "2021-12-14T14:18:54Z",
    "author_association": "NONE",
    "body": "Also, are blocks returned by the JSON-RPC API already solid, or they too might be changed at a later date?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993587749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993592987",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24100#issuecomment-993592987",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24100",
    "id": 993592987,
    "node_id": "IC_kwDOAOvK9847OQab",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T14:24:10Z",
    "updated_at": "2021-12-14T14:24:10Z",
    "author_association": "MEMBER",
    "body": "> After fetching 2-3 mill blocks (sometimes lower, sometimes higher), geth starts choking and even a single request takes a lot of time\r\n\r\nDoes this happen also if you let geth finish the sync first? Sync itself is a relatively expensive process. Btw you don't need `gcmode=archive` for getting the chain data.\r\n\r\n> Also, are blocks returned by the JSON-RPC API already solid, or they too might be changed at a later date?\r\n\r\nYes up until the most recent blocks. Recent blocks are more volatile.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/993592987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
