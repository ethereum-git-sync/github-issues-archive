{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23878",
  "id": 1049479594,
  "node_id": "I_kwDOAOvK984-jcmq",
  "number": 23878,
  "title": "pending debug_traceCall get error: required historical state unavailable (reexec=128)",
  "user": {
    "login": "huahuayu",
    "id": 1725060,
    "node_id": "MDQ6VXNlcjE3MjUwNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1725060?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/huahuayu",
    "html_url": "https://github.com/huahuayu",
    "followers_url": "https://api.github.com/users/huahuayu/followers",
    "following_url": "https://api.github.com/users/huahuayu/following{/other_user}",
    "gists_url": "https://api.github.com/users/huahuayu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/huahuayu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/huahuayu/subscriptions",
    "organizations_url": "https://api.github.com/users/huahuayu/orgs",
    "repos_url": "https://api.github.com/users/huahuayu/repos",
    "events_url": "https://api.github.com/users/huahuayu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/huahuayu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-11-10T07:18:26Z",
  "updated_at": "2022-06-12T21:02:48Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## environment\r\n\r\ngeth version: 1.10.11-stable\r\nGit Commit: 7231b3efb8095d3dd18d7164c3fa84d7705759d3\r\n\r\ngeth is synced to the latest block\r\n```\r\n/usr/local/bin/geth --syncmode=fast --datadir /data/eth/mainnet --http --http.api web3,eth,txpool,ethash,net,debug --http.corsdomain * --http.addr 0.0.0.0 --http.port 54102 --port 54103 --ws --ws.addr 0.0.0.0 --ws.origins * --ws.port 54104 --ws.api eth,net,web3,txpool,debug\r\n```\r\n\r\n## issue\r\n\r\nfirstly I subsrcibe newTx by \r\n\r\n```\r\nclient.RpcClient.EthSubscribe(context.Background(), ch, \"newPendingTransactions\")\r\n```\r\n\r\nthen, for each newTx I use `debug_traceCall` with `pending` option to trace the tx execution.\r\n\r\nbut get `historical state unavailable (reexec=128)` error\r\n\r\nsince I use `pending` option, it's not debugging trace an old tx (which is older than 128 blocks) so I expected I can get the trace result successfully.\r\n\r\n## how to reproduce\r\n\r\ngo.mod\r\n```\r\nrequire (\r\ngithub.com/ethereum/go-ethereum v1.10.11\r\n)\r\n```\r\n\r\ntest code\r\n```go\r\n\tlogConfig := vm.LogConfig{EnableMemory: true, DisableStack: true, DisableStorage: true, EnableReturnData: false, Debug: false}\r\n\terr = client.RpcClient.CallContext(ctx, &result, \"debug_traceCall\", arg, \"pending\", &tracers.TraceConfig{LogConfig: &logConfig, Tracer: &tracerOpt})\r\n```\r\n\r\nget error\r\n```\r\nhistorical state unavailable (reexec=128)\r\n```\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/965061312",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-965061312",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 965061312,
    "node_id": "IC_kwDOAOvK9845harA",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-10T11:57:33Z",
    "updated_at": "2021-11-10T11:57:33Z",
    "author_association": "MEMBER",
    "body": "I think what you want is to trace a pending transaction against the `latest` block, not `pending`. I.e. you want to know how the tx would execute as part of a (future) child of the last mined block.\r\n\r\nThat said I do get the same error when I try `traceCall` against `pending`. But not sure if there are any actual use-cases for that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/965061312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/965966960",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-965966960",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 965966960,
    "node_id": "IC_kwDOAOvK9845k3xw",
    "user": {
      "login": "huahuayu",
      "id": 1725060,
      "node_id": "MDQ6VXNlcjE3MjUwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1725060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huahuayu",
      "html_url": "https://github.com/huahuayu",
      "followers_url": "https://api.github.com/users/huahuayu/followers",
      "following_url": "https://api.github.com/users/huahuayu/following{/other_user}",
      "gists_url": "https://api.github.com/users/huahuayu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huahuayu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huahuayu/subscriptions",
      "organizations_url": "https://api.github.com/users/huahuayu/orgs",
      "repos_url": "https://api.github.com/users/huahuayu/repos",
      "events_url": "https://api.github.com/users/huahuayu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huahuayu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-11T03:59:21Z",
    "updated_at": "2021-11-11T04:02:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "hi @s1na thanks for the reply, if you read the [debug_traceCall](https://geth.ethereum.org/docs/rpc/ns-debug#debug_tracecall) document, search `pending` you will find the example. Same as other blockNumber params, you can specify either blockNumber or `latest` or `pending` for that param. \r\n\r\nI think `pending` is more accurate so I use it. Another reason is I don't have archive node, I think doing it in pending stat doesn't need the historical state, so it's good for me. That's the use case.\r\n\r\nWhat's more, if I use `pending` param in BSC `debug_traceCall` it's all good, no error. Since BSC is forked from ethereum, I think of course it will be work in ethereum, but I got `historical state unavailable (reexec=128)` error, so it's confusing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/965966960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966152244",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-966152244",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 966152244,
    "node_id": "IC_kwDOAOvK9845llA0",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-11T09:38:37Z",
    "updated_at": "2021-11-11T09:38:37Z",
    "author_association": "MEMBER",
    "body": "Looking through the BSC code base, they have the exact same implementation for traceCall as we do, so I don't see how it would work for them.\r\n\r\nI'm unsure though that how you're tying to do this is going to give you the result you're looking for. If you do a traceCall of a pending transaction on top of the pending block; that transaction might have already been included, so you tracing a call **on top** would be a double execution. I'd guess you're interested in the trace of the actually included tx in the pending block, not a double-call after the fact.\r\n\r\nAlso, the pending block is super volatile, are you sure you want to base anything on top of that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966152244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966154525",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-966154525",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 966154525,
    "node_id": "IC_kwDOAOvK9845llkd",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-11T09:42:08Z",
    "updated_at": "2021-11-11T09:42:08Z",
    "author_association": "MEMBER",
    "body": "Couldn't you do `debug.traceBlockByNumber(\"pending\")` if you are interested in the trace execution of transactions currently in the pending block? Or are you really wanting to trace **on top** of the pending transactions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966154525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966782960",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-966782960",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 966782960,
    "node_id": "IC_kwDOAOvK9845n-_w",
    "user": {
      "login": "huahuayu",
      "id": 1725060,
      "node_id": "MDQ6VXNlcjE3MjUwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1725060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huahuayu",
      "html_url": "https://github.com/huahuayu",
      "followers_url": "https://api.github.com/users/huahuayu/followers",
      "following_url": "https://api.github.com/users/huahuayu/following{/other_user}",
      "gists_url": "https://api.github.com/users/huahuayu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huahuayu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huahuayu/subscriptions",
      "organizations_url": "https://api.github.com/users/huahuayu/orgs",
      "repos_url": "https://api.github.com/users/huahuayu/repos",
      "events_url": "https://api.github.com/users/huahuayu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huahuayu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-12T03:05:14Z",
    "updated_at": "2021-11-15T15:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @karalabe I want to capture opportunities in mempool, I want the trace to be accurate and fast, the more the **BETTER**, so what's your suggestion, trace on pending tx or on the latest block?\r\n\r\nI created a repo for reproduce, hope this helps https://github.com/huahuayu/trace-pending\r\n\r\nAny review comment is appreciated, especially the performance issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/966782960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/969042726",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-969042726",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 969042726,
    "node_id": "IC_kwDOAOvK9845wmsm",
    "user": {
      "login": "huahuayu",
      "id": 1725060,
      "node_id": "MDQ6VXNlcjE3MjUwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1725060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huahuayu",
      "html_url": "https://github.com/huahuayu",
      "followers_url": "https://api.github.com/users/huahuayu/followers",
      "following_url": "https://api.github.com/users/huahuayu/following{/other_user}",
      "gists_url": "https://api.github.com/users/huahuayu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huahuayu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huahuayu/subscriptions",
      "organizations_url": "https://api.github.com/users/huahuayu/orgs",
      "repos_url": "https://api.github.com/users/huahuayu/repos",
      "events_url": "https://api.github.com/users/huahuayu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huahuayu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-15T15:47:05Z",
    "updated_at": "2021-11-15T15:48:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @karalabe have you tried it, it's 100% reproducible. Does it mean something is broken during the recent update?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/969042726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1051336422",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23878#issuecomment-1051336422",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23878",
    "id": 1051336422,
    "node_id": "IC_kwDOAOvK984-qh7m",
    "user": {
      "login": "piersy",
      "id": 5087847,
      "node_id": "MDQ6VXNlcjUwODc4NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5087847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piersy",
      "html_url": "https://github.com/piersy",
      "followers_url": "https://api.github.com/users/piersy/followers",
      "following_url": "https://api.github.com/users/piersy/following{/other_user}",
      "gists_url": "https://api.github.com/users/piersy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piersy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piersy/subscriptions",
      "organizations_url": "https://api.github.com/users/piersy/orgs",
      "repos_url": "https://api.github.com/users/piersy/repos",
      "events_url": "https://api.github.com/users/piersy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piersy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-25T22:53:33Z",
    "updated_at": "2022-02-25T22:53:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @karalabe & @huahuayu, looking at the code I don't see how the trace call api could have ever worked for the pending block.\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/7231b3efb8095d3dd18d7164c3fa84d7705759d3/eth/tracers/api.go#L792-L813\r\n\r\nIf the block is pending then `api.blockByNumber` will retrieve the snapshot block (pending block) from the miner, the state for that block (the snapshot state) is also held by the miner it hasn't been written to the chain as far as I'm aware. But then `TraceCall` proceeds to try and load the state for the block from the chain in `api.backend.StateAtBlock` and this can never work  because the chain hasn't had the snapshot block inserted yet. So then  the `historical state unavailable` error seems like a likely outcome.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1051336422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
