{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25571",
  "id": 1346143616,
  "node_id": "I_kwDOAOvK985QPIWA",
  "number": 25571,
  "title": "Is that correct algorithm to push the given node to nodesByDistance entries?",
  "user": {
    "login": "l0gank",
    "id": 108716871,
    "node_id": "U_kgDOBnrjRw",
    "avatar_url": "https://avatars.githubusercontent.com/u/108716871?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/l0gank",
    "html_url": "https://github.com/l0gank",
    "followers_url": "https://api.github.com/users/l0gank/followers",
    "following_url": "https://api.github.com/users/l0gank/following{/other_user}",
    "gists_url": "https://api.github.com/users/l0gank/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/l0gank/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/l0gank/subscriptions",
    "organizations_url": "https://api.github.com/users/l0gank/orgs",
    "repos_url": "https://api.github.com/users/l0gank/repos",
    "events_url": "https://api.github.com/users/l0gank/events{/privacy}",
    "received_events_url": "https://api.github.com/users/l0gank/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-08-22T10:03:27Z",
  "updated_at": "2022-09-01T08:55:23Z",
  "closed_at": "2022-09-01T08:55:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am guessing this function is not correct on file `table.go` in path `p2p/discover`\r\n```\r\nfunc (h *nodesByDistance) push(n *node, maxElems int) {\r\n\tix := sort.Search(len(h.entries), func(i int) bool {\r\n\t\treturn enode.DistCmp(h.target, h.entries[i].ID(), n.ID()) > 0\r\n\t})\r\n\tif len(h.entries) < maxElems {\r\n\t\th.entries = append(h.entries, n)\r\n\t}\r\n\tif ix == len(h.entries) {\r\n\t\t// farther away than all nodes we already have.\r\n\t\t// if there was room for it, the node is now the last element.\r\n\t} else {\r\n\t\t// slide existing entries down to make room\r\n\t\t// this will overwrite the entry we just appended.\r\n\t\tcopy(h.entries[ix+1:], h.entries[ix:])\r\n\t\th.entries[ix] = n\r\n\t}\r\n}\r\n```\r\nThe `ix` indicates the index of first entry which is not close to target than the given node. This is for sorting entries by distance.\r\n\r\nBut this function is appending the given node at last index.\r\n\r\nI hope someone to answer to elaborate this function.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1233968171",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25571#issuecomment-1233968171",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25571",
    "id": 1233968171,
    "node_id": "IC_kwDOAOvK985JjNwr",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T08:55:19Z",
    "updated_at": "2022-09-01T08:55:19Z",
    "author_association": "MEMBER",
    "body": "> But this function is appending the given node at last index.\r\n\r\nYes, at first it does so : \r\n\r\n```golang\r\nif len(h.entries) < maxElems {\r\n\t\th.entries = append(h.entries, n)\r\n\t}\r\n```\r\nBut then, in case it should be somewhere else, it stashes it where it should be:\r\n```golang\r\n\t\t// slide existing entries down to make room\r\n\t\t// this will overwrite the entry we just appended.\r\n\t\tcopy(h.entries[ix+1:], h.entries[ix:])\r\n\t\th.entries[ix] = n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1233968171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
