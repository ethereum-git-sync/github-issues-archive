{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/15930",
  "id": 290246224,
  "node_id": "MDU6SXNzdWUyOTAyNDYyMjQ=",
  "number": 15930,
  "title": "'No contract code at given address' happens when calling the auto generated DeployToken function.",
  "user": {
    "login": "cylof22",
    "id": 18643610,
    "node_id": "MDQ6VXNlcjE4NjQzNjEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/18643610?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cylof22",
    "html_url": "https://github.com/cylof22",
    "followers_url": "https://api.github.com/users/cylof22/followers",
    "following_url": "https://api.github.com/users/cylof22/following{/other_user}",
    "gists_url": "https://api.github.com/users/cylof22/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cylof22/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cylof22/subscriptions",
    "organizations_url": "https://api.github.com/users/cylof22/orgs",
    "repos_url": "https://api.github.com/users/cylof22/repos",
    "events_url": "https://api.github.com/users/cylof22/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cylof22/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 41,
  "created_at": "2018-01-21T04:30:17Z",
  "updated_at": "2022-10-23T10:33:33Z",
  "closed_at": "2019-09-17T09:39:44Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The returned err is nil, and the given address is also ok. How calling any member function will see the 'No contract code at given address'. The geth version is 1.7.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930/reactions",
    "total_count": 8,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 3,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386168978",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-386168978",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 386168978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE2ODk3OA==",
    "user": {
      "login": "natemurthy",
      "id": 1788878,
      "node_id": "MDQ6VXNlcjE3ODg4Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1788878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natemurthy",
      "html_url": "https://github.com/natemurthy",
      "followers_url": "https://api.github.com/users/natemurthy/followers",
      "following_url": "https://api.github.com/users/natemurthy/following{/other_user}",
      "gists_url": "https://api.github.com/users/natemurthy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natemurthy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natemurthy/subscriptions",
      "organizations_url": "https://api.github.com/users/natemurthy/orgs",
      "repos_url": "https://api.github.com/users/natemurthy/repos",
      "events_url": "https://api.github.com/users/natemurthy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natemurthy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T01:27:46Z",
    "updated_at": "2018-05-03T01:29:20Z",
    "author_association": "NONE",
    "body": "I'm observing something similar following the example on\r\n\r\nhttps://github.com/ethereum/go-ethereum/wiki/Native-DApps:-Go-bindings-to-Ethereum-contracts\r\n\r\nFirst I noticed that the [`token.go`](https://gist.github.com/karalabe/5839509295afa4f7e2215bc4116c7a8f) provided by @karalabe breaks on `master@1da3302`:\r\n\r\n```\r\n./token.go:121:30: not enough arguments in call to bind.NewBoundContract\r\n\thave (common.Address, abi.ABI, bind.ContractCaller, bind.ContractTransactor)\r\n\twant (common.Address, abi.ABI, bind.ContractCaller, bind.ContractTransactor, bind.ContractFilterer)\r\n```\r\n\r\nSo I generated my own Go bindings using `abigen` and using that I ran the snippet (borrowed from the link above):\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\r\n\t\"github.com/ethereum/go-ethereum/common\"\r\n\t\"github.com/ethereum/go-ethereum/ethclient\"\r\n)\r\n\r\nfunc main() {\r\n\t// Create an IPC based RPC connection to a remote node\r\n\tconn, err := ethclient.Dial(\"/Users/nate/Library/Ethereum/geth.ipc\")\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to connect to the Ethereum client: %v\", err)\r\n\t}\r\n\t// Instantiate the contract and display its name\r\n\ttoken, err := NewToken(common.HexToAddress(\"0x21e6fc92f93c8a1bb41e2be64b4e1f88a54d3576\"), conn)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to instantiate a Token contract: %v\", err)\r\n\t}\r\n\tname, err := token.Name(nil)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to retrieve token name: %v\", err)\r\n\t}\r\n\tfmt.Println(\"Token name:\", name)\r\n}\r\n```\r\n\r\nwhich results in:\r\n\r\n```\r\n$ go run snippet.go token.go                                   \r\n2018/05/01 23:31:36 Failed to retrieve token name: no contract code at given address\r\nexit status 1\r\n```\r\n\r\nThe address is the \"foundation's Unicorn token contract deployed to testnet\" (not entirely sure what that means yet). My immediate question, then, is what address should I use and how do I load this contract into that address?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386168978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386182350",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-386182350",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 386182350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE4MjM1MA==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T03:22:24Z",
    "updated_at": "2018-05-03T03:22:24Z",
    "author_association": "NONE",
    "body": "Dear Karalabe,\nDo you mind if I deploy requested contract?\nI am also interested to learn .sol and language.\n\nSeems Ethereum approved possible cooperation?\nTests approved by devs as far as I ..\n\n\n\nOn Thu, 3 May 2018 07:29 Nathan Murthy, <notifications@github.com> wrote:\n\n> I'm observing something similar following the example on\n>\n>\n> https://github.com/ethereum/go-ethereum/wiki/Native-DApps:-Go-bindings-to-Ethereum-contracts\n>\n> First I noticed that the token.go provided by @karalabe\n> <https://github.com/karalabe> breaks on master@1da3302:\n>\n> ./token.go:121:30: not enough arguments in call to bind.NewBoundContract\n> \thave (common.Address, abi.ABI, bind.ContractCaller, bind.ContractTransactor)\n> \twant (common.Address, abi.ABI, bind.ContractCaller, bind.ContractTransactor, bind.ContractFilterer)\n>\n> So I generated my own Go bindings using abigen and using that I run the\n> snippet (borrowed from the link above):\n>\n> package main\n> import (\n> \t\"fmt\"\n> \t\"log\"\n>\n> \t\"github.com/ethereum/go-ethereum/common\"\n> \t\"github.com/ethereum/go-ethereum/ethclient\"\n> )\n> func main() {\n> \t// Create an IPC based RPC connection to a remote node\n> \tconn, err := ethclient.Dial(\"/Users/nate/Library/Ethereum/geth.ipc\")\n> \tif err != nil {\n> \t\tlog.Fatalf(\"Failed to connect to the Ethereum client: %v\", err)\n> \t}\n> \t// Instantiate the contract and display its name\n> \ttoken, err := NewToken(common.HexToAddress(\"0x21e6fc92f93c8a1bb41e2be64b4e1f88a54d3576\"), conn)\n> \tif err != nil {\n> \t\tlog.Fatalf(\"Failed to instantiate a Token contract: %v\", err)\n> \t}\n> \tname, err := token.Name(nil)\n> \tif err != nil {\n> \t\tlog.Fatalf(\"Failed to retrieve token name: %v\", err)\n> \t}\n> \tfmt.Println(\"Token name:\", name)\n> }\n>\n> which results in:\n>\n> $ go run snippet.go token.go\n> 2018/05/01 23:31:36 Failed to retrieve token name: no contract code at given address\n> exit status 1\n>\n> The address is the \"foundation's Unicorn token contract deployed to\n> testnet\" (not entirely sure what that means yet). My immediate question,\n> then, is what address should I use and how do I load this contract into\n> that address?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-386168978>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/Ac3rNUuQlV9RwxAtJNqbonSEaWc6PMsiks5tul1dgaJpZM4RlsXk>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386182350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/392192999",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-392192999",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 392192999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE5Mjk5OQ==",
    "user": {
      "login": "fabdarice",
      "id": 2358008,
      "node_id": "MDQ6VXNlcjIzNTgwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2358008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fabdarice",
      "html_url": "https://github.com/fabdarice",
      "followers_url": "https://api.github.com/users/fabdarice/followers",
      "following_url": "https://api.github.com/users/fabdarice/following{/other_user}",
      "gists_url": "https://api.github.com/users/fabdarice/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fabdarice/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fabdarice/subscriptions",
      "organizations_url": "https://api.github.com/users/fabdarice/orgs",
      "repos_url": "https://api.github.com/users/fabdarice/repos",
      "events_url": "https://api.github.com/users/fabdarice/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fabdarice/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T21:33:04Z",
    "updated_at": "2018-05-25T21:33:04Z",
    "author_association": "NONE",
    "body": "My solution was to do \r\n`auth.GasLimit = 1000000`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/392192999/reactions",
      "total_count": 13,
      "+1": 4,
      "-1": 9,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/461967693",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-461967693",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 461967693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTk2NzY5Mw==",
    "user": {
      "login": "ansermino",
      "id": 14164624,
      "node_id": "MDQ6VXNlcjE0MTY0NjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/14164624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ansermino",
      "html_url": "https://github.com/ansermino",
      "followers_url": "https://api.github.com/users/ansermino/followers",
      "following_url": "https://api.github.com/users/ansermino/following{/other_user}",
      "gists_url": "https://api.github.com/users/ansermino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ansermino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ansermino/subscriptions",
      "organizations_url": "https://api.github.com/users/ansermino/orgs",
      "repos_url": "https://api.github.com/users/ansermino/repos",
      "events_url": "https://api.github.com/users/ansermino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ansermino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T22:24:10Z",
    "updated_at": "2019-02-08T22:24:10Z",
    "author_association": "NONE",
    "body": "Any progress on this? Has anyone identified where the problem is? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/461967693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/473613560",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-473613560",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 473613560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzYxMzU2MA==",
    "user": {
      "login": "yekai1003",
      "id": 18655716,
      "node_id": "MDQ6VXNlcjE4NjU1NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18655716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yekai1003",
      "html_url": "https://github.com/yekai1003",
      "followers_url": "https://api.github.com/users/yekai1003/followers",
      "following_url": "https://api.github.com/users/yekai1003/following{/other_user}",
      "gists_url": "https://api.github.com/users/yekai1003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yekai1003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yekai1003/subscriptions",
      "organizations_url": "https://api.github.com/users/yekai1003/orgs",
      "repos_url": "https://api.github.com/users/yekai1003/repos",
      "events_url": "https://api.github.com/users/yekai1003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yekai1003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-17T03:46:33Z",
    "updated_at": "2019-03-17T03:46:33Z",
    "author_association": "NONE",
    "body": "```\r\npragma solidity^0.5.0;\r\n\r\ncontract pdbank {\r\n    address public  owner;\r\n    mapping(address=>uint256) public balances;\r\n    uint256 public totalAmount;\r\n    string public bankName;\r\n    constructor(string memory _bankName) public  {\r\n        owner = msg.sender;\r\n        bankName = _bankName;\r\n    }\r\n    function deposit() public payable {\r\n        //do nothing\r\n        totalAmount += msg.value;\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n    function withdraw(uint256 _amount) public payable {\r\n        if(balances[msg.sender] > _amount) {\r\n            balances[msg.sender]  -=  _amount;  \r\n            msg.sender.transfer(_amount);\r\n            totalAmount -= _amount;\r\n        }\r\n    }\r\n}\r\n```\r\n`\r\nfunc DeployPdbank() (common.Address, error) {\r\n\tvar contractaddr common.Address\r\n\tauth, err := MakeAuth(\"0x70c53a4c94ccce9ce56effbfcb89b221f986cd41\", \"123\")\r\n\tif err != nil {\r\n\t\tfmt.Println(\"failed to makeAuth\", err)\r\n\t\treturn contractaddr, err\r\n\t}\r\n\tauth.GasLimit = 300000\r\n\tauth.GasPrice = 100\r\n\tfmt.Printf(\"%+v,,,%s\\n\", auth, auth.From.Hex())\r\n\tcontractaddr, tcs, pb, err := contracts.DeployPdbank(auth, testclient, \"niaofei\")\r\n\tif err != nil {\r\n\t\tfmt.Println(\"failed to deloy \", err)\r\n\t\treturn contractaddr, err\r\n\t}\r\n\r\n\tfmt.Println(tcs.ChainId(), tcs.Hash().Hex(), tcs.Nonce())\r\n\tfmt.Println(contractaddr.Hex())\r\n\ttime.Sleep(time.Second * 14)\r\n\r\n\tfmt.Println(pb.BankName(nil))\r\n\treturn contractaddr, err\r\n}\r\n`\r\nI  have  get the same  problem!  Why?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/473613560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/474143577",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-474143577",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 474143577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDE0MzU3Nw==",
    "user": {
      "login": "thanasik",
      "id": 6022002,
      "node_id": "MDQ6VXNlcjYwMjIwMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6022002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thanasik",
      "html_url": "https://github.com/thanasik",
      "followers_url": "https://api.github.com/users/thanasik/followers",
      "following_url": "https://api.github.com/users/thanasik/following{/other_user}",
      "gists_url": "https://api.github.com/users/thanasik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thanasik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thanasik/subscriptions",
      "organizations_url": "https://api.github.com/users/thanasik/orgs",
      "repos_url": "https://api.github.com/users/thanasik/repos",
      "events_url": "https://api.github.com/users/thanasik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thanasik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T23:43:57Z",
    "updated_at": "2019-03-18T23:43:57Z",
    "author_association": "NONE",
    "body": "I'm encountering this error as well (on a private network), but only when I try binding immediately after confirming I have the transaction hash containing the local contract, otherwise if I wait a bit, it works. Could this be a race condition between how the state and chain data is updated?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/474143577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475416639",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-475416639",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 475416639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTQxNjYzOQ==",
    "user": {
      "login": "sahirug",
      "id": 14038293,
      "node_id": "MDQ6VXNlcjE0MDM4Mjkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14038293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sahirug",
      "html_url": "https://github.com/sahirug",
      "followers_url": "https://api.github.com/users/sahirug/followers",
      "following_url": "https://api.github.com/users/sahirug/following{/other_user}",
      "gists_url": "https://api.github.com/users/sahirug/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sahirug/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sahirug/subscriptions",
      "organizations_url": "https://api.github.com/users/sahirug/orgs",
      "repos_url": "https://api.github.com/users/sahirug/repos",
      "events_url": "https://api.github.com/users/sahirug/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sahirug/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-21T21:50:47Z",
    "updated_at": "2019-03-21T21:50:47Z",
    "author_association": "NONE",
    "body": "> I'm encountering this error as well (on a private network), but only when I try binding immediately after confirming I have the transaction hash containing the local contract, otherwise if I wait a bit, it works. Could this be a race condition between how the state and chain data is updated?\r\n\r\nHow do you \"wait a bit\"? I am running into this issue as well. Im using private Ethereum network made in Docker",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475416639/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475545528",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-475545528",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 475545528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTU0NTUyOA==",
    "user": {
      "login": "yekai1003",
      "id": 18655716,
      "node_id": "MDQ6VXNlcjE4NjU1NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18655716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yekai1003",
      "html_url": "https://github.com/yekai1003",
      "followers_url": "https://api.github.com/users/yekai1003/followers",
      "following_url": "https://api.github.com/users/yekai1003/following{/other_user}",
      "gists_url": "https://api.github.com/users/yekai1003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yekai1003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yekai1003/subscriptions",
      "organizations_url": "https://api.github.com/users/yekai1003/orgs",
      "repos_url": "https://api.github.com/users/yekai1003/repos",
      "events_url": "https://api.github.com/users/yekai1003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yekai1003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T09:11:59Z",
    "updated_at": "2019-03-22T09:11:59Z",
    "author_association": "NONE",
    "body": "You can get eth.Transaction by hash.The status signed the contract has deployed sucessed!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475545528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475547517",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-475547517",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 475547517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTU0NzUxNw==",
    "user": {
      "login": "csplawn918",
      "id": 47176521,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MTc2NTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/47176521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csplawn918",
      "html_url": "https://github.com/csplawn918",
      "followers_url": "https://api.github.com/users/csplawn918/followers",
      "following_url": "https://api.github.com/users/csplawn918/following{/other_user}",
      "gists_url": "https://api.github.com/users/csplawn918/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csplawn918/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csplawn918/subscriptions",
      "organizations_url": "https://api.github.com/users/csplawn918/orgs",
      "repos_url": "https://api.github.com/users/csplawn918/repos",
      "events_url": "https://api.github.com/users/csplawn918/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csplawn918/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2019-03-22T09:18:50Z",
    "updated_at": "2019-03-22T09:18:50Z",
    "author_association": "NONE",
    "body": "Please help me understand what you meant by that you can get each\ntransaction by hash do you mean I can\nReceive public balance\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/475547517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/477012628",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-477012628",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 477012628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzAxMjYyOA==",
    "user": {
      "login": "yekai1003",
      "id": 18655716,
      "node_id": "MDQ6VXNlcjE4NjU1NzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18655716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yekai1003",
      "html_url": "https://github.com/yekai1003",
      "followers_url": "https://api.github.com/users/yekai1003/followers",
      "following_url": "https://api.github.com/users/yekai1003/following{/other_user}",
      "gists_url": "https://api.github.com/users/yekai1003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yekai1003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yekai1003/subscriptions",
      "organizations_url": "https://api.github.com/users/yekai1003/orgs",
      "repos_url": "https://api.github.com/users/yekai1003/repos",
      "events_url": "https://api.github.com/users/yekai1003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yekai1003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T07:23:30Z",
    "updated_at": "2019-03-27T07:23:30Z",
    "author_association": "NONE",
    "body": "> Please help me understand what you meant by that you can get each transaction by hash do you mean I can Receive public balance\r\n\r\nWhen you deploy a contract, you can get the transaction hash, which can help you query the success of the transaction.This error is usually caused by the failure of contract deployment.You can use eth.getTranaction(\"hash\") on the geth console!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/477012628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/511735255",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-511735255",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 511735255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTczNTI1NQ==",
    "user": {
      "login": "jjjachyty",
      "id": 7439418,
      "node_id": "MDQ6VXNlcjc0Mzk0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7439418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jjjachyty",
      "html_url": "https://github.com/jjjachyty",
      "followers_url": "https://api.github.com/users/jjjachyty/followers",
      "following_url": "https://api.github.com/users/jjjachyty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jjjachyty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jjjachyty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jjjachyty/subscriptions",
      "organizations_url": "https://api.github.com/users/jjjachyty/orgs",
      "repos_url": "https://api.github.com/users/jjjachyty/repos",
      "events_url": "https://api.github.com/users/jjjachyty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jjjachyty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T09:14:19Z",
    "updated_at": "2019-07-16T09:14:19Z",
    "author_association": "NONE",
    "body": "> > Please help me understand what you meant by that you can get each transaction by hash do you mean I can Receive public balance\r\n> \r\n> When you deploy a contract, you can get the transaction hash, which can help you query the success of the transaction.This error is usually caused by the failure of contract deployment.You can use eth.getTranaction(\"hash\") on the geth console!\r\n\r\nim sure the tx was successed in my case !  @yekai1003 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/511735255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/512080163",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-512080163",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 512080163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjA4MDE2Mw==",
    "user": {
      "login": "jjjachyty",
      "id": 7439418,
      "node_id": "MDQ6VXNlcjc0Mzk0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7439418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jjjachyty",
      "html_url": "https://github.com/jjjachyty",
      "followers_url": "https://api.github.com/users/jjjachyty/followers",
      "following_url": "https://api.github.com/users/jjjachyty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jjjachyty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jjjachyty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jjjachyty/subscriptions",
      "organizations_url": "https://api.github.com/users/jjjachyty/orgs",
      "repos_url": "https://api.github.com/users/jjjachyty/repos",
      "events_url": "https://api.github.com/users/jjjachyty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jjjachyty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T02:50:53Z",
    "updated_at": "2019-07-17T02:50:53Z",
    "author_association": "NONE",
    "body": "i test on nodejs with web3 can use it,why go client has this error?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/512080163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/512172740",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-512172740",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 512172740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE3Mjc0MA==",
    "user": {
      "login": "jjjachyty",
      "id": 7439418,
      "node_id": "MDQ6VXNlcjc0Mzk0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7439418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jjjachyty",
      "html_url": "https://github.com/jjjachyty",
      "followers_url": "https://api.github.com/users/jjjachyty/followers",
      "following_url": "https://api.github.com/users/jjjachyty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jjjachyty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jjjachyty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jjjachyty/subscriptions",
      "organizations_url": "https://api.github.com/users/jjjachyty/orgs",
      "repos_url": "https://api.github.com/users/jjjachyty/repos",
      "events_url": "https://api.github.com/users/jjjachyty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jjjachyty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T09:14:51Z",
    "updated_at": "2019-07-17T09:14:51Z",
    "author_association": "NONE",
    "body": "i found this bug maybe geth & go-client & solidity version inconsistency\r\nuse solidity 4.x replace 5.x just fine",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/512172740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532144309",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-532144309",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 532144309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjE0NDMwOQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T09:37:58Z",
    "updated_at": "2019-09-17T09:37:58Z",
    "author_association": "MEMBER",
    "body": "These are probably different issues. \r\n1. The original concern was about contract deployment -- the error might be that while the tx was accepted, it has not yet been mined at the time the user tries to call the contract. \r\n2. For @natemurthy , it might be that 1) your node is not synced, or 2) the address is on a testnet (but you are on mainnet) -- please verify that the contract actually exist. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532144309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532144875",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-532144875",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 532144875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjE0NDg3NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T09:39:33Z",
    "updated_at": "2019-09-17T09:39:33Z",
    "author_association": "MEMBER",
    "body": "@cylof22 The original issue seems to be that the contract was not yet mined. After deploying, you need to wait until it's actually included on the chain by a miner.\r\n\r\n@natemurthy The second issue refers to attaching to an already deployed contract. Please make sure that the Geth instance you are connecting to is on the correct network and is synced.\r\n\r\n@yekai1003 Sleeping 14 seconds is a bit of a shot in the dark. You need to track the transaction and wait until it's mined. Contract deployment will return the hash, just track when it's included.\r\n\r\n@karysto Same as first, you need to wait until the transaction is mined. If you're in dev mode, it should be fast, but there's still some tiny time window when it's not yet mined. If you are on a non-instamining chain, you need o track the transaction when it's mined before you can interact with it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532144875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/576093652",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-576093652",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 576093652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjA5MzY1Mg==",
    "user": {
      "login": "satb",
      "id": 2095367,
      "node_id": "MDQ6VXNlcjIwOTUzNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2095367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satb",
      "html_url": "https://github.com/satb",
      "followers_url": "https://api.github.com/users/satb/followers",
      "following_url": "https://api.github.com/users/satb/following{/other_user}",
      "gists_url": "https://api.github.com/users/satb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satb/subscriptions",
      "organizations_url": "https://api.github.com/users/satb/orgs",
      "repos_url": "https://api.github.com/users/satb/repos",
      "events_url": "https://api.github.com/users/satb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T03:40:20Z",
    "updated_at": "2020-01-20T04:22:48Z",
    "author_association": "NONE",
    "body": "I ran into the same issue of \"no contract code at given address\".  I crossed checked that the transaction and the contract exist and there are several blocks after the block that included the contract creation transaction. I am running a private version of geth. \r\n\r\nI have the whole setup ready and can provide any details required. \r\n\r\nOr, you can try it out or point out the mistake in the code below. I generated the go bindings that allow me to do things like \"NewErc20(tokenAddress, client)\"\r\n\r\nI am using solidity 0.6.1 and a very simple standard erc20 test token\r\n\r\nIn the code below, for the test, deployContract will work just fine but getBalance will say - \"no contract at given address\" \r\n\r\nAnd for cross checking, if I run the following in the geth console, it doesn't result in an error (the contract was deployed using the code below and the balance checked on the geth console)\r\n\r\n> var contract = eth.contract(abi).at('0x12CF63a69B337aaD94beD2339fd5D8B29aE5Ddc0')\r\nundefined\r\n> contract.balanceOf('0xb16910653dDAc532d4D67729377B9E895C7f361b')\r\n0\r\n\r\nAnother confusing thing is the balance isn't showing the tokens that should have been transferred to the address that created the contract.\r\n\r\n```\r\nfunc deployContract(client *ethclient.Client, account eth.Account) string {\r\n\tprivateKey, err := crypto.HexToECDSA(account.PrivateKey)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Failed converting to ecdsca signature\", err, account.PrivateKey)\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tpublicKey := privateKey.Public()\r\n\tpublicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\r\n\tif !ok {\r\n\t\tlog.Fatal(\"cannot assert type: publicKey is not of type *ecdsa.PublicKey\")\r\n\t}\r\n\r\n\tfromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\r\n\tnonce, err := client.PendingNonceAt(context.Background(), fromAddress)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tgasPrice, err := client.SuggestGasPrice(context.Background())\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tauth := bind.NewKeyedTransactor(privateKey)\r\n\tauth.Nonce = big.NewInt(int64(nonce))\r\n\tauth.Value = big.NewInt(0)     // in wei\r\n\tauth.GasLimit = uint64(300000) // in units\r\n\tauth.GasPrice = gasPrice\r\n\r\n\taddress, tx, instance, err := DeployErc20(auth, client)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tfmt.Println(address.Hex())   // 0x147B8eb97fD247D06C4006D269c90C1908Fb5D54\r\n\tfmt.Println(tx.Hash().Hex()) // 0xdae8ba5444eefdc99f4d45cd0c4f24056cba6a02cefbf78066ef9f4188ff7dc0\r\n\t_ = instance\r\n\treturn address.Hex()\r\n}\r\n\r\n\r\nfunc getBalance(client *ethclient.Client, contractAddress string, addr string) {\r\n\ttokenAddress := common.HexToAddress(contractAddress)\r\n\tinstance, err := NewErc20(tokenAddress, client)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err, \"Cannot create instance of erc20 instance for contract\", contractAddress)\r\n\t}\r\n\r\n\tname, err := instance.Name(&bind.TransactOpts{})\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\r\n\taddress := common.HexToAddress(addr)\r\n\tbal, err := instance.BalanceOf(&bind.TransactOpts{}, address)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err, \". Cannot fetch balance from erc20 instance for contractAddress \", contractAddress, \"at address \", addr)\r\n\t}\r\n\r\n\tsymbol, err := instance.Symbol(&bind.TransactOpts{})\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tdecimals, err := instance.Decimals(&bind.TransactOpts{})\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tbal1, _ := bal.MarshalJSON()\r\n\tname1, _ := name.MarshalJSON()\r\n\tsymbol1, _ := symbol.MarshalJSON()\r\n\tdecimals1, _ := decimals.MarshalJSON()\r\n\tfmt.Printf(\"wei: %s\\n\", bal1)\r\n\tfmt.Printf(\"name: %s\\n\", name1)\r\n\tfmt.Printf(\"symbol: %s\\n\", symbol1)\r\n\tfmt.Printf(\"decimals: %v\\n\", decimals1)\r\n\r\n}\r\n\r\nfunc TestDeployContract(t *testing.T) {\r\n\tclient1Url := \"http://127.0.0.1:8101\"\r\n\tclient1, err1 := ethclient.Dial(client1Url)\r\n\tif err1 != nil {\r\n\t\tt.Log(err1)\r\n\t\tt.FailNow()\r\n\t}\r\n\tmalice := eth.CreateAccount()\r\n\tfmt.Println(\"Created addresses for malice\", malice.Address)\r\n\teth.SetEtherBase(client1Url, malice.Address)\r\n\tfmt.Println(\"Starting mining\")\r\n\teth.StartMining(client1Url, 1)\r\n\t//sleep 20 seconds \r\n\tfmt.Println(\"Waiting for 20 seconds\")\r\n\ttime.Sleep(20 * time.Second)\r\n\tfmt.Println(\"After 20 seconds...\")\r\n\tmaliceBalance := eth.GetBalance(client1, malice.Address)\r\n\tif maliceBalance == 0 {\r\n\t\tt.Log(\"Malice has no balance to do anything\")\r\n\t\tt.FailNow()\r\n\t}\r\n\r\n\tcontractAddress := deployContract(client1, malice)\r\n\r\n\tfmt.Println(\"Contract created, waiting for 20 seconds - \", contractAddress)\r\n\ttime.Sleep(20 * time.Second)\r\n\r\n\tgetBalance(client1, contractAddress, malice.Address)\r\n}\r\n\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/576093652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1008292963",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1008292963",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1008292963,
    "node_id": "IC_kwDOAOvK9848GVRj",
    "user": {
      "login": "regnull",
      "id": 9659700,
      "node_id": "MDQ6VXNlcjk2NTk3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9659700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/regnull",
      "html_url": "https://github.com/regnull",
      "followers_url": "https://api.github.com/users/regnull/followers",
      "following_url": "https://api.github.com/users/regnull/following{/other_user}",
      "gists_url": "https://api.github.com/users/regnull/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/regnull/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/regnull/subscriptions",
      "organizations_url": "https://api.github.com/users/regnull/orgs",
      "repos_url": "https://api.github.com/users/regnull/repos",
      "events_url": "https://api.github.com/users/regnull/events{/privacy}",
      "received_events_url": "https://api.github.com/users/regnull/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-09T12:57:38Z",
    "updated_at": "2022-01-09T13:53:03Z",
    "author_association": "NONE",
    "body": "I think the problem is still there. @fabdarice had the right answer. In my experience, if the gas limit is too low while deploying the contract, it will be still deployed, and I will be able to call the contract functions that update the state. I can see the transaction included in a block, and I can get back the transaction details. However, when I call a function to return a value, I get \"no contract code at given address\" error. Increasing the gas limit solves this problem. \r\n\r\nIf I look at the transaction details, I can see the difference in gas and cost, the data seems to be the same.\r\n\r\nI'm running this on a private blockchain, configured like so: https://github.com/regnull/eth-bc\r\n\r\nThis is the contract: https://github.com/regnull/ubchain/blob/master/contracts/key_registry.sol\r\n\r\n\"no contract code at given address\" happens when the gas limit is 30000\r\n\r\nThe error goes away if I increase the gas limit to 1000000\r\n\r\n $solc --version\r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.8.11+commit.d7f03943.Darwin.appleclang\r\n\r\n\r\n $abigen --version\r\nabigen version 1.10.15-stable\r\n\r\n $go version\r\ngo version go1.17.5 darwin/amd64\r\n\r\n $geth version\r\nGeth\r\nVersion: 1.10.15-stable\r\nArchitecture: amd64\r\nGo Version: go1.17.5\r\nOperating System: darwin\r\nGOPATH=",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1008292963/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1017222308",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1017222308",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1017222308,
    "node_id": "IC_kwDOAOvK9848oZSk",
    "user": {
      "login": "wxl2578",
      "id": 10614881,
      "node_id": "MDQ6VXNlcjEwNjE0ODgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10614881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wxl2578",
      "html_url": "https://github.com/wxl2578",
      "followers_url": "https://api.github.com/users/wxl2578/followers",
      "following_url": "https://api.github.com/users/wxl2578/following{/other_user}",
      "gists_url": "https://api.github.com/users/wxl2578/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wxl2578/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wxl2578/subscriptions",
      "organizations_url": "https://api.github.com/users/wxl2578/orgs",
      "repos_url": "https://api.github.com/users/wxl2578/repos",
      "events_url": "https://api.github.com/users/wxl2578/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wxl2578/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-20T08:19:17Z",
    "updated_at": "2022-01-20T08:19:17Z",
    "author_association": "NONE",
    "body": "The problem I have is that the contract address is the main network, and the client is connected to the test network, for example:\r\nMainnet usdt: 0xdac17f958d2ee523a2206206994597c13d831ec7\r\nRinkeby usdt: 0x740B06779562fDC9E10a8E3553D7cBCb5DEBA836\r\n\r\nIf the client is connected to Rinkeby and the usdt contract address uses 0xdac17f958d2ee523a2206206994597c13d831ec7, an error will occur.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1017222308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047634387",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1047634387",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1047634387,
    "node_id": "IC_kwDOAOvK984-caHT",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T10:13:21Z",
    "updated_at": "2022-02-22T10:17:03Z",
    "author_association": "NONE",
    "body": "I too am running into this, with the `SimulatedBackend`. it looks like it deploys but I cannot call any fns on the (possibly) deployed contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047634387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047637389",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1047637389",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1047637389,
    "node_id": "IC_kwDOAOvK984-ca2N",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T10:16:33Z",
    "updated_at": "2022-02-22T10:16:33Z",
    "author_association": "NONE",
    "body": "And, yes, I made sure to call `backend.Commit()`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047637389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047660464",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1047660464",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1047660464,
    "node_id": "IC_kwDOAOvK984-cgew",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T10:41:29Z",
    "updated_at": "2022-02-22T10:41:29Z",
    "author_association": "NONE",
    "body": "I also stepped through code manually, called `backend.BlockChain().Transactions()`, and walked through each tx. It definitely is there, but when it looks in the statedb, nothing is there at the given address. ChainID issues maybe? 🤷‍♂️ ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1047660464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057687931",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057687931",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057687931,
    "node_id": "IC_kwDOAOvK984_Cwl7",
    "user": {
      "login": "jim380",
      "id": 31609693,
      "node_id": "MDQ6VXNlcjMxNjA5Njkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31609693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim380",
      "html_url": "https://github.com/jim380",
      "followers_url": "https://api.github.com/users/jim380/followers",
      "following_url": "https://api.github.com/users/jim380/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim380/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim380/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim380/subscriptions",
      "organizations_url": "https://api.github.com/users/jim380/orgs",
      "repos_url": "https://api.github.com/users/jim380/repos",
      "events_url": "https://api.github.com/users/jim380/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim380/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T05:39:05Z",
    "updated_at": "2022-03-03T05:39:05Z",
    "author_association": "NONE",
    "body": "ran into this issue with the `SimulatedBackend` today also.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057687931/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057691012",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057691012",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057691012,
    "node_id": "IC_kwDOAOvK984_CxWE",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T05:41:02Z",
    "updated_at": "2022-03-03T05:41:02Z",
    "author_association": "NONE",
    "body": "I feel less alone now 😃 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057691012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057713744",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057713744",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057713744,
    "node_id": "IC_kwDOAOvK984_C25Q",
    "user": {
      "login": "jim380",
      "id": 31609693,
      "node_id": "MDQ6VXNlcjMxNjA5Njkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31609693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim380",
      "html_url": "https://github.com/jim380",
      "followers_url": "https://api.github.com/users/jim380/followers",
      "following_url": "https://api.github.com/users/jim380/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim380/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim380/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim380/subscriptions",
      "organizations_url": "https://api.github.com/users/jim380/orgs",
      "repos_url": "https://api.github.com/users/jim380/repos",
      "events_url": "https://api.github.com/users/jim380/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim380/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:16:25Z",
    "updated_at": "2022-03-03T06:16:25Z",
    "author_association": "NONE",
    "body": "It works perfectly fine with a simple, generic changeOwner/getOwner contract. I wonder why that is. @deitch what tool did you use to generate the abi and bin files?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057713744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057720343",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057720343",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057720343,
    "node_id": "IC_kwDOAOvK984_C4gX",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:28:31Z",
    "updated_at": "2022-03-03T06:28:31Z",
    "author_association": "NONE",
    "body": "I am pretty sure it was all via `abigen`, as in `abigen --sol=./contract.sol --pkg=somepkg --out=somepkg/contract.go`. But it is possible that I pulled it off of an already-deployed contract on the chain. I can try both ways and see.\r\n\r\nA few questions:\r\n\r\n1. @jim380 do you mind posting some of your sample code with the `changeOwner`/`getOwner`, both the contract and the go code? I would like to try it.\r\n2. Would it matter? Would the generated abi and bin files not be the same?\r\n3. Is there any way to walk it through, debug what it is doing?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057720343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057722894",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057722894",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057722894,
    "node_id": "IC_kwDOAOvK984_C5IO",
    "user": {
      "login": "jim380",
      "id": 31609693,
      "node_id": "MDQ6VXNlcjMxNjA5Njkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31609693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim380",
      "html_url": "https://github.com/jim380",
      "followers_url": "https://api.github.com/users/jim380/followers",
      "following_url": "https://api.github.com/users/jim380/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim380/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim380/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim380/subscriptions",
      "organizations_url": "https://api.github.com/users/jim380/orgs",
      "repos_url": "https://api.github.com/users/jim380/repos",
      "events_url": "https://api.github.com/users/jim380/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim380/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:33:58Z",
    "updated_at": "2022-03-03T06:33:58Z",
    "author_association": "NONE",
    "body": "```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract Owner {\r\n\r\n    address private owner;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n    \r\n    constructor() {\r\n        owner = msg.sender; \r\n        emit OwnerSet(address(0), owner);\r\n    }\r\n\r\n    function changeOwner(address newOwner) public isOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n}\r\n```\r\n\r\nThis is the dummy code I tried. Works just fine. My suspicion is that there's something wrong with the abi and bin file we generated before generating the actual bindings. @deitch ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057722894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057723640",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057723640",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057723640,
    "node_id": "IC_kwDOAOvK984_C5T4",
    "user": {
      "login": "jim380",
      "id": 31609693,
      "node_id": "MDQ6VXNlcjMxNjA5Njkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31609693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim380",
      "html_url": "https://github.com/jim380",
      "followers_url": "https://api.github.com/users/jim380/followers",
      "following_url": "https://api.github.com/users/jim380/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim380/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim380/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim380/subscriptions",
      "organizations_url": "https://api.github.com/users/jim380/orgs",
      "repos_url": "https://api.github.com/users/jim380/repos",
      "events_url": "https://api.github.com/users/jim380/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim380/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:35:37Z",
    "updated_at": "2022-03-03T06:35:37Z",
    "author_association": "NONE",
    "body": "@deitch you are EE from Columbia too? EE Columbia SEAS '17 here. Small world.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057723640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057725141",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057725141",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057725141,
    "node_id": "IC_kwDOAOvK984_C5rV",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:38:36Z",
    "updated_at": "2022-03-03T06:38:36Z",
    "author_association": "NONE",
    "body": "Really small world! I assume you found me on LinkedIn? Send an invite?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057725141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057725783",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057725783",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057725783,
    "node_id": "IC_kwDOAOvK984_C51X",
    "user": {
      "login": "jim380",
      "id": 31609693,
      "node_id": "MDQ6VXNlcjMxNjA5Njkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31609693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim380",
      "html_url": "https://github.com/jim380",
      "followers_url": "https://api.github.com/users/jim380/followers",
      "following_url": "https://api.github.com/users/jim380/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim380/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim380/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim380/subscriptions",
      "organizations_url": "https://api.github.com/users/jim380/orgs",
      "repos_url": "https://api.github.com/users/jim380/repos",
      "events_url": "https://api.github.com/users/jim380/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim380/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T06:40:02Z",
    "updated_at": "2022-03-03T06:40:10Z",
    "author_association": "NONE",
    "body": "> Really small world! I assume you found me on LinkedIn? Send an invite?\r\n\r\nnah. Just stalked your github profile a bit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057725783/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057749473",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15930#issuecomment-1057749473",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15930",
    "id": 1057749473,
    "node_id": "IC_kwDOAOvK984_C_nh",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-03T07:22:17Z",
    "updated_at": "2022-03-03T07:22:17Z",
    "author_association": "NONE",
    "body": "@jim380 did you have a comment to the effect of:\r\n\r\n> If I try to look up the hash the deploy tx spits out, it's not there!\r\n\r\nI cannot find it, but that was exactly the issue I had.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1057749473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
