{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23210",
  "id": 944686743,
  "node_id": "MDU6SXNzdWU5NDQ2ODY3NDM=",
  "number": 23210,
  "title": "StaticNodes / TrustedNodes useless in PoA Setup",
  "user": {
    "login": "hickscorp",
    "id": 822933,
    "node_id": "MDQ6VXNlcjgyMjkzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hickscorp",
    "html_url": "https://github.com/hickscorp",
    "followers_url": "https://api.github.com/users/hickscorp/followers",
    "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
    "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
    "organizations_url": "https://api.github.com/users/hickscorp/orgs",
    "repos_url": "https://api.github.com/users/hickscorp/repos",
    "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hickscorp/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-07-14T18:24:49Z",
  "updated_at": "2022-07-22T11:55:04Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Background\r\n\r\nWe are running a set of sealers and nodes in a docker swarm. Upon restarting the cluster, discovery between nodes doesn't work - so we have to add each node and sealer to each other node and sealer.\r\n\r\nInitially (and when we were running Geth 1.8) we had an extra container, in charge of connecting to the HTTP RPC, querying each node, and registering it with all others using their HTTP RPC as well. The reason for this is that docker swarm doesn't guarantee that an IP address will be the same for the same container - so our extra container had a script to \"scrape\" IP addresses and building `enode://` URLS to distribute across the nodes.\r\n\r\n## Problem Statement\r\n\r\nMore recently, we updated to Geth 1.10 and were pleasantly surprised when we discovered that `enode://` specifications can now accept DNS names (so we wouldn't need this scraper container). We tried and having an `enode://...@dns_name@nodiscover=1` works great.\r\nSo we decided that instead of having a \"scraping service\" in an extra container, we would instead connect our cluster using `static-nodes.json` (which didn't work, apparently deprecated) and then using a `geth.toml` file.\r\nAt this point, our TOML file was pretty much looking like this:\r\n\r\n```toml\r\n[Node.P2P]\r\nNoDiscovery = true\r\nStaticNodes = [enode1, enode2, etc.]\r\nTrustedNodes = []\r\n```\r\n\r\nUnfortunately, this attempt failed short because Geth refuses to boot if any of the `StaticNodes` / `TrustedNodes` is unreachable - so there's a bit of a catch-22 situation here when restarting the whole cluster.\r\n> Note that we tried using either / both `StaticNodes` and `TrustedNodes`.\r\n\r\n## Suggestion 1\r\n\r\nIt would be quite nice to have these `StaticNodes` and / or `TrustedNodes` act as a warning rather than a `FATAL` error - this way the node would boot, fail to contact the nodes, and retry later on.\r\n\r\n## Current State of Things\r\n\r\nWe didn't stop just here. We made a script such as this one:\r\n\r\n```js\r\nvar peers = [ ...all of our enodes... ];\r\n\r\n// This function connects to all peers listed in the `peers` variable.\r\nfunction connectPeers() {\r\n  return peers.map(function (peer) {\r\n    return {\r\n      peer: peer,\r\n      addPeer: admin.addPeer(peer),\r\n      addTrustedPeer: admin.addTrustedPeer(peer)\r\n    };\r\n  });\r\n};\r\n\r\n// --- Execution. ---\r\n\r\nconnectPeers();\r\n```\r\n\r\nWe were hopeful that there would somehow be an option to tell `Geth` to run this script. We discovered that we cannot really do that, unless we use `geth console` or `geth attach` - which doesn't work in our case since we still would need to run this manually after the cluster has started.\r\n\r\n## Suggestion 2\r\n\r\nMaybe allow for a script to be executed when `geth` started without `console` / `attach`, so that `admin.addPeer` / `admin.addTrustedPeer` could be used.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/880398952",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23210#issuecomment-880398952",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
    "id": 880398952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDM5ODk1Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T05:15:22Z",
    "updated_at": "2021-07-15T05:15:22Z",
    "author_association": "MEMBER",
    "body": "This seems odd to me. Could you post the error message you are getting? Static/trusted nodes are merely suggestions. They should not result in any errors if they are offline. My best guess is that parsing the enode IDs fail, which should be apparent from the error message.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/880398952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/880545249",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23210#issuecomment-880545249",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
    "id": 880545249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDU0NTI0OQ==",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T09:30:50Z",
    "updated_at": "2021-07-15T09:37:36Z",
    "author_association": "NONE",
    "body": "@karalabe thanks a lot for your help.\r\n\r\nI know for a fact that the parsing goes well. The message is:\r\n\r\n`Fatal: /root/geth.toml, line 2: (p2p.Config.StaticNodes) lookup node1-new on 127.0.0.11:53: no such host`\r\nAfter which geth exits.\r\n\r\nEDIT: Just FYI I have found a workaround - sleeping for 5 seconds before booting geth. This way, it gives 5s for all the containers to spin up. Geth crashes a few times, the containers are restarted, and when a happy coincidence of all the nodes being up happens, things connect.\r\nBut I really think that the \"trying to connect to the nodes specified in the TOML file\" should not be a `Fatal`, but a `Warning` and let Geth boot as usual and retry later...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/880545249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/892577839",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23210#issuecomment-892577839",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
    "id": 892577839,
    "node_id": "IC_kwDOAOvK9841M6gv",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T11:22:05Z",
    "updated_at": "2021-08-04T11:22:05Z",
    "author_association": "NONE",
    "body": "Bump - any chance that connecting to peers specified in `StaticNodes` / `TrustedNodes` could gracefully be a warning and retried rather than a boot error?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/892577839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1190354557",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23210#issuecomment-1190354557",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
    "id": 1190354557,
    "node_id": "IC_kwDOAOvK985G8159",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T14:24:58Z",
    "updated_at": "2022-07-20T14:24:58Z",
    "author_association": "NONE",
    "body": "Bump?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1190354557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1192495653",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23210#issuecomment-1192495653",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23210",
    "id": 1192495653,
    "node_id": "IC_kwDOAOvK985HFAol",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T11:55:04Z",
    "updated_at": "2022-07-22T11:55:04Z",
    "author_association": "NONE",
    "body": "Anyone please? Is it that I didn't phrase the issue correctly, or that there isn't any interest in addressing it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1192495653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
