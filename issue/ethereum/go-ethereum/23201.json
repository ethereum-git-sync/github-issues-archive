{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23201",
  "id": 942660335,
  "node_id": "MDU6SXNzdWU5NDI2NjAzMzU=",
  "number": 23201,
  "title": "Delete stale encoded object value in level db?",
  "user": {
    "login": "james-ray",
    "id": 26137182,
    "node_id": "MDQ6VXNlcjI2MTM3MTgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26137182?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/james-ray",
    "html_url": "https://github.com/james-ray",
    "followers_url": "https://api.github.com/users/james-ray/followers",
    "following_url": "https://api.github.com/users/james-ray/following{/other_user}",
    "gists_url": "https://api.github.com/users/james-ray/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/james-ray/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/james-ray/subscriptions",
    "organizations_url": "https://api.github.com/users/james-ray/orgs",
    "repos_url": "https://api.github.com/users/james-ray/repos",
    "events_url": "https://api.github.com/users/james-ray/events{/privacy}",
    "received_events_url": "https://api.github.com/users/james-ray/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-07-13T03:27:11Z",
  "updated_at": "2021-07-13T12:38:49Z",
  "closed_at": "2021-07-13T12:38:49Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nWhy should this feature exist? \r\nThe patriack trie uses prefix-tree to search the key, I think there are two scenarios:\r\n1. the key is irrelevant to the data of the leaf node\r\n2. the key is the hash of the encoded leaf node value\r\nIs it possible to add a special bit flag for the second case, and it some field value in the leaf node changes, the whole old node can be deleted in DB.\r\n\r\n\r\nWhat are the use-cases?\r\n\r\nFor example, there is a mapping in the contract:\r\nmapping(address => Pet)) userPetMap;\r\n\r\nstruct Pet{\r\n uint256 petID;\r\n uint8 length;\r\n uint256 type;\r\n bytes name;\r\n}\r\n\r\nI don't know if my understanding is correct, I think the query needs two searches in the patriack tree,\r\nfirst, the tree searches the address to find the leaf node, which is the hash of the pet struct instance.\r\nsecond, the tree searches the hash to find the pet struct instance value.\r\nIf the pet grows bigger, we modify its length, the old object value and its hash still exist in DB, and I think we can delete the old hash and object in this case.\r\n\r\n# Implementation\r\n\r\nDo you have ideas regarding the implementation of this feature?\r\nAre you willing to implement this feature?",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/878750538",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23201#issuecomment-878750538",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23201",
    "id": 878750538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODc1MDUzOA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-13T03:32:27Z",
    "updated_at": "2021-07-13T03:32:46Z",
    "author_association": "MEMBER",
    "body": "Now you can use the offline state pruner to delete the stale data. Check `geth snapshot prune-state -h` for more details.\r\nI am working on the runtime state pruner but it's more complicated(and requires the state scheme change) so it's not ready yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/878750538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
