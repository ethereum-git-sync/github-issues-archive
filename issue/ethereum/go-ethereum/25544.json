{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25544",
  "id": 1342951477,
  "node_id": "I_kwDOAOvK985QC9A1",
  "number": 25544,
  "title": "Allow `evm t8n` to generate traces to stdout or to a known filename",
  "user": {
    "login": "hmijail",
    "id": 4139546,
    "node_id": "MDQ6VXNlcjQxMzk1NDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hmijail",
    "html_url": "https://github.com/hmijail",
    "followers_url": "https://api.github.com/users/hmijail/followers",
    "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
    "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
    "organizations_url": "https://api.github.com/users/hmijail/orgs",
    "repos_url": "https://api.github.com/users/hmijail/repos",
    "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hmijail/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-08-18T11:17:56Z",
  "updated_at": "2022-12-20T23:40:00Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nThis is about the `evm t8n` tool. \r\n\r\nEVM traces can be huge; some of the Common Tests generate multi-GB traces.\r\nThis complicates logistics, particularly if one is starting work on the trace and only the beginning of the trace would be enough.\r\n\r\nIt would be useful to be able to pipe the traces out of `evm t8n`, either from stdout (in a clean JSONL way) or from a named pipe. That way, another program can consume the pipe in typical unix fashion and block/kill the producer as needed, without needing to run the whole test or store the huge trace.\r\n\r\nCurrently this can't be done because `evm t8n --trace` only writes to a file, and the file's name is the transaction hash; so we don't know what filename to use in `mkfifo`. \r\n\r\n\r\n# Implementation\r\n\r\nHaving an option to choose the trace filename would fix this.\r\nIf multiple JSONL files are needed because there are multiple transactions, then maybe adding a counter might be enough. (filename1.jsonl, filename2.jsonl, etc)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219416242",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219416242",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219416242,
    "node_id": "IC_kwDOAOvK985IrtCy",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T12:11:58Z",
    "updated_at": "2022-08-18T12:11:58Z",
    "author_association": "MEMBER",
    "body": "Are you aware that exactly this is already supported, via `evm --json statetest <statetest.json>` ? The inputs for `t8n` and `statetest` are not identical, but pretty close. The `statetest` feature of `evm`, and the line-by-line streaming json output is used by evm-fuzzers to fuzz against nethermind / besu etc. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219416242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219440140",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219440140",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219440140,
    "node_id": "IC_kwDOAOvK985Iry4M",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T12:36:22Z",
    "updated_at": "2022-08-18T12:36:22Z",
    "author_association": "NONE",
    "body": "That's what I tried, and the stderr in `statetest` is close to what I want, but it doesn't allow me to select a fork, a d,g,v value, etc. So I'd have to implement quite a bit of logic to deal with that.\r\n\r\nSo I thought to use `t8n` instead and drive it from retesteth. But then I lose the stderr traces.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219440140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219469736",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219469736",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219469736,
    "node_id": "IC_kwDOAOvK985Ir6Go",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T13:05:42Z",
    "updated_at": "2022-08-18T13:05:42Z",
    "author_association": "MEMBER",
    "body": "> but it doesn't allow me to select a fork, a d,g,v value, etc. \r\n\r\nYou can do it like this example from goevmlab: https://github.com/holiman/goevmlab/blob/master/evms/testdata/statetest1.json . Make the test contain one test only. Set the `d,g,v` as you desire. Set a `post` section for only the fork you are interested in. The hash can be set to `0x0000000000000000000000000000000000000000000000000000000000000000` -- the client will say \"oh no test error, stateroot wrong\" but you can ignore that.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219469736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219470518",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219470518",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219470518,
    "node_id": "IC_kwDOAOvK985Ir6S2",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T13:06:30Z",
    "updated_at": "2022-08-18T13:06:30Z",
    "author_association": "MEMBER",
    "body": "I mean, I'm fine with making `t8n` support a more flexible trace output, sure, just want to let you know about the alternatives :) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219470518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219482589",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219482589",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219482589,
    "node_id": "IC_kwDOAOvK985Ir9Pd",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T13:18:08Z",
    "updated_at": "2022-08-18T13:18:08Z",
    "author_association": "NONE",
    "body": "Thank you for the idea, but that sounds rather like going in the direction I'd like to avoid: do custom processing to most tests (with attendant format interpretation, tracking changes, etc) instead of ... just using them to generate traces. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219482589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219880499",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1219880499",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1219880499,
    "node_id": "IC_kwDOAOvK985IteYz",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T19:40:20Z",
    "updated_at": "2022-08-18T19:40:20Z",
    "author_association": "MEMBER",
    "body": "I am up for t8n tool to support ranged vmtrace output. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219880499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1233959030",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1233959030",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1233959030,
    "node_id": "IC_kwDOAOvK985JjLh2",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T08:48:49Z",
    "updated_at": "2022-09-01T08:48:49Z",
    "author_association": "MEMBER",
    "body": "> If multiple JSONL files are needed because there are multiple transactions, then maybe adding a counter might be enough. (filename1.jsonl, filename2.jsonl, etc)\r\n\r\nThis is a good suggestion. I'll add a switch for that. We'll play with it a bit",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1233959030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1316639910",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1316639910",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1316639910,
    "node_id": "IC_kwDOAOvK985OelSm",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-16T09:04:06Z",
    "updated_at": "2022-11-16T09:04:06Z",
    "author_association": "MEMBER",
    "body": "I've tested this a bit now. So, if I just do `mkfifo /tmp/mypipe`, then listen while also executing the `evm t8n`, then I get the output:\r\n```\r\n[user@work tmp]$ cat < mypipe\r\n{\"pc\":0,\"op\":96,\"gas\":\"0x5f58ef8\",\"gasCost\":\"0x3\",\"memSize\":0,\"stack\":[],\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\"}\r\n{\"pc\":2,\"op\":64,\"gas\":\"0x5f58ef5\",\"gasCost\":\"0x14\",\"memSize\":0,\"stack\":[\"0x1\"],\"depth\":1,\"refund\":0,\"opName\":\"BLOCKHASH\"}\r\n{\"pc\":3,\"op\":0,\"gas\":\"0x5f58ee1\",\"gasCost\":\"0x0\",\"memSize\":0,\"stack\":[\"0xdac58aa524e50956d0c0bae7f3f8bb9d35381365d07804dd5b48a5a297c06af4\"],\"depth\":1,\"refund\":0,\"opName\":\"STOP\"}\r\n{\"output\":\"\",\"gasUsed\":\"0x17\",\"time\":100979}\r\n```\r\n(In this example, I modded the lookup so it \"opened\" `/tmp/mypipe` instead of `trace-<index>-<hash>.jsonl`). \r\n\r\n\r\nSince the filenames are possible to figure out in advance, is there anything that needs to be done here? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1316639910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353137848",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1353137848",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1353137848,
    "node_id": "IC_kwDOAOvK985Qpz64",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-15T14:01:22Z",
    "updated_at": "2022-12-15T14:01:22Z",
    "author_association": "NONE",
    "body": "Sorry for the late answer, I went on a long holiday and I'm slowly coming back to context...\r\n\r\nI don't understand the \"I modded the lookup\" line, what do you mean?\r\n\r\nAs for the filenames being \"possible to figure out in advance\", what is the advantage of having the hash in the name? I'd say it only makes life difficult for the consumer. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353137848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353161723",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1353161723",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1353161723,
    "node_id": "IC_kwDOAOvK985Qp5v7",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-15T14:15:42Z",
    "updated_at": "2022-12-15T14:22:54Z",
    "author_association": "NONE",
    "body": "Anyway, I guess I can just search/poll the directory for entries with the expected initial substring and ignore the hash. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353161723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353804597",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1353804597",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1353804597,
    "node_id": "IC_kwDOAOvK985QsWs1",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-15T22:36:58Z",
    "updated_at": "2022-12-15T22:36:58Z",
    "author_association": "NONE",
    "body": "Sorry, no, I didn't think it through. Having to calculate the hash to know what filename to expect was the actual problem I described when I opened this issue. \r\n\r\nI would like to drive 'evm t8n' t8n from retesteth while catching the traces into a pipe. Retesteth allows me to run tests without knowing almost anything about them - just the name is enough. Until here, great. \r\nBut now, if I want to prepare a pipe, I need to parse the test, decide the test case inside that applies, deal with RLP and hashing...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1353804597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1359455862",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1359455862",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1359455862,
    "node_id": "IC_kwDOAOvK985RB6Z2",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T14:33:49Z",
    "updated_at": "2022-12-20T14:33:49Z",
    "author_association": "MEMBER",
    "body": "> I don't understand the \"I modded the lookup\" line, what do you mean?\r\n\r\nI meant that when I first created the file \"from the outside\", via `mkfifo` in my case, then `t8n` happily wrote into the file (which was in fact a pipe). So I could conclude that it is possible to pre-create pipes and have t8n write into them. \r\n\r\n\r\nSo instead of having `trace-<index>-<hash>.jsonl`, doing `trace-<index>.jsonl`, that would solve your case? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1359455862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1359460748",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1359460748",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1359460748,
    "node_id": "IC_kwDOAOvK985RB7mM",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T14:36:12Z",
    "updated_at": "2022-12-20T14:36:12Z",
    "author_association": "MEMBER",
    "body": "> So instead of having trace-<index>-<hash>.jsonl, doing trace-<index>.jsonl, that would solve your case?\r\n\r\nStill, seems messy to me. So you would figure out how many pipes you need, pre-create them then run t8n, and read the trace-output while it's executing. \r\n\r\n\r\nWhy not just run t8n, and then slurp up the files it spat out, using a glob-pattern for `trace-*`. ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1359460748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1360478904",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25544#issuecomment-1360478904",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25544",
    "id": 1360478904,
    "node_id": "IC_kwDOAOvK985RF0K4",
    "user": {
      "login": "hmijail",
      "id": 4139546,
      "node_id": "MDQ6VXNlcjQxMzk1NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4139546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmijail",
      "html_url": "https://github.com/hmijail",
      "followers_url": "https://api.github.com/users/hmijail/followers",
      "following_url": "https://api.github.com/users/hmijail/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmijail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmijail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmijail/subscriptions",
      "organizations_url": "https://api.github.com/users/hmijail/orgs",
      "repos_url": "https://api.github.com/users/hmijail/repos",
      "events_url": "https://api.github.com/users/hmijail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmijail/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T23:40:00Z",
    "updated_at": "2022-12-20T23:40:00Z",
    "author_association": "NONE",
    "body": "> Why not just run t8n, and then slurp up the files it spat out, using a glob-pattern for trace-*. ?\r\n\r\nBecause that means waiting until t8n finishes running. But my use case is that I want to stop the run the moment I detect a problem. Some traces are many GB long, so waiting to the end is a waste of time and space.\r\n\r\n> So you would figure out how many pipes you need, pre-create them then run t8n, and read the trace-output while it's executing.\r\n\r\nNo need to figure the number. It's easy to create 10 fifos with the potential names (transaction-{1..10}.jsonl), use them as they come alive and delete them all at the end. \r\n\r\nBut worth noting, there's less than 20 tests containing more than 1 transaction in 1 block, vs thousands of tests with a single transaction per block. So dealing with a single trace is the main case to think of. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1360478904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
