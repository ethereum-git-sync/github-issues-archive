{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22342",
  "id": 810563611,
  "node_id": "MDU6SXNzdWU4MTA1NjM2MTE=",
  "number": 22342,
  "title": "Feature request: implement debug_accountAt (as implemented by turbo-geth)",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-02-17T21:48:00Z",
  "updated_at": "2022-03-01T16:00:57Z",
  "closed_at": "2022-03-01T16:00:56Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Requested feature\r\n\r\nAdd the `debug_accountAt` debugging RPC method [recently added by Turbo-Geth](https://github.com/ledgerwatch/turbo-geth/pull/1487).  This new debugging RPC method allows for getting account info, other than storage, at a transaction boundary.\r\n\r\n# Rationale\r\n\r\n> Why should this feature exist?\r\n\r\nIt's useful for debugging, basically.  You already support `debug_storageRangeAt` and this is pretty similar (in idea if not in detail).\r\n\r\nBasically, we at Truffle are trying to get this to be a more widely-supported thing; we've [talked to Besu about it too](https://github.com/hyperledger/besu/issues/1892), and we're planning on adding it to Ganache as well.  We want this to be a general thing available to debugging.  You can see [here](https://github.com/ledgerwatch/turbo-geth/issues/1455) the original issue where we suggested the idea to Turbo-Geth.\r\n\r\nSo, we hope you agree that this would be a useful thing to have! :)\r\n\r\n> What are the use-cases?\r\n\r\nSo, we at Truffle are hoping to make use of this feature in Truffle Debugger once it's more widely implemented.  I have three primary use cases in mind:\r\n\r\n1. Getting correct code for a contract being debugged -- currently the debugger has to get the code at a nearby block boundary, which may not be correct.  Maybe the contract was only created during that block, or maybe it self-destructed later in the block.  It would be best if we could simply get the correct code at a transaction boundary.\r\n2. Getting nonces for contracts being debugged in order to compute addresses for failed `CREATE`s -- currently the debugger has a problem reporting certain globally-available variables when inside a failed `CREATE`.  Because the `CREATE` failed, it can't get the address off of the stack, and because the debugger doesn't know the nonce (block boundaries won't be good enough here!) it can't compute the address ourselves.  If we could get the nonces, we could compute the address ourselves and correctly report `this` and `msg.sender`.\r\n3. Balance tracking -- this isn't properly planned out yet or anything, but in the future we may want to add a system for tracking balances to the debugger; this would be a necessary component of it, since, again, getting the balance at block boundaries wouldn't be sufficient.\r\n\r\nThat said, there could really be any number of other uses; other people have commented that they want this feature too (see comments on the turbo-geth issue), and they presumably have other use cases in mind.  So it's not just us at Truffle that want this! :)\r\n\r\n# Implementation\r\n\r\n> Do you have ideas regarding the implementation of this feature?\r\n\r\nOther than the specification, no.\r\n\r\n> Are you willing to implement this feature?\r\n\r\nNo, I have no familiarity with Go, sorry.",
  "closed_by": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781213627",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22342#issuecomment-781213627",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342",
    "id": 781213627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTIxMzYyNw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T09:36:31Z",
    "updated_at": "2021-02-18T09:36:31Z",
    "author_association": "MEMBER",
    "body": "Discussed on triage: Yes, seems like a reasonable feature. This might be possible via just adding a new tracer, without modifying any of the existing go-code. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781213627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785218109",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22342#issuecomment-785218109",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342",
    "id": 785218109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTIxODEwOQ==",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T16:53:29Z",
    "updated_at": "2021-02-24T16:53:29Z",
    "author_association": "MEMBER",
    "body": "After #22333 is merged you can use something like the following tracer to get an account at a transaction boundary:\r\n\r\n```javascript\r\n{\r\n  addr: toAddress(\"0xaaaa\"),\r\n  fault: function() {},\r\n  step: function() {},\r\n  result: function(ctx, db) {\r\n    const code = toHex(db.getCode(this.addr));\r\n    return { balance: db.getBalance(this.addr), nonce: db.getNonce(this.addr), code: code }\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785218109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1055595784",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22342#issuecomment-1055595784",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22342",
    "id": 1055595784,
    "node_id": "IC_kwDOAOvK984-6x0I",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T16:00:56Z",
    "updated_at": "2022-03-01T16:00:56Z",
    "author_association": "MEMBER",
    "body": "Closing this issue. Please re-open if the solution above doesn't meet your needs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1055595784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
