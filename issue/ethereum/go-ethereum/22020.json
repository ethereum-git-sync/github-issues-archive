{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22020",
  "id": 767243525,
  "node_id": "MDU6SXNzdWU3NjcyNDM1MjU=",
  "number": 22020,
  "title": "New Ethereum JSON-RPC Endpoint - Transaction Simulation",
  "user": {
    "login": "epheph",
    "id": 361654,
    "node_id": "MDQ6VXNlcjM2MTY1NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/361654?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/epheph",
    "html_url": "https://github.com/epheph",
    "followers_url": "https://api.github.com/users/epheph/followers",
    "following_url": "https://api.github.com/users/epheph/following{/other_user}",
    "gists_url": "https://api.github.com/users/epheph/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/epheph/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/epheph/subscriptions",
    "organizations_url": "https://api.github.com/users/epheph/orgs",
    "repos_url": "https://api.github.com/users/epheph/repos",
    "events_url": "https://api.github.com/users/epheph/events{/privacy}",
    "received_events_url": "https://api.github.com/users/epheph/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-12-15T06:52:13Z",
  "updated_at": "2020-12-15T17:02:39Z",
  "closed_at": "2020-12-15T17:02:39Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Ethereum's RPC currently lacks a way to eth_call or trace a transaction at the HEAD of a block, which is where flashbot bundles will always land. Given that flashbot bundles will not always land (either due to another bundle being selected or the miner for the target block not being a flashbots miner), simulating a transanction is extremely important to give the developer feedback. From a developer's perspective, there is no difference between their code failing to work properly and their bundle not being selected for any other reason.\r\n\r\nTo fix the above issue, we need a new jsonrpc endpoint to allow simulation of a flashbots bundle at the HEAD of a block. I believe we can accomplish this in a way that is generally useful and would be accepted upstream.\r\n\r\nCurrently, eth_call allows you to specify an arbitrary transaction, at an arbitrary block height (within your pruning window) and returns the return data. Since it is simulating a transaction and not running inside a \"real\" block, it needs to select a value for miner, block number, and timestamp. When passed a block, eth_call uses the storage state that was computed AFTER that block had run: if you pass in block 780, it would include all transactions that were included inside block 780. However, the block value and timestamp it selects are those from block 780 as well, effectively simulating transacctions at the \"tail\" of the block.\r\n\r\nI propose a modification to eth_call:\r\n```\r\neth_call({transaction}, block_tag [, fake_block_number, fake_timestamp, fake_miner])\r\n```\r\n\r\nThese optional values would override the simulated transaction's default for the variables. If you wanted to simulate something that happens at the head of block 780, you would call:\r\n```\r\neth_call({transaction}, 779 , 780, $BLOCK_779's_TIMESTAMP_PLUS_X_SECONDS])\r\n```\r\n\r\nSomething important to mention here is that we've been talking about eth_call for simplicity here, but eth_call is missing:\r\n1.) a multi-transaction endpoint that will take an array of transactioins to simulate, each building on each other sequentially\r\n2.) Something that returns traces of value transferred, not just the RETURN data of the function call\r\n\r\nThis might be possible with geth's trace module:\r\n\r\nhttps://github.com/ethereum/go-ethereum/wiki/Tracing:-Introduction\r\n\r\n\"go-ethereum supports running custom JavaScript tracers within the Ethereum node, which have full access to the EVM stack, memory and contract storage\"\r\n\r\n\r\nThere's also OpenEthereum's trace endpoint that solves both of the above features: `trace_callMany`\r\nhttps://openethereum.wiki/JSONRPC-trace-module/#example_1\r\n\r\nIt might be easier to add this endpoint to OpenEthereum instead of geth and we already use OpenEthereum for other mev-inspect. This end point does not necessarily need to live in geth, and would never be run against the same node as the bundle selection `eth_sendBundle` endpoint.\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "epheph",
    "id": 361654,
    "node_id": "MDQ6VXNlcjM2MTY1NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/361654?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/epheph",
    "html_url": "https://github.com/epheph",
    "followers_url": "https://api.github.com/users/epheph/followers",
    "following_url": "https://api.github.com/users/epheph/following{/other_user}",
    "gists_url": "https://api.github.com/users/epheph/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/epheph/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/epheph/subscriptions",
    "organizations_url": "https://api.github.com/users/epheph/orgs",
    "repos_url": "https://api.github.com/users/epheph/repos",
    "events_url": "https://api.github.com/users/epheph/events{/privacy}",
    "received_events_url": "https://api.github.com/users/epheph/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745093707",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22020#issuecomment-745093707",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020",
    "id": 745093707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTA5MzcwNw==",
    "user": {
      "login": "epheph",
      "id": 361654,
      "node_id": "MDQ6VXNlcjM2MTY1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/361654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epheph",
      "html_url": "https://github.com/epheph",
      "followers_url": "https://api.github.com/users/epheph/followers",
      "following_url": "https://api.github.com/users/epheph/following{/other_user}",
      "gists_url": "https://api.github.com/users/epheph/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epheph/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epheph/subscriptions",
      "organizations_url": "https://api.github.com/users/epheph/orgs",
      "repos_url": "https://api.github.com/users/epheph/repos",
      "events_url": "https://api.github.com/users/epheph/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epheph/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-15T06:53:43Z",
    "updated_at": "2020-12-15T06:53:43Z",
    "author_association": "NONE",
    "body": "I also wrote this quick script for proof of this behavioir:\r\n\r\n```\r\n\r\nfunction printHex {\r\n\techo $(( 16#$(echo $1 | sed -e 's/0x0*//') ))\r\n}\r\n\r\n\r\n\r\necho -n Block From getBlock:\\\r\nprintHex $(curl -s -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getBlockByNumber\", \"params\": [\"latest\", false], \"id\": 1}' 127.0.0.1:8545 -H \"Content-Type: application/json\" | jq -r .result.number)\r\n\r\necho -n Block from eth_call:\\\r\nprintHex $(curl -s -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0x4b62d7c9c4e5c7150eda45f7552a25c7cd726bf6\", \"data\": \"0x42cbb15c\"}, \"latest\"], \"id\": 1}' 127.0.0.1:8545 -H \"Content-Type: application/json\" | jq -r .result)\r\n\r\n\r\necho -n Timestamp From getBlock:\\\r\nprintHex $(curl -s -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getBlockByNumber\", \"params\": [\"latest\", false], \"id\": 1}' 127.0.0.1:8545 -H \"Content-Type: application/json\" | jq -r .result.timestamp)\r\n\r\necho -n Timestamp from eth_call:\\\r\nprintHex $(curl -s -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0x23916a8f5c3846e3100e5f587ff14f3098722f5d\", \"data\": \"0x188ec356\"}, \"latest\"], \"id\": 1}' 127.0.0.1:8545 -H \"Content-Type: application/json\" | jq -r .result)\r\n```\r\n\r\nOutput\r\n```\r\n$ ./check-block\r\nBlock From getBlock: 11456131\r\nBlock from eth_call: 11456131\r\nTimestamp From getBlock: 1608015138\r\nTimestamp from eth_call: 1608015138\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745093707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745427840",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22020#issuecomment-745427840",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22020",
    "id": 745427840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQyNzg0MA==",
    "user": {
      "login": "epheph",
      "id": 361654,
      "node_id": "MDQ6VXNlcjM2MTY1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/361654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epheph",
      "html_url": "https://github.com/epheph",
      "followers_url": "https://api.github.com/users/epheph/followers",
      "following_url": "https://api.github.com/users/epheph/following{/other_user}",
      "gists_url": "https://api.github.com/users/epheph/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epheph/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epheph/subscriptions",
      "organizations_url": "https://api.github.com/users/epheph/orgs",
      "repos_url": "https://api.github.com/users/epheph/repos",
      "events_url": "https://api.github.com/users/epheph/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epheph/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-15T17:02:39Z",
    "updated_at": "2020-12-15T17:02:39Z",
    "author_association": "NONE",
    "body": "Sorry, accidentally opened this issue on upstream. This was meant to be opened on my fork of geth :grimacing:",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745427840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
