{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20696",
  "id": 567955223,
  "node_id": "MDU6SXNzdWU1Njc5NTUyMjM=",
  "number": 20696,
  "title": "Migration from geth accounts to Clef - missing RPC calls",
  "user": {
    "login": "Crypto2",
    "id": 7625236,
    "node_id": "MDQ6VXNlcjc2MjUyMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7625236?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Crypto2",
    "html_url": "https://github.com/Crypto2",
    "followers_url": "https://api.github.com/users/Crypto2/followers",
    "following_url": "https://api.github.com/users/Crypto2/following{/other_user}",
    "gists_url": "https://api.github.com/users/Crypto2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Crypto2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Crypto2/subscriptions",
    "organizations_url": "https://api.github.com/users/Crypto2/orgs",
    "repos_url": "https://api.github.com/users/Crypto2/repos",
    "events_url": "https://api.github.com/users/Crypto2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Crypto2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-02-20T00:20:32Z",
  "updated_at": "2020-02-21T02:36:26Z",
  "closed_at": "2020-02-20T08:18:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm looking at Clef as a way to replace geth accounts due to this longstanding issue: https://github.com/ethereum/go-ethereum/issues/16874\r\n\r\nAs an accounts replacement everything seems to be good except for:\r\n\r\n1. Having a way to unlock an account or set it's password over the external RPC. (ie. an equivalent of personal_unlockAccount or something like account_storePassword or even just specifying the password in the account_signTransaction call)\r\n\r\n2. Being able to specify the password for account_new over the external RPC.\r\n\r\nThose 2 things would make Clef a fairly complete key management and I think would be greatly beneficial to the ETH ecosystem.\r\n\r\nI think it's a good idea when you have a decent amount of keys in your keystore because:\r\n\r\n1. Clef as a standalone daemon is both less likely to crash than the full geth node and shouldn't need updates as often, making restarts less frequent of an issue.\r\n2. Right now the geth node does nothing while loading keys so it is time wasted it has to catch up syncing the blockchain, keeping them separate means even if it takes hours for Clef to start up while scanning the keystore it's not blocking syncing on the geth node while it's doing it.\r\n3. Encouraging this usage may help prioritize changes in Clef to optimize/store the keystore cache between sessions so a multi-hour startup time isn't needed.\r\n4. When you have multiple geth nodes you end up with keystores on multiple servers requiring rsync or other solutions to keep them all in sync, have one centralized Clef daemon would make it so those solutions are no longer needed.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588743581",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20696#issuecomment-588743581",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696",
    "id": 588743581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODc0MzU4MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-20T08:18:32Z",
    "updated_at": "2020-02-20T08:18:32Z",
    "author_association": "MEMBER",
    "body": "Hi, \r\n\r\nFirst of all, Clef _right now_ won't handle millions of accounts any better than geth does, however, we're hoping to fix that going forward. \r\n\r\n\r\nRegarding the two points, \r\n\r\n1.  Clef will never ever offer unlock in the same way geth does. However, `clef` has a much more secure alternative, which is a rule-engine, where you can auto-approve transcations. See https://github.com/ethereum/go-ethereum/blob/master/cmd/clef/tutorial.md#automatic-rules . \r\n\r\nIn essence - you store the password into Clef's own database. Doing so means that whenever an \"approval\" is made, the user does not have to specify the password. Then you also add a rule to auto-approve (certain) transactions, and that means you don't even have to manually approve transactions either. \r\n\r\n2. Unfortunately, this goes against a very important underlying principle in Clef -- nothing secret/sensitive ever goes over the external API. However, we might add such a method to the internal API. \r\n\r\nAnd yes, I totally support that people should migrate to Clef -- that's been the plan from the beginning. I'll help out with integration any way I can. \r\n\r\nHowever, I'll close this ticket, since 1) is already \"done\" , and we're not going to do 2)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/588743581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589163168",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20696#issuecomment-589163168",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696",
    "id": 589163168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTE2MzE2OA==",
    "user": {
      "login": "Crypto2",
      "id": 7625236,
      "node_id": "MDQ6VXNlcjc2MjUyMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7625236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypto2",
      "html_url": "https://github.com/Crypto2",
      "followers_url": "https://api.github.com/users/Crypto2/followers",
      "following_url": "https://api.github.com/users/Crypto2/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypto2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypto2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypto2/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypto2/orgs",
      "repos_url": "https://api.github.com/users/Crypto2/repos",
      "events_url": "https://api.github.com/users/Crypto2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypto2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-20T16:19:17Z",
    "updated_at": "2020-02-20T16:19:17Z",
    "author_association": "NONE",
    "body": "@holiman Right, I know it won't handle quantity of keys the idea is that it will be more reliable as a standalone daemon versus using geth accounts since it should be less crashy and need updates less often. It also provides a nice centralized account daemon versus syncing keystores between nodes.\r\n\r\nThe main thing is there is no way to support an existing keystore from geth. As far as I have seen the rule engine has no way to input passwords + even if it did we'd have to make a script with tons of keys in it and it wouldn't be able to support newly made keys since it can't put a password in for those. Internal or external API doesn't matter to me as long as it isn't a nightmare to implement lol.\r\n\r\nThese newer APIs would of course not be on by default, it would need a new switch like --allow-unsafe-external-api or something like that. Realistically to support migrations I don't see any way around it, even if you only had 100 keys you'd need some way to automate it versus  typing them all in one by one. Just thinking of the easiest way to support things since Clef is already nearly there and just needs 2 minor tweaks to get it to where it needs to be.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589163168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589224781",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20696#issuecomment-589224781",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696",
    "id": 589224781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTIyNDc4MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-20T17:55:04Z",
    "updated_at": "2020-02-20T17:55:04Z",
    "author_association": "MEMBER",
    "body": "> The main thing is there is no way to support an existing keystore from geth.\r\n\r\nThat's exactly what clef does. It uses the existing keystore from geth (or, alternatively, creates a geth-like keystore if one doesn't exist)\r\n\r\n> As far as I have seen the rule engine has no way to input passwords\r\n\r\nNo, it's not inherently part of the rule engine. It's a totally standalone feature: \r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/cmd/clef/tutorial.md#advanced-rules:\r\n```\r\n$ clef setpw 0xd9c9cd5f6779558b6e0ed4e6acf6b1947e7fa1f3\r\n\r\nPlease enter a password to store for this address:\r\nPassword:\r\nRepeat password:\r\n```\r\n\r\nThat means the rule-engine and the password-storage are totally separate features. \r\n1. No stored pw, no ruleset: You have to manually approve and supply pw for each tx\r\n2. With stored pw but no ruleset: you have to manually approve each tx\r\n3. No stored pw, but ruleset: Every time a ruleset approves a tx, you have to manually supply a password\r\n4. With stored pw, with ruleset: No manual intervention is needed (unless the ruleset responds with something other than `Approve`/`Deny` -- because in that case it goes to manual)\r\n\r\n> Realistically to support migrations I don't see any way around it, \r\n\r\nYeah, so that's not an issue. You can _already_ try clef out by simply\r\n\r\n1. Start clef, \r\n2. Start geth , with `geth ... --signer /path/to/clef/ipc`. Geth will then _not_ handle accounts, but relay everything to clef. And clef will locate the geth-keystore and no migration is needed. For any call to geth which requires signing (e.g. personal.sendTransaction), it will relay it to clef. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589224781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589470072",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20696#issuecomment-589470072",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20696",
    "id": 589470072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQ3MDA3Mg==",
    "user": {
      "login": "Crypto2",
      "id": 7625236,
      "node_id": "MDQ6VXNlcjc2MjUyMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7625236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypto2",
      "html_url": "https://github.com/Crypto2",
      "followers_url": "https://api.github.com/users/Crypto2/followers",
      "following_url": "https://api.github.com/users/Crypto2/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypto2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypto2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypto2/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypto2/orgs",
      "repos_url": "https://api.github.com/users/Crypto2/repos",
      "events_url": "https://api.github.com/users/Crypto2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypto2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-21T02:36:14Z",
    "updated_at": "2020-02-21T02:36:26Z",
    "author_association": "NONE",
    "body": "@holiman Yep, I understand all that but that's the point I'm making. For non-interactive uses (ruleset that just approves all sends) if you had even 100 keys running 'clef setpw' wouldn't be great as a way to migrate over since it would require manual input and take forever.\r\n\r\nI know Clef as envisioned is kind of a signing server/keystore for personal use, the changes I'm proposing won't limit it in that function but would also allow for small/medium scale use as the same but for non-interactive use like stores, smaller wallet providers, and other automatic systems that may or may not already be using geth. In the case they are new users without an existing keystore they would still need a way to set the password when creating new accounts over RPC.\r\n\r\nThe ruleset docs even have examples like limiting send amounts and such which indicate at least some thought of automatic use, this is just filling in the missing pieces of that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/589470072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
