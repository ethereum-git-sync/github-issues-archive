{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/1987",
  "id": 117330023,
  "node_id": "MDU6SXNzdWUxMTczMzAwMjM=",
  "number": 1987,
  "title": "crypto: KeyStore improvement ideas",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 248602208,
      "node_id": "MDU6TGFiZWwyNDg2MDIyMDg=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:crypto",
      "name": "area:crypto",
      "color": "bfd4f2",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/28",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/28",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/28/labels",
    "id": 1642558,
    "node_id": "MDk6TWlsZXN0b25lMTY0MjU1OA==",
    "number": 28,
    "title": "1.6.0",
    "description": "",
    "creator": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 117,
    "state": "closed",
    "created_at": "2016-03-14T11:47:17Z",
    "updated_at": "2017-04-18T11:54:40Z",
    "due_on": null,
    "closed_at": "2017-04-18T11:54:40Z"
  },
  "comments": 5,
  "created_at": "2015-11-17T10:55:11Z",
  "updated_at": "2017-02-15T10:15:28Z",
  "closed_at": "2017-02-15T10:15:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The key management infrastructure is currently split into several layers:\n\n``` go\npackage crypto\n\n// the current interface\ntype KeyStore interface {\n    GenerateNewKey(io.Reader, string) (*Key, error)\n    GetKey(common.Address, string) (*Key, error) // get key from addr and auth string\n    GetKeyAddresses() ([]common.Address, error)  // get all addresses\n    StoreKey(*Key, string) error                 // store key optionally using auth string\n    DeleteKey(common.Address, string) error      // delete key by addr and auth string\n    Cleanup(keyAddr common.Address) (err error)\n}\n```\n\n``` text\n          ┌───────────────────────────┐              \n          │  accounts.AccountManager  │              \n          └───────────────────────────┘              \n                        │                            \n           ┌────────────┴──────────────┐             \n           ▼                           ▼             \n┌────────────────────┐   ┌──────────────────────────┐\n│crypto.keyStorePlain│   │crypto.keyStorePassphrase │\n└────────────────────┘   └──────────────────────────┘\n```\n\nThe general reasoning behind this design was to ensure that people wouldn't use\nunencrypted keys. It was also supposed to anticipate an implementation of KeyStore that\ntalks to a hardware crypto device.\n\nThe interface has grown over time and isn't as flexible as it could be.\nOne particular example where the split hurts is that using KeyStorePlain still requires\n'unlocking' the account with an empty passphrase because the account manager doesn't\nknow whether keys are encrypted. We could also use an in-memory KeyStore for testing, \nbut implementing one requires satisfying the whole interface.\n\nI propose the following changes:\n- Move the KeyStore interface to package accounts.\n  There are no other users of the interface apart from the\n  account manager.\n- Move encryption/decryption of key data into the account manager.\n  This will shrink the interface to a mapping between addresses and keys.\n\n``` go\npackage accounts\n\n// proposed interface\ntype KeyStore interface {\n    GetKeyAddresses() ([]common.Address, error)\n    GetKey(common.Address) (*crypto.Key, error)\n    StoreKey(*crypto.Key, string) error\n    DeleteKey(common.Address) error\n}\n```\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157371832",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1987#issuecomment-157371832",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
    "id": 157371832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM3MTgzMg==",
    "user": {
      "login": "Gustav-Simonsson",
      "id": 293096,
      "node_id": "MDQ6VXNlcjI5MzA5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gustav-Simonsson",
      "html_url": "https://github.com/Gustav-Simonsson",
      "followers_url": "https://api.github.com/users/Gustav-Simonsson/followers",
      "following_url": "https://api.github.com/users/Gustav-Simonsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gustav-Simonsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gustav-Simonsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gustav-Simonsson/subscriptions",
      "organizations_url": "https://api.github.com/users/Gustav-Simonsson/orgs",
      "repos_url": "https://api.github.com/users/Gustav-Simonsson/repos",
      "events_url": "https://api.github.com/users/Gustav-Simonsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gustav-Simonsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T13:34:36Z",
    "updated_at": "2015-11-17T13:34:36Z",
    "author_association": "NONE",
    "body": "@fjl How would one get a `*crypto.Key` from only `common.Address` if the key is encrypted? It's not possible to fit [the encrypted key storage data](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) into `crypto.Key` without modifying it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157371832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157372150",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1987#issuecomment-157372150",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
    "id": 157372150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM3MjE1MA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T13:36:24Z",
    "updated_at": "2015-11-17T13:37:05Z",
    "author_association": "MEMBER",
    "body": "Sure, `*crypto.Key` is not the right type for this.\nThe return value would need to be a type that contains the ciphertext, encryption parameters, etc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157372150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157678970",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1987#issuecomment-157678970",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
    "id": 157678970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzY3ODk3MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T10:59:29Z",
    "updated_at": "2015-11-18T10:59:29Z",
    "author_association": "MEMBER",
    "body": "I like the idea of this refactoring. I would modify the interface a bit though :P \n\n``` go\ntype KeyStore interface {\n    Keys() ([]common.Address, error)\n    Store(*crypto.Key, string) error\n    Fetch(common.Address) (*crypto.Key, error)\n    Delete(common.Address) error\n}\n```\n\ni.e. Since the interface is a **Key**Store, I don't see the need to have all methods contain \"Key\" in their name.\n\nHowever, the issue with this interface design is that I need the `AccountManager` to be able to decrypt anything a `KeyStore` might throw at it. As in I won't be able to implement some arbitrary weird key encryption mechanism as my hands are tied with regard to the format. This may or may not be a problem, but thought I'd mention it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/157678970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/237970980",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1987#issuecomment-237970980",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
    "id": 237970980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk3MDk4MA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T21:30:56Z",
    "updated_at": "2016-08-05T21:30:56Z",
    "author_association": "MEMBER",
    "body": "One part of this plan has been implemented in #2284. The keyStore interface is now located in package accounts, hidden from the API and looks like this:\n\n``` go\ntype keyStore interface {\n    // Loads and decrypts the key from disk.\n    GetKey(addr common.Address, filename string, auth string) (*Key, error)\n    // Writes and encrypts the key.\n    StoreKey(filename string, k *Key, auth string) error\n    // Joins filename with the key directory unless it is already absolute.\n    JoinPath(filename string) string\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/237970980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/279970869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1987#issuecomment-279970869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1987",
    "id": 279970869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTk3MDg2OQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T10:15:28Z",
    "updated_at": "2017-02-15T10:15:28Z",
    "author_association": "MEMBER",
    "body": "This doesn't apply anymore.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/279970869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
