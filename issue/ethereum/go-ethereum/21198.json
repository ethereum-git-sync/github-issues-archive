{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21198",
  "id": 635086536,
  "node_id": "MDU6SXNzdWU2MzUwODY1MzY=",
  "number": 21198,
  "title": "Storage field in debug_traceTransaction traces does not include storage read from, only written to",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-06-09T03:41:25Z",
  "updated_at": "2020-06-10T09:46:14Z",
  "closed_at": "2020-06-10T09:46:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: 1.9.15-stable\r\nOS & Version: Release Linux Mint 19.1 Tessa 64-bit\r\n\r\n#### Expected behaviour\r\n\r\nThe trace output from `debug_traceTransaction`, in its `storage` field for each step, should include both all storage written to so far during the current call, and all storage read from so far during the current call.\r\n\r\nBy way of comparison, Ganache does this; now I know Geth invented `debug_traceTransaction`, and so gets to define what it does, but this seems like a distinct omission of relevant information, as storage read from is definitely relevant to the transaction.\r\n\r\n#### Actual behaviour\r\n\r\nOnly storage written to is included; storage read from is omitted.  This causes problems for debuggers based on `debug_traceTransaction`.  For instance, storage variables will erroneously display as zero even after they've been read from, which is confusing when debugging.\r\n\r\n(Reason I'm filing this bug: I'm the maintainer of the Truffle Debugger, and there, in addition to the above, it could possibly cause the wrong mapping keys to be kept track of.  If you want to see the discussion of this over on our GitHub, it's on [this issue](https://github.com/trufflesuite/truffle/issues/2066).)\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nStart geth with `geth --dev --http --http.api eth,net,debug`.  Deploy the following contract:\r\n\r\n```solidity\r\npragma solidity ^0.5.16;\r\n\r\ncontract DebugTest {\r\n  uint zr;\r\n  uint nzr = 1;\r\n  uint zwz;\r\n  uint zwnz;\r\n  uint nzwz = 2;\r\n  uint nzwnz = 3;\r\n  uint zwr;\r\n  uint nzwr;\r\n\r\n  function run() public {\r\n    uint x;\r\n    x = zr; //read zero\r\n    x = nzr; //read nonzero\r\n    zwz = 0; //write zero to zero\r\n    zwnz = 4; //write nonzero to zero\r\n    nzwz = 0; //write zero to nonzero\r\n    nzwnz = 5; //write nonzero to nonzero\r\n  }\r\n}\r\n```\r\n\r\nSend a transaction for the `run()` function.  Use `debug_traceTransaction` on the result; since everything's within the same call, we can just look at the final trace step.  Observe that its `storage` field contains entries for storage slots 2 through 5, but not 0, 1, 6, or 7.\r\n\r\nThank you!",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641238508",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21198#issuecomment-641238508",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198",
    "id": 641238508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTIzODUwOA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T11:48:29Z",
    "updated_at": "2020-06-09T11:49:40Z",
    "author_association": "MEMBER",
    "body": "Hi @haltman-at, I have a version for generating tracing logs include storage read.\r\n\r\nI am curious about your requirement and want to confirm. Now we can offer storage read/write until this instruction. But the storage can be overwritten. \r\n\r\ne.g. If we write a slot twice with two different value, then the written storage in this 2 instructions is different. I guess it can work with your debugger?\r\n\r\nexample output\r\n```\r\nstorage: {\r\n    0000000000000000000000000000000000000000000000000000000000000002: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    0000000000000000000000000000000000000000000000000000000000000003: \"0000000000000000000000000000000000000000000000000000000000000004\",\r\n    0000000000000000000000000000000000000000000000000000000000000004: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    0000000000000000000000000000000000000000000000000000000000000005: \"0000000000000000000000000000000000000000000000000000000000000005\"\r\n},\r\nstorageRead: {\r\n    0000000000000000000000000000000000000000000000000000000000000000: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    0000000000000000000000000000000000000000000000000000000000000001: \"0000000000000000000000000000000000000000000000000000000000000001\"\r\n},\r\nstorageWritten: {\r\n    0000000000000000000000000000000000000000000000000000000000000002: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    0000000000000000000000000000000000000000000000000000000000000003: \"0000000000000000000000000000000000000000000000000000000000000004\",\r\n    0000000000000000000000000000000000000000000000000000000000000004: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    0000000000000000000000000000000000000000000000000000000000000005: \"0000000000000000000000000000000000000000000000000000000000000005\"\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641238508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641239170",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21198#issuecomment-641239170",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198",
    "id": 641239170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTIzOTE3MA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T11:50:06Z",
    "updated_at": "2020-06-09T11:50:06Z",
    "author_association": "MEMBER",
    "body": "The storage is kept for backward compatibility",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641239170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641541025",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21198#issuecomment-641541025",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198",
    "id": 641541025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTU0MTAyNQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T20:05:48Z",
    "updated_at": "2020-06-09T20:05:48Z",
    "author_association": "NONE",
    "body": "Well, I'm not trying to separately keep track of storage read and storage written.  Rather I'm thinking of the `storage` field as a partial view of storage as it currently exists.  Obviously it's not all of it, only the relevant parts.  The question then is what counts as relevant.\r\n\r\nLike right now, if you have two storage writes to the same slot, the later one will overwrite the earlier one.  This does not make sense from a point of view where `storage` is meant to record every write and read, but *does* make sense from a point of view where `storage` provides a partial view of storage, restricted to the relevant parts, which is the point of view I'm taking.  I want to stick to that point of view; I don't want to change to a point of view of individually keeping track of each read and write.\r\n\r\nFrom that point of view, then, as soon as a storage slot is read, it should be considered relevant and shown.  Sure, the read value may be overwritten later -- but that's fine!  Storage has changed so what we see of it should change correspondingly.  Like I said, I'm working from a \"partial view of storage\" point of view, not a \"record of reads and writes\" point of view, with the only question being what is deemed sufficiently relevant to be included in that partial view.\r\n\r\nAs mentioned, Ganache's version of `debug_traceTransaction` already works this way, and I was a little surprised to find that Geth doesn't do this.  Note that this would be useful not just for Truffle Debugger in particular, but for all `debug_traceTransaction`-based debuggers, of which I believe there are several (Remix being the other big one).  I doubt there would realistically be any compatibility problem.  I mean, I suppose technically it would break things for any programs that rely on `storage` *only* containing storage written, but I don't know that that exists.  For debuggers I think it would be just upside.\r\n\r\nOf course, if the behavior of `storage` really cannot be changed for compatibility reasons, then `storageRead` and `storageWritten` is certainly something we could work with, but I think what would be better would be to add `storageView` (or whatever you want to call it) that works like I suggest, like Ganache's `storage`; that would be simpler to work with.  Given, as mentioned, that I'm interested in a partial view of storage, rather than a record of reads and writes.\r\n\r\nHope that makes sense, thanks for listening!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641541025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641773141",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21198#issuecomment-641773141",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21198",
    "id": 641773141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTc3MzE0MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T06:59:47Z",
    "updated_at": "2020-06-10T06:59:47Z",
    "author_association": "MEMBER",
    "body": "I agree with @haltman-at on this one. We should simply add to the returned `storage` the data items read too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641773141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
