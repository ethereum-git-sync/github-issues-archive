{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2877",
  "id": 168111318,
  "node_id": "MDU6SXNzdWUxNjgxMTEzMTg=",
  "number": 2877,
  "title": "[BUG] geth contract does not save address array values across calls ",
  "user": {
    "login": "SethVgr",
    "id": 19685073,
    "node_id": "MDQ6VXNlcjE5Njg1MDcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/19685073?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SethVgr",
    "html_url": "https://github.com/SethVgr",
    "followers_url": "https://api.github.com/users/SethVgr/followers",
    "following_url": "https://api.github.com/users/SethVgr/following{/other_user}",
    "gists_url": "https://api.github.com/users/SethVgr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SethVgr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SethVgr/subscriptions",
    "organizations_url": "https://api.github.com/users/SethVgr/orgs",
    "repos_url": "https://api.github.com/users/SethVgr/repos",
    "events_url": "https://api.github.com/users/SethVgr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SethVgr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-07-28T14:34:34Z",
  "updated_at": "2016-07-29T13:18:36Z",
  "closed_at": "2016-07-29T11:58:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Checklist\n- [done ] built geth 1.4.10\n- [done ] installed it over previous version (1.3.5.) (`sudo cp geth /usr/bin/geth`)\n- [done ] compiled  and deployed the following contract:\n\n```\ncontract C {\n\n    address[] goodAddr;\n    address[] badAddr;\n\n    function initAddr() constant {\n\n        if(goodAddr.length == 0) {\n            goodAddr.push(0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee);\n        }\n\n        if(badAddr.length == 0) {\n            badAddr.push(0x115744603fedb255e5ab4765cc1dc6c832639fd5);\n        }\n\n        if(goodAddr.length == 1 && badAddr.length == 1) {\n            return;\n        }\n\n        for(uint256 i = 0; i < goodAddr.length; i++) {\n            if(goodAddr[i] == 0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee)\n                return;\n        }\n\n        for(i = 0; i < badAddr.length; i++) {\n            if(badAddr[i] == 0x115744603fedb255e5ab4765cc1dc6c832639fd5)\n                return;\n        }\n\n        goodAddr.push(0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee);\n        badAddr.push(0x115744603fedb255e5ab4765cc1dc6c832639fd5);\n    }\n\n    function getGoodAddrLocal(uint256 i) constant returns (address) {\n        goodAddr.push(0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee);\n        return goodAddr[i];\n    }\n\n    function getGoodAddr(uint256 i) constant returns (address) {\n        if(i < 0 || i >= goodAddr.length) {\n            return 0x0000000000000000000000000000000000000000;\n        } else {\n            return goodAddr[i];\n        }\n\n    }\n\n    function getBadAddr(uint256 i) constant returns (address) {\n        if(i < 0 || i >= badAddr.length) {\n            return 0x0000000000000000000000000000000000000000;\n        } else {\n            return badAddr[i];\n        }\n    }\n}\n```\n\nThe contract was compiled using [browser solidity](https://ethereum.github.io/browser-solidity/#version=soljson-latest.js) and deployed on a private test net running a single **geth** node of version 1.4.10\n## System/environment\n- OS: debian 8.3 Jessie x64, kernel version 3.16.0-4-amd64, virtual machine, running on VirtualBox, host machine Win7 x64, NAT network settings used\n## Expected behaviour\n\nAfter deployment as shown next:\n\n```\n> eth.accounts\n[\"0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee\", \"0x115744603fedb255e5ab4765cc1dc6c832639fd5\"]\n> {inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getGoodAddrLocal\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initAddr\",\"outputs\":[],\"type\":\"function\"}]);\nundefined\n> var c = cContract.new(\n...    {\n......      from: web3.eth.accounts[0], \n...... {06001016106a4565b5090565b5b5050509190906000526020600020900160005b73115744603fedb255e5ab4765cc1dc6c832639fd5909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550505b5056', \n......      gas: 4700000\n......    }, function (e, contract){\n......     console.log(e, contract);\n......     if (typeof contract.address !== 'undefined') {\n.........          console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n.........     }\n......  });\nnull [object Object]\nundefined\n> null [object Object]\nContract mined! address: 0x814625bf84bfc6b64f995c2974ce9a20d85ffc38 transactionHash: 0xfe635b9b52e6e578b684cbb5ad46598c85c9079344faeecd7b3203703438b9cd\n```\n\nupon calling method **initAddr()** the two address arrays should be initialized with a default address each. \n## Observed behaviour\n\nContract storage does not work; the addresses are not kept in the arrays across calls:\n\n```\n> c.initAddr.call();\n[]\n> c.getGoodAddr(0);\n\"0x0000000000000000000000000000000000000000\"\n> c.getBadAddr(0);\n\"0x0000000000000000000000000000000000000000\"\n> c.getGoodAddrLocal(0);\n\"0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee\"\n> c.getGoodAddrLocal(0);\n\"0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee\"\n> c.getGoodAddrLocal(1);\n\"0x\"\n> \n```\n\nI'm not sure if this is a solidity or a **geth** bug. \n",
  "closed_by": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235932807",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235932807",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235932807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTkzMjgwNw==",
    "user": {
      "login": "joeb000",
      "id": 12489967,
      "node_id": "MDQ6VXNlcjEyNDg5OTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12489967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeb000",
      "html_url": "https://github.com/joeb000",
      "followers_url": "https://api.github.com/users/joeb000/followers",
      "following_url": "https://api.github.com/users/joeb000/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeb000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeb000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeb000/subscriptions",
      "organizations_url": "https://api.github.com/users/joeb000/orgs",
      "repos_url": "https://api.github.com/users/joeb000/repos",
      "events_url": "https://api.github.com/users/joeb000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeb000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T15:34:59Z",
    "updated_at": "2016-07-28T15:34:59Z",
    "author_association": "NONE",
    "body": "this happens to me when i use browser solidty as well. instead of copying and pasting straight into the geth console, first paste the web3 deploy to a notepad or text editor. then paste each command individually. that fixed my problem and is also the reason i stopped using the solidity compiler.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235932807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235940969",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235940969",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235940969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk0MDk2OQ==",
    "user": {
      "login": "SethVgr",
      "id": 19685073,
      "node_id": "MDQ6VXNlcjE5Njg1MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19685073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SethVgr",
      "html_url": "https://github.com/SethVgr",
      "followers_url": "https://api.github.com/users/SethVgr/followers",
      "following_url": "https://api.github.com/users/SethVgr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SethVgr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SethVgr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SethVgr/subscriptions",
      "organizations_url": "https://api.github.com/users/SethVgr/orgs",
      "repos_url": "https://api.github.com/users/SethVgr/repos",
      "events_url": "https://api.github.com/users/SethVgr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SethVgr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:01:08Z",
    "updated_at": "2016-07-28T16:11:09Z",
    "author_association": "NONE",
    "body": "It's pretty strange. I will try it out for the above code. So you are using a local version of the solidity compiler now?\n\n@joeb000 I have compiled a simplified version of the contract:\n\n```\ncontract C {\n\n    address[] addrs;\n\n    function initAddr() constant {\n\n        if(addrs.length == 0) {\n            addrs.push(0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee);\n        }\n\n        if(addrs.length == 1) {\n            return;\n        }\n\n        for(uint256 i = 0; i < addrs.length; i++) {\n            if(addrs[i] == 0x029ddf2082bc96d321c9769ec8e27e10b3cb16ee)\n                return;\n        }\n\n    }\n\n    function getAddr(uint256 i) constant returns (address) {\n        if(i < 0 || i >= addrs.length) {\n            return 0x0000000000000000000000000000000000000000;\n        } else {\n            return addrs[i];\n        }\n\n    }\n\n}\n```\n\non browser solidity and got:\n\n```\nvar cContract = web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initAddr\",\"outputs\":[],\"type\":\"function\"}]);\nvar c = cContract.new(\n   {\n     from: web3.eth.accounts[0], \n     data: '6060604052610271806100126000396000f360606040526000357c010000000000000000000000000000000000000000000000000000000090048063d81f84b714610044578063e0c1d2a91461008657610042565b005b61005a6004808035906020019091905050610095565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100936004805050610109565b005b600060008210806100ae57506000600050805490508210155b156100c0576000905061010456610103565b600060005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610104565b5b919050565b6000600060006000508054905014156101c2576000600050805480600101828181548183558181151161016e5781836000526020600020918201910161016d919061014f565b80821115610169576000818150600090555060010161014f565b5090565b5b5050509190906000526020600020900160005b73029ddf2082bc96d321c9769ec8e27e10b3cb16ee909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550505b600160006000508054905014156101d85761026e565b600090505b60006000508054905081101561026d5773029ddf2082bc96d321c9769ec8e27e10b3cb16ee600060005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561025f5761026e565b5b80806001019150506101dd565b5b5056', \n     gas: 4700000\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })\n```\n\nCan you please try it real quick to see if the address array is initialized? Run:\n\n```\nc.initAddr.call();\nc.getAddr.call(0);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235940969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235959912",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235959912",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235959912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk1OTkxMg==",
    "user": {
      "login": "joeb000",
      "id": 12489967,
      "node_id": "MDQ6VXNlcjEyNDg5OTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12489967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeb000",
      "html_url": "https://github.com/joeb000",
      "followers_url": "https://api.github.com/users/joeb000/followers",
      "following_url": "https://api.github.com/users/joeb000/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeb000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeb000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeb000/subscriptions",
      "organizations_url": "https://api.github.com/users/joeb000/orgs",
      "repos_url": "https://api.github.com/users/joeb000/repos",
      "events_url": "https://api.github.com/users/joeb000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeb000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T17:07:45Z",
    "updated_at": "2016-07-28T17:08:12Z",
    "author_association": "NONE",
    "body": "```\nc.initAddr.call();\n[]\n> c.getAddr.call(0);\n\"0x0000000000000000000000000000000000000000\"\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235959912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235961539",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235961539",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235961539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk2MTUzOQ==",
    "user": {
      "login": "joeb000",
      "id": 12489967,
      "node_id": "MDQ6VXNlcjEyNDg5OTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12489967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeb000",
      "html_url": "https://github.com/joeb000",
      "followers_url": "https://api.github.com/users/joeb000/followers",
      "following_url": "https://api.github.com/users/joeb000/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeb000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeb000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeb000/subscriptions",
      "organizations_url": "https://api.github.com/users/joeb000/orgs",
      "repos_url": "https://api.github.com/users/joeb000/repos",
      "events_url": "https://api.github.com/users/joeb000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeb000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T17:13:30Z",
    "updated_at": "2016-07-28T17:13:30Z",
    "author_association": "NONE",
    "body": "You need to send the initAddr as a transaction, not just a call()\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235961539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235962410",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235962410",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235962410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk2MjQxMA==",
    "user": {
      "login": "joeb000",
      "id": 12489967,
      "node_id": "MDQ6VXNlcjEyNDg5OTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12489967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeb000",
      "html_url": "https://github.com/joeb000",
      "followers_url": "https://api.github.com/users/joeb000/followers",
      "following_url": "https://api.github.com/users/joeb000/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeb000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeb000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeb000/subscriptions",
      "organizations_url": "https://api.github.com/users/joeb000/orgs",
      "repos_url": "https://api.github.com/users/joeb000/repos",
      "events_url": "https://api.github.com/users/joeb000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeb000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T17:16:32Z",
    "updated_at": "2016-07-28T17:16:32Z",
    "author_association": "NONE",
    "body": "Take the `constant` modifier off the initAddr and redeploy it. Then when you want to send a transaction to call initAddr do this:\n\n`c.initAddr({from:eth.accounts[0],gas:400000})`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235962410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235962680",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-235962680",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 235962680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk2MjY4MA==",
    "user": {
      "login": "joeb000",
      "id": 12489967,
      "node_id": "MDQ6VXNlcjEyNDg5OTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12489967?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeb000",
      "html_url": "https://github.com/joeb000",
      "followers_url": "https://api.github.com/users/joeb000/followers",
      "following_url": "https://api.github.com/users/joeb000/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeb000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeb000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeb000/subscriptions",
      "organizations_url": "https://api.github.com/users/joeb000/orgs",
      "repos_url": "https://api.github.com/users/joeb000/repos",
      "events_url": "https://api.github.com/users/joeb000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeb000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T17:17:32Z",
    "updated_at": "2016-07-28T17:17:32Z",
    "author_association": "NONE",
    "body": "You may want to close this as this is an issue with the way you wrote your smart contract, not geth or solidity :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/235962680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236132903",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-236132903",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 236132903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEzMjkwMw==",
    "user": {
      "login": "SethVgr",
      "id": 19685073,
      "node_id": "MDQ6VXNlcjE5Njg1MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19685073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SethVgr",
      "html_url": "https://github.com/SethVgr",
      "followers_url": "https://api.github.com/users/SethVgr/followers",
      "following_url": "https://api.github.com/users/SethVgr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SethVgr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SethVgr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SethVgr/subscriptions",
      "organizations_url": "https://api.github.com/users/SethVgr/orgs",
      "repos_url": "https://api.github.com/users/SethVgr/repos",
      "events_url": "https://api.github.com/users/SethVgr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SethVgr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T09:13:45Z",
    "updated_at": "2016-07-29T10:05:37Z",
    "author_association": "NONE",
    "body": "So the **initAddr()** has to be sent as a transaction because it changes the state of the contract and costs gas, no? Read operations are essentially free since they only query the block chain and no operations are executed by miners. \n\nHow about the syntax of calling a contract method that has an argument but also changes the state of the contract?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236132903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236162501",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-236162501",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 236162501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2MjUwMQ==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T11:58:20Z",
    "updated_at": "2016-07-29T11:58:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, `initAddr` must be supplied as a transaction (i.e. use `send` instead of `call`). That initialisation method does not only read.\n\nYou can't `call` anything that changes state (well you could, but nothing happens). I'm closing this issue as it's working as intended. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236162501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236168248",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2877#issuecomment-236168248",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2877",
    "id": 236168248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2ODI0OA==",
    "user": {
      "login": "SethVgr",
      "id": 19685073,
      "node_id": "MDQ6VXNlcjE5Njg1MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19685073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SethVgr",
      "html_url": "https://github.com/SethVgr",
      "followers_url": "https://api.github.com/users/SethVgr/followers",
      "following_url": "https://api.github.com/users/SethVgr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SethVgr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SethVgr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SethVgr/subscriptions",
      "organizations_url": "https://api.github.com/users/SethVgr/orgs",
      "repos_url": "https://api.github.com/users/SethVgr/repos",
      "events_url": "https://api.github.com/users/SethVgr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SethVgr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T12:31:33Z",
    "updated_at": "2016-07-29T13:18:36Z",
    "author_association": "NONE",
    "body": "@obscuren  \n\n> You can't call anything that changes state (well you could, but nothing happens). I'm closing this issue as it's working as intended.\n\nSo how can I call a function that takes two values and adds them to the state of the contract? \n\nSomething like:\n\n`sumContract.sum({from:web3.eth.accounts[0],gas:utils.DEFAULT_TX_COST}).call(1, 2);`\n\nAssume the sum of 1 and 2 is stored in a variable in the contract. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/236168248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
