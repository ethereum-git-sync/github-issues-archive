{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24404",
  "id": 1139598771,
  "node_id": "I_kwDOAOvK985D7OWz",
  "number": 24404,
  "title": "Payload status is `VALID` whilst `latestBlockHash` is `null`",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-02-16T06:33:34Z",
  "updated_at": "2022-02-17T00:44:54Z",
  "closed_at": "2022-02-17T00:44:53Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nThis refers to @MariusVanDerWijden's repo: https://github.com/MariusVanDerWijden/go-ethereum/commit/af18ae1b488f05bd49ec7a6bcc40e525e35c9b19\r\n\r\nI can't open an issue there, I hope it's appropriate here :pray: \r\n\r\n#### Expected behaviour\r\n\r\nAccording to the [v1.0.0-alpha.6 api specs](https://github.com/ethereum/execution-apis/blob/v1.0.0-alpha.6/src/engine/specification.md), an EE should always include a non-null `latestValidHash` when issuing a VALID response to`engine_forkchoiceUpdatedV1`:\r\n\r\n> {payloadStatus: {status: VALID, latestValidHash: forkchoiceState.headBlockHash, validationError: null}, payloadId: null} if the payload is deemed VALID and a build process hasn't been started\r\n> {payloadStatus: {status: VALID, latestValidHash: forkchoiceState.headBlockHash, validationError: null}, payloadId: buildProcessId} if the payload is deemed VALID and the build process has begun.\r\n\r\n#### Actual behaviour\r\n\r\nFrom geth, I'm observing the following response (sorry about the weird Rust formatting):\r\n\r\n```rust\r\n{\r\n    jsonrpc: \"2.0\",\r\n    error: None,\r\n    result: Object({\r\n        \"payloadId\": Null,\r\n        \"payloadStatus\": Object({\r\n            \"latestValidHash\": Null,\r\n            \"status\": String(\r\n                \"VALID\",\r\n            ),\r\n            \"validationError\": Null,\r\n        }),\r\n    }),\r\n    id: 1,\r\n}\r\n```\r\n\r\nBasically, the problem is that `status == \"VALID\" && latestValidHash == null`.\r\n\r\nI'm seeing this after we've:\r\n\r\n- produced a payload\r\n- run `notify_new_payload` for that payload\r\n- run `notify_forkchoice_updated` for the hash from that payload.\r\n\r\nI don't specifically need the `latestValidHash` here, I just thought you might want to know :)\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nOur integration tests are failing here: https://github.com/paulhauner/lighthouse/blob/21455917fe605338204076f1df9f75684444a283/testing/execution_engine_integration/src/test_rig.rs#L201\r\n\r\nIn the root of the lighthouse repo (on the above commit), run the tests with:\r\n\r\n```\r\nmake test-exec-engine\r\n```\r\n\r\nFlip [this bool](https://github.com/paulhauner/lighthouse/blob/21455917fe605338204076f1df9f75684444a283/testing/execution_engine_integration/src/lib.rs#L12) to get geth logs in the test output.",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041163213",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24404#issuecomment-1041163213",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
    "id": 1041163213,
    "node_id": "IC_kwDOAOvK984-DuPN",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T06:42:06Z",
    "updated_at": "2022-02-16T06:42:06Z",
    "author_association": "MEMBER",
    "body": "Here's a snippet of the conversation between LH and geth:\r\n\r\n```\r\nto_geth = JsonRequestBody {\r\n    jsonrpc: \"2.0\",\r\n    method: \"engine_newPayloadV1\",\r\n    params: Array([\r\n        Object({\r\n            \"baseFeePerGas\": String(\r\n                \"0x7\",\r\n            ),\r\n            \"blockHash\": String(\r\n                \"0x4956256f2c2340bea6f6fe112922c3fe5d7b59d05936d27a190cd2290c979393\",\r\n            ),\r\n            \"blockNumber\": String(\r\n                \"0x1\",\r\n            ),\r\n            \"extraData\": String(\r\n                \"0x\",\r\n            ),\r\n            \"feeRecipient\": String(\r\n                \"0x0000000000000000000000000000000000000001\",\r\n            ),\r\n            \"gasLimit\": String(\r\n                \"0x1c95111\",\r\n            ),\r\n            \"gasUsed\": String(\r\n                \"0x0\",\r\n            ),\r\n            \"logsBloom\": String(\r\n                \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            ),\r\n            \"parentHash\": String(\r\n                \"0x3b8fb240d288781d4aac94d3fd16809ee413bc99294a085798a589dae51ddd4a\",\r\n            ),\r\n            \"random\": String(\r\n                \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n            ),\r\n            \"receiptsRoot\": String(\r\n                \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\r\n            ),\r\n            \"stateRoot\": String(\r\n                \"0xca3149fa9e37db08d1cd49c9061db1002ef1cd58db2210f2115c8c989b2bdf45\",\r\n            ),\r\n            \"timestamp\": String(\r\n                \"0x620c9c22\",\r\n            ),\r\n            \"transactions\": Array([]),\r\n        }),\r\n    ]),\r\n    id: 1,\r\n}\r\n```\r\n```\r\nfrom_geth = JsonResponseBody {\r\n    jsonrpc: \"2.0\",\r\n    error: None,\r\n    result: Object({\r\n        \"latestValidHash\": String(\r\n            \"0x4956256f2c2340bea6f6fe112922c3fe5d7b59d05936d27a190cd2290c979393\",\r\n        ),\r\n        \"status\": String(\r\n            \"VALID\",\r\n        ),\r\n        \"validationError\": Null,\r\n    }),\r\n    id: 1,\r\n}\r\n```\r\n```\r\nto_geth = JsonRequestBody {\r\n    jsonrpc: \"2.0\",\r\n    method: \"engine_forkchoiceUpdatedV1\",\r\n    params: Array([\r\n        Object({\r\n            \"finalizedBlockHash\": String(\r\n                \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n            ),\r\n            \"headBlockHash\": String(\r\n                \"0x4956256f2c2340bea6f6fe112922c3fe5d7b59d05936d27a190cd2290c979393\",\r\n            ),\r\n            \"safeBlockHash\": String(\r\n                \"0x4956256f2c2340bea6f6fe112922c3fe5d7b59d05936d27a190cd2290c979393\",\r\n            ),\r\n        }),\r\n        Null,\r\n    ]),\r\n    id: 1,\r\n}\r\n```\r\n```\r\nfrom_geth = JsonResponseBody {\r\n    jsonrpc: \"2.0\",\r\n    error: None,\r\n    result: Object({\r\n        \"payloadId\": Null,\r\n        \"payloadStatus\": Object({\r\n            \"latestValidHash\": Null,\r\n            \"status\": String(\r\n                \"VALID\",\r\n            ),\r\n            \"validationError\": Null,\r\n        }),\r\n    }),\r\n    id: 1,\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041163213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041406076",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24404#issuecomment-1041406076",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
    "id": 1041406076,
    "node_id": "IC_kwDOAOvK984-Eph8",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T11:47:43Z",
    "updated_at": "2022-02-16T11:47:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report! I added a commit on top of `merge-kiln` which should fix this.\r\nCould you rerun your tests?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041406076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041440986",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24404#issuecomment-1041440986",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
    "id": 1041440986,
    "node_id": "IC_kwDOAOvK984-EyDa",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T12:27:08Z",
    "updated_at": "2022-02-16T12:27:08Z",
    "author_association": "MEMBER",
    "body": "Hmm just tried to run your tests, but they still fail for me. Don't really know why, there shouldn't be a case where we return null anymore. How can I see the messages between geth and lh?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041440986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042421816",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24404#issuecomment-1042421816",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
    "id": 1042421816,
    "node_id": "IC_kwDOAOvK984-Ihg4",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T23:55:34Z",
    "updated_at": "2022-02-16T23:55:34Z",
    "author_association": "MEMBER",
    "body": "Oh great, thanks for that! I'll try our tests again, they're might not be using the correct version.\r\n\r\nI'll post my findings here :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042421816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042451209",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24404#issuecomment-1042451209",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24404",
    "id": 1042451209,
    "node_id": "IC_kwDOAOvK984-IosJ",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T00:44:53Z",
    "updated_at": "2022-02-17T00:44:53Z",
    "author_association": "MEMBER",
    "body": "Alrighty, your latest commit is passing on our end!\r\n\r\nThere were some other failures due to us expecting `SYNCING` but getting `ACCEPTED`. It doesn't really matter which of those we get, so I've just updated our tests to expect what you give us. It'll be interesting to see what other EE impls do when we introduce them. I suspect we'll just have to accept `SYNCING` or `ACCEPTED` in some scenarios :thinking: \r\n\r\nI think we can consider this issue resolved :tada: I'll close the issue, feel free to reopen if you like.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042451209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
