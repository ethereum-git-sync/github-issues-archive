{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19559",
  "id": 443141126,
  "node_id": "MDU6SXNzdWU0NDMxNDExMjY=",
  "number": 19559,
  "title": "Geth light mode look back configuration feature request",
  "user": {
    "login": "sidhujag",
    "id": 6238042,
    "node_id": "MDQ6VXNlcjYyMzgwNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sidhujag",
    "html_url": "https://github.com/sidhujag",
    "followers_url": "https://api.github.com/users/sidhujag/followers",
    "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
    "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
    "organizations_url": "https://api.github.com/users/sidhujag/orgs",
    "repos_url": "https://api.github.com/users/sidhujag/repos",
    "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sidhujag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "zsfelfoldi",
    "id": 9884311,
    "node_id": "MDQ6VXNlcjk4ODQzMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zsfelfoldi",
    "html_url": "https://github.com/zsfelfoldi",
    "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
    "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
    "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
    "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
    "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
    "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-05-12T20:00:30Z",
  "updated_at": "2020-12-29T03:23:31Z",
  "closed_at": "2019-05-14T16:55:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Great work guys! I’m doing a trustless bridge to eth from the Syscoin blockchain which is forked from Bitcoin.\r\n\r\nI use geth light mode to grab headers and a relayer which feeds syscoin with tx merkle roots for my merkle proof to verify spv transactions on the way back to syscoin from ethereum. For performance I only need to really keep about 100k blocks (you should move over the bridge within this time once you burn funds). Also because I noticed that geth seemed to download only a few months of headers but I now have learned that is because of the checkpoints at the time of release cycles.\r\n\r\nSince my consensus code depends on geth light mode via the relayer it would be great to have a deterministic way to know I should have geth synced to at least X blocks regardless of checkpoints.\r\n\r\nThe request is to allow geth light to sync back from the tip X blocks where X is defined via config. Therefor I wouldn’t be reliant on checkpoints.\r\n\r\nI also assume you don’t use very recent blocks as checkpoints for security reasons. Do you have an internal process around what the min amount of blocks to put the checkpoint back from the tip at the time? 1 month of blocks seems like what you have been using. Is this process followed every release? I still prefer having a config so I can set it and therefor not have to sync more than I need.\r\n\r\nThanks for reading!",
  "closed_by": {
    "login": "zsfelfoldi",
    "id": 9884311,
    "node_id": "MDQ6VXNlcjk4ODQzMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zsfelfoldi",
    "html_url": "https://github.com/zsfelfoldi",
    "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
    "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
    "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
    "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
    "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
    "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/491767163",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-491767163",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 491767163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTc2NzE2Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T10:29:00Z",
    "updated_at": "2019-05-13T10:29:00Z",
    "author_association": "MEMBER",
    "body": "Our checkpoints are a bit smarter. We don't hard code a starting header, rather a Merkle root of all the previous headers since genesis. This means that even though we only sync from some arbitrarily recent hard coded point in time, all past headers can still be retrieved and proven.\r\n\r\nI.e The CHT's goal is *both* to sync fast *and* to prove past headers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/491767163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492070608",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492070608",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492070608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjA3MDYwOA==",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T04:05:31Z",
    "updated_at": "2019-05-14T04:10:21Z",
    "author_association": "NONE",
    "body": "@karalabe \r\n\r\nok but I need some deterministic way to retrieve those headers in light mode so the process remains trustless. Although its great that the node won't lie about state likely it would still be awesome if we can define you know that we only need X amount of blocks to sync up so it doesn't take longer and longer to sync, also when an upgrade happens to CHT's then we still want to look back a minimum amount... likely X > Y where X is the amount of blocks back the CHT enforces nodes to download and Y is the minimum amount we need around in consensus to verify spv proofs so this setting won't actually affect the security domain around smart CHT's but will force nodes to download a bit more in times of upgrades.\r\n\r\nHow would I grab previous headers that have not been downloaded and check say a receipt root and transaction root? I would need a merkle path to the root and thus provide all siblings which I also don't have.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492070608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492123473",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492123473",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492123473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjEyMzQ3Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T08:02:21Z",
    "updated_at": "2019-05-14T08:02:21Z",
    "author_association": "MEMBER",
    "body": "You can actually \"just retrieve\" them. As far as I know, if a header is missing (under the CHT), the client will just pull it from the network and ensure it's correct by also implicitly proving it against the CHT.\r\n\r\nBut cc @zsfelfoldi @rjl493456442 just in case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492123473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492186298",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492186298",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492186298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjE4NjI5OA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T10:45:10Z",
    "updated_at": "2019-05-14T10:45:10Z",
    "author_association": "MEMBER",
    "body": "@sidhujag Regarding the CHT, we have a PR #19543 to update the CHT with the help of smart contract. So that we can update it as soon as possible, instead of waiting for the release cycles. But the minimal headers for clients to sync is `32768`. If you want to sync the chain with top of 1024 headers(for example), probably we need some customization.\r\n\r\nAnd if you want to look back some block headers which below the CHT, all you need to do is to \"retrieve\" them. Since all past headers are **covered** by CHT, so that we can verify the correctness of headers without sacrificing the security guarantee.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492186298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492293419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492293419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492293419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjI5MzQxOQ==",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T15:42:45Z",
    "updated_at": "2019-05-14T15:44:34Z",
    "author_association": "NONE",
    "body": "Would be nice if it were a configuration for that 32768, I have 40000 in my code as the amount of headers to rely on coming from Geth after playing around with light mode, I guess I was pretty close, but if I can set it to a number I'd prefer 60 or 80k as the minimum. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492293419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492320852",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492320852",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492320852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjMyMDg1Mg==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T16:55:32Z",
    "updated_at": "2019-05-14T16:55:32Z",
    "author_association": "MEMBER",
    "body": "@sidhujag you cannot configure the CHT frequency. In theory you could still download and verify more headers but as @karalabe and @rjl493456442 said you don't really need it. Any header from the entire history can be obtained on demand in a trustless and transparent way. Here is a description of our data structure used for checkpointing:\r\nhttps://github.com/ethereum/devp2p/blob/master/caps/les.md#canonical-hash-trie\r\nThis is basically a Merkle tree of all block hashes and Geth light client retrieves them with Merkle proofs if they are not already downloaded.\r\nHonestly I don't believe that downloading headers from an earlier point is a feature that many users would need but if you want to try it you can modify the starting block here:\r\nhttps://github.com/ethereum/go-ethereum/blob/master/light/lightchain.go#L474\r\nYou can start header syncing from any block between 0 and the currently calculated CHT head.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492320852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492408888",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19559#issuecomment-492408888",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19559",
    "id": 492408888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwODg4OA==",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T21:03:40Z",
    "updated_at": "2019-05-14T21:03:40Z",
    "author_association": "NONE",
    "body": "@zsfelfoldi \r\nI would like to avoid forking Geth as its under heavy development, more things to manage. I didn't ask to configure the CHT frequency all I asked was that if \"the minimal headers for clients to sync is 32768\" can be modified to any number which forces the node to download that many headers by default. I definitely can use that feature as my consensus code depends on it.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/492408888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
