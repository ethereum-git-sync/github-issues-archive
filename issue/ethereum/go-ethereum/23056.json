{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23056",
  "id": 922612903,
  "node_id": "MDU6SXNzdWU5MjI2MTI5MDM=",
  "number": 23056,
  "title": "Notify-work dynamic subscription",
  "user": {
    "login": "Ocaenyth",
    "id": 25250298,
    "node_id": "MDQ6VXNlcjI1MjUwMjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/25250298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Ocaenyth",
    "html_url": "https://github.com/Ocaenyth",
    "followers_url": "https://api.github.com/users/Ocaenyth/followers",
    "following_url": "https://api.github.com/users/Ocaenyth/following{/other_user}",
    "gists_url": "https://api.github.com/users/Ocaenyth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Ocaenyth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Ocaenyth/subscriptions",
    "organizations_url": "https://api.github.com/users/Ocaenyth/orgs",
    "repos_url": "https://api.github.com/users/Ocaenyth/repos",
    "events_url": "https://api.github.com/users/Ocaenyth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Ocaenyth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-06-16T13:27:20Z",
  "updated_at": "2021-06-17T08:57:02Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Why should this feature exist?\r\nFrom what I understand, there is currently only one way to benefit from the `notify-work` feature, which is to specify in the command line addresses to notify when there are new work packages available. This is pretty cumbersome to setup, since you need know ahead of time what you will want to ping before you start your node, and the alternative being that you need to restart the node every time you need to update any of those addresses.\r\n\r\nThis can also be important to ensure mining uptime and allow better redundancy, since having two different nodes with different `miner.extradata` (for identification purposes) notify a single worker will lead to block rejection at submission : \r\n\r\nWith `node_1` being `worker`'s main node, and `node_2` being here as a backup in case `node_1` were to be shut down\r\n-> `worker` receives a notification from `node_1`\r\n-> Starts finding a solution for `node_1`'s template\r\n-> `worker` receives a notification from `node_2`\r\n-> Starts finding a solution for `node_2`'s template\r\n-> Finds a solution and submits it to `node_1` (its \"main\")\r\n-> `node_1` rejects the solution\r\n\r\nThis means that we cannot specify in `node_2`'s configuration to notify `worker` of new work available, or it will lead to conflicting work while `node_1` is still up and running.\r\n\r\n## What are the use-cases?\r\nThe notify-work feature is really useful in terms of mining optimisation since it removes the need to poll for work and allows the workers to start working on more relevant blocks faster as a result.\r\n\r\nWith the current implementation, if I have workers at the following IPs : \r\n- 127.0.0.1:6000\r\n- 127.0.0.1:6010\r\n- 127.0.0.1:6020\r\n\r\nI can specify those addresses before starting my geth node with the following the argument `--miner.notify \"127.0.0.1:6000,127.0.0.1:6010,127.0.0.1:6020\"` which would work fine, until I decide to have another worker at `127.0.01:7000`. At that point I would have to update the `--miner.notify ...` argument, and restart the node altogether, resulting in downtime for my mining operation.\r\n\r\nNote: The IPs are chosen for clarity sake\r\n\r\n# Implementation\r\n\r\n## Do you have ideas regarding the implementation of this feature?\r\n\r\nWhat I suggest is adding ways to add/remove addresses to the notify-work list while the node is still running to prevent any downtime, by adding : \r\n- Two API endpoint like `{\"method\": \"miner_addNotifyWork\", \"params\": [\"127.0.0.1:7000\"]}` and `{\"method\": \"miner_removeNotifyWork\", \"params\": [\"127.0.0.1:7000\"]}`\r\n- Similar functions in the javascript console under the `miner` namespace : `miner.addNotifyWork(\"127.0.0.1:7000\")` and `miner.removeNotifyWork(\"127.0.0.1:7000\")`\r\n\r\nWe can also discuss whether these functions should receive : \r\n- a string : `miner.addNotifyWork(address: string)`\r\n- a list of strings : `miner.addNotifyWork(addresses: []string)`\r\n- a variadic parameter : `miner.addNotifyWork(address: ...string)`\r\n\r\n## Are you willing to implement this feature?\r\n\r\nI have not yet looked into the code but I am willing to contribute provided I am given some basic directions so that I know where to start with",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/862385898",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23056#issuecomment-862385898",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056",
    "id": 862385898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjM4NTg5OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T13:35:22Z",
    "updated_at": "2021-06-16T13:35:22Z",
    "author_association": "MEMBER",
    "body": "I'm a bit reluctant to add this feature as it seems super specific to a particular use case, you could always add a reverse proxy to send it to different locations dynamically and with the merge coming up, it seems a bit of a wasted effort to continue shipping new features for the PoW miner.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/862385898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863061059",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23056#issuecomment-863061059",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23056",
    "id": 863061059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzA2MTA1OQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T08:55:51Z",
    "updated_at": "2021-06-17T08:57:02Z",
    "author_association": "MEMBER",
    "body": "The remote sealer is based on an event loop. It shouldn't be too hard to add this feature there. If you want to implement this, you will need to add two channels (for add/remove) to the remoteSealer object, and read them in `remoteSealer.loop`, where the update to the notify URL list should be added. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863061059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
