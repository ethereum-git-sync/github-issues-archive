{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21675",
  "id": 716958320,
  "node_id": "MDU6SXNzdWU3MTY5NTgzMjA=",
  "number": 21675,
  "title": "Half a million open chaindata LevelDB files with main net archive node",
  "user": {
    "login": "terorie",
    "id": 21371810,
    "node_id": "MDQ6VXNlcjIxMzcxODEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/21371810?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terorie",
    "html_url": "https://github.com/terorie",
    "followers_url": "https://api.github.com/users/terorie/followers",
    "following_url": "https://api.github.com/users/terorie/following{/other_user}",
    "gists_url": "https://api.github.com/users/terorie/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terorie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terorie/subscriptions",
    "organizations_url": "https://api.github.com/users/terorie/orgs",
    "repos_url": "https://api.github.com/users/terorie/repos",
    "events_url": "https://api.github.com/users/terorie/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terorie/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-10-08T01:45:40Z",
  "updated_at": "2020-10-08T18:58:36Z",
  "closed_at": "2020-10-08T15:27:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.9.21`\r\nOS & Version: Linux 5.4.0-47-generic, Ubuntu 20.04\r\n\r\n#### Expected behaviour\r\n\r\nI would expect the number of open files to be less than a hundred thousand.\r\n\r\nFor example, a Parity v2.5 main net archive/tracing node has the following statistics.\r\n\r\n```\r\n# 5.2 TB archive data\r\narchive/db$ sudo du -sh .\r\n5.2T\t.\r\n\r\n# 512 open RocksDB SSTables\r\narchive/db$ lsof -p $(pidof parity) | grep .sst | wc -l\r\n512\r\n\r\n# 86.6K SSTable files\r\narchive/db$ find . -name '*.sst' | wc -l\r\n86566\r\n```\r\n\r\n#### Actual behaviour\r\n\r\ngo-ethereum's chaindata LevelDB uses much more handles and files. `debug.chaindbCompact` does not decrease the number of files noticeably.\r\n\r\n```\r\n# 5.1 TB archive data\r\ngeth/chaindata # du -sh .\r\n5.1T\t.\r\n\r\n# 522676 open LevelDB files !\r\ngeth/chaindata # lsof -p 559621 | grep .ldb | wc -l\r\n522676\r\n\r\n# 2.7 million LevelDB files\r\ngeth/chaindata # find . -name '*.ldb' | wc -l\r\n2686612\r\n```\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nSync an archive node on main net.\r\n\r\n#### Is this a bug?\r\n\r\nHonestly, I don't know. Modern file systems handle hundreds of thousands of files just fine. I think it's fair to discuss whether this could become a bottleneck.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705646804",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21675#issuecomment-705646804",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675",
    "id": 705646804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTY0NjgwNA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T15:27:41Z",
    "updated_at": "2020-10-08T15:27:41Z",
    "author_association": "MEMBER",
    "body": "We're aware of this. Generally LSM type databases make files in each subsequent level 2x as large as the previous one. This works well when the database is stable, but in the case of Ethereum, trie nodes are written by hash (i.e. fully random), so compaction keeps overwriting the entire files over and over and over again. By having smaller files (i.e. not 2x, rather the same size on every level) we can keep the disk IO at a much smaller number. The price is gazillions of 2MB files. Not ideal, but we're not aware of a better solution that doesn't blow up IO.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705646804/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705761353",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21675#issuecomment-705761353",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21675",
    "id": 705761353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTc2MTM1Mw==",
    "user": {
      "login": "terorie",
      "id": 21371810,
      "node_id": "MDQ6VXNlcjIxMzcxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/21371810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terorie",
      "html_url": "https://github.com/terorie",
      "followers_url": "https://api.github.com/users/terorie/followers",
      "following_url": "https://api.github.com/users/terorie/following{/other_user}",
      "gists_url": "https://api.github.com/users/terorie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terorie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terorie/subscriptions",
      "organizations_url": "https://api.github.com/users/terorie/orgs",
      "repos_url": "https://api.github.com/users/terorie/repos",
      "events_url": "https://api.github.com/users/terorie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terorie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T18:58:36Z",
    "updated_at": "2020-10-08T18:58:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@karalabe Thanks, makes sense. Parity goes great lengths to keep the number of files sane, sometimes compacting up to 20 minutes before starting up.\r\nDoes geth expose any config parameters for tuning LSM parameters?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705761353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
