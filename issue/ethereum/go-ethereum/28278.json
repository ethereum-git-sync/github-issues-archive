{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28278",
  "id": 1931665645,
  "node_id": "I_kwDOAOvK985zIuDt",
  "number": 28278,
  "title": "abigen doesn't generate interfaces for Caller/Transactor/Filterer",
  "user": {
    "login": "samlaf",
    "id": 9342524,
    "node_id": "MDQ6VXNlcjkzNDI1MjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9342524?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samlaf",
    "html_url": "https://github.com/samlaf",
    "followers_url": "https://api.github.com/users/samlaf/followers",
    "following_url": "https://api.github.com/users/samlaf/following{/other_user}",
    "gists_url": "https://api.github.com/users/samlaf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samlaf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samlaf/subscriptions",
    "organizations_url": "https://api.github.com/users/samlaf/orgs",
    "repos_url": "https://api.github.com/users/samlaf/repos",
    "events_url": "https://api.github.com/users/samlaf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samlaf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-10-08T06:20:17Z",
  "updated_at": "2023-10-16T01:00:33Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nabigen should generate interfaces for the structs it creates, to facilitate test doubles and other implementations.\r\n\r\nHere is one example in Optimism's codebase of them having to [define their own Caller interface](https://github.com/ethereum-optimism/optimism/blob/a9f62bb3bf04f8ae3fa0b6c87feb5dc920822907/op-challenger/game/factory.go#L17) and keep it updated.\r\n```\r\n// MinimalDisputeGameFactoryCaller is a minimal interface around [bindings.DisputeGameFactoryCaller].\r\n// This needs to be updated if the [bindings.DisputeGameFactoryCaller] interface changes.\r\ntype MinimalDisputeGameFactoryCaller interface {\r\n\tGameCount(opts *bind.CallOpts) (*big.Int, error)\r\n\tGameAtIndex(opts *bind.CallOpts, _index *big.Int) (struct {\r\n\t\tGameType  uint8\r\n\t\tTimestamp uint64\r\n\t\tProxy     common.Address\r\n\t}, error)\r\n}\r\n```\r\n\r\n# Implementation\r\n\r\nWill submit a PR shortly.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1761081567",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28278#issuecomment-1761081567",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278",
    "id": 1761081567,
    "node_id": "IC_kwDOAOvK985o9_jf",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T08:03:00Z",
    "updated_at": "2023-10-13T08:03:00Z",
    "author_association": "MEMBER",
    "body": "Could you give an example of exactly what you're trying to test and how and why you need these interfaces? Would help figure out the code a bit better.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1761081567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1763571156",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28278#issuecomment-1763571156",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28278",
    "id": 1763571156,
    "node_id": "IC_kwDOAOvK985pHfXU",
    "user": {
      "login": "samlaf",
      "id": 9342524,
      "node_id": "MDQ6VXNlcjkzNDI1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9342524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samlaf",
      "html_url": "https://github.com/samlaf",
      "followers_url": "https://api.github.com/users/samlaf/followers",
      "following_url": "https://api.github.com/users/samlaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/samlaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samlaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samlaf/subscriptions",
      "organizations_url": "https://api.github.com/users/samlaf/orgs",
      "repos_url": "https://api.github.com/users/samlaf/repos",
      "events_url": "https://api.github.com/users/samlaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samlaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-16T00:59:35Z",
    "updated_at": "2023-10-16T01:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Could you give an example of exactly what you're trying to test and how and why you need these interfaces? Would help figure out the code a bit better.\r\n\r\nI might be completely missing something here regarding how people generally use these abigen structs for testing. The only way I've found is to use an actual chain, or a simulated client (as described in https://medium.com/@m.vanderwijden1/intro-to-web3-go-part-4-5a21bc71fddc).\r\n\r\nBut for some unit tests, even a simulated client is painful to work with. If I'm only interacting with one or a few contracts, I might want to create a fake/mock of those contracts in golang directly, and interact with those. Having the interfaces for those contracts is necessary to implement these fake/mocks isn't it?\r\n\r\nCurrently in the eigensdk we're developing we're using these [chainClients](https://github.com/Layr-Labs/eigensdk-go/blob/5afbe24bcef6a5ad23722c0b1e5e139cd24083bf/chainio/clients/el_contracts_client.go#L106) structs which basically just wrap the bindings and expose their methods via this [hand-written interface](https://github.com/Layr-Labs/eigensdk-go/blob/5afbe24bcef6a5ad23722c0b1e5e139cd24083bf/chainio/clients/el_contracts_client.go#L17). But then if we change the contracts or add another contract, we need to update these manually etc. If abigen generated the interfaces directly all of this would be taken care of automatically. This, at least, is my current thinking. Let me know if I'm misunderstanding how to use these or if there's a better way to go about this!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1763571156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
