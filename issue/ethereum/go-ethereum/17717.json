{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17717",
  "id": 362085392,
  "node_id": "MDU6SXNzdWUzNjIwODUzOTI=",
  "number": 17717,
  "title": "[feature requests] From() Method in types.Transaction",
  "user": {
    "login": "lmittmann",
    "id": 3458786,
    "node_id": "MDQ6VXNlcjM0NTg3ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3458786?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lmittmann",
    "html_url": "https://github.com/lmittmann",
    "followers_url": "https://api.github.com/users/lmittmann/followers",
    "following_url": "https://api.github.com/users/lmittmann/following{/other_user}",
    "gists_url": "https://api.github.com/users/lmittmann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lmittmann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lmittmann/subscriptions",
    "organizations_url": "https://api.github.com/users/lmittmann/orgs",
    "repos_url": "https://api.github.com/users/lmittmann/repos",
    "events_url": "https://api.github.com/users/lmittmann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lmittmann/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1269313112,
      "node_id": "MDU6TGFiZWwxMjY5MzEzMTEy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:backlog",
      "name": "status:backlog",
      "color": "29ceb3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-09-20T08:58:09Z",
  "updated_at": "2021-06-03T08:45:33Z",
  "closed_at": "2021-06-03T08:45:33Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi, I'd like to propose to add a function `From()` to the type [`Transaction`](https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go). This function would make it possible to retrieve the sender of a transaction more conveniently.\r\n\r\nThe transaction already contains the unexportet field `from` for cashing reasons. I am not really familiar with the mechanics that populate and use this field. However, I imagine the implementation of the function could look something like this:\r\n\r\n```go\r\n// From returns the sender address of the transaction.\r\nfunc (tx *Transaction) From() *common.Address {\r\n\tif tx.from == nil {\r\n\t\tfrom, err := Sender(HomesteadSigner{}, tx)\r\n\t\tif err != nil {\r\n\t\t\treturn nil\r\n\t\t}\r\n\t\ttx.from = from\r\n\t}\r\n\treturn tx.from\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562061728",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17717#issuecomment-562061728",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717",
    "id": 562061728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjA2MTcyOA==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T10:11:03Z",
    "updated_at": "2019-12-05T10:11:03Z",
    "author_association": "MEMBER",
    "body": "An idea would be to add a function like `expensiveGuessOfSender()`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562061728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/565686249",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17717#issuecomment-565686249",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717",
    "id": 565686249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTY4NjI0OQ==",
    "user": {
      "login": "princesinha19",
      "id": 28489437,
      "node_id": "MDQ6VXNlcjI4NDg5NDM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/28489437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/princesinha19",
      "html_url": "https://github.com/princesinha19",
      "followers_url": "https://api.github.com/users/princesinha19/followers",
      "following_url": "https://api.github.com/users/princesinha19/following{/other_user}",
      "gists_url": "https://api.github.com/users/princesinha19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/princesinha19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/princesinha19/subscriptions",
      "organizations_url": "https://api.github.com/users/princesinha19/orgs",
      "repos_url": "https://api.github.com/users/princesinha19/repos",
      "events_url": "https://api.github.com/users/princesinha19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/princesinha19/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-14T05:39:15Z",
    "updated_at": "2019-12-14T05:39:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lmittmann As far as I understand you want to get the sender of the transaction. Right?\r\nIf yes, You can get it by using **eth_getTransaction()**.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/565686249/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/698306804",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17717#issuecomment-698306804",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717",
    "id": 698306804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODMwNjgwNA==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-24T12:17:29Z",
    "updated_at": "2020-09-24T12:17:29Z",
    "author_association": "MEMBER",
    "body": "I don't think this needs to be a feature of the transaction. It's currently possible to retrieve the signer of a transaction like this:\r\n```\r\nsender, err := types.Sender(types.HomesteadSigner{}, tx)\r\n```\r\nThis is imo an acceptable api for golang users. `Sender` also caches the result so only the first call to it will execute the expensive address recovery from the transaction. As @princesinha19 pointed out the `eth_getTransaction()` api enables json-rpc users to get the transaction sender.\r\n\r\nThere exists pretty okayish api's for both json-rpc and golang so I don't think we need this feature, especially since many users would just use it willy-nilly and not think about the implications (runtime). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/698306804/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/807419035",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17717#issuecomment-807419035",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17717",
    "id": 807419035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzQxOTAzNQ==",
    "user": {
      "login": "alexandru-calinoiu",
      "id": 679198,
      "node_id": "MDQ6VXNlcjY3OTE5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/679198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandru-calinoiu",
      "html_url": "https://github.com/alexandru-calinoiu",
      "followers_url": "https://api.github.com/users/alexandru-calinoiu/followers",
      "following_url": "https://api.github.com/users/alexandru-calinoiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandru-calinoiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandru-calinoiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandru-calinoiu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandru-calinoiu/orgs",
      "repos_url": "https://api.github.com/users/alexandru-calinoiu/repos",
      "events_url": "https://api.github.com/users/alexandru-calinoiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandru-calinoiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-25T20:23:19Z",
    "updated_at": "2021-03-25T20:30:29Z",
    "author_association": "NONE",
    "body": "When I try to get the sender this way I get an error `invalid transaction v, r, s values`\r\n\r\n_Edit:_ Figured it out, I needed to use `NewEIP2930Signer` in my case, need to study this more\r\n\r\n_Edit:_ Given this variation I think this feature request makes sens, it will hide some of this implementation details from the end user.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/807419035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
