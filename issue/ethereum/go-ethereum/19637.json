{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19637",
  "id": 449762171,
  "node_id": "MDU6SXNzdWU0NDk3NjIxNzE=",
  "number": 19637,
  "title": "txPool: validateTx, wrong signature returns ErrInsufficientFunds",
  "user": {
    "login": "salanfe",
    "id": 7328581,
    "node_id": "MDQ6VXNlcjczMjg1ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/salanfe",
    "html_url": "https://github.com/salanfe",
    "followers_url": "https://api.github.com/users/salanfe/followers",
    "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
    "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
    "organizations_url": "https://api.github.com/users/salanfe/orgs",
    "repos_url": "https://api.github.com/users/salanfe/repos",
    "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/salanfe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-05-29T11:52:45Z",
  "updated_at": "2019-05-30T10:31:54Z",
  "closed_at": "2019-05-30T09:44:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "https://github.com/ethereum/go-ethereum/blob/86e77900c53ebce3309099a39cbca38eb4d62fdf/core/tx_pool.go#L634\r\n\r\nI was playing with signature on my local PoA network and got the error `insufficient funds for gas * price + value` when sending a transaction with an invalid signature. Shouldn't we get `invalid sender` (for example) instead ? I think I am getting `insufficient funds for gas * price + value` because the `ecRecover` still returns a valid `from` address. However, because the signature is invalid, this address is not the one of my account (which has like 2 trillion ethers). Therefore this unknown account has no ether and `getBalance()` returns zero which triggers the error.\r\n\r\nhere is a code sample to reproduce the error\r\n```go\r\nsigner := types.NewEIP155Signer(big.NewInt(6464))\r\n\r\n// dummy transaction data\r\nnonce := uint64(0)\r\nto := common.HexToAddress(\"0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79e\") // dummy recipient address\r\ngasPrice := big.NewInt(1)\r\ngasLimit := uint64(23000)\r\n\r\n// create 2 different transactions\r\ntx1 := types.NewTransaction(nonce, to, nil, gasLimit, gasPrice, []byte{})\r\ntx2 := types.NewTransaction(nonce, to, nil, gasLimit, gasPrice, []byte(\"hello\"))\r\n\r\n// hash and sign transaction 1\r\nhashTx1 := signer.Hash(tx1)\r\nsigTx1, _ := crypto.Sign(hashTx1.Bytes(), privateKey) // account owns 2 trillion+ ethers\r\n\r\n// inject signature of transaction 1 into transaction 2\r\nsignedTx, _ := tx2.WithSignature(signer, sigTx1)\r\n\r\n// send transaction to node. Returns error insufficient funds for gas * price + value\r\nif err := client.SendTransaction(context.Background(), signedTx); err != nil {\r\n\tlog.Fatalln(err) // insufficient funds for gas * price + value\r\n}\r\n```\r\n\r\nthis is my current geth version: `Geth/miner1/v1.8.27-stable-4bcc0a37/linux-amd64/go1.11.9`\r\n\r\nHowever, I believe this is unlikely to come across this behaviour as the common workflow is to use\r\n\r\n```go\r\nsignedTx, _ := types.SignTx(tx, signer, privateKey)\r\n```\r\nfor signing transaction which prevents messing around with the transaction payload and its signature.\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497138831",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19637#issuecomment-497138831",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637",
    "id": 497138831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzEzODgzMQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T22:59:53Z",
    "updated_at": "2019-05-29T23:00:19Z",
    "author_association": "MEMBER",
    "body": "I guess the reason is that `from` is not part of the RLP that get's signed - but `from` is recovered from the signature. So it is not clear if the signature is invalid - but an address is recovered that just does not have funds.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497138831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497231988",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19637#issuecomment-497231988",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637",
    "id": 497231988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzIzMTk4OA==",
    "user": {
      "login": "salanfe",
      "id": 7328581,
      "node_id": "MDQ6VXNlcjczMjg1ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salanfe",
      "html_url": "https://github.com/salanfe",
      "followers_url": "https://api.github.com/users/salanfe/followers",
      "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
      "organizations_url": "https://api.github.com/users/salanfe/orgs",
      "repos_url": "https://api.github.com/users/salanfe/repos",
      "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salanfe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T07:18:51Z",
    "updated_at": "2019-05-30T07:19:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are right. We would need a 10th field on the transaction that holds the `from`. Signing the hash of this transaction: \r\n- from\r\n- nonce\r\n- to\r\n- gas\r\n- gasPrice\r\n- value\r\n- data\r\n- v = chainID\r\n- r = 0\r\n- s = 0\r\n\r\nIt's surprising that there is no way to match the signature against the transaction payload, so that we are left checking the balance of the recovered account to verify the validity of the transaction (just went through the yellow paper, Appendix F, and to make sure I didn't missed anything).\r\n\r\nDo you have any idea (or doc/links) why this was designed as such ? Is it because the collision risk with another `from` is so low that we considered it safe ? thx",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497231988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497271859",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19637#issuecomment-497271859",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637",
    "id": 497271859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzI3MTg1OQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T09:44:58Z",
    "updated_at": "2019-05-30T09:44:58Z",
    "author_association": "MEMBER",
    "body": "There was no reason to add 20 more extra bytes per transaction. On mainnet that currently would total to 20B * 460M tx = 9.2GB of redundant data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497271859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497284925",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19637#issuecomment-497284925",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19637",
    "id": 497284925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzI4NDkyNQ==",
    "user": {
      "login": "salanfe",
      "id": 7328581,
      "node_id": "MDQ6VXNlcjczMjg1ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salanfe",
      "html_url": "https://github.com/salanfe",
      "followers_url": "https://api.github.com/users/salanfe/followers",
      "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
      "organizations_url": "https://api.github.com/users/salanfe/orgs",
      "repos_url": "https://api.github.com/users/salanfe/repos",
      "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salanfe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T10:31:34Z",
    "updated_at": "2019-05-30T10:31:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "thank you 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/497284925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
