{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21965",
  "id": 757882583,
  "node_id": "MDU6SXNzdWU3NTc4ODI1ODM=",
  "number": 21965,
  "title": "Transaction ordering within a block should be non-deterministic.",
  "user": {
    "login": "Thrasymachus01",
    "id": 71150099,
    "node_id": "MDQ6VXNlcjcxMTUwMDk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/71150099?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Thrasymachus01",
    "html_url": "https://github.com/Thrasymachus01",
    "followers_url": "https://api.github.com/users/Thrasymachus01/followers",
    "following_url": "https://api.github.com/users/Thrasymachus01/following{/other_user}",
    "gists_url": "https://api.github.com/users/Thrasymachus01/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Thrasymachus01/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Thrasymachus01/subscriptions",
    "organizations_url": "https://api.github.com/users/Thrasymachus01/orgs",
    "repos_url": "https://api.github.com/users/Thrasymachus01/repos",
    "events_url": "https://api.github.com/users/Thrasymachus01/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Thrasymachus01/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-12-06T09:18:37Z",
  "updated_at": "2021-01-21T09:49:49Z",
  "closed_at": "2021-01-21T09:49:49Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\n76% of eth nodes are currently running Geth where the default transaction ordering is deterministic - [SortByPriceAndNonce()](https://github.com/ethereum/go-ethereum/blob/290e851f57f5d27a1d5f0f7ad784c836e017c337/core/types/transaction.go#L372) \r\n\r\n`SortByPriceAndNonce()` orders transactions by gas fees (while still preserving nonce ordering).\r\n\r\nIt means an attacker can view transactions that have a high chance of being included in the next block and frontrun that transaction by simply broadcasting a transaction with a higher gas fee. Since 76% of nodes run geth the probability that he will run a successful attack is:\r\n`76% chance - chance of his tx being included in the next block - the chance of victim's tx being included in the next block`\r\n\r\nThis attack can easily be avoided by adding some sort of randomness to the way tx's are sorted in a block. Frontrunning and deterministic ordering of tx's holds more security vulns than just at uniswap (for obvious reasons, i won't disclose here).\r\n\r\n# Implementation\r\n\r\nAdd a randomizer function (instead of sorting by gas fees) to sort transactions that still preserves nonce ordering.",
  "closed_by": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739546899",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21965#issuecomment-739546899",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
    "id": 739546899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTU0Njg5OQ==",
    "user": {
      "login": "DbIsFantastic",
      "id": 71758522,
      "node_id": "MDQ6VXNlcjcxNzU4NTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/71758522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DbIsFantastic",
      "html_url": "https://github.com/DbIsFantastic",
      "followers_url": "https://api.github.com/users/DbIsFantastic/followers",
      "following_url": "https://api.github.com/users/DbIsFantastic/following{/other_user}",
      "gists_url": "https://api.github.com/users/DbIsFantastic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DbIsFantastic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DbIsFantastic/subscriptions",
      "organizations_url": "https://api.github.com/users/DbIsFantastic/orgs",
      "repos_url": "https://api.github.com/users/DbIsFantastic/repos",
      "events_url": "https://api.github.com/users/DbIsFantastic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DbIsFantastic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T18:58:58Z",
    "updated_at": "2020-12-06T19:16:46Z",
    "author_association": "NONE",
    "body": "First of all, it is very hard to guarantee security in a distributed system. Shuffle doesn't solve the problem, because the attacker could send tons of transactions. Actually, front-run attack is the business of DApp, I don't know whether geth should take care of it. \r\n\r\nThese AMA swap protocols actually encourage arbitrage to keep the price fair. Now let's think about why front-run transactions could make a profit. \r\n\r\nThe front-runner first need to catch a user's normal swap transaction, for example, swap 100 ETH to 60,000 XXX(any coin exists in the uniswap), with gasprice 100 GWei. \r\nThen the front-runner first sends a tx with a little higher gasprice, 101 GWei, so that this tx could be placed before the normal transaction to make the user trade with a much bigger slippage. And then the front-runner sends another tx with 99 Gwei as its gasprice to swap XXX back ETH, so that he could make a profit. The order of these three txs is:\r\nFrontRunner's first tx-> User's tx -> FrontRunner's second tx.\r\n\r\nBut the risk of the front-runner is that the slippage created by his first transaction will be flattened easily by arbitragers, since the front-runner must send two txs with different gasprice, which are not atomic, then the front-runner won't get any profits, and even lost some money. In this way the normal user will not be affected at all.  The order of these four txs is:\r\nFrontRunner's first tx -> Arbitrager's tx -> User's tx -> FrontRunner's second tx. \r\n\r\nBut front-run txs still exist, why? The real reason is that there is usually only 1 pool for this pair so that arbitragers couldn't work as expected by AMA protocol. So why not suggesting adding more pool for the pair in other AMA protocols and keep AMA protocols works as expected?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739546899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739747142",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21965#issuecomment-739747142",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
    "id": 739747142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTc0NzE0Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T08:05:38Z",
    "updated_at": "2020-12-07T08:05:38Z",
    "author_association": "MEMBER",
    "body": "There are a couple of things at play here. \r\nFirst of all, geth cannot dictate a policy that would not benefit miners. If we order transaction to _not_ maximise miner profit, rational miners will just modify geth, or use some fork, to ensure that profit is maximised. So highest gas fee wins. \r\n\r\nWith the release of [Red Janey](https://github.com/ethereum/go-ethereum/releases/tag/v1.9.19), we did make one big change, in that we removed the randomization, and made the ordering first as price, then as fifo. This removes the incentive for back-runner to flood the network with transactions in order to back-run a transaction. \r\n\r\nBut, as for front-running, not much we can do at the infrastructure layer.    ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739747142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739886786",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21965#issuecomment-739886786",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
    "id": 739886786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTg4Njc4Ng==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T12:25:49Z",
    "updated_at": "2020-12-07T12:26:49Z",
    "author_association": "MEMBER",
    "body": "Personally, I agree with @holiman's point. We introduce deterministic sorting which can remove most of the useless transactions. \r\n\r\nBut even with the non-deterministic sorting the front-running actually won't be fixed(e.g. with some nonce checking in the arbitrage contract and sending lots of arbitrage transactions to ensure the user's tx is in the middle?) but It will make back-running worse.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739886786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739893564",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21965#issuecomment-739893564",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
    "id": 739893564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTg5MzU2NA==",
    "user": {
      "login": "Thrasymachus01",
      "id": 71150099,
      "node_id": "MDQ6VXNlcjcxMTUwMDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/71150099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Thrasymachus01",
      "html_url": "https://github.com/Thrasymachus01",
      "followers_url": "https://api.github.com/users/Thrasymachus01/followers",
      "following_url": "https://api.github.com/users/Thrasymachus01/following{/other_user}",
      "gists_url": "https://api.github.com/users/Thrasymachus01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Thrasymachus01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Thrasymachus01/subscriptions",
      "organizations_url": "https://api.github.com/users/Thrasymachus01/orgs",
      "repos_url": "https://api.github.com/users/Thrasymachus01/repos",
      "events_url": "https://api.github.com/users/Thrasymachus01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Thrasymachus01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T12:39:58Z",
    "updated_at": "2020-12-07T12:39:58Z",
    "author_association": "NONE",
    "body": "@holiman It's possible to still get the top ~100 most profitable transactions, select them for inclusion in the block, randomize them and then sort them by nonce.\r\n\r\nThe miner's won't lose any profit like this but the order of the transactions within the block are randomized.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739893564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739894460",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21965#issuecomment-739894460",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21965",
    "id": 739894460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTg5NDQ2MA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T12:41:55Z",
    "updated_at": "2020-12-07T12:41:55Z",
    "author_association": "MEMBER",
    "body": "@Thrasymachus01 Yes, but it's still hurt for the back-running. They will send A LOT of transactions with the same price to flood the network.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739894460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
