{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2050",
  "id": 120295288,
  "node_id": "MDU6SXNzdWUxMjAyOTUyODg=",
  "number": 2050,
  "title": "[swarm] IPFS - Swarm integration",
  "user": {
    "login": "zelig",
    "id": 769725,
    "node_id": "MDQ6VXNlcjc2OTcyNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zelig",
    "html_url": "https://github.com/zelig",
    "followers_url": "https://api.github.com/users/zelig/followers",
    "following_url": "https://api.github.com/users/zelig/following{/other_user}",
    "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
    "organizations_url": "https://api.github.com/users/zelig/orgs",
    "repos_url": "https://api.github.com/users/zelig/repos",
    "events_url": "https://api.github.com/users/zelig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zelig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-12-03T23:22:35Z",
  "updated_at": "2018-12-14T13:17:21Z",
  "closed_at": "2017-09-08T07:53:30Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "the plan is in the making, watch this space.\nMy current line of though is to have an ipfs module implementing `swarm/network.CloudStore` interface. This can run alonside bzz push (syncing). I see this as the quickest way to MVP\n- interoperability in terms of network \n- client interoperability with different stages of bzz implementation / ipfs only \n- swap incentivisation for ipfs \n",
  "closed_by": {
    "login": "zelig",
    "id": 769725,
    "node_id": "MDQ6VXNlcjc2OTcyNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zelig",
    "html_url": "https://github.com/zelig",
    "followers_url": "https://api.github.com/users/zelig/followers",
    "following_url": "https://api.github.com/users/zelig/following{/other_user}",
    "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
    "organizations_url": "https://api.github.com/users/zelig/orgs",
    "repos_url": "https://api.github.com/users/zelig/repos",
    "events_url": "https://api.github.com/users/zelig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zelig/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222774961",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2050#issuecomment-222774961",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050",
    "id": 222774961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjc3NDk2MQ==",
    "user": {
      "login": "rht",
      "id": 395821,
      "node_id": "MDQ6VXNlcjM5NTgyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/395821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rht",
      "html_url": "https://github.com/rht",
      "followers_url": "https://api.github.com/users/rht/followers",
      "following_url": "https://api.github.com/users/rht/following{/other_user}",
      "gists_url": "https://api.github.com/users/rht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rht/subscriptions",
      "organizations_url": "https://api.github.com/users/rht/orgs",
      "repos_url": "https://api.github.com/users/rht/repos",
      "events_url": "https://api.github.com/users/rht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T18:19:31Z",
    "updated_at": "2016-06-01T05:14:32Z",
    "author_association": "NONE",
    "body": "There is a much simpler integration (than to do with the components of devp2p-libp2p) that could be done right away: replace swarm's local storage (https://github.com/ethereum/go-ethereum/tree/swarm/swarm/storage) with ipfs' blockstore(flatfs)+chunker (https://github.com/ipfs/go-ipfs/tree/master/blocks/blockstore+https://github.com/ipfs/go-ipfs/tree/master/importer/chunk).\n\nThe perf boost in the write throughput alone should be more than sufficient to justify this rewrite/offload.\n\nCurrent dbStore (leveldb) used in bzzhash:\n![ed8pddx](https://cloud.githubusercontent.com/assets/395821/15685070/437be12a-2794-11e6-88a2-34383c104691.png)\n\nWith ipfs flatfs (see https://github.com/rht/go-ethereum/commit/a709701793934d9d66185dd83c898dd65999a087, could still be further optimized):\n![outdata](https://cloud.githubusercontent.com/assets/395821/15685109/734b3a0e-2794-11e6-82d8-b881b67d7d7b.png)\n\nHere is the script to reproduce the plot: https://gist.github.com/rht/2264668885ca5f717c20af26033f77c1.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222774961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222905551",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2050#issuecomment-222905551",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050",
    "id": 222905551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjkwNTU1MQ==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T06:35:12Z",
    "updated_at": "2016-06-01T06:35:12Z",
    "author_association": "MEMBER",
    "body": "@rht thanks for this but i do not understand your measurements on several levels.\n- bzzhash has nothing to do with the storage. It only runs the chunker to calculate the swarm hash of a document.\n- the graph legend shows both `cp` and `bzzhash` with the sam green (at  least I am unable to distinguish). in the lower graph I guess the green that looks almost horizontal is the `cp` but the top graph only shows one green line.\n- even with assuming the higher times the lower graph shows ipfs flatfs to take twice the time.\n- Since the chunker is parallelised, measurements should be showing increasing file size on the x axis, not number of files (see [chunker benchmarks](https://github.com/ethereum/go-ethereum/blob/swarm/swarm/storage/chunker_test.go#L201). As you can see the y is linear in number of files (not toaaao surprising), therefore not that informative.\n- not sure t\n- since swarm chunk size is different from IPFS, so there are simply more db writes in swarm, making the comparison incorrect\n- Finally, even if all the comparisons were correct, it still may not make sense since it is the end- to-end scenarios in a networked ethereum that swarm should be optimise on.\n\nAll this said, we encourage you to play, measure,  and will really appreciate any feedback sent our way.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222905551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222940312",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2050#issuecomment-222940312",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050",
    "id": 222940312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjk0MDMxMg==",
    "user": {
      "login": "rht",
      "id": 395821,
      "node_id": "MDQ6VXNlcjM5NTgyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/395821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rht",
      "html_url": "https://github.com/rht",
      "followers_url": "https://api.github.com/users/rht/followers",
      "following_url": "https://api.github.com/users/rht/following{/other_user}",
      "gists_url": "https://api.github.com/users/rht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rht/subscriptions",
      "organizations_url": "https://api.github.com/users/rht/orgs",
      "repos_url": "https://api.github.com/users/rht/repos",
      "events_url": "https://api.github.com/users/rht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T09:27:47Z",
    "updated_at": "2016-06-01T09:59:28Z",
    "author_association": "NONE",
    "body": "@zelig some bayesian update:\n- I see. I was wondering of this as well. I did insert some lines to actually put the content into the bzz dir and to handle a directory as argument (https://github.com/rht/go-ethereum/commit/a709701793934d9d66185dd83c898dd65999a087 L88-105). For clarity's sake, I'd call this `bzzhashput`. Should I use the api (DPA?) instead, since it includes data storage?\n- Right, `tar` and/or `cp` should be the \"speed of light\" in this measurement (local file transfer), except in few cases where there are lots of duplicate data. In the top graph, the green line refers to `bzzhashput`. Due to chunking (hence increased number of _synchronous_ db write calls), I suspect it to be even slower than sqlite3.\n- The statement should be \"ipfs with flatfs takes ~twice the time of bzzhashput with flatfs\". Indeed, I think there are still some crufts in the merkle dag construction & chunking in ipfs.\n- The lines are mostly linear in themselves, but they serve to compare how each tools scale.\n- ? I can't parse this statement. I assume this to be \"not sure though\" and is part of the previous bullet point.\n- Sorry, here is more info: IPFS uses 256KB chunk size as default (in this benchmark I use 10KB chunk size). Swarm, I think, uses 32KB chunk size? Hence in this scenario there should be fewer db writes in swarm storage.\n- I take this to mean \"e2e network optimization should be prioritized first\", which possibly concludes to \"localstorage perf doesn't affect the _overall_ e2e network transfer process\". This may be the case in isolation, but is not so when the components are glued in together. The time it takes to chunk+store to local (used in netstore https://github.com/ethereum/go-ethereum/commit/f732cd391aadd65dc70c4b8679dc176989627336#L81) could be much longer than network latency. Another point is the amount of rewrite required while maintaining compatibility is much less than the network components, and that there is already the benchmark as a deciding instrument.\n\n> All this said, we encourage you to play, measure, and will really appreciate any feedback sent our way.\n\nWill do (am doing). I haven't measured the chunking perf of IPFS vs Swarm yet. So, the most I can propose from the benchmark for now is to replace the localstorage in Swarm with the one used in IPFS. Also, I have some net measurements in the pipeline.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/222940312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328029644",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2050#issuecomment-328029644",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2050",
    "id": 328029644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODAyOTY0NA==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T07:53:30Z",
    "updated_at": "2017-09-08T07:53:30Z",
    "author_association": "MEMBER",
    "body": "not on the agenda right now",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328029644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
