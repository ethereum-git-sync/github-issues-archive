{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25162",
  "id": 1283493430,
  "node_id": "I_kwDOAOvK985MgI42",
  "number": 25162,
  "title": "clef: failing to invoke the UI API after reading the docs",
  "user": {
    "login": "attila-lendvai",
    "id": 840345,
    "node_id": "MDQ6VXNlcjg0MDM0NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/840345?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/attila-lendvai",
    "html_url": "https://github.com/attila-lendvai",
    "followers_url": "https://api.github.com/users/attila-lendvai/followers",
    "following_url": "https://api.github.com/users/attila-lendvai/following{/other_user}",
    "gists_url": "https://api.github.com/users/attila-lendvai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/attila-lendvai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/attila-lendvai/subscriptions",
    "organizations_url": "https://api.github.com/users/attila-lendvai/orgs",
    "repos_url": "https://api.github.com/users/attila-lendvai/repos",
    "events_url": "https://api.github.com/users/attila-lendvai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/attila-lendvai/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-06-24T09:19:36Z",
  "updated_at": "2022-07-14T09:03:00Z",
  "closed_at": "2022-07-08T14:41:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nOn Guix (Linux):\r\n\r\n```\r\nGeth\r\nVersion: 1.10.18-stable\r\nGit Commit: de23cf910b814867d5c5d1ad6164835d79069638\r\nGit Commit Date: 20220525\r\nArchitecture: amd64\r\nGo Version: go1.18.1\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=go\r\n```\r\n\r\n#### Expected behaviour\r\n\r\nclef is started like this (as captured from `ps afxu`, see below):\r\n\r\n```\r\n/path/geth-binary-1.10.18-clef/bin/clef --stdio-ui --keystore /var/lib/swarm/mainnet/clef/keystore\r\n --configdir /var/lib/swarm/mainnet/clef --chainid 100 --rules /path/rules.js --nousb --lightkdf\r\n --4bytedb-custom /path/4byte.json --pcscdpath '' --auditlog '' --loglevel 3\r\n --ipcpath /var/lib/swarm/mainnet/clef\r\n```\r\n\r\nthen:\r\n\r\n`echo '{\"id\": 0, \"jsonrpc\": \"2.0\", \"method\": \"clef_listAccounts\", \"params\": []}' >>/var/lib/swarm/mainnet/clef/stdin`\r\n\r\nto which clef should respond with the account details in a json to its stdout.\r\n\r\n#### Actual behaviour\r\n\r\nin the terminal, where clef is running, i see the following:\r\n\r\n```\r\nWARN [06-10|13:13:15.423] Served clef_listAccounts                 conn=/dev/stdin reqid=4 duration=\"27.262µs\" err=\"the method clef_listAccounts does not exist/is not available\"\r\n{\"jsonrpc\":\"2.0\",\"id\":4,\"error\":{\"code\":-32601,\"message\":\"the method clef_listAccounts does not exist/is not available\"}}\r\n```\r\n\r\nsame happens when using `ui_listAccounts` (the doc is not consistent about the names).\r\n\r\n#### My ultimate goal\r\n\r\nis to be able to create new accounts as needed (for running a dynamic number of Bee nodes), while clef is already started and running (i.e. i cannot just spawn a new clef process and request the new account creation from the command line... or can i run multiple clef instances using the same `--configdir` and `--keystore`? i guess i shouldn't, even if it works.)\r\n\r\ni also cannot add a rule for new account creation (because it needs a password argument), which leads to a convoluted, multi-step interaction when using the RPC API.\r\n\r\n#### Sidenote on starting clef\r\n\r\nthe actual starting of the clef process is more convoluted. this may interfere, but i don't suspect it:\r\n\r\n```\r\nmkfifo ${DATA_DIR}/stdin ${DATA_DIR}/stdout\r\n(\r\nexec 3>${DATA_DIR}/stdin\r\nwhile read < ${DATA_DIR}/stdout; do\r\n  if [[ \"$REPLY\" =~ \"enter the password\" ]]; then\r\n    echo '{ \"jsonrpc\": \"2.0\", \"id\":1, \"result\": { \"text\":\"'\"$CLEF_PASSWORD\"'\" } }' > ${DATA_DIR}/stdin\r\n    # We don't break the piping, so that it remains possible to echo 'foo' >stdin.\r\n    # break\r\n  fi\r\ndone\r\n) &\r\n\r\nexec ${CLEF} --stdio-ui --keystore \"${KEYSTORE}\" --configdir \"${DATA_DIR}\" --chainid \"${CHAINID}\" --rules \"${RULES}\" --nousb --lightkdf --4bytedb-custom \"${FOURBYTE}\" --pcscdpath \"\" --auditlog \"\" --loglevel 3 --ipcpath \"${DATA_DIR}\" < ${DATA_DIR}/stdin | tee ${DATA_DIR}/stdout\r\n```\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1178963641",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25162#issuecomment-1178963641",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162",
    "id": 1178963641,
    "node_id": "IC_kwDOAOvK985GRY65",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-08T13:01:15Z",
    "updated_at": "2022-07-08T13:01:15Z",
    "author_association": "MEMBER",
    "body": "The `ui_` namespace and the `clef` namespace are two different things. We have to different APIs, \r\n\r\n1. External API. \r\n2. Internal/privileged API. \r\n\r\nIn the internal API, there is a bidirectionality. The `clef` binary can ask for things from the `ui` using the `ui_` namespace. For example when it needs a password. And the ui, or \"wrapper\", can ask for things using the `clef_` api. \r\nSo I don't _think_ there's any inconsistency in the docs). \r\n\r\n---\r\n\r\nI can repro your case though.  \r\n\r\n```\r\n[user@work clique_clef]$ clef --keystore /tmp/foo  --chainid 15  --suppress-bootwarn --stdio-ui\r\nINFO [07-08|14:56:21.883] Using stdin/stdout as UI-channel \r\nINFO [07-08|14:56:22.172] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\r\n{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"ui_onInputRequired\",\"params\":[{\"title\":\"Master Password\",\"prompt\":\"Please enter the password to decrypt the master seed\",\"isPassword\":true}]}\r\n{  \"id\": 13,  \"jsonrpc\": \"2.0\",  \"method\": \"clef_listWallets\"}\r\nWARN [07-08|14:56:31.544] Served clef_listWallets                  conn=/dev/stdin reqid=13 duration=\"31.665µs\" err=\"the method clef_listWallets does not exist/is not available\"\r\n{\"jsonrpc\":\"2.0\",\"id\":13,\"error\":{\"code\":-32601,\"message\":\"the method clef_listWallets does not exist/is not available\"}}\r\n```\r\nBut if I tell it to use a `signer-secret`, instead of asking the `ui` for it, things work: \r\n\r\n```\r\n[user@work clique_clef]$ clef --keystore /tmp/foo  --chainid 15  --suppress-bootwarn --stdio-ui --signersecret /tmp/foo\r\nINFO [07-08|14:56:49.968] Using stdin/stdout as UI-channel \r\nINFO [07-08|14:56:50.272] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\r\nWARN [07-08|14:56:50.272] Failed to open master, rules disabled    err=\"failed stat on /tmp/foo: stat /tmp/foo: no such file or directory\"\r\nINFO [07-08|14:56:50.272] Starting signer                          chainid=15 keystore=/tmp/foo light-kdf=false advanced=false\r\nINFO [07-08|14:56:50.278] IPC endpoint opened                      url=/home/user/.clef/clef.ipc\r\n{\"jsonrpc\":\"2.0\",\"method\":\"ui_onSignerStartup\",\"params\":[{\"info\":{\"extapi_http\":\"n/a\",\"extapi_ipc\":\"/home/user/.clef/clef.ipc\",\"extapi_version\":\"6.1.0\",\"intapi_version\":\"7.0.1\"}}]}\r\n...\r\nDEBUG[07-08|14:56:53.894] Served clef_listWallets                  conn=/dev/stdin reqid=13 duration=\"155.286µs\"\r\n{\"jsonrpc\":\"2.0\",\"id\":13,\"result\":[]}\r\n```\r\nWhen `clef` needs input for something, you need to provide it, I guess",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1178963641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1179066008",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25162#issuecomment-1179066008",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162",
    "id": 1179066008,
    "node_id": "IC_kwDOAOvK985GRx6Y",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-08T14:41:01Z",
    "updated_at": "2022-07-08T14:41:01Z",
    "author_association": "MEMBER",
    "body": "Yeah, it tries to read the master key early on, before registering the RPC/IPC hooks\r\n```golang\r\n\tconfigDir := c.GlobalString(configdirFlag.Name)\r\n\tif stretchedKey, err := readMasterKey(c, ui); err != nil {\r\n\t\tlog.Warn(\"Failed to open master, rules disabled\", \"err\", err)\r\n...\r\n\r\n\t// Establish the bidirectional communication, by creating a new UI backend and registering\r\n\t// it with the UI.\r\n\tui.RegisterUIServer(core.NewUIServerAPI(apiImpl))\r\n\r\n```\r\nSo if you don't provide a master key, it will simply be stuck on that. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1179066008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1182661235",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25162#issuecomment-1182661235",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162",
    "id": 1182661235,
    "node_id": "IC_kwDOAOvK985Gffpz",
    "user": {
      "login": "attila-lendvai",
      "id": 840345,
      "node_id": "MDQ6VXNlcjg0MDM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/840345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attila-lendvai",
      "html_url": "https://github.com/attila-lendvai",
      "followers_url": "https://api.github.com/users/attila-lendvai/followers",
      "following_url": "https://api.github.com/users/attila-lendvai/following{/other_user}",
      "gists_url": "https://api.github.com/users/attila-lendvai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attila-lendvai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attila-lendvai/subscriptions",
      "organizations_url": "https://api.github.com/users/attila-lendvai/orgs",
      "repos_url": "https://api.github.com/users/attila-lendvai/repos",
      "events_url": "https://api.github.com/users/attila-lendvai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attila-lendvai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-13T01:30:49Z",
    "updated_at": "2022-07-13T01:30:49Z",
    "author_association": "NONE",
    "body": "@holiman there are some issues with your test above, but it's not relevant anymore. i have found the reason it doesn't work for me:\r\n\r\ni'm providing a `--rules` file for clef, and in that case it doesn't respond to the `clef_` requests.\r\n\r\ni'm not sure i understand clef's design well enough to judge whether that is intended behavior, or not. is it?\r\n\r\nthis is my rules.js, although it's probably not relevant:\r\n\r\n```\r\nfunction OnSignerStartup() {\r\n    return \"Approve\"\r\n}\r\nfunction OnApprovedTx() {\r\n    return \"Approve\"\r\n}\r\nfunction ApproveListing() {\r\n    return \"Approve\"\r\n}\r\nfunction ApproveTx() {\r\n    return \"Approve\"\r\n}\r\nfunction ApproveSignData() {\r\n    return \"Approve\"\r\n}\r\n```\r\n\r\nnote that, IIUC, i cannot add a new rule for this, because clef needs a password for the new account, and it cannot be provided through the IPC API call.\r\n\r\nso, i'm back to my original high-level goal: how can i request a running clef to create a new account in a single step (i.e. without getting into a convoluted multi-step interaction that is communicated on two channels, namely 1) on the IPC to request the new account, and 2) the stdio ui for providing the password for the new account)?\r\n\r\nwith my limited understanding, i see the following options to fix/implement this:\r\n\r\n1. extend the `account_new` IPC call so that a password can be provided\r\n2. keep listening for the `clef_` API calls on the stdio UI even when a `--rules` files is used\r\n3. maybe i could implement what's currently in the rules.js file through the stdio ui? i'd like to avoid that, because currently i'm using the vanilla rules.js file from upstream, and i'd like to avoid diverging if possible.\r\n\r\nany insights on which route i should take? maybe 3) is not as bad as it seems at first sight?\r\n\r\nwith some guidance/help, i'm willing to do 1), too. but grepping the source for `account_new` yields no insights.\r\n\r\nrandom tangential: it took me some time to understand that these are the same thing: the file is called `masterseed.json`, the function opening it is called `readMasterKey`, and the CLI flag is called `--signersecret`. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1182661235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1184189147",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25162#issuecomment-1184189147",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25162",
    "id": 1184189147,
    "node_id": "IC_kwDOAOvK985GlUrb",
    "user": {
      "login": "attila-lendvai",
      "id": 840345,
      "node_id": "MDQ6VXNlcjg0MDM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/840345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attila-lendvai",
      "html_url": "https://github.com/attila-lendvai",
      "followers_url": "https://api.github.com/users/attila-lendvai/followers",
      "following_url": "https://api.github.com/users/attila-lendvai/following{/other_user}",
      "gists_url": "https://api.github.com/users/attila-lendvai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attila-lendvai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attila-lendvai/subscriptions",
      "organizations_url": "https://api.github.com/users/attila-lendvai/orgs",
      "repos_url": "https://api.github.com/users/attila-lendvai/repos",
      "events_url": "https://api.github.com/users/attila-lendvai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attila-lendvai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-14T09:03:00Z",
    "updated_at": "2022-07-14T09:03:00Z",
    "author_association": "NONE",
    "body": "FTR, i have reported the above as a new issue at: https://github.com/ethereum/go-ethereum/issues/25298",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1184189147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
