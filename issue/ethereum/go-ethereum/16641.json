{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16641",
  "id": 319393182,
  "node_id": "MDU6SXNzdWUzMTkzOTMxODI=",
  "number": 16641,
  "title": "In private PoA (clique) network with 2 instances of 1 sealer, mining produces blocks of equal hash, ERROR messages \"Impossible reorg\".",
  "user": {
    "login": "paulvi",
    "id": 1614482,
    "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulvi",
    "html_url": "https://github.com/paulvi",
    "followers_url": "https://api.github.com/users/paulvi/followers",
    "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
    "organizations_url": "https://api.github.com/users/paulvi/orgs",
    "repos_url": "https://api.github.com/users/paulvi/repos",
    "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulvi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-05-02T02:51:00Z",
  "updated_at": "2019-11-07T09:36:03Z",
  "closed_at": "2019-11-07T09:36:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In private PoA (clique) network with 2 instances of 1 sealer, mining produces blocks of equal hash, ERROR messages \" Impossible reorg\".\r\n\r\n\"2 instances of 1 sealer\" means chain was created with 1 sealer. For better network stability one more instance of the sealer is run.\r\n\r\n#### System information\r\n\r\nGeth version: `geth version`\r\n```\r\nE:\\Geth>geth version\r\nGeth\r\nVersion: 1.8.2-stable\r\nGit Commit: b8b9f7f4476a30a0aaf6077daade6ae77f969960\r\nArchitecture: amd64\r\n```\r\nOS & Version: Windows/Linux/OSX   \r\nWindows 7\r\n\r\n\r\n#### Expected behaviour\r\n\r\nDifferent block hashes on different nodes.   \r\nWorks without warnings.\r\n\r\n#### Actual behaviour\r\n\r\nEqual hashes mined on different nodes.  \r\nMany messages like \r\n> Impossible reorg, please file an issue   oldnum=78 oldhash=d7de80â€¦a2c90c newnum=78 newhash=d7de80â€¦a2c90c\r\nbut not after each import (node synch'ing)\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n1. generate new PoA (clique) network with `puppeth`\r\n2. init node1\r\n3. run node1\r\n4. init node2\r\n5. run node2\r\n`./geth.exe --datadir .bc5201node2/ --networkid 5201 --syncmode \"full\" --port 35202 --nodiscover --nousb --rpc --rpcaddr \"localhost\" --rpcport 8502 --rpcapi \"admin,personal,db,eth,net,web3,txpool,miner\" --mine --gasprice 0 --etherbase 0x31a5e0e68b4ca721a2005144f6c32f6d1c1c4b99 --unlock 0x31a5e0e68b4ca721a2005144f6c32f6d1c1c4b99 --password password31.txt`\r\n6. add `static-nodes.json` in node2 poiting to node1 (so node2 always connects to node1)\r\n\r\n\r\n#### Backtrace\r\n\r\n````\r\nINFO [05-02|10:13:08] ðŸ”— block reached canonical chain          number=63 hash=8f2139â€¦cacc39\r\nINFO [05-02|10:13:08] ðŸ”¨ mined potential block                  number=68 hash=7672e6â€¦b93d02\r\nINFO [05-02|10:13:08] Commit new mining work                   number=69 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:14:08] Successfully sealed new block            number=69 hash=663e7eâ€¦738881\r\nINFO [05-02|10:14:08] Imported new chain segment               blocks=1 txs=0 mgas=0.000 elapsed=1ms mgasps=0.000 number=69 hash=663e7eâ€¦738881 cache=0.00B\r\nERROR[05-02|10:14:08] Impossible reorg, please file an issue   oldnum=69 oldhash=663e7eâ€¦738881 newnum=69 newhash=663e7eâ€¦738881\r\nINFO [05-02|10:14:08] Commit new mining work                   number=70 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:14:08] ðŸ”— block reached canonical chain          number=64 hash=6e83a4â€¦661dce\r\nINFO [05-02|10:14:08] ðŸ”¨ mined potential block                  number=69 hash=663e7eâ€¦738881\r\nINFO [05-02|10:14:08] Commit new mining work                   number=70 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:15:08] Successfully sealed new block            number=70 hash=dde192â€¦9a04cc\r\nINFO [05-02|10:15:08] Imported new chain segment               blocks=1 txs=0 mgas=0.000 elapsed=0s  mgasps=NaN   number=70 hash=dde192â€¦9a04cc cache=0.00B\r\nINFO [05-02|10:15:08] ðŸ”— block reached canonical chain          number=65 hash=630c89â€¦40e2a8\r\nINFO [05-02|10:15:08] Commit new mining work                   number=71 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:15:08] ðŸ”¨ mined potential block                  number=70 hash=dde192â€¦9a04cc\r\nINFO [05-02|10:16:08] Successfully sealed new block            number=71 hash=3402a4â€¦791032\r\nERROR[05-02|10:16:08] Impossible reorg, please file an issue   oldnum=71 oldhash=3402a4â€¦791032 newnum=71 newhash=3402a4â€¦791032\r\nINFO [05-02|10:16:08] Imported new chain segment               blocks=1 txs=0 mgas=0.000 elapsed=0s  mgasps=NaN   number=71 hash=3402a4â€¦791032 cache=0.00B\r\nINFO [05-02|10:16:08] ðŸ”— block reached canonical chain          number=66 hash=d1f60câ€¦949513\r\nINFO [05-02|10:16:08] Commit new mining work                   number=72 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:16:08] ðŸ”¨ mined potential block                  number=71 hash=3402a4â€¦791032\r\nINFO [05-02|10:16:08] Commit new mining work                   number=72 txs=0 uncles=0 elapsed=0s\r\nINFO [05-02|10:17:08] Successfully sealed new block            number=72 hash=94b0d5â€¦17af79\r\nINFO [05-02|10:17:08] Imported new chain segment               blocks=1 txs=0 mgas=0.000 elapsed=1ms mgasps=0.000 number=72 hash=94b0d5â€¦17af79 cache=0.00B\r\nERROR[05-02|10:17:08] Impossible reorg, please file an issue   oldnum=72 oldhash=94b0d5â€¦17af79 newnum=72 newhash=94b0d5â€¦17af79\r\nINFO [05-02|10:17:08] Commit new mining work                   number=73 txs=0 uncles=0 elapsed=0s\r\n````\r\n\r\non node2 no importing (that is a bit strange)\r\n\r\n```\r\nINFO [05-02|10:12:08] Commit new mining work                   number=68 txs=0 uncles=0 elapsed=7ms\r\nINFO [05-02|10:13:08] Successfully sealed new block            number=68 hash=7672e6â€¦b93d02\r\nINFO [05-02|10:13:08] ðŸ”— block reached canonical chain          number=63 hash=8f2139â€¦cacc39\r\nINFO [05-02|10:13:08] ðŸ”¨ mined potential block                  number=68 hash=7672e6â€¦b93d02\r\nINFO [05-02|10:13:08] Commit new mining work                   number=69 txs=0 uncles=0 elapsed=1ms\r\nINFO [05-02|10:14:08] Successfully sealed new block            number=69 hash=663e7eâ€¦738881\r\nINFO [05-02|10:14:08] ðŸ”— block reached canonical chain          number=64 hash=6e83a4â€¦661dce\r\nINFO [05-02|10:14:08] ðŸ”¨ mined potential block                  number=69 hash=663e7eâ€¦738881\r\nINFO [05-02|10:14:08] Commit new mining work                   number=70 txs=0 uncles=0 elapsed=2ms\r\nINFO [05-02|10:15:08] Successfully sealed new block            number=70 hash=dde192â€¦9a04cc\r\nINFO [05-02|10:15:08] ðŸ”— block reached canonical chain          number=65 hash=630c89â€¦40e2a8\r\nINFO [05-02|10:15:08] ðŸ”¨ mined potential block                  number=70 hash=dde192â€¦9a04cc\r\nINFO [05-02|10:15:08] Commit new mining work                   number=71 txs=0 uncles=0 elapsed=1ms\r\nINFO [05-02|10:16:08] Successfully sealed new block            number=71 hash=3402a4â€¦791032\r\nINFO [05-02|10:16:08] ðŸ”— block reached canonical chain          number=66 hash=d1f60câ€¦949513\r\nINFO [05-02|10:16:08] ðŸ”¨ mined potential block                  number=71 hash=3402a4â€¦791032\r\nINFO [05-02|10:16:08] Commit new mining work                   number=72 txs=0 uncles=0 elapsed=1ms\r\nINFO [05-02|10:17:08] Successfully sealed new block            number=72 hash=94b0d5â€¦17af79\r\nINFO [05-02|10:17:08] ðŸ”— block reached canonical chain          number=67 hash=3099d6â€¦3c06be\r\nINFO [05-02|10:17:08] ðŸ”¨ mined potential block                  number=72 hash=94b0d5â€¦17af79\r\nINFO [05-02|10:17:08] Commit new mining work                   number=73 txs=0 uncles=0 elapsed=1ms\r\nINFO [05-02|10:18:08] Successfully sealed new block            number=73 hash=f17e04â€¦9b58b6\r\nINFO [05-02|10:18:08] ðŸ”— block reached canonical chain          number=68 hash=7672e6â€¦b93d02\r\nINFO [05-02|10:18:08] ðŸ”¨ mined potential block                  number=73 hash=f17e04â€¦9b58b6\r\nINFO [05-02|10:18:08] Commit new mining work                   number=74 txs=0 uncles=0 elapsed=1ms\r\nINFO [05-02|10:19:08] Successfully sealed new block            number=74 hash=e87947â€¦4222da\r\n```\r\n\r\nThe code in question is \r\nhttps://github.com/ethereum/go-ethereum/blob/master/core/blockchain.go#L1322\r\n\r\n```go\r\n// Ensure the user sees large reorgs\r\n\tif len(oldChain) > 0 && len(newChain) > 0 {\r\n\t\tlogFn := log.Debug\r\n\t\tif len(oldChain) > 63 {\r\n\t\t\tlogFn = log.Warn\r\n\t\t}\r\n\t\tlogFn(\"Chain split detected\", \"number\", commonBlock.Number(), \"hash\", commonBlock.Hash(),\r\n\t\t\t\"drop\", len(oldChain), \"dropfrom\", oldChain[0].Hash(), \"add\", len(newChain), \"addfrom\", newChain[0].Hash())\r\n\t} else {\r\n\t\tlog.Error(\"Impossible reorg, please file an issue\", \"oldnum\", oldBlock.Number(), \"oldhash\", oldBlock.Hash(), \"newnum\", newBlock.Number(), \"newhash\", newBlock.Hash())\r\n}\r\n```\r\n\r\nSo when blocks in 2 nodes are generated with identical hash, then synch'ing results in that block deltas name here `oldChain` and `newChain` are actually both of `len`gth == 0, so logs error \r\n> Impossible reorg, please file an issue\r\n\r\nEither clique mining should not produces blocks with equal hashes (e.g. adding timestamp to hash function),   \r\nor this situation should be considered OK, and error message should not be displayed (e.g. code logic like `if engine==clique then`). But I think it is proper not to have equal hashes generated.\r\n\r\nPlease insure that clique mining (sealing) does not produce equal hashes.\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385887510",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-385887510",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 385887510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTg4NzUxMA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T07:24:09Z",
    "updated_at": "2018-05-02T07:24:09Z",
    "author_association": "MEMBER",
    "body": "> Please insure that clique mining (sealing) does not produce equal hashes.\r\n\r\nThe entire block's content is contained within the hash, and `secp256k1` signatures are deterministic. I.e. for the same input (timestamp included), the same output will be generated.\r\n\r\nI can try to take a look at how to handle duplicate blocks more gracefully. I guess we never really expected a freshly mined block to already exist in the chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385887510/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385913481",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-385913481",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 385913481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTkxMzQ4MQ==",
    "user": {
      "login": "paulvi",
      "id": 1614482,
      "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulvi",
      "html_url": "https://github.com/paulvi",
      "followers_url": "https://api.github.com/users/paulvi/followers",
      "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
      "organizations_url": "https://api.github.com/users/paulvi/orgs",
      "repos_url": "https://api.github.com/users/paulvi/repos",
      "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulvi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T09:09:14Z",
    "updated_at": "2018-05-02T09:09:14Z",
    "author_association": "NONE",
    "body": "OK, sounds good.\r\n\r\nBecause in PoW setup every new block come in exact the same interval (e.g. every 60 seconds), so it is likely the case that timestamp (in seconds) is exactly the same, thus producing the same block hashes.\r\n\r\nIs it by design, that if any node produces absolutely the same block? \r\n\r\nOK, I tried setting up `--identity` option, the result hash was the same.\r\n**Then using `--extradata`, e.g. `--extradata node2` resulted in different hash produced.**\r\n\r\nYes, the should be better log message for a case when coming block is exactly the same (and with the same hash).\r\n\r\nBTW, can you point me (within code) what exact parameter are passed to hashing algorithm?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385913481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385913915",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-385913915",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 385913915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTkxMzkxNQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T09:10:44Z",
    "updated_at": "2018-05-02T09:10:44Z",
    "author_association": "MEMBER",
    "body": "The header's content is the one being hashed. The node identity is just a networking layer info, the extra-data is embedded into the header, so that results in a modified hash.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385913915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/474508462",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-474508462",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 474508462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDUwODQ2Mg==",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T18:16:05Z",
    "updated_at": "2019-03-19T18:16:17Z",
    "author_association": "MEMBER",
    "body": "> I can try to take a look at how to handle duplicate blocks more gracefully. I guess we never really expected a freshly mined block to already exist in the chain.\r\n\r\nI'll take a shot at this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/474508462/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/478608766",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-478608766",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 478608766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYwODc2Ng==",
    "user": {
      "login": "brianmcmichael",
      "id": 2374718,
      "node_id": "MDQ6VXNlcjIzNzQ3MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianmcmichael",
      "html_url": "https://github.com/brianmcmichael",
      "followers_url": "https://api.github.com/users/brianmcmichael/followers",
      "following_url": "https://api.github.com/users/brianmcmichael/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianmcmichael/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianmcmichael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianmcmichael/subscriptions",
      "organizations_url": "https://api.github.com/users/brianmcmichael/orgs",
      "repos_url": "https://api.github.com/users/brianmcmichael/repos",
      "events_url": "https://api.github.com/users/brianmcmichael/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianmcmichael/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T14:44:16Z",
    "updated_at": "2019-04-01T14:44:16Z",
    "author_association": "NONE",
    "body": "Looking forward to the fix. This is becoming a persistent issue in our POA network also.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/478608766/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/483239275",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-483239275",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 483239275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzIzOTI3NQ==",
    "user": {
      "login": "matthieu-merlyn",
      "id": 13644449,
      "node_id": "MDQ6VXNlcjEzNjQ0NDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13644449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthieu-merlyn",
      "html_url": "https://github.com/matthieu-merlyn",
      "followers_url": "https://api.github.com/users/matthieu-merlyn/followers",
      "following_url": "https://api.github.com/users/matthieu-merlyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthieu-merlyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthieu-merlyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthieu-merlyn/subscriptions",
      "organizations_url": "https://api.github.com/users/matthieu-merlyn/orgs",
      "repos_url": "https://api.github.com/users/matthieu-merlyn/repos",
      "events_url": "https://api.github.com/users/matthieu-merlyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthieu-merlyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-15T12:53:53Z",
    "updated_at": "2019-04-15T12:53:53Z",
    "author_association": "NONE",
    "body": "> Looking forward to the fix. This is becoming a persistent issue in our POA network also.\r\n\r\n+1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/483239275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/550999952",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16641#issuecomment-550999952",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16641",
    "id": 550999952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk5OTk1Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T09:36:02Z",
    "updated_at": "2019-11-07T09:36:02Z",
    "author_association": "MEMBER",
    "body": "This kind of works as intended. You should not run multiple instances of the same signer, as they create conflicting blocks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/550999952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
