{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24243",
  "id": 1104756504,
  "node_id": "I_kwDOAOvK985B2T8Y",
  "number": 24243,
  "title": "How is contract data persisted to levelDB",
  "user": {
    "login": "hsyodyssey",
    "id": 47173566,
    "node_id": "MDQ6VXNlcjQ3MTczNTY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47173566?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hsyodyssey",
    "html_url": "https://github.com/hsyodyssey",
    "followers_url": "https://api.github.com/users/hsyodyssey/followers",
    "following_url": "https://api.github.com/users/hsyodyssey/following{/other_user}",
    "gists_url": "https://api.github.com/users/hsyodyssey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hsyodyssey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hsyodyssey/subscriptions",
    "organizations_url": "https://api.github.com/users/hsyodyssey/orgs",
    "repos_url": "https://api.github.com/users/hsyodyssey/repos",
    "events_url": "https://api.github.com/users/hsyodyssey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hsyodyssey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-01-15T15:35:51Z",
  "updated_at": "2022-01-17T07:50:16Z",
  "closed_at": "2022-01-17T07:50:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi Guys, I now have a question about how contract data is persisted to levelDB.\r\n\r\nI now know that in EVM, Contract data is managed in terms of Slots. Usually, the key of a Slot is calculated based on the location of the Slot. \r\n\r\nMy questions are as follows:\r\n\r\n1. When persisting contract data, what is the key of each k-v pair in leveldb?\r\n\r\n2. If the key is a hash based on the location of the Slot, won't their data collide for different contracts that use the same slot location?\r\n\r\n3. For the data of contracts of different contracts, will they be stored in the same levelDB instance. In other words, is it possible for the data of different contracts to be stored in the same levelDB sstable?\r\n\r\nThanks so much！\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014082634",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24243#issuecomment-1014082634",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243",
    "id": 1014082634,
    "node_id": "IC_kwDOAOvK9848caxK",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T02:29:27Z",
    "updated_at": "2022-01-17T02:29:54Z",
    "author_association": "MEMBER",
    "body": "1. All the ethereum state(accounts, storage slots) are managed by a 2-layers Merkle-Patricia-Tree. For example, all the accounts are inserted into a MPT as \"leaves\" and a batch of internal nodes will be generated according to the rules of MPT. So from the perspective of database, it only sees a batch of trie nodes(leaves, internal nodes). And currently these MPT nodes are stored by hash. Specifically, it uses the node hash as the database key.\r\n\r\n2. Yes, it will. Different contracts can refer to a same storage slot. Currently there is no disk pruning in Geth, so the shared storage slot won't be deleted.  But what if a contract modify this slot? Then a new storage slot will be created in the database since the content is changed, new hash will be derived.\r\n\r\n3. It's impossible for ethereum state be persisted in a single leveldb sstable. Ethereum state is quite large(let's say 100GB) so it's impossible to store all of them in a single sstable.  And unfortunately, currently the state is stored by hash, it means the state data will cross the entire key space and be stored everywhere.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014082634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014085559",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24243#issuecomment-1014085559",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243",
    "id": 1014085559,
    "node_id": "IC_kwDOAOvK9848cbe3",
    "user": {
      "login": "hsyodyssey",
      "id": 47173566,
      "node_id": "MDQ6VXNlcjQ3MTczNTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47173566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsyodyssey",
      "html_url": "https://github.com/hsyodyssey",
      "followers_url": "https://api.github.com/users/hsyodyssey/followers",
      "following_url": "https://api.github.com/users/hsyodyssey/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsyodyssey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsyodyssey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsyodyssey/subscriptions",
      "organizations_url": "https://api.github.com/users/hsyodyssey/orgs",
      "repos_url": "https://api.github.com/users/hsyodyssey/repos",
      "events_url": "https://api.github.com/users/hsyodyssey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsyodyssey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T02:38:59Z",
    "updated_at": "2022-01-17T02:38:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 1. All the ethereum state(accounts, storage slots) are managed by a 2-layers Merkle-Patricia-Tree. For example, all the accounts are inserted into a MPT as \"leaves\" and a batch of internal nodes will be generated according to the rules of MPT. So from the perspective of database, it only sees a batch of trie nodes(leaves, internal nodes). And currently these MPT nodes are stored by hash. Specifically, it uses the node hash as the database key.\r\n> 2. Yes, it will. Different contracts can refer to a same storage slot. Currently there is no disk pruning in Geth, so the shared storage slot won't be deleted.  But what if a contract modify this slot? Then a new storage slot will be created in the database since the content is changed, new hash will be derived.\r\n> 3. It's impossible for ethereum state be persisted in a single leveldb sstable. Ethereum state is quite large(let's say 100GB) so it's impossible to store all of them in a single sstable.  And unfortunately, currently the state is stored by hash, it means the state data will cross the entire key space and be stored everywhere.\r\n\r\nThank you for your reply. My third question may not have been very clear in its description. According to your reply, can I understand that a part of the data from different contracts may be mixed in a certain sstable? For example, some [address/balance] pair data from two different ERC-20 contracts may be stored in the same sstable at a certain level in the same leveldb instance?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014085559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014217942",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24243#issuecomment-1014217942",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243",
    "id": 1014217942,
    "node_id": "IC_kwDOAOvK9848c7zW",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T07:29:15Z",
    "updated_at": "2022-01-17T07:29:15Z",
    "author_association": "MEMBER",
    "body": "Yes, it's totally possible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014217942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014219403",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24243#issuecomment-1014219403",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24243",
    "id": 1014219403,
    "node_id": "IC_kwDOAOvK9848c8KL",
    "user": {
      "login": "hsyodyssey",
      "id": 47173566,
      "node_id": "MDQ6VXNlcjQ3MTczNTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47173566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsyodyssey",
      "html_url": "https://github.com/hsyodyssey",
      "followers_url": "https://api.github.com/users/hsyodyssey/followers",
      "following_url": "https://api.github.com/users/hsyodyssey/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsyodyssey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsyodyssey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsyodyssey/subscriptions",
      "organizations_url": "https://api.github.com/users/hsyodyssey/orgs",
      "repos_url": "https://api.github.com/users/hsyodyssey/repos",
      "events_url": "https://api.github.com/users/hsyodyssey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsyodyssey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T07:32:01Z",
    "updated_at": "2022-01-17T07:32:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, it's totally possible.\r\n\r\nI understand now. Thank you very much for your answer！",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1014219403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
