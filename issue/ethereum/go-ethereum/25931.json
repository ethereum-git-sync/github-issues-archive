{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25931",
  "id": 1397521845,
  "node_id": "I_kwDOAOvK985TTH21",
  "number": 25931,
  "title": "Nodes unable to individually peer in private poa network, bootstrap connected",
  "user": {
    "login": "anthonyoliai",
    "id": 61785803,
    "node_id": "MDQ6VXNlcjYxNzg1ODAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anthonyoliai",
    "html_url": "https://github.com/anthonyoliai",
    "followers_url": "https://api.github.com/users/anthonyoliai/followers",
    "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
    "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
    "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
    "repos_url": "https://api.github.com/users/anthonyoliai/repos",
    "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-10-05T09:41:26Z",
  "updated_at": "2022-10-07T14:26:52Z",
  "closed_at": "2022-10-07T14:08:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `geth version`\r\nv1.10.25\r\n\r\nOS & Version: ubuntu 20.04\r\n\r\n#### Expected behaviour\r\nI have been following the guide on how to set-up a private POA network, and have successfully deployed all my nodes to AWS EKS. All nodes are running, and they are able to connect to the bootstrap node. I've made sure that it is the case by checking admin.peers for each individual node, which returns the bootstrap node. \r\n\r\nHowever, now that all these nodes are connected to the bootstrap node I expect them to peer individually. Nothing happens though, and i'm not sure why. All ports are open and all containers are reachable, i've made sure of that. Furthermore, I've set the networkID to something different than that of mainnet.\r\n\r\n\r\n#### Actual behaviour\r\nNodes do not peer with eachother after initially connecting to the bootstrap node.\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Deploy the nodes through helm to AWS EKS.\r\n2. Provide the bootstrap node within the --bootnodes flag of each non-bootstrap node\r\n3. Admin.peers returns peerCount of 1, whilst the bootstrap node contains all the available peers\r\n4. No peering occurs between nodes after the initial peer connection to the bootstrap node\r\n\r\n#### Backtrace\r\n\r\n`geth --networkid=${NETWORK_ID} --datadir data --verbosity=4 --netrestrict 10.0.0.0/8 --nodiscover --nat=extip:${POD_IP}*`\r\n````\r\nAdding p2p peer                          peercount=1 id=407....ea54 conn=dyndial addr=10.0.1.114:30303 name=Geth/v1.10.25-stable...\r\n````\r\n\r\nAfter further research I think the nodes try to find other nodes, as I see the following in the logs:\r\n`\r\nTRACE[10-05|11:12:40.339] FINDNODE failed                          id=....b2dd4e7417 failcount=1 dropped=false err=\"RPC timeout\"`\r\n\r\n![image](https://user-images.githubusercontent.com/61785803/194030507-9cb4d097-57bc-4ace-80c7-dbe3c82d45e8.png)\r\n\r\n",
  "closed_by": {
    "login": "anthonyoliai",
    "id": 61785803,
    "node_id": "MDQ6VXNlcjYxNzg1ODAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anthonyoliai",
    "html_url": "https://github.com/anthonyoliai",
    "followers_url": "https://api.github.com/users/anthonyoliai/followers",
    "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
    "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
    "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
    "repos_url": "https://api.github.com/users/anthonyoliai/repos",
    "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269185915",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25931#issuecomment-1269185915",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931",
    "id": 1269185915,
    "node_id": "IC_kwDOAOvK985Lpj17",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T01:27:03Z",
    "updated_at": "2022-10-06T01:27:03Z",
    "author_association": "NONE",
    "body": "I had similar issue before end up using the bootstrap node as the 'relay', not ideal but still works.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269185915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269606303",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25931#issuecomment-1269606303",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931",
    "id": 1269606303,
    "node_id": "IC_kwDOAOvK985LrKef",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T08:46:52Z",
    "updated_at": "2022-10-06T08:46:52Z",
    "author_association": "MEMBER",
    "body": "The DHT / discovery protocol by default does not advertise internal IP addresses (since that's most probably bad in a live setup). I *think* you can set the `--netrestrict` flag to change this, but maybe @fjl has a better solution?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269606303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269635763",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25931#issuecomment-1269635763",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931",
    "id": 1269635763,
    "node_id": "IC_kwDOAOvK985LrRqz",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T09:05:18Z",
    "updated_at": "2022-10-07T14:10:00Z",
    "author_association": "NONE",
    "body": "Ah yes, I did indeed try to use the `--netrestrict `flag. Interestingly,that didn't change much, I do notice that the defined enodes at bootup change to include the IP  range specified in `--netrestrict.`\r\n\r\n> The DHT / discovery protocol by default does not advertise internal IP addresses (since that's most probably bad in a live setup). I _think_ you can set the `--netrestrict` flag to change this, but maybe @fjl has a better solution?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269635763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271647129",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25931#issuecomment-1271647129",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25931",
    "id": 1271647129,
    "node_id": "IC_kwDOAOvK985Ly8uZ",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T14:08:57Z",
    "updated_at": "2022-10-07T14:26:52Z",
    "author_association": "NONE",
    "body": "@karalabe , @garyng2000 \r\n\r\nI have solved this issue.\r\nThe solution was to turn of --nodiscover on the bootnode. If you are running a private POA network on AWS, somehow the nodes cannot individually peer due to --nodiscover, regardless of whether they are accessible internally.  I assumed that having a list of peers on the bootnode's peer list would be enough to have them peer individually.\r\n\r\nBy turning off --nodiscover however my bootnode started to try and connect to the default bootnodes, which are set to be the bootnodes on main net. To get rid of this, I have pointed my bootnode to point to itself, by specifying --bootnodes with its own enode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271647129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
