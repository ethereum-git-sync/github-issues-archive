{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16608",
  "id": 318807703,
  "node_id": "MDU6SXNzdWUzMTg4MDc3MDM=",
  "number": 16608,
  "title": "WS Origin is undefined by default in web3 1.0, therefore only viable option is wsorigins set to \"*\"",
  "user": {
    "login": "Bunjin",
    "id": 11554098,
    "node_id": "MDQ6VXNlcjExNTU0MDk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bunjin",
    "html_url": "https://github.com/Bunjin",
    "followers_url": "https://api.github.com/users/Bunjin/followers",
    "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
    "organizations_url": "https://api.github.com/users/Bunjin/orgs",
    "repos_url": "https://api.github.com/users/Bunjin/repos",
    "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bunjin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2018-04-30T07:38:43Z",
  "updated_at": "2019-02-19T10:58:33Z",
  "closed_at": "2019-02-19T10:58:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Running geth on ubuntu 16.04 with\r\n/usr/bin/geth --ws --wsport 8540 --wsorigins 127.0.0.1\r\n\r\nBut ws is not available:\r\n\r\nwscat -c ws://127.0.0.1:8540\r\nerror: Error: unexpected server response (403)\r\n\r\nand the geth log:\r\ngeth[5403]: WARN [04-30|09:16:38] origin '' not allowed on WS-RPC interface\r\n\r\nIn this line:\r\nhttps://github.com/Bunjin/go-ethereum/blob/master/rpc/websocket.go#L110\r\n\r\nreq.Header.Get(\"Origin\") should be changed to req.Header.Get(\"origin\")\r\n\r\nPR:\r\nhttps://github.com/ethereum/go-ethereum/pull/16609\r\n\r\nEdit: This doesn't solve the issue, see below",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385369831",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-385369831",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 385369831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM2OTgzMQ==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T11:14:55Z",
    "updated_at": "2018-04-30T11:14:55Z",
    "author_association": "NONE",
    "body": "I tried to rebuild from source with the fix in my PR, but it doesn't seem to solve the issue however.\r\norigin or req.Header.Get(\"origin\") is still undefined :'(\r\n\r\nI'll investigate more and post here if I manage to solve this myself. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385369831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385616405",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-385616405",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 385616405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTYxNjQwNQ==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T07:30:42Z",
    "updated_at": "2018-05-01T07:30:42Z",
    "author_association": "NONE",
    "body": "So actually this was a problem with web3 which doesn't set the origin.\r\nhttps://github.com/ethereum/web3.js/blob/1.0/packages/web3-providers-ws/src/index.js#L78\r\n\r\nI changed undefined to 127.0.0.1 and it worked :+1: \r\n\r\nhttps://github.com/websockets/ws",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385616405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386872941",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-386872941",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 386872941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njg3Mjk0MQ==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-06T11:36:03Z",
    "updated_at": "2018-05-06T15:25:56Z",
    "author_association": "NONE",
    "body": "**TL;DR: See the last paragraph**\r\n\r\nI've just experienced a similar issue. My situation was that I needed to use web3 1.0 websocket on my node side to connect to my local geth client.\r\n\r\nAfter some investigations, my conclusion is that neither(geth or web3) is behaving incorrectly. Instead what one needs to do is just to specifiy origin on the web3 side. I'd like to share some research on this issue. Hope it can clear up some confusion that I also had.\r\n\r\n0. Basically, `origin '' not allowed on WS-RPC interface` is caused because websocket's `Origin` header is not specified, while geth client requires it([default settings is to only accept connections from `http://localhost`, if not specified with `--wsorigins` option](https://github.com/ethereum/go-ethereum/blob/master/rpc/websocket.go#L99)).\r\n\r\n1. websocket's `Origin` is a header set by the browser. Why does such header exists in websocket protocol and why geth asks for it? This is to protect possible abuse and hijacking from other sites since WebSockets are not restrained by the same-origin policy.(see [this](https://security.stackexchange.com/questions/115716/is-the-origin-header-really-useful-for-securing-a-websocket) and [this](https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html)) But also, note that `Origin` header is subject to be manipulated since it's only a header added by the browser.\r\n\r\n2.  The [`WebsocketProvider` that web3 1.0 provides now](https://github.com/ethereum/web3.js/tree/1.0/packages/web3-providers-ws) is a websocket for the node(dependent on [WebSocket-Node](https://github.com/theturtle32/WebSocket-Node)). You can use it on the browser side too, but note that even if you pass the `Origin` header onto the provider(see final code section), browser will automatically override that value with the current host. So when connecting from a browser, what you need to do is to add correctly the expected host onto geth's `--wsorigins`.\r\n\r\n3. On the other hand, when this websocket provider is used in node, `Origin` header may not have a valid meaning, since the websocket connection from a node process is not really in a user-agent scenario where the script is provided by the domain. From [the WebSocket-Node documentation](https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions):\r\n\r\n> `origin` is an optional field that can be used in user-agent scenarios to identify the page containing any scripting content that caused the connection to be requested. (**This seems unlikely in node.. probably should leave it null most of the time.**)\r\n\r\nThis is why the [web3 code](https://github.com/ethereum/web3.js/blob/1.0/packages/web3-providers-ws/src/index.js#L78) left it `undefined` by default. But still, **you can set the `Origin` header with the `options` object**(which is the 2nd param of `WebsocketProvider` constructor) with `headers` > `Origin` key, [which will](https://github.com/ethereum/web3.js/blob/1.0/packages/web3-providers-ws/src/index.js#L72) [eventually](https://github.com/theturtle32/WebSocket-Node/blob/master/lib/WebSocketClient.js#L178) [written into the `Origin` header](https://github.com/theturtle32/WebSocket-Node/blob/master/lib/WebSocketClient.js#L190).\r\n\r\nTo sum up, one can just go with `--wsorigins *` option for geth if security is not of much concern, or rather specify `origin` header explicitly with some meaningful string(or the actual host) on the web3 websocket provider and pass the value onto geth's `--wsorigins`. One easy option is to set the `Origin` header as `http://localhost` on web3 ws-provider, and run geth without `--wsorigins` since geth defaults to accept connections from `http://localhost`, which is the handier equivalent of what @Bunjin did.\r\n\r\nExample:\r\n```js\r\nconst wsProvider = new Web3.providers.WebsocketProvider(\"ws://localhost:8546\", {\r\n  headers: {\r\n    Origin: \"http://localhost\"\r\n  }\r\n});\r\nweb3 = new Web3(wsProvider);\r\n```\r\n\r\n@vzts",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/386872941/reactions",
      "total_count": 11,
      "+1": 10,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/388916343",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-388916343",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 388916343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODkxNjM0Mw==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T18:27:26Z",
    "updated_at": "2018-05-14T18:27:26Z",
    "author_association": "NONE",
    "body": "Great write up, thanks @vzts !",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/388916343/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389084442",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389084442",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389084442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4NDQ0Mg==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:20:51Z",
    "updated_at": "2018-05-15T08:21:31Z",
    "author_association": "NONE",
    "body": "The fact that the headers are written by javascript code and **not by the browser** should render this \"protection\" totally pointless. An attacker can write whatever header she wants, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389084442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389085125",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389085125",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389085125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4NTEyNQ==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:23:20Z",
    "updated_at": "2018-05-15T08:23:20Z",
    "author_association": "NONE",
    "body": "read again what @vzts wrote in 1) and the links he provided.\r\nIt's not made to protect the App, it's made to protect the user from cross site requests.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389085125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389085785",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389085785",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389085785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4NTc4NQ==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:25:51Z",
    "updated_at": "2018-05-15T08:25:51Z",
    "author_association": "NONE",
    "body": "Okay, then it is not possible to override the the \"Origin\" header with Javascript. This should indeed protect from cross site request forgery. But there is no link to prove that point.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389085785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389086121",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389086121",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389086121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4NjEyMQ==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:27:06Z",
    "updated_at": "2018-05-15T08:27:06Z",
    "author_association": "NONE",
    "body": "https://security.stackexchange.com/questions/115716/is-the-origin-header-really-useful-for-securing-a-websocket\r\n\r\nhttps://www.christian-schneider.net/CrossSiteWebSocketHijacking.html",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389086121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389086360",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389086360",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389086360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4NjM2MA==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:27:55Z",
    "updated_at": "2018-05-15T08:29:33Z",
    "author_association": "NONE",
    "body": "Thanks. But these are the links from above. It is just people saying \"I have read that the Origin header is secure\". I think a link to the specification for the browsers would be most helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389086360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389088308",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389088308",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389088308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4ODMwOA==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:34:53Z",
    "updated_at": "2018-05-15T08:35:34Z",
    "author_association": "NONE",
    "body": "I see, you want a strong proof that browsers indeed behave so.\r\n\r\nmaybe this global spec? \r\nhttps://www.w3.org/TR/websockets/\r\nhttps://html.spec.whatwg.org/multipage/web-sockets.html#network\r\n\r\nand then pick an open source browser and look at the code I guess :)\r\n\r\nLet me know if you get the definite proof :)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389088308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389090856",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389090856",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389090856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA5MDg1Ng==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T08:43:56Z",
    "updated_at": "2018-05-15T08:43:56Z",
    "author_association": "NONE",
    "body": "Citing from there:\r\n> Fire an event named message at the WebSocket object, using MessageEvent, with the origin attribute initialized to the serialization of the WebSocket object's url's origin, and the data attribute initialized to dataForEvent.\r\n\r\nBut then the following is true: Whenever a websocket connection to the server is opened **from within a browser** the Origin header will be set and have a value. So if the server receives a request without the Origin header, it is safe to respond, because it is a request coming from a **non browser environment** where the header can be set arbitrarily. Geth should be fixed and just respond normally when not finding a header instead of enforcing this hack to set the header by hand.\r\n\r\nI come here because I stumbled on this while trying to get my tests running from node. It is very annoying to have to add such stuff to the production codebase just to make some tests run.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389090856/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389097817",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389097817",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389097817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA5NzgxNw==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T09:08:00Z",
    "updated_at": "2018-05-15T09:08:00Z",
    "author_association": "NONE",
    "body": "@Levino I think you could go with `--wsorigins *` option in that case. I agree with you that the geth should not arbitrarily assume that the client environment is a browser. Maybe the default behavior of geth should be fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389097817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389098794",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389098794",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389098794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA5ODc5NA==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T09:11:34Z",
    "updated_at": "2018-05-15T09:11:53Z",
    "author_association": "NONE",
    "body": "@vzts Thanks for joining the discussion. I fear your \"solution\" would just render the whole protection useless. Then any websocket from any website would be served. Whereas when just serving connections without an Origin header and serving connections with Origin headers which have a whitelisted origin would still keep the protection in place.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389098794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389101798",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389101798",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389101798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTEwMTc5OA==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T09:21:58Z",
    "updated_at": "2018-05-15T09:21:58Z",
    "author_association": "NONE",
    "body": "@Levino You're definitely right on that point. `--wsorigins *` I've suggested was just for testing. Actually, I think I should look into the official spec in detail so that we can come to a consensus on the \"correct behavior\" of geth, and WebSocket-Node. Maybe the original solution I suggested is only a workaround. Admit it was a hasty conclusion. Thanks for the alert for everyone.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389101798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389109660",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389109660",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389109660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTEwOTY2MA==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T09:49:13Z",
    "updated_at": "2018-05-15T09:49:42Z",
    "author_association": "NONE",
    "body": "@Levino One quick thought on the nature of `WebSocket` though, WebSocket spec is nothing more than a standardization of lower level TCP socket, and it is for the **\"web\" specifically, where user-agents are mostly browsers**. If you look at its history, the protocol itself is somewhat for the browser.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389109660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389110402",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389110402",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389110402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTExMDQwMg==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T09:51:42Z",
    "updated_at": "2018-05-15T10:21:03Z",
    "author_association": "NONE",
    "body": "I've checked that the WebSocket protocol development has moved to IETF, and [here](https://tools.ietf.org/html/rfc6455) is the RFC. If you look at the 10.2 part \"Origin Considerations\":\r\n\r\n>    The |Origin| header field protects from the attack cases when the\r\n>    untrusted party is typically the author of a JavaScript application\r\n>    that is executing in the context of the trusted client.\r\n>    The client itself can contact the server and, **via the mechanism of the |Origin|\r\n>    header field, determine whether to extend those communication\r\n>    privileges to the JavaScript application**.  The intent is not to\r\n>    prevent non-browsers from establishing connections but rather to\r\n>    **ensure that trusted browsers under the control of potentially\r\n>    malicious JavaScript** cannot fake a WebSocket handshake.\r\n\r\nAccording to this, my original suggestion seems kind of valid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389110402/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389114457",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389114457",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389114457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTExNDQ1Nw==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T10:06:58Z",
    "updated_at": "2018-05-15T10:06:58Z",
    "author_association": "NONE",
    "body": "Security consideration is always double-edged, and even if you have that origin header authentication on your server side, there's a way to manipulate that. So the origin header is only for preventing hijacking([the post](https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html) I originally quoted), if you really want to whitelist the specific client you want, rather than general users that accessing your website from their browser, you will need to authenticate the users using other mechanisms such as private keys or tokens.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389114457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389119973",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389119973",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389119973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTExOTk3Mw==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T10:28:36Z",
    "updated_at": "2018-05-15T10:31:04Z",
    "author_association": "NONE",
    "body": "I was not challenging your original solution. It is a valid solution and I am using it:\r\n\r\nWhen you run this (please note I changed the value for `Origin`)\r\n```js\r\nconst wsProvider = new Web3.providers.WebsocketProvider(\"ws://localhost:8546\", {\r\n  headers: {\r\n    Origin: \"http://invalid.host\"\r\n  }\r\n});\r\nweb3 = new Web3(wsProvider);\r\n```\r\ntwo different things happen depending on where it is run:\r\n- If you run this code in the browser on `http://localhost:3000` the origin header will be set to `http://localhost:3000`\r\n- If you run this code in node, the origin header will be set to `http://invalid.host`\r\n\r\nThe connection from the javascript run with node will only be allowed, when `http://invalid.host` is whitelisted in geth with the `--wsorigins http://localhost:3000,http://invalid.host` flag.\r\n\r\n**BUT** when you run the code like so **in Node**:\r\n```js\r\nconst wsProvider = new Web3.providers.WebsocketProvider(\"ws://localhost:8546\")\r\nweb3 = new Web3(wsProvider);\r\n```\r\nthen the origin header will be missing and geth will discard the connection to \"protect against third party hijacking\". The thing is: If the header is missing, it is safe to allow the connection: The \"attacker\" must be accessing the endpoint from a **non browser environment** (because otherwise the browser would have set the origin header). That means that the attacker can set any header she/he wants. So then the hacker just puts `http://localhost:3000` as the origin and gets access to the node. So instead of **enforcing the correct header** geth should **enforce a correct header, iff the header is present** (note the second \"f\"). If no header is present, just allow the access, there is no possible protection anyhow.\r\n\r\nSo back to the problem at hand:\r\n- Your solution is a good workaround. For example (as in my case) to run headless tests with web3 in a node environment.\r\n- It is not the best solution, because the best solution would require to fix the behaviour of geth, then your workaround is no longer necessary.\r\n\r\nSo I am making the point that someone did not really think things through when implementing the current behaviour of geth and this should be fixed instead of forcing everyone to use this workaround.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389119973/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389121785",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389121785",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389121785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTEyMTc4NQ==",
    "user": {
      "login": "vzts",
      "id": 27868171,
      "node_id": "MDQ6VXNlcjI3ODY4MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27868171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vzts",
      "html_url": "https://github.com/vzts",
      "followers_url": "https://api.github.com/users/vzts/followers",
      "following_url": "https://api.github.com/users/vzts/following{/other_user}",
      "gists_url": "https://api.github.com/users/vzts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vzts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vzts/subscriptions",
      "organizations_url": "https://api.github.com/users/vzts/orgs",
      "repos_url": "https://api.github.com/users/vzts/repos",
      "events_url": "https://api.github.com/users/vzts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vzts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T10:36:18Z",
    "updated_at": "2018-05-15T10:40:55Z",
    "author_association": "NONE",
    "body": "I would say that geth is behaving correctly, since it is suggested in the abstraction of the RFC:\r\n\r\n>    The goal of this technology is to provide a mechanism for **browser-based\r\n>    applications** that need two-way communication with servers that does\r\n>    not rely on opening multiple HTTP connections\r\n\r\n>    The security model used for this is the origin-based security model commonly used\r\n>    by web browsers.\r\n\r\n>    **Servers that are not intended to process input from any web page but\r\n>    only for certain sites SHOULD verify the |Origin| field is an origin\r\n>    they expect.**  If the origin indicated is unacceptable to the server,\r\n>    then it SHOULD respond to the WebSocket handshake with a reply\r\n>    containing HTTP 403 Forbidden status code.\r\n\r\nIf your server is intended to process input from any web page, then there is option \"--wsorigins *\". I think the origin header is okay to be forced by default since the main purpose of websocket technology is for the browsers, not the execution env like node.\r\n\r\nWhile I think your idea to validate origin header only when it exists is nice, but the opinions on the idea may be subjective. I really like it though. Agree with your idea.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389121785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389124310",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389124310",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389124310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTEyNDMxMA==",
    "user": {
      "login": "Bunjin",
      "id": 11554098,
      "node_id": "MDQ6VXNlcjExNTU0MDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11554098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bunjin",
      "html_url": "https://github.com/Bunjin",
      "followers_url": "https://api.github.com/users/Bunjin/followers",
      "following_url": "https://api.github.com/users/Bunjin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bunjin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bunjin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bunjin/subscriptions",
      "organizations_url": "https://api.github.com/users/Bunjin/orgs",
      "repos_url": "https://api.github.com/users/Bunjin/repos",
      "events_url": "https://api.github.com/users/Bunjin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bunjin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T10:47:10Z",
    "updated_at": "2018-05-15T10:47:10Z",
    "author_association": "NONE",
    "body": ">While I think your idea to validate origin header only when it exists is nice, but the opinions on the idea may be subjective. I really like it though. Agree with your idea.\r\n\r\nAgreed, that would be a nice default behavior that would allow both to use node scripts without setting an origin while still having this browser protection for the users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389124310/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389174401",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-389174401",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 389174401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTE3NDQwMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T13:52:18Z",
    "updated_at": "2018-05-15T13:52:18Z",
    "author_association": "MEMBER",
    "body": "I tentatively agree that a request without `Origin` header should be excempt from origin-checks (since it's obviously not a CORS-attempt via the browser). \r\n\r\nI'll have to think about this for a bit, to figure out there any other cases to consider where this would have a negative effect on security. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389174401/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/406144133",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-406144133",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 406144133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjE0NDEzMw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T03:35:22Z",
    "updated_at": "2018-07-19T03:35:22Z",
    "author_association": "MEMBER",
    "body": "@holiman Are you done thinking about this?  😉 This is causing problems with Augur and the current workaround is to tell users to do `--ws-origns '*'` which is not secure for them.\r\n\r\nYour latest comment is correct, if no origin is present then it means the connecting client is not attempting to protect the user for cross origin attacks, most likely because it isn't a browser.  There is no situation where a client would submit no origin and expect to be protected against cross origin attacks since the mechanism for protecting against cross origin attacks is by supplying an Origin to the server and trusting the server to help you out with the protection.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/406144133/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/419474163",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-419474163",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 419474163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ3NDE2Mw==",
    "user": {
      "login": "avatar-lavventura",
      "id": 18537398,
      "node_id": "MDQ6VXNlcjE4NTM3Mzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18537398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avatar-lavventura",
      "html_url": "https://github.com/avatar-lavventura",
      "followers_url": "https://api.github.com/users/avatar-lavventura/followers",
      "following_url": "https://api.github.com/users/avatar-lavventura/following{/other_user}",
      "gists_url": "https://api.github.com/users/avatar-lavventura/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avatar-lavventura/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avatar-lavventura/subscriptions",
      "organizations_url": "https://api.github.com/users/avatar-lavventura/orgs",
      "repos_url": "https://api.github.com/users/avatar-lavventura/repos",
      "events_url": "https://api.github.com/users/avatar-lavventura/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avatar-lavventura/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T15:22:04Z",
    "updated_at": "2018-09-07T15:22:04Z",
    "author_association": "NONE",
    "body": "Overall is it secure to use `geth` with following web socket flags as follows: `--ws --wsaddr=\"127.0.0.1\" --wsorigins \"*\"` ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/419474163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/460579315",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-460579315",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 460579315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDU3OTMxNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T10:03:23Z",
    "updated_at": "2019-02-05T10:03:23Z",
    "author_association": "MEMBER",
    "body": "We've decided today that to implement the suggested feature: a request without `Origin` header should be excempt from origin-checks (since it's obviously not a CORS-attempt via the browser).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/460579315/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/460595260",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16608#issuecomment-460595260",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16608",
    "id": 460595260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDU5NTI2MA==",
    "user": {
      "login": "levino",
      "id": 1150767,
      "node_id": "MDQ6VXNlcjExNTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levino",
      "html_url": "https://github.com/levino",
      "followers_url": "https://api.github.com/users/levino/followers",
      "following_url": "https://api.github.com/users/levino/following{/other_user}",
      "gists_url": "https://api.github.com/users/levino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levino/subscriptions",
      "organizations_url": "https://api.github.com/users/levino/orgs",
      "repos_url": "https://api.github.com/users/levino/repos",
      "events_url": "https://api.github.com/users/levino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T10:56:21Z",
    "updated_at": "2019-02-05T10:56:21Z",
    "author_association": "NONE",
    "body": "Hooray!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/460595260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
