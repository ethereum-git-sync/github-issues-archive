{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25660",
  "id": 1358732778,
  "node_id": "I_kwDOAOvK985Q_J3q",
  "number": 25660,
  "title": "Native callTracer: missing CREATE2 frames where out of gas occur",
  "user": {
    "login": "tanmaster",
    "id": 3981445,
    "node_id": "MDQ6VXNlcjM5ODE0NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3981445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tanmaster",
    "html_url": "https://github.com/tanmaster",
    "followers_url": "https://api.github.com/users/tanmaster/followers",
    "following_url": "https://api.github.com/users/tanmaster/following{/other_user}",
    "gists_url": "https://api.github.com/users/tanmaster/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tanmaster/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tanmaster/subscriptions",
    "organizations_url": "https://api.github.com/users/tanmaster/orgs",
    "repos_url": "https://api.github.com/users/tanmaster/repos",
    "events_url": "https://api.github.com/users/tanmaster/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tanmaster/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-09-01T12:00:42Z",
  "updated_at": "2023-04-03T03:30:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.10.22-unstable`\r\nOS & Version: `Ubuntu 20.04 LTS, 5.4.0-121-generic`\r\nCommit hash : `9d76a9b94f1d4f8b8a9c212151d96d6a13cb6ead`\r\n\r\nI am trying to migrate our datasource from openethereum to geth. For obtaining the same data, we want to use the tracer API of geth. When comparing data that we got from openethereum with geth, I can observe a very small discrepancy.\r\n\r\n#### Expected behaviour\r\nIn instances where `CREATE2` frames error out because the execution went out of gas, this seems not to be accurately depicted by geth. According to geth, the frame in which the \"out of gas\" occurs is the top level call frame, rather than the `CREATE2` frame (which is missing in the result entirely).\r\n\r\nUsing the example below, I would expect the result to look similar to this:\r\n\r\n```json\r\n{\r\n  \"result\": {\r\n    \"type\": \"CALL\",\r\n    \"from\": \"0xb59bff945a74a427c74fb27ae423fcf81da27c24\",\r\n    \"to\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n    \"value\": \"0x0\",\r\n    \"gas\": \"0x267a6\",\r\n    \"gasUsed\": \"0x267a6\",\r\n    \"input\": \"0xfb90b320000000000000000000000000c9b0576f11635e88cc040ebf13ef57f326f553110000000000000000000000000000000000000000000000000000000000000183\",\r\n    \"error\": \"out of gas\",\r\n    \"calls\":[{\r\n      \"type\": \"CREATE2\",\r\n      \"from\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n      \"value\": \"0x0\",\r\n      \"input\": \"0x3d602d80600a3d3981f3363d3d373d3d3d363d73059ffafdc6ef594230de44f824e2bd0a51ca5ded5af43d82803e903d91602b57fd5bf3\",\r\n      \"gas\": \"0x1d8a7\",\r\n      \"gasUsed\": \"0x1d8a7\",\r\n      \"error\": \"out of gas\"\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\n#### Actual behaviour\r\nIn the block range from 14992579 to 14999613 I was able to find seven such instances, all of them involving `CREATE2` and `out of gas`:\r\n\r\n| block    | tx  |\r\n|----------|-----|\r\n| 14992579 | 70  |\r\n| 14993975 | 100 |\r\n| 14993997 | 90  |\r\n| 14997259 | 62  |\r\n| 14997534 | 128 |\r\n| 14999176 | 209 |\r\n| 14999613 | 271 |\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n- `nc -U geth.ipc`\r\n- example with the first entry in the table above: `{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"debug_subscribe\", \"params\": [\"traceChain\", \"0xe4c4c2\", \"0xe4c4c3\", {\"tracer\": \"callTracer\", \"reexec\": 2500000}]}`\r\n- the full result can be viewed [here](https://pastebin.com/3Gdf4NW0), but the relevant part can be navigated to like this:\r\n  - `res['params']['result']['traces'][70]`, which in this case gives:\r\n```json\r\n{\r\n  \"result\": {\r\n    \"type\": \"CALL\",\r\n    \"from\": \"0xb59bff945a74a427c74fb27ae423fcf81da27c24\",\r\n    \"to\": \"0xffa397285ce46fb78c588a9e993286aac68c37cd\",\r\n    \"value\": \"0x0\",\r\n    \"gas\": \"0x267a6\",\r\n    \"gasUsed\": \"0x267a6\",\r\n    \"input\": \"0xfb90b320000000000000000000000000c9b0576f11635e88cc040ebf13ef57f326f553110000000000000000000000000000000000000000000000000000000000000183\",\r\n    \"error\": \"out of gas\"\r\n  }\r\n}\r\n```\r\n\r\nLet me know if there's anything else I can do to help recreate this problem.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1234197380",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1234197380",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1234197380,
    "node_id": "IC_kwDOAOvK985JkFuE",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T12:14:31Z",
    "updated_at": "2022-09-01T12:16:02Z",
    "author_association": "MEMBER",
    "body": "Interesting. Just to make things clear, there are several things which could be going on here, so let's first define them. \r\n\r\n1. The `CREATE2` call goes OOG. The `CREATE2` opcode costs `32000` gas up front, plus a dynamic part depending on 1) the memory expansion and 2) the size of the initcode. This is still in the outer context.  \r\n2. The `CREATE2` starts executing the `initcode`, but goes OOG while this is executing. \r\n3. The `initcode` executes fine, but the returned `runtime_bytecode` cannot be stored on-chain, because the dynamic cost of `len(code) * params.CreateDataGas (200)` causes OOG. \r\n\r\nIMO the best thing to do would be to make some pretty simple testcases of these three cases, and take it from there. I can look into it at some point, but it will probably take a few weeks.\r\n\r\nCase 1 is definitely in the outer context, case 2 is definitely in the inner context. Case 3 is not as clear-cut IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1234197380/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285777106",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1285777106",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1285777106,
    "node_id": "IC_kwDOAOvK985Mo2bS",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-20T15:42:26Z",
    "updated_at": "2022-10-20T15:42:26Z",
    "author_association": "MEMBER",
    "body": "I'll take a look into this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285777106/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1315350996",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1315350996",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1315350996,
    "node_id": "IC_kwDOAOvK985OZqnU",
    "user": {
      "login": "tanmaster",
      "id": 3981445,
      "node_id": "MDQ6VXNlcjM5ODE0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3981445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tanmaster",
      "html_url": "https://github.com/tanmaster",
      "followers_url": "https://api.github.com/users/tanmaster/followers",
      "following_url": "https://api.github.com/users/tanmaster/following{/other_user}",
      "gists_url": "https://api.github.com/users/tanmaster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tanmaster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tanmaster/subscriptions",
      "organizations_url": "https://api.github.com/users/tanmaster/orgs",
      "repos_url": "https://api.github.com/users/tanmaster/repos",
      "events_url": "https://api.github.com/users/tanmaster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tanmaster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-15T14:01:47Z",
    "updated_at": "2022-11-15T14:01:47Z",
    "author_association": "NONE",
    "body": "> I'll take a look into this.\r\n\r\nAny luck so far?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1315350996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1376750829",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1376750829",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1376750829,
    "node_id": "IC_kwDOAOvK985SD4zt",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-10T05:20:17Z",
    "updated_at": "2023-01-10T05:20:17Z",
    "author_association": "MEMBER",
    "body": "I got a bit busy and forgot about this.  For the reported transactions with discrepancies, I retrieved the tx hash and an opcode trace of each transaction: https://gist.github.com/jwasinger/1cda01680a5ff66bb0061f02a6a6da9a .\r\n\r\nThere are two transactions which fail during the execution of the create2 initcode.  The rest fail in the parent context.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1376750829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379800842",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1379800842",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1379800842,
    "node_id": "IC_kwDOAOvK985SPhcK",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T04:31:07Z",
    "updated_at": "2023-01-12T04:31:07Z",
    "author_association": "MEMBER",
    "body": "for 0x666bab2c4b14cd7bd2131d29064b30343a65865e646fb57b306b0f8884c82104 and 0xb2eaa48e39a21d5a34a4474c9722d4796b701b1f84af9b0f5f816ff7db4e447d, the out of gas is caused because the init code does not have enough gas remaining to create the contract after it finishes.\r\n\r\nI recreated this situation locally and the results using the call tracer are correct for me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379800842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1493593487",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25660#issuecomment-1493593487",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25660",
    "id": 1493593487,
    "node_id": "IC_kwDOAOvK985ZBm2P",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T03:30:56Z",
    "updated_at": "2023-04-03T03:30:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "`out of gas` was checked before entering the Create scope, so there would be no frame trigged",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1493593487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
