{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20148",
  "id": 501707164,
  "node_id": "MDU6SXNzdWU1MDE3MDcxNjQ=",
  "number": 20148,
  "title": "abigen: Does not include all structs in binding",
  "user": {
    "login": "yondonfu",
    "id": 5933273,
    "node_id": "MDQ6VXNlcjU5MzMyNzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5933273?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yondonfu",
    "html_url": "https://github.com/yondonfu",
    "followers_url": "https://api.github.com/users/yondonfu/followers",
    "following_url": "https://api.github.com/users/yondonfu/following{/other_user}",
    "gists_url": "https://api.github.com/users/yondonfu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yondonfu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yondonfu/subscriptions",
    "organizations_url": "https://api.github.com/users/yondonfu/orgs",
    "repos_url": "https://api.github.com/users/yondonfu/repos",
    "events_url": "https://api.github.com/users/yondonfu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yondonfu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-10-02T20:24:11Z",
  "updated_at": "2019-11-05T07:20:13Z",
  "closed_at": "2019-11-05T07:20:13Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nOS & Version: OSX\r\nCommit hash : df89233b5780d3b42945070e9bae616a76a83866\r\n\r\nI installed `abigen` by cloning `go-ethereum` at the above commit hash and running `make devtools`.\r\n\r\n#### Expected behaviour\r\n\r\nThis is the relevant contract code:\r\n\r\n```\r\npragma solidity ^0.5.11;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract Foo {\r\n  struct Apple {\r\n    uint256 a;\r\n    uint256 b;\r\n  }\r\n\r\n  struct Pear {\r\n    uint256 c;\r\n    uint256 d;\r\n  }\r\n\r\n  function test() public view returns (Apple memory apple, Pear memory pear) {\r\n    apple.a = 5;\r\n    apple.b = 6;\r\n    pear.c = 7;\r\n    pear.d = 8;\r\n  }\r\n}\r\n```\r\n\r\nThe Go binding should contain:\r\n\r\n- A Go struct corresponding to the Solidity `Apple` type\r\n- A Go struct corresponding to the Solidity `Pear` type\r\n- A `Test()` method that returns an anonymous struct that wraps the Go struct corresponding to the Solidity `Apple` type and the Go struct corresponding to the Solidity `Pear` type\r\n\r\n#### Actual behaviour\r\n\r\nThe generated Go binding contains:\r\n\r\n- A Go struct `Struct0` corresponding to the Solidity `Apple` type\r\n- A `Test()` method that returns an anonymous struct that includes `Struct0` twice\r\n\r\nThe binding is missing a Go struct corresponding to the Solidity `Pear` type and the anonymous struct returned by the `Test()` method does not contain the correct fields.\r\n\r\nThis is what the Go binding looks like in the section of the code with struct definitions and the `Test()` method:\r\n\r\n```\r\n// Struct0 is an auto generated low-level Go binding around an user-defined struct.\r\ntype Struct0 struct {\r\n\tA *big.Int\r\n\tB *big.Int\r\n}\r\n\r\n// Test is a free data retrieval call binding the contract method 0xf8a8fd6d.\r\n//\r\n// Solidity: function test() constant returns(Struct0 apple, Struct0 pear)\r\nfunc (_Foo *FooCaller) Test(opts *bind.CallOpts) (struct {\r\n\tApple Struct0\r\n\tPear  Struct0\r\n}, error) {\r\n\tret := new(struct {\r\n\t\tApple Struct0\r\n\t\tPear  Struct0\r\n\t})\r\n\tout := ret\r\n\terr := _Foo.contract.Call(opts, out, \"test\")\r\n\treturn *ret, err\r\n}\r\n\r\n// Test is a free data retrieval call binding the contract method 0xf8a8fd6d.\r\n//\r\n// Solidity: function test() constant returns(Struct0 apple, Struct0 pear)\r\nfunc (_Foo *FooSession) Test() (struct {\r\n\tApple Struct0\r\n\tPear  Struct0\r\n}, error) {\r\n\treturn _Foo.Contract.Test(&_Foo.CallOpts)\r\n}\r\n\r\n// Test is a free data retrieval call binding the contract method 0xf8a8fd6d.\r\n//\r\n// Solidity: function test() constant returns(Struct0 apple, Struct0 pear)\r\nfunc (_Foo *FooCallerSession) Test() (struct {\r\n\tApple Struct0\r\n\tPear  Struct0\r\n}, error) {\r\n\treturn _Foo.Contract.Test(&_Foo.CallOpts)\r\n}\r\n```\r\n\r\nI suspect this behavior is because `abigen` is not able to handle the internal types introduced into tuple types of contract ABIs as of [solc 0.5.11](https://github.com/ethereum/solidity/releases/tag/v0.5.11).\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n1. Compile the contract `Foo.sol` using solc 0.5.11 and store the ABI in `Foo.json`\r\n2. Run `abigen --abi Foo.json --pkg main --type Foo --out foo.go`\r\n3. Observe that the generated binding includes `Struct0` that corresponds to the Solidity type `Apple`, but it does not include a Go struct that corresponds to the Solidity type `Pear`. Also, observe that the `Test()` method in the binding returns an anonymous struct with `Struct0` nested inside twice.\r\n",
  "closed_by": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/538229113",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-538229113",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 538229113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODIyOTExMw==",
    "user": {
      "login": "0x234",
      "id": 25642194,
      "node_id": "MDQ6VXNlcjI1NjQyMTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25642194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x234",
      "html_url": "https://github.com/0x234",
      "followers_url": "https://api.github.com/users/0x234/followers",
      "following_url": "https://api.github.com/users/0x234/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x234/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x234/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x234/subscriptions",
      "organizations_url": "https://api.github.com/users/0x234/orgs",
      "repos_url": "https://api.github.com/users/0x234/repos",
      "events_url": "https://api.github.com/users/0x234/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x234/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T04:37:21Z",
    "updated_at": "2019-10-04T04:37:21Z",
    "author_association": "NONE",
    "body": "I observe a similar issue when attempting to create bindings for https://github.com/omisego/plasma-contracts. \r\n\r\nSolidity version: `0.5.11`\r\n\r\n`abigen` doesn't have a version flag or output information and I can't remember how I installed it. \r\n\r\n`abigen --abi PlasmaFramework.json --pkg PlasmaFramework > PlasmaFramework.go`\r\n\r\n`Failed to generate ABI binding: .:9:11068: expected ';', found 'IDENT' compiler (and 1758 more errors)`\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/538229113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/539452041",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-539452041",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 539452041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTQ1MjA0MQ==",
    "user": {
      "login": "jeffprestes",
      "id": 533337,
      "node_id": "MDQ6VXNlcjUzMzMzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/533337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeffprestes",
      "html_url": "https://github.com/jeffprestes",
      "followers_url": "https://api.github.com/users/jeffprestes/followers",
      "following_url": "https://api.github.com/users/jeffprestes/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeffprestes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeffprestes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeffprestes/subscriptions",
      "organizations_url": "https://api.github.com/users/jeffprestes/orgs",
      "repos_url": "https://api.github.com/users/jeffprestes/repos",
      "events_url": "https://api.github.com/users/jeffprestes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeffprestes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-08T10:27:17Z",
    "updated_at": "2019-10-08T10:27:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yondonfu Is the ABIEncoderV2 officially supported by Solidity devs yet?\r\n\r\n@jbunce I think your situation is different. Are you trying to generate go file from a ABI file, am I right? I think abigen work better when your source is a Solidity file.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/539452041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/541529264",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-541529264",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 541529264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTUyOTI2NA==",
    "user": {
      "login": "yondonfu",
      "id": 5933273,
      "node_id": "MDQ6VXNlcjU5MzMyNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5933273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yondonfu",
      "html_url": "https://github.com/yondonfu",
      "followers_url": "https://api.github.com/users/yondonfu/followers",
      "following_url": "https://api.github.com/users/yondonfu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yondonfu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yondonfu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yondonfu/subscriptions",
      "organizations_url": "https://api.github.com/users/yondonfu/orgs",
      "repos_url": "https://api.github.com/users/yondonfu/repos",
      "events_url": "https://api.github.com/users/yondonfu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yondonfu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-14T07:21:08Z",
    "updated_at": "2019-10-14T07:21:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jeffprestes ABIEncoderV2 is still an experimental feature and needs to be turned on via a pragma statement, but usage is becoming increasingly common. Some examples:\r\n\r\n- Augur: https://github.com/AugurProject/augur/blob/0ce9c261320b25f128258e2b8d60a799cda34a28/packages/augur-core/source/contracts/trading/FillOrder.sol\r\n\r\n- 0x: https://github.com/0xProject/0x-monorepo/blob/development/contracts/exchange/contracts/src/Exchange.sol\r\n\r\n`abigen` works fine for contracts that use ABIEncoderV2 and solc < 0.5.11. But, as of solc 0.5.11, internal types are added to tuple types in a contract's ABI which `abigen` does not know how to handle yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/541529264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542018255",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-542018255",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 542018255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjAxODI1NQ==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T03:19:20Z",
    "updated_at": "2019-10-15T03:19:20Z",
    "author_association": "MEMBER",
    "body": "@yondonfu Basically `abigen` uses all abi information to generate bindings.  \r\n\r\n**This is the compiler output for abi**\r\n\r\n```\r\n[{\r\n\t\"constant\":true,\r\n\t\"inputs\":[],\r\n\t\"name\":\"test\",\r\n\t\"outputs\":[\r\n\t\t{\r\n\t\t\t\"components\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"apple\",\"type\":\"tuple\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"components\":[{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"pear\",\"type\":\"tuple\"\r\n\t\t}\r\n\t],\r\n\t\"payable\":false,\r\n\t\"stateMutability\":\"pure\",\r\n\t\"type\":\"function\"\r\n}]\r\n```\r\n\r\nYou can find the description of return parameter type is `\"components\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}]`, **there is no struct TYPE name in abi**. So we can't distinguish `Apple` and `Pear` because in abi level, they are just SAME.\r\n\r\nSo only `Struct0` is defined in binding.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542018255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542018793",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-542018793",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 542018793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjAxODc5Mw==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T03:22:18Z",
    "updated_at": "2019-10-15T03:22:18Z",
    "author_association": "MEMBER",
    "body": "For user experience wise, maybe it's not enough since user needs to convert `Struct0` to user-defined structs `Apple` and `Pear`. But we can't do more here",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542018793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542756805",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-542756805",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 542756805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mjc1NjgwNQ==",
    "user": {
      "login": "yondonfu",
      "id": 5933273,
      "node_id": "MDQ6VXNlcjU5MzMyNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5933273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yondonfu",
      "html_url": "https://github.com/yondonfu",
      "followers_url": "https://api.github.com/users/yondonfu/followers",
      "following_url": "https://api.github.com/users/yondonfu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yondonfu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yondonfu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yondonfu/subscriptions",
      "organizations_url": "https://api.github.com/users/yondonfu/orgs",
      "repos_url": "https://api.github.com/users/yondonfu/repos",
      "events_url": "https://api.github.com/users/yondonfu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yondonfu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-16T15:25:50Z",
    "updated_at": "2019-10-16T15:26:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "When compiling using solc 0.5.11, the ABI output is: \r\n\r\n```\r\n[\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"test\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"a\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"b\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Foo.Apple\",\r\n\t\t\t\t\"name\": \"apple\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"c\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"d\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Foo.Pear\",\r\n\t\t\t\t\"name\": \"pear\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n```\r\n\r\nSince each function output now also includes the `internalType` field, I think it should be possible for `abigen` to use the value specified for that field to generate separate Go structs for the `Apple` and `Pear` Solidity types even if `Apple` and `Pear` are composed of the same elementary `uint256` types.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/542756805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/543075280",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-543075280",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 543075280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzA3NTI4MA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-17T08:51:53Z",
    "updated_at": "2019-10-17T08:51:53Z",
    "author_association": "MEMBER",
    "body": "@yondonfu Wow, this is wonderful. Haven't tried the new version compiler before.\r\n\r\nWith `internalType` information, I think it's feasible to do more things. Okay I'll check the new documentation and see how much I can do here.\r\n\r\nThanks for the report!  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/543075280/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/543670427",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-543670427",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 543670427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzY3MDQyNw==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T10:51:25Z",
    "updated_at": "2019-10-18T10:51:25Z",
    "author_association": "MEMBER",
    "body": "@yondonfu Could you please try #20179? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/543670427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/547477566",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-547477566",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 547477566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzQ3NzU2Ng==",
    "user": {
      "login": "yondonfu",
      "id": 5933273,
      "node_id": "MDQ6VXNlcjU5MzMyNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5933273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yondonfu",
      "html_url": "https://github.com/yondonfu",
      "followers_url": "https://api.github.com/users/yondonfu/followers",
      "following_url": "https://api.github.com/users/yondonfu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yondonfu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yondonfu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yondonfu/subscriptions",
      "organizations_url": "https://api.github.com/users/yondonfu/orgs",
      "repos_url": "https://api.github.com/users/yondonfu/repos",
      "events_url": "https://api.github.com/users/yondonfu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yondonfu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-29T15:24:42Z",
    "updated_at": "2019-10-29T15:25:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rjl493456442 `abigen` built from #20179 seems to be generating named structs using the contract ABI's `internalType` fields! \r\n\r\nThe binding generated for the example contract `Foo` mentioned in the OP contains the following Go structs that correspond to the `Apple` and `Pear` Solidity structs:\r\n\r\n```\r\ntype FooApple struct {\r\n    A *big.Int\r\n    B *big.Int\r\n}\r\n\r\ntype FooPear struct {\r\n    C *big.Int\r\n    D *big.Int\r\n}\r\n```\r\n\r\nHaving struct names derived from the contract instead of `Struct0`, `Struct1`, etc is great.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/547477566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/549695427",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20148#issuecomment-549695427",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20148",
    "id": 549695427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY5NTQyNw==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T07:20:13Z",
    "updated_at": "2019-11-05T07:20:13Z",
    "author_association": "MEMBER",
    "body": "Fixed by #20179",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/549695427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
