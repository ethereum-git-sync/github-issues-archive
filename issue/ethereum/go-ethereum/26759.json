{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26759",
  "id": 1595639011,
  "node_id": "I_kwDOAOvK985fG4Tj",
  "number": 26759,
  "title": "Tests failing on 1.11.2",
  "user": {
    "login": "ABastionOfSanity",
    "id": 1214042,
    "node_id": "MDQ6VXNlcjEyMTQwNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1214042?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ABastionOfSanity",
    "html_url": "https://github.com/ABastionOfSanity",
    "followers_url": "https://api.github.com/users/ABastionOfSanity/followers",
    "following_url": "https://api.github.com/users/ABastionOfSanity/following{/other_user}",
    "gists_url": "https://api.github.com/users/ABastionOfSanity/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ABastionOfSanity/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ABastionOfSanity/subscriptions",
    "organizations_url": "https://api.github.com/users/ABastionOfSanity/orgs",
    "repos_url": "https://api.github.com/users/ABastionOfSanity/repos",
    "events_url": "https://api.github.com/users/ABastionOfSanity/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ABastionOfSanity/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-22T18:50:56Z",
  "updated_at": "2023-02-23T07:50:27Z",
  "closed_at": "2023-02-23T07:49:48Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\n[***]$ uname -a\r\nLinux fedora 6.1.10-200.fc37.x86_64 #1 SMP PREEMPT_DYNAMIC Mon Feb  6 23:56:48 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\r\n[***]$ go version\r\ngo version go1.19.2 linux/amd64\r\n\r\ncommit 73b01f40ceb6bcb6f9f44c2a3d6f963b40452b47 (HEAD -> v1.11.2_fresh, origin/v1.11.2_fresh, origin/geth_main/v1.11.2, geth_main/v1.11.2)\r\nAuthor: Péter Szilágyi <peterke@gmail.com>\r\nDate:   Wed Feb 22 14:23:51 2023 +0200\r\n\r\n    params: release Geth v1.11.2\r\n\r\n> params/version.go\r\n\r\n\r\n#### Expected behaviour\r\nTests pass locally as they do in CI.\r\n\r\n#### Actual behaviour\r\nTests fail locally.  Previous releases have not had issue.\r\n\r\n\r\n> --- FAIL: TestSequentialRead (0.00s)\r\n>     freezer_table_test.go:899: AppendRaw(0, ...) returned error: the append operation is out-order: have 0 want 30\r\n> --- FAIL: TestSequentialReadByteLimit (0.00s)\r\n>     freezer_table_test.go:960: AppendRaw(0, ...) returned error: the append operation is out-order: have 0 want 30\r\n> --- FAIL: TestFreezerReadonly (0.00s)\r\n>     freezer_table_test.go:1032: AppendRaw(0, ...) returned error: the append operation is out-order: have 0 want 8\r\n> --- FAIL: TestRandom (0.00s)\r\n>     freezer_table_test.go:1287: random test iteration 1 failed: ([]interface {}) (len=1 cap=1) {\r\n>          (rawdb.randTest) (len=50 cap=67) {\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 2,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 7,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (*errors.errorString)(0xc0002989f0)(mismatch on retrieved values [[0 0 0 0 0 0 0 9] [0 0 0 0 0 0 0 10] [0 0 0 0 0 0 0 11]] [])\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 6,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=2 cap=2) {\r\n>             (uint64) 0,\r\n>             (uint64) 1\r\n>            },\r\n>            blobs: ([][]uint8) (len=2 cap=2) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 00                           |........|\r\n>             },\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 01                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 0,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 2,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=2 cap=2) {\r\n>             (uint64) 0,\r\n>             (uint64) 1\r\n>            },\r\n>            blobs: ([][]uint8) (len=2 cap=2) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 00                           |........|\r\n>             },\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 01                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 6,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=1 cap=1) {\r\n>             (uint64) 0\r\n>            },\r\n>            blobs: ([][]uint8) (len=1 cap=1) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 00                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 2,\r\n>            items: ([]uint64) (len=1 cap=1) {\r\n>             (uint64) 0\r\n>            },\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=2 cap=2) {\r\n>             (uint64) 1,\r\n>             (uint64) 2\r\n>            },\r\n>            blobs: ([][]uint8) (len=2 cap=2) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 01                           |........|\r\n>             },\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 02                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 0,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 6,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 6,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=2 cap=2) {\r\n>             (uint64) 0,\r\n>             (uint64) 1\r\n>            },\r\n>            blobs: ([][]uint8) (len=2 cap=2) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 00                           |........|\r\n>             },\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 01                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 6,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 0,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 7,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 7,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 3,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 2,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 7,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 0,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=2 cap=2) {\r\n>             (uint64) 0,\r\n>             (uint64) 1\r\n>            },\r\n>            blobs: ([][]uint8) (len=2 cap=2) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 00                           |........|\r\n>             },\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 01                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=1 cap=1) {\r\n>             (uint64) 2\r\n>            },\r\n>            blobs: ([][]uint8) (len=1 cap=1) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 02                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 1,\r\n>            items: ([]uint64) (len=1 cap=1) {\r\n>             (uint64) 3\r\n>            },\r\n>            blobs: ([][]uint8) (len=1 cap=1) {\r\n>             ([]uint8) (len=8 cap=8) {\r\n>              00000000  00 00 00 00 00 00 00 03                           |........|\r\n>             }\r\n>            },\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 4,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 5,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           },\r\n>           (rawdb.randTestStep) {\r\n>            op: (int) 0,\r\n>            items: ([]uint64) <nil>,\r\n>            blobs: ([][]uint8) <nil>,\r\n>            target: (uint64) 0,\r\n>            err: (error) <nil>\r\n>           }\r\n>          }\r\n>         }\r\n> \r\n> Version 1 count 7, deleted 0, hidden 0\r\n> | number | fileno | offset |\r\n> |--------|--------|--------|\r\n> |  000   |  000   |  020   | \r\n> |  001   |  000   |  040   | \r\n> |  002   |  001   |  020   | \r\n> |  003   |  001   |  040   | \r\n> |  004   |  002   |  020   | \r\n> |  005   |  002   |  040   | \r\n> |  006   |  003   |  020   | \r\n> |--------------------------|\r\n> \r\n> \r\n> Version 1 count 7, deleted 0, hidden 1\r\n> | number | fileno | offset |\r\n> |--------|--------|--------|\r\n> |  000   |  000   |  020   | \r\n> |  001   |  000   |  040   | \r\n> |  002   |  001   |  020   | \r\n> |  003   |  001   |  040   | \r\n> |  004   |  002   |  020   | \r\n> |  005   |  002   |  040   | \r\n> |  006   |  003   |  020   | \r\n> |--------------------------|\r\n> \r\n> FAIL\r\n> FAIL\tgithub.com/ethereum/go-ethereum/core/rawdb\t0.248s\r\n> \r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nClean checkout of above SHA on dev system described above:\r\n[michael@fedora go-ethereum]$ go run build/ci.go test\r\n\r\n\r\n#### Backtrace\r\n\r\n````\r\n[backtrace]\r\n````\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1441319187",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26759#issuecomment-1441319187",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759",
    "id": 1441319187,
    "node_id": "IC_kwDOAOvK985V6MkT",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T07:43:08Z",
    "updated_at": "2023-02-23T07:43:08Z",
    "author_association": "MEMBER",
    "body": "```\r\n$ go test ./core/rawdb/...\r\nok  \tgithub.com/ethereum/go-ethereum/core/rawdb\t5.270s\r\n```\r\n\r\nWorks for us? Please check your Go installation, something seems to be off at your end IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1441319187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1441324316",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26759#issuecomment-1441324316",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26759",
    "id": 1441324316,
    "node_id": "IC_kwDOAOvK985V6N0c",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T07:49:48Z",
    "updated_at": "2023-02-23T07:50:27Z",
    "author_association": "MEMBER",
    "body": "Downgraded to your version of Go just to sanity check, still everything works:\r\n\r\n```\r\n$ go version\r\ngo version go1.19.2 linux/amd64\r\n```\r\n\r\n```\r\n$ go test ./core/rawdb/...\r\nok  \tgithub.com/ethereum/go-ethereum/core/rawdb\t7.163s\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1441324316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
