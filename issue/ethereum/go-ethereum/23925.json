{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23925",
  "id": 1055656167,
  "node_id": "I_kwDOAOvK984-7Ajn",
  "number": 23925,
  "title": "Batch eth_getStorageAt",
  "user": {
    "login": "FeurJak",
    "id": 77963837,
    "node_id": "MDQ6VXNlcjc3OTYzODM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/FeurJak",
    "html_url": "https://github.com/FeurJak",
    "followers_url": "https://api.github.com/users/FeurJak/followers",
    "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
    "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
    "organizations_url": "https://api.github.com/users/FeurJak/orgs",
    "repos_url": "https://api.github.com/users/FeurJak/repos",
    "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/FeurJak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 29,
  "created_at": "2021-11-17T03:14:05Z",
  "updated_at": "2022-10-31T10:04:52Z",
  "closed_at": "2022-05-04T20:54:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Is there an available method to do a batch eth_getStorageAt to retrieve multiple storage variables? I know the exact indexes all-ready, but it's inefficient for me to make a single rpc call per variable. ",
  "closed_by": {
    "login": "FeurJak",
    "id": 77963837,
    "node_id": "MDQ6VXNlcjc3OTYzODM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/FeurJak",
    "html_url": "https://github.com/FeurJak",
    "followers_url": "https://api.github.com/users/FeurJak/followers",
    "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
    "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
    "organizations_url": "https://api.github.com/users/FeurJak/orgs",
    "repos_url": "https://api.github.com/users/FeurJak/repos",
    "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/FeurJak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/971222326",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-971222326",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 971222326,
    "node_id": "IC_kwDOAOvK98454602",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T06:12:24Z",
    "updated_at": "2021-11-17T06:12:24Z",
    "author_association": "NONE",
    "body": "Okay, just discovered eth_getProof.... but this seems to take quite a bit of time just to get 3 variables (~1.2ms).. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/971222326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972709686",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-972709686",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 972709686,
    "node_id": "IC_kwDOAOvK9845-l82",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T09:56:24Z",
    "updated_at": "2021-11-18T09:56:24Z",
    "author_association": "MEMBER",
    "body": "You can also use a JSON-RPC batch request. While this may still incur some internal overhead for each storage slot, it will at least save the overhead of sending the requests.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972709686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972744383",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-972744383",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 972744383,
    "node_id": "IC_kwDOAOvK9845-ua_",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T10:40:04Z",
    "updated_at": "2021-11-18T10:40:04Z",
    "author_association": "NONE",
    "body": "> You can also use a JSON-RPC batch request. While this may still incur some internal overhead for each storage slot, it will at least save the overhead of sending the requests.\r\n\r\nI'm using go & I\"m calling \"eth_getStorageAt\" via an rpclient (i..e. rpclient.CallContext). I can write my own batch request but I believe these requests are still handled one by one internally. \r\n\r\nMy understanding is that a new stateDB and stateObj has to be created for every request, so I'm looking to create a new function (i.e. getBatchStorageAt, GetBatchState, GetBatchCommitedState...) which will return an array of storage variables based on an array of indexes for 1 address. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972744383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972754383",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-972754383",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 972754383,
    "node_id": "IC_kwDOAOvK9845-w3P",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T10:53:24Z",
    "updated_at": "2021-11-18T10:53:24Z",
    "author_association": "MEMBER",
    "body": "I understand you are talking about creating a new method here, just trying to avoid it. Let's explore the existing alternatives before adding a new RPC method.\r\n\r\nIf the performance of RPC batch is not enough for you, you can also get multiple slots using `eth_call`. In geth, this method accepts a third parameter containing 'state overrides' ([see documentation](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set)). To get any number of storage slots, you could encode your request as an EVM program and run it in the context of your target contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972754383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972758849",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-972758849",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 972758849,
    "node_id": "IC_kwDOAOvK9845-x9B",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T10:59:51Z",
    "updated_at": "2021-11-18T10:59:51Z",
    "author_association": "MEMBER",
    "body": "> My understanding is that a new stateDB and stateObj has to be created for every request\r\n\r\nThis step should be kind of cheap because a lot of things are cached internally. I'd prefer you try the RPC batch first and check if the performance is good enough for your use case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/972758849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/973596316",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-973596316",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 973596316,
    "node_id": "IC_kwDOAOvK9846B-ac",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-19T00:45:27Z",
    "updated_at": "2021-11-19T00:45:27Z",
    "author_association": "NONE",
    "body": "> > My understanding is that a new stateDB and stateObj has to be created for every request\r\n> \r\n> This step should be kind of cheap because a lot of things are cached internally. I'd prefer you try the RPC batch first and check if the performance is good enough for your use case.\r\n\r\nFair point, I'll measure the performance of all-ready available methods before going forward with creating new methods. \r\n\r\nWith Eth_Call, not too clear about the stateDiff format as it's not given in the examples, would you know what the format for that parameter is?  (i.e.  \"stateDiff\": {\"0x0000000000000000000000000000000000000001\": {\"code\": \"0x6080604052600760005260206000f3fe\"}} ) ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/973596316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/974579976",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-974579976",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 974579976,
    "node_id": "IC_kwDOAOvK9846FukI",
    "user": {
      "login": "georgercarder",
      "id": 31452702,
      "node_id": "MDQ6VXNlcjMxNDUyNzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/31452702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgercarder",
      "html_url": "https://github.com/georgercarder",
      "followers_url": "https://api.github.com/users/georgercarder/followers",
      "following_url": "https://api.github.com/users/georgercarder/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgercarder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgercarder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgercarder/subscriptions",
      "organizations_url": "https://api.github.com/users/georgercarder/orgs",
      "repos_url": "https://api.github.com/users/georgercarder/repos",
      "events_url": "https://api.github.com/users/georgercarder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgercarder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-20T02:42:06Z",
    "updated_at": "2021-11-20T02:42:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@FeurJak , could your batching needs be met with their GraphQL api?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/974579976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1016436132",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1016436132",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1016436132,
    "node_id": "IC_kwDOAOvK9848lZWk",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-19T12:51:18Z",
    "updated_at": "2022-01-19T12:51:18Z",
    "author_association": "MEMBER",
    "body": "This is the best graphql query I could come up with for re this issue:\r\n\r\n```graphql\r\nquery slots($blocknum: Long!, $addr: Address!, $key0: Bytes32!, $key1: Bytes32!, $key2: Bytes32!) {\r\n  slot0: block (number: $blocknum) {\r\n    account(address: $addr) { storage (slot: $key0)}\r\n  },\r\n    slot1: block (number: $blocknum) {\r\n    account(address: $addr) { storage (slot: $key1)}\r\n  },\r\n    slot2: block (number: $blocknum) {\r\n    account(address: $addr) { storage (slot: $key2)}\r\n  }\r\n}\r\n```\r\n\r\nWith the variables being something like (example is a random contract from Goerli):\r\n\r\n```json\r\n{\r\n  \"blocknum\": \"6004069\",\r\n  \"addr\":\"0xD3909f56dFb3B6F11Fc0d82Ef6022C6485EB0AE0\",\r\n  \"key0\":\"0x0000000000000000000000000000000000000000000000000000000000000003\",\r\n  \"key1\": \"0x7461cd233bf72e6c1fab8f2ffafce9cd48c96e1b422444c78aeae2cdd60843c8\",\r\n  \"key2\": \"0x7461cd233bf72e6c1fab8f2ffafce9cd48c96e1b422444c78aeae2cdd60843c9\"\r\n}\r\n```\r\n\r\nThis could've been re-written to become a bit shorter had graphql supported parameterized fragments (https://github.com/graphql/graphql-spec/issues/204). Right now this is what we're stuck with which sucks a bit if you have a dynamic and variable list of slots you want to query each time. You'll have to do some string juggling to construct the query.\r\n\r\nI'm going to try that next and compare the performance with a doing several `eth_getStorageAt` as a next step.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1016436132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027189309",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1027189309",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1027189309,
    "node_id": "IC_kwDOAOvK9849Oao9",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T19:06:33Z",
    "updated_at": "2022-02-01T19:07:16Z",
    "author_association": "MEMBER",
    "body": "Surprisingly for large numbers of storage slots requested GraphQL can be slower than sending a series of separate JSON-RPC requests. I wrote a [script](https://gist.github.com/s1na/fee1ffad8b087373d1fd76afe7235569) which gets the prestate for a block, turns that into an access-list and then does first: a series of `eth_getStorageAt` calls, and then fills a query such as the one above with all the storage slots. Here are the results for a few mainnet blocks (on a live node, so data noisy). Note the slow graphql response when number of storage slots exceeds 1000:\r\n\r\n```\r\n$ node index.js 14121860\r\nAccess-list has 215 accounts with 1430 storage slots\r\njson-rpc requests took 571ms\r\ngraphql request took 1214ms\r\n\r\n$ node index.js 14121859\r\nAccess-list has 48 accounts with 358 storage slots\r\njson-rpc requests took 188ms\r\ngraphql request took 73ms\r\n\r\n$ node index.js 14121858\r\nAccess-list has 92 accounts with 680 storage slots\r\njson-rpc requests took 310ms\r\ngraphql request took 233ms\r\n\r\n$ node index.js 14121857\r\nAccess-list has 219 accounts with 1718 storage slots\r\njson-rpc requests took 749ms\r\ngraphql request took 4901ms\r\n\r\n$ node index.js 14121856\r\nAccess-list has 152 accounts with 1544 storage slots\r\njson-rpc requests took 622ms\r\ngraphql request took 1134ms\r\n\r\n$ node index.js 14121855\r\nAccess-list has 13 accounts with 109 storage slots\r\njson-rpc requests took 72ms\r\ngraphql request took 15ms\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027189309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027198484",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1027198484",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1027198484,
    "node_id": "IC_kwDOAOvK9849Oc4U",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T19:17:27Z",
    "updated_at": "2022-02-01T19:20:03Z",
    "author_association": "NONE",
    "body": "Sorry for not replying to you guys,  had no idea that this thread was still alive. \r\n\r\nI unfortunately can't go down the GraphQL route for my application. \r\nI ended up with writing my own eth_GetBatchStorageAt on /internal/ethapi/api.go & state.GetStatesFromStorage(addresses,keys) , core/state/statedb.go: \r\n\r\n`\r\nfunc (s *PublicBlockChainAPI) GetBatchStorageAt(ctx context.Context, addresses []string, keys []string, blockNrOrHash rpc.BlockNumberOrHash) ([]common.Hash, error) {\r\n\tstate, _, err := s.b.StateAndHeaderByNumberOrHash(ctx, blockNrOrHash)\r\n\tif state == nil || err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tres := state.GetStatesFromStorage(addresses,keys) \r\n\treturn res[:], state.Error()\r\n}`\r\n\r\n`func (s *StateDB) GetStatesFromStorage(addrs []string, hashes []string) []common.Hash {\r\n\tvar _res []common.Hash\r\n\tfor _, _addr := range(addrs) {\r\n\t\tstateObject := s.getStateObject(common.HexToAddress(_addr)) \r\n\t\tif stateObject != nil {\r\n\t\t\t_res = append(_res, stateObject.GetStatesFromStorage(s.db, hashes)...)\r\n\t\t} else {\r\n\t\t\tfor i := 0; i < len(hashes); i++ {\r\n\t\t\t\t_res = append(_res, common.HexToHash(\"\"))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn _res\r\n}`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nCurrent solution is very quick. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027198484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029041076",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1029041076",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1029041076,
    "node_id": "IC_kwDOAOvK9849Veu0",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-03T14:24:08Z",
    "updated_at": "2022-02-03T14:24:08Z",
    "author_association": "MEMBER",
    "body": "@FeurJak I'm trying to find the fastest way to get a batch of storage values without having to add a new method to the API and I kinda hijacked your thread to share the results. Sorry about that :) Feel free to mute the thread if you're not interested in this anymore.\r\n\r\nBy splitting the storage slots and doing multiple GraphQL queries (say each with 100 slots) I managed to gain a 3-5x speedup compared to JSON-RPC. I updated the [gist](https://gist.github.com/s1na/fee1ffad8b087373d1fd76afe7235569) with the new script if anyone's interested. 3-5x is still not the speed-up I was hoping for so I'll keep the thread open for now in case I find another optimization.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029041076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029404852",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1029404852",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1029404852,
    "node_id": "IC_kwDOAOvK9849W3i0",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-03T21:10:10Z",
    "updated_at": "2022-02-03T21:10:10Z",
    "author_association": "NONE",
    "body": "@s1na  I'm very much interested !  I think the batch storage lookup requirement would be needed by many others and the GraphQL looks to be a viable solution without adding a new method to the API. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029404852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029406258",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1029406258",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1029406258,
    "node_id": "IC_kwDOAOvK9849W34y",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-03T21:11:57Z",
    "updated_at": "2022-02-03T21:11:57Z",
    "author_association": "NONE",
    "body": "@s1na  I am curious as to why it would provide a 3-5x speedup compared to JSON-RPC though. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029406258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029928512",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1029928512",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1029928512,
    "node_id": "IC_kwDOAOvK9849Y3ZA",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-04T12:06:46Z",
    "updated_at": "2022-02-04T12:06:46Z",
    "author_association": "MEMBER",
    "body": "@s1na Did you find out where the slowdown in big queries comes from? I find it surprising that this splitting of queries is necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029928512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029965050",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1029965050",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1029965050,
    "node_id": "IC_kwDOAOvK9849ZAT6",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-04T13:00:26Z",
    "updated_at": "2022-02-04T13:21:31Z",
    "author_association": "MEMBER",
    "body": "@fjl almost the whole time is spent here: https://github.com/graph-gophers/graphql-go/blob/eae31ca73eb3473c544710955d1dbebc22605bfe/graphql.go#L212. [First loop](https://github.com/graph-gophers/graphql-go/blob/eae31ca73eb3473c544710955d1dbebc22605bfe/internal/validation/validation.go#L73) of the Validation function.\r\n\r\n@FeurJak well GraphQL has turned out to be much faster than JSON-RPC in many cases, e.g. ~100x in an [experiment](https://github.com/ethereum/go-ethereum/pull/23277#issuecomment-1012156713) I did for fetching receipts for a range of blocks. Mostly because you're packing in a large number of requests in one query and avoiding all the network latency.\r\n\r\nEdit: created an issue upstream: https://github.com/graph-gophers/graphql-go/issues/499",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1029965050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1030173994",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1030173994",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1030173994,
    "node_id": "IC_kwDOAOvK9849ZzUq",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-04T17:01:59Z",
    "updated_at": "2022-02-04T17:01:59Z",
    "author_association": "MEMBER",
    "body": "Thanks Sina! Great find!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1030173994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041569809",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1041569809",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1041569809,
    "node_id": "IC_kwDOAOvK984-FRgR",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T14:48:56Z",
    "updated_at": "2022-02-16T14:48:56Z",
    "author_association": "MEMBER",
    "body": "So it turns out one of the specified validation rules (`OverlappingFieldsCanBeMerged `) has quadratic complexity which causes my query to blow up. So I modified the query to minimize the number of selection fields. Now it looks like this:\r\n\r\n```graphql\r\nquery slots {\r\n  block {\r\n    account0: account(address: \"0x...\") {\r\n      slot0: storage (slot: \"0x...\"),\r\n      slot1: storage (slot: \"0x...\")\r\n    },\r\n    account1: account(address: \"0x...\") {\r\n      slot0: storage (slot: \"0x...\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIn the meanwhile I also prototyped a JSON-RPC batch request. You can find the implementation for both in the same [gist](https://gist.github.com/s1na/fee1ffad8b087373d1fd76afe7235569). Now to some results:\r\n\r\n```\r\n$ node index.js 14132672\r\nAccess-list has 245 accounts with 1896 storage slots\r\njson-rpc requests took 656ms\r\n16 graphql request took 88ms\r\nNew graphql request took 39ms\r\nBatch json-rpc req took 82ms\r\n\r\n$ node index.js 14132673\r\nAccess-list has 134 accounts with 1681 storage slots\r\njson-rpc requests took 581ms\r\n11 graphql request took 76ms\r\nNew graphql request took 56ms\r\nBatch json-rpc req took 52ms\r\n\r\n$ node index.js 14132679\r\nAccess-list has 163 accounts with 1160 storage slots\r\njson-rpc requests took 436ms\r\n11 graphql request took 61ms\r\nNew graphql request took 22ms\r\nBatch json-rpc req took 34ms\r\n\r\n$ node index.js 14132676\r\nAccess-list has 209 accounts with 1730 storage slots\r\njson-rpc requests took 580ms\r\n15 graphql request took 104ms\r\nNew graphql request took 31ms\r\nBatch json-rpc req took 50ms\r\n\r\n$ node index.js 14132681\r\nAccess-list has 156 accounts with 1253 storage slots\r\njson-rpc requests took 452ms\r\n10 graphql request took 61ms\r\nNew graphql request took 65ms\r\nBatch json-rpc req took 39ms\r\n```\r\n\r\nFor anyone needing to fetch many storage slots I recommend first the new GraphQL query, and then the JSON-RPC batch request until there's an update from `graphql-go` upstream about this validation rule complexity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1041569809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1043540130",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1043540130",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1043540130,
    "node_id": "IC_kwDOAOvK984-Myii",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T22:23:40Z",
    "updated_at": "2022-02-17T22:23:40Z",
    "author_association": "NONE",
    "body": "awesome work s1na, I'll be sure to spread this around to those who have the same issue. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1043540130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117903491",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1117903491",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1117903491,
    "node_id": "IC_kwDOAOvK985CodqD",
    "user": {
      "login": "berktaylan",
      "id": 40706650,
      "node_id": "MDQ6VXNlcjQwNzA2NjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40706650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berktaylan",
      "html_url": "https://github.com/berktaylan",
      "followers_url": "https://api.github.com/users/berktaylan/followers",
      "following_url": "https://api.github.com/users/berktaylan/following{/other_user}",
      "gists_url": "https://api.github.com/users/berktaylan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berktaylan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berktaylan/subscriptions",
      "organizations_url": "https://api.github.com/users/berktaylan/orgs",
      "repos_url": "https://api.github.com/users/berktaylan/repos",
      "events_url": "https://api.github.com/users/berktaylan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berktaylan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T20:42:32Z",
    "updated_at": "2022-05-04T20:42:32Z",
    "author_association": "NONE",
    "body": "Sorry for bumping this. But i want to get reserves ( getreserves function) for 10k uniswap lp , per block. What is the fastest way to to this. Anyone have idea or recommedation ?\n\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117903491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117928394",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1117928394",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1117928394,
    "node_id": "IC_kwDOAOvK985CojvK",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T20:52:24Z",
    "updated_at": "2022-05-04T20:52:24Z",
    "author_association": "NONE",
    "body": "@berktaylan. You can index the storage keys for the reserves for the 10k Lps, and read directly off storage.  You can read my blog post (go through tutorial 1 to 3) : https://medium.com/@fejleuros/tutorial-1-part-1-350694af2632",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117928394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117929891",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1117929891",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1117929891,
    "node_id": "IC_kwDOAOvK985CokGj",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T20:54:32Z",
    "updated_at": "2022-05-04T20:54:32Z",
    "author_association": "NONE",
    "body": "@berktaylan assuming the 10k Lps are just from Uniswap and its a V2 Lp, I believe the storage key is 0x08 for Reserves, so you can utilize the GraphQL query that s1na did to do a batch read of storage.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1117929891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119108140",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119108140",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119108140,
    "node_id": "IC_kwDOAOvK985CtDws",
    "user": {
      "login": "berktaylan",
      "id": 40706650,
      "node_id": "MDQ6VXNlcjQwNzA2NjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40706650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berktaylan",
      "html_url": "https://github.com/berktaylan",
      "followers_url": "https://api.github.com/users/berktaylan/followers",
      "following_url": "https://api.github.com/users/berktaylan/following{/other_user}",
      "gists_url": "https://api.github.com/users/berktaylan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berktaylan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berktaylan/subscriptions",
      "organizations_url": "https://api.github.com/users/berktaylan/orgs",
      "repos_url": "https://api.github.com/users/berktaylan/repos",
      "events_url": "https://api.github.com/users/berktaylan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berktaylan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T22:43:49Z",
    "updated_at": "2022-05-05T22:43:49Z",
    "author_association": "NONE",
    "body": "@FeurJak hi,\r\n\r\nso i tried with 5k lps ( yes they are v2 ) with the batch request its 250  ms minimum and sometimes 1k ms randomly.\r\n\r\nwith graphql its 1k to 2k ms. \r\n\r\nIm planning to go with batch request and aiming for 10k lps. Any tricks to make my batch requests faster ?\r\n\r\nThanks.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119108140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119110577",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119110577",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119110577,
    "node_id": "IC_kwDOAOvK985CtEWx",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T22:49:06Z",
    "updated_at": "2022-05-05T22:49:06Z",
    "author_association": "NONE",
    "body": "@berktaylan which \"batch request\" method are you referring to? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119110577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119111142",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119111142",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119111142,
    "node_id": "IC_kwDOAOvK985CtEfm",
    "user": {
      "login": "berktaylan",
      "id": 40706650,
      "node_id": "MDQ6VXNlcjQwNzA2NjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40706650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berktaylan",
      "html_url": "https://github.com/berktaylan",
      "followers_url": "https://api.github.com/users/berktaylan/followers",
      "following_url": "https://api.github.com/users/berktaylan/following{/other_user}",
      "gists_url": "https://api.github.com/users/berktaylan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berktaylan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berktaylan/subscriptions",
      "organizations_url": "https://api.github.com/users/berktaylan/orgs",
      "repos_url": "https://api.github.com/users/berktaylan/repos",
      "events_url": "https://api.github.com/users/berktaylan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berktaylan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T22:50:31Z",
    "updated_at": "2022-05-05T22:52:08Z",
    "author_association": "NONE",
    "body": "@FeurJak \r\n\r\n  for (let i = 0; i < lpv.length; i++) {\r\n        reqs.push({\r\n            method: 'eth_getStorageAt',\r\n            params: [`0x${lpv[i]}`,  \"0x08\", 'latest'],\r\n            id: 0,\r\n            jsonrpc: '2.0',\r\n        })\r\n    }\r\n\r\n wssend.send(JSON.stringify(reqs));\r\n\r\n\r\n\r\nNot sure am i doing it correctly, so our goal was run it through db cache instead of EVM ? and i think eth_getStorageAt runs over cache/db not evm ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119111142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119129295",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119129295",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119129295,
    "node_id": "IC_kwDOAOvK985CtI7P",
    "user": {
      "login": "FeurJak",
      "id": 77963837,
      "node_id": "MDQ6VXNlcjc3OTYzODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/77963837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FeurJak",
      "html_url": "https://github.com/FeurJak",
      "followers_url": "https://api.github.com/users/FeurJak/followers",
      "following_url": "https://api.github.com/users/FeurJak/following{/other_user}",
      "gists_url": "https://api.github.com/users/FeurJak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FeurJak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FeurJak/subscriptions",
      "organizations_url": "https://api.github.com/users/FeurJak/orgs",
      "repos_url": "https://api.github.com/users/FeurJak/repos",
      "events_url": "https://api.github.com/users/FeurJak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FeurJak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T23:12:13Z",
    "updated_at": "2022-05-05T23:12:13Z",
    "author_association": "NONE",
    "body": "Yes that's correct, eth_getStorageAt reads from the latest state (cached or fetched from disk), not EVM.  But it needs to fetch the latest block state first and I believe this process is halted when the node is syncing a new state.  Maybe this is why you have 1k ms randomly. \r\n\r\nWithout modifying GETH you won't get any better speed really. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119129295/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119450431",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119450431",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119450431,
    "node_id": "IC_kwDOAOvK985CuXU_",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T09:57:35Z",
    "updated_at": "2022-05-06T09:57:35Z",
    "author_association": "MEMBER",
    "body": "> with graphql its 1k to 2k ms.\r\n\r\nI'm surprised its slower by so much. Which query is that, [this one](https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1041569809)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119450431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119637911",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1119637911",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1119637911,
    "node_id": "IC_kwDOAOvK985CvFGX",
    "user": {
      "login": "berktaylan",
      "id": 40706650,
      "node_id": "MDQ6VXNlcjQwNzA2NjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40706650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berktaylan",
      "html_url": "https://github.com/berktaylan",
      "followers_url": "https://api.github.com/users/berktaylan/followers",
      "following_url": "https://api.github.com/users/berktaylan/following{/other_user}",
      "gists_url": "https://api.github.com/users/berktaylan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berktaylan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berktaylan/subscriptions",
      "organizations_url": "https://api.github.com/users/berktaylan/orgs",
      "repos_url": "https://api.github.com/users/berktaylan/repos",
      "events_url": "https://api.github.com/users/berktaylan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berktaylan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T13:42:55Z",
    "updated_at": "2022-05-06T17:19:36Z",
    "author_association": "NONE",
    "body": "> > with graphql its 1k to 2k ms.\r\n> \r\n> I'm surprised its slower by so much. Which query is that, [this one](https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1041569809)?\r\n\r\nYes like this, i think same \r\n```\r\n  for (let i = 0; i < lpv.length; i++) {\r\n        reqs.push(`account${i}: account(address: \"0x${lpv[i]}\") { \r\n            slot0: storage (slot: \"0x0000000000000000000000000000000000000000000000000000000000000008\")\r\n         }`)\r\n\r\nconst query = gql`query slots { block { ${reqs.join(',\\n')} } }`;\r\n\r\n   timex = performance.now();\r\nrequest('http://127.0.0.1:8545/graphql', query, { number: 'latest' })\r\n    .then((res) => { console.log(performance.now()-timex) })\r\n    .catch((err) => { console.log(err) })\r\n }\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119637911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1296857568",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1296857568",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1296857568,
    "node_id": "IC_kwDOAOvK985NTHng",
    "user": {
      "login": "tinoh99",
      "id": 97869487,
      "node_id": "U_kgDOBdVerw",
      "avatar_url": "https://avatars.githubusercontent.com/u/97869487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinoh99",
      "html_url": "https://github.com/tinoh99",
      "followers_url": "https://api.github.com/users/tinoh99/followers",
      "following_url": "https://api.github.com/users/tinoh99/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinoh99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinoh99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinoh99/subscriptions",
      "organizations_url": "https://api.github.com/users/tinoh99/orgs",
      "repos_url": "https://api.github.com/users/tinoh99/repos",
      "events_url": "https://api.github.com/users/tinoh99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinoh99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-31T10:00:27Z",
    "updated_at": "2022-10-31T10:00:27Z",
    "author_association": "NONE",
    "body": "> So it turns out one of the specified validation rules (`OverlappingFieldsCanBeMerged `) has quadratic complexity which causes my query to blow up. So I modified the query to minimize the number of selection fields. Now it looks like this:\r\n> \r\n> ```graphql\r\n> query slots {\r\n>   block {\r\n>     account0: account(address: \"0x...\") {\r\n>       slot0: storage (slot: \"0x...\"),\r\n>       slot1: storage (slot: \"0x...\")\r\n>     },\r\n>     account1: account(address: \"0x...\") {\r\n>       slot0: storage (slot: \"0x...\")\r\n>     }\r\n>   }\r\n> }\r\n> ```\r\n> \r\n> In the meanwhile I also prototyped a JSON-RPC batch request. You can find the implementation for both in the same [gist](https://gist.github.com/s1na/fee1ffad8b087373d1fd76afe7235569). Now to some results:\r\n> \r\n> ```\r\n> $ node index.js 14132672\r\n> Access-list has 245 accounts with 1896 storage slots\r\n> json-rpc requests took 656ms\r\n> 16 graphql request took 88ms\r\n> New graphql request took 39ms\r\n> Batch json-rpc req took 82ms\r\n> \r\n> $ node index.js 14132673\r\n> Access-list has 134 accounts with 1681 storage slots\r\n> json-rpc requests took 581ms\r\n> 11 graphql request took 76ms\r\n> New graphql request took 56ms\r\n> Batch json-rpc req took 52ms\r\n> \r\n> $ node index.js 14132679\r\n> Access-list has 163 accounts with 1160 storage slots\r\n> json-rpc requests took 436ms\r\n> 11 graphql request took 61ms\r\n> New graphql request took 22ms\r\n> Batch json-rpc req took 34ms\r\n> \r\n> $ node index.js 14132676\r\n> Access-list has 209 accounts with 1730 storage slots\r\n> json-rpc requests took 580ms\r\n> 15 graphql request took 104ms\r\n> New graphql request took 31ms\r\n> Batch json-rpc req took 50ms\r\n> \r\n> $ node index.js 14132681\r\n> Access-list has 156 accounts with 1253 storage slots\r\n> json-rpc requests took 452ms\r\n> 10 graphql request took 61ms\r\n> New graphql request took 65ms\r\n> Batch json-rpc req took 39ms\r\n> ```\r\n> \r\n> For anyone needing to fetch many storage slots I recommend first the new GraphQL query, and then the JSON-RPC batch request until there's an update from `graphql-go` upstream about this validation rule complexity.\r\n\r\nHi @s1na , I wonder how is the performance of JSON-RPC batch compares with the new GraphQL nowadays?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1296857568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1296862298",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23925#issuecomment-1296862298",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23925",
    "id": 1296862298,
    "node_id": "IC_kwDOAOvK985NTIxa",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-31T10:04:52Z",
    "updated_at": "2022-10-31T10:04:52Z",
    "author_association": "MEMBER",
    "body": "@tinoh99 I don't believe things have changed much since that benchmark. But the gist I posted contains the scripts I used. Feel free to compare them for yourself.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1296862298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
