{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22345",
  "id": 811579823,
  "node_id": "MDU6SXNzdWU4MTE1Nzk4MjM=",
  "number": 22345,
  "title": "error deploy contract in private network",
  "user": {
    "login": "Smartboxweb98",
    "id": 77210266,
    "node_id": "MDQ6VXNlcjc3MjEwMjY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/77210266?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Smartboxweb98",
    "html_url": "https://github.com/Smartboxweb98",
    "followers_url": "https://api.github.com/users/Smartboxweb98/followers",
    "following_url": "https://api.github.com/users/Smartboxweb98/following{/other_user}",
    "gists_url": "https://api.github.com/users/Smartboxweb98/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Smartboxweb98/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Smartboxweb98/subscriptions",
    "organizations_url": "https://api.github.com/users/Smartboxweb98/orgs",
    "repos_url": "https://api.github.com/users/Smartboxweb98/repos",
    "events_url": "https://api.github.com/users/Smartboxweb98/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Smartboxweb98/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-02-19T00:25:25Z",
  "updated_at": "2021-02-22T13:29:30Z",
  "closed_at": "2021-02-22T13:29:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am wrong when creating a mint on a private ethereum currency network\r\n\r\n**CONSOLE ERROR**\r\n\r\n\r\nC:\\Users\\Administrator\\mint>node mintDai.js 0x69bec421313d0431aa86xxxxxxxx1000\r\nweb3-shh package will be deprecated in version 1.3.5 and will no longer be supported.\r\nweb3-bzz package will be deprecated in version 1.3.5 and will no longer be supported.\r\nmyArgs:  [ '0x69bec421313dxxxxxxxxxxxxxxx', '1000' ]\r\nCurrent balance of the Dai contract creator: 0 eth\r\nSend token to dai creator\r\n100000000000000000000\r\nDAI_CREATOR\r\n0x9759a6ac90977b93b58547xxxxxxxxxxxxx\r\n(node:3996) UnhandledPromiseRejectionWarning: ReferenceError: ether is not defined\r\n    at sendEthToDaiContractOwner (C:\\Users\\Administrator\\mint\\mintDai.js:50:22)\r\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\r\n    at async mintDaiFromErc20Contract (C:\\Users\\Administrator\\mint\\mintDai.js:75:3)\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:3996) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\r\n(node:3996) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n\r\n\r\n\r\n**CODE PROJECT**\r\n\r\n\r\n```\r\n> \r\n> const fs   = require(\"fs\");\r\n> \r\n> const Web3 = require(\"web3\");\r\n> const web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\"));\r\n> \r\n> const config = require('./config.json');\r\n> \r\n> \r\n> const DAI_ADDRESS = config.daiContractAddress;\r\n> const DAI_CREATOR = config.daiCreator;\r\n> const DAI_ABI     = JSON.parse(fs.readFileSync(\"abi/daiAbi.js\"));\r\n> \r\n> const forceSendContract = JSON.parse(fs.readFileSync(\"contracts/ForceSend.json\"));\r\n> const FORCE_ABI     \t= forceSendContract[\"abi\"];\r\n> const FORCE_BYTECODE    = forceSendContract[\"bytecode\"];\r\n> \r\n> \r\n> async function sendEthToDaiContractOwner(){\r\n> \tlet accounts = await web3.eth.getAccounts();\r\n> \tlet rst = await web3.eth.getBalance(accounts[0]).then(receipt=> {console.log(receipt)});\r\n> \tvar forceContractAddr = \"0x123\";\r\n> \tconsole.log(\"DAI_CREATOR\");\r\n> \tconsole.log(DAI_CREATOR);\r\n> \r\n> \r\n> \t// Setup the Abi to deploy the contract\r\n> \tlet forceInterface = new web3.eth.Contract(FORCE_ABI);\r\n> \r\n> \t//Deploy the contract on our testnet\r\n> \tawait forceInterface.deploy({\r\n> \t\t\t\tdata: FORCE_BYTECODE, \r\n> \t\t\t})\r\n> \t\t\t.send({\r\n> \t\t\t\tfrom: accounts[0], \r\n> \t\t\t\tgasPrice: '1000', gas: 2310334\r\n> \t\t\t})\r\n> \t\t\t.then(receipt=> {\r\n> \t\t\t\t// Add the address to the contract (Todo improve this)\r\n> \t\t\t\tforceInterface = new web3.eth.Contract(FORCE_ABI, receipt._address);\r\n> \t\t\t\t\r\n> \t\t\t})\r\n> \t\t\t.catch((e) => {\r\n> \t\t\t\tconsole.log('forceInterface.deploy failed: ');\r\n> \t\t\t\tconsole.log(e)\r\n> \t\t\t});\r\n> \r\n> \t// Call the sucide contract to send fund to this address\r\n> \tawait forceInterface.methods.go(DAI_CREATOR).send({ from: accounts[0],\r\n> \t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: ether(\"1\")})\r\n> \t\t\t\t\t\t\t\t.catch((e) => {\r\n> \t\t\t\t\t\t\t\t\tconsole.log(\"forceInterface.methods.go failed: \");\r\n> \t\t\t\t\t\t\t\t\tconsole.log(e);\r\n> \t\t\t\t\t\t\t\t});\r\n> \r\n> \tawait web3.eth.getBalance(DAI_CREATOR).then(receipt=> {\r\n> \t\t\tconsole.log('Dai contract balance After funding: ' + web3.utils.fromWei(receipt, 'ether') + ' eth');\r\n> \t\t  })\r\n> \t\t  .catch((e) => {console.log(e)});\r\n> \r\n> }\r\n> \r\n> async function mintDaiFromErc20Contract(recipientAddress, amount) {\r\n> \r\n> \tlet daiCreator = 0;\r\n> \t// Check the value of the Dai contract Creator\r\n> \tawait web3.eth.getBalance(DAI_CREATOR)\r\n> \t\t\t\t\t\t\t.then(receipt=> {\r\n> \t\t\t\t\t\t\t\tconsole.log('Current balance of the Dai contract creator: ' + web3.utils.fromWei(receipt, 'ether') + ' eth');\r\n> \t\t\t\t\t\t\t\tdaiCreator = web3.utils.fromWei(receipt, 'ether');\r\n> \t\t\t\t\t\t\t})\r\n> \t\t\t\t\t\t\t.catch((e) => {console.log(e)});\r\n> \tif (parseFloat(daiCreator) < 0,1){\r\n> \t\tconsole.log(\"Send token to dai creator\");\r\n> \t\tawait sendEthToDaiContractOwner();\r\n> \t}\r\n> \r\n> \tvar daiInterface = new web3.eth.Contract(DAI_ABI, DAI_ADDRESS);\r\n>     \ttokens = await daiInterface.methods.balanceOf(recipientAddress).call()\r\n> \t\t\t.catch((e) => {console.log(e);});\r\n> \r\n> \t\tret = await daiInterface.methods.mint(recipientAddress, amount).send({\r\n> \t\t\tfrom: DAI_CREATOR,\r\n> \t\t\tgas: 6000000\r\n> \t\t}).then(receipt=> {\r\n> \t\t\tconsole.log(web3.utils.fromWei(amount, 'ether') + ' Dai succefully mint and sent to ' + recipientAddress);\r\n> \t\t}).catch((e) => {\r\n> \t\t\tconsole.log(e);\r\n> \t\t});\r\n> \r\n> \t\ttokens = await daiInterface.methods.balanceOf(recipientAddress).call()\r\n> \t\t\t.catch((e) => {console.log(e);});\r\n> \r\n>     if (web3.currentProvider.constructor.name == \"WebsocketProvider\")\r\n>         web3.currentProvider.connection.close();\r\n> }\r\n> \r\n> async function run(){\r\n> \r\n> \tvar args = process.argv.slice(2);\r\n> \tconsole.log('myArgs: ', args);\r\n> \r\n> \r\n> \tif (args.length !== 2){\r\n> \t\tconsole.log('To get Dai from the faucet you should write:  node mintDai.js YOUR_ADDRESS amount');\r\n> \t\treturn;\r\n> \t}\r\n> \tconst recipientAddress = args[0];\r\n> \tif (!web3.utils.isAddress(recipientAddress)){\r\n> \t\tconsole.log('Address Invalid !');\r\n> \t\treturn;\r\n> \t}\r\n> \r\n> \tconst amountParam = args[1];\r\n> \t// Change this later\r\n> \tif(amountParam === \"10\"){\r\n> \t\tamount = \"10000000000000000000\";\r\n> \t} else if (amountParam === \"100\"){\r\n> \t\tamount = \"100000000000000000000\";\r\n> \t} else if (amountParam === \"1000\"){\r\n> \t\tamount = \"1000000000000000000000\";\r\n> \t} else{\r\n> \t\tconsole.log('The faucet can only send you 10/100/1000 dai');\r\n> \t\treturn\r\n> \t}\r\n> \tmintDaiFromErc20Contract(recipientAddress, amount);\r\n> };\r\n> \r\n> run()\r\n```\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "MariusVanDerWijden",
    "id": 16664698,
    "node_id": "MDQ6VXNlcjE2NjY0Njk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MariusVanDerWijden",
    "html_url": "https://github.com/MariusVanDerWijden",
    "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
    "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
    "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
    "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
    "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
    "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/783374431",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22345#issuecomment-783374431",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22345",
    "id": 783374431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzM3NDQzMQ==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-22T13:29:30Z",
    "updated_at": "2021-02-22T13:29:30Z",
    "author_association": "MEMBER",
    "body": "This is an error in your deployment code and not in go-ethereum.\r\nThe function `ether` in line 50 is not defined.\r\nYou can use `web3.utils.toWei(number , ether)` to convert the number to ether ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/783374431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
