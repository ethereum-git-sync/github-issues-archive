{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17454",
  "id": 352290530,
  "node_id": "MDU6SXNzdWUzNTIyOTA1MzA=",
  "number": 17454,
  "title": "Miner info is empty in block",
  "user": {
    "login": "APshenkin",
    "id": 14344430,
    "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/APshenkin",
    "html_url": "https://github.com/APshenkin",
    "followers_url": "https://api.github.com/users/APshenkin/followers",
    "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
    "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
    "organizations_url": "https://api.github.com/users/APshenkin/orgs",
    "repos_url": "https://api.github.com/users/APshenkin/repos",
    "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/APshenkin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-08-20T20:47:28Z",
  "updated_at": "2018-08-22T09:44:14Z",
  "closed_at": "2018-08-22T09:44:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi!\r\n\r\nTrying to get information about blocks. For this I use web3 methods. All information displays normaly expect miner address. Tested in rinkeby network\r\n\r\n#### System information\r\n\r\nGeth version: `1.8.13`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\nMiner address should be present in block information\r\n\r\n#### Actual behaviour\r\nMiner address in null `0x0000000000000000000000000000000000000000`\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Run geth `geth --rpc --rpcaddr 0.0.0.0 --rpcvhosts * --rinkeby --syncmode \"fast\"`\r\n2. Try to get information about any block, e.g.\r\n```\r\neth.getBlock(2848394)\r\n\r\n{\r\n  difficulty: 1,\r\n  extraData: \"0xd68301080d846765746886676f312e3130856c696e7578000000000000000000773ab2ca8f47904a14739ad80a75b71d9d29b9fff8b7ecdcb73efffa6f74122f17d304b5dc8e6e5f256c9474dd115c8d4dae31b7a3d409e5c3270f8fde41cd8c00\",\r\n  gasLimit: 7753377,\r\n  gasUsed: 1810195,\r\n  hash: \"0x7004c895e812c55b0c2be8a46d72ca300a683dc27d1d7917ee7742d4d0359c1f\",\r\n  logsBloom: \"0xr\n  miner: \"0x0000000000000000000000000000000000000000\",\r\n  mixHash: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n  nonce: \"0x0000000000000000\",\r\n  number: 2848394,\r\n  parentHash: \"0x20350fc367e19d3865be1ea7da72ab81f8f9941c43ac6bb24a34a0a7caa2f3df\",\r\n  receiptsRoot: \"0x6ade4ac1079ea50cfadcce2b75ffbe4f9b14bf69b4607bbf1739463076ca6246\",\r\n  sha3Uncles: \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n  size: 6437,\r\n  stateRoot: \"0x23f63347851bcd109059d007d71e19c4f5e73b7f0862bebcd04458333a004d92\",\r\n  timestamp: 1534796040,\r\n  totalDifficulty: 5353647,\r\n  transactions: [\"0x7e3bb851fc74a436826d2af6b96e4db9484431811ef0d9c9e78370488d33d4e5\", \"0x3976fd1e3d2a715c3cfcfde9bd3210798c26c017b8edb841d319227ecb3322fb\", \"0xd8db124005bb8b6fda7b71fd56ac782552a66af58fe843ba3c4930423b87d1d2\", \"0x10c1a1ca4d9f4b2bd5b89f7bbcbbc2d69e166fe23662b8db4f6beae0f50ac9fd\", \"0xaa58a6545677c796a56b8bc874174c8cfd31a6c6e6ca3a87e086d4f66d52858a\"],\r\n  transactionsRoot: \"0xde8d25c0b9b54310128a21601331094b43f910f9f96102869c2e2dca94884bf4\",\r\n  uncles: []\r\n}\r\n```\r\n\r\nAlso found that in \"light\" mode the same issue appears. Also in \"light\" mode `getTransaction` return null instead transaction info.\r\n\r\nSo, is Miner address is availible only in \"full\" sync mode?\r\n\r\nKind regards\r\n",
  "closed_by": {
    "login": "APshenkin",
    "id": 14344430,
    "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/APshenkin",
    "html_url": "https://github.com/APshenkin",
    "followers_url": "https://api.github.com/users/APshenkin/followers",
    "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
    "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
    "organizations_url": "https://api.github.com/users/APshenkin/orgs",
    "repos_url": "https://api.github.com/users/APshenkin/repos",
    "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/APshenkin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414556131",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414556131",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414556131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDU1NjEzMQ==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T05:42:00Z",
    "updated_at": "2018-08-21T05:44:06Z",
    "author_association": "MEMBER",
    "body": "@APshenkin The miner field in clique algorithm has a different meaning. \r\n\r\nBasically, the miner (coinbase) field is used to indicate a target address for `new signer proposal` or `delete signer proposal`. \r\n\r\nThe signer signature has been included in the `extraData` field so that signer address can be recovered. \r\n\r\nFor more detail, please take a look at this [proposal](https://github.com/ethereum/EIPs/issues/225)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414556131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414563738",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414563738",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414563738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDU2MzczOA==",
    "user": {
      "login": "APshenkin",
      "id": 14344430,
      "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/APshenkin",
      "html_url": "https://github.com/APshenkin",
      "followers_url": "https://api.github.com/users/APshenkin/followers",
      "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
      "organizations_url": "https://api.github.com/users/APshenkin/orgs",
      "repos_url": "https://api.github.com/users/APshenkin/repos",
      "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/APshenkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T06:26:42Z",
    "updated_at": "2018-08-21T06:26:42Z",
    "author_association": "NONE",
    "body": "@rjl493456442 Thank you for clarifation. But still no luck to get info about signer address. I can't find any example how to do this.Is there a code snippet, how to get info about address from extraData?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414563738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414575490",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414575490",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414575490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDU3NTQ5MA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T07:20:35Z",
    "updated_at": "2018-08-21T07:20:35Z",
    "author_association": "MEMBER",
    "body": "Here is a code snippet copied from the clique consensus package. I think it should be similar for you to recover the signer address.\r\n\r\n```\r\n// ecrecover extracts the Ethereum account address from a signed header.\r\nfunc ecrecover(header *types.Header, sigcache *lru.ARCCache) (common.Address, error) {\r\n\t// If the signature's already cached, return that\r\n\thash := header.Hash()\r\n\tif address, known := sigcache.Get(hash); known {\r\n\t\treturn address.(common.Address), nil\r\n\t}\r\n\t// Retrieve the signature from the header extra-data\r\n\tif len(header.Extra) < extraSeal {\r\n\t\treturn common.Address{}, errMissingSignature\r\n\t}\r\n\tsignature := header.Extra[len(header.Extra)-extraSeal:]\r\n\r\n\t// Recover the public key and the Ethereum address\r\n\tpubkey, err := crypto.Ecrecover(sigHash(header).Bytes(), signature)\r\n\tif err != nil {\r\n\t\treturn common.Address{}, err\r\n\t}\r\n\tvar signer common.Address\r\n\tcopy(signer[:], crypto.Keccak256(pubkey[1:])[12:])\r\n\r\n\tsigcache.Add(hash, signer)\r\n\treturn signer, nil\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414575490/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414647675",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414647675",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414647675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDY0NzY3NQ==",
    "user": {
      "login": "APshenkin",
      "id": 14344430,
      "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/APshenkin",
      "html_url": "https://github.com/APshenkin",
      "followers_url": "https://api.github.com/users/APshenkin/followers",
      "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
      "organizations_url": "https://api.github.com/users/APshenkin/orgs",
      "repos_url": "https://api.github.com/users/APshenkin/repos",
      "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/APshenkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T11:52:27Z",
    "updated_at": "2018-08-21T11:52:54Z",
    "author_association": "NONE",
    "body": "@rjl493456442 Thanks a lot.\r\n\r\nTrying to reformat it in JS, but no luck\r\n\r\n```\r\nconst Web3 = require('web3')\r\n\r\nconst utils = require('ethereumjs-util')\r\nconst BlockHeader = require('ethereumjs-block/header')\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider('.....'))\r\n\r\n\r\nconst block = web3.eth.getBlock(2848394)\r\n\r\nconst hashBuff = Buffer.from(block.hash.replace('0x', ''), 'hex')\r\nconst dataBuff = Buffer.from(block.extraData.replace('0x', ''), 'hex')\r\n\r\nconst sig = dataBuff.slice(dataBuff.length - 65)\r\nconst signature = {\r\n  r: sig.slice(0, 32),\r\n  s: sig.slice(32, 64),\r\n  v: 27\r\n}\r\n\r\nconst pub = utils.ecrecover(hashBuff, signature.v, signature.r, signature.s)\r\n\r\nconst address = utils.pubToAddress(pub).toString('hex')\r\n\r\nconst checksumAddress = utils.toChecksumAddress(address);\r\n\r\nconst finalizeAddress = utils.addHexPrefix(checksumAddress);\r\n```\r\n\r\nBut address don't match with address on rinkeby.etherscan.io\r\n\r\nexpected `0xfc18cbc391de84dbd87db83b20935d3e89f5dd91`, actual `0x4b3fFff4829cD0c7bE57DE4CFdc7311d27d05166`\r\n\r\nSo several questions more:\r\n1. Can I use Block hash from eth_getBlock, or I should compute it like here https://github.com/ethereum/go-ethereum/blob/master/consensus/clique/clique.go#L145\r\n2. I tried to create a block header hash like this:\r\n```\r\nconst BlockHeader = require('ethereumjs-block/header')\r\n\r\nconst blockHeader = new BlockHeader({\r\n  parentHash: Buffer.from(block.parentHash.replace('0x', ''), 'hex'),\r\n  uncleHash: Buffer.from(block.sha3Uncles.replace('0x', ''), 'hex'),\r\n  coinbase: Buffer.from(block.miner.replace('0x', ''), 'hex'),\r\n  stateRoot: Buffer.from(block.stateRoot.replace('0x', ''), 'hex'),\r\n  transactionTrie: Buffer.from(block.transactionsRoot.replace('0x', ''), 'hex'),\r\n  receiptTrie: Buffer.from(block.receiptsRoot.replace('0x', ''), 'hex'),\r\n  bloom: Buffer.from(block.logsBloom.replace('0x', ''), 'hex'),\r\n  difficulty: Buffer.from(block.difficulty.toString(16)),\r\n  number: Buffer.from(block.number.toString()),\r\n  gasLimit: Buffer.from(block.gasLimit.toString()),\r\n  gasUsed: Buffer.from(block.gasUsed.toString()),\r\n  timestamp: Buffer.from(block.timestamp.toString()),\r\n  extraData: Buffer.from(block.extraData.replace('0x', ''), 'hex'),\r\n  mixHash: Buffer.from(block.mixHash.replace('0x', ''), 'hex'),\r\n  nonce: Buffer.from(block.nonce.replace('0x', ''), 'hex')\r\n})\r\n\r\nconst hash = blockHeader.hash()\r\n```\r\n\r\nBut this hash doesn't match etherscan hash and still no luck with address recover\r\nexpected `0xfc18cbc391de84dbd87db83b20935d3e89f5dd91`, actual `0xdA06559899639406677230722047F298C74Db8c2`. Maybe I do something wrong?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414647675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414683863",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414683863",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414683863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDY4Mzg2Mw==",
    "user": {
      "login": "APshenkin",
      "id": 14344430,
      "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/APshenkin",
      "html_url": "https://github.com/APshenkin",
      "followers_url": "https://api.github.com/users/APshenkin/followers",
      "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
      "organizations_url": "https://api.github.com/users/APshenkin/orgs",
      "repos_url": "https://api.github.com/users/APshenkin/repos",
      "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/APshenkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T13:59:19Z",
    "updated_at": "2018-08-22T08:50:33Z",
    "author_association": "NONE",
    "body": "Other try\r\n```\r\nconst Web3 = require('web3')\r\n\r\nconst utils = require('ethereumjs-util')\r\nconst BlockHeader = require('ethereumjs-block/header')\r\nconst web3 = new Web3(new Web3.providers.HttpProvider('......'))\r\n\r\n\r\nconst block = web3.eth.getBlock(2848394)\r\n\r\nconst hashBuff = Buffer.from(block.hash.replace('0x', ''), 'hex')\r\nconst dataBuff = Buffer.from(block.extraData.replace('0x', ''), 'hex')\r\n\r\nconst sig = dataBuff.slice(dataBuff.length - 65)\r\nconst signature = {\r\n  r: sig.slice(0, 32),\r\n  s: sig.slice(32, 64),\r\n  v: 27\r\n}\r\n\r\nconst sigHash = new BlockHeader({\r\n  parentHash: Buffer.from(block.parentHash.replace('0x', ''), 'hex'),\r\n  uncleHash: Buffer.from(block.sha3Uncles.replace('0x', ''), 'hex'),\r\n  coinbase: Buffer.from(block.miner.replace('0x', ''), 'hex'),\r\n  stateRoot: Buffer.from(block.stateRoot.replace('0x', ''), 'hex'),\r\n  transactionTrie: Buffer.from(block.transactionsRoot.replace('0x', ''), 'hex'),\r\n  receiptTrie: Buffer.from(block.receiptsRoot.replace('0x', ''), 'hex'),\r\n  bloom: Buffer.from(block.logsBloom.replace('0x', ''), 'hex'),\r\n  difficulty: utils.toBuffer(block.difficulty.toNumber()),\r\n  number: utils.toBuffer(block.number),\r\n  gasLimit: utils.toBuffer(block.gasLimit),\r\n  gasUsed: utils.toBuffer(block.gasUsed),\r\n  timestamp: utils.toBuffer(block.timestamp),\r\n  extraData: Buffer.from(block.extraData.replace('0x', ''), 'hex').slice(0, dataBuff.length - 65),\r\n  mixHash: Buffer.from(block.mixHash.replace('0x', ''), 'hex'),\r\n  nonce: Buffer.from(block.nonce.replace('0x', ''), 'hex')\r\n}, [4])\r\n\r\nconst pub = utils.ecrecover(sigHash.hash(), signature.v, signature.r, signature.s)\r\n\r\nconst address = utils.pubToAddress(pub).toString('hex')\r\n```\r\nstill no luck address is now `0x57aa03773cd7550e216b4f3f3c9dc928cd881558`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414683863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414903427",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414903427",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414903427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkwMzQyNw==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T04:04:26Z",
    "updated_at": "2018-08-22T04:04:26Z",
    "author_association": "MEMBER",
    "body": "Yes, we should use special rlphash function(the second one is correct). You code seems good to me, have no idea for the incorrect result.\r\n\r\nBtw, should `utils.ecrecover` returns an error if recover is failed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414903427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414975770",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17454#issuecomment-414975770",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17454",
    "id": 414975770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk3NTc3MA==",
    "user": {
      "login": "APshenkin",
      "id": 14344430,
      "node_id": "MDQ6VXNlcjE0MzQ0NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14344430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/APshenkin",
      "html_url": "https://github.com/APshenkin",
      "followers_url": "https://api.github.com/users/APshenkin/followers",
      "following_url": "https://api.github.com/users/APshenkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions",
      "organizations_url": "https://api.github.com/users/APshenkin/orgs",
      "repos_url": "https://api.github.com/users/APshenkin/repos",
      "events_url": "https://api.github.com/users/APshenkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/APshenkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T09:44:14Z",
    "updated_at": "2018-08-22T09:44:14Z",
    "author_association": "NONE",
    "body": "@rjl493456442 \r\nFinally found the mistake.\r\n`transactionTrie: Buffer.from(block.transactionsRoot.replace('0x', ''), 'hex'),`\r\nshould be transaction**s**Trie: Buffer.from(block.transactionsRoot.replace('0x', ''), 'hex'),\r\n\r\nSo final implemenation with some code cleaning:\r\n```\r\nconst Web3 = require('web3')\r\n\r\nconst utils = require('ethereumjs-util')\r\nconst BlockHeader = require('ethereumjs-block/header')\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider('...my node'))\r\n\r\n\r\nconst block = web3.eth.getBlock(2848394, true)\r\n\r\nconst dataBuff = utils.toBuffer(block.extraData)\r\nconst sig = utils.fromRpcSig(dataBuff.slice(dataBuff.length - 65, dataBuff.length))\r\n\r\nblock.extraData = '0x' + utils.toBuffer(block.extraData).slice(0, dataBuff.length - 65).toString('hex')\r\n\r\nconst headerHash = new BlockHeader({\r\n  parentHash: utils.toBuffer(block.parentHash),\r\n  uncleHash: utils.toBuffer(block.sha3Uncles),\r\n  coinbase: utils.toBuffer(block.miner),\r\n  stateRoot: utils.toBuffer(block.stateRoot),\r\n  transactionsTrie: utils.toBuffer(block.transactionsRoot),\r\n  receiptTrie: utils.toBuffer(block.receiptsRoot),\r\n  bloom: utils.toBuffer(block.logsBloom),\r\n  difficulty: utils.toBuffer(block.difficulty.toNumber()),\r\n  number: utils.toBuffer(block.number),\r\n  gasLimit: utils.toBuffer(block.gasLimit),\r\n  gasUsed: utils.toBuffer(block.gasUsed),\r\n  timestamp: utils.toBuffer(block.timestamp),\r\n  extraData: utils.toBuffer(block.extraData),\r\n  mixHash: utils.toBuffer(block.mixHash),\r\n  nonce: utils.toBuffer(block.nonce)\r\n})\r\n\r\nconst pub = utils.ecrecover(headerHash.hash(), sig.v, sig.r, sig.s)\r\n\r\nconst address = utils.addHexPrefix(utils.pubToAddress(pub).toString('hex'))\r\n\r\nconsole.log(headerHash.hash().toString('hex'))\r\nconsole.log(address) // returns expected result\r\n```\r\n\r\nThanks a lot for help!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/414975770/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
