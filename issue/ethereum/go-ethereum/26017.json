{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26017",
  "id": 1416796732,
  "node_id": "I_kwDOAOvK985Ucpo8",
  "number": 26017,
  "title": "cmd/faucet: can not start a faucet which tries to connect to a post merge private network node",
  "user": {
    "login": "DavidCai1111",
    "id": 5886475,
    "node_id": "MDQ6VXNlcjU4ODY0NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5886475?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidCai1111",
    "html_url": "https://github.com/DavidCai1111",
    "followers_url": "https://api.github.com/users/DavidCai1111/followers",
    "following_url": "https://api.github.com/users/DavidCai1111/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidCai1111/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidCai1111/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidCai1111/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidCai1111/orgs",
    "repos_url": "https://api.github.com/users/DavidCai1111/repos",
    "events_url": "https://api.github.com/users/DavidCai1111/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidCai1111/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-10-20T15:06:43Z",
  "updated_at": "2023-05-12T17:23:49Z",
  "closed_at": "2022-10-25T12:44:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "When I tried to start a faucet which tries to connect to a post merge private network node (`ttd` set to 0), I got the following errors:\r\n\r\n```\r\nINFO [10-20|23:02:24.374] Allocated cache and file handles         database=/home/xxx/.faucet/geth/lightchaindata cache=512.00MiB handles=16\r\nINFO [10-20|23:02:24.416] Allocated cache and file handles         database=/home/xxx/.faucet/geth/les.client cache=16.00MiB  handles=16\r\nINFO [10-20|23:02:24.433] Writing custom genesis block\r\nINFO [10-20|23:02:24.435] Persisted trie from memory database      nodes=74 size=8.84KiB time=\"112µs\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B\r\nINFO [10-20|23:02:24.437]\r\nINFO [10-20|23:02:24.437] ---------------------------------------------------------------------------------------------------------------------------------------------------------\r\nINFO [10-20|23:02:24.437] Chain ID:  31732 (unknown)\r\nINFO [10-20|23:02:24.437] Consensus: unknown\r\nINFO [10-20|23:02:24.437]\r\nINFO [10-20|23:02:24.437] Pre-Merge hard forks:\r\nINFO [10-20|23:02:24.437]  - Homestead:                   0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/homestead.md)\r\nINFO [10-20|23:02:24.437]  - Tangerine Whistle (EIP 150): 0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/tangerine-whistle.md)\r\nINFO [10-20|23:02:24.437]  - Spurious Dragon/1 (EIP 155): 0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md)\r\nINFO [10-20|23:02:24.437]  - Spurious Dragon/2 (EIP 158): 0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md)\r\nINFO [10-20|23:02:24.437]  - Byzantium:                   0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/byzantium.md)\r\nINFO [10-20|23:02:24.437]  - Constantinople:              0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/constantinople.md)\r\nINFO [10-20|23:02:24.437]  - Petersburg:                  0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/petersburg.md)\r\nINFO [10-20|23:02:24.437]  - Istanbul:                    0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/istanbul.md)\r\nINFO [10-20|23:02:24.437]  - Berlin:                      0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md)\r\nINFO [10-20|23:02:24.437]  - London:                      <nil> (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/london.md)\r\nINFO [10-20|23:02:24.437]\r\nINFO [10-20|23:02:24.437] Merge configured:\r\nINFO [10-20|23:02:24.437]  - Hard-fork specification:    https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/paris.md\r\nINFO [10-20|23:02:24.438]  - Network known to be merged: false\r\nINFO [10-20|23:02:24.438]  - Total terminal difficulty:  0\r\nINFO [10-20|23:02:24.438]  - Merge netsplit block:       <nil>\r\nINFO [10-20|23:02:24.438] ---------------------------------------------------------------------------------------------------------------------------------------------------------\r\nINFO [10-20|23:02:24.438]\r\nINFO [10-20|23:02:24.438] Loaded most recent local header          number=0 hash=c0c66b..5957e5 td=0 age=53y6mo3w\r\nINFO [10-20|23:02:24.438] Checkpoint oracle is not enabled\r\nINFO [10-20|23:02:24.438] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [10-20|23:02:24.439] Error reading unclean shutdown markers   error=\"leveldb: not found\"\r\nINFO [10-20|23:02:24.439] Starting peer-to-peer node               instance=Geth/v1.10.25-stable-df3ec74e/linux-amd64/go1.18\r\nINFO [10-20|23:02:24.457] New local node record                    seq=1,666,278,144,456 id=2c5db106b4e99441 ip=127.0.0.1 udp=30303 tcp=30303\r\nINFO [10-20|23:02:24.457] Started P2P networking                   self=enode://ff20000382f7d7393d09fc9f5629ef93e210308d31d6897e131f334d8414b17c3dd7837e3550ee074e48a225ae5f056883656887520c26c028a6aa34603bcbea@127.0.0.1:30303\r\nWARN [10-20|23:02:24.457] Light client mode is an experimental feature\r\nWARN [10-20|23:02:24.458] Served eth_subscribe                     reqid=1 duration=\"13.9µs\" err=\"no \\\"newHeads\\\" subscription in eth namespace\"\r\nCRIT [10-20|23:02:24.458] Failed to subscribe to head events       err=\"no \\\"newHeads\\\" subscription in eth namespace\"\r\n```\r\n\r\nIs this error related to https://github.com/ethereum/go-ethereum/pull/25889 ?\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290496532",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26017#issuecomment-1290496532",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017",
    "id": 1290496532,
    "node_id": "IC_kwDOAOvK985M62oU",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T12:44:20Z",
    "updated_at": "2022-10-25T12:44:20Z",
    "author_association": "MEMBER",
    "body": "The light client does not work post-merge, and the faucet is essentially a light-client. We're working on getting it working again. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290496532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290539244",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26017#issuecomment-1290539244",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017",
    "id": 1290539244,
    "node_id": "IC_kwDOAOvK985M7BDs",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T13:19:00Z",
    "updated_at": "2022-10-25T13:19:00Z",
    "author_association": "MEMBER",
    "body": "What you could do in the meantime to replace the light client with a fullnode (especially when your chain is light this might be a viable option)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290539244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1335182576",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26017#issuecomment-1335182576",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017",
    "id": 1335182576,
    "node_id": "IC_kwDOAOvK985PlUTw",
    "user": {
      "login": "gianlucamazza",
      "id": 25006045,
      "node_id": "MDQ6VXNlcjI1MDA2MDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25006045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gianlucamazza",
      "html_url": "https://github.com/gianlucamazza",
      "followers_url": "https://api.github.com/users/gianlucamazza/followers",
      "following_url": "https://api.github.com/users/gianlucamazza/following{/other_user}",
      "gists_url": "https://api.github.com/users/gianlucamazza/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gianlucamazza/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gianlucamazza/subscriptions",
      "organizations_url": "https://api.github.com/users/gianlucamazza/orgs",
      "repos_url": "https://api.github.com/users/gianlucamazza/repos",
      "events_url": "https://api.github.com/users/gianlucamazza/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gianlucamazza/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T12:50:26Z",
    "updated_at": "2022-12-02T12:50:26Z",
    "author_association": "NONE",
    "body": "> What you could do in the meantime to replace the light client with a fullnode (especially when your chain is light this might be a viable option)\r\n\r\nI am having the same problem, how did you fix it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1335182576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1528229271",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26017#issuecomment-1528229271",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26017",
    "id": 1528229271,
    "node_id": "IC_kwDOAOvK985bFu2X",
    "user": {
      "login": "ryanorendorff",
      "id": 12442942,
      "node_id": "MDQ6VXNlcjEyNDQyOTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12442942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanorendorff",
      "html_url": "https://github.com/ryanorendorff",
      "followers_url": "https://api.github.com/users/ryanorendorff/followers",
      "following_url": "https://api.github.com/users/ryanorendorff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanorendorff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanorendorff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanorendorff/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanorendorff/orgs",
      "repos_url": "https://api.github.com/users/ryanorendorff/repos",
      "events_url": "https://api.github.com/users/ryanorendorff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanorendorff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-28T23:48:10Z",
    "updated_at": "2023-05-12T17:23:49Z",
    "author_association": "NONE",
    "body": "@gianlucamazza This type of change to a full node works. There are a few changes in here but the change to a full node happens when defining `ethBackend`.\r\n\r\n```\r\ndiff --git a/cmd/faucet/faucet.go b/cmd/faucet/faucet.go\r\nindex 3dfd63914420..f77092114bb4 100644\r\n--- a/cmd/faucet/faucet.go\r\n+++ b/cmd/faucet/faucet.go\r\n@@ -45,12 +45,13 @@ import (\r\n \t\"github.com/ethereum/go-ethereum/common\"\r\n \t\"github.com/ethereum/go-ethereum/core\"\r\n \t\"github.com/ethereum/go-ethereum/core/types\"\r\n+\t\"github.com/ethereum/go-ethereum/eth\"\r\n \t\"github.com/ethereum/go-ethereum/eth/downloader\"\r\n \t\"github.com/ethereum/go-ethereum/eth/ethconfig\"\r\n \t\"github.com/ethereum/go-ethereum/ethclient\"\r\n \t\"github.com/ethereum/go-ethereum/ethstats\"\r\n+\r\n \t\"github.com/ethereum/go-ethereum/internal/version\"\r\n-\t\"github.com/ethereum/go-ethereum/les\"\r\n \t\"github.com/ethereum/go-ethereum/log\"\r\n \t\"github.com/ethereum/go-ethereum/node\"\r\n \t\"github.com/ethereum/go-ethereum/p2p\"\r\n@@ -68,10 +69,11 @@ var (\r\n \tnetFlag     = flag.Uint64(\"network\", 0, \"Network ID to use for the Ethereum protocol\")\r\n \tstatsFlag   = flag.String(\"ethstats\", \"\", \"Ethstats network monitoring auth string\")\r\n \r\n-\tnetnameFlag = flag.String(\"faucet.name\", \"\", \"Network name to assign to the faucet\")\r\n-\tpayoutFlag  = flag.Int(\"faucet.amount\", 1, \"Number of Ethers to pay out per user request\")\r\n-\tminutesFlag = flag.Int(\"faucet.minutes\", 1440, \"Number of minutes to wait between funding rounds\")\r\n-\ttiersFlag   = flag.Int(\"faucet.tiers\", 3, \"Number of funding tiers to enable (x3 time, x2.5 funds)\")\r\n+\tnetnameFlag     = flag.String(\"faucet.name\", \"\", \"Network name to assign to the faucet\")\r\n+\tpayoutFlag      = flag.Int(\"faucet.amount\", 1, \"Number of Ethers to pay out per user request\")\r\n+\tminutesFlag     = flag.Int(\"faucet.minutes\", 1440, \"Number of minutes to wait between funding rounds\")\r\n+\ttiersFlag       = flag.Int(\"faucet.tiers\", 3, \"Number of funding tiers to enable (x3 time, default x2.5 funds)\")\r\n+\ttiersMultiplier = flag.Float64(\"faucet.multiplier\", 2.5, \"Multiplier for the funding tiers\")\r\n \r\n \taccJSONFlag = flag.String(\"account.json\", \"\", \"Key json file to fund user requests with\")\r\n \taccPassFlag = flag.String(\"account.pass\", \"\", \"Decryption password to access faucet funds\")\r\n@@ -107,7 +109,7 @@ func main() {\r\n \tperiods := make([]string, *tiersFlag)\r\n \tfor i := 0; i < *tiersFlag; i++ {\r\n \t\t// Calculate the amount for the next tier and format it\r\n-\t\tamount := float64(*payoutFlag) * math.Pow(2.5, float64(i))\r\n+\t\tamount := float64(*payoutFlag) * math.Pow(*tiersMultiplier, float64(i))\r\n \t\tamounts[i] = fmt.Sprintf(\"%s Ethers\", strconv.FormatFloat(amount, 'f', -1, 64))\r\n \t\tif amount == 1 {\r\n \t\t\tamounts[i] = strings.TrimSuffix(amounts[i], \"s\")\r\n@@ -160,7 +162,7 @@ func main() {\r\n \t}\r\n \tpass := strings.TrimSuffix(string(blob), \"\\n\")\r\n \r\n-\tks := keystore.NewKeyStore(filepath.Join(os.Getenv(\"HOME\"), \".faucet\", \"keys\"), keystore.StandardScryptN, keystore.StandardScryptP)\r\n+\tks := keystore.NewKeyStore(filepath.Join(\"./faucet\", \"keys\"), keystore.StandardScryptN, keystore.StandardScryptP)\r\n \tif blob, err = os.ReadFile(*accJSONFlag); err != nil {\r\n \t\tlog.Crit(\"Failed to read account key contents\", \"file\", *accJSONFlag, \"err\", err)\r\n \t}\r\n@@ -226,7 +228,7 @@ func newFaucet(genesis *core.Genesis, port int, enodes []*enode.Node, network ui\r\n \tstack, err := node.New(&node.Config{\r\n \t\tName:    \"geth\",\r\n \t\tVersion: params.VersionWithCommit(git.Commit, git.Date),\r\n-\t\tDataDir: filepath.Join(os.Getenv(\"HOME\"), \".faucet\"),\r\n+\t\tDataDir: filepath.Join(\"faucet\"),\r\n \t\tP2P: p2p.Config{\r\n \t\t\tNAT:              nat.Any(),\r\n \t\t\tNoDiscovery:      true,\r\n@@ -242,22 +244,23 @@ func newFaucet(genesis *core.Genesis, port int, enodes []*enode.Node, network ui\r\n \r\n \t// Assemble the Ethereum light client protocol\r\n \tcfg := ethconfig.Defaults\r\n-\tcfg.SyncMode = downloader.LightSync\r\n+\tcfg.SyncMode = downloader.FullSync\r\n \tcfg.NetworkId = network\r\n \tcfg.Genesis = genesis\r\n \tutils.SetDNSDiscoveryDefaults(&cfg, genesis.ToBlock().Hash())\r\n \r\n-\tlesBackend, err := les.New(stack, &cfg)\r\n+\tethBackend, err := eth.New(stack, &cfg)\r\n \tif err != nil {\r\n-\t\treturn nil, fmt.Errorf(\"Failed to register the Ethereum service: %w\", err)\r\n+\t\treturn nil, fmt.Errorf(\"failed to register the Ethereum service: %w\", err)\r\n \t}\r\n \r\n \t// Assemble the ethstats monitoring and reporting service'\r\n \tif stats != \"\" {\r\n-\t\tif err := ethstats.New(stack, lesBackend.ApiBackend, lesBackend.Engine(), stats); err != nil {\r\n+\t\tif err := ethstats.New(stack, ethBackend.APIBackend, ethBackend.APIBackend.Engine(), stats); err != nil {\r\n \t\t\treturn nil, err\r\n \t\t}\r\n \t}\r\n+\r\n \t// Boot up the client and ensure it connects to bootnodes\r\n \tif err := stack.Start(); err != nil {\r\n \t\treturn nil, err\r\n@@ -268,13 +271,16 @@ func newFaucet(genesis *core.Genesis, port int, enodes []*enode.Node, network ui\r\n \t\t\tstack.Server().AddPeer(old)\r\n \t\t}\r\n \t}\r\n+\r\n+\t// Do not need this with a full client it seems.\r\n \t// Attach to the client and retrieve and interesting metadatas\r\n-\tapi, err := stack.Attach()\r\n-\tif err != nil {\r\n-\t\tstack.Close()\r\n-\t\treturn nil, err\r\n-\t}\r\n-\tclient := ethclient.NewClient(api)\r\n+\t// api, err := stack.Attach()\r\n+\t// if err != nil {\r\n+\t// \tstack.Close()\r\n+\t// \treturn nil, err\r\n+\t// }\r\n+\r\n+\tclient, _ := ethclient.Dial(\"ws://localhost:8145\")\r\n \r\n \treturn &faucet{\r\n \t\tconfig:   genesis.Config,\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1528229271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
