{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22143",
  "id": 781331420,
  "node_id": "MDU6SXNzdWU3ODEzMzE0MjA=",
  "number": 22143,
  "title": "Research transactional database support",
  "user": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1203263457,
      "node_id": "MDU6TGFiZWwxMjAzMjYzNDU3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:research",
      "name": "status:research",
      "color": "bff49c",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-01-07T13:56:18Z",
  "updated_at": "2021-04-21T10:40:29Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This issue is about exploring databases with a transactional API. Go-ethereum uses leveldb, which does not have a transactional API, and almost all database accesses are direct. This is a simple programming model, but does come with some downsides: if geth crashes in between writes, the database may be left in an inconsistent state. This is usually no problem because the writes are ordered in the correct way, but we have occasionally seen corruption issues that might be related to this.\r\n\r\nRestructuring the database accesses around a transactional API would also allow us to check out other embedded databases such as boltdb, badger or LMDB.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756133623",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22143#issuecomment-756133623",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
    "id": 756133623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjEzMzYyMw==",
    "user": {
      "login": "DGKSK8LIFE",
      "id": 45473363,
      "node_id": "MDQ6VXNlcjQ1NDczMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45473363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGKSK8LIFE",
      "html_url": "https://github.com/DGKSK8LIFE",
      "followers_url": "https://api.github.com/users/DGKSK8LIFE/followers",
      "following_url": "https://api.github.com/users/DGKSK8LIFE/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGKSK8LIFE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGKSK8LIFE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGKSK8LIFE/subscriptions",
      "organizations_url": "https://api.github.com/users/DGKSK8LIFE/orgs",
      "repos_url": "https://api.github.com/users/DGKSK8LIFE/repos",
      "events_url": "https://api.github.com/users/DGKSK8LIFE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGKSK8LIFE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T14:01:15Z",
    "updated_at": "2021-01-07T14:01:15Z",
    "author_association": "NONE",
    "body": "I know this is far out, but relational db support also interests me. Maybe we can take a look at MySQL?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756133623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756147006",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22143#issuecomment-756147006",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
    "id": 756147006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjE0NzAwNg==",
    "user": {
      "login": "harkal",
      "id": 5312224,
      "node_id": "MDQ6VXNlcjUzMTIyMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5312224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harkal",
      "html_url": "https://github.com/harkal",
      "followers_url": "https://api.github.com/users/harkal/followers",
      "following_url": "https://api.github.com/users/harkal/following{/other_user}",
      "gists_url": "https://api.github.com/users/harkal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harkal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harkal/subscriptions",
      "organizations_url": "https://api.github.com/users/harkal/orgs",
      "repos_url": "https://api.github.com/users/harkal/repos",
      "events_url": "https://api.github.com/users/harkal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harkal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T14:23:17Z",
    "updated_at": "2021-01-07T14:29:44Z",
    "author_association": "NONE",
    "body": "A good candidate to consider is probably [EbakusDB](https://github.com/harkal/ebakusdb). It's a very lightweight and performant DB that I implemented for Ebakus (which is based on go-ethereum code). From the readme file:\r\n\r\n_Each smart contract in ebakus has its own schema defined database (ESDD). This database can support any number of tables with typed fields and indexes. A smart contract is able to perform the following operations on the data:\r\n\r\nCreate/Drop tables Create/Drop indexes on specific fields Retrieve/update/delete single or multiple rows of data. Do ordered range queries on these data. The ebakus software makes sure that the data are stored in such a way in order to support the above operations in the most efficient way. The smart contract should not need to implement most common query types by itself.\r\n\r\nThe EbakusDB layer is providing to the ebakus blockchain a very fast database layer that supports O(1) time and space complexity snapshots. This is essential to the operation of a blockchain system that has requirements for querying old block states. The database achieves high performance by being aware of the transactional log functionality that the layer above it is using and not reimplementing it itself. Therefore achieving ACID compliance without sacrificing performance.\r\n\r\nSmart contracts deployed in Ethereum compatibility mode will not be able to make use of the ESDD, hence will not be able to benefit from the extra functionality and performance._\r\n\r\nThe introduction post I did at an early stage of the project: https://harkal.medium.com/ebakusdb-a-database-for-blockchain-systems-168339d5010c",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756147006/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756150661",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22143#issuecomment-756150661",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
    "id": 756150661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjE1MDY2MQ==",
    "user": {
      "login": "DGKSK8LIFE",
      "id": 45473363,
      "node_id": "MDQ6VXNlcjQ1NDczMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45473363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGKSK8LIFE",
      "html_url": "https://github.com/DGKSK8LIFE",
      "followers_url": "https://api.github.com/users/DGKSK8LIFE/followers",
      "following_url": "https://api.github.com/users/DGKSK8LIFE/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGKSK8LIFE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGKSK8LIFE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGKSK8LIFE/subscriptions",
      "organizations_url": "https://api.github.com/users/DGKSK8LIFE/orgs",
      "repos_url": "https://api.github.com/users/DGKSK8LIFE/repos",
      "events_url": "https://api.github.com/users/DGKSK8LIFE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGKSK8LIFE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T14:29:38Z",
    "updated_at": "2021-01-07T14:29:46Z",
    "author_association": "NONE",
    "body": "If you want a scalable key-value store, maybe etcd is a good option. Kubernetes is built off of it and it's purpose built for distributed systems. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756150661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761693467",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22143#issuecomment-761693467",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
    "id": 761693467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTY5MzQ2Nw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-16T22:58:39Z",
    "updated_at": "2021-01-16T22:58:39Z",
    "author_association": "MEMBER",
    "body": "related #15717",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761693467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/823962683",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22143#issuecomment-823962683",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22143",
    "id": 823962683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzk2MjY4Mw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-21T10:40:05Z",
    "updated_at": "2021-04-21T10:40:29Z",
    "author_association": "MEMBER",
    "body": "Every time we talk about this, @karalabe voices concerns regarding two things:\r\n\r\n- It's a lot of work to create the implementation, and the effort may be wasted because using transactional DB might not improve safety at all.\r\n- Using DB transactions may be less efficient.\r\n\r\nIt would be nice to narrow the scope of the initial prototype to something smaller than 'all DB operations in Geth'. The part of core where safety matters the most be the state committer (in https://github.com/ethereum/go-ethereum/blob/master/trie/database.go). We could try to create a prototype where DB transactions are only used in this part, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/823962683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
